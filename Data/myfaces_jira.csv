content,key
"Hello,

 

I have a sample JSF 2.3.3 application  that uses @ManagedProperty with a web socket observer class. This application throws a null pointer exception.  

In the createManagedProperty of the ManagedPropertyProducer class,  FacesContext.getCurrentInstance() returns null.

In the createManagedProperty method, if you catch the error and create a new facesContext via BeanProvider.getContextualReference, the example still won’t work. Is there any way around this error?

Or can anyone confirm that this example is not a valid use of ManagedProperty?  It doesn’t seem like it since the communication is going through web sockets and therefore isn’t hitting the Faces Servlet. 

 

Also, this application doesn't work with the mojarra 2.3 code either.

 

I’ve provided the sample application. 

Here is the stack trace:

java.lang.NullPointerException
     at org.apache.myfaces.cdi.managedproperty.ManagedPropertyProducer.createManagedProperty(ManagedPropertyProducer.java:83)
     at org.apache.myfaces.cdi.managedproperty.ManagedPropertyProducer.lambda$new$0(ManagedPropertyProducer.java:77)
     at org.apache.myfaces.cdi.util.AbstractDynamicProducer.create(AbstractDynamicProducer.java:97)
     at org.apache.webbeans.component.third.ThirdpartyBeanImpl.create(ThirdpartyBeanImpl.java:97)
     at org.apache.webbeans.context.DependentContext.getInstance(DependentContext.java:68)
     at org.apache.webbeans.context.AbstractContext.get(AbstractContext.java:125)
     at org.apache.webbeans.container.BeanManagerImpl.getReference(BeanManagerImpl.java:813)
     at org.apache.webbeans.container.BeanManagerImpl.getInjectableReference(BeanManagerImpl.java:673)

 

Thank you",MYFACES-4299
"This happens because `findComponent` is only diving into the component tree if it is not an instance of `NamingContainer`. From what I know the only exception is `UIForm` since it's the only one that has a the attribute `prependId`.

 

My solution would be to make the following change:
{code:java}
if (!(child instanceof NamingContainer) || 
  (child instanceof UIForm && !((UIForm) child).isPrependId()))
{
  ...
}
{code}
[https://github.com/apache/myfaces/blob/master/api/src/main/java/javax/faces/component/_ComponentUtils.java#L166-L173]

 

I'll create a Pull Request with these changes as soon as someone validates that this is really a bug and if anyone has any suggestions or requests like 'please don't forget to create a test on X and Y' or 'don't forget to also change version Z and W' I'll be more than happy to do it.

I had a bad experience on my previous contribution attempt but I still want to become and active contributor so if possible please tell me what are the next steps so I can have my contribution merged.",MYFACES-4298
"Hi.

It seems to be +no way+ to have stateless behavior in myfaces.
I'm using javax.faces.STATE_SAVING_METHOD = *client* in web.xml (... as also described in this post: [https://stackoverflow.com/questions/36650846/when-does-jsf-creates-a-session-what-does-it-puts-in-a-session-map|https://stackoverflow.com/questions/36650846/when-does-jsf-creates-a-session-what-does-it-puts-in-a-session-map)]) but myfaces always create a session to transfer the FacesContext encoding ( why ?)
I've noticed that it happens in *FaceletViewDeclarationLanguage* getResponseEncoding method.
I've already tested my code in mojarra (2.2 and 2.3) and it works fine (it don't creates any session if not +explicitly+ requested through a SessionScope or ViewScope Bean)
This is a big problem because any, simple, JSF (myfaces) page is virtually exposed to DOS or flooding attacks generating zombie sessions)
Does in myfaces exists a way (that I don't know) to manage stateless pages?

Thanks.

NC",MYFACES-4297
,MYFACES-4296
,MYFACES-4295
"After updating myfaces from 2.3.2 to 2.3.3 or 2.3.4, emoji characters are removed in partial updates of ajax calls. Reverting to the older build fixes the problem. Emojis are replaced by two spaces.",MYFACES-4294
"The method getAsObject correctly returns BigDecimal if the destination type of the value expression is BigDecimal, but returns Long if the destination type is BigInteger. This normally does not lead to problems because it will be converted when applying values, but results in an exception when there is a validation annotation for the attribute to be converted, because Long cannot be assigned to BigInteger.

I have created a pull request: https://github.com/apache/myfaces/pull/60",MYFACES-4293
"When deploying an application, the placement of the MANIFEST.MF file in a loose application xml can cause a java.lang.StringIndexOutOfBoundsException during MyFaces initialization. This problem occurs with the following path: /tmp/war/MANIFEST.MF 

This issue was solved in JSF 2.3 with MYFACES-4273, but not in JSF 2.2.

By moving the catch block to the outer try block in myfaces/view/facelets/util/Classpath.java, the StringIndexOutOfBoundsException will be caught, and the  faces initialization will continue normally.  

Stack Trace:

Caused by: java.lang.StringIndexOutOfBoundsException: String index out of range: 0
     at java.base/java.lang.String.substring(String.java:2628)
     at org.apache.myfaces.view.facelets.util.Classpath._searchFromURL(Classpath.java:246)
     at org.apache.myfaces.view.facelets.util.Classpath._searchResource(Classpath.java:119)
     at org.apache.myfaces.view.facelets.util.Classpath.search(Classpath.java:69)
     at org.apache.myfaces.config.DefaultFacesConfigResourceProvider.getMetaInfConfigurationResources(DefaultFacesConfigResourceProvider.java:90)
     at org.apache.myfaces.config.DefaultFacesConfigurationProvider.getClassloaderFacesConfig(DefaultFacesConfigurationProvider.java:312)
     … 21 more",MYFACES-4292
"There are 2 functions defined twice exacly in the same way in _Dom.js:
 * isFunctionNative
 * detectAttributes",MYFACES-4291
"I currently working on a prototype as quarkus module and MF startup itself takes ~4 seconds.
The reason is that parsing the faces-config with digester seems sometimes (very) slow.
I now replaced it with an DOM parser with similar pattern as digester and the starutp is now ~500ms.
It also removes a dependency and the new parser is even the same size (LOC) as the old...",MYFACES-4290
"Hello, 

I have an application that works with JSF 2.3.2, but doesn't work with JSF 2.3.3.  The RichFaces resources do not load.

I looked at the commits of what changed, and I've narrowed it down to this one: https://github.com/apache/myfaces/commit/cb75b5a6486c61c6bd3e3befc62cce58576f6be0 

This issue, from my understanding, is caused by incorrect mappings.  

After investigating, I noticed that getFacesServletRegistration returns a ServletRegistration that doesn't contain mappings to the resources. I believe this is because of the isFacesServlet check on line 53 of FacesServletMappingUtils.java (of the commit mentioned).   Prior to the commit, there was code to handle non-FacesServlet Mappings ( line 194-207 on  FacesServletMappingUtils.java ). 

I would appreciate any help into this.

Thank you.",MYFACES-4289
"Hi folks,

I have a tiny project which uses JSF 2.3, CDI and Tomcat 9.0.17.

I am trying to use <f:websocket> for the first time. I am using @Inject @Push in an application scoped bean.

I put an Observer to monitor the WebSocket events and I could realize that the socket is never being opened.

That is what I could realize when I access the page which contains the WebSocket tag:

EndpointImpl class - onOpen method:

config.getUserProperties().get(WebsocketConfigurator.WEBSOCKET_VALID) is always false.

WebsocketConfigurator class - modifyHandshake method:

websocketSessionBean is always being null, therefore WEBSOCKET_VALID is always being false.

I think it is important to mention that when I use javax.faces (from Glassfish) it works perfectly. However, I am working on a huge project which uses MyFaces, so I have to continue using it.

My dependencies in pom.xml are:
{code:java}
myfaces-api: 2.3.3
myfaces-impl: 2.3.3
tomcat-catalina: 9.0.17
weld-servlet-shaded: 3.1.0.Final
cdi-api: 2.0
primefaces: 7.0
javax.websocket-api: 1.1{code}
The maven project is attached.

*Reproduction steps:* Deploy it on a Tomcat 9.0.17, access [http://localhost:8080/poc/hello.xhtml|http://localhost:9090/poc/hello.xhtml] and click the button in the page.",MYFACES-4288
I've gotten this issue mixed up with another problem - this has been resolved in https://issues.apache.org/jira/browse/MYFACES-4267,MYFACES-4287
"The improvement 4099 introduced with version 2.3 leads to a NullPointerException in +TagAttributeImpl.java:550 [View File on Github|https://github.com/apache/myfaces/blob/myfaces-core-module-2.3.3/impl/src/main/java/org/apache/myfaces/view/facelets/tag/TagAttributeImpl.java#L550]+

 
{code:java}
Location ccLocation = (Location) actx.getFaceletCompositionContext().
getCompositeComponentFromStack().getAttributes().get(
CompositeComponentELUtils.LOCATION_KEY);{code}
getCompositeComponentFromStack()  returns null, because there is no stack.

The composite component is not calling any child components and used inside a ui:composition

 

Usage of composite component in test.xhtml (simplified)

 
{code:java}
<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Transitional//EN"" ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"">

<ui:composition xmlns=""http://www.w3.org/1999/xhtml""
xmlns:cw=""http://xmlns.jcp.org/jsf/composite/components""
xmlns:ui=""http://java.sun.com/jsf/facelets"">

<cw:attributeGroup
saveListener=""#{customerBean.updateAttributeContainer(cc.wrapper)}""
wrapper=""#{attributeGroup}"" />

</ui:composition>{code}
The problem is caused because of ""cc.wrapper"". This worked in 2.2 and now we can't update.

 

Error displayed on page (not helpful)

 
{code:java}
/test.xhtml at line 16 and column 37 saveListener=""#{customerBean.updateAttributeContainer(cc.wrapper)}"" null

viewId=/test.xhtml
location=C:\data\workspace-eclipse\.metadata\.plugins\org.eclipse.wst.server.core\tmp0\wtpwebapps\provDB-webapp\test.xhtml
phaseId=RENDER_RESPONSE(6)

Caused by:
java.lang.NullPointerException - /test.xhtml at line 16 and column 37 saveListener=""#{customerBean.updateAttributeContainer(cc.wrapper)}"" null
at org.apache.myfaces.view.facelets.tag.TagAttributeImpl.getValueExpression(TagAttributeImpl.java:550)
{code}
Stack Trace

 
{code:java}
javax.faces.view.facelets.TagAttributeException: /test.xhtml at line 16 and column 37 saveListener=""#{customerBean.updateAttributeContainer(cc.wrapper)}"" null
	at org.apache.myfaces.view.facelets.tag.TagAttributeImpl.getValueExpression(TagAttributeImpl.java:578)
	at org.apache.myfaces.view.facelets.tag.composite.CompositeComponentRule$ValueExpressionMetadata.applyMetadata(CompositeComponentRule.java:101)
	at org.apache.myfaces.view.facelets.tag.MetadataImpl.applyMetadata(MetadataImpl.java:45)
	at org.apache.myfaces.view.facelets.tag.composite.CompositeComponentResourceTagHandler.setAttributes(CompositeComponentResourceTagHandler.java:488)
	at org.apache.myfaces.view.facelets.tag.jsf.ComponentTagHandlerDelegate.apply(ComponentTagHandlerDelegate.java:290)
	at javax.faces.view.facelets.DelegatingMetaTagHandler.apply(DelegatingMetaTagHandler.java:51)
	at org.apache.myfaces.view.facelets.tag.ui.CompositionHandler.apply(CompositionHandler.java:160)
	at org.apache.myfaces.view.facelets.compiler.NamespaceHandler.apply(NamespaceHandler.java:59)
	at org.apache.myfaces.view.facelets.compiler.EncodingHandler.apply(EncodingHandler.java:48)
	at org.apache.myfaces.view.facelets.impl.DefaultFacelet.apply(DefaultFacelet.java:187)
	at org.apache.myfaces.view.facelets.FaceletViewDeclarationLanguage.buildView(FaceletViewDeclarationLanguage.java:483)
	at org.apache.myfaces.lifecycle.RenderResponseExecutor.execute(RenderResponseExecutor.java:79)
	at org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:266)
	at javax.faces.webapp.FacesServlet.service(FacesServlet.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at de.controlware.csc.core.tomcat.reverseproxy.ReverseProxySessionManager.doFilter(ReverseProxySessionManager.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:668)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException
	at org.apache.myfaces.view.facelets.tag.TagAttributeImpl.getValueExpression(TagAttributeImpl.java:550)
	... 52 more
{code}
 

 

 ",MYFACES-4286
"The improvement 4099 introduced with version 2.3 leads to a NullPointerException in +TagAttributeImpl.java:550 [View File on Github|https://github.com/apache/myfaces/blob/myfaces-core-module-2.3.3/impl/src/main/java/org/apache/myfaces/view/facelets/tag/TagAttributeImpl.java#L550]+

 
{code:java}
Location ccLocation = (Location) actx.getFaceletCompositionContext().
getCompositeComponentFromStack().getAttributes().get(
CompositeComponentELUtils.LOCATION_KEY);{code}
getCompositeComponentFromStack()  returns null, because there is no stack.

The composite component is not calling any child components and used inside a ui:composition

 

Usage of composite component in test.xhtml (simplified)

 
{code:java}
<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Transitional//EN"" ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"">

<ui:composition xmlns=""http://www.w3.org/1999/xhtml""
xmlns:cw=""http://xmlns.jcp.org/jsf/composite/components""
xmlns:ui=""http://java.sun.com/jsf/facelets"">

<cw:attributeGroup
saveListener=""#{customerBean.updateAttributeContainer(cc.wrapper)}""
wrapper=""#{attributeGroup}"" />

</ui:composition>{code}
The problem is caused because of ""cc.wrapper"". This worked in 2.2 and now we can't update.

 

Error displayed on page (not helpful)

 
{code:java}
/test.xhtml at line 16 and column 37 saveListener=""#{customerBean.updateAttributeContainer(cc.wrapper)}"" null

viewId=/test.xhtml
location=C:\data\workspace-eclipse\.metadata\.plugins\org.eclipse.wst.server.core\tmp0\wtpwebapps\provDB-webapp\test.xhtml
phaseId=RENDER_RESPONSE(6)

Caused by:
java.lang.NullPointerException - /test.xhtml at line 16 and column 37 saveListener=""#{customerBean.updateAttributeContainer(cc.wrapper)}"" null
at org.apache.myfaces.view.facelets.tag.TagAttributeImpl.getValueExpression(TagAttributeImpl.java:550)
{code}
Stack Trace

 
{code:java}
javax.faces.view.facelets.TagAttributeException: /test.xhtml at line 16 and column 37 saveListener=""#{customerBean.updateAttributeContainer(cc.wrapper)}"" null
	at org.apache.myfaces.view.facelets.tag.TagAttributeImpl.getValueExpression(TagAttributeImpl.java:578)
	at org.apache.myfaces.view.facelets.tag.composite.CompositeComponentRule$ValueExpressionMetadata.applyMetadata(CompositeComponentRule.java:101)
	at org.apache.myfaces.view.facelets.tag.MetadataImpl.applyMetadata(MetadataImpl.java:45)
	at org.apache.myfaces.view.facelets.tag.composite.CompositeComponentResourceTagHandler.setAttributes(CompositeComponentResourceTagHandler.java:488)
	at org.apache.myfaces.view.facelets.tag.jsf.ComponentTagHandlerDelegate.apply(ComponentTagHandlerDelegate.java:290)
	at javax.faces.view.facelets.DelegatingMetaTagHandler.apply(DelegatingMetaTagHandler.java:51)
	at org.apache.myfaces.view.facelets.tag.ui.CompositionHandler.apply(CompositionHandler.java:160)
	at org.apache.myfaces.view.facelets.compiler.NamespaceHandler.apply(NamespaceHandler.java:59)
	at org.apache.myfaces.view.facelets.compiler.EncodingHandler.apply(EncodingHandler.java:48)
	at org.apache.myfaces.view.facelets.impl.DefaultFacelet.apply(DefaultFacelet.java:187)
	at org.apache.myfaces.view.facelets.FaceletViewDeclarationLanguage.buildView(FaceletViewDeclarationLanguage.java:483)
	at org.apache.myfaces.lifecycle.RenderResponseExecutor.execute(RenderResponseExecutor.java:79)
	at org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:266)
	at javax.faces.webapp.FacesServlet.service(FacesServlet.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at de.my.core.tomcat.reverseproxy.ReverseProxySessionManager.doFilter(ReverseProxySessionManager.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:668)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException
	at org.apache.myfaces.view.facelets.tag.TagAttributeImpl.getValueExpression(TagAttributeImpl.java:550)
	... 52 more
{code}
 

 

 ",MYFACES-4285
"A ClassNotFoundException can occur during initialization when a servlet mapping is defined which cannot be loaded by MyFaces.  We should update WebXml.getFacesServletMappings() to not throw an exception when it can't load a class.

javax.faces.FacesException: java.lang.ClassNotFoundException: <classname>
     at org.apache.myfaces.shared.util.ClassUtils.simpleClassForName(ClassUtils.java:239)
     at org.apache.myfaces.shared.util.ClassUtils.simpleClassForName(ClassUtils.java:215)
     at org.apache.myfaces.shared_impl.webapp.webxml.WebXml.getFacesServletMappings(WebXml.java:136)
     at org.apache.myfaces.spi.impl.DefaultWebConfigProvider.getFacesServletMappings(DefaultWebConfigProvider.java:46)
     at org.apache.myfaces.webapp.AbstractFacesInitializer.initFaces(AbstractFacesInitializer.java:161)

This is related to the fix made in MYFACES-3629 

Any servlet defined in the web.xml that can't be loaded by at the time of JSF initialization will cause this problem.  As an example, this definition will cause MyFaces initialization to fail:
    _<servlet>_ 
        _<servlet-name>unloadable</servlet-name>_ 
        _<servlet-class>does.not.Exist</servlet-class>_ 
        _<load-on-startup>1</load-on-startup>_ 
    _</servlet>_",MYFACES-4284
"In case when invokeOnComponent is used and the form has prependId=true, we can early skip the whole component tree if the baseClientId != form clientId.
Will also check other components, UIData already contains this enhancement",MYFACES-4283
"Some change in 2.3.3 causes and incompatibility with Apache DeltaSpike's JSF Module. I am not sure yet what exactly causes it, but MyFaces 2.3.2 is NOT affected.

The issue arose on our side, as we noticed @PostConstruct of some of our @ViewScope @Model is called twice.

Mojarra 2.3.8 is NOT affected, which - together with the fact that MyFaces 2.3.2 is not affected either - brings me to the conclusion this is a bug introduced with MyFaces 2.3.3.

I have a minimal project showing the issue, which I will link here shortly.",MYFACES-4282
"see: [mailing list|http://mail-archives.apache.org/mod_mbox/myfaces-users/201901.mbox/%3C371d7273-62ee-0279-2866-5614d72b0460%40gmail.com%3E]

Using Tobago 4.3.0, I see the below error when I use the following xhtml 
page. I tried to make this page as small as possible to reproduce the error.
If I remove one of the <dt></dt><dd></dd> group the error is removed.
I work on windows 10 and both firefox or opera have the same behaviour.

Could you please advice or correct me ?

Regards

xhtml page:
---------------
<?xml version=""1.0"" encoding=""UTF-8""?>
<ui:composition xmlns:ui=""http://java.sun.com/jsf/facelets"" 
xmlns:xs=""http://www.w3.org/2001/XMLSchema"" 
xmlns:f=""http://java.sun.com/jsf/core"" xmlns=""http://www.w3.org/1999/xhtml""
  xmlns:tc=""http://myfaces.apache.org/tobago/component"" 
xmlns:xhtml=""http://www.w3.org/1999/xhtml""
 >
  <tc:page label=""test"" id=""page"">
   <dl>
    <dt>
     <math xmlns=""http://www.w3.org/1998/Math/MathML"" >
                   <mi>N</mi>
                </math>
    </dt>
    <dd>nombre</dd>
    <dt>
     <math xmlns=""http://www.w3.org/1998/Math/MathML"">
                   <mi>C</mi>
                </math>
    </dt>
    <dd>constante</dd>
    <dt>
     <math xmlns=""http://www.w3.org/1998/Math/MathML"">
                      <mi>σ</mi>
                </math>
    </dt>
    <dd>étendue</dd>
   </dl>
  </tc:page>
</ui:composition>

ERROR:
---------

janv. 25, 2019 5:50:57 PM 
org.apache.myfaces.tobago.internal.webapp.DebugResponseWriterWrapper 
endElement
GRAVE: Element end with name='HTML' doesn't match with top element on 
the stack='BODY'.
java.lang.IllegalArgumentException
     at 
org.apache.myfaces.tobago.internal.webapp.DebugResponseWriterWrapper.endElement(DebugResponseWriterWrapper.java:226)
     at 
org.apache.myfaces.tobago.internal.renderkit.renderer.PageRenderer.encodeEnd(PageRenderer.java:366)
     at 
javax.faces.component.UIComponentBase.encodeEnd(UIComponentBase.java:675)
     at 
javax.faces.component.UIComponentBase.encodeAll(UIComponentBase.java:555)
     at 
javax.faces.component.UIComponentBase.encodeAll(UIComponentBase.java:551)
     at 
org.apache.myfaces.view.facelets.FaceletViewDeclarationLanguage.renderView(FaceletViewDeclarationLanguage.java:1897)
     at 
org.apache.myfaces.application.ViewHandlerImpl.renderView(ViewHandlerImpl.java:315)
     at 
javax.faces.application.ViewHandlerWrapper.renderView(ViewHandlerWrapper.java:73)
     at 
org.apache.myfaces.lifecycle.RenderResponseExecutor.execute(RenderResponseExecutor.java:117)
     at 
org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:266)
     at javax.faces.webapp.FacesServlet.service(FacesServlet.java:206)
     at 
org.apache.tomee.myfaces.TomEEWorkaroundFacesServlet.service(TomEEWorkaroundFacesServlet.java:47)
     at 
org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
     at 
org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
     at 
org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
     at 
org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
     at 
org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
     at org.apache.openejb.server.httpd.EEFilter.doFilter(EEFilter.java:65)
     at 
org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
     at 
org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
     at 
org.apache.myfaces.tobago.facelets.FixCharacterEncodingFilter.doFilter(FixCharacterEncodingFilter.java:54)
     at 
org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
     at 
org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
     at 
org.apache.logging.log4j.web.Log4jServletFilter.doFilter(Log4jServletFilter.java:71)
     at 
org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
     at 
org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
     at 
org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
     at 
org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
     at org.apache.tomee.catalina.OpenEJBValve.invoke(OpenEJBValve.java:44)
     at 
org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:607)
     at 
org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
     at 
org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
     at 
org.apache.tomee.catalina.OpenEJBSecurityListener$RequestCapturer.invoke(OpenEJBSecurityListener.java:97)
     at 
org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
     at 
org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
     at 
org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
     at 
org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
     at 
org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:770)
     at 
org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
     at 
org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
     at 
java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
     at 
java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
     at 
org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
     at java.lang.Thread.run(Thread.java:748)

",MYFACES-4281
"simple CSP case:
 - add a static nonce via phaselistener/servlerfilter in the headers
 - add the the static nonce to a script tag

this works fine for a GET request or non-ajax POST but our ajax engine just ignores the nonce attribute on scripts and following error occurs in the browser:

Content Security Policy: Die Einstellungen der Seite haben das Laden einer Ressource auf inline blockiert (""script-src"").

There will probably other tickets in the future but thats the first basic case which must be supported.
 There are of course other problems like onclick handlers in the DOM or the eval node in the partial-response.


Similar to: https://github.com/jquery/jquery/issues/3541",MYFACES-4280
"h2. Expected Behaviour

Server side validation should be performed as well.
h2. Actual Behaviour

{{h:inputText maxlength}} is validated on client side only. However, client side validation may be bypassed easily.
h2. Steps to reproduce

I created a small github project to reproduce this behaviour: [https://github.com/cnsgithub/mojarra-ajax/tree/myfaces] (branch myfaces)
 To reproduce:
 - {{git clone [https://github.com/cnsgithub/mojarra-ajax]}}
 - {{git checkout myfaces}}
 - run {{mvn clean package jetty:run}}
 - after the server has started, open [http://localhost:8080/maxlength.xhtml|http://localhost:8080/index.xhtml]
 - Enter some characters and press the _Submit_ button. Everything is fine.
 - Press the _Hack_ button. 100 characters are written to the model.

This issue was first found in PrimeFaces, see [https://github.com/primefaces/primefaces/issues/4420]. Other components may be affected as well.

 ",MYFACES-4279
This speedups ApplicationImpl#getBundleName a bit and therefore the ResourceBundleResolver,MYFACES-4278
,MYFACES-4277
,MYFACES-4276
"See code comment:

 * TODO: PROFILE - Explore the possibility of using HashMap instead of sorted arrays. 
 *       The footprint should be higher, but the instanciation and access speed should be faster 
 *       Instanciation: from O(n log n) to O(1)
 *       Access: from O(log n) to O(1)",MYFACES-4275
"Currently, if SUPPORT_JSP_AND_FACES_EL is set to false, MyFaces can't initialize without setting org.apache.myfaces.EXPRESSION_FACTORY.

We can simply define a list of known ExpressionFactory implementations, so that the org.apache.myfaces.EXPRESSION_FACTORY is just optional.",MYFACES-4274
"JarFiles opened in ClassPath._searchResource() aren't ever closed.  This can cause a leak, and in some environments that causes problems removing apps after shutdown.",MYFACES-4273
,MYFACES-4272
,MYFACES-4271
"JSF2.3 allows a exact mapping now, which allows to map the FacesServlet for foo.xml to /foo.

This actually works fine but if a outcome in this view is resolved, it resolves to /foo/bar.xml which leads to a 404.
Instead we should resolve to foo.xhtml or even /faces/bar.xhtml",MYFACES-4270
"seems like servletContext#getServletRegistrations does internal always a new lookup instead of caching it (on tomcat 9.x)
 we can simple cache the FacesServletRegistration",MYFACES-4269
"If a dynamic dialog containing a form is oppened from a command with resetValues set to true, two POST requests are made returning the same information. It should be loaded only once.",MYFACES-4268
"After upgrading from Myfaces 2.2 to 2.3, templated transient views stop to work, raising ""unable to create views"" exceptions.
f:view transient attribute defined in a template seems not to be inherited by the final page correctly. With myfaces 2.2 it worked correctly, but in 2.3, there is a new check 
{code:java}
if (!view.isTransient()) ...
{code}
on FaceletViewDeclarationLanguage line 2128. On page restoring, transient appears as false.

A workaround is to set transient=""true"" on the final page too. Other option is to use a block 
{code:java}
<f:metadata><f:view transient=""true"" /></f:metadata>
{code}
on the final page (f:metadata doc says it shouldn't be used in templates).",MYFACES-4267
"I noticed that the {{<f:ajax />}} update fails when the updated form contains unicode characters, which are not allowed in the [XML 1.0 spec|https://www.w3.org/TR/REC-xml/#charsets].
h2. Expected Behaviour

If the update response contains characters that are not allowed in XML, they should be filtered by MyFaces before writing the response.
h2. Actual Behaviour

Some illegal XML characters are not filtered and therefore the browser fails to parse the response.
h2. Steps to reproduce

I created a small github project to reproduce this behaviour: [https://github.com/cnsgithub/mojarra-ajax/tree/myfaces] (branch myfaces)
 To reproduce:
 - {{git clone [https://github.com/cnsgithub/mojarra-ajax]}}
 - {{git checkout myfaces}}
 - run {{mvn clean package jetty:run}}
 - after the server has started, open [http://localhost:8080/index.xhtml]
 - Click the button, the error should occur

The issue also occurs with user supplied inputs:
 - open [http://localhost:8080/input.xhtml]
 - Paste the characters from the {{illegal-xml-chars.txt}} file into the input field
 - Click the button

This issue should be addressed with high priority since it is security related (might be exploited for Denial of Service).",MYFACES-4266
,MYFACES-4265
"the code was actually in shared, which is now directly in the myfaces-impl",MYFACES-4264
,MYFACES-4263
"After fixing MYFACES-4141 with [this commit|https://github.com/apache/myfaces/commit/731e40cdb4ce5d336192b705c070e3c0f8175305], where servlet-api dependency was set to tomcat-servlet-api:9.0.2, myfaces-bundle should use correct imports of OSGi packages.",MYFACES-4262
,MYFACES-4261
The context map that stores Contextual Instances in a CDI Context is not being cleared when destroying a CDI ViewScope bean.,MYFACES-4260
,MYFACES-4259
,MYFACES-4258
,MYFACES-4257
"javax.faces.DISABLE_FACELET_JSF_VIEWHANDLER

https://github.com/eclipse-ee4j/mojarra/commit/0dc4f7123ffe67b2f2086ec98306532c74a1a969",MYFACES-4256
,MYFACES-4255
"[https://github.com/eclipse-ee4j/mojarra/issues/4411
https://github.com/eclipse-ee4j/mojarra/pull/4453|https://github.com/eclipse-ee4j/mojarra/pull/4453]",MYFACES-4254
Menghapus issues spam app myfaces,MYFACES-4253
"In rare cases, Classpath._searchDir can throw a NPE and cause startup to fail.  I'll update _searchDir() to tolerate the case where File.listFiles() returns null.

DefaultFacesC I Reading config /WEB-INF/faces-config.xml

 AbstractFaces E An error occured while initializing MyFaces: java.lang.NullPointerException

 javax.faces.FacesException: java.lang.NullPointerException

....

Caused by: java.lang.NullPointerException

 at org.apache.myfaces.view.facelets.util.Classpath._searchDir(Classpath.java:143)

 at org.apache.myfaces.view.facelets.util.Classpath._searchResource(Classpath.java:115)

 at org.apache.myfaces.view.facelets.util.Classpath.search(Classpath.java:68)",MYFACES-4252
"Below you will find a list of differences between the MyFaces 2.3 and Mojarra 2.3 APIs. Also, attached you will find the full generated report with results.

 

There are some differences that might not make sense to change/update, but there are others that make sense, like missing throws or missing methods.

 

[https://javaee.github.io/javaee-spec/javadocs/javax/faces/application/Application.html#getResourceBundle-javax.faces.context.FacesContext-java.lang.String-]
 [https://javaee.github.io/javaee-spec/javadocs/javax/faces/application/ApplicationWrapper.html#getResourceBundle-javax.faces.context.FacesContext-java.lang.String-]
 - Javadocs says to throw FacesException and NullPointerException but the actual signature doesn't have the throws in the method

[https://javaee.github.io/javaee-spec/javadocs/javax/faces/application/ConfigurableNavigationHandlerWrapper.html]
 - Remove handleNavigation(javax.faces.context.FacesContext, java.lang.String, java.lang.String, java.lang.String) method
 - Note that the class already have public void handleNavigation(FacesContext context, String fromAction, String outcome)

[https://javaee.github.io/javaee-spec/javadocs/javax/faces/component/behavior/BehaviorBase.html#broadcast-javax.faces.event.BehaviorEvent-]
 - Missing throws AbortProcessingException

 

There are some differences in the classes from javax.faces.component.html.* package

 

[https://javaee.github.io/javaee-spec/javadocs/javax/faces/component/UIColumn.html]
 - Remove getId() method, this should be inherited from UIComponentBase

[https://javaee.github.io/javaee-spec/javadocs/javax/faces/component/UIComponentBase.html]
 - Remove encodeAll method, it should be inherited from UIComponent. But this method looks different from the one in UIComponent
 - Add getListenersForEventClass(), subscribeToEvent() and unsubscribeFromEvent() methods
 - Remove visitTree method, it should be inherited from UIComponent. But this method looks different from the one in UIComponent

[https://javaee.github.io/javaee-spec/javadocs/javax/faces/component/UIData.html]
 - Remove encodeEnd method, it should be inherited from UIComponentBase. But this method looks different from the one in UIComponentBase.
 - Remove getContainerClientId method, it should be inherited from UIComponent. But this method looks different from the one in UIComponent
 - Add getClientId() method.
 - Add setValueBinding() method, but this method is now deprecated and replaced by setValueExpression method

[https://javaee.github.io/javaee-spec/javadocs/javax/faces/component/UIGraphic.html]
 - Add getValueBinding and setValueBinding methods, but they are deprecated and replaced by getValueExpression and setValueExpression methods.

[https://javaee.github.io/javaee-spec/javadocs/javax/faces/component/UIImportConstants.html#setValueExpression-java.lang.String-javax.el.ValueExpression-]
 - Add setValueExpression() method.

[https://javaee.github.io/javaee-spec/javadocs/javax/faces/component/UIInput.html]
 - Remove broadcast() method, it should be inherited from UIComponentBase. But this method seems different from the one in UIComponentBase. Do we want to remove it?

[https://javaee.github.io/javaee-spec/javadocs/javax/faces/component/UINamingContainer.html]
 - Remove isRendered() method, it should be inherited from UIComponentBase

[https://javaee.github.io/javaee-spec/javadocs/javax/faces/component/UISelectBoolean.html]
 - Remove getValue() method, it should be inherited from UIInput

[https://javaee.github.io/javaee-spec/javadocs/javax/faces/component/UISelectItem.html]
 [https://javaee.github.io/javaee-spec/javadocs/javax/faces/component/UISelectItems.html]
 - Remove setRendered() method, it should be inherited from UIComponentBase
 - Remove getFacesContext() method. This should be inherited from UIComponentBase. Do we really want to do this? This file has not been modified since 2013

[https://javaee.github.io/javaee-spec/javadocs/javax/faces/component/UISelectMany.html]
 - getConvertedValue() method should be inherited from UIInput, but the implementation in UISelectMany class is a bit different. Do we want to remove it anyway?

[https://javaee.github.io/javaee-spec/javadocs/javax/faces/component/UIViewAction.html#isRendered--]
 [https://javaee.github.io/javaee-spec/javadocs/javax/faces/component/UIViewAction.html#setRendered-boolean-]
 - Add isRendered() and setRendered() methods

[https://javaee.github.io/javaee-spec/javadocs/javax/faces/component/UIViewParameter.html]
 - Add throws ConverterException to the getConvertedValue() method
 - Add/override getSubmittedValue() and setSubmittedValue() methods
 - Remove isRendered() method, it should be inherited from UIComponentBase
 - Remove getFacesContext() method. This should be inherited from UIComponentBase. Do we really want to do this? This file has not been modified since 2013

[https://javaee.github.io/javaee-spec/javadocs/javax/faces/component/UIViewRoot.html#processEvent-javax.faces.event.ComponentSystemEvent-]
 - Missing method public void processEvent(ComponentSystemEvent event) throws AbortProcessingException
 - Remove getAttributes, setId() and setRendered(), they should be inherited from UIComponentBase

[https://javaee.github.io/javaee-spec/javadocs/javax/faces/component/UIWebsocket.html#setValueExpression-java.lang.String-javax.el.ValueExpression-]
 - Missing setValueExpression method in UIWebsocket

[https://javaee.github.io/javaee-spec/javadocs/javax/faces/context/PartialResponseWriter.html]
 - Remove endCDATA(), getWrapped() and startCDATA() methods, they should be inherited from ResponseWriterWrapper

[https://javaee.github.io/javaee-spec/javadocs/javax/faces/convert/EnumConverter.html#getAsObject-javax.faces.context.FacesContext-javax.faces.component.UIComponent-java.lang.String-]
 [https://javaee.github.io/javaee-spec/javadocs/javax/faces/convert/EnumConverter.html#getAsString-javax.faces.context.FacesContext-javax.faces.component.UIComponent-java.lang.Object-]
 - Both should remove the throws ConverterException from the method signatrue

[https://javaee.github.io/javaee-spec/javadocs/javax/faces/event/SystemEventListener.html#processEvent-javax.faces.event.SystemEvent-]
 - Missing throws AbortProcessingException

[https://javaee.github.io/javaee-spec/javadocs/javax/faces/event/ComponentSystemEventListener.html#processEvent-javax.faces.event.ComponentSystemEvent-]
 - Missing throws AbortProcessingException

[https://javaee.github.io/javaee-spec/javadocs/javax/faces/event/PhaseEvent.html]
 - Remove equals() and hashCode() methods, but they shoudl be inherited from the Object class. But they seem to implement something different. Not sure if we want to remove these methods.

[https://javaee.github.io/javaee-spec/javadocs/javax/faces/validator/BeanValidator.html#validate-javax.faces.context.FacesContext-javax.faces.component.UIComponent-java.lang.Object-]
 - Remove the throws ValidatorException

[https://javaee.github.io/javaee-spec/javadocs/javax/faces/validator/RequiredValidator.html#validate-javax.faces.context.FacesContext-javax.faces.component.UIComponent-java.lang.Object-]
 - Remove the throws ValidatorException

[https://javaee.github.io/javaee-spec/javadocs/javax/faces/view/facelets/DelegatingMetaTagHandler.html#applyNextHandler-javax.faces.view.facelets.FaceletContext-javax.faces.component.UIComponent-]
 - The applyNextHandler method is missing throws FacesException and ELException

[https://javaee.github.io/javaee-spec/javadocs/javax/faces/view/facelets/Facelet.html#apply-javax.faces.context.FacesContext-javax.faces.component.UIComponent-]
 - The apply method needs to remove throws FaceletException, FacesException and ELException

[https://javaee.github.io/javaee-spec/javadocs/javax/faces/view/facelets/FaceletContext.html]
 - Remove throws FaceletException, FacesException, ELException from both includeFacelet() methods.

[https://javaee.github.io/javaee-spec/javadocs/javax/faces/webapp/AttributeTag.html]
 - Add doEndTag() method, but this method is deprecated now.

[https://javaee.github.io/javaee-spec/javadocs/javax/faces/webapp/UIComponentELTag.html#getELContext--]
 - Missing method protected ELContext getELContext()

 ",MYFACES-4251
"I've recently been investigating a problem with our product, whereby the first time a JSF-based screen loads, it fails with the following error in the logs:

 

{{Caused By: java.lang.NullPointerException}}
{{     at org.apache.myfaces.view.facelets.el.FaceletStateValueExpression.getWrapped(FaceletStateValueExpression.java:86)}}
{{     at org.apache.myfaces.view.facelets.el.FaceletStateValueExpression.getValue(FaceletStateValueExpression.java:118)}}
{{     at com.sun.el.parser.AstIdentifier.getValue(AstIdentifier.java:99)}}
{{     at com.sun.el.parser.AstValue.getValue(AstValue.java:179)}}
{{     at com.sun.el.parser.AstDeferredExpression.getValue(AstDeferredExpression.java:63)}}

 

After some effort debugging, I found that the immediate cause of the NPE is that on the first line of the getWrapped(ELContext) method, the FacesContext is obtained from the ELContext, rather than by calling FacesContext.getCurrentInstance. The FacesContext obtained this way is not the same FacesContext that's being used elsewhere in the stacktrace, and the UIViewRoot it supplies is likewise not the same one used elsewhere... this incorrect view root does not contain the facelet state instance, so the 'map' variable is null, causing the exception.

 

Digging further, I found that the source of the incorrect FacesContext and UIViewRoot is the FaceletsCompilerSupport class, and that my problem relates to the bug MYFACES-3830. The short version is that for the purpose of figuring out all the annotation driven components and renderers, FaceletsCompilerSupport creates a dummy FacesContext wrapping the real one (and view root), which it de-registers once it's done.

However, some of the code which uses that FacesContext asks for the ELContext, which causes an ELContext to be created - and the ELContext holds a reference to the FacesContext as at the time it was created, which is the unwanted one from FaceletsCompilerSupport.

 

I can ""fix"" the problem for my purposes by patching the LoadComponentTagDeclarationFacesContextWrapper to push the correct FacesContext into the ELContext during teardown (the restoreCurrentFacesContext method), but I'm not sure if that's a good production fix...",MYFACES-4250
"Currently we calll             c2 = (char) str.charAt(off+i); when (char) str.charAt(off+i) was previously stored in the write method to variable c so we can easily just do the following c2=c and save some string manipulation.
",MYFACES-4249
"OpenWebBeansELResolverComparator references org.apache.webbeans.el.WebBeansELResolver.

I think that the correct one is org.apache.webbeans.el22.WebBeansELResolver , at least since openwebbeans 1.7",MYFACES-4248
"Reduces the number of char[] objects that are created. As such, with this change, less garbage is created and as a result there are less garbage collections run.

In addition some minor updates to not call CommonPropertyUtils when it is not necessary to avoid redundant method calls that cause a looking in the attributes.",MYFACES-4247
"Example:
https://github.com/javaee-samples/javaee8-samples/blob/master/jsf/extensionless-mapping/src/main/java/org/javaee8/cdi/dynamic/bean/MappingInit.java",MYFACES-4246
"We have a project with jsf and wanted to upgrade our myfaces version from 2.2.6 to 2.2.12. On one of our pages we have a commandlink with ajax. Since version higher than 2.2.9 on Ajax response we got always the following error:

java.lang.Throwable: javax.faces.FacesException: Component with id:vflForm:laufrep:3:j_id_32_2nt:radioAntragArt not found
 at at.gv.brz.sta.elias.web.exceptionhandler.EliasExceptionHandler.handle(EliasExceptionHandler.java:64)
 at org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:287)
 at javax.faces.webapp.FacesServlet.service(FacesServlet.java:200)
 at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:303)
 at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)
 at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
 at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)
 at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)
 at at.gv.brz.sta.elias.web.filter.EliasRoleFilter.doFilter(EliasRoleFilter.java:72)
 at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
 at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
 at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)
 at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)
 at org.ocpsoft.rewrite.servlet.RewriteFilter.doFilter(RewriteFilter.java:205)
 at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)
 at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)
 at at.gv.brz.bjujq.common.webcommons.filter.ASecurityFilter.doFilter(ASecurityFilter.java:128)
 at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)
 at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)
 at at.gv.brz.sta.elias.web.filter.ExceptionHandlingFilter.doFilter(ExceptionHandlingFilter.java:50)
 at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)
 at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)
 at at.gv.brz.sta.elias.web.filter.EliasEncodingFilter.doFilter(EliasEncodingFilter.java:27)
 at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)
 at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)
 at at.gv.brz.sta.elias.web.filter.RequestPerSessionSynchronizationFilter.doFilter(RequestPerSessionSynchronizationFilter.java:44)
 at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)
 at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)
 at at.gv.brz.sta.elias.web.filter.PerfRequestLoggingFilter.doFilter(PerfRequestLoggingFilter.java:69)
 at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
 at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
 at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)
 at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)
 at at.gv.brz.sta.elias.web.filter.LogUserFilter.doFilter(LogUserFilter.java:43)
 at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)
 at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)
 at at.gv.brz.sta.elias.web.filter.AuthenticationFilter.doFilter(AuthenticationFilter.java:45)
 at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)
 at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)
 at at.gv.brz.sta.elias.web.filter.CacheControlFilter.doFilter(CacheControlFilter.java:40)
 at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)
 at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)
 at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:219)
 at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:110)
 at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:169)
 at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:103)
 at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:962)
 at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:116)
 at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:445)
 at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1115)
 at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:637)
 at org.apache.tomcat.util.net.AprEndpoint$SocketProcessor.doRun(AprEndpoint.java:2555)
 at org.apache.tomcat.util.net.AprEndpoint$SocketProcessor.run(AprEndpoint.java:2544)
 at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
 at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
 at java.lang.Thread.run(Thread.java:748)
Caused by: javax.faces.FacesException: Component with id:vflForm:laufrep:3:j_id_32_2nt:radioAntragArt not found
 at org.apache.myfaces.renderkit.html.HtmlAjaxBehaviorRenderer.getComponentId(HtmlAjaxBehaviorRenderer.java:505)
 at org.apache.myfaces.renderkit.html.HtmlAjaxBehaviorRenderer.build(HtmlAjaxBehaviorRenderer.java:467)
 at org.apache.myfaces.renderkit.html.HtmlAjaxBehaviorRenderer.mapToString(HtmlAjaxBehaviorRenderer.java:439)
 at org.apache.myfaces.renderkit.html.HtmlAjaxBehaviorRenderer.makeAjax(HtmlAjaxBehaviorRenderer.java:263)
 at org.apache.myfaces.renderkit.html.HtmlAjaxBehaviorRenderer.getScript(HtmlAjaxBehaviorRenderer.java:102)
 at javax.faces.component.behavior.ClientBehaviorBase.getScript(ClientBehaviorBase.java:101)
 at org.apache.myfaces.shared.renderkit.html.CommonEventUtils.renderBehaviorizedAttribute(CommonEventUtils.java:184)
 at org.apache.myfaces.shared.renderkit.html.CommonEventUtils.renderBehaviorizedAttribute(CommonEventUtils.java:120)
 at org.apache.myfaces.shared.renderkit.html.CommonEventUtils.renderBehaviorizedEventHandlers(CommonEventUtils.java:217)
 at org.apache.myfaces.shared.renderkit.html.HtmlRadioRendererBase.renderRadio(HtmlRadioRendererBase.java:378)
 at org.apache.myfaces.shared.renderkit.html.HtmlRadioRendererBase.renderGroupOrItemRadio(HtmlRadioRendererBase.java:267)
 at org.apache.myfaces.shared.renderkit.html.HtmlRadioRendererBase.encodeEnd(HtmlRadioRendererBase.java:126)
 at javax.faces.component.UIComponentBase.encodeEnd(UIComponentBase.java:675)
 at javax.faces.component.UIComponentBase.encodeAll(UIComponentBase.java:555)
 at org.apache.myfaces.shared.renderkit.RendererUtils.renderChildren(RendererUtils.java:688)
 at org.apache.myfaces.shared.renderkit.html.HtmlGroupRendererBase.encodeEnd(HtmlGroupRendererBase.java:150)
 at javax.faces.component.UIComponentBase.encodeEnd(UIComponentBase.java:675)
 at javax.faces.component.UIComponentBase.encodeAll(UIComponentBase.java:555)
 at org.apache.myfaces.shared.renderkit.RendererUtils.renderChildren(RendererUtils.java:688)
 at org.apache.myfaces.shared.renderkit.html.HtmlGroupRendererBase.encodeEnd(HtmlGroupRendererBase.java:150)
 at javax.faces.component.UIComponentBase.encodeEnd(UIComponentBase.java:675)
 at javax.faces.component.UIComponentBase.encodeAll(UIComponentBase.java:555)
 at javax.faces.component.UIComponentBase.encodeAll(UIComponentBase.java:551)
 at org.apache.myfaces.renderkit.html.HtmlCompositeFacetRenderer.encodeChildren(HtmlCompositeFacetRenderer.java:80)
 at javax.faces.component.UIComponentBase.encodeChildren(UIComponentBase.java:644)
 at javax.faces.component.UIComponentBase.encodeAll(UIComponentBase.java:542)
 at javax.faces.component.UIComponentBase.encodeAll(UIComponentBase.java:551)
 at org.apache.myfaces.renderkit.html.HtmlCompositeComponentRenderer.encodeChildren(HtmlCompositeComponentRenderer.java:66)
 at javax.faces.component.UIComponentBase.encodeChildren(UIComponentBase.java:644)
 at javax.faces.component.UIComponentBase.encodeAll(UIComponentBase.java:542)
 at javax.faces.component.UIComponentBase.encodeAll(UIComponentBase.java:551)
 at org.apache.myfaces.view.facelets.component.RepeatRenderer.encodeChildren(RepeatRenderer.java:78)
 at org.apache.myfaces.view.facelets.component.UIRepeat.process(UIRepeat.java:922)
 at org.apache.myfaces.view.facelets.component.UIRepeat.encodeChildren(UIRepeat.java:1667)
 at javax.faces.component.UIComponentBase.encodeAll(UIComponentBase.java:542)
 at javax.faces.component.UIComponentBase.encodeAll(UIComponentBase.java:551)
 at org.apache.myfaces.context.servlet.PartialViewContextImpl$PhaseAwareVisitCallback.processRenderComponent(PartialViewContextImpl.java:835)
 at org.apache.myfaces.context.servlet.PartialViewContextImpl$PhaseAwareVisitCallback.visit(PartialViewContextImpl.java:796)
 at org.apache.myfaces.component.visit.PartialVisitContext.invokeVisitCallback(PartialVisitContext.java:213)
 at javax.faces.component.UIForm.visitTree(UIForm.java:314)
 at javax.faces.component.UIComponent.visitTree(UIComponent.java:1047)
 at javax.faces.component.UIComponentBase.visitTree(UIComponentBase.java:1192)
 at javax.faces.component.UIComponent.visitTree(UIComponent.java:1047)
 at javax.faces.component.UIComponentBase.visitTree(UIComponentBase.java:1192)
 at javax.faces.component.UIComponent.visitTree(UIComponent.java:1047)
 at javax.faces.component.UIComponentBase.visitTree(UIComponentBase.java:1192)
 at javax.faces.component.UIComponent.visitTree(UIComponent.java:1047)
 at javax.faces.component.UIComponentBase.visitTree(UIComponentBase.java:1192)
 at javax.faces.component.UIComponent.visitTree(UIComponent.java:1047)
 at javax.faces.component.UIComponentBase.visitTree(UIComponentBase.java:1192)
 at org.apache.myfaces.context.servlet.PartialViewContextImpl.processPartialRendering(PartialViewContextImpl.java:539)
 at org.apache.myfaces.context.servlet.PartialViewContextImpl.processPartial(PartialViewContextImpl.java:415)
 at org.primefaces.context.PrimePartialViewContext.processPartial(PrimePartialViewContext.java:60)
 at javax.faces.context.PartialViewContextWrapper.processPartial(PartialViewContextWrapper.java:85)
 at javax.faces.component.UIViewRoot.encodeChildren(UIViewRoot.java:516)
 at javax.faces.component.UIComponentBase.encodeAll(UIComponentBase.java:542)
 at org.apache.myfaces.view.facelets.FaceletViewDeclarationLanguage.renderView(FaceletViewDeclarationLanguage.java:1891)
 at javax.faces.view.ViewDeclarationLanguageWrapper.renderView(ViewDeclarationLanguageWrapper.java:70)
 at at.gv.brz.sta.elias.web.jsf.factories.JsfPerformanceLogger.renderView(JsfPerformanceLogger.java:60)
 at org.apache.myfaces.application.ViewHandlerImpl.renderView(ViewHandlerImpl.java:313)
 at javax.faces.application.ViewHandlerWrapper.renderView(ViewHandlerWrapper.java:58)
 at org.apache.myfaces.lifecycle.RenderResponseExecutor.execute(RenderResponseExecutor.java:116)
 at org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:267)
 ... 55 more",MYFACES-4245
"Using StringBuilder.append performs better than calling Writer.write multiple times because the path length for a StringBuffer.append is less than the path length of a Writer.write operation.  By using StringBuilder, you only have to call the write method once instead of N number of times per method.  

The Shared StringBuilder may have some issues as well if there is any multi-threaded use of the Shared StringBuilder.  If multiple threads could use a particular StringBuilder you would end up getting incorrect output.  Another issue with the Shared StringBuilder for performance is it requires a call to get it which can be more expensive than just newing up a new StringBuilder.  

From looking at the myfaces code, the Shared StringBuilder is used only for special cases presently and not widely used.",MYFACES-4244
"@ResourceDependency and h:outputStyle/Script works fine, but this case not",MYFACES-4243
"It's used by Application#publishEvent, which should be used quite often

For me, it seems, that the whole logic with the copy and checking for changes is not used and useless?
Could someone else have a look at it?",MYFACES-4242
,MYFACES-4241
"I use the socket below.

_<f:websocket id=""usersocket"" connected=""false""_
 _onmessage=""userSocketListener""_
 _onopen=""userSocketOpened""_
 _onclose=""userSocketClosed""_
 _onerror=""alert('ERROR')""_
 _/>_

 

If I call  _jsf.push.open('usersocket')_  and __ _userSocketOpened()_ is called.

Then I call   _jsf.__push.close('usersocket')_ and  _userSocketClosed()_ is called.

Then I call   _jsf.push.open('usersocket')_  and  _userSocketOpened()_ is not called.

 

I looked into myfaces-api-2.3.1-sources.jar!\META-INF\internal-resources\org.apache.myfaces.core.api\jsf.js and found the _onopen_ eventhandler in line 283:

 

_socket.onopen = function(event) {_
 _{color:#d04437}if (reconnectAttempts == null) {color}{_
 _var clientIds = clientIdsByTokens[channelToken];_
 _for (var i = clientIds.length - 1; i >= 0; i--){_
 _var socketClientId = clientIds[i];_
 _components[socketClientId]['onopen'](channel);_
 _}_
 _}_
 _reconnectAttempts = 0;_
 _}_

When the socket is opened the first time reconnectAttempts is null, when the socket is opened the second time reconnectAttempts is 0, so the line should be

_if (reconnectAttempts == null || reconnectAttempts == 0)_ ",MYFACES-4240
"Some performance improvements in :

1) ApplicationImpl.java 

2) ServletExternalContextImpl.java

3) HtmlResponseWriterImpl.java

4) HTMLEncoder.java, we also discussed on the mailing list changing encodeURIAtributte to encodeUriAttribute to fix the typo in the method name so I'll do that here as well.

5) ResourceValidationUtils.java

The following changes were made:
-  Skip calling ConcurrentHashMap.containsKey since we will call get
afterward if containsKey == true.
- Stop using Boolean for variables that don't have a null meaning. If
null == false, then just use boolean with a default of false.
- Don't call String.length() constantly for String variables that aren't re-assigned.
- Change conditional order to avoid calling validateResourceName unless the other conditions are true",MYFACES-4239
"Single quotes can be used to enclose HTML attributes: 
{code:java}
<img src='userInput' />{code}
However only double quotes are encoded. 

As OWASP describes single quotes should also be encoded as '
 [https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet#RULE_.231_-_HTML_Escape_Before_Inserting_Untrusted_Data_into_HTML_Element_Content]

See the following example:
{code:java}
import org.apache.myfaces.shared.renderkit.html.util.*;
import java.io.IOException;
import java.io.StringWriter;

public class FaceTest {
  private static StringWriter userInput;

  public static void main(String[] args) throws IOException {
      userInput = new StringWriter(40);
      HTMLEncoder.encode(userInput, ""x' onerror='alert(1);'//"");
      System.out.println(""<img src='""+ userInput.toString() +""' />"");
  }

}{code}",MYFACES-4238
"In org/apache/myfaces/view/facelets/compiler/CheckDuplicateIdFaceletUtils.java we currently do the following:


{code:java}
if (existingIds.contains (id)) {
....
}
{code}

We can increase performance by doing the following:


{code:java}
if (!existingIds.add (id)) {
....
}
{code}

",MYFACES-4237
,MYFACES-4236
Using the cached BeanManager is a performance improvement.,MYFACES-4235
https://github.com/javaee/javaserverfaces-spec/issues/1257,MYFACES-4234
"On the JIRA issue below, there was an issue with the _UIWebsocket.getEventNames() method where the generic <String> in the return type of the method was missing in the auto-generated file UIWebsocket.
{code:java}
//BEGIN CODE COPIED FROM javax.faces.component._UIWebsocket 
public java.util.Collection getEventNames()
{code}
JIRA issue: https://issues.apache.org/jira/browse/MYFACES-4232

 

To workaround this, the api/src/main/resources/META-INF/componentClass20.vm file was modified to actually generate the getEventNames() method with the correct return type. 

 

But I think we should fix this in the myfaces-builder-plugin, and then revert back the changes in the componentClass20.vm and javax.faces.component._UIWebsocket files.

 

I'm not familiar with the myfaces-builder-plugin, so any help here would be appreciated.

 ",MYFACES-4233
"1) Currently, javax.faces.component.UIWebsocket is extending javax.faces.component.UIOutput. 

According to the JSF 2.3 API it needs to extend javax.faces.component.UIComponentBase

[https://javaee.github.io/javaee-spec/javadocs/javax/faces/component/UIWebsocket.html]

 

I tried to made this update but it also requires an update in the 

org.apache.myfaces.push.WebsocketComponentRenderer implementation as UIComponentBase does not have the getValue() and setValue() methods.

 

2) I also noticed that the following method in the auto-generated class javax.faces.component.UIWebsocket from javax.faces.component._UIWebsocket is missing the *<String>* in the return type.
{code:java}
//BEGIN CODE COPIED FROM javax.faces.component._UIWebsocket 
public java.util.Collection getEventNames()
{code}
But javax.faces.component._UIWebsocket does have the <String> in the return type as defined in the API:

[https://javaee.github.io/javaee-spec/javadocs/javax/faces/component/UIWebsocket.html#getEventNames--]

 

It seems that myfaces-builder-plugin is not working properly in this case.",MYFACES-4232
"Update signature methods according to the JSF 2.3 API

[https://javaee.github.io/javaee-spec/javadocs/javax/faces/component/search/SearchExpressionContextFactory.html]

[https://javaee.github.io/javaee-spec/javadocs/javax/faces/view/facelets/FaceletCache.html#setMemberFactories-javax.faces.view.facelets.FaceletCache.MemberFactory-javax.faces.view.facelets.FaceletCache.MemberFactory-]",MYFACES-4231
"In IE 11 we get an javascript error:

TypeError: Unable to get property 'indexOf' of undefined or null reference

 

This error arises on linenumber 7451 of jsf.js. The element is in IE undefined so the error is thrown. Can you please make the if statement so that there is a check if name is not undefined. In other browsers the name property is “” so the error doen’s occure.",MYFACES-4230
"After releasing MyFaces 2.3.1, I noticed a regression in cross form submit from Spec Issue 790: [https://github.com/javaee/javaserverfaces-spec/issues/790]

HTML sample code:
{code:java}
<h:form id=""a""> 
<h:outputText value=""This is 'form a' "" /> 
<h:outputLabel for=""input1"" value=""Enter a new value for input1: "" /> <h:inputText id=""input1"" value=""#{simpleBean.input}"" /> 
<h:commandButton id=""submitButton1"" value=""Click here to execute 'form a' and 'form b' but re-render 'form b'""> 
<f:ajax execute=""a :b"" render="":b"" /> 
</h:commandButton> 
</h:form> 
<h:form id=""b""> 
<h:outputText value=""This is 'form b' "" /> 
<h:outputLabel for=""input2"" value=""Enter a new value for input2: "" /> <h:inputText id=""input2"" value=""#{simpleBean.input}"" /> 
<h:commandLink id=""commandLink1"" value=""Click here to execute 'form a' and 'form b'  but re-render 'form a'""> 
<f:ajax execute=""b :a"" render="":a"" /> 
</h:commandLink> 
</h:form>
{code}
 

The issue is that on MyFaces 2.3.1 the hidden input javax.faces.ViewState is being removed from form ""b"" after we submit form ""a"" and viceversa. As a result, cross form submit is not working as expected, you either have to refresh the page before executing submit on the second form or you have to execute submit twice so the update is reflected in the other form.

Rendered page on MyFaces 2.3.0
{code:java}
<form id=""a"" name=""a"" method=""post"" action=""/JSF23Spec790/test1.xhtml"" enctype=""application/x-www-form-urlencoded""> This is 'form a' 
<label for=""a:input1""> Enter a new value for input1: </label> 
<input id=""a:input1"" name=""a:input1"" type=""text"" value=""test""/> 
<input id=""a:submitButton1"" name=""a:submitButton1"" type=""submit"" value=""Click here to execute 'form a' and 'form b' but re-render 'form b'"" onclick=""jsf.util.chain(this, event,'jsf.ajax.request(this,event,{execute:\'a b \',render:\'b \',\'javax.faces.behavior.event\':\'action\'})'); return false;""/> 
<input type=""hidden"" name=""a_SUBMIT"" value=""1""/> 
<input type=""hidden"" name=""javax.faces.ViewState"" id=""j_id__v_0:javax.faces.ViewState:1"" value=""RjhDMEFGQUMwNDI4NTUwRDAwMDAwMDAx"" autocomplete=""off""/> 
</form> 

<form id=""b"" name=""b"" method=""post"" action=""/JSF23Spec790/test1.xhtml"" enctype=""application/x-www-form-urlencoded""> This is 'form b' 
<label for=""b:input2""> Enter a new value for input2: </label> 
<input id=""b:input2"" name=""b:input2"" type=""text"" value=""test""/> 
<a href=""#"" onclick=""jsf.util.chain(this, event,'jsf.ajax.request(this,event,{execute:\'b a \',render:\'a \',\'javax.faces.behavior.event\':\'action\'})'); return false;"" id=""b:commandLink1"" name=""b:commandLink1""> Click here to execute 'form a' and 'form b' but re-render 'form a' </a> 
<input type=""hidden"" name=""b_SUBMIT"" value=""1""/> 
<input type=""hidden"" id=""javax.faces.ViewState:0"" name=""javax.faces.ViewState"" value=""RjhDMEFGQUMwNDI4NTUwRDAwMDAwMDAx""/> 
</form>
{code}
 

Rendered page on MyFaces 2.3.1
{code:java}
<form id=""a"" name=""a"" method=""post"" action=""/JSF23Spec790/test1.xhtml"" enctype=""application/x-www-form-urlencoded""> This is 'form a' 
<label for=""a:input1""> Enter a new value for input1: </label> 
<input id=""a:input1"" name=""a:input1"" type=""text"" value=""test""/> 
<input id=""a:submitButton1"" name=""a:submitButton1"" type=""submit"" value=""Click here to execute 'form a' and 'form b' but re-render 'form b'"" onclick=""jsf.util.chain(this, event,'jsf.ajax.request(this,event,{execute:\'a b \',render:\'b \',\'javax.faces.behavior.event\':\'action\'})'); return false;""/> 
<input type=""hidden"" name=""a_SUBMIT"" value=""1""/> 
<input type=""hidden"" name=""javax.faces.ViewState"" id=""j_id__v_0:javax.faces.ViewState:1"" value=""RjY3MjAyMTY3N0U2ODE3RDAwMDAwMDAx"" autocomplete=""off""/> 
</form> 
<form id=""b"" name=""b"" method=""post"" action=""/JSF23Spec790/test1.xhtml"" enctype=""application/x-www-form-urlencoded""> This is 'form b' 
<label for=""b:input2""> Enter a new value for input2: </label> 
<input id=""b:input2"" name=""b:input2"" type=""text"" value=""test""/> 
<a href=""#"" onclick=""jsf.util.chain(this, event,'jsf.ajax.request(this,event,{execute:\'b a \',render:\'a \',\'javax.faces.behavior.event\':\'action\'})'); return false;"" id=""b:commandLink1"" name=""b:commandLink1""> Click here to execute 'form a' and 'form b' but re-render 'form a' </a> 
<input type=""hidden"" name=""b_SUBMIT"" value=""1""/> 
</form>
{code}
 

I have provided a sample app that shows the issue when MyFaces 2.3.1 is used.
 # Just deploy the app on Tomcat and drive a request to: [http://localhost:8080/JSF23Spec790/test1.xhtml]
 # Enter a text in input1 and click submit button next to the input. Check the rendered page.",MYFACES-4229
"URLConnection opened in line 346 of DefaultFaceletFactory.java is never closed

 

 
{code:java}
try
{
    URLConnection conn = facelet.getSource().openConnection();
    long lastModified = ResourceLoaderUtils.getResourceLastModified(conn);

    return lastModified == 0 || lastModified > target;
}
catch (IOException e)
{
    throw new FaceletException(""Error Checking Last Modified for "" + facelet.getAlias(), e);
}

{code}
 

While this usually isn't an issue in most production environments, because the javax.faces.FACELETS_REFRESH_PERIOD is set either -1 or a high value, this can cause unexpected side effects in both test and hot-deploy production environments.

 

The result of this issue is that every time the lastModified for a composite component is checked, the composite component file descriptor does stay open - on my test environment we did have 500k open file descriptors for composite component xhtml files.",MYFACES-4228
"[https://github.com/martin654/primefaces-test]

Just run the example via jetty:run

For MyFaces, you need to exchange Mojarra with MyFaces.

It works fine in Mojarra but in MyFaces, the ""javax.faces.Resource"" update is never rendered.",MYFACES-4227
Currently the method getInitParameterMap from ExternalContextWrapper does not match with the spec: https://javaserverfaces.github.io/docs/2.3/javadocs/javax/faces/context/ExternalContextWrapper.html#getInitParameterMap--,MYFACES-4226
"I'm seeing many {{sun.nio.fs.UnixException}} being thrown in the underlying code because {{ExternalContextResourceLoader.libraryExists}} calls {{ExternalContext.getResource}} which in the end checks if a file exists on the FS. I'd suggest when the project stage is PRODUCTION, this should be cached. Maybe this could be done by installing an {{ExternalContextWrapper}} that caches all resource lookups? I just see that parsing a XHTML causes many exceptions to be thrown internally which negatively affects performance.",MYFACES-4225
"When running MyFaces on Tomcat with any CDI container AnnotatedFlowConfigurator.configureAnnotatedFlows get's called way too early which leads to the following Exception:

{noformat}
Apr 12, 2018 4:00:55 PM org.apache.myfaces.webapp.AbstractFacesInitializer initFaces
SCHWERWIEGEND: An error occured while initializing MyFaces: It's not allowed to call getBeans(Type, Annotation...) before AfterBeanDiscovery
java.lang.IllegalStateException: It's not allowed to call getBeans(Type, Annotation...) before AfterBeanDiscovery
	at org.apache.webbeans.container.InjectableBeanManager.checkAfterBeanDiscoveryProcessed(InjectableBeanManager.java:423)
	at org.apache.webbeans.container.InjectableBeanManager.getBeans(InjectableBeanManager.java:129)
	at org.apache.myfaces.cdi.util.CDIUtils.lookup(CDIUtils.java:45)
	at org.apache.myfaces.flow.cdi.DefaultCDIFacesFlowProvider.getAnnotatedFlows(DefaultCDIFacesFlowProvider.java:52)
	at org.apache.myfaces.flow.impl.AnnotatedFlowConfigurator.configureAnnotatedFlows(AnnotatedFlowConfigurator.java:42)
	at org.apache.myfaces.config.FacesConfigurator.configureFlowHandler(FacesConfigurator.java:1672)
	at org.apache.myfaces.config.FacesConfigurator.configure(FacesConfigurator.java:614)
	at org.apache.myfaces.webapp.AbstractFacesInitializer.buildConfiguration(AbstractFacesInitializer.java:416)
	at org.apache.myfaces.webapp.Jsp21FacesInitializer.initContainerIntegration(Jsp21FacesInitializer.java:74)
	at org.apache.myfaces.webapp.AbstractFacesInitializer.initFaces(AbstractFacesInitializer.java:172)
	at org.apache.myfaces.webapp.StartupServletContextListener.contextInitialized(StartupServletContextListener.java:121)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4937)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5434)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1559)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1549)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)

{noformat}


This happens because the CDI spec disallows to call BeanManager#getBeans() before the container is started (AfterDeploymentValidation and later)
",MYFACES-4224
"Dear All,

I have JSF1.1 application which runs on Java 6/WAS7 as of now. We are currently doing Java 8 Migration with WAS 8.5.5.11. Installed WAS8.5.5.11 & Java 8 and Configured workspace and changed the Compiler & Project Facelets to Java 1. 8 & WAS8.5 and restarted the servers without any issues. 

But when login getting View CertificateException for ViewID with Restore_View :1 error and when I debugged I am seeing viewroot is empty in facescontext and I do the same in Jav6/WAS7 I am able to see the values for viewroot in facecontext. I did only Java 8/WAS5.5.11 install and started the servers without any changes but it is not working in new environment.

Could you please help me to find the root cause and solution to resolve the issue.

Using myfaces-api-1.1.9 & jsf-facelets-1.1.14

Thanks,

 ",MYFACES-4223
"For instance something like this would fail to work correctly if the step were 2 it seems the step will always be 1. The initial page works as step is initialized to 1 in the backing bean. However if you update the step to two and submit the page it is still 1.
{code:java}
step: <h:inputText id=""stepInput"" value=""#{iterationBean.step}""/>
        <p/>
        <h:panelGroup id=""panel1"">
            <ui:repeat value=""#{iterationBean.testList}"" var=""x"" begin=""#{iterationBean.begin}"" end=""#{iterationBean.end}"" step=""#{iterationBean.step}"">
                #{x}
            </ui:repeat>
        </h:panelGroup>
        <p/>
        <h:commandButton id=""button1"" value=""Test"">
            <f:ajax execute=""@all"" render=""panel1"" />
        </h:commandButton>
{code}

Or removing ajax:


{code:java}
step: <h:inputText id=""stepInput"" value=""#{iterationBean.step}""/>
        <p/>
        <h:panelGroup id=""panel1"">
            <ui:repeat value=""#{iterationBean.testList}"" var=""x"" begin=""#{iterationBean.begin}"" end=""#{iterationBean.end}"" step=""#{iterationBean.step}"">
                #{x}
            </ui:repeat>
        </h:panelGroup>
        <p/>
        <h:commandButton id=""button1"" value=""Test"">
        </h:commandButton>
{code}
",MYFACES-4222
"  javax.faces.annotation.FacesConfig.Version contains CURRENT and JSF_2_2

 

The JSF 2.3 Specification javadoc only specifies JSF_2_3:  https://javaserverfaces.github.io/docs/2.3/javadocs/javax/faces/annotation/FacesConfig.Version.html",MYFACES-4221
"ViewHandler DISABLE_FACELET_JSF_VIEWHANDLER_PARAM_NAME is incorrect. In MyFaces it is : ""DISABLE_FACELET_JSF_VIEWHANDLER"" but according to the Spec it should be ""javax.faces.DISABLE_FACELET_JSF_VIEWHANDLER""

 

Section 10.1.2 gives the parameter name.",MYFACES-4220
"""arguments"" has a special meaning in JavaScript, so renaming it to ""args"".

The problem: some code-processors fail, when the input contains a parameter with name ""arguments"". ",MYFACES-4219
"See this example:
{code}
<partial-response><changes><update id='foo:bar'>...
{code}

before <changes> there is a whitespace allowed.
before <update> there is NO whitespace allowed, currently.
",MYFACES-4218
https://javaserverfaces.github.io/docs/2.3/javadocs/javax/faces/annotation/ManagedProperty.html,MYFACES-4217
"1) Method should be abstract:  [https://javaserverfaces.github.io/docs/2.3/javadocs/javax/faces/application/ViewHandler.html#getWebsocketURL-javax.faces.context.FacesContext-java.lang.String-]

 

2) public static final java.lang.String WEBSOCKET_PORT = ""javax.faces.WEBSOCKET_PORT"" -> This should not exist in the ViewHandler API according to the javadoc so moving it.

 

I believe we'll need a dev-discussion here as it looks like the spec specifies the following:

javax.faces.WEBSOCKET_ENDPOINT_PORT:

 

In case your server is configured to run a WebSocket container on a different TCP port than the HTTP
 container, then you can use the optional javax.faces.WEBSOCKET_ENDPOINT_PORT integer context
 parameter in web.xml to explicitly specify the port.

<context-param>
 <param-name>javax.faces.WEBSOCKET_ENDPOINT_PORT</param-name>
 <param-value>8000</param-value>
 </context-param>

 

The following dev discussion outcome was to change the name of our parameter to match the spec: https://www.mail-archive.com/dev@myfaces.apache.org/msg68684.html",MYFACES-4216
"[https://javaserverfaces.github.io/docs/2.3/javadocs/javax/faces/event/WebsocketEvent.html#getUser--]

 

The signature of the method should be:

public <S extends java.io.Serializable> S getUser()

 

Currently it is :

public Serializable getUser()",MYFACES-4215
"h2. Steps to reproduce:

# Clone the [wrong-content-type-ajax-excecute-all-reproducer|https://github.com/stiemannkj1/wrong-content-type-ajax-excecute-all-reproducer] project:
{code}
 git clone https://github.com/stiemannkj1/wrong-content-type-ajax-excecute-all-reproducer.git
{code}
# Build the project:
{code}
 cd wrong-content-type-ajax-excecute-all-reproducer && mvn clean package -P myfaces
{code}
# Deploy the project to Tomcat:
{code}
 cp target/*.war $TOMCAT_HOME/webapps/wrong-content-type-ajax-excecute-all-reproducer.war
{code}
# Navigate to the deployed webapp at [http://localhost:8080/wrong-content-type-ajax-excecute-all-reproducer/|http://localhost:8080/wrong-content-type-ajax-excecute-all-reproducer/].
# Note that the _External Context Calls:_ show that \{{setResponseContentType(""text/html"")}} was correctly called before the first call to \{{getResponseOutputWriter()}}.
# Click the _Execute (default) Ajax Request_ button.
# Note the _External Context Calls:_.
# Click the _Execute @all Ajax Request_ button.

If the bug still exists, the _External Context Calls:_ will show that \{{setResponseContentType(""text/html"")}} was *incorrectly* called before the first call to \{{getResponseOutputWriter()}} during Ajax requests.

If the bug is fixed, the _External Context Calls:_ will show that \{{setResponseContentType(""text/xml"")}} was called immediately before the first call to \{{getResponseOutputWriter()}}.

h2. Additional Information:

This issue does not affect Servlets but it does affect portlets which do not allow changing the content type after the first call to {{ExternalContext.getResponseOutputWriter()}} (Portlet Spec 3.0 Section _15.5.1 Content Type_):

{quote}
The {{setContentType}} method must be called before the {{getWriter}} or {{getPortletOutputStream}} methods. Otherwise, the method will have no effect.
{quote}",MYFACES-4214
"[https://javaserverfaces.github.io/docs/2.3/javadocs/javax/faces/convert/DateTimeConverter.html]

 

In the above javadoc you'll see it does not have the isJava8DateTimeFormatter method and therefore our API class should make this private.",MYFACES-4213
"HtmlSelectManyListbox -> https://javaserverfaces.github.io/docs/2.3/javadocs/javax/faces/component/html/HtmlSelectManyListbox.html

HtmlSelectManyMenu -> https://javaserverfaces.github.io/docs/2.3/javadocs/javax/faces/component/html/HtmlSelectManyMenu.html

HtmlSelectOneListbox -> https://javaserverfaces.github.io/docs/2.3/javadocs/javax/faces/component/html/HtmlSelectOneListbox.html

HtmlSelectOneMenu -> https://javaserverfaces.github.io/docs/2.3/javadocs/javax/faces/component/html/HtmlSelectOneMenu.html

 

The above all have onSelect / getSelect methods generated but they are not necessary and are not part of the javadoc.",MYFACES-4212
"[https://javaserverfaces.github.io/docs/2.3/javadocs/javax/faces/component/html/HtmlCommandScript.html]

 

https://javaserverfaces.github.io/docs/2.3/javadocs/javax/faces/component/behavior/ClientBehaviorHolder.html",MYFACES-4211
"ResponseWriterWrapper in jsf 2.3 spec does not have an abstract getWrapped() method. This causes a bug with omnifaces.

https://github.com/omnifaces/omnifaces/issues/448",MYFACES-4210
"To reduce the load on the ASF mirrors, projects are required to delete old releases [1]

Please can you remove all non-current releases?
It's unfair to expect the 3rd party mirrors to carry old releases.

I think the following are old:

myfaces-commons11-1.0.1
myfaces-commons12-1.0.1
myfaces-commons20-1.0.1
myfaces-core-assembly-2.3.0-beta
myfaces-extval-module-2.0.7

Thanks!

[1] http://www.apache.org/dev/release.html#when-to-archive

",MYFACES-4209
"[https://javaserverfaces.github.io/docs/2.3/javadocs/javax/faces/context/PartialViewContext.html#getEvalScripts--]

 

https://javaserverfaces.github.io/docs/2.3/javadocs/javax/faces/context/ResponseWriterWrapper.html#getWrapped--",MYFACES-4208
https://javaserverfaces.github.io/docs/2.3/javadocs/javax/faces/event/WebsocketEvent.html,MYFACES-4207
"1 ) [https://javaserverfaces.github.io/docs/2.3/javadocs/javax/faces/application/NavigationHandlerWrapper.html#NavigationHandlerWrapper--]

 

2) [https://javaserverfaces.github.io/docs/2.3/javadocs/javax/faces/component/visit/VisitContextFactory.html#VisitContextFactory--]

 

3) https://javaserverfaces.github.io/docs/2.3/javadocs/javax/faces/component/visit/VisitContextWrapper.html#VisitContextWrapper--",MYFACES-4206
According to the JavaDoc: [https://javaserverfaces.github.io/docs/2.3/javadocs/javax/faces/context/ExternalContext.html#encodeWebsocketURL-java.lang.String-]  the method should be abstract and it is not in MyFaces.,MYFACES-4205
The problem arises from jsf.js because after an ajax call all javax.faces.ViewState hidden inputs are updated. The solution would be to update only those hidden inputs (javax.faces.ViewState) which are also within a form with the same action as the form in which the ajax call was executed.,MYFACES-4204
"As described at [https://github.com/javaee/javaserverfaces-spec/issues/1102] , UIRepeat should behave as c:forEach when given a begin and an end parameter, without any model.

Mojarra impl already does that, as the deployment of the attached xhtml shows (althought it has some issues of her own on rerender).

There's also a patch built on 2.3.0 version. Due to time restrictions, I couldn't make a unit test for the change, but the patched myfaces versions passes on all other tests and behaves on other jsf projects. Hope you can grab the changes.",MYFACES-4203
FacesServletMappingUtils.isFacesServlet is invoked on every request. This means that ClassUtils.simpleClassForName() will also be invoked on every request. We need to cache the boolean value for each servletClassName to improve performance.,MYFACES-4202
"Knowing it's bleeding edge work in progress, I wanted to report a regression in MyFaces-2.3.0-SNAPSHOT current Revision 1823978 - likely introduced with this commit:

Revision: 1823976
Author: embreijo
Date: Montag, 12. Februar 2018 15:36:05
Message:
MYFACES-4198 Injection on custom navigation handlers does not work
----
Modified : /myfaces/core/branches/2.3.x/impl/src/main/java/org/apache/myfaces/config/FacesConfigurator.java
Modified : /myfaces/core/branches/2.3.x/shared-public/src/main/java/org/apache/myfaces/shared/util/ClassUtils.java



When initializing a Primefaces 6.1 application I get an Exception for a NavigationHandler that does not provide a zero argument default constructor:

 

An error occured while initializing MyFaces: java.lang.InstantiationException: org.primefaces.application.DialogNavigationHandler
javax.faces.FacesException: java.lang.InstantiationException: org.primefaces.application.DialogNavigationHandler
    at org.apache.myfaces.shared.util.ClassUtils.newInstance(ClassUtils.java:436)
    at org.apache.myfaces.shared.util.ClassUtils.buildApplicationObject(ClassUtils.java:629)
    at org.apache.myfaces.shared.util.ClassUtils.buildApplicationObject(ClassUtils.java:534)
    at org.apache.myfaces.config.FacesConfigurator.configureApplication(FacesConfigurator.java:734)
    at org.apache.myfaces.config.FacesConfigurator.configure(FacesConfigurator.java:606)
    at org.apache.myfaces.webapp.AbstractFacesInitializer.buildConfiguration(AbstractFacesInitializer.java:449)
    at org.apache.myfaces.webapp.Jsp21FacesInitializer.initContainerIntegration(Jsp21FacesInitializer.java:70)
    at org.apache.myfaces.webapp.AbstractFacesInitializer.initFaces(AbstractFacesInitializer.java:181)
    at org.apache.myfaces.webapp.StartupServletContextListener.contextInitialized(StartupServletContextListener.java:103)
    at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4637)
    at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5099)
    at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
    at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1425)
    at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1415)
    at java.util.concurrent.FutureTask.run(FutureTask.java:266)
    at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
    at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)
    at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:941)
    at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:839)
    at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
    at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1425)
    at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1415)
    at java.util.concurrent.FutureTask.run(FutureTask.java:266)
    at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
    at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)
    at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:941)
    at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:258)
    at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
    at org.apache.catalina.core.StandardService.startInternal(StandardService.java:422)
    at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
    at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:770)
    at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
    at org.apache.catalina.startup.Catalina.start(Catalina.java:682)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:353)
    at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:493)
Caused by: java.lang.InstantiationException: org.primefaces.application.DialogNavigationHandler
    at java.lang.Class.newInstance(Class.java:427)
    at org.apache.myfaces.shared.util.ClassUtils.newInstance(ClassUtils.java:426)
    ... 38 more
Caused by: java.lang.NoSuchMethodException: org.primefaces.application.DialogNavigationHandler.<init>()
    at java.lang.Class.getConstructor0(Class.java:3082)
    at java.lang.Class.newInstance(Class.java:412)
    ... 39 more",MYFACES-4201
"When Servlet 4 PushBuilder is used with complex web applications requiring many resources (e.g. Primefaces Showcase), I keep getting plenty of Exceptions with Apache Tomcat 9:

 org.apache.coyote.CloseNowException: Connection [3], Stream [111], This stream is not writable

caused by HTTPS streams gotten closed due to protocol violations. The final output is not usable most of the times.

Opening the same application using a HTTP/1.1 connector works fine.

Resource Push with implemented thru #MYFACES-4141.

 

A similar issue already exists for JSF 2.3.3 RI Mojarra: https://github.com/javaserverfaces/mojarra/issues/4329

 ",MYFACES-4200
"If a simple {{<f:selectItem/>}} (i.e. without any attributes) is used, it leads to an {{NullPointerException}} in {{org.apache.myfaces.shared.util.SelectItemsIterator.hasNext(SelectItemsIterator.java:130)}} because {{itemValue}} is {{null}}.

I am not sure if this behaviour is intended, but I guess not.",MYFACES-4199
"When a custom navigation handler is used, injection is not working because we are wrapping the object to the BackwardsCompatibleNavigationHandlerWrapper, and then calling injectAndPostConstruct on that BackwardsCompatibleNavigationHandler object. ",MYFACES-4198
"When working on development mode, FacesConfigurator is created for every request, as a result, the list that stores the injected beans is created for every request as well causing to lose track of objects that has been injected already.",MYFACES-4197
USE_ENCRYPTION=false MUST actually only be used for intranet applications,MYFACES-4196
The new API class IterableDataModel is throwing an unexpected NPE in the setRowIndex() method.,MYFACES-4195
"The following Validators implement PartialStateHolder which extends StateHolder the saveState and restoreState methods indicate that a NPE must be thrown in the FacesContext is null.

 

javax.faces.validator.BeanValidator

javax.faces.validator.DoubleRangeValidator

javax.faces.validator.LengthValidator

javax.faces.validator.LongRangeValidator

javax.faces.validator.MethodExpressionValidator

javax.faces.validator.RegexValidator",MYFACES-4194
"public java.lang.String getAsString([FacesContext |file:///C:/Users/IBM_ADMIN/Desktop/Dev/JSF%202.3%20-%20Servlet%204%20Dev/final%20draft/javax.faces-api-2.3-javadoc/javadocs/javax/faces/context/FacesContext.html]context, [UIComponent |file:///C:/Users/IBM_ADMIN/Desktop/Dev/JSF%202.3%20-%20Servlet%204%20Dev/final%20draft/javax.faces-api-2.3-javadoc/javadocs/javax/faces/component/UIComponent.html]component, java.lang.Object value)

 

Parameters: {{context}} - [{{FacesContext}}|file:///C:/Users/IBM_ADMIN/Desktop/Dev/JSF%202.3%20-%20Servlet%204%20Dev/final%20draft/javax.faces-api-2.3-javadoc/javadocs/javax/faces/context/FacesContext.html] for the request being processed {{component}} - [{{UIComponent}}|file:///C:/Users/IBM_ADMIN/Desktop/Dev/JSF%202.3%20-%20Servlet%204%20Dev/final%20draft/javax.faces-api-2.3-javadoc/javadocs/javax/faces/component/UIComponent.html] with which this model object value is associated {{value}} - Model object value to be converted (may be {{null}})

 

Returns: a zero-length String if value is {{null}}, otherwise the result of the conversion

 

Currently we return null if the value is null rather than a zero-length String ("""")",MYFACES-4193
"See the javadoc for additional details but it clearly states we must call super.processValidators.

 

https://javaee.github.io/javaee-spec/javadocs/javax/faces/component/UISelectOne.html#processValidators-javax.faces.context.FacesContext-",MYFACES-4192
"If a Non-Faces request to a Servlet creates a Faces Response, the path to a resource does not contain the correct mapping.  

I've attached a sample application to show how to reproduce this issue.  
A servlet acquires the FacesContext as described in Section 2.4.1.2 of the JSF 2.3 spec.  
Then, the servlet gets the ResourceHandler and creates a Resource to a .gif file.  
On this resulting Resource object, I call getRequestPath(), however the path returned is not the one I expected. 

For example, in the sample app provided, access this URL:
localhost:8080/MyFaces23_mapping/TestServlet


The getRequestPath returned is 
/MyFaces23_mapping/faces/javax.faces.resource/MyFaces.gif

However, the path that should be returned is:
/MyFaces23_mapping/TestServlet/javax.faces.resource/MyFaces.gif

The reason for this is the algorithm in the org.apache.myfaces.shared.application.FacesServletMappingUtils.createMappingFromServletRegistration() method.  This is new to MyFaces 2.3.  The mapping to the Servlet (TestServlet) is ignored since there is a mapping to the FacesServlet (/faces/*) in the web.xml. Since there is a mapping to the FacesServlet, that is the value returned for the mapping.  

The code path for this scenario begins with org.apache.myfaces.shared.resource.BaseResourceHandlerSupport.getFacesServletMapping()
The context attributes does not have a value for CACHED_SERVLET_MAPPING on the first pass through so it calls org.apache.myfaces.shared.application.FacesServletMappingUtils.calculateGenericFacesServletMapping().  In there we end up calling FacesServletMappingUtils.createMappingFromServletRegistration() and the wrong mapping is returned.  

This did not occur in MyFaces 2.2.  In there, MyFaces just called FacesServletMapping.createPrefixMapping and the TestServlet mapping was returned.  Also, this worked on Mojarra JSF 2.3 (2.3.3) as well.

There is no issue on MyFaces 2.3 with an extension mapping.  In my opionion, the code needs to take in to account the servletPath in createMappingFromServletRegistration.  If the Servlet Mapping (/TestServlet) matches the servletPath that is passed in, then we should return that.  

I'm uploading a patch for this issue as well.",MYFACES-4191
"According to JSF 2.3 spec issue [https://github.com/javaee/javaserverfaces-spec/issues/1113] we need to remove the onselect attribute from h:selectOneMenu/h:selectManyMenu/h:selectOneListbox/h:selectManyListbox.

I have tested on Mojarra 2.3 and they don't actually render the onselect attribute.",MYFACES-4190
" *xhtml page:*
{code:java}
<h:commandButton action=""#{user.login}""/>{code}
*Java bean:*
{code:java}
private String returnUrl = 
 ""catalogsearch.jsf?fq=param1&fq=param2&faces-redirect=true&includeViewParams=true"";

public String login() {
   return returnUrl;
}{code}
 

*expected http response result:*
{code:java}
HTTP/1.1 302 Found
Location: /learningportal-1.7.1.2/pages/catalogsearch.jsf?fq=param1&fq=param2{code}
*actual http response result:*
{code:java}
HTTP/1.1 302 Found
Location: /learningportal-1.7.1.2/pages/catalogsearch.jsf?fq=param2{code}
 

*Affected versions (myfaces):*
 * 2.2.9
 * 2.2.12",MYFACES-4189
"On MyFaces 2.2, we added some null checker for context.getCurrentPhaseId() under https://issues.apache.org/jira/browse/MYFACES-4048. It looks like this was never forward ported to MyFaces 2.3. ",MYFACES-4188
"ResourceHandler.createResource methods should throw NPE.

Looking at the JavaDoc for the ResourceHandler we need to throw an NPE when the resourceName is null:

https://javaee.github.io/javaee-spec/javadocs/javax/faces/application/ResourceHandler.html#createResource-java.lang.String-

https://javaee.github.io/javaee-spec/javadocs/javax/faces/application/ResourceHandler.html#createResource-java.lang.String-java.lang.String-

https://javaee.github.io/javaee-spec/javadocs/javax/faces/application/ResourceHandler.html#createResource-java.lang.String-java.lang.String-java.lang.String-

Throws:
    NullPointerException - if resourceName is null.

Currently our behavior looks to just return null which is incorrect according to the specification.",MYFACES-4187
"We've hit a performance issue with the property descriptor map in _ComponentAttributesMap.  Driving a heavy load to an application, we can see threads spending a lot of time in this area:

...
(entered lock: java/util/Collections$SynchronizedMap@0x000000000000000, entry count:1)
at javax/faces/component/_ComponentAttributesMap.getPropertyDescriptor(_ComponentAttributesMap.java:394(Compiled Code))
at javax/faces/component/_ComponentAttributesMap.containsKey(_ComponentAttributesMap.java:165(Compiled Code))
at javax/faces/component/UIComponent.isCompositeComponent(UIComponent.java:239(Compiled Code))
...

In this case, replacing the HashMap used by _propertyDescriptorMap with a ConcurrentHashMap gives us much better performance.  Since we can use a ConcurrentHashMap here, there shouldn't be any performance hit in the normal case.

Related: https://issues.apache.org/jira/browse/MYFACES-3216",MYFACES-4186
"Since the JSFViewDeclarationLanguageStrategy.java always returns true now :  https://issues.apache.org/jira/browse/MYFACES-4183

A issue is now found in the JSPViewDeclarationLanguage.getViews:


{code:java}
@Override
    public Stream<String> getViews(FacesContext facesContext, String path, int maxDepth, ViewVisitOption... options)
    {
        Stream<String> stream = super.getViews(facesContext, path, maxDepth, options);
        stream = stream.filter(f -> _strategy.handles(f));
        if (options != null &&
            Arrays.binarySearch(options, ViewVisitOption.RETURN_AS_MINIMAL_IMPLICIT_OUTCOME) >= 0)
        {
            stream = stream.map(f -> _strategy.getMinimalImplicitOutcome(f));
        }
        return stream;
    }
{code}

As you can see from the code above it would be possible to now return views here that are not actually handled specifically by the JSP vdl. For instance in the FaceletViewDeclarationLanguage we have the following filter in place:


{code:java}
stream = stream.filter(f -> (_strategy.handles(f) && 
                    !FaceletsTemplateMappingUtils.matchTemplate(runtimeConfig, f) ) );
{code}

This filter allows us to specify something like the following in the faces-config.xml and avoid returning a view from getViews(), however now it would be returned incorrectly by the JSP vdl:


{code:java}
    <faces-config-extension>
        <facelets-template-mapping>
            <url-pattern>/templates/*</url-pattern>
        </facelets-template-mapping>
    </faces-config-extension>   
{code}
",MYFACES-4185
"The following exception can occur:

at org.apache.myfaces.view.facelets.util.FaceletsViewDeclarationLanguageUtils.markRenderedResources(FaceletsViewDeclarationLanguageUtils.java:116)
at org.apache.myfaces.view.facelets.FaceletViewDeclarationLanguage.restoreView(FaceletViewDeclarationLanguage.java:2157)
at org.apache.myfaces.application.ViewHandlerImpl.restoreView(ViewHandlerImpl.java:338)
at org.apache.myfaces.lifecycle.RestoreViewExecutor.execute(RestoreViewExecutor.java:168)
at org.apache.myfaces.lifecycle.LifecycleImpl.executePhase(LifecycleImpl.java:195)
at org.apache.myfaces.lifecycle.LifecycleImpl.execute(LifecycleImpl.java:142)
at javax.faces.webapp.FacesServlet.service(FacesServlet.java:204)

This happens when the view is null, which can happen for a variety of reasons, for example if you drive a request to a page, let the session timeout and then click on a ajaxified button we would get the NPE rather than a ViewExpiredException. The change is trivial I'll upload a patch.",MYFACES-4184
"There is a difference in behavior between JSF 2.2 and JSF 2.3 when using facelet prefixes.

I have a sample app that demonstrate this behavior difference. In the app we just define a random servlet and map it to the same prefixes we would normally map to the FacesServlet. We don't map /faces/* to the testServlet but it is automatically added to the FacesServlet, so if you drove a request to something other than .jsf (testServlet) or *.faces (testServlet) the FacesServlet would be invoked for all of the prefix mappings of /faces/*. So that would mean you should see TEST SERVLET printed for the suffix mapping (.jsf and .faces) and then the page1 should be rendered for /faces/*. 

When you drive a request to: http://localhost:8080/JSF20FacesConfigAnotherServlet/faces/page1.jsf

On JSF 2.2: You should see an output of ""TEST SERVLET"". So it ensures that .jsf mapping is invoking the testServlet.

On JSF 2.3: You get a 404, page1.jsf not found. I think that in the case of JSF 2.3, it is invoking the FacesServlet but can't find the .jsf file because it doesn't actually exist.


",MYFACES-4183
"I noticed a behavior difference when using a composite component and ajax between jsf 2.3 and jsf 2.2. I've attached a test application that reproduces.

*JSF 2.2 Behavior when form prependId=false:*

1 )If we reference the outputText id in the render attribute with the form id prepended then the page is successfully rendered (testpage1.jsf)

2) If we reference the outputText id without the form id prepended we get the following failure (testpage2.jsf) when requesting the page:

{code:java}
javax.faces.FacesException: Component with id:output2 not found
	at org.apache.myfaces.renderkit.html.HtmlAjaxBehaviorRenderer.getComponentId(HtmlAjaxBehaviorRenderer.java:505)
	at org.apache.myfaces.renderkit.html.HtmlAjaxBehaviorRenderer.build(HtmlAjaxBehaviorRenderer.java:467)
	at org.apache.myfaces.renderkit.html.HtmlAjaxBehaviorRenderer.mapToString(HtmlAjaxBehaviorRenderer.java:439)
	at org.apache.myfaces.renderkit.html.HtmlAjaxBehaviorRenderer.makeAjax(HtmlAjaxBehaviorRenderer.java:158)
	at org.apache.myfaces.renderkit.html.HtmlAjaxBehaviorRenderer.getScript(HtmlAjaxBehaviorRenderer.java:102)
	at javax.faces.component.behavior.ClientBehaviorBase.getScript(ClientBehaviorBase.java:101)
	at org.apache.myfaces.shared.renderkit.html.CommonEventUtils.renderBehaviorizedAttribute(CommonEventUtils.java:188)
	at org.apache.myfaces.shared.renderkit.html.CommonEventUtils.renderBehaviorizedAttribute(CommonEventUtils.java:120)
	at org.apache.myfaces.shared.renderkit.html.CommonEventUtils.renderBehaviorizedEventHandlers(CommonEventUtils.java:283)
	at org.apache.myfaces.shared.renderkit.html.CommonEventUtils.renderBehaviorizedEventHandlers(CommonEventUtils.java:202) 
{code}

*JSF 2.3 Behavior when form preprendId=false:*

1) If we reference the outputText id in the render attribute with the form id prepended then we get the following failure (testpage1.jsf) when requesting the page:


{code:java}
Cannot find component for expression ""testForm:output2"" referenced from ""input1:input"".

viewId=/testpage1.xhtml
location=C:\libertyGit\libertycdopen\WS-CD-Open\dev\build.image\wlp\usr\servers\test1\apps\expanded\TestApp.war\testpage1.xhtml
phaseId=RENDER_RESPONSE(6)

Caused by:
javax.faces.component.search.ComponentNotFoundException - Cannot find component for expression ""testForm:output2"" referenced from ""input1:input"".
at org.apache.myfaces.component.search.SearchExpressionHandlerImpl.resolveClientId(SearchExpressionHandlerImpl.java:104)
{code}


2) If we reference the outputText id without the form id prepended then the page is successfully rendered (testpage2.jsf)

The behavior between jsf 2.2 and jsf 2.3 is reverse, in jsf 2.3 we do not work with the prepended form id and in jsf 2.2 we require the prepended form id. 
",MYFACES-4182
,MYFACES-4181
"See the following dev discussion: http://mail-archives.apache.org/mod_mbox/myfaces-dev/201711.mbox/%3cOF507AE5DC.A54B3314-ON002581DB.006603E5-852581DB.0068095D@notes.na.collabserv.com%3e

We need to determine what updates we want to make here and how best to make them.",MYFACES-4180
,MYFACES-4179
"In Spec Issue 1403:  https://github.com/javaee/javaserverfaces-spec/issues/1403

It states that:
-----------
Specifically, the
FlowHandler.TO_FLOW_DOCUMENT_ID_REQUEST_PARAM_NAME and the
FlowHandler.FLOW_ID_REQUEST_PARAM_NAME must be added to the query string
when entering the flow in this way.
-----------

In MyFaces 2.3 these parameters are not added to the query string when entering the flow from the viewAction.  They are added when using Mojarra JSF 2.3.

I've also tested with the MyFaces 12/02/2017 snapshot and I still see the same behavior.
*
The JSF 2.3 Spec says this:

Section 7.4.2 regarding the default navigation handler implementation*


{noformat}
If the <redirect/> element was specified in this <navigation-case>, or this invocation of
handleNavigation() was due to a UIViewAction broadcast event where the new viewId is different from
the current viewId, resolve the <to-view-id> to a view identifier, using the algorithm in Section 7.4.2.1
“Requirements for Explicit Navigation in Faces Flow Call Nodes other than ViewNodes”. Call
getRedirectURL() on the ViewHandler, passing the current FacesContext, the <to-view-id>, any
name=value parameter pairs specified within <view-param> elements within the <redirect> element, and
the value of the include-view-params attribute of the <redirect /> element if present, false, if not. If
this navigation is a flow transition (where current flow is not the same as the new flow), include the relevant flow
metadata as entries in the parameters.

If current flow is not null and new flow is null, include the following entries:
FlowHandler.TO_FLOW_DOCUMENT_ID_REQUEST_PARAM_NAME: FlowHandler.NULL_FLOW
FlowHandler.FLOW_ID_REQUEST_PARAM_NAME: “” (the empty string)

If current flow is null and new flow is not null, include the following entries:
FlowHandler.TO_FLOW_DOCUMENT_ID_REQUEST_PARAM_NAME: The to flow document id
FlowHandler.FLOW_ID_REQUEST_PARAM_NAME: the flow id for the flow that is the destination of the
transition.

If the parameters map has entries for either of these keys, both of the entries must be replaced with the new
values. This allows the call to FlowHandler.clientWindowTransition() to perform correctly when
the GET request after the redirect happens.
{noformat}
",MYFACES-4178
"Right now the isFacesServlet method from FacesServletMappingUtils is using ClassUtils.simpleClassForName which logs and throws a lot of classes that cannot find. We can change it to use ClassUtils.simpleClassForName(servletClassName, false) so it doesn't log every class not found.

I'll provide a patch",MYFACES-4177
"There seems to be a bug in the org.apache.myfaces.component.search.SearchExpressionHandlerImpl class when a client id is specified in the render attribute that is outside of the form that the f:ajax component resides.  
For example:
{noformat}
<h:body>
    <h:form id=""form1"">
        <h:commandButton id=""testButton1"" value=""GetResult"" action=""#{testBean.test()}"">
            <f:ajax listener=""#{testBean.ajaxListener}"" render=""testOutput1""/>
        </h:commandButton>
    </h:form>
    <br/>
    <h:outputText id=""testOutput1"" value=""#{testBean.result}""/>
</h:body>
{noformat}

You can see that the commandButton and ajax components are within the form but the render attribute specified is outside of it.  
When the Ajax code is generated for the button, you can see that render section is pointing to the commandButton id instead of the specified 'testOutput1' id that is actually specified in the f:ajax render attribute.  
{panel:title=JSF 2.3}
onclick=""jsf.util.chain(this, event,'jsf.ajax.request(this,event,{*render:\'form1:testButton1 \'*,\'javax.faces.behavior.event\':\'action\'})'); return false;""
{panel}

When this same scenario is tested on JSF 2.2, the render section is correct...pointing to the testOutput1 id.

{panel:title=JSF 2.2}
onclick=""jsf.util.chain(document.getElementById('form1:testButton1'), event,'jsf.ajax.request(\'form1:testButton1\',event,{*render:\'testOutput1 \'*,\'javax.faces.behavior.event\':\'action\'})'); return false;""

{panel}

This scenario also works on Mojarra JSF 2.3.

I debugged the issue and it seems org.apache.myfaces.component.search.SearchExpressionHandlerImpl.invokeOnComponent method, the ""expression"" variable has the correct value that we want to render (""testOutput1"") but it is unable to find this component because it only searches within the form. My thought is that the code should try to iterate through the parent.getParent to try to find the id it's looking for.  The code looks as though it's doing that (around line 163). However, in this scenario the code path never drops in to that block of code.  What ends up happening is the client id of the commandButton is returned.  Therefore, the testOutput1 component is not updated when the button is clicked. 

I've attached a testcase to easily reproduce the scenario.  This could potentially be a high impact issue since partial request aren't updating components outside of their immediate parent.  


",MYFACES-4176
"Please consider the following scenario, I've attached a sample app. 

I have a template in the resources/templates directory.  The request to localhost:8080/JSFTestResources/mapViewIdToResource.jsf fails when MyFaces to load the basicTemplate.xhtml  file which is located in the /resources/templates directory for the composite component.  The backing bean uses the ResourceHandler to create the view resources.
The reason this fails in JSF 2.3 is due to the change in the org.apache.myfaces.resource.RootExternalContextResourceLoader.getResourceURL(String) method.  
In JSF 2.3, the method added a check to see if the resourceId starts wiht the contractsDirectory or resourcesDirectory.  If it does then the getResourceURL returns null which tells the ResourceLoader that the resource does not exist.  In JSF 2.2, those checks were not there.

I checked the change history for this class and I see that MYFACES-4105 added this change.  In that JIRA I see the comment made that says:
""One last review is required to check if xhtml files under forbidden extensions are being loaded (/resources, /contracts and so on).""

Therefore, this falls in to the JIRA comment mentioned above.  To me, the test I've attached seems to be a valid scenario and MyFaces should be allowing this resource to be found instead of returning null.  I don't see anywhere in the spec that says MyFaces should be behaving in that manner. Please correct me if I'm wrong.

Also, this app works with MyFaces JSF 2.2 and also with Mojarra JSF 2.3.  

With MyFaces JSF 2.3 I get a NPE:

java.lang.NullPointerException
	com.test.MapResourcePathBean.mapViewIdToResource(MapResourcePathBean.java:56)
	sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:90)
	sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:55)
	java.lang.reflect.Method.invoke(Method.java:508)
	javax.el.BeanELResolver.invoke(BeanELResolver.java:158)
	javax.el.CompositeELResolver.invoke(CompositeELResolver.java:79)
	org.apache.el.parser.AstValue.getValue(AstValue.java:159)
	org.apache.el.ValueExpressionImpl.getValue(ValueExpressionImpl.java:184)
	org.apache.myfaces.view.facelets.el.ContextAwareTagValueExpression.getValue(ContextAwareTagValueExpression.java:93)",MYFACES-4175
"We need to use the Locale.forLanguage tag method to as defined in the JSF 2.3 spec section 2.5.2.1.

""To facilitate BCP 47 support, the Locale parsing mentioned above is done only if the JDK Locale.languageForTag method does not return a Locale with a language in it. The additional format of the Locale string is as specified by that method.""",MYFACES-4174
"When running myfaces with WELD 2.0 I see the following warnings:

WARNING ] WELD-000146: BeforeBeanDiscovery.addAnnotatedType(AnnotatedType<?>) used for class org.apache.myfaces.cdi.view.ViewScopeBeanHolder is deprecated from CDI 1.1!
[WARNING ] WELD-000146: BeforeBeanDiscovery.addAnnotatedType(AnnotatedType<?>) used for class org.apache.myfaces.flow.cdi.FlowScopeBeanHolder is deprecated from CDI 1.1!
[WARNING ] WELD-000146: BeforeBeanDiscovery.addAnnotatedType(AnnotatedType<?>) used for class org.apache.myfaces.push.cdi.PushContextFactoryBean is deprecated from CDI 1.1!
[WARNING ] WELD-000146: BeforeBeanDiscovery.addAnnotatedType(AnnotatedType<?>) used for class org.apache.myfaces.flow.cdi.FlowBuilderFactoryBean is deprecated from CDI 1.1!
[WARNING ] WELD-000146: BeforeBeanDiscovery.addAnnotatedType(AnnotatedType<?>) used for class org.apache.myfaces.cdi.config.FacesConfigBeanHolder is deprecated from CDI 1.1!
[WARNING ] WELD-000146: BeforeBeanDiscovery.addAnnotatedType(AnnotatedType<?>) used for class org.apache.myfaces.push.cdi.WebsocketChannelTokenBuilderBean is deprecated from CDI 1.1!
[WARNING ] WELD-000146: BeforeBeanDiscovery.addAnnotatedType(AnnotatedType<?>) used for class org.apache.myfaces.push.cdi.WebsocketSessionBean is deprecated from CDI 1.1!
[WARNING ] WELD-000146: BeforeBeanDiscovery.addAnnotatedType(AnnotatedType<?>) used for class org.apache.myfaces.push.cdi.WebsocketViewBean is deprecated from CDI 1.1!
[WARNING ] WELD-000146: BeforeBeanDiscovery.addAnnotatedType(AnnotatedType<?>) used for class org.apache.myfaces.push.cdi.WebsocketApplicationBean is deprecated from CDI 1.1!
[WARNING ] WELD-000146: BeforeBeanDiscovery.addAnnotatedType(AnnotatedType<?>) used for class org.apache.myfaces.cdi.JsfApplicationArtifactHolder is deprecated from CDI 1.1!
[WARNING ] WELD-000146: BeforeBeanDiscovery.addAnnotatedType(AnnotatedType<?>) used for class org.apache.myfaces.cdi.model.FacesDataModelClassBeanHolder is deprecated from CDI 1.1!
[WARNING ] WELD-000146: BeforeBeanDiscovery.addAnnotatedType(AnnotatedType<?>) used for class org.apache.myfaces.flow.cdi.FlowScopeBeanHolder is deprecated from CDI 1.1

We should clean this up by using BeforeBeanDiscover.addAnnotatedType(AnnotatedType<?>, String id): https://javaee.github.io/javaee-spec/javadocs/javax/enterprise/inject/spi/BeforeBeanDiscovery.html#addAnnotatedType-javax.enterprise.inject.spi.AnnotatedType-java.lang.String-



",MYFACES-4173
"The addSearchExpressionHandler method in ApplicationImpl class is written incorrectly as ""addSearchExpressionHandlerHandler"".

The getSearchExpressionContextFactory method in FactoryImpl should return searchExpressionContextFactories and not clientWindowFactories",MYFACES-4172
"I noticed that the schema file web-facesconfig.xsd has not been updated since JSF 2.1.

The following spec issue was opened to add the element /faces-config/factory/client-window-factory in the schema because it was missing on JSF 2.2.

https://github.com/javaee/javaserverfaces-spec/issues/1241


I also noticed that the following new elements need to be added to the JSF 2.3 schema.

/faces-config/factory/search-expression-context-factory
/faces-config/application/search-expression-handler
/faces-config/application/search-keyword-resolver


We need to create a new web-facesconfig.xsd schema for JSF 2.3",MYFACES-4171
"https://github.com/javaee/javaserverfaces-spec/issues/1430

We want to allow for the following repeatable annotations:

@ListenerFor and @ResourceDependency , This allows for the following:

{code:java}

@ListenerFor(systemEventClass=PreRenderViewEvent.class)
@ListenerFor(systemEventClass=PostRenderViewEvent.class)

{code}

Rather than:

{code:java}
@ListenersFor ({
    @ListenerFor(systemEventClass=PreRenderViewEvent.class)
    @ListenerFor(systemEventClass=PostRenderViewEvent.class)
})

{code}
",MYFACES-4170
"I was testing out the new group attribute on the <h:selectOneRadio/> component and found that it does not look to work in all scenarios:

I've provided a test application to shows a working scenario and then multiple scenarios that I think should work but don't.

The app can be deployed on tomcat. 

You can drive a request to the index page which will contain the links what doesn't work: 
http://localhost:8080/JSF23SelectOneRadioGroup/index.xhtml

Or you can directly verify what does not work by sending requests to:
localhost:8080/JSF23SelectOneRadioGroup/error.xhtml
localhost:8080/JSF23SelectOneRadioGroup/error2.xhtml
localhost:8080/JSF23SelectOneRadioGroup/error3.xhtml
localhost:8080/JSF23SelectOneRadioGroup/error4.xhtml",MYFACES-4169
"As part of MYFACES-3250 the org.apache.myfaces.ee6 package was renamed to org.apache.myfaces.ee, multiple pom.xmls still point to ee6 package.

At a quick glance I see it in:

1) 2.3.x\bundle\pom.xml
2) 2.3.x\impl\pom.xml
",MYFACES-4168
"Lets take that example:
<composite:attribute name=""vipa"" type=""com.test.doesntexist.MyController"" required=""true"" />

the type will NOT be validated in MyFaces.

Therfore if you switch e.g. to Mojarra (our applications most work on both impls), ClassNotFound will be thrown.

MyFaces should log a warning in that case.",MYFACES-4167
"It seems that MyFacesContainerInitializer.FACES_SERVLET_ADDED_ATTRIBUTE key is also used on AbstractFacesInitializer. 

It would be nice if we can make the field public so we remove duplicates.

I will provide a patch.",MYFACES-4166
"Since the UICommandScript component extends the UICommand component, we should be able to include f:param in the h:commandScript components.  
In my testing, the values are not in the request map when I try to pull them out.  They are displayed as null on the rendered page.

My xhtml file has:

{code:java}
<h:form>
    <h:commandScript name=""testCommandScript"" action=""#{commandScriptBean.testCommandScriptParam()}"" render="":output"" autorun=""true"">
        <f:param name=""param1"" value=""Value1"" />
        <f:param name=""param2"" value=""Value2"" />
    </h:commandScript>
</h:form>
<h:outputText id=""output"" value=""The value of output is: #{commandScriptBean.output}"" />
{code}

and my bean is getting them here:

{code:java}
        Map<String,String> params = FacesContext.getCurrentInstance().getExternalContext().getRequestParameterMap();

        String param1 = params.get(""param1"");
        String param2 = params.get(""param2"");

        setOutput(param1+ "" "" + param2);
{code}

I've uploaded a sample application to demonstrate the issue. 
I'm using the 10/16 snapshot which contains the recent commandScript changes done in JIRA MyFaces-4163.  

I've tested this using the Mojarra JSF 2.3 jars and the values are properly displayed.  

",MYFACES-4165
"I have encountered an issue or an unexpected behavior with a stateless value of “javax.faces.ViewState” hidden input.

Let’s say you navigate to a state view. When the value attribute of “javax.faces.ViewState” is changed manually using browser’s developer tools, the application can prevent CSRF attack by throwing a ViewExpiredException. However, if you modify the value to be “stateless”, then no ViewExpiredException is thrown.

Even if you add View Protection to the state view, and modify the value to be “stateless”, no exception is thrown. 

The following JIRA issue said that this should be prevented with View Protections but it seems that’s not working.
https://issues.apache.org/jira/browse/MYFACES-3714


Comparing this behavior with Mojarra, if the you modify the value to be “stateless”, then the following exception is thrown:

javax.faces.FacesException: Unable to restore view /stateView.xhtml
	com.sun.faces.application.view.FaceletViewHandlingStrategy.restoreView(FaceletViewHandlingStrategy.java:255)
	com.sun.faces.application.view.MultiViewHandler.restoreView(MultiViewHandler.java:157)
	javax.faces.application.ViewHandlerWrapper.restoreView(ViewHandlerWrapper.java:125)
	com.sun.faces.lifecycle.RestoreViewPhase.execute(RestoreViewPhase.java:204)
        com.sun.faces.lifecycle.Phase.doPhase(Phase.java:100)


I have provided a sample app that demonstrates this behavior.

Instructions to recreate the behavior on Tomcat:
1)	Deploy the app on tomcat
2)	Drive a request to http://localhost:8080/ProtectedViewStateless/index.xhtml
3)	Click the “Navigate to State View” link
4)	Open the Browser’s Developer Tools and modify the value of “javax.faces.ViewState” to “stateless”
5)	Click the “Go to Final View” button. No exception is thrown.

If you change the MyFaces bundle to a Mojarra bundle and repeat the same steps, you’ll get the exception I mentioned above.",MYFACES-4164
"The vdldoc for the h:commandScript component state that ""@this"" should be the default value for the ""execute"" attribute. 
The excerpt from the execute attribute description in vdldocs/facelets/h/commandScript.html is:
-------
This is a space separated list of client identifiers of components that will participate in the ""execute"" portion of the Request Processing Lifecycle. If a literal is specified the identifiers must be space delimited. Any of the keywords ""@this"", ""@form"", ""@all"", ""@none"" may be specified in the identifier list. *If not specified, the default value of ""@this"" is assumed.* For example, @this clientIdOne clientIdTwo.
-------

When I specify the component like this (without an execute attribute):

{code:java}
<h:form id=""form1"">
    <h:commandScript name=""commandScript1"" action=""#{commandScriptBean.testCommandScript('success')}"" render="":output1"" autorun=""true""/>
</h:form>
<h:outputText id=""output1"" value=""MyFaces test output: #{commandScriptBean.output}"" />
{code}

I receive the following exception:

{noformat}
 java.lang.NullPointerException
	at org.apache.myfaces.renderkit.html.HtmlCommandScriptRenderer.getCollectionFromSpaceSplitString(HtmlCommandScriptRenderer.java:690)
	at org.apache.myfaces.renderkit.html.HtmlCommandScriptRenderer.encodeBegin(HtmlCommandScriptRenderer.java:144)
	at javax.faces.component.UIComponentBase.encodeBegin(UIComponentBase.java:597)
	at javax.faces.component.UIComponentBase.encodeAll(UIComponentBase.java:527)
	at javax.faces.component.UIComponentBase.encodeAll(UIComponentBase.java:551)
	at javax.faces.component.UIComponentBase.encodeAll(UIComponentBase.java:551)
	at javax.faces.component.UIComponentBase.encodeAll(UIComponentBase.java:551)
	at org.apache.myfaces.view.facelets.FaceletViewDeclarationLanguage.renderView(FaceletViewDeclarationLanguage.java:1898)
	at org.apache.myfaces.application.ViewHandlerImpl.renderView(ViewHandlerImpl.java:315)
	at javax.faces.application.ViewHandlerWrapper.renderView(ViewHandlerWrapper.java:73)
	at org.apache.myfaces.lifecycle.RenderResponseExecutor.execute(RenderResponseExecutor.java:117)
	at org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:267)
	at javax.faces.webapp.FacesServlet.service(FacesServlet.java:206)

{noformat}

When I try the same example using the Mojarra RI, it works as expected.  

I tried this with the MyFaces 2.3.0-beta and also several snapshots however, the issue still occurs.  The latest snapshot I tried was the 20171010.124738-264 version of the impl.  

I will upload a sample application to help reproduce the issue.  
",MYFACES-4163
"The example in https://issues.apache.org/jira/browse/MYFACES-4154 sends back an entire page due to a page navigation triggered from an ajax call, and apparently the page is inserted but the viewstate is lost along the way. I need to investigate what happens for such a corner case, since triggering a page change navigation from Ajax is rather seldom but needs to be addressed.

I will need a handful of days to fix this, due to my limited time.
",MYFACES-4162
"I have a composite component that accepts a facet. The composite component defines a form within which the facet is rendered. It roughly looks like this

{code:xml}
<composite:interface>
  <composite:facet name=""before"" />
</composite:interface>
<composite:implementation>
  <h:form>
    ...
    <composite:renderFacet name=""before""/>
    ...
  </h:form>
</composite:implementation>
{code}

Now when I use an input component in the facet, it doesn't get relocated into the appropriate naming container.

{code:xml}
<my:component>
  <f:facet name=""before"">
    <h:inputText .../>
  </f:facet>
</my:component>
{code}

The client id of the input element does not contain the form id and is thus not being considered during form processing.
Can you confirm this is a bug?",MYFACES-4161
"If you run the application from MYFACES-4156 via mvn jetty:run, the viewStateId isn't rendered again after the first ajax request.

Seems like FaceletViewDeclerationLanguage line 1910 should handle that but it skips.

[~lu4242] Could you please check that?",MYFACES-4160
"The JSF 2.3 spec section 5.9.1 says that it must be possible to use @Inject when specifying FacesConverters, FacesValidators and FacesBehaviors. On MyFaces 2.3, only FacesConverters works fine when trying to inject them, but FacesValidator and FacesBehavior annotations need to be updated to allow the same target as FacesConverters so we don't get any compile issues. I'm going to provide a patch for this.",MYFACES-4159
Spec issue for additional details: https://github.com/javaee/javaserverfaces-spec/issues/1300,MYFACES-4158
"Myfaces parses commented code from xhtml and throws property not found exception.
Myfaces should ignore commented code.",MYFACES-4157
"Myfaces 2.3 is not showing the FacesMessage after validation when ValidatorException is thrown. Same works with mojarra 2.2.

if (param.length() > 32) {
		          FacesMessage msg = new FacesMessage(""Username should not exceed 32"");
		          
		          throw new ValidatorException(msg);
		      }",MYFACES-4156
"For inputFile upload when multipart form is submitted the actionListener is not able to get the file.getSubmittedFileName() . It throws below exception with myfaces while its passed with mojarra.
Class org.apache.myfaces.shared.renderkit.html.util.HttpPartWrapper can not access a member of class org.apache.catalina.fileupload.PartItem with modifiers ""public""
	at sun.reflect.Reflection.ensureMemberAccess(Reflection.java:102)
	at java.lang.reflect.AccessibleObject.slowCheckMemberAccess(AccessibleObject.java:296)
	at java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:288)
	at java.lang.reflect.Method.invoke(Method.java:491)
	at org.apache.myfaces.shared.renderkit.html.util.HttpPartWrapper.getSubmittedFileName(HttpPartWrapper.java:96)
	at UserBean.save(UserBean.java:595)",MYFACES-4155
The browser (chrome) always show the previous page name while its on the current page rendered properly . This bug is already logged in jira not sure of the bug id. Not sure its browser problem  or jsf. Not checked this with mojarra also.,MYFACES-4154
h:selectOneRadio when rendered inside h:panelGroup which is right aligned stands out from the group towards the left since it gets rendered as html table. This is same behaviour for mojarra 2.2 also.,MYFACES-4153
,MYFACES-4152
"According to the JSF 2.3 spec section 5.6.3 ""CDI for EL Resolution"" - When @FacesConfig annotation is present in any of the managed beans, the ImplicitObjectELResolver is not present in the chain, instead CDI is used to perform EL resolution. However, when @FacesConfig is not present, we are still using CDI to perform EL resolution in the managed beans. 

On Mojarra, app does not start, throwing DeploymentExceptions similar to this: 

org.jboss.weld.exceptions.DeploymentException: WELD-001408: Unsatisfied dependencies for type FacesContext with qualifiers @Default
  at injection point [BackedAnnotatedField] @Inject private com.ibm.ws.jsf23.fat.beans.TestBean.facesContext
  at com.ibm.ws.jsf23.fat.beans.TestBean.facesContext(TestBean.java:0)",MYFACES-4151
as discussed on the mailing list,MYFACES-4150
"The JSF 2.3 specification (section 10.4.1.6) and also the VDLDocs state that the f:validateWholeBean has a ""disabled"" attribute.  However, when I set the attribute value to true (via my bean), the class-level validation still occurs. ",MYFACES-4149
"This are unused:

SAVE_STATE_WITH_VISIT_TREE_ON_PSS
CACHE_OLD_VIEWS_IN_SESSION_MODE
HANDLE_STATE_CACHING_MECHANICs
ERROR_HANDLER
",MYFACES-4148
"it's supported native in JSF 2.3 via @FacesConverter(managed=true) and @FacesValidator(managed=true)

As it's not portable either, we can just remove it instead of deprecation.",MYFACES-4147
"it was a prototype for the new search expressions
i think we should create a patch and create a spec issue
currently there is no need to leave it in MyFaces, we have to discuss some solutions first on spec level",MYFACES-4146
,MYFACES-4145
,MYFACES-4144
,MYFACES-4143
"When using f:convertDateTime with the new types like ""localDate"", and a ""long"" style is chosen, the wrong format is applied, in this case it is applying ""short"" as a style format.

A patch has been provided",MYFACES-4142
"The following spec issue does not look to be implemented in the MyFaces 2.3.0-beta: https://github.com/javaee/javaserverfaces-spec/issues/1436

The following text was added to the JSF 2.3 specification section 2.2.6 ""Render Response"":

If running on a container that supports Servlet 4.0 or later, after any dynamic component manipulations have been
completed, any resources that have been added to the UIViewRoot, such as scripts, images, or stylesheets, and any
inline images, must be pushed to the client using the Servlet Server Push API. All of the pushes must be started
before any of the HTML of the response is rendered to the client.",MYFACES-4141
"In case of an invalid viewId an NPE is thrown instead of InvalidViewIdException. This is reproducible using tobago-example-demo (NavigationTree /content/root-dummy.xhtml).

{noformat}
Caused by: java.lang.NullPointerException
        at org.apache.myfaces.application.ViewHandlerImpl.getViewParameterList(ViewHandlerImpl.java:459)
        at org.apache.myfaces.application.ViewHandlerImpl.getBookmarkableURL(ViewHandlerImpl.java:141)
        at javax.faces.application.ViewHandlerWrapper.getBookmarkableURL(ViewHandlerWrapper.java:134)
        at javax.faces.application.ViewHandlerWrapper.getBookmarkableURL(ViewHandlerWrapper.java:134)
        at org.apache.myfaces.tobago.internal.util.RenderUtils.generateUrl(RenderUtils.java:229)
        at org.apache.myfaces.tobago.internal.renderkit.renderer.CommandRendererBase.encodeBegin(CommandRendererBase.java:86)
        at javax.faces.component.UIComponentBase.encodeBegin(UIComponentBase.java:597)
        at javax.faces.component.UIComponentBase.encodeAll(UIComponentBase.java:527)
        at javax.faces.component.UIComponentBase.encodeAll(UIComponentBase.java:551)
        at org.apache.myfaces.tobago.internal.renderkit.renderer.TreeRenderer.encodeEnd(TreeRenderer.java:130)
        at javax.faces.component.UIComponentBase.encodeEnd(UIComponentBase.java:675)
        at javax.faces.component.UIData.encodeEnd(UIData.java:1811)
        at javax.faces.component.UIComponentBase.encodeAll(UIComponentBase.java:555)
        at javax.faces.component.UIComponentBase.encodeAll(UIComponentBase.java:551)
        at javax.faces.render.Renderer.encodeChildren(Renderer.java:95)
{noformat}",MYFACES-4140
"A new utility method called simpleClassForName(String type, boolean logException) can be added to the ClassUtils to not throw exception if the boolean is false. This method would be nice to have for our Websphere WebConfigProvider implementation.

A patch has been provided",MYFACES-4139
"When we register an ActionListener or PhaseListener globally via faces-config.xml, the instance that is created per listener is injectable, that is, we can do @Inject in the instance. These listeners are added to the injected bean storage list in the application map and as a result, we can call @PreDestroy and @PostConstruct on this scenario. 

On the other hand, when facelet elements <f:actionListener/> and <f:phaseListener/> are used, the instances that are created (per click for action listener or per view for phase listener) are not injectable. That is, we cannot do @Inject inside of these objects. And @PreDestroy and @PostConstruct are not invoked on them.

I supposes we want to have the same behavior in both cases.

To solve this issue, we can probably do a similar logic as what was done in FacesConfigurator that we call inject on the instance, and then store that in the injected bean storage list. We can add that logic in the ActionListenerHandler and PhaseListenerHandler classes after the instance is created.

// Code snippet
instance = (ActionListener) ReflectionUtil.forName(this.type).newInstance();
ExternalContext externalContext = faces.getExternalContext();

// Note that we have to make INJECTED_BEAN_STORAGE_KEY public
List<BeanEntry> injectedBeanStorage = (List<BeanEntry>)externalContext.getApplicationMap().get(FacesConfigurator.INJECTED_BEAN_STORAGE_KEY); 

InjectionProvider injectionProvider = InjectionProviderFactory.getInjectionProviderFactory(
                                                            externalContext).getInjectionProvider(externalContext);

Object creationMetaData = injectionProvider.inject(instance);
injectedBeanStorage.add(new BeanEntry(instance, creationMetaData));
injectionProvider.postConstruct(instance, creationMetaData);

But there is an issue when adding that. Every time we use <f:actionListener/> with type defined but no binding, a new instance is created on every button click, the same will happen with <f:phaseListener/>. These instances are added to the list of injected bean storage, and that reference will exist until app shuts down, creating a memory leak. So we need a way to remove those references from the list once we are out of scope. We might need a different list for this case.",MYFACES-4138
"Like
- boxing already boxed value
- getClass instead .class
- indexOf with character instead of string",MYFACES-4137
"When whole bean validation feature is used, the backing bean is implementing Serializable, and MyFaces jar is at the server level, a classloader issue exists and as a result, the copy of the object (bean) is null.",MYFACES-4136
"e.g. Base64 - will check other used parts

Collections:
* EmptyIterator (/)
* LRUMap (/)
* CollectionUtils.filter (/)
* Predicate (/)

Coded: (/)
* Hex (Could be replaced by javax/xml/bind/DatatypeConverter) (/)
* DecoderException (/)
* Base64 (/)

Digester:
* Digester (x)

BeanUtils:
* BeanUtils (x)
* PropertyUtils (x)",MYFACES-4135
"Should we update to commons-collection 4 for 2.3.0? If nobody objects, I can do the changes...",MYFACES-4134
"Currently the ViewState-ID provided by the user is deserialized via Java deserialization even when the {{javax.faces.STATE_SAVING_METHOD}} is set to {{server}} (the default).

The deserialization in this case is unecessary and most likely even slower than just sending the ViewState Id directly.
If a developer now disables the ViewState encryption by setting {{org.apache.myfaces.USE_ENCRYPTION}} to {{false}} (against the [MyFaces security advice|https://wiki.apache.org/myfaces/Secure_Your_Application]) he might have unintentionally introduced a dangerous remote code execution (RCE) vulnerability as described [here|https://www.alphabot.com/security/blog/2017/java/Misconfigured-JSF-ViewStates-can-lead-to-severe-RCE-vulnerabilities.html].

This has been discussed before on [Issue MYFACES-4021|https://issues.apache.org/jira/browse/MYFACES-4021].


",MYFACES-4133
"When a component search is done using an expression of this type ""id:keyword"", the resolved id is unexpected. 

I have provided a test app:
1) Deploy the app on tomcat
2) Drive a request: http://localhost:8080/ComponentSearchExpression/index.xhtml
3) When you check this response message: ""TEST resolveComponent with search expression 'form1:@parent' -> form1"" we should expect that the expression ""form1:@parent"" resolves to ""body"" and not ""form1"".
4) Another example in that same test: Check the page source and look for ""Body Child(1)"" which is an outputLabel, the search expression used in the for attribute is ""body:@child(1)"" and this should resolve to ""form1"" but instead it is resolving to ""body""

Tested this app using mojarra and it works as expected.",MYFACES-4132
"I started to test the <ui:repeat/> constraint feature of JSF 2.3 and it does not look to function on MyFaces. 

The changes required are for the following JSF 2.3 spec issue : https://github.com/javaee/javaserverfaces-spec/issues/1102

According to the spec the <ui:repeat/> tag will now have begin and end attributes. For instance:

<ui:repeat value=""#{bean.testList}"" var=""x"" begin=""0"" end=""9"" step=""1"">
                #{x}
</ui:repeat>

In the above example if testList had 10 items in it each entry containing a number 0-9 then we would expect the following output:

0123456789

If we changed it to:

<ui:repeat value=""#{bean.testList}"" var=""x"" begin=""5"" end=""9"" step=""1"">
                #{x}
</ui:repeat>

We would expect the following output:

56789
",MYFACES-4131
"CDI Replacement for @ManagedProperty does not work with primitives, 
ParameterizedType or arrays.

For example:

@Inject
@ManagedProperty(""#{testBean.list}"")
private List<String> listManagedProperty;

javax.faces.FacesException: java.lang.ClassNotFoundException: java.util.List<java.lang.String>
	at org.apache.myfaces.shared.util.ClassUtils.simpleClassForName(ClassUtils.java:218)
	at org.apache.myfaces.cdi.bean.DynamicManagedPropertyProducer.<init>(DynamicManagedPropertyProducer.java:58)
	at org.apache.myfaces.cdi.bean.ManagedPropertyExtension.afterBean(ManagedPropertyExtension.java:62)


@Inject
@ManagedProperty(""#{testBean.number}"")
private int numberManagedProperty;

javax.faces.FacesException: java.lang.ClassNotFoundException: int
	at org.apache.myfaces.shared.util.ClassUtils.simpleClassForName(ClassUtils.java:218)
	at org.apache.myfaces.cdi.bean.DynamicManagedPropertyProducer.<init>(DynamicManagedPropertyProducer.java:58)
	at org.apache.myfaces.cdi.bean.ManagedPropertyExtension.afterBean(ManagedPropertyExtension.java:62)

@Inject
@ManagedProperty(""#{testBean.stringArray}"")
private String[] stringArrayManagedProperty;

javax.faces.FacesException: java.lang.ClassNotFoundException: java.lang.String[]
	at org.apache.myfaces.shared.util.ClassUtils.simpleClassForName(ClassUtils.java:218)
	at org.apache.myfaces.cdi.bean.DynamicManagedPropertyProducer.<init>(DynamicManagedPropertyProducer.java:58)
	at org.apache.myfaces.cdi.bean.ManagedPropertyExtension.afterBean(ManagedPropertyExtension.java:62)


I've attached a patch. If no objections by Wednesday close of business I'll commit it.",MYFACES-4130
"When the @javax.faces.annotation.FacesConfig annotation is used in a CDI bean, the implicit EL Objects from JSF 2.3 spec section 5.9.2 don't work. This is because when that FacesConfig annotation is in a bean we remove the implicit EL resolver from the chain so we don't have any mechanism for CDI to do the resolution of the implicit objects.

Tested this on Mojarra and it works fine, with or without @FacesConfig annotation.

A sample app is provided. It can be deployed on tomcat:

1) Drive a request to: http://localhost:8080/ImplicitELObjects/index.jsf
2) You should see that Application: ApplicationScope: and Component: are empty since they cannot be resolved",MYFACES-4129
"The implementation of UIComponent.visitTree is correct but pushComponentToEL in UIData, UIForm, UINamingContainer and UIRepeat is called too late. 'component' expressions will fail in these components.   ",MYFACES-4128
"When @FlowMap is injected on a RequestScoped bean, and you try to use that object (which should be null since we are not inside of a flow), an unexpected exception is thrown. This was noted after JIRA issue: https://issues.apache.org/jira/browse/MYFACES-4126

Caused by: org.jboss.weld.exceptions.IllegalProductException: WELD-000052: Cannot return null from a non-dependent producer method: Producer for Producer Method [Map<Object, Object>] with qualifiers [@FlowMap @Any] declared as [[UnbackedAnnotatedMethod] @Produces @FlowMap @ApplicationScoped public org.apache.myfaces.cdi.faces.ApplicationScopeObjectProducer.getFlowMap()] declared on Managed Bean [class org.apache.myfaces.cdi.faces.ApplicationScopeObjectProducer] with qualifiers [@Any @Default]
	at org.apache.myfaces.cdi.faces.ApplicationScopeObjectProducer.getFlowMap(ApplicationScopeObjectProducer.java:73)
  StackTrace:
	at org.jboss.weld.bean.AbstractProducerBean.checkReturnValue(AbstractProducerBean.java:136)
	at [internal classes]
	at org.jboss.weld.context.AbstractContext.get(AbstractContext.java:96)
	at org.jboss.weld.bean.ContextualInstanceStrategy$DefaultContextualInstanceStrategy.get(ContextualInstanceStrategy.java:100)
	at [internal classes]
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at com.ibm.ws.jsf23.fat.beans.ELImplicitObjectBean.execute(ELImplicitObjectBean.java:163)



On Mojarra 2.3, we get a different exception which looks more appropriate.

org.jboss.weld.contexts.ContextNotActiveException: WELD-001303: No active contexts for scope type javax.faces.flow.FlowScoped
	org.jboss.weld.manager.BeanManagerImpl.getContext(BeanManagerImpl.java:623)
	org.jboss.weld.bean.ContextualInstanceStrategy$DefaultContextualInstanceStrategy.getIfExists(ContextualInstanceStrategy.java:89)
	org.jboss.weld.bean.ContextualInstance.getIfExists(ContextualInstance.java:63)
	org.jboss.weld.bean.proxy.ContextBeanInstance.getInstance(ContextBeanInstance.java:87)
	org.jboss.weld.bean.proxy.ProxyMethodHandler.getInstance(ProxyMethodHandler.java:125)
	org.jboss.weld.util.Map$1302817811$Proxy$_$$_WeldClientProxy.toString(Unknown Source)
	java.lang.String.valueOf(String.java:2994)
	java.lang.StringBuilder.append(StringBuilder.java:131)
	com.ibm.ws.jsf23.fat.beans.ELImplicitObjectBean.execute(ELImplicitObjectBean.java:163)",MYFACES-4127
"The implicit objects {code:java}#{flowScope}{code} annotated @FlowMap and {code:java}#{view}{code} which results in UIViewRoot cannot be injected using CDI.

For example:

@Inject
private UIViewRoot viewRoot;

@Inject
@FlowMap
private Map<Object, Object> flowMap;

The above results in the following errors respectively:

An exception occurred while starting the application ELImplicitObjectsViaCDI. The exception message was: com.ibm.ws.container.service.state.StateChangeException: org.jboss.weld.exceptions.DeploymentException: WELD-001408: Unsatisfied dependencies for type UIViewRoot with qualifiers @Default
  at injection point [BackedAnnotatedField] @Inject private com.ibm.ws.jsf23.fat.beans.ELImplicitObjectBean.viewRoot


An exception occurred while starting the application ELImplicitObjectsViaCDI. The exception message was: com.ibm.ws.container.service.state.StateChangeException: org.jboss.weld.exceptions.DeploymentException: WELD-001408: Unsatisfied dependencies for type Map<Object, Object> with qualifiers @FlowMap
  at injection point [BackedAnnotatedField] @Inject @FlowMap private com.ibm.ws.jsf23.fat.beans.ELImplicitObjectBean.flowMap

A patch is provided.


",MYFACES-4126
"We've found a problem where it seems that MyFaces is flushing output too early in the RENDER_RESPONSE PHASE. As a result the response is committed before we have a chance to handle an error in that phase. 

This is because the renderView method from FaceletViewDeclarationLanguage calls writer.endDocument() which ends up calling the flush() method from StateWriter. This commit behavior is different between 2.0 and 2.2.  It looks like a flush() was empty on 2.0, and now a call was added, which causes the issue we are seeing.

Here's a sample app:
1) Drive a request: localhost:9080/StateWriter/index.xhtml
2) You should be able to see in the logs that response was committed, so redirect to error.xhtml cannot be performed.",MYFACES-4125
"The <f:websocket> tag does not work due to a wrong object being used to get user properties map when the onOpen method from EndpointImpl is called. 

Currently, the WEBSOCKET_VALID key is stored in the user properties map of ServerEndpointConfig. When the onOpen method is called, it tries to retrieve the value stored for this key, but it is trying to get it from the wrong user properties map, that is, from the Session map, instead of getting it from the EndpointConfig user properties map.

A patch has been provided to fix this issue.",MYFACES-4124
"Currently the javax.faces.validator.BeanValidator.validate() method performs the following check:

        // Initialize Bean Validation.
        ValidatorFactory validatorFactory = createValidatorFactory(context);
        javax.validation.Validator validator = createValidator(validatorFactory, context);
        BeanDescriptor beanDescriptor = validator.getConstraintsForClass(valueBaseClass);
        if (!beanDescriptor.isBeanConstrained()) 
        {
            return;
        }
        
What we have experienced is that the call to ""validator.getConstraintsForClass(valueBaseClass)"" is very expensive on the initial call for a particular class. Due to this, the returned BeanDescriptor object is cached by the validator object in some implementations of BeanValidation.
To take advantage of this caching the same validator object needs to be reused. Currently the javax.faces.validator.BeanValidator.validate() creates a new javax.validation.Validator
object with each call. A new validator is necessary to get the correct message interpolator set based upon the current context (the locale is pulled from the FacesContext).
However, for the purposes of checking BeanDescriptor.isBeanConstrained(), the message interpolator does not matter. Therefore, caching a validator object for
the getConstraintsForClass() call should be safe, and greatly improve overall performance.

The only solution I've thought of so far requires an update to the JSF specification that allow for the validator to be stored in the application map under a spec defined key for the sole purpose of the call to getConstraintsForClass. This would be similar to obtaining a validatorFactory where it is stored on the application map under the spec defined VALIDATOR_FACTORY_KEY on the BeanValidator.

It would be interesting if we could come up with an implementation specific way to increase performance in this area or if the only way to fix this is by opening a JSF spec issue.",MYFACES-4123
"Auto Scroll doesn't work anymore for some environment. This is because auto scroll code assumes scroll position to be integer value where some browsers begin to return floating numbers. See org.apache.myfaces.shared.renderkit.html.HtmlJavaScriptUtils.getAutoScrollFunction where it parses scroll positions assuming they are integers, and if not, it ignores those values and prints out error ""Error getting y offset for autoscroll feature. Bad param value""",MYFACES-4122
"MyFaces 2.3 branch requires Java 8 and an updated maven-javadoc-plugin. The problem is the new versions are more strict to generate the javadoc, so we need to check the javadoc and fix its generation.

This is a blocker issue for beta release, since we cannot generate all artifacts without fix this.",MYFACES-4121
"While running OmniFaces IT suite on today's MyFaces 2.3.0-SNAPSHOT, I noticed a bug in ResourceHandler#isResourceRendered() during an ajax navigation back to the same view (more specifically, when FacesContext#setViewRoot() is invoked with a new UIViewRoot of same viewId during an ajax postback). 

During restore view phase, all already-rendered resources are correctly marked via markResourceRendered(). However, this is in turn stored as a transient UIViewRoot attribute. As a consequence, when the UIViewRoot gets changed during the very same ajax request, they are all lost, causing isResourceRendered() to incorrectly return false.

Basically, the markResourceRendered() of the previous view should be remembered for the next view when PartialViewContext#isAjaxRequest() returns true and isRenderAll() returns false.

In MyFaces 2.2 (and possibly earlier) the behavior of markResourceRendered() and isResourceRendered() was internally correctly implemented via org.apache.myfaces.RENDERED_SCRIPT_RESOURCES_SET context attribute.",MYFACES-4120
"Performing integration between JSF MyFaces 2.3 and CDI, I found that the PushContextFactoryBean class is missing the @Push annotation in the disposal method, that is, in the close() method. This results in the following exception:

The exception message was: com.ibm.ws.container.service.state.StateChangeException: org.jboss.weld.exceptions.DefinitionException: WELD-001424: The following disposal methods were declared but did not resolve to a producer method: 
  - Disposer method [[UnbackedAnnotatedMethod] public org.apache.myfaces.push.cdi.PushContextFactoryBean.close(@Disposes PushContext)]

Adding the @Push annotation to the close method should solve this issue.
",MYFACES-4119
"Implement new changes of javax.faces.ViewState update on ajax for multiple forms.
",MYFACES-4118
No default name for @FacesComponent with createTag=true and no tagName,MYFACES-4117
"Implement JDK 8 time support in f:convertDateTime.

See http://java.net/jira/browse/JAVASERVERFACES_SPEC_PUBLIC-1370
",MYFACES-4116
"Implement h:selectOneRadio ""group"" (distributed radio button)",MYFACES-4115
"Implemented, but not in HtmlOutcomeTargetButton",MYFACES-4114
Implement h:panelGrid rowClass,MYFACES-4113
Implement h:dataTable rowClass,MYFACES-4112
Implement h:column styleClass property. ,MYFACES-4111
Implement javax.faces.model.IterableDataModel as described in the spec,MYFACES-4110
Implement f:validateWholeBean as described in the spec javadoc. ,MYFACES-4109
Implement FaceletCache.setCacheFactories(...) and do the necessary changes to ensure it is called.,MYFACES-4108
"I've run into a case where, given an incorrect context parameter, a StringIndexOutOfBoundsException is thrown.  This occurs in WebSphere Liberty because the server normalizes the external context resource paths during app initialization.

For example, this parameter:

<context-param>
   <param-name>javax.faces.WEBAPP_RESOURCES_DIRECTORY</param-name>
   <param-value>/META-INF/resources</param-value>
</context-param>

throws:

java.lang.StringIndexOutOfBoundsException: String index out of  range: 35
at java.lang.String.substring(String.java:1377)
at org.apache.myfaces.shared.resource.ExternalContextResourceLoader.getResourceVersion(ExternalContextResourceLoader.java:81)

That parameter value is not allowed to have a leading slash.  However, the current exception is not very helpful, and can be easily avoided.  

I'll attach a patch which avoids the StringIndexOutOfBoundsException in getResourceVersion(); we already have this logic in getLibraryVersion().


",MYFACES-4107
"Implement ResourceHandler.markResourceRendered(...) and ResourceHandler.isResourceRendered(...) as described in the spec.

The current implementation is just move the code from ResourceUtils that uses a simple map, but it is relevant to see how this feature works with dynamic resources loaded from ajax requests.",MYFACES-4106
"See:

http://arjan-tijms.omnifaces.org/p/jsf-23.html#1260

Now we have already implemented getViews(...),  it is a good time to check how this one works.",MYFACES-4105
"It has been detected that the current versions checkstyle, shade and felix plugins does not support java 8 code style. The use of Stream class in JSF 2.3 requires to write some specific code, so an update of these plugins should be done.",MYFACES-4104
,MYFACES-4103
"There are some small changes in FlowHandler we need to check. I guess this was done some time ago, but this requires at least one junit test case.",MYFACES-4102
Implement f:importConstants (See UIImportConstants for details),MYFACES-4101
"There is an small bug in the activation of the default view pool in ViewPoolFactory class.

When org.apache.myfaces.CACHE_EL_EXPRESSIONS is set to ""alwaysRecompile"". ViewPool feature is enabled, but the default view pool applies to all views that does not have any view pool mapping in faces-config.xml, but only when oamEnableViewPool is set. 

What's happening right now is view pool is automatically enabled for all views by default, and this should be changed to the opposite.

The reason is ""alwaysRecompile"" is a EL caching feature by itself that does not require the view pool to work, but the view pool only works well when ""alwaysRecompile"" is set.

This part is quite confusing, but the fix needs to be done. It was discovered looking for a solution for  MYFACES-4099",MYFACES-4100
"It has been reported this scenario:

{code:xml}
<cc:implementation>
     <ui:include src=""#{cc.page}""/>
</cc:implementation>
{code}

In the included page:

{code:xml}
<ui:composition ...>
     <test:anoterCompositeComponent locale=""#{cc.someProperty}""/>
</ui:composition>
{code}

The problem right now is such kind of indirection has not been taken into account for #{cc} EL resolution algorithm. It is supposed that any resolution of #{cc} happens inside the composite component .xhtml and not indirectly through a template like is happening in the previous example.

This code leads to an StackOverflowException, because the algorithm cannot find the right composite component and by default it takes the closest one.

In MyFaces it is possible to pass the values as parameters of ui:include, but the point is it is better if we allow these example to work.

Please note this is not a bug. This looks like an improvement. The challenge here is expressions using #{cc} outside a composite component xhtml are not cacheable, so we need to study if this improvement can be done or not.",MYFACES-4099
,MYFACES-4098
"This is the one that when the annotation is present, just remove implicit object Resolver from EL chain",MYFACES-4097
,MYFACES-4096
,MYFACES-4095
,MYFACES-4094
,MYFACES-4093
"It looks like another CDI extension. See https://java.net/jira/browse/JAVASERVERFACES_SPEC_PUBLIC-1078 for details.

",MYFACES-4092
,MYFACES-4091
,MYFACES-4090
,MYFACES-4089
https://java.net/jira/browse/JAVASERVERFACES_SPEC_PUBLIC-807,MYFACES-4088
http://arjan-tijms.omnifaces.org/p/jsf-23.html#1135,MYFACES-4087
,MYFACES-4086
http://arjan-tijms.omnifaces.org/p/jsf-23.html#1428,MYFACES-4085
http://arjan-tijms.omnifaces.org/p/jsf-23.html#1424,MYFACES-4084
Some constructors like public ApplicationWrapper(Application wrapped) has been added. Check all wrappers and do the necessary changes.,MYFACES-4083
"I've just tried to set binding of a simple composite.
It don't works :-(
To manage the componentType methods from user page the only way is to use ViewRoot.findComponent .....
",MYFACES-4082
"h inputFile seems to be limited to a file size of around 1MB.  no error is thrown if file exceeds this size.  javascript console shows net::ERR_CONNECTION_RESET

i have tried changing these settings 
{code:xml}
<servlet>
		<servlet-name>Faces Servlet</servlet-name>
		<servlet-class>javax.faces.webapp.FacesServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
		<multipart-config>
			<max-file-size>20848820</max-file-size>
			<max-request-size>418018841</max-request-size>
			<file-size-threshold>1048576</file-size-threshold>
		</multipart-config>
	</servlet>
{code}
",MYFACES-4081
"Myfaces does not determine the correct client ID for h:select* components when '@this' keyword is used in the 'execute' attribute of f:ajax. Because of this the component is not executed.

Attached test case that demonstrates the issue.",MYFACES-4080
"The idea is implement the following annotations:

ApplicationMap
FlowMap
HeaderMap
HeaderValuesMap
InitParameterMap
RequestCookieMap
RequestMap
RequestParameterMap
RequestParameterValuesMap
SessionMap
ViewMap

The tricky part here is some objects are managed by JSF and others by CDI.",MYFACES-4079
"Discussing some stuff in the EG, I have notice that the view state algorithm now is well understood, and it could be useful to expose StateCache/StateCacheFactory as an SPI interface.

In that way, developers could override the default StateCacheFactory and provide its own view state saving solution.

No changes in code are required besides expose StateCacheFactory as an SPI service",MYFACES-4078
,MYFACES-4077
Issue inherited from TOMEE-1973,MYFACES-4076
"There is a proposal from PrimeFaces guys to include a search expression api to locate components in cases like f:ajax execute/render attributes, h:message for attribute and others.

The idea comes from here:

http://blog.primefaces.org/?p=2740

The idea is support a syntax like this in the attributes:

<clientId>
:<id>
<id>:<id>:<id>
@<keyword>:<id>
id:@<keyword>
@<keyword>(<param1>)
@<keyword>(<param1>,<param2>)

There is a patch for this I have been working over the last weeks, but still require more tests and update the components in MyFaces Core 2.3 to use the new API.",MYFACES-4075
"There is a situation where UIData with rowStatePreserved is not rendered. NullPointer exception is thrown in this case.

The example of such situation is:

we have index.xhtml with ui:include with src attribute as expression
        <h:form>
            <h:panelGrid columns=""1"" bodyrows=""3"">
                <p:commandLink action=""#{mainFrameBean.setMenu('iframe1.xhtml')}"" process=""@this"" update="":mainframe"">Frame 1</p:commandLink>
                <p:commandLink action=""#{mainFrameBean.setMenu('iframe2.xhtml')}"" process=""@this"" update="":mainframe"">Frame 2</p:commandLink>
                <p:commandLink action=""#{mainFrameBean.setMenu('iframe3.xhtml')}"" process=""@this"" update="":mainframe"">Frame 3</p:commandLink>
            </h:panelGrid>
        </h:form>

        <p:outputPanel id=""mainframe"">
            <ui:include src=""/frames/#{mainFrameBean.menuValue}"" />
        </p:outputPanel>

we have datagrid coded in iframe2.xhtml
<p:dataGrid var=""car"" value=""#{dataGridView.cars}"" columns=""3"" layout=""grid""
        rows=""12"" paginator=""true"" id=""cars"" rowStatePreserved=""true""
        paginatorTemplate=""{CurrentPageReport}  {FirstPageLink} {PreviousPageLink} {PageLinks} {NextPageLink} {LastPageLink} {RowsPerPageDropdown}""
        rowsPerPageTemplate=""6,12,16"">

        <f:facet name=""header"">
            Cars for Sale
        </f:facet>

        <p:panel header=""#{car.id}"" style=""text-align:center"">
            <h:outputText value=""#{car.year}"" />
        </p:panel>

    </p:dataGrid>
Then if you click ""Frame 2"" commandlink you get nullpointer returned in the partial response XML.

The problem is UIData incorrectly handles initial descendant state during the render response phase.

I`ve prepared testapp code in github as an exapmle:

https://github.com/slovi/myfaces_primefaces_uidata_issue

(link 4 does not work correctly with myfaces, but works well with Mojarra).

It seems the problem is that MyFaces sets initial state during the render response phase (in case of partial request), whilst Mojarra sets markInitialState during the build phase.

Jiri",MYFACES-4074
"xmlns:h=""http://xmlns.jcp.org/jsf/html"" <h:inputFile /> generally seems to work fine for uploading a file.  However the required attribute does not seem to be respected.  Setting it to true still allows the form to be submitted where no file has been selected for upload",MYFACES-4073
"following the tutorial outlined in this BalusC article http://balusc.omnifaces.org/2015/10/custom-layout-with-hselectoneradio-in.html it seems that when a:checked (xmlns:a=""http://xmlns.jcp.org/jsf/passthrough"") is set to null it still renders as checked.",MYFACES-4072
"Implement as described on:

https://java.net/jira/browse/JAVASERVERFACES_SPEC_PUBLIC-1423",MYFACES-4071
,MYFACES-4070
Implement f:websocket proposal as described in the latest javadoc.,MYFACES-4069
"Recently we ran into some problems getting a PrimeFaces ""p:ajax""-Component attached to a h:selectManyCheckbox or h:selectOneRadio.
The problem here is, that the specified ""listener""-action is not called.
We first thought this is a PF issue but in only started with version 2.2.10 of MyFaces. In Version 2.2.9 it worked just fine and propably a default jsf-ajax-listener won't work as well (not tested though).

E.g. we have this non-working code where the listener action is not called (no matter what event-type we specify):
{code:xml}
<h:selectManyCheckbox layout=""pageDirection"" value=""#{bean.mySelection}"">
	<f:selectItems value=""#{selectionItems}"" />
	<p:ajax process=""@this"" listener=""#{myBean.selectionChanged}"" update=""@form"" global=""false"" />
</h:selectManyCheckbox>
{code}

We're not sure if this should be fixed on PF side, but as mentioned before, the problem started with the switch to MyFaces 2.2.10.",MYFACES-4068
"When starting MyFaces 2.2.11 on Websphere 8.5.5.9 with a non-CDI application, we get the following stacktrace in FFDC incidents:

{code}
javax.enterprise.inject.UnsatisfiedResolutionException: The myapp.war module in the myapp-ear application is not CDI enabled. The CDI BeanManager is not available for applications that are not CDI enabled.
	at com.ibm.ws.webbeans.naming.BeanManagerObjectFactory.getObjectInstance(BeanManagerObjectFactory.java:123)
	at org.apache.aries.jndi.ObjectFactoryHelper.getObjectInstanceUsingObjectFactoryBuilders(ObjectFactoryHelper.java:351)
	at org.apache.aries.jndi.ObjectFactoryHelper.getObjectInstance(ObjectFactoryHelper.java:109)
	at org.apache.aries.jndi.OSGiObjectFactoryBuilder.getObjectInstance(OSGiObjectFactoryBuilder.java:62)
	at javax.naming.spi.NamingManager.getObjectInstance(NamingManager.java:312)
	at com.ibm.ws.naming.util.Helpers.processSerializedObjectForLookupExt(Helpers.java:993)
	at com.ibm.ws.naming.urlbase.UrlContextHelper.processBoundObjectForLookup(UrlContextHelper.java:182)
	at com.ibm.ws.naming.java.javaURLContextRoot.processBoundObjectForLookup(javaURLContextRoot.java:850)
	at com.ibm.ws.naming.urlbase.UrlContextImpl.lookupExt(UrlContextImpl.java:1454)
	at com.ibm.ws.naming.java.javaURLContextImpl.lookupExt(javaURLContextImpl.java:477)
	at com.ibm.ws.naming.java.javaURLContextRoot.lookupExt(javaURLContextRoot.java:485)
	at com.ibm.ws.naming.java.javaURLContextRoot.lookup(javaURLContextRoot.java:370)
	at org.apache.aries.jndi.DelegateContext.lookup(DelegateContext.java:161)
	at javax.naming.InitialContext.lookup(InitialContext.java:423)
	at javax.naming.InitialContext.doLookup(InitialContext.java:296)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:95)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:56)
	at java.lang.reflect.Method.invoke(Method.java:620)
	at org.apache.myfaces.webapp.AbstractFacesInitializer.lookupBeanManagerFromJndi(AbstractFacesInitializer.java:663)
	at org.apache.myfaces.webapp.AbstractFacesInitializer.initCDIIntegration(AbstractFacesInitializer.java:580)
	at org.apache.myfaces.webapp.AbstractFacesInitializer.initFaces(AbstractFacesInitializer.java:170)
	at org.apache.myfaces.webapp.StartupServletContextListener.contextInitialized(StartupServletContextListener.java:121)
	at com.ibm.ws.webcontainer.webapp.WebApp.notifyServletContextCreated(WebApp.java:1709)
	at com.ibm.ws.webcontainer.webapp.WebAppImpl.initialize(WebAppImpl.java:414)
	at com.ibm.ws.webcontainer.webapp.WebGroupImpl.addWebApplication(WebGroupImpl.java:88)
	at com.ibm.ws.webcontainer.VirtualHostImpl.addWebApplication(VirtualHostImpl.java:170)
	at com.ibm.ws.webcontainer.WSWebContainer.addWebApp(WSWebContainer.java:904)
	at com.ibm.ws.webcontainer.WSWebContainer.addWebApplication(WSWebContainer.java:789)
	at com.ibm.ws.webcontainer.component.WebContainerImpl.install(WebContainerImpl.java:427)
	at com.ibm.ws.webcontainer.component.WebContainerImpl.start(WebContainerImpl.java:719)
	at com.ibm.ws.runtime.component.ApplicationMgrImpl.start(ApplicationMgrImpl.java:1178)
	at com.ibm.ws.runtime.component.DeployedApplicationImpl.fireDeployedObjectStart(DeployedApplicationImpl.java:1383)
	at com.ibm.ws.runtime.component.DeployedModuleImpl.start(DeployedModuleImpl.java:639)
	at com.ibm.ws.runtime.component.DeployedApplicationImpl.start(DeployedApplicationImpl.java:972)
	at com.ibm.ws.runtime.component.ApplicationMgrImpl.startApplication(ApplicationMgrImpl.java:777)
	at com.ibm.ws.runtime.component.ApplicationMgrImpl$5.run(ApplicationMgrImpl.java:2197)
	at com.ibm.ws.security.auth.ContextManagerImpl.runAs(ContextManagerImpl.java:5486)
	at com.ibm.ws.security.auth.ContextManagerImpl.runAsSystem(ContextManagerImpl.java:5612)
	at com.ibm.ws.security.core.SecurityContext.runAsSystem(SecurityContext.java:255)
	at com.ibm.ws.runtime.component.ApplicationMgrImpl.start(ApplicationMgrImpl.java:2202)
	at com.ibm.ws.runtime.component.CompositionUnitMgrImpl.start(CompositionUnitMgrImpl.java:435)
	at com.ibm.ws.runtime.component.CompositionUnitImpl.start(CompositionUnitImpl.java:123)
	at com.ibm.ws.runtime.component.CompositionUnitMgrImpl.start(CompositionUnitMgrImpl.java:378)
	at com.ibm.ws.runtime.component.CompositionUnitMgrImpl.access$500(CompositionUnitMgrImpl.java:126)
	at com.ibm.ws.runtime.component.CompositionUnitMgrImpl$CUInitializer.run(CompositionUnitMgrImpl.java:984)
	at com.ibm.wsspi.runtime.component.WsComponentImpl$_AsynchInitializer.run(WsComponentImpl.java:502)
	at com.ibm.ws.util.ThreadPool$Worker.run(ThreadPool.java:1881)
{code}",MYFACES-4067
"I've come accross a concurrency issue in org.apache.myfaces.flow.cdi.FlowBuilderFactoryBean.getFlowDefinitions().  If multiple applications (with programmatic flows) are starting up simultaneously, it's possible that the two responsible threads can concurrently modify the shared object FlowBuilderFactoryBean.flowDefinitions.  That can result in the flowDefinitions for one of the applications not being processed.  

Synchronizing the getFlowDefinitions() method is the simplest fix for this issue.",MYFACES-4066
"java.lang.StringIndexOutOfBoundsException: String index out of range: 0
	at java.lang.String.charAt(Unknown Source)
	at org.apache.myfaces.application.ResourceHandlerImpl.createResource(ResourceHandlerImpl.java:118)
	at javax.faces.application.ResourceHandlerWrapper.createResource(ResourceHandlerWrapper.java:47)
	at org.apache.myfaces.custom.captcha.CAPTCHAResourceHandlerWrapper.createResource(CAPTCHAResourceHandlerWrapper.java:83)
	at org.apache.myfaces.tomahawk.resource.UncompressedResourceHandlerWrapper.createResource(UncompressedResourceHandlerWrapper.java:109)
	at org.apache.myfaces.tomahawk.resource.UncompressedResourceHandlerWrapper.createResource(UncompressedResourceHandlerWrapper.java:61)
	at org.apache.myfaces.tomahawk.resource.UncompressedResourceHandlerWrapper.createResource(UncompressedResourceHandlerWrapper.java:55)
	at javax.faces.application.ResourceHandlerWrapper.createResource(ResourceHandlerWrapper.java:35)
	at org.apache.myfaces.application.ResourceHandlerImpl.handleResourceRequest(ResourceHandlerImpl.java:568)
	at javax.faces.application.ResourceHandlerWrapper.handleResourceRequest(ResourceHandlerWrapper.java:59)
	at org.apache.myfaces.custom.captcha.CAPTCHAResourceHandlerWrapper.handleResourceRequest(CAPTCHAResourceHandlerWrapper.java:212)
	at javax.faces.application.ResourceHandlerWrapper.handleResourceRequest(ResourceHandlerWrapper.java:59)
	at javax.faces.application.ResourceHandlerWrapper.handleResourceRequest(ResourceHandlerWrapper.java:59)
	at org.primefaces.application.resource.PrimeResourceHandler.handleResourceRequest(PrimeResourceHandler.java:87)
	at javax.faces.webapp.FacesServlet.service(FacesServlet.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:291)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.myfaces.webapp.filter.ExtensionsFilter.doFilter(ExtensionsFilter.java:357)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:217)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:142)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:616)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:518)
	at org.apache.coyote.ajp.AbstractAjpProcessor.process(AbstractAjpProcessor.java:844)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:673)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1500)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1456)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)",MYFACES-4065
"In EL3.0 your may construct literal sets and maps using curly braces,
e.g. ""#{ { 1, 2, 3 } }"" for a set or ""#{ { 'a':1, 'b':2 } }"" for a map.
Unfortunately myfaces cuts the EL expression on the first occurence
of character '}', which is wrong in this case. It happens in ELText.java,
caused by method ""findVarLength"". Here is patch that fixes this:

--- impl/src/main/java/org/apache/myfaces/view/facelets/el/ELText.java	2016-04-06 14:55:02.000000000 +0200
+++ impl/src/main/java/org/apache/myfaces/view/facelets/el/ELText.java	2016-09-15 12:48:50.163853337 +0200
@@ -699,6 +699,7 @@
         int len = ca.length;
         char c = 0;
         int str = 0;
+        int nest = 0;
         while (i < len)
         {
             c = ca[i];
@@ -717,7 +718,15 @@
                     str = c;
                 }
             }
-            else if (str == 0 && ('}' == c))
+            else if ('{' == c && str == 0)
+            {
+                ++nest;
+            }
+            else if ('}' == c && str == 0 && nest > 1)
+            {
+                --nest;
+            }
+            else if (str == 0 && ('}' == c && nest == 1))
             {
                 return i - s + 1;
             }
",MYFACES-4064
"Create a JSF portlet using facelets flow using navigation-handler in faces-config. Define resource library contracts for various resources loaded in those facelets. Run the application to see contracts successfully resolved for initial view facelet. However, for all the later requests where facelet/view gets loaded from navigation-case defined, we see that contracts resources don't get resolved and resource not found error is thrown for those. The resource is tried to be resolved from the base default location and not in contracts.",MYFACES-4063
"The error message is 
{code}
...
[DEBUG] Processing Velocity for template META-INF/maven/site.vm on
compatibility.apt
[ERROR] Parser Exception: META-INF/maven/site.vm
org.apache.velocity.runtime.parser.ParseException: Encountered ""1.0"" at
line 357, column 51.
Was expecting one of:
    <RPAREN> ...
    <WHITESPACE> ...
    ""-"" ...
...

im META-INF/maven/site.vm aus myfaces-site-skin-4-SNAPSHOT.jar sthet in
Zeile 357:
        #set ( $documentHeader = ""<?xml version=\""1.0\""
encoding=\""UTF-8\""?>"" )
{code}

The problem is, that with current plugins in velocity the Char "" inside of """" must be escaped with doube "", not with a backslash.",MYFACES-4062
There are some plugins out there that are far easier to deploy webapps. It is a good idea to update the current archetypes to use them.,MYFACES-4061
"The required attribute of h:inputFile tag doesn't work when set to ""true"" and no file is attached. The action will be executed regardless of the value of the required attribute. 

Example:
<h:form enctype=""multipart/form-data"">
     <h:messages />
     <h:inputFile value=""#{indexBean.uploadFile}"" required=""true"" />
     <h:commandButton value=""TEST"" action=""#{indexBean.execute()}"" />
</h:form>

An error message should be expected/displayed when the required attribute is set to true, and no file is attached. Instead it is executing the action without attachments.
",MYFACES-4060
"In a very simple way, here is a composite:

{code}
<ui:component 
    xmlns=""http://www.w3.org/1999/xhtml""
    xmlns:f=""http://xmlns.jcp.org/jsf/core""
    xmlns:h=""http://xmlns.jcp.org/jsf/html""
    xmlns:cc=""http://xmlns.jcp.org/jsf/composite""
    xmlns:ui=""http://xmlns.jcp.org/jsf/facelets""
    xmlns:c=""http://xmlns.jcp.org/jsp/jstl/core""
    xmlns:fn=""http://xmlns.jcp.org/jsp/jstl/functions""
    xmlns:p=""http://primefaces.org/ui""
>
    <cc:interface>
        <cc:attribute name=""value"" />
        <cc:attribute name=""required"" />
    </cc:interface>

    <cc:implementation>
        <p:calendar id=""calendar"" value=""#{cc.attrs.value}"" required=""#{cc.attrs.required}"" showOn=""button""/>  
    </cc:implementation>
</ui:component>
{code}

Here how I use it:
{code}
<p:outputLabel for=""rat:calendar"" value=""Hello"" />
<my:calendar id=""rat"" required=""true""/>
{code}

A required=true icon should be displayed but it does not. In OutputLabelRenderer looks fine, except in line 118, input.isRequired() returns false while I explicitly set true. It is not related to Primefaces but looks like a JSF impl problem (I'm using Myfaces 2.2.10)",MYFACES-4059
"Getting ProtectedViewException while accessing a protectedview/xhtml, while checking the OriginHeader for appContextPath..

SO reference : http://stackoverflow.com/questions/38308431/jsf-2-2-protectedviewexception-due-to-origin-header-and-appcontextpath-mismatch

Any help is much appreciated.

Does the ""Origin"" request-header is supposed to have the appContextPath in the path/urlInfo ?
",MYFACES-4058
"1. Have this CDI bean with JSF CDI view scope.

{code}@Named @ViewScoped
public class Bean implements Serializable {}{code}

2. Have this minimal page mapped to JSF servlet.

{code}<!DOCTYPE html>#{bean}{code}

3. Open this page in a server using OpenWebBeans as CDI implementation (TomEE for example) and have session persistence enabled (already default in TomEE).

4. Restart the server.

5. On shutdown below warning is logged.

{code}
WARNING: Cannot serialize session attribute openWebBeansSessionContext for session 34F40C623600849F43AD2153F2EB75D8
java.io.NotSerializableException: org.apache.webbeans.container.BeanManagerImpl
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1184)
	...{code}

6. After restart below exception is thrown during deserializing session (stack trace comes from TomEE 7.0.0).

{code}java.lang.NullPointerException
	at org.apache.webbeans.proxy.NormalScopeProxyFactory.createNormalScopeProxy(NormalScopeProxyFactory.java:121)
	at org.apache.webbeans.intercept.NormalScopedBeanInterceptorHandler.readResolve(NormalScopedBeanInterceptorHandler.java:125)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	...
{code}

Root cause appears to be that the serializable {{org.apache.myfaces.cdi.view.ViewScopeContextualStorage}} class has a {{BeanManager}} property while the interface is not declared serializable.

Related: https://issues.apache.org/jira/browse/OWB-1123",MYFACES-4057
"I have an Apache Shiro interceptor setup that validates user actions, and if user is not yet authenticated it throws an {{UnauthenticatedException}}. As the actions validated may be ajax actions, I also used the Omnifaces {{FullAjaxExceptionHandler}} (which is not where the bug is coming from, it works just as expected).

So I have setup in {{web.xml}} an error-page for the exception, so it redirects to the login page when a UnauthenticatedException is thrown.:

{quote}
    <error-page>
        <exception-type>org.apache.shiro.authz.UnauthenticatedException</exception-type>
        <location>/login.xhtml</location>
    </error-page>
{quote}

So when I try to make an action that requires authentication, my interceptor manages it and throws and {{UnauthenticatedException}}, then omnifaces {{FullAjaxExceptionHandler}} handles the exception, looking up the error page assigned for the exception which is {{/login.xhtml}} and  updates the {{ViewRoot}} with the following response:

{quote}
<?xml version=""1.0"" encoding=""UTF-8""?>
<partial-response id=""j_id__v_0""><changes>

<update id=""javax.faces.ViewRoot""><![CDATA[<!DOCTYPE html>
  <html xmlns=""http://www.w3.org/1999/xhtml""><head id=""j_id_3"">

     <!-- Ommited -->
     <title>Entrar</title></head>*<body class=""loginbody"">*
     <!-- Ommited  -->

</changes></partial-response>
{quote}

Now please check that the final HTML rendered from the ViewRoot partial-response update does not have the {{loginbody}} class:

{quote}
<!-- ommited -->
*<body>*
        <div class=""Wid25 MarAuto DispBlock OvHidden Responsive100"">
<!-- ommited -->
{quote}

As the partial-response originally had the class but the view rendered does not have it, I assume that this is a MyFaces issue.

Thank you so much for your great work, I love MyFaces.
",MYFACES-4056
"I have localized JSF error and information messages as described in JSR-344 Section ""2.5.2.4 Localized Application Messages"", which defines how applications may provide own JSF messages,  and prepared resource bundle ""javax.faces.Messages"". In _faces-config.xml_ I set:
{{<message-bundle>javax.faces.Messages</message-bundle>}}.

But these resources are not always used, when value validation in UI input component fail. Consider the following snippet which illustrates the issue. It contains 2 input text fields, the first one has ""required"" attribute. The second field is validated using Bean Validation framework:
{code:xml}
<h:form id=""form"">
    <p:panel header=""Validate"">
        <h:panelGrid columns=""3"" cellpadding=""5"">
            
            <!-- JSF validation -->
            <h:outputLabel for=""client1"" value=""JSF Validation"" />
            <h:inputText id=""client1"" label=""JSF Validation"" value=""#{validationModel.requiredClient}"" required=""true""/>
            <h:message for=""client1"" display=""both"" errorStyle=""color: red"" />
            
            <!-- Bean validation -->
            <h:outputLabel for=""bean0"" value=""Bean Validation"" />
            <h:inputText id=""bean0"" label=""Bean Validation"" value=""#{validationModel.requiredAnnotated}"" />
            <h:message for=""bean0"" display=""both"" errorStyle=""color: red"" />
        </h:panelGrid>

        <!-- submit without ajax -->
        <h:commandButton value=""Save"" action=""#{validationModel.save}"" />

        <!-- submit with ajax -->
        <h:commandButton value=""Save (ajax)"" actionListener=""#{validationModel.save}"" >
            <f:ajax execute=""form"" render=""form""/>
        </h:commandButton>
    </p:panel>
</h:form>
{code}

The backing bean:
{code:java}
@Named @RequestScoped
public class ValidationModel implements DecisionProcessable {

    @NotNull @Length(min = 1, max = 64)
    private String requiredAnnotated;

    private String requiredClient;

    // getters and setters

    public void save() {
        System.out.println(this);
    }
}
{code}

If I click the button ""Save"", which performs full submit, I get localized error message. If I click ""Save (ajax)"", which performs partial submit with ajax, the JSF validation error message is not localized.

I did some debugging and noticed that validation logic uses {{_MessageUtils}} class to obtain resource bundle for the messages, but this utility class uses FacesContext class ClassLoader to find resource bundle. The problem is that this ClassLoader does not always refer to web application classloader. When the partial submit is performed, it refers to Tomcat common classloader, which surely does not see web application resources.

The fix probably would be the same as implemented in {{MessageUtils}}, which uses Thread.currentThread().getContextClassLoader() on ResourceBundle (MYFACES-338).",MYFACES-4055
"I'm one of those who often gets unexplainable ViewExpiredExceptions. Now, I analysed them with a minimal ""helloworld"" test project. I called the webapp ""jsf_test"". The Exceptions occurred when I displayed a form in the browser and clicked it within a few seconds.

In the web console of firefox, I could see that the session cookie was set with the path /jsf%5ftest, while the other cookies (e.g. oam.Flash.RENDERMAP.TOKEN) were set with the path /jsf_test. It looks like firefox does not send the session cookie with the next request, while  chromium ignores the difference. You can see in the tomcat manager webapp that the session count increases when you reload the page.

I also noticed that the issue does not occur on every deployment / tomcat restart. It looks like the webapp name is stored internally during initialization, and depending on little timing variations (race condition ?), it is either initialized to the escaped or the unescaped value. Tomcat manager always displays the unescaped name.
Among my collegues, some are always affected, some occasionally, and some never.

After renaming the webapp to ""jsftest"", the Exceptions and session count increments were gone.
The issue also occurs with a minus in the name, like ""jsf-test"".

Unfortunately, my real-life productive project has an underscore in it's name too, but as many users have bookmarked it, I can't just rename it.


",MYFACES-4054
"[JAVASERVERFACES_SPEC_PUBLIC-1069|https://java.net/jira/browse/JAVASERVERFACES_SPEC_PUBLIC-1069] introduced new requirements for compatibility with portlet environments. This resulted in an update to section 2.2.6.1 of the Spec titled ""Render Response Partial Processing"".",MYFACES-4053
"Consider:
{code}
<h:link value=""link"">
    <f:param name=""p"" value=""foo""/>
    <f:param name=""p"" value=""bar""/>
</h:link>
{code}
MyFaces 2.2.10 renders only last one in link URL instead of both.",MYFACES-4052
"The severity of messages is always set (overwritten) to SEVERITY_ERROR when a ValidatorException is thrown during validation.  In org.apache.myfaces.view.facelets.compiler._ComponentUtils I see that we always call 

facesMessage.setSeverity(FacesMessage.SEVERITY_ERROR);

when processing a ValidatorException.  This might make sense if we're assuming that all faces messages default to some other severity, but it doesn't seem right to me that we're overwriting user-set message severities.  For example, given the following custom validator:

	public void validate(FacesContext context, UIComponent component, Object value) {
		if (value == null) {
			List<FacesMessage> messageList = new ArrayList<>();
			messageList.add(new FacesMessage(FacesMessage.SEVERITY_INFO,
				""ValidatorException#SEVERITY_INFO"", ""ValidatorException#SEVERITY_INFO""));
			throw new ValidatorException(messageList);
		}
	}

The severity of the custom message will always be set to SEVERITY.ERROR.  I don't see much guidance in the spec on this, but Mojarra behaves differently - it does not overwrite custom FacesMessage severities.",MYFACES-4051
"Custom validators are not invoked for selectManyCheckbox component, if the component has no selections made; this can be an issue if we want to handle the null/empty case in a validator.  The following context params address this case:

	<context-param>
		<param-name>javax.faces.INTERPRET_EMPTY_STRING_SUBMITTED_VALUES_AS_NULL</param-name>
		<param-value>true</param-value>
	</context-param>
	
	<context-param>
	    <param-name>javax.faces.VALIDATE_EMPTY_FIELDS</param-name>
	    <param-value>true</param-value>
	</context-param>

But these params do not affect the behavior here.  Based on my understanding of the spec, it seems that this behavior should be changed.",MYFACES-4050
"WebContainer threads are hanging due to a thread safety issue in the underlying JSF 2.0 code. A non thread-safe WeakHashMap is being used in the getRelativePath method of the DefaultFacelet class. Apache JSF 2.0 code is not synchronizing on their usage of WeakHashMap in
org.apache.myfaces.view.facelets.impl.DefaultFacelet.getRelativePath. 

In order to make the code thread-safe Collections.synchronizedMap method needs to be used.

A patch has been provided.",MYFACES-4049
"In JSF 2.1, it was introduced an interface called TransientStateHolder. According to the javadoc, the idea of this API is:

""... This interface is implemented by classes that need to save state that is expected to be available only within the scope of the current request. ...""

This API is used in very, very few cases (only used once in JSF 2.2 core to hold FaceletState temporally), but in portlet case, it is expected that when you call saveState(...) over the component on a phase different than render response phase, this transient state should be saved with the component state too.

This behavior was not originally thought (because in the JSF EG we never went that far to consider portlets) but it has a lot of sense, and in the ""spirit"" to make things just work, I think we need a new issue for this behavior too. ",MYFACES-4048
"Consider the following scenario:

Bean1:
@Named
@ViewScoped (javax.faces.view.ViewScoped)

Bean2:
@ManagedBean
@ViewScoped (javax.faces.bean.ViewScoped)

When the session is invalidated the org.apache.myfaces.cdi.impl.CDIManagedBeanHandlerImpl.onSessionDestroyed() method is invoked. Here, MyFaces destroys all of the javax.faces.view.ViewScoped @Named beans and @PreDestroy is invoked on these beans. However, the @ManagedBean /ViewScoped bean does not have its @PreDestroy invoked.

I believe this is because the assumption was made that if an Application is CDI enabled it will contain all CDI @Named beans and not any @ManagedBeans. There is also the DefaultViewScopeHandler which is not yet implemented for ""onSessionDestroyed"" that would be used in the case when CDI is not enabled, that is when only @ManagedBeans are contained in the application.

I believe it is possible to update the CDIManagedBeanHandlerImpl to be aware of the ViewScoped ManagedBeans and destroy them onSessionDestroy first by just getting the viewMap and iterating over the entries as we do when the PreDestroyViewMapEvent is processed.

I'd like to use this issue to resolve the problem in CDIManagedBeanHandlerImpl as well as implement onSessionDestroy in DefaultViewScopeHandler.java

",MYFACES-4047
"Since 2.2 it is possible to call vdl.createComponent and pass an ui:include in this way:

{code:java}

            Map<String, Object> attributes = new HashMap<String, Object>();
            attributes.put(""src"", ""/addSimpleIncludeVDL_1_1.xhtml"");
            UIComponent component = vdl.createComponent(facesContext, 
                ""http://java.sun.com/jsf/facelets"", 
                ""include"", attributes);

{code}

It works but there is no way to pass parameters as described in:

http://stackoverflow.com/questions/35178151/programmatically-include-xhtml-fragment-in-myfaces

The question is how to pass ui:param components. Maybe use vdl.createComponent and pass ui:param, but note ui:param does not have an underlying component, because it is a facelet tag, but a standard notation for this case could be useful.",MYFACES-4046
"Checking some documentation of JSF 2.3, I noticed the following text:

""... Because Flow instances are immutable, yet the flow stack is per-user, implementations must make allowance for flow scoped data (managed beans declared to be FlowScoped and data stored in the Map returned by getCurrentFlowScope()) to be fully re-entrant. For example, consider an application with two flows, A and B, each with a single FlowScoped bean MyBeanA and MyBeanB, respectively. Entry into flow A causes MyBeanA to become active. Calling from A into B causes MyBeanB to become active. Calling back into A causes a new instance of MyBeanA to become active, rather than reactivating the earlier instance of MyBeanA. ...""

I remember this condition was discussed at some point in time, but I'm not sure if the current implementation supports that scenario, so it is better to take a look at the code.",MYFACES-4045
"If we have multiple flows with the same IDs and definingDocumentIds, we won't behave as expected: only one flow will actually be used, but no error or warning to that effect is emitted.

Consider if we have two apps in the same EAR, each defining flows with an ID of ""sample-flow"", like this:

        final String flowId = ""sample-flow"";
        flowBuilder.id("""", flowId);

Per the JSF spec, this creates ambiguity:

11.4.3.1
Defining Flows
Flows are defined using the <flow-definition> element. This element must have an id attribute which uniquely
identifies the flow within the scope of the Application Configuration Resource file in which the element appears. To
enable multiple flows with the same id to exist in an application, the <faces-config><name> element is taken to
be the definingDocumentId of the flow. If no <name> element is specified, the empty string is taken as the value
for definingDocumentId.

In this case, app1 might define some kind of initializer with the flow, while app2 doesn't.  In that case, app2 might (incorrectly) end up trying to use an initializer that was intended for app1.  A developer might see issues resulting from the initializer being called from the wrong app, but it wouldn't be clear that the wrong flow had been entered (due to ambiguity).

Mojarra has something like this:
Caused by: java.lang.IllegalStateException: Flow with id \""sample-flow\"" and definingDocumentId \""\"" already exists.""}}

I think that MyFaces should emit some kind of similar warning/error in the given scenario.",MYFACES-4044
"We use priemfaces growl which is an component where message can be displayed. This component  is marked with the interface AutoUpdatable, which means that these components do not need to be included in response update ids explicitly and can be added to the response automatically. This happens in the class *org.primefaces.event.AutoUpdateComponentListener* where a *SystemEvent* is observed. On postback request the growl will be added to the response update ids if configured to do so.

The problem is, that this listener is only called ones on initial get request and not on the following postback request if partial-state-saving is turned off. If partial-state-saving is turned on, then the listener gets called on postback request too.

It seems that the PostAddToViewEvent is not fired on postback request if PartialStateSaving is turned off but will be fired if turned on.

See the following link for an running example:
https://github.com/Curecomp/myfaces-issues/tree/master/2.2.9/disabled_psv_post_add_view_event_not_fired",MYFACES-4043
"In version 2.1 org.apache.myfaces.ee6.MyFacesContainerInitializer was updated to scan for faces-config.xml resources in applications JARs during startup, as part of the process to add a FacesConfig in onStartup().  This is a very expensive scan, since we have to iterate over every file in every jar on the app classpath.  

This scan is not completely necessary: in the spec we have:
Section 11.4.2 “Application Startup Behavior”
Implementations may check for the presence of a servlet-class definition of class javax.faces.webapp.FacesServlet in the web application deployment descriptor as a means to abort the configuration process and reduce startup time for applications that do not use JavaServer Faces Technology.

Which I interpret to mean that skipping checking the app jars at init time - for the purpose of adding a dynamic FacesServlet - is valid.  Given the performance hit for the scan, I think adding a context param to disable the scan would be worthwhile.  Something like:
org.apache.myfaces.INITIALIZE_SKIP_JAR_FACES_CONFIG_SCAN

Would this be worthwhile for others?",MYFACES-4042
"DefaultFaceletsStateManagementStrategy.saveView(...) contains some lines of code that do this:

{code:java}
                states = new HashMap<String, Object>();

                faceletViewState = view.getAttributes().get(ComponentSupport.FACELET_STATE_INSTANCE);
                if (faceletViewState != null)
                {
                    ((Map<String, Object>)states).put(ComponentSupport.FACELET_STATE_INSTANCE,
                            UIComponentBase.saveAttachedState(context, faceletViewState));
                    //Do not save on UIViewRoot
                    view.getAttributes().remove(ComponentSupport.FACELET_STATE_INSTANCE);
                }
{code}

The problem is FaceletState is removed to be serialized, but FaceletState is also used for EL expressions (see FaceletStateValueExpression), so every EL expression that is evaluated when the state is being saved that depends on this map throws NullPointerException.

The problem has been experienced by other users before (see MYFACES-4023 for details), but in the case reported here (treeTable component and dynamic columns) there is no other possible workaround than to preserve FaceletState object so the EL can be properly evaluated.

The solution is use the transient state helper map to hold FaceletState and change FaceletStateValueExpression to scan for this condition.",MYFACES-4041
"https://java.net/jira/browse/JAVASERVERFACES-4115 also applies to MyFaces.

{code}
<h:form>
    <h:inputText id=""foo"" />
    <h:commandLink value=""test"">
        <f:ajax execute=""foo"" />
        <f:param name=""execute"" value=""bar"" />
    </h:commandLink>
</h:form>
{code}

In MyFaces, the actual behavior is equal to <f:ajax execute=""bar""> and request.getParameter(""execute"") returns null.",MYFACES-4040
"We have a phaseListener that is setup against InvokeApplication phase - so when there is a exception in beforePhase, we set the renderResponse on facesContext, thinking that it will skip further processing and will not broadcast the events on InvokeApplication, but it does.

Class: LifecycleImpl - line # 191 onwards --
{code:title=LifecycleImpl.java|borderStyle=solid}
if (shouldRenderResponse(context, currentPhaseId, true))
            {
                skipFurtherProcessing = true;
            }

            if (executor.execute(context))
            {
                return true;
            }
{code}

Now the above code  clearly doesn't skip the executor.execute(context) even when renderResponse was executed. 

But Mojarra 2.2.11 - behaves differently - it will skip if renderResponse is called in beforePhase.

com.sun.faces.lifecycle.Phase - line # 99 onwards:
{code:title=Phase.java|borderStyle=solid}
handleBeforePhase(context, listeners, event);
            if (!shouldSkip(context)) {
                execute(context);
            }
{code}

""shouldSkip"" method impl in Phase.java
{code:title=Phase.java|borderStyle=solid}
  private boolean shouldSkip(FacesContext context) {
        if (context.getResponseComplete()) {
            return (true);
        } else if (context.getRenderResponse() &&
                   !PhaseId.RENDER_RESPONSE.equals(this.getId())) {
            return (true);
        } else {
            return (false);
        }

    }
{code}

Now is Mojarra wrong or Myfaces implementation wrong? In cases like this what should be the mechanism to skip the events if render response is set on the before phase.",MYFACES-4039
"According to section 7.4.2.3 'Requirements for Exiting a Flow' of the JSF 2.2 specification, a flow's finalizer (if any) should be called before deactivating any FlowScoped beans for the flow.

{panel:bgColor=#e8e8e8|title=7.4.2.3 Requirements for Exiting a Flow}
If any of the preceding navigation steps cause a flow to be exited, the implementation must perform the following steps, in this order, before continuing with navigation.
- Call the finalizer for the flow, if any.
- De-activate any @FlowScoped beans for the current flow.
- If exiting via a return node ensure the return parameters are correctly passed back to the caller.
{panel}

The output from MyFaces 2.2.8 on WebSphere Liberty demonstrates the issue:
{panel}
[3/16/16 0:14:34:698 EDT] 00000089 SystemOut     O FacesFlowTest1: FlowBean created
[3/16/16 0:14:34:699 EDT] 00000089 SystemOut     O FacesFlowTest1: Flow initialized
[3/16/16 0:14:39:439 EDT] 00000089 SystemOut     O FacesFlowTest1: FlowBean destroyed
[3/16/16 0:14:39:440 EDT] 00000089 SystemOut     O FacesFlowTest1: Flow finalized
{panel}

I tested on WildFly with Mojarra and it is behaving according to the specification:
{panel}
00:12:40,543 INFO  [stdout] (default task-6) FacesFlowTest1: FlowBean created
00:12:40,544 INFO  [stdout] (default task-6) FacesFlowTest1: Flow initialized
00:12:44,954 INFO  [stdout] (default task-8) FacesFlowTest1: Flow finalized
00:12:44,955 INFO  [stdout] (default task-8) FacesFlowTest1: FlowBean destroyed
{panel}",MYFACES-4038
"Deploying myfaces-example-simple-1.1.14.war with security manager enabled causes AccessControlExceptions as follows:

org.apache.catalina.loader.WebappClassLoaderBase.loadClass Security Violation, attempt to use Restricted Class: org.apache.catalina.servlets.DefaultServlet
java.security.AccessControlException: access denied
(""java.lang.RuntimePermission"" ""accessClassInPackage.org.apache.catalina.servlets"")
 java.security.AccessControlException: access denied (""java.lang.RuntimePermission"" ""accessClassInPackage.org.apache.catalina.servlets"")
        at java.security.AccessControlContext.checkPermission(AccessControlContext.java:472)
        at java.security.AccessController.checkPermission(AccessController.java:884)
        at java.lang.SecurityManager.checkPermission(SecurityManager.java:549)
        at java.lang.SecurityManager.checkPackageAccess(SecurityManager.java:1564)
        at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1243)
        at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1142)
        at java.lang.Class.forName0(Native Method)
        at java.lang.Class.forName(Class.java:264)
        at org.apache.myfaces.ee6.MyFacesContainerInitializer.isDelegatedFacesServlet(MyFacesContainerInitializer.java:280)
        at org.apache.myfaces.ee6.MyFacesContainerInitializer.onStartup(MyFacesContainerInitializer.java:150)
        at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5244)
        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:147)
        at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:725)
        at org.apache.catalina.core.ContainerBase.access$000(ContainerBase.java:131)
        at org.apache.catalina.core.ContainerBase$PrivilegedAddChild.run(ContainerBase.java:153)
        at org.apache.catalina.core.ContainerBase$PrivilegedAddChild.run(ContainerBase.java:143)
        at java.security.AccessController.doPrivileged(Native Method)
        at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:699)
        at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:717)
        at org.apache.catalina.startup.HostConfig.deployWAR(HostConfig.java:939)
        at org.apache.catalina.startup.HostConfig$DeployWar.run(HostConfig.java:1812)
        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
        at java.util.concurrent.FutureTask.run(FutureTask.java:266)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
        at java.lang.Thread.run(Thread.java:745)

org.apache.catalina.loader.WebappClassLoaderBase.loadClass Security Violation, attempt to use Restricted Class: org.apache.jasper.compiler.JspRuntimeContext
java.security.AccessControlException: access denied (""java.lang.RuntimePermission"" ""accessClassInPackage.org.apache.jasper.compiler"")
        at java.security.AccessControlContext.checkPermission(AccessControlContext.java:472)
        at java.security.AccessController.checkPermission(AccessController.java:884)
        at java.lang.SecurityManager.checkPermission(SecurityManager.java:549)
        at java.lang.SecurityManager.checkPackageAccess(SecurityManager.java:1564)
        at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1243)
        at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1142)
        at java.lang.Class.forName0(Native Method)
        at java.lang.Class.forName(Class.java:264)
        at org.apache.myfaces.webapp.Jsp21FacesInitializer.getJspFactory(Jsp21FacesInitializer.java:88)
        at org.apache.myfaces.webapp.Jsp21FacesInitializer.initContainerIntegration(Jsp21FacesInitializer.java:62)
        at org.apache.myfaces.webapp.AbstractFacesInitializer.initFaces(AbstractFacesInitializer.java:172)
        at org.apache.myfaces.webapp.StartupServletContextListener.contextInitialized(StartupServletContextListener.java:121)
        at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4810)
        at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5255)
        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:147)
        at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:725)
        at org.apache.catalina.core.ContainerBase.access$000(ContainerBase.java:131)
        at org.apache.catalina.core.ContainerBase$PrivilegedAddChild.run(ContainerBase.java:153)
        at org.apache.catalina.core.ContainerBase$PrivilegedAddChild.run(ContainerBase.java:143)
        at java.security.AccessController.doPrivileged(Native Method)
        at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:699)
        at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:717)
        at org.apache.catalina.startup.HostConfig.deployWAR(HostConfig.java:939)
        at org.apache.catalina.startup.HostConfig$DeployWar.run(HostConfig.java:1812)
        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
        at java.util.concurrent.FutureTask.run(FutureTask.java:266)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
        at java.lang.Thread.run(Thread.java:745)

",MYFACES-4037
"A JSF portlet with input fields inside a h:dataTable component will lose their local values if validation fails, even when rowStatePreserved is set to true.

The IBM JSF portlet bridge calls processSaveState() on UIViewRoot so that the bridge can restore the view state on their RENDER request. After looking at UIData, it looks like _initialDescendantFullComponentState is lost between Portal's ACTION and RENDER requests (a new UIData object is created on the RENDER request). Unfortunately, UIData's _rowDeltaStates will not be restored without its initial state.

It looks like UIData should also save/restore _initialDescendantFullComponentState in its saveSate()/restoreState() methods since it may be needed to restore _rowDeltaStates.",MYFACES-4036
"Taken from stackoverflow:

http://stackoverflow.com/questions/34626568/can-not-assign-variable-from-another-beans-with-composite-component-in-myfaces

It is probably that the indirections through complex EL expressions fail when the operation is a set instead a get. Looks like a valid issue, but it is one hard to reproduce and debug.",MYFACES-4035
"Taken from stackoverflow:

http://stackoverflow.com/questions/34270601/submitform-not-defined-for-myfaces-jsf-js-mode-minimal-modern

I tried to set up a simple JSF 2.2 application using MyFaces 2.2.8. Since MyFaces has some context parameters that I never used before, I tried to get familiar with those.

So I got to use org.apache.myfaces.JSF_JS_MODE for the first time and ran into problems with h:commandLink. The commandLink is trying to call myfaces.oam.submitForm() which is not defined if I set the mode to minimal-modern. If I set the mode to minimal or normal it works.


It looks like a valid bug, worth to take a look.",MYFACES-4034
"Following case:

1) visit login.xhtml
    with 
    <h:form onclick=""this.action='j_security_check';"">
         <p:inputText id=""j_username"" />
         <p:password id=""j_password"" />
         <p:commandButton id=""submit"" value=""Login"" ajax=""false""/>
    </h:form>
2) submit (non-ajax post) with invalid user
3) tomcat forwards to the loginError.xhtml
4) MyFaces tries to restore the view with the ViewState from login.xhtml
5) ViewExpired occurs

IMO MyFaces should not restore the view after a forward ->

if (post && forward) {
   -> new view
}
else {
   -> restore
}

It also works fine in Mojarra.

[~lu4242] How would you fix it?",MYFACES-4033
"Hello,

We have been reported for security vulnerable library common-beanutils-1.8.3. Myfaces-impl is dependent on this library and which is downloaded to application WEB-INF/lib while packaging. 

Clould you please upgrade to latest release 1.9.2 of common-beanutils and make use of 'SuppressPropertiesBeanIntrospector'.

More details can be found here:
https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-0114
http://openwall.com/lists/oss-security/2014/06/15/10
http://commons.apache.org/proper/commons-beanutils/javadocs/v1.9.2/RELEASE-NOTES.txt
https://issues.apache.org/jira/browse/BEANUTILS-463",MYFACES-4032
"Facelets doesn't render empty XHTML attribute. For example, if I want to add a special attribute like <html ngapp="""">, it render <html>. 

Mojarra has fixed this bug : https://java.net/jira/browse/JAVASERVERFACES-2045

",MYFACES-4031
"If MyFaces 2.2 is loaded at the server level, MyFaces CDI support is set once per server. This causes CDI-enabled JSF applications to not work properly if a non-CDI application is loaded first.

{panel:title=Steps to reproduce the error on WebSphere Liberty|bgColor=#e8e8e8}
1. Enable the jsf-2.2 and cdi-1.2 features on the WebSphere Liberty server.
2. Deploy two JSF applications: one that uses CDI (e.g. a flow built using FlowBuilder) and one that does not use CDI.
3. Make a request to the non-CDI application first. The message 'MyFaces CDI support disabled' should be written to the logs.
4. Make a request to the CDI-enabled application. If testing an application with a flow built using FlowBuilder, the flow will not be discovered.
{panel}

I've investigated the issue and found that MyFaces has two conditions to determine CDI availability:
1. CDI must be found on the classpath
2. The application map must have a bean manager instance

(Found inside org.apache.myfaces.util.ExternalSpecifications#isCDIAvailable()).

When MyFaces is shared between different applications, basing CDI availability on an application's configuration (condition two) is an issue.",MYFACES-4030
"In a Spring Webflow project that uses MyFaces as view technology the update of MyFaces from 2.1.17 to 2.2.9 breaks the update of a bound value within a c:forEach tag.

A complete example will be provided as attachment.

Steps to reproduce the error:

# Ensure the selected {{myfaces.version}} in the {{pom.xml}} is *2.2.9*
# Start the application and open the respective website
# Select _c:forEach (non-ajax)_
# Activate the checkbox
# Click _Apply_

The value should change from _false_ to _true_ (or vice versa if it was _true_ before) but nothing happens.

The ajaxified c:forEach example doesn't work either. Only the ui:repeat version works as expected.

With _MyFaces 2.1.17_ all examples work as expected.

I thought this might be a duplicate of MYFACES-4019 but that ticket has been fixed for _MyFaces 2.2.9_ whereas the problem described above is still present even with version _2.2.9_.",MYFACES-4029
"I tested this on Wildfly 10.0.0.CR5 with both, MyFaces 2.1.17 and 2.2.9 but I suppose this issue is not specific to my environment.
The example project can be found on Github: https://github.com/beikov/myfaces-composite-jstl-issue

I think the essential problem is, that a composite component passes an EL expression to a custom tag which then uses the expression in a JSTL Tag.
I don't know if it's just illegal to do something like this, or if there is an actual bug, but if it is the former, I'd expect an exception.

Depending on whether the property ""org.apache.myfaces.REFRESH_TRANSIENT_BUILD_ON_PSS_PRESERVE_STATE"" is enabled the behavior is different.

When enabled, the converter that is attached to the composite component will be considered for state saving which in this case leads to a converter without state when restoring and finally leading to a converter exception on postback.

When disabled, the first postback request just seems to do nothing, but then, it seemingly works as expected.",MYFACES-4028
"Right now the version range for javax.el package is [2.2, 3.0), this version Range makes it impossible to use javax.el in version 3.0. 
AFAIK MyFaces should work without issues with version 3.0 of javax el, therefore the version range needs to be increased. ",MYFACES-4027
"If you use the cc.clientId in a custom tag, then the wrong ids are generated. 
{code:xml}
<composite:implementation>
	<cure:grid id=""#{cc.clientId}"">
		<cure:gridRow>
			<cure:gridCol width=""12"">
				my col
			</cure:gridCol>
		</cure:gridRow>
	</cure:grid>
</composite:implementation>
{code}
Here we need an id otherwise an update on this component will fail since there wouldn't be an html node on the client side which contents can be replaced by an update. There are some cases where the composite component is not allowed to define an div which holds the client id.
{code:xml}
<composite:implementation>
<!-- Would break grid container specification -->
<div id=""#{cc.clientid}"">
		<cure:gridRow>
			<cure:gridCol width=""12"">
				my col
			</cure:gridCol>
		</cure:gridRow>
<div>
</composite:implementation>
{code}
We think this is caused by the fact that the cc.clientId is accessed during build view time and gets cached in the UIComponentBase. At this time the cc.clientId is empty. This seems to be a common issue, because cc.clientId can never be accessed at build view time.
{code:title=""UIComponentBase#getClientId""}
    @Override
    public String getClientId(FacesContext context)
    {
        if (context == null)
        {
            throw new NullPointerException(""context"");
        }

        if (_clientId != null)
        {
            return _clientId;
        }
...
}
{code}
{code:xml|title=""one of the custom tags we use""}
<ui:composition
    xmlns:c=""http://java.sun.com/jsp/jstl/core""
    xmlns:f=""http://java.sun.com/jsf/core""
    xmlns:h=""http://java.sun.com/jsf/html""
	xmlns:p=""http://primefaces.org/ui""
    xmlns:ui=""http://java.sun.com/jsf/facelets"">
    
    <c:set var=""styleClass"" value=""#{not empty styleClass ? styleClass : ''}"" />
    <c:set var=""style"" value=""#{not empty style ? style : ''}"" />
    <c:set var=""rendered"" value=""#{not empty rendered ? rendered : true}"" />
    <c:set var=""isFormRow"" value=""#{not empty isFormRow and isFormRow}"" />
	
	<c:if test=""#{not empty id}"">
		<h:panelGroup id=""#{id}"" layout=""block"" styleClass=""#{isFormRow ? 'form-row' : ''} #{styleClass} ui-grid-row"" style=""#{style}"" rendered=""#{rendered}"">
			<ui:insert/>
		</h:panelGroup>
	</c:if>
	
	<c:if test=""#{empty id}"">
		<h:panelGroup layout=""block"" styleClass=""#{isFormRow ? 'form-row' : ''} #{styleClass} ui-grid-row"" style=""#{style}"" rendered=""#{rendered}"">
			<ui:insert/>
		</h:panelGroup>
	</c:if>
	
</ui:composition>
{code}
{code:html|title=""resulting html""}
<!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Transitional//EN"" ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"" >
<html xmlns=""http://www.w3.org/1999/xhtml"">
   <head></head>
   <body>
      <form id=""myForm1"" name=""myForm1"" method=""post"" action=""/jsf2-basic-portlet/index.xhtml"" enctype=""application/x-www-form-urlencoded"">
         <div id=""composite1:composite1"" class="" ui-grid ui-grid-responsive"">
            <div class=""  ui-grid-row"">
               <div class="" ui-grid-col-12"">
                  my col
               </div>
            </div>
         </div>
         <input type=""hidden"" name=""myForm1_SUBMIT"" value=""1"" /><input type=""hidden"" name=""javax.faces.ViewState"" id=""javax.faces.ViewState"" value=""puXzCX78lsGwm5D7TAEgUKup9vm0hFpybGfw7y1R85EQt46s"" />
      </form>
      <form id=""myForm2"" name=""myForm2"" method=""post"" action=""/jsf2-basic-portlet/index.xhtml"" enctype=""application/x-www-form-urlencoded""><span id=""myForm2:composite2:myOutputText"">OutputText</span><input type=""hidden"" name=""myForm2_SUBMIT"" value=""1"" /><input type=""hidden"" name=""javax.faces.ViewState"" id=""javax.faces.ViewState"" value=""puXzCX78lsGwm5D7TAEgUKup9vm0hFpybGfw7y1R85EQt46s"" /></form>
   </body>
</html>
{code}
I have an sample which I could provide but here is no option to upload it.",MYFACES-4026
"We maintain some HtmlUnit tests, and I noticed that with MyFaces we've been getting these messages:

Obsolete content type encountered: 'application/x-javascript'.

We certainly don't want to be using 'application/x-javascript', since that's a very outdated type.  Convention, and our own code, suggests that we should be using the 'text/javascript' MIME type.  This is a fairly trivial change.
",MYFACES-4025
"The NOTICE.txt file under META-INF directory is making reference to two schemas. These schemas are: javaee_web_services_client_1_2.xsd which doesn't exist in JSF 2.2 any more and javaee_5.xsd which is not needed since we are using the open source one. It does not look like the xsd files have CDDL license. 

I have attached a patch for this issue.



",MYFACES-4024
"Accessing an attribute from with in a composite component that is contained in a forEach tag causes a null pointer exception if partial state saving is enabled.

As the example is too complex to be shown within this report an example project can be found at https://github.com/jgrimmwsb/faces-foreach-partial-state-saving.

Steps to reproduce the error:

# Ensure the selected {{myfaces.version}} in the {{pom.xml}} is one of *2.2.10-SNAPSHOT*.
# Ensure that {{javax.faces.PARTIAL_STATE_SAVING}} is set to *true* in the {{web.xml}}.
# Start the application and open the respective website.
# The log will show an exception like shown below:

{code:title=Stacktrace}
java.lang.NullPointerException
	at org.apache.myfaces.view.facelets.el.FaceletStateValueExpression.getWrapped(FaceletStateValueExpression.java:75)
	at org.apache.myfaces.view.facelets.el.FaceletStateValueExpression.getValue(FaceletStateValueExpression.java:107)
	at org.apache.el.parser.AstIdentifier.getValue(AstIdentifier.java:74)
	at org.apache.el.ValueExpressionImpl.getValue(ValueExpressionImpl.java:184)
	at org.apache.myfaces.view.facelets.el.ContextAwareTagValueExpression.getValue(ContextAwareTagValueExpression.java:96)
	at javax.faces.component._ComponentAttributesMap.get(_ComponentAttributesMap.java:331)
	at example.Test.getVariables(Test.java:161)
	at example.Test.captureOriginalVars(Test.java:133)
	at example.Test.visitTree(Test.java:77)
	at javax.faces.component.UIForm.visitTree(UIForm.java:345)
	at javax.faces.component.UIComponent.visitTree(UIComponent.java:1047)
	at javax.faces.component.UIComponentBase.visitTree(UIComponentBase.java:1191)
{code}

With _MyFaces 2.2.7_ or _Mojarra_ the error did not occur. _MyFaces 2.2.10-SNAPSHOT_ with {{javax.faces.PARTIAL_STATE_SAVING}} is set to *false* works without error.",MYFACES-4023
"Faces flows built with the FlowBuilder API are not found when the web application is packaged inside an EAR. When deploying just the web application itself, the application's flows are discoverable however.

A sample application has been provided to demonstrate the issue. The button 'Start Test Flow' should be clicked on the page /FacesFlowTest1/index.xhtml. The flow will not be entered and MyFaces will try to navigate to a view with the flow id instead:
{panel:bgColor=#e8e8e8}
[org.apache.myfaces.application.NavigationHandlerImpl] (default task-2) getOutcomeNavigationCase -> viewIdToTest: test-flow-1.xhtml
[org.apache.myfaces.shared.resource.ResourceHandlerCache] (default task-2) Attemping to get resource from cache for test-flow-1.xhtml
[org.apache.myfaces.application.NavigationHandlerImpl] (default task-2) handleNavigation fromAction=test-flow-1 outcome=test-flow-1 no matching navigation-case found, staying on current ViewRoot
{panel}

Mojarra supports Faces flow applications when they are packaged inside an EAR.",MYFACES-4022
"https://github.com/apache/incubator-batchee/commit/cfd133c309c21a82fb24cfcc9a7c2365aee4678a#diff-acd0bc06477ce776b0ad8fdda76f8b7eR56 mecanism can be used

(due to recent vulnerability discovered in [collections], spring, groovy we can't suppose we don't run with these libraries so we need this fix as well)",MYFACES-4021
"{quote}
2015-11-23 16:37 GMT-05:00 Mike Kienenberger:

    let's upgrade our commons-collections
    dependency to 3.2.2 as certain JSF configurations likely present
    attack vectors.

    https://issues.apache.org/jira/browse/COLLECTIONS-580
{quote}",MYFACES-4020
"Updating a value is not possible if the respective input component is within a c:forEach tag.

The server shows a {{javax.el.PropertyNotFoundException}}.

*Example:*

{code:title=View}
<h:form>
	<c:forEach items=""#{controller.containers}"" var=""container"" varStatus=""status"">
		<div>
			<h:selectBooleanCheckbox id=""checked_#{status.index}"" value=""#{container.checked}"" />
							
			<h:panelGroup id=""infotext_#{status.index}"">
				container.checked = #{container.checked}
			</h:panelGroup>
		</div>
	</c:forEach>
	<h:commandButton value=""Apply"" />
</h:form>
{code}

{code:title=Controller.java}
public class Controller {
	public static final class Container implements Serializable {
		private boolean checked = false;
		
		public final boolean isChecked() { return checked; }
		public final void setChecked(boolean checked) { this.checked = checked; }
	}
	
	private final List<Container> containers = Arrays.asList(new Container());
	
	public List<BooleanValueContainer> getContainers() { return containers; }
}
{code}

A complete example can be found here: [https://github.com/jgrimmwsb/faces-repeater-test].

Steps to reproduce the error:

# Ensure the selected {{myfaces.version}} in the {{pom.xml}} is *2.2.8*.
# Start the application and open the respective website.
# Select _c:forEach (non-ajax)_.
# Activate the checkbox.
# Click _Apply_.

With _MyFaces 2.2.7_ the error did not occur.

The project contains further examples:

* An c:forEach example including an ajaxified version (working with _MyFaces 2.2.7_)
* An ui:repeat (ajaxified) example (working with _MyFaces 2.2.8_)",MYFACES-4019
"When dynamically adding a composite control to a page, any custom FacesComponent in the composite control can't access its properties.
(BTW, I found this issue in MyFaces 2.2.8, but both scenarios below work fine in Mojarra 2.2)
(Also, the issue occurs early on postback in MyFaces framework so I'm not seeing any errors in logs, other than in the HTTP response and the exception it shows on the web page. I can breakpoint on the FacesComponent instantiation, but nowhere else do I get control.)

******* This works *******
Enter value, hit Refresh button.
[ Note: This has the CustComp FacesComponent statically on the page.
Also note:	xmlns:cvc=""http://java.sun.com/jsf/composite/com/aadhoc/cvc/spikes/extensionsapproach/components""]

	<h:form id=""modelerForm"">
		<h:commandButton value=""Refresh"" type=""submit""/>
		<h:outputText value=""CustProp:""/>
		<cvc:CustComp/>
	</h:form>

******* This breaks *******
Hit Add button, then hit Refresh button.
[Note: This dynamically adds a CompTestChild composite, which contains the CustComp FacesComponent]
	<h:form id=""modelerForm"">
		<h:commandButton value=""Refresh"" type=""submit""/>
		<h:commandButton value=""Add"" actionListener=""#{modelerController.compTestOnAdd}""/>
		<cvc:CustComp/>
		<h1>Controls</h1>
		<h:panelGrid id=""controlsPanel""/>
	</h:form>

Error:
javax.el.PropertyNotFoundException: Property 'prop' not found on type javax.faces.component.UINamingContainer

viewId=/modeler.xhtml
location=M:\home\eclipse\workspace\.metadata\.plugins\org.eclipse.wst.server.core\tmp0\wtpwebapps\CVC Spike Extensions Approach\modeler.xhtml
phaseId=PROCESS_VALIDATIONS(3)

Caused by:
javax.el.PropertyNotFoundException - Property 'prop' not found on type javax.faces.component.UINamingContainer
 at javax.el.BeanELResolver$BeanProperties.get(BeanELResolver.java:268)

/resources/com/aadhoc/cvc/spikes/extensionsapproach/components/CustComp.xhtml at line 20 and column 36 value=""#{cc.prop}""


This is my custom FacesComponent (CustComp.xhtml):
<?xml version=""1.0"" encoding=""ISO-8859-1"" ?>
<html
	xmlns=""http://www.w3.org/1999/xhtml""
	xmlns:cc=""http://java.sun.com/jsf/composite"" 
	xmlns:h=""http://java.sun.com/jsf/html""
	>
	<cc:interface componentType=""com.aadhoc.cvc.spikes.extensionsapproach.CustComp"">
	</cc:interface>
	<cc:implementation>
		<h:outputText value=""Prop:""/>
		<h:inputText value=""#{cc.prop}""/>
	</cc:implementation>
</html>

Backing:
@FacesComponent(value = ""com.aadhoc.cvc.spikes.extensionsapproach.CustComp"", createTag = false)
public class CustComp extends UIInput implements NamingContainer {
	private String prop;
	public CustComp() {
	}
	public String getProp() {
		return prop;
	}
	public void setProp(String prop) {
		this.prop = prop;
	}
	@Override
	public String getFamily() {
		return UINamingContainer.COMPONENT_FAMILY;
	}
}

modelerController:
    public void compTestOnAdd() {
        UIViewRoot viewRoot = FacesContext.getCurrentInstance().getViewRoot();
        UIComponent topGroup = viewRoot.findComponent("":modelerForm:controlsPanel"");
	    FacesContext context = FacesContext.getCurrentInstance();
	    UIComponent composite = context.getApplication().getViewHandler()
	        .getViewDeclarationLanguage(context, context.getViewRoot().getViewId())
	        .createComponent(context, ""http://xmlns.jcp.org/jsf/composite/com/aadhoc/cvc/spikes/extensionsapproach/components"", ""CompTestChild"", new HashMap<>());
	    topGroup.getChildren().add(composite);
    }

CompTestChild.xhtml:
<?xml version=""1.0"" encoding=""ISO-8859-1"" ?>
<html xmlns=""http://www.w3.org/1999/xhtml""
	xmlns:cc=""http://java.sun.com/jsf/composite""
    xmlns:h=""http://java.sun.com/jsf/html""
	xmlns:cvc=""http://java.sun.com/jsf/composite/com/aadhoc/cvc/spikes/extensionsapproach/components""
	>
	<cc:interface>
	</cc:interface>
	<cc:implementation>
		<h:panelGrid columns=""2"">
			<h:outputText value=""CustProp:""/>
			<cvc:CustComp/>
		</h:panelGrid>
	</cc:implementation>
</html>


web.xml includes:
  <resource-env-ref>
    <!-- Enable Weld CDI, also needs META-INF/context.xml entry -->
    <resource-env-ref-name>BeanManager</resource-env-ref-name>
    <resource-env-ref-type>javax.enterprise.inject.spi.BeanManager</resource-env-ref-type>
  </resource-env-ref>
  <context-param>
    <param-name>javax.faces.PROJECT_STAGE</param-name>
    <param-value>Development</param-value>
  </context-param>
  <context-param>
    <param-name>org.apache.myfaces.STRICT_JSF_2_ALLOW_SLASH_LIBRARY_NAME</param-name>
    <param-value>true</param-value>
  </context-param>
  <servlet>
    <servlet-name>Faces Servlet</servlet-name>
    <servlet-class>javax.faces.webapp.FacesServlet</servlet-class>
    <load-on-startup>1</load-on-startup>
  </servlet>


",MYFACES-4018
"in org.apache.myfaces.webapp.AbstractFacesInitializer#loadExpressionFactory Class.forName is used which means if you put myfaces in the container then container loader is used.

Switching to java.lang.Class#forName(java.lang.String, boolean, java.lang.ClassLoader) or using the tccl.loadClass() solves it.",MYFACES-4017
"When submitting an Ajax request that was triggered by an element with a name, but without an ID, a Javascript error will be thrown in the nodeIdOrName() function in _Dom.js.

The code calls the getElementsByName() function on ""this"", which throws an error that getElementsByName() is not defined for ""this"".  It should call document.getElementsByName(), same as the byIdOrName() function.

251	  //last check for uniqueness
252    if (this.getElementsByName(elementId).length > 1) {
253         //no unique element name so we need to perform
254	       //a return null to let the caller deal with this issue
255	       return null;
256	   }

This was noticed when using the ICEfaces 3.3 data table in their compatibility component suite, which uses hidden fields without IDs to submit the selection of rows.

If you want an example that reproduces this error I can create one, but I think static analysis of the code is sufficient in this case.

The problem is also present in trunk.
",MYFACES-4016
"Improves the startup performance a lot if many jars are available in the classpath.
In my environment its about 700ms.",MYFACES-4015
"similiar to OWB:
MyFaces Core has started, it took [1000] ms.",MYFACES-4014
"I am using h:commandButton in each row of a h:dataTable. I have used a file name as action attribute value. On click of which the page should be navigated to other expected page. But when the button is used in h:dataTable the page just refreshes existing page itself instead of showing content of other file. However, the action of button works properly when I use it out of the table.",MYFACES-4013
"https://cwiki.apache.org/confluence/display/MYFACES/Handling+Server+Errors

Current version:
{quote}
*Provide an error page*
The default ExceptionHandler in Production stage or when myfaces error handling is disabled just throw an exception. So you can still setup an error page adding something like this in your web.xml file:
{code}<error-page>
    <error-code>500</error-code>
    <location>/somepage.jsp</location>
</error-page>{code}
{quote}

Should be:
{quote}
*Provide an error page*
If org.apache.myfaces.ERROR_HANDLING is set to ""false"", or if it is undefined and the project stage is ""Development"", the default ExceptionHandler just throws an exception. So you can still setup an error page by adding something like this in your web.xml file:
{code}<error-page>
    <error-code>500</error-code>
    <location>/somepage.jsp</location>
</error-page>{code}
{quote}

Changes
- Corrected the explanation of the behavior of the default ExceptionHandler.
- Improved the grammar.
",MYFACES-4012
"Myfaces 2.2.8 does not support the new namespaces in TLD files i.e
xmlns:f=""http://xmlns.jcp.org/jsf/core""
xmlns:h=""http://xmlns.jcp.org/jsf/html""
xmlns:jl=""http://xmlns.jcp.org/jsf/composite/jsflive""

In Eclipse, which autoloads namespace definitions from JAR files, I get ""Can't find facelet tag library for uri http://xmlns.jcp.org/jsf/core"". The TLD files that are contained in Myfaces 2.2.8 corresponds to JSF 2.1, and does not include f:viewAction. 

I've seen that the code for viewAction is there in the 2.2.8 impl jars. The problem is that the TLD file does not list it so I can't use it.",MYFACES-4011
"This seems to be a regression from another issue, https://issues.apache.org/jira/browse/MYFACES-3116, which was resolved in 2.0 and 2.1.

Given a bean similar to the following:

@ManagedBean(eager=true, name=""eagerBean"")
@ApplicationScoped
public class EagerBean implements Serializable {
	private static final long serialVersionUID = 1L;
	
	@ManagedProperty(value=""#{message}"")
	private MessageBean messageBean;

    @PostConstruct
    public void postConstruct() {
             ...
    }
...
}

The following exception is thrown with MyFaces 2.2.8 on Tomcat 8:
19-Aug-2015 12:48:32.443 SEVERE [localhost-startStop-1] org.apache.myfaces.webapp.AbstractFacesInitializer.initFaces An error occured while initializing MyFaces: This method is not supported during startup
 java.lang.UnsupportedOperationException: This method is not supported during startup
        at org.apache.myfaces.context.servlet.StartupServletExternalContextImpl.getSession(StartupServletExternalContextImpl.java:187)
        at org.apache.myfaces.view.impl.DefaultViewScopeHandler.generateViewScopeId(DefaultViewScopeHandler.java:128)
        at org.apache.myfaces.view.ViewScopeProxyMap.getWrapped(ViewScopeProxyMap.java:76)
        at org.apache.myfaces.view.ViewScopeProxyMap.get(ViewScopeProxyMap.java:109)
        at org.apache.myfaces.config.ManagedBeanBuilder.getScope(ManagedBeanBuilder.java:560)
        at org.apache.myfaces.config.ManagedBeanBuilder.getNarrowestScope(ManagedBeanBuilder.java:464)
        at org.apache.myfaces.config.ManagedBeanBuilder.isInValidScope(ManagedBeanBuilder.java:435)
        at org.apache.myfaces.config.ManagedBeanBuilder.initializeProperties(ManagedBeanBuilder.java:319)
        at org.apache.myfaces.config.ManagedBeanBuilder.buildManagedBean(ManagedBeanBuilder.java:163)
        at org.apache.myfaces.webapp.AbstractFacesInitializer._createEagerBeans(AbstractFacesInitializer.java:303)
        at org.apache.myfaces.webapp.AbstractFacesInitializer.initFaces(AbstractFacesInitializer.java:193)
        at org.apache.myfaces.webapp.StartupServletContextListener.contextInitialized(StartupServletContextListener.java:119)
        at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4727)
        at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5167)

Note, the app does not throw this Exception in MyFaces 2.0.  The regression in 2.2 is caused by a spec update to UIViewRoot.getViewMap(boolean): that map is now backed by the session, which is not available during startup (which was addressed by MYFACES-3116): https://javaserverfaces.java.net/docs/2.2/javadocs/javax/faces/component/UIViewRoot.html#getViewMap%28boolean%29

One solution is to make sure we don't call getViewMap(true) during startup; I'll attach a patch demonstrating that route.",MYFACES-4010
"We have an interesting behaviour when rendering h:outputLink with nested f:param elements: in the param data, the output href string has spaces encoded with a ""+"" rather than the expected ""%20"".  For example:

<h:outputLink value=""login.xhtml""><h:outputText value=""Login page"" /><f:param name=""username"" value=""This is a test"" /></h:outputLink>
creates the following:
<a href=""login.xhtml?username=This+is+a+test"">Login page</a>

This already seems to have been discussed in https://java.net/jira/browse/JAVASERVERFACES_SPEC_PUBLIC-1019

I'll attach a patch which resolves this - if it is in fact an issue.",MYFACES-4009
"I can't believe I am the first person in the world to try this combination.

{code}
java.lang.AbstractMethodError: org.apache.myfaces.shared.renderkit.html.util.HttpPartWrapper.getSubmittedFileName()Ljava/lang/String;
	at com.mli.filecollector.BeanWelcome.actionSubmit(BeanWelcome.java:220)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.apache.el.parser.AstValue.invoke(AstValue.java:247)
	at org.apache.el.MethodExpressionImpl.invoke(MethodExpressionImpl.java:267)
	at org.apache.myfaces.view.facelets.el.ContextAwareTagMethodExpression.invoke(ContextAwareTagMethodExpression.java:96)
	at org.apache.myfaces.application.ActionListenerImpl.processAction(ActionListenerImpl.java:74)
	at javax.faces.component.UICommand.broadcast(UICommand.java:120)
	at javax.faces.component.UIViewRoot._broadcastAll(UIViewRoot.java:1172)
	at javax.faces.component.UIViewRoot.broadcastEvents(UIViewRoot.java:365)
	at javax.faces.component.UIViewRoot._process(UIViewRoot.java:1658)
	at javax.faces.component.UIViewRoot.processApplication(UIViewRoot.java:862)
	at org.apache.myfaces.lifecycle.InvokeApplicationExecutor.execute(InvokeApplicationExecutor.java:42)
	at org.apache.myfaces.lifecycle.LifecycleImpl.executePhase(LifecycleImpl.java:196)
	at org.apache.myfaces.lifecycle.LifecycleImpl.execute(LifecycleImpl.java:143)
	at javax.faces.webapp.FacesServlet.service(FacesServlet.java:198)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:291)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:219)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:142)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:617)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:518)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1091)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:668)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1527)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1484)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
{code}",MYFACES-4008
"The issue occurs when using either #{null} or the empty string in a selectItem for the selectOneMenu control.  If you then save a value for the selectOneMenu and choose to edit it again and change the value to the empty selection item the original value is used rather than the empty submitted one.  We are currently using the property that treats the empty string as null so it makes sense that both behave the same.  Using "" "" instead of the empty string allows the save to work properly but then we have to deal with this hack in our whole code base.

",MYFACES-4007
"I have a facelets snippet that uses a composite component:

>>> index.xhtml
<ui:include src=""foo.xhtml"">
  <ui:param name=""bar"" value=""baz"" />
</ui:include>

>>> foo.xhtml
#{myBean.someMethod(bar)} calls someMethod with ""baz""

<sc:someComponent someattribute=""#{myBean.someMethod(bar)}"" /> calls someMethod with null

I guess that the EL in composites is evalutated too early or the binding is not submitted correctly.",MYFACES-4006
"To avoid problems like:
http://stackoverflow.com/questions/7688644/java-lang-nosuchmethoderror-org-apache-commons-codec-binary-base64-encodebase64
when e.g. httpclient is also used in the application (which imports a newer version).

Source:
/core/trunk/parent/pom.xml
Line 497

I could also provide an patch but should be the same effort to commit.",MYFACES-4005
"I created a html5 form with jsf:action which makes it a <h:form>. I added the attribute enctype to support file uploads which works fine then. 

On submitting the form (using AJAX) I get the message:

{code}
These unhandled FacesMessages are: 
- file upload requires a form with enctype equal to multipart/form-data
{code}

If i add jsf: to enctype (jsf:enctype) the message disappears.

The message does not show up in my h:messages lists.",MYFACES-4004
"For native JSF tags, setting the ""class"" attribute performs as you'd expect; however, in user-defined tags, setting the ""class"" attribute results in the  following exception:

java.lang.IllegalArgumentException: Component property class is not writable 

Which is how we've behaved traditionally.  Using the ""styleClass"" attribute instead does work as expected.  

Mojarra supports setting the ""class"" attribute as of 2.2.9.  Additionally, the same issue was fixed in MYFACES-3874 for jsf:class.  

Changing the behavior of MyFaces here - to allow for custom components to accept the ""class"" attribute without Exceptions - should be fairly trivial, along the lines of MYFACES-3874.  ",MYFACES-4003
"I've searched JIRA and there are a few issues related to WebXmlParser, but this seems almost like a recurrence of MYFACES-1754.

My web.xml is split into multiple files, each declared as an XML entity relative to the web.xml file itself:
{code:xml}
<!ENTITY contextparams	SYSTEM	""webxml/context-params.xml"">
{code}
(As a side note I used to use {{jndi:/localhost/WEB-INF/webxml/context-params.xml}}, but for some reason Tomcat 8 claims that jndi is an invalid protocol).

Using resource relative system identifiers Tomcat is now happy and the context starts correctly. However, during its initialization MyFaces re-parses the web.xml descriptor and resolves the entities incorrectly, leading to failure with the message:
{code}
2015-06-17 15:48:13.853 [localhost-startStop-1] ERROR o.a.m.s.w.webxml.WebXmlParser - Unable to parse web.xml
java.lang.IllegalArgumentException: The resource path [file:///WEB-INF/webxml/context-params.xml] is not valid
{code}

The solution is to remove the file:// prefix before passing to the external context to resolve, as in this patch:

{code}
Index: org/apache/myfaces/shared_impl/webapp/webxml/WebXmlParser.java
===================================================================
--- WebXmlParser.java	(revision ???)
+++ WebXmlParser.java	(working copy)
@@ -138,6 +138,9 @@
 
     private InputSource createContextInputSource(String publicId, String systemId)
     {
+        if(systemId.startsWith(""file:"")) {
+            systemId = systemId.substring(7); // remove file://
+        }
         InputStream inStream = _context.getResourceAsStream(systemId);
         if (inStream == null)
         {

{code}

Those three lines of code are based on other work by the MyFaces team (org.apache.myfaces.config.impl.FacesConfigEntityResolver) and even if it weren't is made available free of charge and free from license restrictions.
",MYFACES-4002
"https://myfaces.apache.org/core22/myfaces-impl/tagdoc.html

Old java.sun.com XML namespaces need to be replaced by xmlns.jcp.org XML namespaces which was introduced since Java EE 7.

See also http://stackoverflow.com/a/30780147/157882",MYFACES-4001
"There are several MyFaces 2.2 API classes in which their signatures do not fully match what is specified in Java EE 7 JSF API.  For reference, the comparison is based from Oracle's Java EE 7 API at: http://docs.oracle.com/javaee/7/api/index.html

The issues we found are noted below.  They are broken down by package.

h4. package javax.faces.application
+In class:+
javax.faces.application.ApplicationWrapper (http://docs.oracle.com/javaee/7/api/javax/faces/application/ApplicationWrapper.html)

+The following methods have been deprecated and should have the @Deprecated annotation however they are missing in the current MyFaces API:+
- createComponent(ValueBinding componentBinding, FacesContext context, String componentType)
- createMethodBinding(String ref, Class<?>[] params)
- evaluateExpressionGet(FacesContext context, String expression, Class<? extends T> expectedType)
- getPropertyResolver()
- getVariableResolver()
- setPropertyResolver(PropertyResolver resolver)
- setVariableResolver(VariableResolver resolver)

+In class:+
javax.faces.application.StateManager (http://docs.oracle.com/javaee/7/api/javax/faces/application/StateManager.html)

+The following methods have been deprecated and should have the @Deprecated annotation:+
- saveView(FacesContext context)
- restoreView(FacesContext context, String viewId, String renderKitId)


h4. package javax.faces.bean

+The following classes have the @Documented annotation specified when they should not:+
- javax.faces.bean.ApplicationScoped
- javax.faces.bean.CustomScoped
- javax.faces.bean.ManagedBean
- javax.faces.bean.ManagedProperty
- javax.faces.bean.ManagedProperty
- javax.faces.bean.NoneScoped
- javax.faces.bean.ReferencedBean
- javax.faces.bean.RequestScoped
- javax.faces.bean.SessionScoped
- javax.faces.bean.ViewScoped

+In class:+
javax.faces.bean.ManagedProperty (http://docs.oracle.com/javaee/7/api/javax/faces/bean/ManagedProperty.html)

The @Type annotation specifies both FIELD and METHOD element types, however, it should only be TYPE.  For example:
@Target(ElementType.FIELD)

+In class:+
javax.faces.bean.CustomScoped (http://docs.oracle.com/javaee/7/api/javax/faces/bean/CustomScoped.html)

The value() method specifies a default value of """", however the API documentation does not state that this method has a default value.

h4. package javax.faces.component
+In class:+
javax.faces.component.UIComponent (http://docs.oracle.com/javaee/7/api/javax/faces/component/UIComponent.html)

MyFaces currently lists the getPassThroughAttributes(boolean create) method as abstract, however the API documentation does not state that.  I propose that this method return an empty Map.  Something like this:
{code}
public Map<String,Object> getPassThroughAttributes(boolean create)
{
   return Collections.emptyMap();
}
{code}

+In class:+
javax.faces.component.UIViewAction (http://docs.oracle.com/javaee/7/api/javax/faces/component/UIViewAction.html)

+The following two methods are not listed in the API documentation and should be removed:+
- setValue(java.lang.Object)
- getValue()

+The following four methods are deprecated and need to have the @Deprecated annotation added:+
- getAction()
- getActionListener()
- setAction(javax.faces.el.MethodBinding)
- setActionListener(javax.faces.el.MethodBinding)

h4. package javax.faces.el 
+The following classes are listed as deprecated, however the API documentation does not state that they are.  The @Deprecated annotation should be removed from the class level for the following classes:+
- javax.faces.el.EvaluationException
- javax.faces.el.MethodBinding
- javax.faces.el.MethodNotFoundException
- javax.faces.el.PropertyNotFoundException
- javax.faces.el.PropertyResolver
- javax.faces.el.ReferenceSyntaxException
- javax.faces.el.ValueBinding
- javax.faces.el.VariableResolver

h4. package javax.faces.validator
+In class:+
javax.faces.validator.FacesValidator ( http://docs.oracle.com/javaee/7/api/javax/faces/validator/FacesValidator.html )

the value() method does not have a default value, however the API documentation states that it should have a default value of an empty String ("""").

h4. package javax.faces.facelets
The class javax.faces.view.facelets.ResourceResolver should be deprecated (add @Deprecated at the class level) per the API documentation at http://docs.oracle.com/javaee/7/api/javax/faces/view/facelets/ResourceResolver.html

h4. package javax.faces.webapp
The following classes are not entirely deprecated and their @Deprecated annotation should be removed from the MyFaces API:
- javax.faces.webapp.AttributeTag
- javax.faces.webapp.ConverterTag
- javax.faces.webapp.UIComponentBodyTag
- javax.faces.webapp.UIComponentTag
- javax.faces.webapp.ValidatorTag

+In the class:+
javax.faces.webapp.UIComponentTagBase (http://docs.oracle.com/javaee/7/api/javax/faces/webapp/UIComponentTagBase.html)

The log field should be marked final per the API documentation (http://docs.oracle.com/javaee/7/api/javax/faces/webapp/UIComponentTagBase.html#log), however it is not in the MyFaces API.
",MYFACES-4000
Our CDI instance lookup code is wrong. We must not simply put the first instance from the iterator but use BeanManager#resolve etc to get it.,MYFACES-3999
"We currently do partly unportable stuff to look up the BeanManager. This could be replaced by dynamically using CDI.current().get(). 
This should be done via reflection to avoid blowing up if no CDI-1.1 environment is present.",MYFACES-3998
"When I have to following tag

<a jsf:styleClass=""#{...}"" href=""..."">...</a>

the output HTML does not contain a class attribute

When I have 

<a jsf:styleClass=""#{...}"" jsf:outcome=""..."">...</a>

it has. So obvisously jsf:styleClass is not triggering the passthrough element detection?",MYFACES-3997
"In my XHTML-Facelets I use Passthrough-Elements whereever possible. Now I ran into a bug (IMHO) with the HTML-Class-Attribute:

<a jsf:outcome=""other.xhtml"" class=""#{bean.somebool?'active':''}"">Linktext</a>

gives

javax.el.ELException - Cannot convert active of type class java.lang.String to class java.lang.Class
at org.apache.el.lang.ELSupport.coerceToType(ELSupport.java:419)

Changing the attribute name to jsf:styleClass works.

Changing the content of class to some static string works.

Might be related to MYFACES-3874.",MYFACES-3996
"Check fails with latest checkstyle version: Unable to instantiate DoubleCheckedLockingCheck

According to MCHECKSTYLE-189 DoubleCheckedLockingCheck must be removed from checkstyle-rules.",MYFACES-3995
"On ajax update of a stateless view, the javax.faces.ViewState hidden input is not added back to the form that is updated (works on Mojarra 2.2.11).
see [http://stackoverflow.com/questions/30530686/myfaces-doesnt-append-javax-faces-viewstate-back-on-ajax-update-of-stateless-vi] for a SSCCE",MYFACES-3993
"http://stackoverflow.com/q/30530686/157882

javax.faces.ViewState hidden input field get lost when f:ajax updates a form in a stateless view.",MYFACES-3992
"Hi,
I am actively using JSF 2.2 flows in my application; I suspect this is bug.
in my view, I do set in my commandLink action, #{memberListBean.setMember(member).

But the above 'setMember' returns outcome 'callMemberRegisterUpdate' which is a node in my flow and invokes the nested flow. (Code is below)

Here, the outbound parameter refers to new instance of MemberListBean, hence I get null for 'memberListBean.member'; I expect the value instead of null as it is set before.

flowBuilder.flowCallNode(""callMemberRegisterUpdate"")
		   .flowReference("""", ""member"") // define the flow to call
		   .outboundParameter(""member"", ""#{memberListBean.member}"");",MYFACES-3991
"DOAP files can contain details of multiple release Versions, however each must be listed in a separate release section, for example:

<release>
      <Version>
        <name>Apache XYZ</name>
        <created>2015-02-16</created>
        <revision>1.6.2</revision>
      </Version>
</release>
<release>
      <Version>
        <name>Apache XYZ</name>
        <created>2014-09-24</created>
        <revision>1.6.1</revision>
      </Version>
</release>

Please can the project DOAP be corrected accordingly?

Thanks.",MYFACES-3990
"If javax.faces.FACELETS_LIBRARIES is specified in several lines
{code:xml}
    <context-param>
        <param-name>javax.faces.FACELETS_LIBRARIES</param-name>
        <param-value>/WEB-INF/tags/popup/popup.taglib.xml;
         /WEB-INF/tags/component/component.taglib.xml</param-value>
    </context-param>
{code}
FacesConfigurator will fail with a MalformedURLException:
{noformat}
ERROR o.a.m.c.FacesConfigurator - Could not read resource 
            /WEB-INF/tags/component/component.taglib.xml
java.net.MalformedURLException: 
            /WEB-INF/tags/component/component.taglib.xml
        at org.eclipse.jetty.webapp.WebAppContext.getResource(WebAppContext.java:351)
        at org.mortbay.jetty.plugin.JettyWebAppContext.getResource(JettyWebAppContext.java:338)
        at org.eclipse.jetty.webapp.WebAppContext$Context.getResource(WebAppContext.java:1325)
        at org.apache.myfaces.context.servlet.ServletExternalContextImplBase.getResource(ServletExternalContextImplBase.java:127)
        at org.apache.myfaces.config.FacesConfigurator.getResourceLastModified(FacesConfigurator.java:293)
        at org.apache.myfaces.config.FacesConfigurator.getLastModifiedTime(FacesConfigurator.java:398)
        at org.apache.myfaces.config.FacesConfigurator.update(FacesConfigurator.java:469)
        at org.apache.myfaces.lifecycle.LifecycleImpl.execute(LifecycleImpl.java:137)
        at javax.faces.webapp.FacesServlet.service(FacesServlet.java:198)
        at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:684)
        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1496)
        at org.springframework.orm.hibernate3.support.OpenSessionInViewFilter.doFilterInternal(OpenSessionInViewFilter.java:231)
        at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1484)
        at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
        at com.deutscheboerse.comxerv.common.util.LoggedInUserFilter.doFilterInternal(LoggedInUserFilter.java:33)
        at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
{noformat}",MYFACES-3989
"While developing a custom tag library we added an empty renderer-type tag like this:

<tag>
     <tag-name>myinput</tag-name>
     <component>
           <component-type>my.test.MyInput</component-type>
          <renderer-type></renderer-type>
     </component>
</tag>

This causes the following exception:

Caused by: java.lang.Exception: Value Cannot be Empty
	at org.apache.myfaces.view.facelets.compiler.TagLibraryConfigUnmarshallerImpl$LibraryHandler.endElement(TagLibraryConfigUnmarshallerImpl.java:395)
	at org.apache.xerces.parsers.AbstractSAXParser.endElement(Unknown Source)
	at org.apache.xerces.impl.XMLNSDocumentScannerImpl.scanEndElement(Unknown Source)
	at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher.dispatch(Unknown Source)
...

This appears to be expected based on the code in TagLibraryConfigUnmarshallerImpl. From what I can see the exception appears to be thrown on elements which are used in another spot. If any of them are empty they will throw the above exception. Wildfly/Glassfish does not have the same behavior, so my assumption is they just ignore it.

Should the MyFaces code be modified to just continue on without the exception, based on the reference implementation? I can quickly create something if so, I just wanted to bring this up to the community at large since I don't know the reasoning behind the difference of the implementations.",MYFACES-3988
"Happens during Selenium test execution in http://svn.apache.org/repos/asf/myfaces/tobago/trunk/tobago-example/tobago-example-test/ for sheet-selector.jspx:

{noformat}
java.lang.NullPointerException
	at org.apache.myfaces.shared.context.flash.FlashImpl.isKeepMessages(FlashImpl.java:395)
	at org.apache.myfaces.shared.context.flash.FlashImpl._saveMessages(FlashImpl.java:686)
	at org.apache.myfaces.shared.context.flash.FlashImpl.doPostPhaseActions(FlashImpl.java:271)
	at org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:280)
	at javax.faces.webapp.FacesServlet.service(FacesServlet.java:200)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:806)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1669)
	at org.apache.myfaces.tobago.webapp.TobagoMultipartFormdataFilter.doFilter(TobagoMultipartFormdataFilter.java:124)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:550)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:223)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1128)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1062)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:215)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:110)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:113)
	at org.eclipse.jetty.server.Server.handle(Server.java:507)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:284)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:237)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:240)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:93)
	at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:53)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceRun.produceAndRun(ExecuteProduceRun.java:191)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceRun.run(ExecuteProduceRun.java:126)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:641)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:559)
	at java.lang.Thread.run(Thread.java:745)
{noformat}",MYFACES-3987
"Consider this scenario:

A JSP file has the following contents:
=============
<!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Transitional//EN""
          ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"">
<html xmlns=""http://www.w3.org/1999/xhtml"" xmlns:h=""http://java.sun.com/jsf/html""
      xmlns:f=""http://xmlns.jcp.org/jsf/core""
      xmlns:c=""http://xmlns.jcp.org/jsp/jstl/core"" >
<body>
<f:view>
 <h:form id=""form1"">
  <c:set target=""${viewScope}"" property=""test"" value=""testValue2"" />
  <h:outputText id=""foo1"" value=""#{viewScope.test}"" />
 </h:form>
</f:view>
</body>
</html>
============

When requested (with the faces mapping), it fails with this exception:
javax.servlet.jsp.JspTagException:
at org.apache.taglibs.standard.tag.common.core.SetSupport.doEndTag(SetSupport.java:195)
at [internal classes]

The reason for that exception is because the target attribute with a value of ""viewScope"" of the c:set tag was resolved to null. 

The Problem:
-----------
I think the issue here is that the wrong FacesCompositeELResolver is used while processing the tags.  From my debugging, I see that there are two FacesCompositeELResolvers created in this scenario and also what is mentioned in the JSF 2.2 spec, section 5.6.  One with JSP scope and one with Faces scope.  The ImplicitElResolvers created in each of these scopes is different as detailed in the spec.  
The problem I see is that when processing the tags, the Faces scoped ELResolvers are created, but not used when processing the c:set tag to resolve the viewScope implicit map.  When processing this tag, it will use the JSP scoped resolvers and therefore cannot resolve the viewScope and throws the exception mentioned above because the org.apache.myfaces.el.unified.resolver.implicitobject.ViewScopeImplicitObject is never called as it is only associated with a Faces scoped ImplicitObjectResolver.

Even though this is a JSP file, shouldn't the Faces scoped resolvers be used when this is a JSF file? 
 
This same scenario works on Mojarra 2.2.10 with Tomcat 8.0.15, but fails when using MyFaces.",MYFACES-3986
Beans such as ViewScopeBeanHolder should use either @PostConstruct or lazy initialization to initialize required fields. Depending on CDI implementation container may create unneccessary objects when field initialization is used,MYFACES-3985
"Current implementation of Application interfaces caches CompositeELResolver internally. According to Application interface definition ELResolvers may be added until application receives first request. This means that, if ELResolver is retrieved before first request, Application implementation does not behave correctly.

There are several ways to resolve this issue. One solution is to create a lazy initializing ELResolver when Application (Impl) is instantiated. This lazy ELResolver should be initialized on first actual call.

Second possible solution also requires creating ELResolver instance when Application is instatiated. In this solution you add new ELResolvers after reading configuration files. In order to support MyFaces specific sorting feature, you are required to cache and sort entries in another structure before registering them to Application's ELResolver.",MYFACES-3984
"Install the ViewScopeTest which was created from the following stack over flow posting: http://stackoverflow.com/questions/2797231/why-does-postconstruct-callback-fire-every-time-even-though-bean-is-viewscoped

Drive a request to /ViewScopeTest/ViewScopeBinding.jsf 
and click on one of the buttons.



The following error occurs:

 Exception thrown by application class 'javax.faces.webapp.FacesServlet.service:230' 
  javax.servlet.ServletException: 
 at javax.faces.webapp.FacesServlet.service(FacesServlet.java:230)
at com.ibm.ws.webcontainer.servlet.ServletWrapper.service(ServletWrapper.java:1285)
at [internal classes]
 
Caused by: java.lang.NullPointerException: 
 at org.apache.myfaces.view.facelets.compiler.CheckDuplicateIdFaceletUtils.createAndQueueException(CheckDuplicateIdFaceletUtils.java:139)
... 1 more

This works fine on server with Mojarra ",MYFACES-3983
"This issue has been discussed and fixed for Mojarra here 
https://java.net/jira/browse/JAVASERVERFACES-2979

This also needs to be fixed for MyFaces.",MYFACES-3982
"Following testcases does not print anything in a facelet

<h:outputText id=""out6"" value=""#{Integer.numberOfTrailingZeros(16)}""/>

<h:outputText id=""out7"" value=""#{((firstStr, secondStr)-> (Integer.compare(firstInt,secondInt)))(5,6)}"" />
",MYFACES-3981
"Doing some debugging for MYFACES-3964, it was discovered that c:forEach tag has a typo error when varStatus is set. This cause a malfunction, because the same base for var is used for varStatus. The perceived effect is a PropertyNotFoundException or an ELException.

The problem is not present when facelets compatibility mode is enabled.",MYFACES-3980
"https://issues.apache.org/jira/browse/MYFACES-3947 reported two issues , 

The first issue of page not rendering is fixed with https://issues.apache.org/jira/browse/MYFACES-3947

but the second issue of textarea field value not set by backing bean is still not working. 

As mentioned if used h:inputTextarea then it works .",MYFACES-3979
"There's a NullPointerException in FaceletStateValueExpression.getValue() when using ViewPooling under a specific scenario.  Its triggered during an AJAX post-back when we provide a CDI bean as a ui:param into a ui:include via an EL lookup.  This pattern works correctly when view pooling is disabled.

Here's a example snippet of what triggers the issue.

Snippet from the main page:

        <ui:include src=""includedAjax.xhtml"">
          <ui:param name=""controller"" value=""#{helloCdiTwoViewScopedBean}""/>
        </ui:include>

The component referenced from the <ui:include>:

        <h:form id=""jsfcdiviewViewScoped"">
           <h:inputText id=""name"" value=""#{controller.name}""></h:inputText>
              <h:commandButton value=""Welcome Me"">
                  <f:ajax execute=""@form"" render=""output""/>
              </h:commandButton>

           <h2><h:outputText id=""output"" value=""#{controller.sayWelcome}"" /></h2>
           view:#{view} viewScope:#{viewScope}
        </h:form>


The NullPointerException stack trace is listed below.  A simple example to recreate will also be attached.

2015-04-06 15:30:11,812 DEBUG [com.autotrader.enterprise.common.context.LogPhaseListener] (default task-4) Start Phase RESTORE_VIEW(1)
2015-04-06 15:30:11,818 DEBUG [com.autotrader.enterprise.common.context.LogPhaseListener] (default task-4) End Phase RESTORE_VIEW(1)
2015-04-06 15:30:11,818 DEBUG [com.autotrader.enterprise.common.context.LogPhaseListener] (default task-4) Start Phase APPLY_REQUEST_VALUES(2)
2015-04-06 15:30:11,822 DEBUG [com.autotrader.enterprise.common.context.LogPhaseListener] (default task-4) End Phase APPLY_REQUEST_VALUES(2)
2015-04-06 15:30:11,822 DEBUG [com.autotrader.enterprise.common.context.LogPhaseListener] (default task-4) Start Phase PROCESS_VALIDATIONS(3)
2015-04-06 15:30:11,824 DEBUG [com.autotrader.enterprise.common.context.LogPhaseListener] (default task-4) End Phase PROCESS_VALIDATIONS(3)
2015-04-06 15:30:11,826 ERROR [com.autotrader.enterprise.common.exception.AtExceptionHandler] (default task-4) Error occurred on page: http://taxi49003.autotrader.com:8400/examples/ajaxsamples/helloAjaxInclude.xhtml for ip address: 10.102.113.33 and sessionid: vlQO1yZzubh1-z23UF9S7YUz: java.lang.NullPointerException
        at org.apache.myfaces.view.facelets.el.FaceletStateValueExpression.getValue(FaceletStateValueExpression.java:107) [myfaces-impl-2.2.7.jar:2.2.7]
        at com.sun.el.parser.AstIdentifier.getValue(AstIdentifier.java:112) [javax.el-3.0.1-b05.jar:]
        at com.sun.el.parser.AstValue.getBase(AstValue.java:151) [javax.el-3.0.1-b05.jar:]
        at com.sun.el.parser.AstValue.getTarget(AstValue.java:170) [javax.el-3.0.1-b05.jar:]
        at com.sun.el.parser.AstValue.getType(AstValue.java:86) [javax.el-3.0.1-b05.jar:]
        at com.sun.el.ValueExpressionImpl.getType(ValueExpressionImpl.java:201) [javax.el-3.0.1-b05.jar:]
        at org.jboss.weld.el.WeldValueExpression.getType(WeldValueExpression.java:93) [weld-core-impl-2.2.6.Final.jar:2014-10-03 10:05]
        at org.jboss.weld.el.WeldValueExpression.getType(WeldValueExpression.java:93) [weld-core-impl-2.2.6.Final.jar:2014-10-03 10:05]
        at org.apache.myfaces.view.facelets.el.ContextAwareTagValueExpression.getType(ContextAwareTagValueExpression.java:75) [myfaces-impl-2.2.7.jar:2.2.7]
        at org.apache.myfaces.shared.renderkit._SharedRendererUtils.findUIOutputConverter(_SharedRendererUtils.java:78) [myfaces-impl-2.2.7.jar:2.2.7]
        at org.apache.myfaces.shared.renderkit.RendererUtils.findUIOutputConverter(RendererUtils.java:543) [myfaces-impl-2.2.7.jar:2.2.7]
        at org.apache.myfaces.shared.renderkit.RendererUtils.getConvertedUIOutputValue(RendererUtils.java:1004) [myfaces-impl-2.2.7.jar:2.2.7]
        at org.apache.myfaces.shared.renderkit.html.HtmlTextRendererBase.getConvertedValue(HtmlTextRendererBase.java:356) [myfaces-impl-2.2.7.jar:2.2.7]
        at javax.faces.component.UIInput.getConvertedValue(UIInput.java:662) [myfaces-api-2.2.7.jar:2.2.7]
        at javax.faces.component.UIInput.validate(UIInput.java:598) [myfaces-api-2.2.7.jar:2.2.7]
        at javax.faces.component.UIInput.processValidators(UIInput.java:274) [myfaces-api-2.2.7.jar:2.2.7]
        at javax.faces.component.UIForm.processValidators(UIForm.java:210) [myfaces-api-2.2.7.jar:2.2.7]
        at org.apache.myfaces.context.servlet.PartialViewContextImpl$PhaseAwareVisitCallback.visit(PartialViewContextImpl.java:776) [myfaces-impl-2.2.7.jar:2.2.7]
        at org.apache.myfaces.component.visit.PartialVisitContext.invokeVisitCallback(PartialVisitContext.java:213) [myfaces-impl-2.2.7.jar:2.2.7]
        at javax.faces.component.UIForm.visitTree(UIForm.java:314) [myfaces-api-2.2.7.jar:2.2.7]

",MYFACES-3978
"the spec states 12.1.3 add this text to the javax.faces.STATE_SAVING_METHOD spec. When examining the value, the runtime must ignore the case.

When I try to test this using ""ClienT"" as the value, I see this error message:
WebConfigPara W   Wrong value in context init parameter 'javax.faces.STATE_SAVING_METHOD' (='ClienT'), using default value 'server'

Although it uses the client correctly.    I think we just need to convert the string to lower-case and report it accurately when logging.",MYFACES-3977
"In JSF 2.2, the viewAction component has a phase attribute which a user can specify what JSF lifecycle phase the action is executed in.  
For example:
---------
<f:metadata>
<f:viewAction action=""#{testBean.checkPhase}"" phase=""PROCESS_VALIDATIONS""/>
</f:metadata>
---------

In the backing bean, the checkPhase method simply gets the current phase we are in like this:
PhaseId phase = FacesContext.getCurrentInstance().getCurrentPhaseId();

The issue is that this is always called during the INVOKE_APPLICATION phase regardless of what is specified in the phase attribute. 
I tested this scenario with Mojarra 2.2.10 and it works as I expect it to...meaning it gets called in the phase that is specified in the phase attribute. 

In an initial investigation, I think the problem is in the javax.faces.component.UIViewAction class in the queueEvent method.
Before going in to the if/else block below, the event.getPhaseId will have the value that was set on the phase attribute in the JSF page.  However, this block of code will change it to INVOKE_APPLICATION, which is the default phase the viewAction is called in: 

public void queueEvent(FacesEvent event)
    {
        if (event != null && event instanceof ActionEvent)
        {
            UIComponent component = event.getComponent();
            if (component instanceof ActionSource)
            {
                if (((ActionSource)component).isImmediate())
                {
                    event.setPhaseId(PhaseId.APPLY_REQUEST_VALUES);
                }
                else
                {
                    event.setPhaseId(PhaseId.INVOKE_APPLICATION);
                }
            }
        }
        super.queueEvent(event);
    }

I believe the fix should change the else block to leave the phaseId on the event object as is if it one of the valid values:
APPLY_REQUEST_VALUES
PROCESS_VALIDATION
UPDATE_MODEL_VALUES
INVOKE_APPLICATION

Note: RESTORE_VIEW and RENDER_RESPONSE are not valid values for the phase attribute of viewAction.  

Note2: INVOKE_APPLICATION is the default phase a viewAction is called, so that needs to be taken in to consideration as well (e.g. if some invalid value specified in the phase attribute)",MYFACES-3976
"The new javax.faces.event.PreClearFlashEvent EvenListener in JSF 2.2 is called on every request, regardless of it uses Flash or not. 

On a normal request without any use of Flash, you can see this output from the SystemEventListener in the attached testcase:
--------
PreClearFlashEvent processEvent called

PreClearFlashEventListener is and instance of PreClearFlashEvent
--------

I tested this same application with Mojarra RI 2.2.10 and it does not call this SystemEventListener at all.  I only see it called when using Flash on Mojarra.  ",MYFACES-3975
"In JSF 2.2 there ""delay"" attribute of the f:ajax component should accept a value of ""none"".

The tag library documentation here:
https://docs.oracle.com/javaee/7/javaserver-faces-2-2/vdldocs-facelets/f/ajax.html

states that the delay attributes can:
""...If this option is not specified, or if the value of delay is the literal string 'none' without the quotes, no delay is used. ""

However, in MyFaces 2.2.7 this is not working.  It results in the ajax action to not be called at all.  

This same test works with Mojarra 2.2.10.  

I will upload a simple test case to demonstrate this issue.
Simply access:
localhost:<port>/AjaxDelayTest/ajaxDelayNone.jsf

Also, a working scenario with a value of 400 is here:
localhost:<port>/AjaxDelayTest/ajaxDelay400.jsf

And a working scenario with a value of zero (""0"")  is here:
localhost:<port>/AjaxDelayTest/ajaxDelayZero.jsf

In these tests, Enter ""joh"" in the field.  You should see the results displayed below but they are not in the ""none"" test.  Also, you do not see three calls in the logs to the backing bean.  

I would expect that using either ""none"" or ""0"" as the value would give you the same behavior.",MYFACES-3974
"In the JSF 2.2 specification, under the Lifecycle changes, it specifies this change:
--------
In web-partialresponse_2_2.xsd, require that the <partial-response> element has an “id” attribute whose value is the return from UIViewRoot.getContainerClientId().
--------

However, I tested a simple Ajax call using MyFaces 2.2.7, it does not add an id attribute on a response from an Ajax POST request. 
For example, if you execute an Ajax request in a browser and view the response via web tools you can see something like this:

<?xml version=""1.0"" encoding=""UTF-8""?>
<partial-response>
 <changes>
	<update id=""form1:employeeMatches"">
		<![CDATA[<span id=""form1:employeeMatches""></span>]]>
	</update>
	<update id=""j_id__v_0:javax.faces.ViewState:1"">
	  <!CDATA[UUOsHNAgWbpnTUIxakamLpmVmCpjK5C4uqUU38cIIdd6oupU]]>
	</update>
 </changes>
</partial-response>

However, if you run the same scenario using Mojarra JSF 2.2.10 the <partial-response> tag will contain an id attribute.",MYFACES-3973
"MyFaces doesn't yet support 
https://java.net/jira/browse/JAVASERVERFACES_SPEC_PUBLIC-1026

which is to support, 
f:ajax event=#{bean.method}

Looks like there is already a Jira with the patch open in MyFaces for this, https://issues.apache.org/jira/browse/MYFACES-3233

Is there any plan to support this?
",MYFACES-3972
" As per the spec, the 'var' and 'varStatus' attributes in ui:repeat should be  javax.el.ValueExpression (must evaluate to java.lang.Object).

As such, it should be possible to use it in a composite with a value like #{cc.attrs.varname} where varname is a cc:attribute populated where the composite is instantiated.

ui:repeat as it wotks now, it will now evaluate any el sett in var.",MYFACES-3971
"JSF specification says that <contract-mapping> can have one or more url-pattern with one or more contracts. So Many to many option is possible. 

11.4.2.1

 The <resource-library-contracts> element is contained with in the <application> element and contains
one or more <contract-mapping> elements. Each <contract-mapping> element must one or more <urlpattern>
elements and one or more <contract> elements.

In my testing on Myfaces 2.2.7 it always keeps the second entry in the list overwriting the first one. 

e.g. for this url-pattern the contract assigned is ""team"" . It does not consider ""testContract"".

			<contract-mapping>
				<url-pattern>/user/*</url-pattern>				
		  		<contracts>testContract</contracts> 
		  		<contracts>team</contracts>
			</contract-mapping>


Tested on reference implementation Mojarra , it assigns to testContract correctly.
",MYFACES-3970
"When you specify an initializer for a Faces Flow, it is called before any inbound parameters have been set, which defeats the usefulness of having an initializer.  This bug is also present in Mojarra <= 2.2.10.  This is the tracker for the issue there: https://java.net/jira/browse/JAVASERVERFACES-3475",MYFACES-3969
"The following is defined in web.xml:

{code}
    <context-param>
        <param-name>javax.faces.FACELETS_LIBRARIES</param-name>
        <param-value>/WEB-INF/jsflive.taglib.xml</param-value>
    </context-param>
{code}

Line 397 in  is:
{code}
String systemId = configFilesList.get(i);
{code}
while it should be:
{code}
String systemId = faceletFilesList[i];
{code}

{code}

java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
	at java.util.ArrayList.rangeCheck(ArrayList.java:653)
	at java.util.ArrayList.get(ArrayList.java:429)
	at org.apache.myfaces.config.FacesConfigurator.getLastModifiedTime(FacesConfigurator.java:397)
	at org.apache.myfaces.config.FacesConfigurator.update(FacesConfigurator.java:469)
	at org.apache.myfaces.lifecycle.LifecycleImpl.execute(LifecycleImpl.java:137)
	at javax.faces.webapp.FacesServlet.service(FacesServlet.java:198)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:669)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:457)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1075)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:384)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1009)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:255)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)
	at org.eclipse.jetty.server.Server.handle(Server.java:368)
	at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:489)
	at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:942)
	at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:1004)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:640)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)
	at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)
	at java.lang.Thread.run(Thread.java:745)
{code}",MYFACES-3968
"See myfaces-users thread on the topic. http://markmail.org/thread/3enmbvaf47cm2zdn 

We needed to disable view pooling for certain views because we noticed issues with ""static structure"" views when using ViewScope.  Our ViewScope beans are available in our controller code, but are no longer available during the RenderResponse phase in our xhtml pages - via expression language lookups.     
   - On the very first request to the view (before its placed in the pool), the
state is applied correctly - but then every subsequent request to the pooled
view doesn't have the correct view state.   
   - It looks like the view state hasn't been correctly applied on the view
after its retrieved from the pool.

Ways we've been able to work around this issue:   
   - If we disable view pooling for these views, then the beans are correctly
available in ViewScope.   
   - We don't see this issue on any of our ""dynamic structure"" views - in fact,
if we convert the static structure view to a dynamic structure view (via an
extra ui:include with EL, etc), then the view state is mapped correctly and the viewscope beans are available.    ",MYFACES-3967
"In testing View Pooling, we disabled it for specific views, using <f:view oamEnableViewPool=""false"">.  Using this tag, view pooling is disabled, but there's a NullPointerException in ViewPoolProcessor.pushPartialView().  We originally saw the issue with 2.2.0, but it persists when upgrading to 2.2.7.

A simple patch fixed the issue for us, by checking if the viewPool is null, before  executing isWorthToRecycleThisView().  Is this the preferred way to fix this defect, or will we encounter additional issues with further testing?

diff --git a/impl/src/main/java/org/apache/myfaces/view/facelets/ViewPoolProcessor.java b/impl/src/main/java/org/apache/myfaces/view/facelets/ViewPoolProcessor.java
index 08c10e1..b4d9025 100644
--- a/impl/src/main/java/org/apache/myfaces/view/facelets/ViewPoolProcessor.java
+++ b/impl/src/main/java/org/apache/myfaces/view/facelets/ViewPoolProcessor.java
@@ -447,7 +447,7 @@ public void pushPartialView(FacesContext context, UIViewRoot view, FaceletState
     {
         ViewPool viewPool = getViewPool(context, view);
         
-        if (viewPool.isWorthToRecycleThisView(context, view))
+        if (viewPool != null && viewPool.isWorthToRecycleThisView(context, view))
         {
             ViewStructureMetadata viewStructureMetadata = null;
             if (faceletViewState == null)


 ",MYFACES-3966
"During navigation, the component tree is visited to publish the PreDestroyView event to all components in the tree ( org.apache.myfaces.application.NavigationHandlerImpl.handleNavigation).

When the VisitContext is created, the SKIP_ITERATION VisitHint is not set in the VisitContext.  The only thing that is set is the SKIP_ITERATION attribute in the FacesContext attribute map, which is not honoured by libraries such as ICEfaces.

This can cause an issue if rows in tables are visited and these rows have EL expressions that access backing beans that, for some or other reason, is no longer available.  In our case we switch between different contexts in our application before performing the navigation and the EL expression is evaluated against the new context instead of the old context, causing issues.
",MYFACES-3965
"c:foreach doesn't work as intended when using an object with an overriden equals. The same problem is observed when using an non serializable object. In both cases the problem seems to be that the foreach component caches and uses an outdated reference to the object.

When using a serializable object with a non overwriten equals method, all works as intended.

When forcing org.apache.myfaces.STRICT_JSF_2_FACELETS_COMPATIBILITY as true on the web.xml file, all works as intended.

When using ui:repeat, all works as intended.

I created a test case that demonstrates the problem.",MYFACES-3964
A duplicate ID exception is thrown when iterating over a collection/array with c:forEach. The exception occurs only when the enclosed components have an ID assigned.,MYFACES-3962
"This is a simple button that hide itself:
{code:title=markup.xml}
<h:panelGroup id=""hideMySelf"">
    <h:commandButton value=""Hide Myself"" action=""#{hello.hideButton()}""
                             rendered=""#{not hello.buttonHidden}"">
        <f:ajax render=""hideMySelf""/>
    </h:commandButton>
</h:panelGroup>
{code}
This is the backing bean:
{code:title=Hello.java}
@ManagedBean
@ViewScoped
public class Hello {
    private boolean buttonHidden = false;
    public void hideButton(){
        buttonHidden = true;
    }
    public boolean isButtonHidden() {
        return buttonHidden;
    }
}
{code}
When the button is clicked, it failed to hide itself.  If we add setter method for buttonHidden property, then the button works as expected.
Mojarra 2.2.8 does not have this problem.",MYFACES-3961
"From  Bauke Scholtz

Trigger:
http://stackoverflow.com/q/28901284

Code:
<h:commandLink action=""#{bean.action}"">
  <f:ajax listener=""#{bean.listener}"" />
</h:commandLink>

Mojarra:
Listener is first invoked and then action.

MyFaces:
Action is first invoked and then listener.

Who's correct? I couldn't find this in the spec. We need to align out it. As the action is supposed to be definitive (because of the navigation case outcome), I find Mojarra behavior is correct.

It looks like an exception to the general rule (decode and then decode client behaviors), so we need to decode, decode client behaviors and queue ActionEvent at last.",MYFACES-3960
"This outcommented code in a jsf page will be executed but is outcommented.

<!-- 
<f:metadata>
	<f:viewAction actionListener=""#{forwardDispatcherBean.manageActionListener()}"" />
</f:metadata>
 -->",MYFACES-3959
"Hello,

this is about refresh when in development mode it seems. This has changed in 2.2.7 and it seems broken for me. 

Steps to reproduce:

1. Have no extra faces-config, just the std one in web-inf
2. Do have extra taglib.xml file!
3. It blows up on first request


The flow is like this, in FacesConfigurator#getLastModifiedTime you get a list back that is empty if no extra faces-configs. Happens on line 378.

Then a major bad thing happens. The comment on line 389 seems aware that the call call to #getStringInitParameter with key javax.faces.FACELETS_LIBRARIES is actually about taglibs. However the result from that call is treated like faces-configs.

Since the list of faces-configs was empty since before it blows up on row 397. 

I don't understand the code here fully - but this is my conclusion thus far.


java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
	java.util.ArrayList.rangeCheck(ArrayList.java:653)
	java.util.ArrayList.get(ArrayList.java:429)
	org.apache.myfaces.config.FacesConfigurator.getLastModifiedTime(FacesConfigurator.java:397)
	org.apache.myfaces.config.FacesConfigurator.update(FacesConfigurator.java:469)
	org.apache.myfaces.lifecycle.LifecycleImpl.execute(LifecycleImpl.java:137)
	org.apache.deltaspike.jsf.impl.listener.request.DeltaSpikeLifecycleWrapper.execute(DeltaSpikeLifecycleWrapper.java:89)
	javax.faces.lifecycle.LifecycleWrapper.execute(LifecycleWrapper.java:46)
	javax.faces.webapp.FacesServlet.service(FacesServlet.java:198)
	org.omnifaces.facesviews.FacesViewsForwardingFilter.doFilter(FacesViewsForwardingFilter.java:111)
	org.omnifaces.filter.HttpFilter.doFilter(HttpFilter.java:108)
	org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	org.apache.deltaspike.servlet.impl.event.EventBridgeFilter.doFilter(EventBridgeFilter.java:59)
	org.apache.deltaspike.servlet.impl.produce.RequestResponseHolderFilter.doFilter(RequestResponseHolderFilter.java:63)
	org.omnifaces.filter.CharacterEncodingFilter.doFilter(CharacterEncodingFilter.java:122)
	org.omnifaces.filter.HttpFilter.doFilter(HttpFilter.java:108)
	org.apache.sirona.web.servlet.SironaFilter$Invocation.proceed(SironaFilter.java:140)
	org.apache.sirona.web.servlet.SironaFilter.proceed(SironaFilter.java:100)
	org.apache.sirona.web.servlet.SironaFilter.proceed(SironaFilter.java:36)
	org.apache.sirona.aop.AbstractPerformanceInterceptor.doInvoke(AbstractPerformanceInterceptor.java:84)",MYFACES-3958
"{code}
          <h:commandLink disabled=""true"" onclick=""alert('hello')"" type=""button"">link</h:commandLink>
AND
          <h:commandLink disabled=""true"" onclick=""alert('hello')"" type=""button"" value=""link"" />
{code}

Result in:
{code}
<span onclick=""alert('hello')"" type=""button"">link</span>
{code}
I would have expected to find a disabled <a ...></a> or a span without the onclick action.

In comparison a disabled h:commandButton:
{code}
<h:commandButton disabled=""true"" value=""button"" onclick=""alert('hello')"" type=""button""/>
{code}

Results in:
{code}
<input name=""frmContent:j_id499838546_62f34114"" disabled=""disabled"" id=""frmContent:j_id499838546_62f34114"" onclick=""alert('hello')"" type=""button"" value=""button""></input>
{code}
As expected the onclick action is not preformed.

I would expect similar behaviour from both h:commandButton and h:commandLink.

 
",MYFACES-3957
I have found a typo error in ResourceHandler.libraryExists(...) that change the order of contractName and libraryName parameters when ContractResourceLoader is used. The solution is just fix the order.,MYFACES-3956
"Section 5.6.2.2. there is a part when you need to return a Map, and that map is resolved by MapELResolver, but that is not a good idea, because this resolver is the last of the EL Resolver chain. It is also necessary to call FacesContext.getCurrentInstance() internally to evaluate the target EL expressions. It would be better if this is still a map, but we force that another EL Resolver (it could be the same) handles this object (using a class cast that check if the object implements some interface). In that way, we can pass the FacesContext  instance to a custom method that receives FacesContext as parameter, instead use Map.get().

That simple change would increase performance of composite components, improving the speed of the EL evaluation.

The point is the spec says that a map should be returned, but it doesn't say anything about that MapELResolver should resolve the map. So, the change proposed is add a custom ELResolver to handle #{cc.attrs...} map in the same way as MapELResolver, but make some shorcuts, like pass the FacesContext, and so on, improving composite components performance. 

We can use a flag to enable/disable this behavior, but let it as default enabled. Please note technically we are not breaking the spec, because it is not expected that MapELResolver or any other resolver handles #{cc.attrs...} map
",MYFACES-3955
"Thinking about some stuff for JSF 2.3 and checking how ResourceHandler is implemented, I notice the call to ResourceHandler.libraryExists(...) does not take advantage of ResourceLoaderCache and instead call every ResourceLoader and ContractResourceLoader. The problem is these loaders has some calls that are slow, while a cache lookup can be fast.

Most of the time. ResourceHandler.libraryExists(...) is called when a facelet is compiled and it requires a composite components. Since there is already a cache for compiled facelets, the impact is seen only when the facelet is compiled, but this step is done for every facelet that makes a reference to the same composite component. 

It is a minor improvement, but it will improve the speed of the compilation step. ",MYFACES-3954
"Looks like a copy / paste error in method getLastModifiedTime() which causes only in project stage development:

for (int i = 0, size = faceletFilesList.length; i < size; i++)
{
    String systemId = configFilesList.get(i);

Iteration over faceletFilesList and access on configFileList.",MYFACES-3953
"Currently in org.apache.myfaces.config.FacesConfigurator, line 397:

{code:java}
String systemId = configFilesList.get(i);
{code}

But it obviously should be :
{code:java}
String systemId = faceletFilesList[i];
{code}",MYFACES-3952
"h:commandButton action is not performed when there is one composite component with comments on interface section. This only happens in the first click after the server starts. The second time the user clicks, the action is performed as expected. If we remove the comment from the composite component, everything works.


Test Case:

Page

<html xmlns=""http://www.w3.org/1999/xhtml""
      xmlns:h=""http://xmlns.jcp.org/jsf/html""
      xmlns:vc=""http://xmlns.jcp.org/jsf/composite/core"">
 
    <h:head>
        <title>JSF 2.2 Composite Component Test Case</title>
    </h:head>
    <h:body>
    	<h:form>
    		<vc:emptyComponent />
    	   <h:commandButton value=""Execute Action"" action=""#{testBeanCC.printAction}"" />
    	</h:form>
    </h:body>
</html>


Managed Bean

@ManagedBean(name=""testBeanCC"")
@SessionScoped
public class TestBeanCC {
	public String printAction() {
		System.out.println(""action performed"");
		return null;
	}
}


Composite Component

<html xmlns=""http://www.w3.org/1999/xhtml""   
      xmlns:composite=""http://xmlns.jcp.org/jsf/composite"">

    <composite:interface>
	   	<composite:attribute name=""name""/> <!-- remove this comment to make it work -->
    </composite:interface>
    
	<composite:implementation>
		
	</composite:implementation>
</html>
",MYFACES-3951
"in org.apache.myfaces.config.FacesConfigurator:397

instead of:

            for (int i = 0, size = faceletFilesList.length; i < size; i++)
            {
                String systemId = configFilesList.get(i);

it should be:

            for (int i = 0, size = faceletFilesList.length; i < size; i++)
            {
                String systemId = faceletFilesList[i];

This bug causes IndexOutOfBounds Exceptions!",MYFACES-3950
"We have a JSF application where we mainly use ViewScoped beans, and add no-cache headers for all JSF pages. Navigating back to a previous page (with the browser) correctly recreates the beans, and renders new HTML, with a new ViewState ID. But... Chrome ""autocompletes"" _some_ of the hidden ViewState inputs, overriding the new value with an old ViewState value. We have verified this in the browser dev-tools by looking at the response, which is correct, and the resulting HTML which is not.

In short, this seems like a known autocomplete issue, which Mojarra has fixed since 1.2, by adding 'autocomplete=""off""' to the hidden ViewState input. Most browsers skip autocompleting hidden fields (in most situations), but apparently this is not always the case.

We can add 'pa:autocomplete=""off""' explicitly to the whole form, as a case-by-case workaround for this issue. But to our understanding, a full fix would be if MyFaces rendered ""autocomplete='off'"" for its hidden javax.faces.ViewState inputs.",MYFACES-3949
This bug was introduced by MYFACES-3929. The last modified check for .taglib.xml is accessing the wrong list. This results in a IndexOutOfBoundsException.,MYFACES-3948
"<textarea> used as a passthrough element cannot be rendered.

Use the following facelet:
<!DOCTYPE html>
<html xmlns=""http://www.w3.org/1999/xhtml""
      xmlns:f=""http://xmlns.jcp.org/jsf/core""
      xmlns:h=""http://xmlns.jcp.org/jsf/html""
      xmlns:pt=""http://xmlns.jcp.org/jsf/passthrough""      
      xmlns:jsf=""http://xmlns.jcp.org/jsf"">
    <head jsf:id=""head"">
        <title>Email Test</title>
    </head>
    <body jsf:id=""body"">
        <form jsf:id=""form"">
            <input type=""text"" jsf:id=""name""
                placeholder=""Enter name""
                jsf:value=""#{contactUs.fromName}""/>
            <br/>
            <br/>
            <input type=""text"" jsf:id=""email-address""
                placeholder=""Enter email address""
                jsf:value=""#{contactUs.fromEmail}""/>
            <br/>
            <br/>
            <textarea jsf:id=""contact-message"" 
                      name=""comments"" 
                      placeholder=""I wanna talk about...""
                      jsf:value=""#{contactUs.message}""/>
            <br/>
            <br/>
            <button type=""submit"" jsf:action=""#{contactUs.submit}"">Send Email</button>
        </form>
    </body>
</html>

You'll see an error similar to the following:
/email-test.xhtml at line 25 and column 64 <textarea> Tag Library supports namespace: http://xmlns.jcp.org/jsf/html, but no tag was defined for name: inputTextArea

viewId=/email-test.xhtml
location=/path/to/file
phaseId=RENDER_RESPONSE(6)

Caused by:
javax.faces.view.facelets.TagException - /email-test.xhtml at line 25 and column 64 <textarea> Tag Library supports namespace: http://xmlns.jcp.org/jsf/html, but no tag was defined for name: inputTextArea
at org.apache.myfaces.view.facelets.compiler.CompilationManager.pushTag(CompilationManager.java:300)


Replace MyFaces with Mojarra 2.2.9+ and the facelet will render.


You may also want to check if the textarea's value will be passed to a backing bean.  The message field's value is never set in the backing bean for Mojarra.  I have to use h:inputTextarea for the backing bean's value for that field to be set.


In case you need it for convenience's sake, here's the backing bean:
import java.io.Serializable;
import javax.enterprise.context.RequestScoped;
import javax.inject.Named;

/**
 *
 * @author Chris Harris
 */
@Named
@RequestScoped
public class ContactUs implements Serializable {
    private static final long serialVersionUID = -1L;
    
    private String fromName, fromEmail, message;
    
    public void setFromName(String fromName) {
        this.fromName = fromName;
    }
    public String getFromName() {
        return this.fromName;
    }
    public void setFromEmail(String fromEmail) {
        this.fromEmail = fromEmail;
    }
    public String getFromEmail() {
        return this.fromEmail;
    }
    public void setMessage(String message) {
        this.message = message;
    }
    public String getMessage() {
        return this.message;
    }

    public void submit() {
        System.out.println(""Here's the data..."");
        System.out.println(""fromName: "" + fromName);
        System.out.println(""fromEmail: "" + fromEmail);
        System.out.println(""message: "" + message);
    }
}",MYFACES-3947
"Hi,

I'm trying to add an ajax listener to a h1 tag by using passthrough elements in the following way:

{code}
<h1 jsf:id=""heading"">
    <f:ajax event=""click"" render=""counter"" listener=""#{helloWorldBacking.headingClicked}""/>
    <h:outputText value=""Heading (Click me)"" />
</h1>
<h:outputText id=""counter"" value=""Heading clicked: #{helloWorldBacking.count} Times"" />
{code}

The request is processed and the response contains the correct updates but the listener is not invoked.

I noticed [~lu4242] commented on MYFACES-3920 that he has a similar behavior with panelGroups because the decode method was not overridden in the renderer. The JsfElementRenderer is also missing the decode method although JsfElement implements ClientBehaviorHolder.

I created a sample project on GitHub: https://github.com/khujo/myfacesPassthroughAjax

Best regards",MYFACES-3946
"MyFaces 2.2.6 will not register classes with the FacesConverter attribute, etc., if they contain lambdas or other Java 8 features.",MYFACES-3945
"In some situations where an exception could be raised inside a component like c:forEach, and on the same time fcc.startComponentUniqueIdSection(...) and fcc.endComponentUniqueIdSection(...) are used, the section is not closed, affecting theoretically the ids generated.

The probability of something like this is very low, but as a good practice it would be better to ensure  fcc.startComponentUniqueIdSection(...) and fcc.endComponentUniqueIdSection(...)  are called inside a try{...} finally block.",MYFACES-3944
"Hi,

The jsf.js inside ""myfaces-api-2.1.9 \ ~ \javax.faces"" is having two texts  like :  \r\n//@ . This is now working for IE browser. I request if the community can modify this to \r\n// @ . As a space is required in between the // & @ for the IE browser or else it consider this as a statement. It is effecting a vital functionality of our project which where we have used  myfaces-api-2.1.9.jar. Our team shall be very thankful if inside same jar version (keeping all other functionalities as at is), the release could be made so that our application could remain breakless.

Please look after this issue with a high priority. It shall be great if you could please contact us asap.

Thanks & Regards,
Sanchit Choubey
Coimbatore,
India",MYFACES-3943
"Using {{binding}} attribute on {{<f:viewParam>}} as follows:
{code}
<f:viewParam name=""foo"" binding=""#{foo}"" />
{code}
causes regardless of the binding location (Facelet itself as demonstrated above, request scoped bean, session scoped bean, etc) the following exception: 
{code}
java.lang.NullPointerException
	at org.apache.myfaces.view.facelets.tag.jsf.ComponentTagHandlerDelegate.createComponent(ComponentTagHandlerDelegate.java:534)
	at org.apache.myfaces.view.facelets.tag.jsf.ComponentTagHandlerDelegate.apply(ComponentTagHandlerDelegate.java:284)
	at javax.faces.view.facelets.DelegatingMetaTagHandler.apply(DelegatingMetaTagHandler.java:50)
	at org.apache.myfaces.view.facelets.tag.jsf.core.ViewMetadataHandler.apply(ViewMetadataHandler.java:85)
	at org.apache.myfaces.view.facelets.tag.jsf.core.ViewHandler.apply(ViewHandler.java:195)
	at org.apache.myfaces.view.facelets.compiler.NamespaceHandler.apply(NamespaceHandler.java:59)
	at org.apache.myfaces.view.facelets.compiler.EncodingHandler.apply(EncodingHandler.java:48)
	at org.apache.myfaces.view.facelets.impl.DefaultFacelet.apply(DefaultFacelet.java:188)
	at org.apache.myfaces.view.facelets.FaceletViewDeclarationLanguage$FaceletViewMetadata.createMetadataView(FaceletViewDeclarationLanguage.java:2752)
	at org.apache.myfaces.lifecycle.RestoreViewExecutor.execute(RestoreViewExecutor.java:255)
	at org.apache.myfaces.lifecycle.LifecycleImpl.executePhase(LifecycleImpl.java:196)
	at org.apache.myfaces.lifecycle.LifecycleImpl.execute(LifecycleImpl.java:143)
	at javax.faces.webapp.FacesServlet.service(FacesServlet.java:198)
	... 
{code}
Turns out that {{UIViewRoot}} is {{null}} while the code didn't expect that.",MYFACES-3942
"Correct definition should be:

{code:title=org.apache.myfaces.view.facelets.impl.FaceletCacheImpl}
public boolean isFaceletCached(URL url)
{
    return _facelets.containsKey(url.toString());
}
{code}

The facelets map {{_facelets}} is actually declared as:
{code}
private Map<String, DefaultFacelet> _facelets;
{code}

For obvious reasons the current implementation will, in effect, always return false.

I don't know if a null check might be appropriate, i.e. 
{code:title=org.apache.myfaces.view.facelets.impl.FaceletCacheImpl}
public boolean isFaceletCached(URL url)
{
    return url!=null && _facelets.containsKey(url.toString());
}
{code}
",MYFACES-3941
"Session scoped cdi bean FlowScopeBeanHolder relies on existance of ApplicationContextBean. However, when application is shutdown there is no guarantee that application scoped bean is destroyed after session scoped bean. Because ApplicationContextBean no longer exists, application server to throws an exception:

[10.11.2014 10:06:50:511 EET] 00000072 ManagedBean   E ManagedBean error An error occurred while executing [@PreDestroy.]
                                 javax.enterprise.context.ContextNotActiveException: WebBeans context with scope type annotation @ApplicationScoped does not exist within current thread
	at org.apache.webbeans.container.BeanManagerImpl.getContext(BeanManagerImpl.java:323)
	at org.apache.webbeans.intercept.NormalScopedBeanInterceptorHandler.getContextualInstance(NormalScopedBeanInterceptorHandler.java:124)
	at org.apache.webbeans.intercept.NormalScopedBeanInterceptorHandler.invoke(NormalScopedBeanInterceptorHandler.java:95)
	at org.apache.myfaces.cdi.view.ApplicationContextBean_$$_javassist_28.getServletContext(ApplicationContextBean_$$_javassist_28.java)
	at org.apache.myfaces.flow.cdi.FlowScopeBeanHolder.destroyBeansOnPreDestroy(FlowScopeBeanHolder.java:210)
",MYFACES-3940
"I use ui:repeat to display list items. But if the list is altered in a way that element indexes are changed (for instance, an item is added to the beginning of the list), elements inside the ui:repeat interact with the wrong items from the list.

Here is a simple example where the list items are printed and on a mouse click, the value is passed to a bean's method:

{code:title=testRepeat.xhtml|borderStyle=solid}
<html xmlns=""http://www.w3.org/1999/xhtml""
	xmlns:h=""http://java.sun.com/jsf/html""
	xmlns:f=""http://java.sun.com/jsf/core""
	xmlns:ui=""http://java.sun.com/jsf/facelets"">
<h:head>
</h:head>

<h:body>
	<h:form>
		<ui:repeat value=""#{testBeanRepeat.items}"" var=""item"">
			<h:commandLink value=""#{item}""
				action=""#{testBeanRepeat.click(item)}"">
				<f:ajax />
			</h:commandLink>
			<br/>
		</ui:repeat>
	</h:form>
</h:body>
</html>
{code}

In the background bean, a new item is added to the beginning of the list on every 5 seconds:

{code:title=TestRepeatBean.java|borderStyle=solid}
@ManagedBean(name = ""testBeanRepeat"")
@ViewScoped
public class TestRepeatBean implements Serializable {
	
	private static final long serialVersionUID = -770055099629687227L;

	private List<String> items;
	
	@PostConstruct
	public void init() {
		items = new ArrayList<String>();
		
		items.add(""item 1"");
		items.add(""item 2"");
		items.add(""item 3"");
		
		Timer timer = new Timer(); 
		timer.schedule( new TimerTask() { 
		    public void run() { 
		    	items.add(0, ""item ""+System.currentTimeMillis());
		    } 
		}, 0, 2000);
	}
	
	public void click(String item) {
		System.out.println(""Clicked on: ""+item);
	}

	public List<String> getItems() {
		return items;
	}
}
{code}

If you click after 2 seconds on the first item labeled 'item 1', you will get printed what is the first element of the list in that moment and not 'item 1', for instance 'Clicked on: item 1414965931158'.",MYFACES-3939
"The same problem we had in MYFACES-3936 happens for Faces Flows.

Faces Flow scope is bound to the client window and to the flow id. The problem is since there is no expiration strategy per client window, once a faces flow bean is create it is not expired unless you end the flow manually or the session expires.

The solution is similar to the solution we did in MYFACES-3936: use an LRUMap with the client windows and a list of the active flow scopes ids, so when the client window is discarded, the flow scope asociated to the client window is destroyed too.

Please note there is nothing in JSF spec that says so, it is not a bug, but it is a matter of consistency. We want to keep the session size as small as possible, and we already have done things in our algorithm like destroy view scopes when a view is discarded when server side state saving is used. The cleanup strategy adds a small overhead in session, because we need to add the mapping between client windows and flow scope ids, but the advantage is with this we can set a limit about how big the session object can be.

The idea is create a config param like org.apache.myfaces.NUMBER_OF_CLIENT_WINDOW_FLOW_ID_TOKENS_IN_SESSION to limit the number of valid tokens and use org.apache.myfaces.NUMBER_OF_VIEWS_IN_SESSION or org.apache.myfaces.NUMBER_OF_SEQUENTIAL_VIEWS_IN_SESSION",MYFACES-3938
"With JSF 2.2 client window API, it has sense to change the default value for
org.apache.myfaces.NUMBER_OF_SEQUENTIAL_VIEWS_IN_SESSION from null to 4.

Since we have already the default of org.apache.myfaces.NUMBER_OF_VIEWS_IN_SESSION to 20, with this we will have by default 20 / 4 = 5 slots to hold client windows.",MYFACES-3937
"In 2.2.x a change was done to Flash object, so now it uses the client window id and store the token into session instead use a cookie like it was done in 2.1.x/2.0.x

The problem is there is no cleanup strategy in place. So if you create n client window ids, there are n tokens in session and the session will only be cleaned  up when the session is invalidated.

The solution is use a LRU map to hold the tokens, so when a client window / token is discarded, the objects stored in Flash scope associated to that couple could be removed.",MYFACES-3936
"h:inputTextarea always calls ResponseWriter.writeText(...), but in some cases where there is a null-value + a config param set javax.faces.INTERPRET_EMPTY_STRING_SUBMITTED_VALUES_AS_NULL true it throws NullPointerException

The renderer should do a null check before the call to avoid the situation.",MYFACES-3935
"With this combination only:

    <context-param>
        <param-name>javax.faces.STATE_SAVING_METHOD</param-name>
        <param-value>client</param-value>
    </context-param>
    <context-param>
        <param-name>javax.faces.PARTIAL_STATE_SAVING</param-name>
        <param-value>false</param-value>
    </context-param>

The input hidden field is not added, but only when f:view transient=""true"". The effect is the request are no longer processed by JSF, because that field is mandatory for every request.",MYFACES-3934
"{code}
java.lang.NullPointerException: null
	at org.apache.myfaces.application.StateManagerImpl.restoreView(StateManagerImpl.java:147) ~[myfaces-impl-2.2.5.jar:2.2.5]
	at org.apache.myfaces.shared.view.ViewDeclarationLanguageBase.restoreView(ViewDeclarationLanguageBase.java:104) ~[myfaces-impl-2.2.5.jar:2.2.5]
	at org.apache.myfaces.application.ViewHandlerImpl.restoreView(ViewHandlerImpl.java:336) ~[myfaces-impl-2.2.5.jar:2.2.5]
	at javax.faces.application.ViewHandlerWrapper.restoreView(ViewHandlerWrapper.java:82) ~[myfaces-api-2.2.5.jar:2.2.5]
	at javax.faces.application.ViewHandlerWrapper.restoreView(ViewHandlerWrapper.java:82) ~[myfaces-api-2.2.5.jar:2.2.5]
{code}

Better error handling needed - what actually is wrong with the request?",MYFACES-3933
"This issue was originally reported on the mailinglist:
http://mail-archives.apache.org/mod_mbox/myfaces-users/201109.mbox/%3CCANTHAYdYRCe0HW0muLvjbNA76k2Ovwn18UpoANeMMHSr_p=3tQ@mail.gmail.com%3E

I am still able to reproduce it if I build the application in UTC+1 timezone and run it with -Duser.timezone=UTC. It doesn't occur with project stage production.

The exception is raised multiple times:
{noformat}
java.lang.IllegalStateException: setStateManager may not be executed after a lifecycle request has been completed
	at org.apache.myfaces.application.ApplicationImpl.setStateManager(ApplicationImpl.java:2113)
	at org.apache.myfaces.config.FacesConfigurator.configureApplication(FacesConfigurator.java:613)
	at org.apache.myfaces.config.FacesConfigurator.configure(FacesConfigurator.java:477)
	at org.apache.myfaces.config.FacesConfigurator.update(FacesConfigurator.java:423)
	at org.apache.myfaces.lifecycle.LifecycleImpl.execute(LifecycleImpl.java:137)
	at javax.faces.webapp.FacesServlet.service(FacesServlet.java:198)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:684)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1496)
	at org.springframework.orm.hibernate3.support.OpenSessionInViewFilter.doFilterInternal(OpenSessionInViewFilter.java:230)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1484)
{noformat}",MYFACES-3932
"When primefaces h:head renderer is used with inner f:facet (first\middle\last) like follows:
{code}
<h:head id=""head"">
    <f:facet name=""first"">
	 <h:outputScript name=""jquery.js""/>
    </f:facet>
</h:head>
{code}
Application crashes with NPE during some AJAX requests on  ComponentTagHandlerDelegate:337
{code}
ComponentSupport.removeFacet(ctx, parent, c, facetName);
{code}
*This is caused by:*
# ComponentTagHandlerDelegate:190 - Resolves facet name from non-relocated parent __HtmlHead (id=""head"")_
# ComponentTagHandlerDelegate:327 - Changes parent to re-located element _UIPanel(id=""j_idhead__f_first"")_, resolved with HtmlOutputScriptHandler
# ComponentTagHandlerDelegate:337 - Uses re-located parent with non-relocated parents facet name, facet isn't found, NPE is thrown.

*Solution:*
Refresh facetName when parent is changed, see diff:
{code}
--- a/myfaces-2.1.12/myfaces-impl/src/main/java/org/apache/myfaces/view/facelets/tag/jsf/ComponentTagHandlerDelegate.java	Wed Oct 08 15:18:20 2014 +0300
+++ b/myfaces-2.1.12/myfaces-impl/src/main/java/org/apache/myfaces/view/facelets/tag/jsf/ComponentTagHandlerDelegate.java	Wed Oct 08 15:18:33 2014 +0300
@@ -325,6 +325,7 @@
                     {
                         // Replace parent with the relocated parent.
                         parent = c.getParent();
+                        facetName = this.getFacetName(ctx, parent); // refresh facet name according to new parent
                     }
                 }
                 if (facetName == null)
{code}

*Note:* Exception handling for such cases can be improved, as application crashes during render phase no response is rendered and MyFaces ExceptionHandler is unable to add exception into AJAX response - this way no exception is logged or returned, empty screen is rendered without any errors.",MYFACES-3931
"Production system logs often contain exception stack traces like below:

{code}
java.lang.IllegalArgumentException: null
	at org.apache.myfaces.renderkit.html.HtmlRenderKitImpl.createResponseWriter(HtmlRenderKitImpl.java:358) ~[myfaces-impl-2.2.5.jar:2.2.5]
	at org.apache.myfaces.view.facelets.FaceletViewDeclarationLanguage.createResponseWriter(FaceletViewDeclarationLanguage.java:2252) ~[myfaces-impl-2.2.5.jar:2.2.5]
	at org.apache.myfaces.view.facelets.FaceletViewDeclarationLanguage.renderView(FaceletViewDeclarationLanguage.java:1861) ~[myfaces-impl-2.2.5.jar:2.2.5]
	at org.apache.myfaces.application.ViewHandlerImpl.renderView(ViewHandlerImpl.java:313) ~[myfaces-impl-2.2.5.jar:2.2.5]
	at javax.faces.application.ViewHandlerWrapper.renderView(ViewHandlerWrapper.java:58) ~[myfaces-api-2.2.5.jar:2.2.5]
	at javax.faces.application.ViewHandlerWrapper.renderView(ViewHandlerWrapper.java:58) ~[myfaces-api-2.2.5.jar:2.2.5]
	at org.ocpsoft.rewrite.faces.RewriteViewHandler.renderView(RewriteViewHandler.java:186) ~[rewrite-integration-faces-2.0.12.Final.jar:2.0.12.Final]
	at org.apache.myfaces.lifecycle.RenderResponseExecutor.execute(RenderResponseExecutor.java:116) ~[myfaces-impl-2.2.5.jar:2.2.5]
	at org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:267) ~[myfaces-impl-2.2.5.jar:2.2.5]
	at javax.faces.webapp.FacesServlet.service(FacesServlet.java:200) [myfaces-api-2.2.5.jar:2.2.5]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:303) [catalina.jar:7.0.55]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208) [catalina.jar:7.0.55]
	at org.omnifaces.filter.FacesExceptionFilter.doFilter(FacesExceptionFilter.java:56) [omnifaces-1.8.1.jar:1.8.1-20140603]
	at org.omnifaces.filter.HttpFilter.doFilter(HttpFilter.java:77) [omnifaces-1.8.1.jar:1.8.1-20140603]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241) [catalina.jar:7.0.55]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208) [catalina.jar:7.0.55]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) [tomcat7-websocket.jar:7.0.55]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241) [catalina.jar:7.0.55]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208) [catalina.jar:7.0.55]
	at org.ocpsoft.rewrite.servlet.RewriteFilter.doFilter(RewriteFilter.java:205) [rewrite-servlet-2.0.12.Final.jar:2.0.12.Final]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241) [catalina.jar:7.0.55]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208) [catalina.jar:7.0.55]
	at lt.asseco.tar.setup.jsf.CharacterEncodingFilter.doFilter(CharacterEncodingFilter.java:30) [CharacterEncodingFilter.class:na]
	at org.omnifaces.filter.HttpFilter.doFilter(HttpFilter.java:77) [omnifaces-1.8.1.jar:1.8.1-20140603]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241) [catalina.jar:7.0.55]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208) [catalina.jar:7.0.55]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:220) [catalina.jar:7.0.55]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:122) [catalina.jar:7.0.55]
	at org.apache.tomee.catalina.OpenEJBValve.invoke(OpenEJBValve.java:44) [tomee-catalina-1.7.1.jar:1.7.1]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:501) [catalina.jar:7.0.55]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:171) [catalina.jar:7.0.55]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:103) [catalina.jar:7.0.55]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:116) [catalina.jar:7.0.55]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:408) [catalina.jar:7.0.55]
	at org.apache.coyote.ajp.AjpAprProcessor.process(AjpAprProcessor.java:188) [tomcat-coyote.jar:7.0.55]
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:611) [tomcat-coyote.jar:7.0.55]
	at org.apache.tomcat.util.net.AprEndpoint$SocketProcessor.doRun(AprEndpoint.java:2440) [tomcat-coyote.jar:7.0.55]
	at org.apache.tomcat.util.net.AprEndpoint$SocketProcessor.run(AprEndpoint.java:2429) [tomcat-coyote.jar:7.0.55]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145) [na:1.7.0_67]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615) [na:1.7.0_67]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-coyote.jar:7.0.55]
	at java.lang.Thread.run(Thread.java:745) [na:1.7.0_67]
{code}

To investigate, I started to print all the request info I can think of:

{code}
ERROR 2014-10-08 08:23:47,667 ##### REQUEST ANALYSIS #####: host: 90.134.132.182, method: GET, requestURL: https://www.e-tar.lt/portal/legalAct.html?documentId=TAR.B61C7CEDA1B8, AJAX: false, sessionId: null, userAgent: SEC-SGHM310/1.0 Openwave/6.2.3 Profile/MIDP-2.0 Configuration/CLDC-1.1 UP.Browser/6.2.3.3.c.1.101 (GUI) MMP/2.0, contentTypesFromAccept: application/vnd.phonecom.mmc-xml, application/vnd.wap.connectivity-wbxml, application/vnd.wap.wmlc;type=4365, application/vnd.wap.wmlscriptc, application/vnd.wap.xhtml+xml, application/xhtml+xml;profile=""http://www.wapforum.org/xhtml"", image/bmp, image/gif, image/jpeg, image/jpg, image/png, image/vnd.wap.wbmp, image/x-up-wpng, multipart/mixed, multipart/related, text/html, text/plain, text/vnd.sun.j2me.app-descriptor, text/vnd.wap.connectivity-xml, text/vnd.wap.wml;type=4365, image/gif, image/jpeg, image/bmp, image/png, image/vnd.wap.wbmp, application/vnd.smaf, application/x-smaf, audio/sp-midi, application/x-midi, audio/midi, audio/mid, audio/x-midi, audio/x-mid, audio/amr, audio/x-amr, application/vnd.oma.dd+xml, audio/mp3, audio/x-mp3, audio/mpeg, audio/x-mpeg, audio/mpeg3, audio/x-mpeg3, audio/x-wav, audio/wav, text/x-iMelody, text/x-imelody, audio/imelody, text/vnd.sun.j2me.app-descriptor, application/java-archive, application/vnd.oma.drm.message, text/x-vcalendar, text/x-vcard, application/x-httpd-php
{code}

I understand that in this case it is something wrong with client browser request, but error message is not informative.
I think there is a bug in MyFaces source code resulting with message ""null"":

HtmlRenderKitImpl.java:358 has:
{code}
                        throw new IllegalArgumentException(
                                ""ContentTypeList does not contain a supported content type: ""
                                        + contentTypeListString != null ? 
                                                contentTypeListString : contentTypeListStringFromAccept);

{code}

And in Java operator ""+"" has higher priority than ""? :"", so the test ""!= null"" in this case allways returns ""true"", but contentTypeListString is null.",MYFACES-3930
"org.apache.myfaces.config.FacesConfigurator#purgeConfiguration() does a pretty good job, until custom factories for application, renderkit or lifecycle are installed. In this case, purge will fail, because the returned factory delegates do not contain a appropriate purge method.

Given all delegates are implementing javax.faces.FacesWrapper#getWrapped() correct, this problem might be easily solved be fetching the wrapped factory instance as long as one is available.",MYFACES-3929
"Currently it's not possible to use MyFaces in an OSGi environment where a Servlet 3.1 implementation is present. 
This is due to the manifest where the version range is [2.5,3.1) where 3.1 is excluded. This needs to be either expanded to 3.2) or maybe better 4) 
",MYFACES-3928
"Google App Engine (GAE) for Java uses Servlet 2.5 (Jetty). Myfaces 2.2.4 starts to use Servlet 3.0 calls for http cookies, as described in the issue MYFACES-3923. It is incompatible with GAE (until GAE updated to servlet 3.0 that, for some reasons, is not happening). Can the issue be solved by introducing a context parameter to configure Myfaces 2.2.* to use servlet 2.5 or servlet 3.0?",MYFACES-3927
"A disabled <h:outputLink/> component renders it's content in a <span/> tag. Unfortunately the renderer does not check, if attributes that does apply to <a/> will also apply to to the <span/> tag. So in addition to common attributes like styleClass other ones are rendered, that are not valid in the context of a <span/> like:
* target
* tabindex
* shape
* rel
* rev
* hreflang
* coords
* charset
* ...maybe others, but I am no export for the html spec",MYFACES-3926
"This is my xhtml file

http://paste2.org/ZI54J123

and this is my ViewScoped bean

http://paste2.org/HgFkOF8C

When I click the commandButton I can't see the text from the console but if I remove the dataTable from the xhtml file then I can see the text from the console. 

This example works with Majorra by the way.",MYFACES-3925
"When running som stress tests, we noticed a severe memory leak, which causes our server to crash witin a few minutes when under pressure. It works fine on Mojarra (2.2.8). Our views aren't particularly big, but we do attach some JPA entities to our ViewScoped beans and we thus need them to be cleaned up in reasonable time.

The views are destroyed properly, but field ""storageMap"" in org.apache.myfaces.cdi.view.ViewScopeBeanHolder holds onto the references, preventing view state & beans from being GCed.

To us, the problem seems to be as easy as that method ViewScopeBeanHolder.destroyBeans(String) doesn't remove the destroyed ViewScopeContextualStorage from the map. Simply replacing the initial ""storageMap.get(viewScopeId)"" with ""storageMap.remove(viewScopeId)"" in that method solves the memory leak. But maybe there is a reason for not doing so..?",MYFACES-3924
,MYFACES-3923
"After upgrading from 2.0.11 to 2.2.x , I'm getting an exception caused by <f:view locale=""#{admin.userLocale}"">, the same exception as in the https://issues.apache.org/jira/browse/MYFACES-3907 bug, but even after the proposed fix (which fixes the exception) my web app does not work, Again.... it works perfectly with MyFaces 2.0.11.

The flow is as follows, the locale ref' creating a new instance of the bean and than in phaselistener the getApplication().evaluateExpressionGet trying to create new Instance of that bean??? why? I mean it doesn't try to create a new instance in the 2.0.11, I have asked the question in http://stackoverflow.com/questions/25611687/getapplication-evaluateexpressionget-trying-to-create-new-instance-jsf-2-0 too (with additional info)

Please let me know if additional information is needed

Thanks ahead,

Daniel",MYFACES-3922
"I have recently upgraded my WebApp to MyFaces 2.1.15 and after that I am experiencing the below error infrequently,

java.lang.NullPointerException: null values not allowed
	at org.apache.commons.collections.map.AbstractReferenceMap.put(AbstractReferenceMap.java:251)
	at org.apache.myfaces.application.viewstate.SerializedViewCollection.add(SerializedViewCollection.java:162)
	at org.apache.myfaces.application.viewstate.ServerSideStateCacheImpl.saveSerializedViewInServletSession(ServerSideStateCacheImpl.java:300)
	at org.apache.myfaces.application.viewstate.ServerSideStateCacheImpl.saveSerializedView(ServerSideStateCacheImpl.java:578)
	at org.apache.myfaces.renderkit.html.HtmlResponseStateManager.saveState(HtmlResponseStateManager.java:146)
	at org.apache.myfaces.application.StateManagerImpl.saveView(StateManagerImpl.java:198)
	at org.apache.myfaces.view.facelets.FaceletViewDeclarationLanguage.renderView(FaceletViewDeclarationLanguage.java:2052)
	at org.apache.myfaces.application.ViewHandlerImpl.renderView(ViewHandlerImpl.java:305)
	at org.apache.myfaces.lifecycle.RenderResponseExecutor.execute(RenderResponseExecutor.java:116)
	at org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:241)
	at javax.faces.webapp.FacesServlet.service(FacesServlet.java:199)
	at weblogic.servlet.internal.StubSecurityHelper$ServletServiceAction.run(StubSecurityHelper.java:242)
	at weblogic.servlet.internal.StubSecurityHelper$ServletServiceAction.run(StubSecurityHelper.java:216)
	at weblogic.servlet.internal.StubSecurityHelper.invokeServlet(StubSecurityHelper.java:132)
	at weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:338)
	at weblogic.servlet.internal.TailFilter.doFilter(TailFilter.java:25)
	at weblogic.servlet.internal.FilterChainImpl.doFilter(FilterChainImpl.java:74)

I have set the following in web.xml file,
org.apache.myfaces.CACHE_OLD_VIEWS_IN_SESSION_MODE = hard-soft
org.apache.myfaces.NUMBER_OF_VIEWS_IN_SESSION = 30,

org.apache.myfaces.SERIALIZE_STATE_IN_SESSION= false,
javax.faces.STATE_SAVING_METHOD = false

I have checked similar issue in earlier version too, 
https://issues.apache.org/jira/browse/MYFACES-1296
but this seems to be little different from the exception stack.

In my WebApp, this issue comes infrequently. i.e. it comes randomly in random pages.
Please look into it since it seems to be an issue with the version 2.1.15",MYFACES-3921
Summary says everything,MYFACES-3920
"We've come across an issue while trying to modify the javax.faces.SEPARATOR_CHAR - changing it to a non-colon character seems to break h:commandLink actions.  For example, with the separator character set to a hyphen ""-"", the following navigation does not work (the output link just triggers a refresh):

<f:view>
<h:form>
	<h:commandLink id=""link"" action=""toLink.html"">
		<h:outputText value=""Link"" />
	</h:commandLink>
</h:form>
</f:view>

A workaround is to enable the context parameter org.apache.myfaces.RENDER_FORM_SUBMIT_SCRIPT_INLINE, however that parameter has been removed in the 2.2 branch.  (It's also not a particularly desirable workaround.)  The issue here seems to stem from the oamSubmit.js script; in that file there is a call 
    
    myfaces.oam.setHiddenInput(formName, formName + ':' + '_idcl', linkId);
    
which explicitly passes uses a colon separator character.  In HtmlRendendererUtils.getHiddenCommandLinkFieldname, however, we have 
    
    return formInfo.getFormName() + UINamingContainer.getSeparatorChar(FacesContext.getCurrentInstance())+ HIDDEN_COMMANDLINK_FIELD_NAME;
    
which will cause the wrong hidden field name to be searched, and the broken actions seen here.

As suggested by Leonardo:
We should not use UINamingContainer.getSeparatorChar(...) to
render that hidden field and enforce ':' instead. The reason is the intention
of use javax.faces.SEPARATOR_CHAR is to avoid the collision with css
when you use the ':', but in this case the intention is to create a hidden
field, with no real underlying component, so it is better to let ':' on the js
file.",MYFACES-3919
"As described in this thread: http://markmail.org/thread/ayo7ooo3nzpzahd4

Clearing part of the component tree (calling getChildren().clear()) several time while staying on the same view (through Ajax requests) causes the list of removed client IDs (maintained in org.apache.myfaces.view.facelets.DefaultFaceletsStateManagementStrategy) to grow endlessly, which in turns degrades performances.

In our situation, a form with approximately 400 components took ~250ms on the first request to more than 1 second after ~15 update.",MYFACES-3918
"If you want to use Weld 2.x as CDI container you have to explicitly exclude 
geronimo-jcdi_1.0_spec artifact, otherwise you will get IncompatibleClassChangeError, because it is not binary compatible with cdi 1.1
This issue will affect also other projects like deltaspike if you use it together with myfaces, because of the wrong dependency comes from myfaces-api.",MYFACES-3917
"Outcome is null, but the following navigation case matches (even though ""from-outcome"" is present).

{noformat}
<navigation-case>
      <from-outcome>go_mainMenu</from-outcome>
      <if>#{!mainLayoutBean.isXS}</if>
      <to-view-id>/mainMenu.xhtml</to-view-id>
</navigation-case>
{noformat}

Specification says:
To match an outcome value of null, *the <from-outcome> must be absent* and the <if> element present. 

For evaluation look at  org.apache.myfaces.application.NavigationHandlerImpl#calcMatchingNavigationCase

perhaps especially at
{noformat}
if(outcome == null && (cazeOutcome != null || cazeIf == null) && actionRef == null)  {
  continue;
}
{noformat}
",MYFACES-3916
"Under the conditions:
* having a h:inputText in a composite component with binding to it's composite component attribute map (like binding=""#{cc.attrs.input}"")
* attaching state holding converter (implements StateHolder) to the input with non initial state
* having no other state saved (specifically UIOuput#saveState returns null)

a state array of size two is returned that looks like [null, converterState].

Restoring this state causes UIOuput to hand over the first array entry to UIOuput, which directly fails with a NPE, if the initialState was not marked.


{code}
java.lang.NullPointerException: state
	at javax.faces.component.UIComponentBase.restoreState(UIComponentBase.java:2046)
	at javax.faces.component.UIOutput.restoreState(UIOutput.java:241)
	at javax.faces.component.UIInput.restoreState(UIInput.java:1060)
	at javax.faces.component.UIComponentBase.restoreAttachedState(UIComponentBase.java:1915)
	at javax.faces.component._DeltaStateHelper$InternalMap.restoreState(_DeltaStateHelper.java:925)
	at javax.faces.component.UIComponentBase.restoreAttachedState(UIComponentBase.java:1915)
	at javax.faces.component._DeltaStateHelper.copyMap(_DeltaStateHelper.java:289)
	at javax.faces.component._DeltaStateHelper._createDeltas(_DeltaStateHelper.java:216)
	at javax.faces.component._DeltaStateHelper.put(_DeltaStateHelper.java:425)
	at javax.faces.component._ComponentAttributesMap.put(_ComponentAttributesMap.java:603)
	at javax.faces.component._ComponentAttributesMap.put(_ComponentAttributesMap.java:55)
	at org.apache.myfaces.el.unified.resolver.CompositeComponentELResolver$CompositeComponentAttributesMapWrapper.put(CompositeComponentELResolver.java:418)
	at org.apache.myfaces.el.unified.resolver.CompositeComponentELResolver$CompositeComponentAttributesMapWrapper.put(CompositeComponentELResolver.java:271)
	at javax.el.MapELResolver.setValue(MapELResolver.java:94)
	at javax.el.CompositeELResolver.setValue(CompositeELResolver.java:83)
	at org.apache.el.parser.AstValue.setValue(AstValue.java:221)
	at org.apache.el.ValueExpressionImpl.setValue(ValueExpressionImpl.java:252)
	at org.jboss.weld.el.WeldValueExpression.setValue(WeldValueExpression.java:64)
	at org.apache.myfaces.view.facelets.el.ContextAwareTagValueExpression.setValue(ContextAwareTagValueExpression.java:153)
	at org.apache.myfaces.view.facelets.el.LocationValueExpression.setValue(LocationValueExpression.java:157)
	at javax.faces.component.UIComponent.processEvent(UIComponent.java:849)
	at org.apache.myfaces.lifecycle.DefaultRestoreViewSupport$RestoreStateCallback.visit(DefaultRestoreViewSupport.java:281)
	at org.apache.myfaces.component.visit.FullVisitContext.invokeVisitCallback(FullVisitContext.java:141)
	at javax.faces.component.UIComponent.visitTree(UIComponent.java:1016)
	at javax.faces.component.UIComponentBase.visitTree(UIComponentBase.java:1191)
	at javax.faces.component.UIComponent.visitTree(UIComponent.java:1044)
	at javax.faces.component.UIComponentBase.visitTree(UIComponentBase.java:1191)
	at javax.faces.component.UIComponent.visitTree(UIComponent.java:1044)
	at javax.faces.component.UIComponentBase.visitTree(UIComponentBase.java:1191)
	at javax.faces.component.UIComponent.visitTree(UIComponent.java:1044)
	at javax.faces.component.UIComponentBase.visitTree(UIComponentBase.java:1191)
	at javax.faces.component.UINamingContainer.visitTree(UINamingContainer.java:177)
	at javax.faces.component.UIComponent.visitTree(UIComponent.java:1044)
	at javax.faces.component.UIComponentBase.visitTree(UIComponentBase.java:1191)
	at javax.faces.component.UIComponent.visitTree(UIComponent.java:1032)
	at javax.faces.component.UIComponentBase.visitTree(UIComponentBase.java:1191)
	at kn.gvs.framework.jsf.component.UIComposedInputComponent.visitTree(UIComposedInputComponent.java:337)
	at javax.faces.component.UIComponent.visitTree(UIComponent.java:1044)
	at javax.faces.component.UIComponentBase.visitTree(UIComponentBase.java:1191)
	at javax.faces.component.UIComponent.visitTree(UIComponent.java:1044)
	at javax.faces.component.UIComponentBase.visitTree(UIComponentBase.java:1191)
	at javax.faces.component.UIForm.visitTree(UIForm.java:345)
	at javax.faces.component.UIComponent.visitTree(UIComponent.java:1044)
	at javax.faces.component.UIComponentBase.visitTree(UIComponentBase.java:1191)
	at javax.faces.component.UIComponent.visitTree(UIComponent.java:1044)
	at javax.faces.component.UIComponentBase.visitTree(UIComponentBase.java:1191)
	at org.apache.myfaces.lifecycle.DefaultRestoreViewSupport.processComponentBinding(DefaultRestoreViewSupport.java:144)
	at org.apache.myfaces.lifecycle.RestoreViewExecutor.execute(RestoreViewExecutor.java:202)
	at org.apache.myfaces.lifecycle.LifecycleImpl.executePhase(LifecycleImpl.java:196)
	at org.apache.myfaces.lifecycle.LifecycleImpl.execute(LifecycleImpl.java:143)
	at org.apache.deltaspike.jsf.impl.listener.request.DeltaSpikeLifecycleWrapper.execute(DeltaSpikeLifecycleWrapper.java:89)
	at javax.faces.lifecycle.LifecycleWrapper.execute(LifecycleWrapper.java:46)
	at javax.faces.webapp.FacesServlet.service(FacesServlet.java:198)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:303)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)
	at org.jboss.weld.servlet.ConversationFilter.doFilter(ConversationFilter.java:70)
[...]
{code}",MYFACES-3915
"HtmlScriptRenderer, lines 266-67
{code}
ResourceUtils.markScriptAsRendered(facesContext, libraryName, resourceName);
ResourceUtils.markStylesheetAsRendered(facesContext, resource.getLibraryName(), resource.getResourceName());
{code}

Clearly, the second line should be {{markScriptAsRendered}} as well.",MYFACES-3914
"_isAjaxRequest = facesContext.getPartialViewContext().isAjaxRequest();

occurs 2 times in SwitchAjaxExceptionHandlerWrapperImpl and facesContext.getPartialViewContext() can be null.
We should just return false if it's null.

StackTrace:
java.lang.NullPointerException
	at org.apache.myfaces.shared.context.SwitchAjaxExceptionHandlerWrapperImpl.isAjaxRequest(SwitchAjaxExceptionHandlerWrapperImpl.java:98)
	at org.apache.myfaces.shared.context.SwitchAjaxExceptionHandlerWrapperImpl.getWrapped(SwitchAjaxExceptionHandlerWrapperImpl.java:106)
	at javax.faces.context.ExceptionHandlerWrapper.isListenerForSource(ExceptionHandlerWrapper.java:70)
	at javax.faces.context.ExceptionHandlerWrapper.isListenerForSource(ExceptionHandlerWrapper.java:70)
	at javax.faces.context.ExceptionHandlerWrapper.isListenerForSource(ExceptionHandlerWrapper.java:70)
	at org.apache.myfaces.application.ApplicationImpl._traverseListenerList(ApplicationImpl.java:2480)
	at org.apache.myfaces.application.ApplicationImpl.publishEvent(ApplicationImpl.java:586)
	at org.apache.myfaces.application.ApplicationImpl.publishEvent(ApplicationImpl.java:616)
	at javax.faces.application.ApplicationWrapper.publishEvent(ApplicationWrapper.java:336)
	at javax.faces.application.ApplicationWrapper.publishEvent(ApplicationWrapper.java:336)
	at javax.faces.application.ApplicationWrapper.publishEvent(ApplicationWrapper.java:336)
	at org.apache.deltaspike.jsf.impl.injection.InjectionAwareApplicationWrapper.publishEvent(InjectionAwareApplicationWrapper.java:121)
	at org.apache.myfaces.lifecycle.PhaseListenerManager.publishException(PhaseListenerManager.java:136)
	at org.apache.myfaces.lifecycle.PhaseListenerManager.informPhaseListenersAfter(PhaseListenerManager.java:123)
	at org.apache.myfaces.lifecycle.LifecycleImpl.executePhase(LifecycleImpl.java:185)
	at org.apache.myfaces.lifecycle.LifecycleImpl.execute(LifecycleImpl.java:117)
	at org.apache.deltaspike.jsf.impl.listener.request.DeltaSpikeLifecycleWrapper.execute(DeltaSpikeLifecycleWrapper.java:89)
	at javax.faces.webapp.FacesServlet.service(FacesServlet.java:197)",MYFACES-3913
"ViewScopeBeanHolder is put into ApplicationMap() as ""oam.flow.FlowScopeBeanHolder""

Problem is in:
*org.apache.myfaces.cdi.view.ViewScopeContextImpl.java*
{quote}
protected ViewScopeBeanHolder getViewScopeBeanHolder(FacesContext facesContext)...
{quote}

in the line:
{quote}
facesContext.getExternalContext().getApplicationMap().put(""oam.flow.FlowScopeBeanHolder"", viewScopeBeanHolder);
{quote}

This should be:
{quote}
facesContext.getExternalContext().getApplicationMap().put(""oam.view.ViewScopeBeanHolder"", viewScopeBeanHolder);
{quote}

Otherwise in:
*org.apache.myfaces.flow.cdi.FlowScopedContextImpl.java*

the method:
{quote}
 protected FlowScopeBeanHolder getFlowScopeBeanHolder(FacesContext facesContext)
{quote}

will throw a ClassCastException

after changing the code the flowscope worked fine for me",MYFACES-3912
"I have 2 forms within a site. I try to execute form B from form A, but it doesn't work.
{code}
<?xml version=""1.0"" encoding=""UTF-8"" ?>
<!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Transitional//EN"" ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"">
<html xmlns=""http://www.w3.org/1999/xhtml""
	xmlns:f=""http://xmlns.jcp.org/jsf/core""
	xmlns:h=""http://xmlns.jcp.org/jsf/html""
	xmlns:ui=""http://xmlns.jcp.org/jsf/facelets""
	xmlns:p=""http://xmlns.jcp.org/jsf/passthrough""
	xmlns:jsf=""http://xmlns.jcp.org/jsf"">

	<h:head></h:head>
	
	<h:body>
		<h:panelGroup id=""pagePanel"">
			1. type a character into input-field
			<br/>
			2. click button 'Button B'
			<br/>
			3. input-field validates and a message appears, which is the expected behaviour
			<br/>
			4. change the character within input-field
			<br/>
			5. click 'Button A'
			<br/>
			6. now no validation takes place and no message appears, which is not the expected behaviour
			<br/>
			--- formB is not executed, if you submit the page via ajax from formA
			<br/>
			--- you can also see, that no value is submitted if you insert a valid input in this case
			<br/>
			<br/>
			<h:messages />
			<h:form id=""formA"">
				<h:commandButton value=""Button A"">
					<f:ajax execute=""pagePanel"" event=""click"" render=""pagePanel"" />
				</h:commandButton>
			</h:form>
			<br/>
			<br/>
			<h:form id=""formB"">
				Input:
				<h:inputText id=""inputA"" value=""#{model.value}"" required=""true"">
					<f:validateLength minimum=""5""/>
				</h:inputText>
				<br/>
				<br/>
				<h:commandButton value=""Button B"">
					<f:ajax execute=""pagePanel"" event=""click"" render=""pagePanel"" />
				</h:commandButton>
				<br/>
				<br/>
				Submitted input value: #{model.value}
			</h:form>
		</h:panelGroup>
	</h:body>
</html>
{code}

A testcase is attached.
Open URL
{code}
http://localhost:8080/jsftest22/mypage.jsf
{code}",MYFACES-3911
"My WebApp is using MyFaces 2.1.15 jars. While navigating to a JSP page I am getting the below exception log,

could not des
erialize the request scoped attribute with name:
""org.apache.myfaces.COMPONENT_STACK""
java.io.NotSerializableException: org.apache.myfaces.taglib.core.ViewTag
        at
java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1190)
        at java.io.ObjectOutputStream.writeArray(ObjectOutputStream.java:1384)
        at
java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1180)
        at java.io.ObjectOutputStream.access$300(ObjectOutputStream.java:163)
        at
java.io.ObjectOutputStream$PutFieldImpl.writeFields(ObjectOutputStream.java:1709)
        Truncated. see log file for complete stacktrace",MYFACES-3910
"I am getting the below exception stack trace while deploying an webapp in Jboss 5.0.0.GA. 
SEVERE: Class org.apache.myfaces.shared_impl.renderkit.html.HtmlTableRendererBase not found
java.lang.ClassNotFoundException: org.apache.myfaces.shared_impl.renderkit.html.HtmlTableRendererBase

at org.jboss.classloader.spi.base.BaseClassLoader.loadClass(BaseClassLoader.java:385)
	at java.lang.ClassLoader.loadClass(Unknown Source)
	at java.lang.ClassLoader.loadClassInternal(Unknown Source)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Unknown Source)
	at org.apache.myfaces.shared.util.ClassUtils.classForName(ClassUtils.java:199)
	at org.apache.myfaces.shared.util.ClassUtils.simpleClassForName(ClassUtils.java:218)
	at org.apache.myfaces.shared.util.ClassUtils.newInstance(ClassUtils.java:342)
	at org.apache.myfaces.config.FacesConfigurator.configureRenderKits(FacesConfigurator.java:908)
	at org.apache.myfaces.config.FacesConfigurator.configure(FacesConfigurator.java:420)
	at org.apache.myfaces.webapp.AbstractFacesInitializer.buildConfiguration(AbstractFacesInitializer.java:370)
	at org.apache.myfaces.webapp.Jsp21FacesInitializer.initContainerIntegration(Jsp21FacesInitializer.java:73)
	at org.apache.myfaces.webapp.AbstractFacesInitializer.initFaces(AbstractFacesInitializer.java:143)
	at org.apache.myfaces.webapp.StartupServletContextListener.contextInitialized(StartupServletContextListener.java:119)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:3910)
	at org.apache.catalina.core.StandardContext.start(StandardContext.java:4393)
	at org.jboss.web.tomcat.service.deployers.TomcatDeployment.performDeployInternal(TomcatDeployment.java:367)
	at org.jboss.web.tomcat.service.deployers.TomcatDeployment.performDeploy(TomcatDeployment.java:146)
	at org.jboss.web.deployers.AbstractWarDeployment.start(AbstractWarDeployment.java:460)
	at org.jboss.web.deployers.WebModule.startModule(WebModule.java:118)
	at org.jboss.web.deployers.WebModule.start(WebModule.java:96)
	at sun.reflect.NativeMethodAccessorImpl
17:03:17,677 ERROR [STDERR] .invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.jboss.mx.interceptor.ReflectedDispatcher.invoke(ReflectedDispatcher.java:157)
	at org.jboss.mx.server.Invocation.dispatch(Invocation.java:96)
	at org.jboss.mx.server.Invocation.invoke(Invocation.java:88)
	at org.jboss.mx.server.AbstractMBeanInvoker.invoke(AbstractMBeanInvoker.java:264)
	at org.jboss.mx.server.MBeanServerImpl.invoke(MBeanServerImpl.java:668)
	at org.jboss.system.microcontainer.ServiceProxy.invoke(ServiceProxy.java:206)
	at $Proxy36.start(Unknown Source)
	at org.jboss.system.microcontainer.StartStopLifecycleAction.installAction(StartStopLifecycleAction.java:42)
	at org.jboss.system.microcontainer.StartStopLifecycleAction.installAction(StartStopLifecycleAction.java:37)
	at org.jboss.dependency.plugins.action.SimpleControllerContextAction.simpleInstallAction(SimpleControllerContextAction.java:62)
	at org.jboss.dependency.plugins.action.AccessControllerContextAction.install(AccessControllerContextAction.java:71)
	at org.jboss.dependency.plugins.AbstractControllerContextActions.install(AbstractControllerContextActions.java:51)
	at org.jboss.dependency.plugins.AbstractControllerContext.install(AbstractControllerContext.java:348)
	at org.jboss.system.microcontainer.ServiceControllerContext.install(ServiceControllerContext.java:286)
	at org.jboss.dependency.plugins.AbstractController.install(AbstractController.java:1598)
	at org.jboss.dependency.plugins.AbstractController.incrementState(AbstractController.java:934)
	at org.jboss.dependency.plugins.AbstractController.resolveContexts(AbstractController.java:1062)
	at org.jboss.dependency.plugins.AbstractController.resolveContexts(AbstractController.java:984)
	at org.jboss.dependency.plugins.AbstractController.change(AbstractController.java:822)
	at org.jboss.dependency.plugins.AbstractController.change(AbstractController.java:553)
	at org.jboss.system.ServiceController.doChange(ServiceController.java:688)
	at org.jboss.system.ServiceController.start(ServiceController.java:460)
	at org.jboss.system.deployers.ServiceDeployer.start(ServiceDeployer.java:146)
	at org.jboss.system.deployers.ServiceDeployer.deploy(ServiceDeployer.java:104)
	at org.jboss.system.deployers.ServiceDeployer.deploy(ServiceDeployer.java:45)
	at org.jboss.deployers.spi.deployer.helpers.AbstractSimpleRealDeployer.internalDeploy(AbstractSimpleRealDeployer.java:62)
	at org.jboss.deployers.spi.deployer.helpers.AbstractRealDeployer.deploy(AbstractRealDeployer.java:50)
	at org.jboss.deployers.plugins.deployers.DeployerWrapper.deploy(DeployerWrapper.java:171)
	at org.jboss.deployers.plugins.deployers.DeployersImpl.doDeploy(DeployersImpl.java:1439)
	at org.jboss.deployers.plugins.deployers.DeployersImpl.doInstallParentFirst(DeployersImpl.java:1157)
	at org.jboss.deployers.plugins.deployers.DeployersImpl.doInstallParentFirst(DeployersImpl.java:1178)
	at org.jboss.deployers.plugins.deployers.DeployersImpl.install(DeployersImpl.java:1098)
	at org.jboss.dependency.plugins.AbstractControllerContext.install(AbstractControllerContext.java:348)
	at org.jboss.dependency.plugins.AbstractController.install(AbstractController.java:1598)
	at org.jboss.dependency.plugins.AbstractController.incrementState(AbstractController.java:934)
	at org.jboss.dependency.plugins.AbstractController.resolveContexts(AbstractController.java:1062)
	at org.jboss.dependency.plugins.AbstractController.resolveContexts(AbstractController.java:984)
	at org.jboss.dependency.plugins.AbstractController.change(AbstractController.java:822)
	at org.jboss.dependency.plugins.AbstractController.change(AbstractController.java:553)
	at org.jboss.deployers.plugins.deployers.DeployersImpl.process(DeployersImpl.java:781)
	at org.jboss.deployers.plugins.main.MainDeployerImpl.process(MainDeployerImpl.java:545)
	at org.jboss.system.server.profileservice.ProfileServiceBootstrap.loadProfile(ProfileServiceBootstrap.java:304)
	at org.jboss.system.server.profileservice.ProfileServiceBootstrap.start(ProfileServiceBootstrap.java:205)
	at org.jboss.bootstrap.AbstractServerImpl.start(AbstractServerImpl.java:405)
	at org.jboss.Main.boot(Main.java:209)
	at org.jboss.Main$1.run(Main.java:547)
	at java.lang.Thread.run(Unknown Source)
17:03:17,679 ERROR [STDERR] Jul 25, 2014 5:03:17 PM org.apache.myfaces.config.FacesConfigurator configureRenderKits


My Webapp is having the myfaces-api-2.1.15.jar and myfaces-impl-2.1.15.jar. I do not have StartupServletContextListener configured in web.xml file.
Please check the issue urgently. This seems to be a bug. ",MYFACES-3909
,MYFACES-3908
"After server restart we sometimes get a NullPointerException in ManagedBeanBuilder when resolving a managed bean property. This should be avoided.

{noformat}
java.lang.NullPointerException: null
	at org.apache.myfaces.config.ManagedBeanBuilder.getScope(ManagedBeanBuilder.java:560)
	at org.apache.myfaces.config.ManagedBeanBuilder.getNarrowestScope(ManagedBeanBuilder.java:464)
	at org.apache.myfaces.config.ManagedBeanBuilder.isInValidScope(ManagedBeanBuilder.java:435)
	at org.apache.myfaces.config.ManagedBeanBuilder.initializeProperties(ManagedBeanBuilder.java:319)
	at org.apache.myfaces.config.ManagedBeanBuilder.buildManagedBean(ManagedBeanBuilder.java:163)
	at org.apache.myfaces.el.unified.resolver.ManagedBeanResolver.createManagedBean(ManagedBeanResolver.java:333)
	at org.apache.myfaces.el.unified.resolver.ManagedBeanResolver.getValue(ManagedBeanResolver.java:296)
	at javax.el.CompositeELResolver.getValue(CompositeELResolver.java:188)
	at org.apache.myfaces.el.unified.resolver.FacesCompositeELResolver.getValue(FacesCompositeELResolver.java:179)
{noformat}",MYFACES-3907
"In the _Dom.js we eval javascripts however if there is a javascript error we have a different way of displaying the error. There always is a console error put out, however the error alert is not displayed unless there is no console.
The rest of the system always displays an alert in development mode with a myfaces override to other logging systems.
We should do the same here.
",MYFACES-3906
"The caption facet is not documented for the tag <h:datatable>.

Per Leonardo:
getCaption(), so there is no @JSFFacet. Yes, you can create an issue
as with priority trivial in:
",MYFACES-3905
"When applying multiple behaviors to an component, they are rendered to be executed in chain by using jsf.util.chain(). So far so good. 

When applying a behavior to a component, that renders multiple html input elements like h:selectManyCheckbox or h:selectOneRadio, the javascript is generated for every html elements, from which everyone gets it's own id rendered by appending a ongoing number to the clientId of the component. In the myfaces renderer code these Ids are called itemId.

The problem is, when you apply multiple behaviors to components, which render multiple html input elements: in this case all behaviors are wrapped in a chained call, which unfortunately receives not the itemId of the currently rendered html element as the source parameter, but the clientId of the component. According to the spec, the source parameter should contain ""the DOM element that triggered this Ajax request, or an id string of the element to use as the triggering element."" 

Because the event handler is bound to the html input element and not to it's parent html ""wrapping"" element used for layouting, the wrong event source is rendered in my option, which leads to the following side effect: Behavior scripts, that reference the current event producing html element via ""this"" will receive a different calling context (""this), if chain together with multiple behaviors than, if they would as single behavior, leading to all behavior scripts referencing ""this"" to run in the wrong context and often doing nothing meaningful at all.

E.g.: chained invocation of 
{code}
<input id=""form:shipmentDateCriteriaOption:0"" type=""radio"" name=""form:shipmentDateCriteriaOption"" value=""NEXT_WEEK"" onchange=""$(this).val('')"">
{code}
and
{code}
<input id=""form:shipmentDateCriteriaOption:0"" type=""radio"" name=""form:shipmentDateCriteriaOption"" value=""NEXT_WEEK"" onchange=""jsf.ajax.request('form:shipmentDateCriteriaOption',event,{'javax.faces.behavior.event':'valueChange'})"">
{code}

is rendered as:
{code}
<input id=""form:shipmentDateCriteriaOption:0"" type=""radio"" name=""form:shipmentDateCriteriaOption"" value=""NEXT_WEEK"" onchange=""jsf.util.chain(document.getElementById('form:shipmentDateCriteriaOption'), event,'$(this).val(\'\')', 'jsf.ajax.request(\'form:shipmentDateCriteriaOption\',event,{\'javax.faces.behavior.event\':\'valueChange\'})');"">
{code}",MYFACES-3904
"At the moment only this is possible:
{code}
<h:inputText value=""#{myBean.value}"" validationMessage=""My validation message"">
	<f:validateLength minimum=""1"" maximum=""30""/>
	<f:validateRegex pattern=""^\d{5}$"" />
</h:inputText>
{code}
You can't define a validation message per validation event, but only one message for all validations. 
As a workaround you can write a custom validator, which contains all validations rules, and then throw ValidatorExceptions containing your desired messages.
I think, that this limits the usablity.


It should be possible to do the following without writing a custom validator
{code}
<h:inputText id=""myFieldA"" value=""#{myBean.value}"">
	<f:validateLength minimum=""1"" maximum=""5"" validationMessage=""My custom validation message for validateLength""/>
	<f:validateRegex pattern=""^\d{5}$"" validationMessage=""My custom validation message for validateRegex""/>
</h:inputText>

<h:inputText id=""myFieldB"" value=""#{myBean.value}"">
	<f:validateLength minimum=""1"" maximum=""5"" validationMessage=""Another custom validation message for validateLength""/>
	<f:validateRegex pattern=""^\d{5}$"" validationMessage=""Another custom validation message for validateRegex""/>
</h:inputText>
{code}",MYFACES-3903
"Myfaces core do not show real javascipt errors.
In _Dom.js there is a catch block in rows 192-203.
Unofortunately I see two errors
- Icefaces js has exceptions without message and description a message is directly a 'e' object. So an error 'invalid property' is printed to console
- development mode is ignored by this catch block, in reverse order checking too because jsf.ajax.getProjectStage() is not initialized

Workaround - because development mode is recognized we can only show an alert
{noformat}
        } catch (e) {
/*
            if(window.console && window.console.error) {
               //not sure if we
               //should use our standard
               //error mechanisms here
               //because in the head appendix
               //method only a console
               //error would be raised as well
                if (e.message) {
                  window.console.error(e.message);
                } else {
                    if (e.description) {
                      window.console.error(e.description);
                    } else {
                      window.console.error(e);
                    }
               }
            }
            if(jsf.ajax.getProjectStage() === ""Development"") {
*/
				if (e.message) {
				  alert(""Error in evaluated javascript:""+ (e.message));
				} else {
					if (e.description) {
					  alert(""Error in evaluated javascript:""+ (e.description));
					} else {
					  alert(""Error in evaluated javascript:""+ (e));
					}
				}
/*
            }
*/
       } finally {
{noformat}",MYFACES-3902
"I have a <h:selectOneListbox> with underlying List:
{code}
List<SelectItem> mylist = new ArrayList<SelectItem>();
mylist.add(new SelectItem(""testvalue"", ""testlabel"",""testdescription""));
{code}
I want to show a tooltip over any option of a selectbox.
Therefore I tried two options:

1.
{code}
<h:selectOneListbox value=""#{bean.myvalue}"" ...>
	<f:selectItems value=""#{bean.mylist}"" var=""item"" itemValue=""#{item.value}"" itemLabel=""#{item.label}"" itemDescription=""yyy#{item.label}""/>
</h:selectOneListbox>
{code}

2.
{code}
<h:selectOneListbox value=""#{bean.myvalue}"" ...>
	<f:selectItems value=""#{bean.mylist}"" var=""item"" itemValue=""#{item.value}"" itemLabel=""#{item.label}"" passtrough:title=""yyy#{item.label}""/>
</h:selectOneListbox>
{code}

Option 1 ignores itemDescription. Only label and value are rendered.
Option 2 renders title attribute, but fills title only with ""yyy"" and ignores value of #{item.label}

I think, that this behaviour is a bug.",MYFACES-3901
"Hi,

I am using JSF 2.0 with MyFaces 2.1 and Trinidad 2.0.1. I am using View Scoped beans with javax.annotation.PostConstruct feature..

My problem is the PostConstruct annotation method of the bean is not called, but the constructor, getter methods are called prooperly..

Please help me on this issue..

Regards,
Ravi",MYFACES-3900
"When CACHE_EL_EXPRESSIONS is set to alwaysRecompile in the web.xml, after reloading sometimes all values loaded from a resource bundle come in blank.  For example, in a page like below the first time everything looks fine, if you reload the page all you see is a blank page (actually everything is working except the outputText):

{code:xml}
<!DOCTYPE html>
<html xmlns=""http://www.w3.org/1999/xhtml""
      xmlns:f=""http://java.sun.com/jsf/core""
      xmlns:h=""http://java.sun.com/jsf/html"">
	
	
	<f:view>
		<f:loadBundle basename=""Messages"" var=""msg"" />
		
		<h:body>
	
			<h1><h:outputText value=""#{msg.hello}"" /></h1>
		
		</h:body>
	</f:view>
	
</html>
{code}

I will attach a full example project.",MYFACES-3899
"For complex pages Myfaces implemetation return response with many xml headers. This is not problem for Firefox but Internet Explorer sometimes cant render this pages and show it as plain xml

Current Myfaces response example:
<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE html>
<?xml version=""1.0"" encoding=""UTF-8""?>
<?xml version=""1.0"" encoding=""UTF-8""?>
<?xml version=""1.0"" encoding=""UTF-8""?>
<?xml version=""1.0"" encoding=""UTF-8""?>
<?xml version=""1.0"" encoding=""UTF-8""?>
<?xml version=""1.0"" encoding=""UTF-8""?>
<?xml version=""1.0"" encoding=""UTF-8""?>
<?xml version=""1.0"" encoding=""UTF-8""?>
<?xml version=""1.0"" encoding=""UTF-8""?>
<?xml version=""1.0"" encoding=""UTF-8""?>
<?xml version=""1.0"" encoding=""UTF-8""?>
<html xmlns=""http://www.w3.org/1999/xhtml""><head><link (...)

This problem doesn't occurs for Mojarra implementation.
This implementation returns response :
?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE HTML>
<html xmlns=""http://www.w3.org/1999/xhtml""><head><link href=(...)",MYFACES-3898
"I am not totally sure, but according to javax.faces.view.facelets.ComponentHandler.isNew(UIComponent) something like 
{code}
<composite:implementation>
   <f:event ...../>
</composite:implementation>
{code}

should work. Actually f:attribute (and probably f:attributes) does not work this way, because it does not use the isNew function, but checks nullness of the parent of the component itself, not taking composite components into account. So
{code}
<composite:interface componentType=""..."">
<composite:implementation>
   <f:attribute ...../>
</composite:implementation>
{code}
for initializing the component does not work.",MYFACES-3897
"When I include a facelet file via ui:include I can wrap the file in a f:ajax tag, in order to apply the behavior to all children of the file.

When I move to file to it's own tag using an taglib, this does not work any more and myfaces is complaining about undefined eventNames. The reason for this is that the UserTagHandler is not considered as a valid child for wrapped f:ajax tags, but the IncludeHandler is.

Works:
{code}
...
<f:ajax render=""@all"">
	<ui:include src=""/file/with/inputComponents.xhtml"" />
</f:ajax>
...
{code}

Does not work:
{code}
...
<f:ajax render=""@all"">
	<custom:fileWithInputComponents />
</f:ajax>
...
{code}",MYFACES-3896
"ViewExpiredException getMessage() returns following text: 
/demo/test.jsfNo saved view state could be found for the view identifier: /demo/test.jsf

Space between View Id and ""No saved view...""  is missed. ",MYFACES-3895
"Hi, 
I just wanted to start using JRebel with JSF, and found out that there are some issues with the JRebel - MyFaces - PrimeFaces combo.

It seems that some of the PF components generates invalid component trees,  which cause the MyFaces throwing DuplicateIdException in development mode. The strange thing is that we are using these components in production for more than 2 years now, and never noticed any issues with them, so I guess, the guys at PF worked this around very well.
I've already reported this to them with my company's PRO account.

As I browsed the code of PF I realized that fixing this behavior is not so easy and can take more time, so I just wonder if - as a quick fix - you can make the duplicate id check algorithm optional in development mode too.",MYFACES-3894
"In org.apache.myfaces.renderkit.ErrorPageWriter on line 1304 I get a NullPinterException that is caught afterwards, I think it could be better to just check for m!=null instead of catching an exception and than doing nothing.",MYFACES-3893
"As stated in this answer: http://stackoverflow.com/a/19835645 BeanValidation is executed after JSF-Validation.
But it would be very useful to have a way to change this behaviour.

Now you can't decide within jsf-validator wether a component is valid or not in terms of BeanValidation
{code}
//My JSF-Validator
//...
UIInput input = (UIInput) component;

if (!input.isValid()) {
    return;
}

//...my own jsf-validation rules...
//...
{code}",MYFACES-3892
"1) in web.xml
<context-param>
    <param-name>org.apache.myfaces.FLASH_SCOPE_DISABLED</param-name>
    <param-value>true</param-value>
  </context-param>

2) ui:debug in .xhtml

leads to: 

throw new FlashScopeDisabledException(""Flash scope was disabled by context param "" 
                + FLASH_SCOPE_DISABLED_PARAM + "" but erroneously accessed"");

the cause : ErrorPageWriter._writeVariables writes always the variables, regardless of FLASH_SCOPE_DISABLED",MYFACES-3891
"On the way of implement MYFACES-3733 ""Implement vdl.createComponent(...)"", it was noticed that when javax.faces.FACELETS_REFRESH_PERIOD config param is different from -1, the programmatically added component dissapear after a postback. 

The problem happens because the code in vdl.createComponent(...) does an ""inline compilation"" of a facelet instance of the component, but the original algorithm does not consider that case. Instead, all facelets are stored in a structure and the refresh period is used to decide when a facelet instance needs to be reloaded.

The inline compilation makes a new facelet instance to be created every time the component needs to be created or refreshed. The algorithm done in this part is ok, the only thing that needs to be done is disable the refresh on the sections that are compiled inline.

Unfortunately things are not so simple, because for example in a composite component there are two facelets involved: one that makes the inline compilation and the other that renders the component and is reused over and over again. So, we need to review the algorithm to be sure everything is ok.
",MYFACES-3890
"The specification states that managed bean methods annotated with @PostConstruct have to be called after the object is initialized and after dependency injection is performed. However, MyFaces calls those methods after the bean instance is created but before dependency injection is performed.

This issue was resolved for tomcat7 server (https://issues.apache.org/jira/browse/MYFACES-1761). But remain with WildFly 8.0.Final .

Bellow the list of third party artifacts used with their versions :
activation-1.1.jar                                             joda-time-2.3.jar                                       velocity-1.6.2.jar
aopalliance-1.0.jar                                            jrobin-1.5.9.jar                                        xml-apis-1.0.b2.jar
aspectjrt-1.6.12.jar                                           jsr305-1.3.9.jar                                        xmlbeans-2.3.0.jar
aspectjtools-1.6.2.jar                                         jstl-1.2.jar
aspectjweaver-1.6.11.jar                                       junit-3.8.1.jar
atmosphere-runtime-2.0.1.jar                                   log4j-1.2.12.jar
avalon-framework-4.1.3.jar                                     logback-classic-0.9.30.jar
bcmail-jdk14-1.38.jar                                          logback-core-0.9.30.jar
bcmail-jdk14-138.jar                                           logkit-1.0.1.jar
bcprov-jdk14-1.38.jar                                          mail-1.4.jar
bcprov-jdk14-138.jar                                           myfaces-api-2.1.12.jar
bctsp-jdk14-1.38.jar                                           myfaces-impl-2.1.12.jar
bsh-2.0b4.jar                                                  oro-2.0.8.jar
castor-1.2.jar                                                 poi-3.7.jar
cglib-3.0.jar                                                  poi-ooxml-3.7.jar
commons-beanutils-1.8.2.jar                                    poi-ooxml-schemas-3.7.jar
commons-codec-1.3.jar                                          primefaces-4.0.jar
commons-collections-3.2.jar                                    primefaces-extensions-0.7.1.jar
commons-dbcp-1.2.2.jar                                         servlet-api-2.3.jar
commons-digester-1.8.jar                                       slf4j-api-1.6.2.jar
commons-fileupload-1.3.1.jar                                   slf4j-log4j12-1.6.1.jar
commons-io-2.4.jar                                             smoothness-1.0.10.jar
commons-lang-2.2.jar                                           snakeyaml-1.6.jar
commons-lang3-3.1.jar                                          spring-aop-3.1.0.RELEASE.jar
commons-logging-1.1.jar                                        spring-asm-3.1.0.RELEASE.jar
commons-pool-1.3.jar                                           spring-aspects-3.1.0.RELEASE.jar
dom4j-1.6.1.jar                                                spring-beans-3.1.0.RELEASE.jar
geronimo-stax-api_1.0_spec-1.0.jar                             spring-binding-2.3.2.RELEASE.jar
groovy-all-2.0.1.jar                                           spring-context-3.1.0.RELEASE.jar
gsfar-base-0.0.8-SNAPSHOT.jar                                  spring-context-support-3.1.0.RELEASE.jar
gsfar-core-0.0.8-SNAPSHOT.jar                                  spring-core-3.1.0.RELEASE.jar
gsfar-domain-0.0.8-SNAPSHOT.jar                                spring-data-commons-1.5.2.RELEASE.jar
gson-2.2.2.jar                                                 spring-data-commons-core-1.4.0.RELEASE.jar
guava-12.0.jar                                                 spring-data-envers-0.1.0.RELEASE.jar
hibernate-commons-annotations-4.0.1.Final.jar                  spring-data-jpa-1.3.4.RELEASE.jar
hibernate-core-4.1.7.Final.jar                                 spring-expression-3.2.1.RELEASE.jar
hibernate-entitymanager-4.1.7.Final.jar                        spring-faces-2.3.2.RELEASE.jar
hibernate-envers-4.1.7.Final.jar                               spring-integration-core-2.2.2.RELEASE.jar
hibernate-jpa-2.0-api-1.0.1.Final.jar                          spring-integration-jdbc-2.2.2.RELEASE.jar
hsqldb-1.8.0.7.jar                                             spring-jdbc-3.1.0.RELEASE.jar
itext-2.1.7.jar                                                spring-js-2.3.2.RELEASE.jar
jackson-annotations-2.1.4.jar                                  spring-js-resources-2.3.2.RELEASE.jar
jackson-core-2.1.4.jar                                         spring-orm-3.1.0.RELEASE.jar
jackson-databind-2.1.4.jar                                     spring-retry-1.0.2.RELEASE.jar
jasperreports-5.5.1.jar                                        spring-security-config-3.1.4.RELEASE.jar
javamelody-core-1.49.0.jar                                     spring-security-core-3.1.4.RELEASE.jar
javassist-3.15.0-GA.jar                                        spring-security-web-3.1.4.RELEASE.jar
jboss-logging-3.1.0.GA.jar                                     spring-test-3.1.0.RELEASE.jar
jboss-transaction-api_1.1_spec-1.0.0.Final.jar                 spring-tx-3.1.0.RELEASE.jar
jcl-over-slf4j-1.7.1.jar                                       spring-web-3.1.0.RELEASE.jar
jcommander-1.12.jar                                            spring-webflow-2.3.2.RELEASE.jar
jcommon-1.0.15.jar                                             spring-webmvc-3.2.1.RELEASE.jar
jdtcore-3.1.0.jar                                              stax-api-1.0.1.jar
jfreechart-1.0.12.jar                                          testng-6.4.jar


I use spring profiles rather than maven profiles, this way, the same build (war file) is deploy-able in tomcat7 server as well as in Wildfly-8.0.0.Final.

I have toggled two types of breakpoints in one of my managed bean : 
- The first type is for the initialization method ( annotated with  @PostConstruct )

- The second type is for setters of all properties aware of injection ( annotated with @ManagedProperty(""#{xxx}"") ).

When deploying to Tomcat7, every thing is well, all injections methods are invoked before the initialization method is called.

But, when running under Wildfly-8.0.0.Final, the initialization method is called before,  and this causes NullPointerException for properties not yet injected. This behavior is the same regardless the deployment is done from the administration console or from my eclipse workbench.

We don’t have a lot of choices regarding the version of myfaces to use, as the only installer provided for adding support of myfaces to wildFly contains the version  2.1.12. And it's not a problem for continue with this version of myfaces. The installer is down-loadable from nexus : https://repository.jboss.org/nexus/index.html#nexus-search;gav~org.wildfly~wildfly-jsf-installer~~~

 Thanks a lot in advance for your response.

",MYFACES-3889
"Loading a JSF page from the classpath in Tomcat in an Eclipse on Windows environment, then changing the JSF file via Eclipse lead to the original file resource being locked by the finalizer thread trying to close an InputStream to the file resource. After a GC the resource was overwritable again. The reason was the unclosed input stream in FaceletCacheImpl.java .

The following patch fixes the issue.

--- java/org/apache/myfaces/view/facelets/impl/FaceletCacheImpl.java	8 Jan 2013 14:28:47 -0000	1.2
+++ java/org/apache/myfaces/view/facelets/impl/FaceletCacheImpl.java	24 Apr 2014 16:20:49 -0000
@@ -154,9 +154,10 @@
         {
             // Should check for file modification
 
+            URLConnection conn = null;
             try
             {
-                URLConnection conn = facelet.getSource().openConnection();
+                conn = facelet.getSource().openConnection();
                 long lastModified = ResourceLoaderUtils.getResourceLastModified(conn);
 
                 return lastModified == 0 || lastModified > target;
@@ -165,6 +166,16 @@
             {
                 throw new FaceletException(""Error Checking Last Modified for "" + facelet.getAlias(), e);
             }
+            // finally close input stream when finished
+            finally {
+                if (conn != null) {
+                    try {
+                        conn.getInputStream().close();
+                    } catch (IOException e) {
+                        throw new FaceletException(""Error Checking Last Modified for "" + facelet.getAlias(), e);
+                    }
+                }
+            }
         }
 
         return false;
",MYFACES-3888
"<ui:debug rendered=""#{facesContext.application.projectStage eq 'Development'}""/>

does nothing : in UIDebug constructor is now hardcoded setRendered(true)  and therefore takes local value precedence over ValueExpression.

",MYFACES-3887
"When I use DialogFramework (of PrimeFaces), it's adds a new view to the session every time. The problem is that when I post an AJAX request to the original view, the _keys list is not updated, only the view get updated in the _serializedViews map.

After I reach the limit defined with the org.apache.myfaces.NUMBER_OF_VIEWS_IN_SESSION context-param, MyFaces gets the first element in the _keys list (which is the container view) - assuming that this is the oldest view in the session - and remove the corresponding view from the _serializedViews map by the key. But clearly it is not, as I already posted some AJAX requests to it.

I think the optimal behavior would be the following: when a view gets an ajax request the code should remove the the key from the _keys list and than add it as a last element.

The related class is org.apache.myfaces.application.viewstate.SerializedViewCollection at the if condition started at line 87.

My question is if it is an intended behavior or if it's a bug.",MYFACES-3886
"These files need to be handled so that rat does not report them as licensing violations.

  impl/src/test/resources/org/apache/myfaces/application/contracts/contracts/red/mylib/myjs.js
  impl/src/test/resources/org/apache/myfaces/view/facelets/pool/resources/test1.js
  impl/src/test/resources/org/apache/myfaces/view/facelets/pool/resources/test.js
  impl/src/test/resources/META-INF/contracts/yellow/javax.faces.contract.xml
  impl/src/test/resources/META-INF/contracts/yellow/mylib/myjs.js
  impl/src/test/resources/META-INF/contracts/blue/javax.faces.contract.xml
  impl/src/test/resources/META-INF/contracts/blue/mylib/myjs.js

  impl/src/main/resources/META-INF/services/javax.enterprise.inject.spi.Extension
  impl/src/main/resources/META-INF/services/org.apache.myfaces.spi.InjectionProvider


",MYFACES-3885
"These files need a license header so we can perform a release.

  impl/src/test/resources/org/apache/myfaces/view/facelets/pss/acid/resources/testComposite/dynComp_1.xhtml
  impl/src/test/resources/org/apache/myfaces/view/facelets/pss/acid/resources/testComposite/dynComp_3.xhtml
  impl/src/test/resources/org/apache/myfaces/view/facelets/pss/acid/resources/testComposite/dynComp_4.xhtml
  impl/src/test/resources/org/apache/myfaces/view/facelets/pss/acid/resources/testComposite/dynComp_2.xhtml
  impl/src/test/resources/org/apache/myfaces/view/facelets/pss/acid/resources/testComposite/dynComp_7.xhtml

Also
  impl/src/test/resources/org/apache/myfaces/view/facelets/pool/resources/testComposite/dynComp_1.xhtml
",MYFACES-3884
"It has been reported that c:forEach tag with PSS enabled doesn't work well, but if PSS is disabled it works again.

This problem has been known for a long time, but it was considered a flaw in c:forEach tag, and there are know fixes for it:

1. Set javax.faces.PARTIAL_STATE_SAVING to false.

or

2. Add the page in javax.faces.FULL_STATE_SAVING_VIEW_IDS (disable PSS
on the related page only).

or

3. Set org.apache.myfaces.REFRESH_TRANSIENT_BUILD_ON_PSS_PRESERVE_STATE to true.

In JSF 2.2 we fixed that tag from root, but it seems possible to add a small workaround over the state saving algorithm to fix at least the duplicate id exception. It is not perfect, but it seems enough in some cases, and the tag will look ""less broken"". The idea is detect the duplicate when the component is added to the tree and remove the invalid component and replace it with the restored one.",MYFACES-3883
"With the artefacts for version 2.2.3 provided by Leo for the vote, I have severe problems with one of my applications. It seems, that there is some error showing a page with a template.

First problem is, that a stylesheet linked in the template is not rendered. Therefore the page looks completely different in the browser. With 2.2.1 and 2.2.2 it works like expected.

Additionally, two messages with the label ""Component with no name and no body content, so nothing rendered."" are shown by h:messages.",MYFACES-3882
"If you use @ViewScoped beans and activate CLIENT_WINDOW_MODE (url or client) a page refresh generates a new windowid although the application in the current browser window already has a windowid.
I think a new windowid should only be generated, if no windowid exists, e.g. open new window or tab with the same url.

<context-param>
   <param-name>javax.faces.CLIENT_WINDOW_MODE</param-name>
   <param-value>url</param-value>
   <!--client doesn't work too-->
</context-param>

A testcase is attached.
call url: http://localhost:8080/jsftest22/mypage.jsf
Fill some values into field
Press F5 to refresh the page
=> new windowid is generated => inputdata is lost, because a new @ViewScoped bean was created",MYFACES-3881
"As discussed on the user list, Leonardo Uribe asked me to create a ticket for this feature. 

The idea is to allow the view state to be rendered in the beginning of the form to avoid a ViewExpiredException in case of a postback on a page that isn't completely loaded yet.

Details: http://markmail.org/search/?q=view%20list%3Aorg.apache.myfaces.users#query:view%20list%3Aorg.apache.myfaces.users%20order%3Adate-backward+page:1+mid:uqp2l6y2iwlmwbso+state:results

As a workaround I'm using PrimeFaces deferred loading. It hides the form components while the page isn't fully loaded. http://www.primefaces.org/showcase/ui/outputPanel.jsf

Thanks

",MYFACES-3880
"Reported by Sebastian Mellmann:

Hello everyone,

 

I have just run into a problem where the 'title' attribut is not being rendered using the <h:selectOneMenu> tag.

Used version is MyFaces Core 2.2.2

 

I had a look into the source code and the following changes seem to fix the problem:

 

Class: org.apache.myfaces.shared.renderkit.html.HtmlRendererUtils

Method: renderSelectOptions (Line 521)

Code changes listed on pastebin: http://pastebin.com/SHLKxi5H

 

Can someone confirm this, because I wanted to ask the ML first before opening an issue via Apache JIRA for MyFaces?!

 


Thanks and regards,

Sebastian


The problem is not the title fix, is that passthrough attributes must work for components created by effect of f:selectItem and f:selectItems. There is  a line in the renderkit javadoc of javax.faces.SelectMany/javax.faces.Listbox that says:

""... In both the case of the ""option"" element or the ""optgroup""
element, the implementation must pass the UISelectItem or
UISelectItems corresponding to the SelectItem bean to the call to
ResponseWriter.startElement(). ...""

I tested against Mojarra 2.2.6 and it is correct. But Mojarra has a bug in this part, because components like h:selectManyCheckbox or h:selectOneRadio should work just the same, but in this case a set of ""input"" html tags are rendered instead. It is clear the renderkit javadoc reference how the ""option"" is rendered, so we should follow the spirit of the spec in this part, which is allow to define passthrough attributes for f:selectItem and f:selectItems.",MYFACES-3879
"ViewHandlerWrapper doesn't contain the new methods
addProtectedView, removeProtectedView, getProtectedViewsUnmodifiable",MYFACES-3878
"From MyFaces users list Oleg Varaksin:

Hello MyFaces team,

We get a StackOverflowError since MyFaces 2.x. The stack trace is shown here http://forum.primefaces.org/viewtopic.php?f=14&t=36999

The problem: Wenn we call super.processEvent(event) in the processEvent() of a custom component, we get a recursion which ends in StackOverflowError.

@Override
public void processEvent(ComponentSystemEvent event) throws AbortProcessingException {
    super.processEvent(event);
    ...
}

The call super.processEvent(event) is necessary because e.g. Mojarra executes there some important code. But if we look at processEvent() in the MyFaces' UIComponent, it iterates over all listeners for processEvent() and invokes them. That means, processEvent() of the custom component is invoked again. Does it work as designed or a is it a bug?

It was working before MyFaces 2.x and it works for all Mojarra versions.

Thanks in advance.

The problem was caused by this line:

@ListenerFor(systemEventClass = PostRestoreStateEvent.class)

The line is not necessary, because all components are already subscribed to the event by default.

The code we have in MyFaces is correct from spec perspective. See:

https://java.net/jira/browse/JAVASERVERFACES_SPEC_PUBLIC-1061

But a simple check in this part can help to avoid the exception and keep running code that comes from 2.0/2.1. In fact, in 2.0/2.1 the offending line has no effect, but the problem was caused because MyFaces handles the case. It is recommended to remove the offending line from the users code anyway.",MYFACES-3877
"As described in:

https://java.net/projects/javaserverfaces-spec-public/lists/users/archive/2014-03/message/35

and discussed in Javaland, some changes are required to fix some edge cases with HTML friendly markup feature. The use cases are described on the mail sent to the jsr344-users list, so in this issue we are going to fix the problem for MyFaces.",MYFACES-3876
"If I use the ""for"" attribute in a custom converter for a composite component I get the following error message:

{noformat}
[ERROR] o.a.m.view.facelets.tag.MetaRulesetImpl - /converter/numbers.xhtml at line 18 and column 46 for=""field"" Unhandled by MetaTagHandler for type com.btc.jsf.converter.TestConverter
{noformat}

The invocation of the converter looks like this:

{code:xml}
<my:in label=""Number"" field=""#{converterExample.number1}"">
    <conv:testConverter for=""field""/>
</my:in>
{code}

The ConverterTagHandlerDelegate handles the ""for"" attribute, but it looks like there is a 

ignore(""for"");

missing in ConverterTagHandlerDelegate.createMetaRuleset().",MYFACES-3875
"Mojarra 2.2.6 accept jsf:class attribute without problem. Myfaces 2.2.2 no

example
{noformat}
<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE html [<!ENTITY nbsp ""&#160;"">]>
<html dir=""ltr"" class=""client-js ve-not-available"" lang=""en""
      xmlns=""http://www.w3.org/1999/xhtml""
      xmlns:f=""http://xmlns.jcp.org/jsf/core""
      xmlns:h=""http://xmlns.jcp.org/jsf/html""
      xmlns:jsf=""http://xmlns.jcp.org/jsf""
	  xmlns:pt=""http://xmlns.jcp.org/jsf/passthrough"">
<body>
<li jsf:class=""toclevel-1 tocsection-2""/>
</body>
</html>
{noformat}

Exception
{noformat}
HTTP Status 500 - Component property class is not writable

type Exception report

message Component property class is not writable

description The server encountered an internal error that prevented it from fulfilling this request.

exception

javax.servlet.ServletException: Component property class is not writable
	javax.faces.webapp.FacesServlet.service(FacesServlet.java:230)

root cause

java.lang.IllegalArgumentException: Component property class is not writable
	javax.faces.component._ComponentAttributesMap.setComponentProperty(_ComponentAttributesMap.java:709)
	javax.faces.component._ComponentAttributesMap.put(_ComponentAttributesMap.java:584)
	javax.faces.component._ComponentAttributesMap.put(_ComponentAttributesMap.java:55)
	org.apache.myfaces.view.facelets.tag.jsf.ComponentRule$LiteralAttributeMetadata.applyMetadata(ComponentRule.java:52)
	org.apache.myfaces.view.facelets.tag.MetadataImpl.applyMetadata(MetadataImpl.java:45)
	javax.faces.view.facelets.MetaTagHandler.setAttributes(MetaTagHandler.java:63)
	javax.faces.view.facelets.DelegatingMetaTagHandler.setAttributes(DelegatingMetaTagHandler.java:90)
	org.apache.myfaces.view.facelets.tag.jsf.ComponentTagHandlerDelegate.apply(ComponentTagHandlerDelegate.java:290)
	javax.faces.view.facelets.DelegatingMetaTagHandler.apply(DelegatingMetaTagHandler.java:50)
	javax.faces.view.facelets.CompositeFaceletHandler.apply(CompositeFaceletHandler.java:46)
	javax.faces.view.facelets.DelegatingMetaTagHandler.applyNextHandler(DelegatingMetaTagHandler.java:55)
	org.apache.myfaces.view.facelets.tag.jsf.ComponentTagHandlerDelegate.apply(ComponentTagHandlerDelegate.java:373)
	javax.faces.view.facelets.DelegatingMetaTagHandler.apply(DelegatingMetaTagHandler.java:50)
	javax.faces.view.facelets.CompositeFaceletHandler.apply(CompositeFaceletHandler.java:46)
	org.apache.myfaces.view.facelets.compiler.NamespaceHandler.apply(NamespaceHandler.java:59)
	javax.faces.view.facelets.CompositeFaceletHandler.apply(CompositeFaceletHandler.java:46)
	javax.faces.view.facelets.CompositeFaceletHandler.apply(CompositeFaceletHandler.java:46)
	org.apache.myfaces.view.facelets.compiler.EncodingHandler.apply(EncodingHandler.java:48)
	org.apache.myfaces.view.facelets.impl.DefaultFacelet.apply(DefaultFacelet.java:187)
	org.apache.myfaces.view.facelets.FaceletViewDeclarationLanguage.buildView(FaceletViewDeclarationLanguage.java:477)
	org.apache.myfaces.lifecycle.RenderResponseExecutor.execute(RenderResponseExecutor.java:78)
	org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:267)
	javax.faces.webapp.FacesServlet.service(FacesServlet.java:200)

note The full stack trace of the root cause is available in the Apache Tomcat/7.0.52 logs.
{noformat}",MYFACES-3874
"In my testcase i use javax.faces.view.ViewScoped for a bean (net.jsftest.Theme) which generates my theme.

You can see, that this doesn't work inside the used css file (resources/main.css):
http://localhost:8080/jsftest22/pages/theme/themetest1.jsf

@PostConstruct is never called, so the bean is not initialized


It works inside page:
http://localhost:8080/jsftest22/pages/theme/themetest2.jsf

If you use javax.enterprise.context.SessionScoped within net.jsftest.Theme both cases works.


The problem also occurs in current mojarra implementation",MYFACES-3873
"When the project stage is development we can post a multipart form with a fileupload component included in IE 7 and IE 8. But when the project stage is Production then a javascript error accured on line 1 karakter 74.615.

The workaround for this problem is to get the uncompressed version of jsf.js and compress it with http://jscompress.com/. Then place the compressed jsf.js in the resource folder under javax.faces.",MYFACES-3872
"If you use myfaces (2.2.1 or current 2.2.2-SNAPSHOT), Richfaces 5 is not able to load its css-resources correctly.
If you use current mojarra implementation (2.2.5) all resources load without any complications.

A testcase (mavenproject) is attached. Within the pom.xml you can change the jsf implementation.

You can start the testcase with the following URL:

http://localhost:8080/jsftest22/pages/richfacesskintest.jsf
",MYFACES-3871
"Doing some tests it was detected that jsf:elementName is not working exactly as it should. The reason is this attribute use jsf namespace, so it is added in the attribute map, but it should behaves like it was p:elementName

Clarification: jsf:elementName as an attribute to add does not exists, but <jsf:element elementName=""...""> does. pt:elementName has the same effect. ",MYFACES-3870
"As part of MYFACES-3867, it was found in some cases where parts of the tree are changed by effect of a ui:include tag, the facelet tag ids used by c:if or c:forEach for example are not unique enough. 

The fix is apply the same logic used in DefaultFaceletContext.generateUniqueId(...), which is use a combination between a facelet hierarchy hashcode and the tagId, which is associated to the position of the tag in the page.",MYFACES-3869
"In the following example, the passthrough element input has an attribute placeholder, that should be added to the corresponding JSF component as a passthrough attribute:

<input type=""text"" jsf:id=""name"" jsf:value=""#{bean.name}""
    placeholder=""Enter name""/>

With MyFaces 2.2.1 however, the placeholder attribute is not rendered.

On further inspecting the component, I saw that placeholder is put in the attributes map and not in the passthrough attributes map of the component. That is probably the reason why it is not rendered.",MYFACES-3868
"The following error occurs during the restore view phase when working with ajax and re-rendering just a fraction of the page.

This occurs with the latest version of the trunk. Unfortunately a test case for this problem was not possible due to the complexity of the page, which involves multiple composite components, <c:if> conditions and <c:forEach> tags.

The stack trace follows.

java.lang.ClassCastException: java.lang.Boolean cannot be cast to org.apache.myfaces.view.facelets.tag.jstl.core.IterationState
	at org.apache.myfaces.view.facelets.tag.jstl.core.ForEachHandler.apply(ForEachHandler.java:210)
	at javax.faces.view.facelets.CompositeFaceletHandler.apply(CompositeFaceletHandler.java:46)
	at javax.faces.view.facelets.DelegatingMetaTagHandler.applyNextHandler(DelegatingMetaTagHandler.java:55)
	at org.richfaces.ui.behavior.BehaviorsAddingComponentHandlerWrapper.applyNextHandler(BehaviorsAddingComponentHandlerWrapper.java:53)
	at org.apache.myfaces.view.facelets.tag.jsf.ComponentTagHandlerDelegate.apply(ComponentTagHandlerDelegate.java:373)
	at javax.faces.view.facelets.DelegatingMetaTagHandler.apply(DelegatingMetaTagHandler.java:50)
	at javax.faces.view.facelets.CompositeFaceletHandler.apply(CompositeFaceletHandler.java:46)
	at org.apache.myfaces.view.facelets.tag.composite.ImplementationHandler.apply(ImplementationHandler.java:67)
	at javax.faces.view.facelets.CompositeFaceletHandler.apply(CompositeFaceletHandler.java:46)
	at org.apache.myfaces.view.facelets.tag.composite.CompositeComponentDefinitionTagHandler.apply(CompositeComponentDefinitionTagHandler.java:257)
	at org.apache.myfaces.view.facelets.compiler.NamespaceHandler.apply(NamespaceHandler.java:59)
	at org.apache.myfaces.view.facelets.compiler.EncodingHandler.apply(EncodingHandler.java:48)
	at org.apache.myfaces.view.facelets.impl.DefaultFacelet.applyCompositeComponent(DefaultFacelet.java:602)
	at org.apache.myfaces.view.facelets.impl.DefaultFaceletContext.applyCompositeComponent(DefaultFaceletContext.java:778)
	at org.apache.myfaces.view.facelets.tag.composite.CompositeComponentResourceTagHandler.applyCompositeComponentFacelet(CompositeComponentResourceTagHandler.java:443)
	at org.apache.myfaces.view.facelets.tag.composite.CompositeComponentResourceTagHandler.applyNextHandler(CompositeComponentResourceTagHandler.java:216)
	at org.richfaces.ui.behavior.BehaviorsAddingComponentHandlerWrapper.applyNextHandler(BehaviorsAddingComponentHandlerWrapper.java:53)
	at org.apache.myfaces.view.facelets.tag.jsf.ComponentTagHandlerDelegate.apply(ComponentTagHandlerDelegate.java:373)
	at javax.faces.view.facelets.DelegatingMetaTagHandler.apply(DelegatingMetaTagHandler.java:50)
	at javax.faces.view.facelets.CompositeFaceletHandler.apply(CompositeFaceletHandler.java:46)
	at org.apache.myfaces.view.facelets.tag.jstl.core.IfHandler.apply(IfHandler.java:126)
	at javax.faces.view.facelets.CompositeFaceletHandler.apply(CompositeFaceletHandler.java:46)
	at org.apache.myfaces.view.facelets.tag.composite.ImplementationHandler.apply(ImplementationHandler.java:67)
	at javax.faces.view.facelets.CompositeFaceletHandler.apply(CompositeFaceletHandler.java:46)
	at org.apache.myfaces.view.facelets.tag.composite.CompositeComponentDefinitionTagHandler.apply(CompositeComponentDefinitionTagHandler.java:257)
	at org.apache.myfaces.view.facelets.compiler.NamespaceHandler.apply(NamespaceHandler.java:59)
	at org.apache.myfaces.view.facelets.compiler.EncodingHandler.apply(EncodingHandler.java:48)
	at org.apache.myfaces.view.facelets.impl.DefaultFacelet.applyCompositeComponent(DefaultFacelet.java:602)
	at org.apache.myfaces.view.facelets.impl.DefaultFaceletContext.applyCompositeComponent(DefaultFaceletContext.java:778)
	at org.apache.myfaces.view.facelets.tag.composite.CompositeComponentResourceTagHandler.applyCompositeComponentFacelet(CompositeComponentResourceTagHandler.java:443)
	at org.apache.myfaces.view.facelets.tag.composite.CompositeComponentResourceTagHandler.applyNextHandler(CompositeComponentResourceTagHandler.java:216)
	at org.richfaces.ui.behavior.BehaviorsAddingComponentHandlerWrapper.applyNextHandler(BehaviorsAddingComponentHandlerWrapper.java:53)
	at org.apache.myfaces.view.facelets.tag.jsf.ComponentTagHandlerDelegate.apply(ComponentTagHandlerDelegate.java:373)
	at javax.faces.view.facelets.DelegatingMetaTagHandler.apply(DelegatingMetaTagHandler.java:50)
	at javax.faces.view.facelets.CompositeFaceletHandler.apply(CompositeFaceletHandler.java:46)
	at org.apache.myfaces.view.facelets.tag.ui.CompositionHandler.apply(CompositionHandler.java:161)
	at org.apache.myfaces.view.facelets.compiler.NamespaceHandler.apply(NamespaceHandler.java:59)
	at org.apache.myfaces.view.facelets.compiler.EncodingHandler.apply(EncodingHandler.java:48)
	at org.apache.myfaces.view.facelets.impl.DefaultFacelet.include(DefaultFacelet.java:514)
	at org.apache.myfaces.view.facelets.impl.DefaultFacelet.include(DefaultFacelet.java:568)
	at org.apache.myfaces.view.facelets.impl.DefaultFacelet.include(DefaultFacelet.java:546)
	at org.apache.myfaces.view.facelets.impl.DefaultFaceletContext.includeFacelet(DefaultFaceletContext.java:240)
	at org.apache.myfaces.view.facelets.tag.ui.IncludeHandler.apply(IncludeHandler.java:226)
	at javax.faces.view.facelets.CompositeFaceletHandler.apply(CompositeFaceletHandler.java:46)
	at javax.faces.view.facelets.DelegatingMetaTagHandler.applyNextHandler(DelegatingMetaTagHandler.java:55)
	at org.richfaces.ui.behavior.BehaviorsAddingComponentHandlerWrapper.applyNextHandler(BehaviorsAddingComponentHandlerWrapper.java:53)
	at org.apache.myfaces.view.facelets.tag.jsf.ComponentTagHandlerDelegate.apply(ComponentTagHandlerDelegate.java:373)
	at javax.faces.view.facelets.DelegatingMetaTagHandler.apply(DelegatingMetaTagHandler.java:50)
	at javax.faces.view.facelets.CompositeFaceletHandler.apply(CompositeFaceletHandler.java:46)
	at org.apache.myfaces.view.facelets.tag.composite.ImplementationHandler.apply(ImplementationHandler.java:67)
	at javax.faces.view.facelets.CompositeFaceletHandler.apply(CompositeFaceletHandler.java:46)
	at org.apache.myfaces.view.facelets.tag.composite.CompositeComponentDefinitionTagHandler.apply(CompositeComponentDefinitionTagHandler.java:257)
	at org.apache.myfaces.view.facelets.compiler.NamespaceHandler.apply(NamespaceHandler.java:59)
	at org.apache.myfaces.view.facelets.compiler.EncodingHandler.apply(EncodingHandler.java:48)
	at org.apache.myfaces.view.facelets.impl.DefaultFacelet.applyCompositeComponent(DefaultFacelet.java:602)
	at org.apache.myfaces.view.facelets.impl.DefaultFaceletContext.applyCompositeComponent(DefaultFaceletContext.java:778)
	at org.apache.myfaces.view.facelets.tag.composite.CompositeComponentResourceTagHandler.applyCompositeComponentFacelet(CompositeComponentResourceTagHandler.java:443)
	at org.apache.myfaces.view.facelets.tag.composite.CompositeComponentResourceTagHandler.applyNextHandler(CompositeComponentResourceTagHandler.java:216)
	at org.richfaces.ui.behavior.BehaviorsAddingComponentHandlerWrapper.applyNextHandler(BehaviorsAddingComponentHandlerWrapper.java:53)
	at org.apache.myfaces.view.facelets.tag.jsf.ComponentTagHandlerDelegate.apply(ComponentTagHandlerDelegate.java:373)
	at javax.faces.view.facelets.DelegatingMetaTagHandler.apply(DelegatingMetaTagHandler.java:50)
	at javax.faces.view.facelets.CompositeFaceletHandler.apply(CompositeFaceletHandler.java:46)
	at org.apache.myfaces.view.facelets.tag.ui.CompositionHandler.apply(CompositionHandler.java:161)
	at org.apache.myfaces.view.facelets.compiler.NamespaceHandler.apply(NamespaceHandler.java:59)
	at org.apache.myfaces.view.facelets.compiler.EncodingHandler.apply(EncodingHandler.java:48)
	at org.apache.myfaces.view.facelets.impl.DefaultFacelet.include(DefaultFacelet.java:514)
	at org.apache.myfaces.view.facelets.impl.DefaultFacelet.include(DefaultFacelet.java:568)
	at org.apache.myfaces.view.facelets.impl.DefaultFacelet.include(DefaultFacelet.java:546)
	at org.apache.myfaces.view.facelets.impl.DefaultFaceletContext.includeFacelet(DefaultFaceletContext.java:240)
	at org.apache.myfaces.view.facelets.tag.ui.IncludeHandler.apply(IncludeHandler.java:226)
	at org.apache.myfaces.view.facelets.tag.jstl.core.ForEachHandler.applyFirstTime(ForEachHandler.java:382)
	at org.apache.myfaces.view.facelets.tag.jstl.core.ForEachHandler.apply(ForEachHandler.java:229)
	at javax.faces.view.facelets.CompositeFaceletHandler.apply(CompositeFaceletHandler.java:46)
	at org.apache.myfaces.view.facelets.tag.composite.ImplementationHandler.apply(ImplementationHandler.java:67)
	at javax.faces.view.facelets.CompositeFaceletHandler.apply(CompositeFaceletHandler.java:46)
	at org.apache.myfaces.view.facelets.tag.composite.CompositeComponentDefinitionTagHandler.apply(CompositeComponentDefinitionTagHandler.java:257)
	at org.apache.myfaces.view.facelets.compiler.NamespaceHandler.apply(NamespaceHandler.java:59)
	at org.apache.myfaces.view.facelets.compiler.EncodingHandler.apply(EncodingHandler.java:48)
	at org.apache.myfaces.view.facelets.impl.DefaultFacelet.applyCompositeComponent(DefaultFacelet.java:602)
	at org.apache.myfaces.view.facelets.impl.DefaultFaceletContext.applyCompositeComponent(DefaultFaceletContext.java:778)
	at org.apache.myfaces.view.facelets.tag.composite.CompositeComponentResourceTagHandler.applyCompositeComponentFacelet(CompositeComponentResourceTagHandler.java:443)
	at org.apache.myfaces.view.facelets.tag.composite.CompositeComponentResourceTagHandler.applyNextHandler(CompositeComponentResourceTagHandler.java:216)
	at org.richfaces.ui.behavior.BehaviorsAddingComponentHandlerWrapper.applyNextHandler(BehaviorsAddingComponentHandlerWrapper.java:53)
	at org.apache.myfaces.view.facelets.tag.jsf.ComponentTagHandlerDelegate.apply(ComponentTagHandlerDelegate.java:373)
	at javax.faces.view.facelets.DelegatingMetaTagHandler.apply(DelegatingMetaTagHandler.java:50)
	at org.apache.myfaces.view.facelets.tag.UserTagHandler.apply(UserTagHandler.java:210)
	at org.apache.myfaces.view.facelets.impl.TemplateContextImpl$TemplateManagerImpl.apply(TemplateContextImpl.java:193)
	at org.apache.myfaces.view.facelets.impl.TemplateContextImpl.includeDefinition(TemplateContextImpl.java:136)
	at org.apache.myfaces.view.facelets.impl.DefaultFaceletContext.includeDefinition(DefaultFaceletContext.java:459)
	at org.apache.myfaces.view.facelets.tag.ui.InsertHandler.apply(InsertHandler.java:94)
	at javax.faces.view.facelets.CompositeFaceletHandler.apply(CompositeFaceletHandler.java:46)
	at javax.faces.view.facelets.DelegatingMetaTagHandler.applyNextHandler(DelegatingMetaTagHandler.java:55)
	at org.richfaces.ui.behavior.BehaviorsAddingComponentHandlerWrapper.applyNextHandler(BehaviorsAddingComponentHandlerWrapper.java:53)
	at org.apache.myfaces.view.facelets.tag.jsf.ComponentTagHandlerDelegate.apply(ComponentTagHandlerDelegate.java:373)
	at javax.faces.view.facelets.DelegatingMetaTagHandler.apply(DelegatingMetaTagHandler.java:50)
	at org.apache.myfaces.view.facelets.compiler.NamespaceHandler.apply(NamespaceHandler.java:59)
	at org.apache.myfaces.view.facelets.compiler.EncodingHandler.apply(EncodingHandler.java:48)
	at org.apache.myfaces.view.facelets.impl.DefaultFacelet.include(DefaultFacelet.java:514)
	at org.apache.myfaces.view.facelets.impl.DefaultFacelet.include(DefaultFacelet.java:568)
	at org.apache.myfaces.view.facelets.impl.DefaultFaceletContext.includeFacelet(DefaultFaceletContext.java:389)
	at org.apache.myfaces.view.facelets.tag.UserTagHandler.apply(UserTagHandler.java:159)
	at org.apache.myfaces.view.facelets.tag.ui.DefineHandler.applyDefinition(DefineHandler.java:86)
	at org.apache.myfaces.view.facelets.tag.ui.CompositionHandler.apply(CompositionHandler.java:178)
	at org.apache.myfaces.view.facelets.impl.TemplateContextImpl$TemplateManagerImpl.apply(TemplateContextImpl.java:193)
	at org.apache.myfaces.view.facelets.impl.TemplateContextImpl.includeDefinition(TemplateContextImpl.java:136)
	at org.apache.myfaces.view.facelets.impl.DefaultFaceletContext.includeDefinition(DefaultFaceletContext.java:459)
	at org.apache.myfaces.view.facelets.tag.ui.InsertHandler.apply(InsertHandler.java:94)
	at javax.faces.view.facelets.CompositeFaceletHandler.apply(CompositeFaceletHandler.java:46)
	at javax.faces.view.facelets.DelegatingMetaTagHandler.applyNextHandler(DelegatingMetaTagHandler.java:55)
	at org.richfaces.ui.behavior.BehaviorsAddingComponentHandlerWrapper.applyNextHandler(BehaviorsAddingComponentHandlerWrapper.java:53)
	at org.apache.myfaces.view.facelets.tag.jsf.ComponentTagHandlerDelegate.apply(ComponentTagHandlerDelegate.java:373)
	at javax.faces.view.facelets.DelegatingMetaTagHandler.apply(DelegatingMetaTagHandler.java:50)
	at javax.faces.view.facelets.DelegatingMetaTagHandler.applyNextHandler(DelegatingMetaTagHandler.java:55)
	at org.richfaces.ui.behavior.BehaviorsAddingComponentHandlerWrapper.applyNextHandler(BehaviorsAddingComponentHandlerWrapper.java:53)
	at org.apache.myfaces.view.facelets.tag.jsf.ComponentTagHandlerDelegate.apply(ComponentTagHandlerDelegate.java:373)
	at javax.faces.view.facelets.DelegatingMetaTagHandler.apply(DelegatingMetaTagHandler.java:50)
	at javax.faces.view.facelets.CompositeFaceletHandler.apply(CompositeFaceletHandler.java:46)
	at org.apache.myfaces.view.facelets.tag.jsf.core.ViewHandler.apply(ViewHandler.java:195)
	at org.apache.myfaces.view.facelets.compiler.NamespaceHandler.apply(NamespaceHandler.java:59)
	at javax.faces.view.facelets.CompositeFaceletHandler.apply(CompositeFaceletHandler.java:46)
	at org.apache.myfaces.view.facelets.compiler.EncodingHandler.apply(EncodingHandler.java:48)
	at org.apache.myfaces.view.facelets.impl.DefaultFacelet.include(DefaultFacelet.java:514)
	at org.apache.myfaces.view.facelets.impl.DefaultFacelet.include(DefaultFacelet.java:568)
	at org.apache.myfaces.view.facelets.impl.DefaultFacelet.include(DefaultFacelet.java:546)
	at org.apache.myfaces.view.facelets.impl.DefaultFaceletContext.includeFacelet(DefaultFaceletContext.java:240)
	at org.apache.myfaces.view.facelets.tag.ui.CompositionHandler.apply(CompositionHandler.java:151)
	at org.apache.myfaces.view.facelets.compiler.NamespaceHandler.apply(NamespaceHandler.java:59)
	at org.apache.myfaces.view.facelets.compiler.EncodingHandler.apply(EncodingHandler.java:48)
	at org.apache.myfaces.view.facelets.impl.DefaultFacelet.include(DefaultFacelet.java:514)
	at org.apache.myfaces.view.facelets.impl.DefaultFacelet.include(DefaultFacelet.java:568)
	at org.apache.myfaces.view.facelets.impl.DefaultFacelet.include(DefaultFacelet.java:546)
	at org.apache.myfaces.view.facelets.impl.DefaultFaceletContext.includeFacelet(DefaultFaceletContext.java:240)
	at org.apache.myfaces.view.facelets.tag.ui.CompositionHandler.apply(CompositionHandler.java:151)
	at org.apache.myfaces.view.facelets.compiler.NamespaceHandler.apply(NamespaceHandler.java:59)
	at org.apache.myfaces.view.facelets.compiler.EncodingHandler.apply(EncodingHandler.java:48)
	at org.apache.myfaces.view.facelets.impl.DefaultFacelet.apply(DefaultFacelet.java:187)
	at org.apache.myfaces.view.facelets.FaceletViewDeclarationLanguage.buildView(FaceletViewDeclarationLanguage.java:477)
	at org.apache.myfaces.lifecycle.RenderResponseExecutor.execute(RenderResponseExecutor.java:78)
	at org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:267)
	at javax.faces.webapp.FacesServlet.service(FacesServlet.java:198)
...",MYFACES-3867
"If I using the ""jsf:id"" element within a simple div, the rendered result is something like this:

<http://xmlns.jcp.org/jsf id=""someDiv"" p:elementName=""div""></http://xmlns.jcp.org/jsf>

The following warning is shown.

Warning: The page /test.xhtml declares namespace null and uses the tag http://xmlns.jcp.org/jsf , but no TagLibrary associated to namespace.",MYFACES-3866
"Discussed on the list here:
https://mail-archives.apache.org/mod_mbox/myfaces-users/201403.mbox/thread

Here's the project I used to reproduce it:
https://dl.dropboxusercontent.com/u/860312/javaweb-cdi-ds-project-template.rar

Note that with the enctype the post does not work at:
http://localhost:8080/javaweb-cdi-ds-project-template/helloWorld.xhtml

It is not broken if the sample is started with -Pmojarra",MYFACES-3865
"
Hi,

I am trying to debug through the latest myfaces-core-assembly-2.1.14-src, and finding that some of the breakpoints of some java classes are not reachable. In particular, I am not able to reach getStateCache method of HtmlResponseStateManager.  I am not very sure if something wrong with my setup or if there is any issue with myfaces src and bin packages. 

To cross check that my setup has no problems, I have tried to debug with 2.1.8 version, and I have found no issues with that package. 

If this is no issue for you, please kindly share if there is any possible issue with my setup.

Thanks in advance.

Regards,
Kumar.",MYFACES-3864
"Hello,

I've been looking and reading a lot about JSF's lifecycle. I'm no expert in any sense and have not fully grasped what happens in each phase.

I have debugged our application and seen how much time is spent in each cycle. For larger pages it can be quite a lot (500 ms for each APPLY, VALIDATION, UPDATE). Even for smaller pages there can be ~10-20ms in the cycle when posting to the server. As far as I have gathered, the component tree is traversed for each of these cycles. For us, every ms counts :)

Now, my application doesn't use the JSF validation framework. There isn't any <f:validator> stuff anywhere. For me, I don't see that I need to execute that phase, ever. So I would like to turn off that phase. But even better, maybe when parsing the XHTML facelet (or constructing the view or something), couldn't the UIViewRoot have information on if there are any <f:validator> stuff on the page? If not, it could skip the validation phase completely? 

As I said, I don't fully grasp what's happening behind the scenes so maybe something else would stop working? And maybe the validation phase does more the execute <f:validator> tags.

I realize this scenario might be special since we don't use the <f:validator> stuff, we reuse our own legacy validation framework, but there still could be pages in a regular JSF application with lots of components (big tables etc) and no validation (or custom validation). Any pointers for how I could patch and skip the validation phase myself would be nice:)

Thanks",MYFACES-3863
"Trying some examples I have notice the code we have in the new impl-test module does not initialize a default InitialContextFactory by default. The effect is some calls to new InitialContext() does not work as in the web server. 

The idea is provide a custom InitialContextFactory implementation that creates and mock initial context, so for example when CDI set the BeanManager, it can be grabbed from the context.

It could be good to provide an annotation to set the JNDI mapping for the test enviroment too, so you can inject for example a datasource and so on.",MYFACES-3862
"I have notice if you try to generate the site, the unpack plugin causes some problems. I tried to update myfaces-builder-plugin to use a later version of dependency plugin, but it didn't work out.

The only solution we have is use a profile and do a hard copy, like we do with shared module, and remember to execute that goal an commit the code before each release. I have tried to fix the problem in the plugin, but unfortunately, the problem is caused by a fork over the goal generated by site plugin that can't be controlled. In that execution, the file associated to artifact to be unpacked points to target/classes directory, which is wrong because this goal is executed in a very early stage of maven lifecycle.

The solution is not very nice, but it works.",MYFACES-3861
"Checking some examples I have found a typo error in DefaultFaceletsStateManagementStrategy line 319:

Object viewRootState = states.get(view.getViewId());

It should be like this:

Object viewRootState = states.get(view.getClientId(context));

The effect is build view time tags like c:forEach and c:if that uses view scope beans does not work as expected.",MYFACES-3860
"The user reported this simple example:

    @Produces
    @FlowDefinition
    public Flow defineFlow(@FlowBuilderParameter FlowBuilder flowBuilder) {
            String flowId = ""flux"";
        flowBuilder.id("""", flowId);
        flowBuilder.viewNode(flowId, 
                ""/"" + flowId + ""/"" + flowId + "".xhtml"").
                markAsStartNode();
        flowBuilder.returnNode(""returnFromFlux"").
                fromOutcome(""#{flowScopedBean.return}"");
 
        return flowBuilder.getFlow();        
    }

Please note there is a view node with the same name used by the flowId as nodeId. The current algorithm does not detect this case, so it is interpreted like if the user want to enter into the flow, causing a loop. But the code in transition(...) avoid the recursion and instead get out of the flow. 

It is better if we check this case and deal with it properly before enter into a flow. 

Please note in a normal case click to enter into a flow twice cause get out of the flow and enter into the flow again, which is correct. But in this case, the resulting flow will not have that behavior and instead the navigation goes to the node identified as start node without exit from the flow.

",MYFACES-3859
"Taking a look at JSF 2.2 section 11.4.3.3 it says:

""... The following conventions apply to flows defined in this manner.
Any flow definition in the corresponding -flow.xml file will override any
of the conventions in the case of a conflict

- Every vdl file in that directory is a view node of that flow.
- The start node of the flow is the view whose name is the same as the
name of the flow.
- Navigation among any of the views in the directory is considered to
be within the flow.
- The flow defining document id is the empty string. ...""

Checking the code it seems the conditions has been applied but only when the empty flow is provided. The default start node should be defined in cases where it is not defined in a explicit way in the xml.",MYFACES-3858
"I discovered this through some complicated use of composite components but the issue is that during process updates if a component is not rendered (rendered=false) then it is pushed on the component stack but never popped.  This bug has existed since version 2.1.2.
The affected method is javax.faces.component.UIComponentBase.processUpdates(FacesContext)

The code is
...
pushComponentToEL(context, this);
if (_isPhaseExecutable(context))
{
...
    popComponentFromEL(context);
}
...
",MYFACES-3857
"The OSGI bundle currently has very restrictive exports. This causes issues in our environment (customized WAB, importing myfaces using require bundle). At least everything that might need serialization in the session should be made accessible. Also the CDI bean classes. It's probably easier to just export everything and maybe blacklist some stuff that you really want to hide.

On another note: the bundle current imports
javax.persistence;resolution:=optional;version=""[1.0.0,2.1)
JPA 2.1 has been out a while and shouldn't cause issues with the two used annotations.

Suggested patch (exporting everything) attached.",MYFACES-3856
"Hi,

I've been recently working on an extension (let's call it view stacking) which needs to perform (full) state saving and restoration outside the regular lifecycle. The current DefaultFaceletsStateManagementStrategy API doesn't allow this kind of thing (only restores from response state manager and explictly triggering a full save is tricky). This currently requires us to maintain quite some duplicated code.

I prepared a patch which refactors DefaultFaceletsStateManagementStrategy and extracts the full state saving logic into a utility class and exposed methods to dump/restore state.
",MYFACES-3855
"When the ""oam-compress-spaces"" option removes spaces in a CDATA section it can cause problems with the generated code.  For example, I sometimes do:
<script type=""text/javascript"">
//<![CDATA[
someJavascript();
//]]>
</script>
If there happens to be a space after //<![CDATA[, then it comes out:
<script type=""text/javascript"">
//<![CDATA[ someJavascript();
//]]></script>
so someJavascript() is not called by the browser.",MYFACES-3854
"Using ui:include inside a c:forEach cases a duplicate id error. This only happens if there is at least a second element to iterate.

The exception is the following: java.lang.IllegalStateException: Client-id : <clientId> is duplicated in the faces tree.

Below there's an example of a test case that replicates the problem.

Test Case

Myfaces22ForEach.java

@ManagedBean(name = ""myfaces22foreach"")
@SessionScoped
public class Myfaces22ForEach {

	private List<String> pageList;

	public List<String> getPageList() {
		if (pageList == null) {
			pageList = new ArrayList<String>();
			pageList.add(""page1.xhtml"");
			pageList.add(""page2.xhtml"");
		}
		return pageList;
	}
	public void setPageList(List<String> pageList) {
		this.pageList = pageList;
	}
}

myfaces22foreach.xhtml

<!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Transitional//EN"" ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"">
<html
	xmlns=""http://www.w3.org/1999/xhtml""
	xmlns:h=""http://java.sun.com/jsf/html""
	xmlns:c=""http://java.sun.com/jsp/jstl/core""
	xmlns:ui=""http://java.sun.com/jsf/facelets"">
	
	<h:head>
	    <title>Myfaces 2.2 | forEach Test</title>
	</h:head>
	<h:body>
		<h:form>
			<table>
				<c:forEach items=""#{myfaces22foreach.pageList}"" var=""page"">
					<tr>
						<td>
							<ui:include src=""#{page}"" />
						</td>
					</tr>
				</c:forEach>
			</table>
		</h:form>
	</h:body>
</html>

page1.xhtml

<!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Transitional//EN"" ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"">
<ui:composition
	xmlns=""http://www.w3.org/1999/xhtml""
	xmlns:h=""http://java.sun.com/jsf/html""
	xmlns:ui=""http://java.sun.com/jsf/facelets"">
	
	<h:outputText value=""Page1"" />
	
</ui:composition>

page2.xhtml

<!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Transitional//EN"" ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"">
<ui:composition
	xmlns=""http://www.w3.org/1999/xhtml""
	xmlns:h=""http://java.sun.com/jsf/html""
	xmlns:ui=""http://java.sun.com/jsf/facelets"">
	
	<h:outputText value=""Page2"" />
	
</ui:composition>",MYFACES-3853
"I migrated an app from myfaces 2.1.x to 2.2.0, the composite components will no longer render. On the generated page I get:
<meg:megamenu menubean=""ec.common.WetTopMenuBarBean@183817e"" id=""topMenuLevel0"" />

That should be expanded.

No errors or warnings are thrown.",MYFACES-3852
"tld -> web-fragment.xml

users who need to use servlet 2.5 + myfaces-core 2.2+ can still add the listener to the web.xml",MYFACES-3851
"In JSPX mode I have tried to render something like this:

Check EL Escaping #{requestScope.rquote} : ""

The result was this:

Check EL Escaping &quot; : &quot;

but it should be this:

Check EL Escaping &quot; : ""

JSPX mode says that inline text should not be escaped, but the presence of the EL expression forces the whole chunk to be escaped. In other modes, text escape is always enabled, so the only way you can see the problem is migrating views from old jsp to facelets. Really it is difficult to reproduce but anyway it could be good to check the code and try to fix it.",MYFACES-3850
"This issue is the next step in the work started in MYFACES-3376 ""Create abstract test classes that runs MyFaces Core as in a container"".",MYFACES-3849
"Using f:setPropertyActionListener inside a composite component with the value pointing to a function generates the following exception:

javax.el.ELException - Expression uses functions, but no FunctionMapper was provided.
at com.sun.el.lang.ExpressionBuilder.visit(ExpressionBuilder.java:208)

The following information can be used to reproduce the problem.

myfacesTest1.xhtml

<!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Transitional//EN"" ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"">
<ui:composition 
	xmlns=""http://www.w3.org/1999/xhtml""
	xmlns:f=""http://java.sun.com/jsf/core""
	xmlns:h=""http://java.sun.com/jsf/html""
	xmlns:ui=""http://java.sun.com/jsf/facelets""
	xmlns:fn=""http://java.sun.com/jsp/jstl/functions""
	xmlns:t=""http://java.sun.com/jsf/composite/test"">
	
	<t:area>
		<f:facet name=""body"">
			<h:commandButton>
				<f:setPropertyActionListener target=""#{myfacesTest1.property}"" value=""#{fn:substring('Hello World!', 6, 12)}"" />
			</h:commandButton>
		</f:facet>
	</t:area>
</ui:composition>

MyfacesTest1.java

import javax.faces.bean.ManagedBean;
import javax.faces.bean.SessionScoped;

@ManagedBean(name = ""myfacesTest1"")
@SessionScoped
public class MyfacesTest1 {

	private String property;

	public String getProperty() {
		return property;
	}
	public void setProperty(String property) {
		this.property = property;
	}

}

area.xhtml

<!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Transitional//EN"" ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"">
<html xmlns=""http://www.w3.org/1999/xhtml""   
      xmlns:composite=""http://java.sun.com/jsf/composite"">
 
	<composite:interface>
		<composite:facet name=""body"" required=""true"" />
	</composite:interface>
    
	<composite:implementation>
		<composite:renderFacet name=""body"" />
	</composite:implementation>
</html>",MYFACES-3848
"To prevent browser caching issues with static resources we appended a special query parameter to both css and js resource links:

<h:outputStylesheet name=""css/screen.css?#{startup.time}"" />
<h:outputScript name=""js/script.js?#{startup.time}"" />

This works for outputScript, but it does not work for outputStylesheet. Instead I get the log message

WARNING: Resource referenced by resourceName css/screen.css?1390483892421 not found in call to ResourceHandler.createResource. It will be silenty ignored.

The class HtmlScriptRenderer takes care of additional query params (line 217). However, this logic is missing in HtmlStylesheetRenderer.",MYFACES-3847
In MYFACES-3586 it was added a temporal resourcehandler cache to store files locally to speed up resource handling when no load balancer or proxy is available. But it seems we forgot to include this feature in the case of contracts for MyFaces 2.2.,MYFACES-3846
"I found an small bug running some examples for JSF 2.2 Faces Flow. When implicit flow definition is derived there is a call to facesConfig.getFacesFlowDefinitions().add(flow). That code worked well before, but in the cleanup the code was updated to return a not modifiable collection in getFacesFlowDefinitions().

The solution is just replace the line with:

facesConfig.addFacesFlowDefinition(flow);",MYFACES-3845
users who need to use servlet 2.5 + myfaces-core 2.2+ can still add the listener to the web.xml,MYFACES-3844
"Nightly builds / snapshots which are not formal releases should not be linked from the main download page.

Such builds have not been voted on and should only be used by developers who should be made aware that the code is without any guarantees,

Nightly builds are not formal ASF releases, and must not be promoted to the general public.

See [1] second para. The second sentence states:

""Do not include any links on the project website that might encourage non-developers to download and use nightly builds, snapshots, release candidates, or any other similar package.""

[1] http://www.apache.org/dev/release.html#what",MYFACES-3843
"Download links for hashes and sigs don't work.
They currently use the mirror system, however hashes and sigs must be downloaded from the ASF mirrors only - they are not propagated to external mirrors.",MYFACES-3842
"<h:inputTextArea> removes one leading newline. This bug has recently been fixed in Mojarra, but the same bug is also present in Apache MyFaces.

Please consider adding a similar bugfix to Apache MyFaces.

Reference: https://java.net/jira/browse/JAVASERVERFACES-2858",MYFACES-3841
"After I upgraded to 2.2.0-beta, every postback requests which requires @ViewScoped managed beans fails as they lose states after the initial request.

I couldn't spend sufficient time to investigate so not perfectly sure if it's not caused by some misconfiguration on my end.

Though, after a quick debugging, I found that in the DefaultFaceletsStateManagementStrategy class, state of an UIViewRoot instance is saved using its client ID in saveStateOnMapVisitTree:976, but it tries to restore it using its view ID in restoreView:301, thus failing to restore the state.

Is this behavior normal? If so, what possible configuration could cause it to use different IDs between saving and restoring state?",MYFACES-3840
"Reported here:

http://stackoverflow.com/questions/20709085/jsf-myfaces-2-2-failure

A link in this mode

<h:link outcome=""../../test"" />

does work with 2.1.13, but it doesn't with the latest snapshot of 2.2.x branch.",MYFACES-3839
"LegacyUserTagHandler does not implement ComponentContainerHandler interface. This causes a problem later because composite component does not recognize this tag as valid targets for cc:insertChildren, leaving the component as a direct children.",MYFACES-3838
"Checking some code I had the need to check in deep the component tree, so I added an ui:debug to the page. Then I realized that the fix done long time ago over MYFACES-3154 does not work well.

The problem cannot be seen easily, because it requires the addition of a query param in getActionUrl(...) . This happens when CODI is used, because a windowId is appended to the viewId. This script is surrounded by a CDATA section, so escape the & is not necessary. 

I did some tests using UTF-8 and ISO-8859-1 encoding and the fix work well for both cases.",MYFACES-3837
"For <f:ajax> with disabled=true inside of a <h:commandButton> with an onclick function, MyFaces renders return=false after an unnecessary jsf.util.chain() call in the rendered <input> onclick, effectively preventing form submission. Consider the following simple commandButton

	   <h:commandButton id=""button1"" value=""AjaxTest"" action=""index"" onclick=""alert('test')"">
	       <f:ajax disabled=""true""  />
	   </h:commandButton>	

This will render as follows:
    <input id=""form1:button1"" name=""form1:button1"" type=""submit"" value=""AjaxTest"" onclick=""jsf.util.chain(document.getElementById('form1:button1'), event,'alert(\'test\');'); return false;"">

Clicking the button will neither trigger an ajax request, which it shouldn't, nor trigger a form submit, which it should. 

Removing the <f:ajax> tag entirely renders the following functional submit button:
    <input id=""form1:button1"" name=""form1:button1"" type=""submit"" value=""AjaxTest"" onclick=""var cf = function(){alert('test')};var oamSF = function(){};return (cf.apply(this, [])==false)? false : oamSF.apply(this, []); "">",MYFACES-3836
"On certain conditions viewstate gets corrupted (truncated).

I've got a page with a richfaces fileupload component. The page works well on IE7 and Firefox (latest), but not in chrome. Digging into Javascript and Ajax response I got some extra info about the problem. I don't know why, but a partial response like:

<?xml version=""1.0"" encoding=""utf-8""?><partial-response><changes><update id=""javax.faces.ViewState""><![CDATA[....

results in two CDATA sections when handling the response. This is the problem caused by Google Chrome. Inspecting the JSF.JS library, the line that gets de updated view state is:

mfInternal.appliedViewState = node.firstChild.nodeValue;

This line is in 'processUpdate' method. When Chrome, for some reason splits the original CDATA block into two, that line only updates the first section, obtaining a truncated viewState and ViewExpiredException in next request.

The first CDATA section created by Google Chrome has 300 bytes. Weird, but searching Google for 'Chrome cdata 300' appears to be a libxml2 problem.",MYFACES-3835
"In the cleanup we renamed org.apache.myfaces.config.impl.digester.elements.FacesConfig into
FacesConfigImpl. That's ok, but the integration code in Tomee requires it, so we need to restore that class to avoid break it. Tested with tomee 1.6.0 ",MYFACES-3834
"Hi,

I just started to evaluate beta version of MyFaces 2.2.
In JSF 2.2 you are supposed to be able to add ajax calls directly to any HTML element. I tried with 2 different divs calling two different methods using ajax:
<div id=""clickCounter"" style=""width: 50px; height: 100px; background-color: blue;"">
 <f:ajax event=""click"" render=""@this""
   listener=""#{bean.metodoParam('ajax')}""/>
</div>
<div id=""clickCounter2"" style=""width: 50px; height: 100px; background-color: red;"">
 <f:ajax event=""click"" render=""@this""
   listener=""#{bean.metodoParam2('ajax2')}""/>
</div>

But clicking both divs the methodParam (the first one) is called. Seems to be dued cause of the onclick event is added directly to the form instead of each div.",MYFACES-3833
The OutcomeTargetUtils must consider the attribute when rendering the URL,MYFACES-3832
"Doing some tests over the code, I found a bug inside CacheELFaceletCacheImpl . In few words, when ""alwaysRecompile"" is activated, the compiled facelet is not stored properly, but only when it belongs to a template.

The bug was really hard to track down, because everything works well, so I didn't see any symptom. But later on, I checked some performance measurements over the code, finding some inconsistencies with previous measurements done long time ago.",MYFACES-3831
"Doing some tests over MyFaces Core, I found that if there is a declaration like this:

@ResourceDependency(name=""test1.js"")
@FacesComponent(createTag=true,
    namespace=""http://myfaces.apache.org/testComponent"", 
    tagName=""simpleComponentA"", value=""org.apache.myfaces.view.facelets.pool.UISimpleComponentA"")
public class UISimpleComponentA extends UIComponentBase

It throws NullPointerException in Application.createComponent. The reason is in FaceletsCompilerSupport there are some lines that help us to get the default rendererType to use it later, but when the @ResourceDependency is found, it is added to the current view root, which is just wrong.

The solution is use a FacesContext wrapper and set a dummy UIViewRoot when this initialization step is done.",MYFACES-3830
"The value ""alwaysRecompile"" introduced with MYFACES-3711 is logged as wrong value for the parameter org.apache.myfaces.CACHE_EL_EXPRESSIONS on startup.

This is, because it not configured as correct value in @JSFWebConfigParam.

This applies only for 2.1 and 2.2 as ""alwaysRecompile"" is not available in 2.0 as far as have seen.",MYFACES-3829
Checking some performance stuff I notice the full namespace of each component added by vdl.createComponent(...) is added into the state to be used later. One option to avoid that effect is calculate a list of all namespaces at startup and use that list to store only an associated identifier into the state.,MYFACES-3828
"We need to replace the .xsd files bundled in MyFaces taken from Tomcat long time ago with the ones from geronimo, which are preferred.",MYFACES-3827
In 2.2.x branch it could be useful to have a junit test case with MyFaces and CDI (OpenWebBeans). That will help to test things like @FlowScoped and other features in the future that rely on CDI more easily.,MYFACES-3826
"I have been trying for some time to find new ways to improve the code inside
MyFaces. Working in MYFACES-3811 (fix c:forEach) I have realized that the way
how VariableMapper works allows us to cache EL expressions in those places where
we have thought EL caching was not possible. 

This fact is important because it changes the way how we have been thinking around
view pooling technique (See MYFACES-3664 for details). If all 
ValueExpression/MethodExpression instances in a view can be considered ""static"" or
in other words it does not change each time the view is built or refreshed, we can
be sure that with a plain visitTree call it is possible to ""reset"" any view and
reuse it safely, even in cases like when ui:param is used or user facelet tags.
If all components in a view support pooling (hard/soft reset using saveState 
method), any view using those components can be poolable. 

First of all, let's remember how VariableMapper works. Basically it is just a map
with var names as keys and ValueExpression as values. When a EL expression is
created, the variables that are on the context VariableMapper and are used
to solve the expression are copied and stored into an inner VariableMapper of
the created EL expression. For example if we have this:

<c:set var=""item"" value=""Hello""/>
<c:set var=""item2"" value=""#{item}""/>
<c:set var=""item3"" value=""#{item2}""/>

the EL expression for item2 will have an inner VariableMapper with an EL
expression pointing to ""Hello"".

Now, we need to remember the problematic cases for EL caching:

1. Use combinations of c:set and c:if

    <c:if test=""#{condition}"">
        <c:set var=""item"" value=""Hello""/>
    <c:if>
    <h:outputText value=""#{item}""/>

This case is unlikely, but most of all, it can be refactored very easily to avoid
the c:if and move the condition to the c:set EL Expression. It is common to found
this technique in old JSP pages. But it is clear with JSF, this kind of logic
should reside in a managed bean. So at the end it is not a big deal. Anyway, 
There is a mode called ""strict"" that disable EL caching for the whole page if 
c:set is found.

2. Use of ui:param

    <ui:decorate template=""uiparamcache1_1.xhtml"">
    </ui:decorate>
    <ui:decorate template=""uiparamcache1_1.xhtml"">
        <ui:param name=""param1"" value=""ALFA""/>
    </ui:decorate>

The first time the template is called, it has no params, so all expressions are
cached inside the inner template. But once we call the same template again, those
cached expressions are now invalid and needs to be recalculated again. The hack
done with ""alwaysRecompile"" mode recompiles the facelet, but takes into account
the known parameters for the template. In this way, the EL expressions that are
affected by the param are not cached.

3. Use of facelet user tags

    <user:usertagtest1 var1=""ALFA"" id=""comp1"">
    </user:usertagtest1>
    <user:usertagtest1 var2=""BETA"" id=""comp2"">
    </user:usertagtest1>
    <user:usertagtest1 var1=""GAMMA"" var2=""OMEGA"" id=""comp3"">
    </user:usertagtest1>
    
This is quite the same to the case with ui:param, but in this case affect facelet tag 
attributes. 

4. An expression uses a variable resolved through VariableMapper

This is unlikely, because there are no standard tags using this strategy, but it is
possible to create a facelet tag that uses a VariableMapper wrapper. This is not 
something we should worry about.


In MYFACES-3811 (fix c:forEach), there is a part where a wrapper 
(IteratedValueExpression or MappedValueExpression) is required to hold 
the associated item and inject it into the VariableMapper. This is indeed a good idea,
because it shows that we can just put a wrapper inside VariableMapper and things will
keep working. 

If we can substitute the ValueExpression associated with a var with something else, we
can avoid the propagation effect that makes EL caching fail in 2 and 3. The trick is 
use an unique id associated with the facelet tag and put the real EL expression in
a central point like FaceletState object, which is stored in UIViewRoot. The resulting
structure can be generated over and over if PSS is enabled and if is disable, it needs
to be saved with the state. If the component tree changes dynamically, the generated
structure will change too.

The final effect will be that 100% of the EL Expressions managed by facelets using 
""alwaysRecompile"" mode will be cacheable, which will be a great improvement. It also
removes one of the biggest disadvantages we had for include view pooling technique
into MyFaces 2.2.x.


",MYFACES-3825
Doing some tests I found in FlowScopedContextImpl the check for isActive(...) when a @FlowScope bean is created does not consider if the documentId is not set and the flow has a documentId set. The effect is the bean is not instantiated because it is not possible to check if the associated flow is active or not.,MYFACES-3824
"Thinking about ways to improve MyFaces, I have realized we can use a table of preinitialized ids in UIViewRoot.createUniqueId(...). In that way, we can save some HashMap.get(...) calls and avoid instantiation of ids we can already know how they look like beforehand. A good number is preinitialize the first 50 ids for ResourceDependency components and other generated components.

I think it is worth to use Integer instead Long for the unique id generation too.",MYFACES-3823
"This issue includes:

- Remove unused classes
- Refactor and remove duplicate code
- Move utility code from impl to shared

This issue also includes remove unused params like:

org.apache.myfaces.PRETTY_HTML  
Reason : never worked well, modern browsers has support for debugging, makes rendering slow.

org.apache.myfaces.ALLOW_JAVASCRIPT
Reason: JSF 2  and upper versions require javascript. Now it is no longer optional, it is mandatory for JSF applications.

org.apache.myfaces.RENDER_FORM_SUBMIT_SCRIPT_INLINE
Reason: JSF 2  and upper versions require javascript. Now it is no longer optional, it is mandatory for JSF applications. Inline rendering is no longer required.

org.apache.myfaces.VIEWSTATE_JAVASCRIPT
Reason: Never worked.

org.apache.myfaces.HANDLE_STATE_CACHING_MECHANICS
Reason: Fix for MyFaces 1.2 state saving style in 2.0/2.1 . No need to support it anymore

org.apache.myfaces.SAVE_STATE_WITH_VISIT_TREE_ON_PSS
Reason: JSF 2.2 specify state saving should use visit tree call. No need to make it optional.

org.apache.myfaces.ERROR_HANDLER
Reason: deprecated by JSF 2.0 ExceptionHandler

",MYFACES-3822
"By historical reasons, UIData.setDataModel(...) throws UnsupportedOperationException. The reason is the implementation done in MyFaces does not requires it, but I have found some old code that uses it. To make MyFaces compatible with that code, the solution is just provide an implementation, even if it is not called from the default implementation.",MYFACES-3821
Under certain conditions where getSubmittedValue() is overriden a stackoverflow exception can be caused on debug mode because the code on setSubmittedValue() calls getSubmittedValue(). To prevent that there is no other choice than directly get the value from the state helper.,MYFACES-3820
"The implementation we have for h:outputScript and h:outputStylesheet uses some internals to keep the component tree stable and handle relocation correctly. But this means it is not possible to create a custom component doing the same as these ones.

But it could be good to provide a custom tag handler that just wrap h:outputScript and h:outputStylesheet and add some additional properties. The idea is detect the condition in ComponentTagHandlerDelegate and if is found add the custom code to detect the relocation and refresh the component tree properly.",MYFACES-3819
"HtmlCompositeComponentRenderer do its rendering at encodeEnd(...). This is ok, but I have found some code that do some kind of wrapping and in those cases it does not work well. To avoid problems, the code should be in encodeChildren(...)",MYFACES-3818
" Ajax redirect/navigation loosing state information when changes are executed with redirect.  This can be addressed 
#1 By putting a  flag in redirect and write it in response after save state in rendering phase.
#2 This behaviour true for redirect via navigation handler. In render phase it goes to response complete and state saving is avoided. When its a redirect not make the response complete true and flag it so that in rendering phase state is saved.",MYFACES-3817
"for an initial request there is no window-id added to the url.
(tested with 'url' for javax.faces.CLIENT_WINDOW_MODE)
-> in case of a page refresh a new window-id will be created and it isn't possible to get back the original one. that can also happen with a page-refresh after multiple requests, if only ajax requests are used.

that's a major issue for all scopes based on the window-id.

it can be done with an initial redirect (default in codi) or js (with html5 compliant browsers)",MYFACES-3816
"The initialization algorithm create all Renderer instances at startup time. The side effect is a lot of classes are loaded into permgen memory without need.

With a clever trick we can avoid that, providing a custom interfaces LazyRenderKit and making html basic renderkit implements it. Then, in the init code we check for that interface and if is present, we use it to register the Renderer in a lazy way, otherwise we use the standard form. Add the required method to RenderKit looks like a good idea for include it in the spec.",MYFACES-3815
"The code inside ServiceProviderFinder usually involves classpath scanning and read files from different locations. That code is ok, but it would be great if we can put that into FacesConfig as a configuration information.

The idea is just list all SPI interfaces we are using in MyFaces Core, and do the scanning of everything we need right at startup and finally store that information into FacesConfig, just like it was done for Facelet tag lib configuration.

If FacesConfig is serialized and deserialized, that scanning will not be necessary and the startup will be faster.",MYFACES-3814
"The classes at 

org.apache.myfaces.config.impl.digester.elements

has the same names as in

org.apache.myfaces.config.element

That becomes a real pain because most of the times you need both the interface and the implementation, and you end up writing the full package name all over the places. We need to fix that and use *Impl suffix for the classes that implement something.",MYFACES-3813
"In JSF 2.0, Facelets initialization code was just put in place to work right from facelets 1.1.x, but there was not included properly into MyFaces algorithm that loads configuration.

In this moment, half of the initialization of MyFaces Core is done at startup and the other half is done when FaceletViewDeclarationLanguage is created, which happens at the first request.

The code that parse facelets .taglib.xml is a simple sax parser that manipulates directly a TagLibrary. The problem with this is this config information once parsed cannot be serialized. Parse files is a slow process, so we need some classes like with org.apache.myfaces.config.element.FacesConfig, and provide implementation that can be serialized. The idea is just attach the information to FacesConfig using custom classes, and add a new source for FacesConfig information. In that way, it is possible to provide custom implementations of org.apache.myfaces.spi.FacesConfigurationProvider and override all MyFaces configuration in one step. The only exception is all web config params, but that's not a problem, because that information is managed and optimized for fast access by the web server.

This is something we need to do before 2.2.x release.",MYFACES-3812
"It is well known c:forEach tag is broken, and that it is advised to users to avoid this tag or at least ensure the collection that iterates this component to be static over the application lifetime. 

But users keep trying over and over to use this tag, perceiving this behavior as a bug. See:

- MYFACES-3570
- MYFACES-3389
- MYFACES-3329

A lot of important fixes has been done in MyFaces code, and with the introduction of 2.2.x, we can finally try to fix this problem once for all.

The challenge for this issue is we need to save the iteration data (only if the data is Serializable or StateHolder) into the component state and synchronize this with the generated ids, so if a new element is added or an existing one is removed, we keep the state and the id generation consistent. 

Now we have the environment set to do the job: an stable id generation algorithm, a well understood algorithm for PSS and we are in the process to get a release of 2.2 branch.",MYFACES-3811
"Some big improvements and fixes has been done over the time in MyFaces 2.0.x / 2.1.x . But on the way some changes were done over some tags like:

- c:set
- ui:param
- user custom tag handlers

And others. See this issues:

-  MYFACES-3169
-  MYFACES-2753
-  MYFACES-2293

The current changes are completely justified and there is no turning back. These changes are very important to allow techniques like EL expression caching to work correctly.

But it is also true that Mojarra still has the old behavior, and there are still web applications out there that relies on that behavior. Users trying to migrate from Mojarra to MyFaces usually found this problem. 

The proposal for this issue is create a web config param called org.apache.myfaces.STRICT_JSF_2_FACELETS_COMPATIBILITY by default false that when is enabled, the old way to do things is activated. Legacy versions of c:set, uiparam and user tag handler are activated. The aim is just provide a workaround for those cases and incentive users to change their application code to a more standard and stable form.",MYFACES-3810
"This namespace was used in the early stages of JSF 2.0 development, but later it was fixed to use the same syntax for jsp. But some applications still uses the old syntax and it is too hard to fix hundreds of files using this namespace, so in JSF 2.2 it was decided to add this namespace as an alternative synonym. I discover this one trying to run the compatibility test against the latest snapshot.",MYFACES-3809
"This namespace was used in the early stages of JSF 2.0 development, but later it was fixed to use the same syntax for jsp. But some applications still uses the old syntax and it is too hard to fix hundreds of files using this namespace, so in JSF 2.2 it was decided to add this namespace as an alternative synonym. I discover this one trying to run the compatibility test against the latest snapshot.",MYFACES-3807
"According to JSF 2.2 spec, view scope beans are destroyed when the session is destroyed, but it could be better if we destroy the beans when the associated view is discarded by server side state saving algorithm. We probably need to duplicate the view map key but it is ok to do so in this case, because a view scope bean can increate session size faster than the additional view map key.",MYFACES-3806
"it doesn't work as specified in paragraph 7.8.1.
once we change something here, we also have to handle it for MYFACES-3797.",MYFACES-3805
"The current code for server side state saving creates one key per request to store the view state. This is ok, but it is not necessary for ajax requests. 

The reason why is not necessary is because you can never go back to a page when using ajax. If you are on page A and the current request is an ajax request and it returns to the same page and the view is the same that the one that has been restored, the key or the token sent does not need to change, what changes is the internal state of the view. From the client side the page is the same. We can take advantage of this fact and just update the state stored in SerializedViewCollection for the view. 

The challenge here is detect when this strategy is applicable. For example, what happen if there is an ajax redirect? It looks is a good idea for implement in 2.2, because it avoids to store unnecessary information into session and optimize the use of each view slot. ",MYFACES-3804
"Pleace add success messages to javax.faces.application.FacesMessage, e.g.

public static final FacesMessage.Severity SEVERITY_SUCCESS = new Severity(""success"", 0);

thx

(99270)",MYFACES-3803
"https://svn.apache.org/repos/asf/myfaces/core/trunk/impl/src/main/java/org/apache/myfaces/flow/cdi/FlowBuilderFactoryBean.java

declares @javax.faces.bean.ApplicationScoped;

but I think that should be javax.enterprise.context.ApplicationScoped (=CDI ApplicationScoped)",MYFACES-3802
"In the renderkit javadoc of jsf 2.2 spec says this  (Rendering Pass Through Attributes):

""... The ResponseWriter must ensure that any pass through attributes are rendered on the outer-most markup element for the component. If there is a pass through attribute with the same name as a renderer specific attribute, the pass through attribute takes precedence. Pass through attributes are rendered as if they were passed to  ResponseWriter.writeURIAttribute(). ..."" Note here it says ""attributes are rendered as if they were passed"", instead say ""... attributes are encoded and rendered as if ..."". Black box testing against RI shows that there is no URI encoding at all in this part, so in this case the best is do the same here. After all, it is resposibility of the one who set the passthrough attribute to do the proper encoding in cases when a URI is provided. There are some simple use cases like the one provided here:

http://markmail.org/message/bpqolsarmnsakhl6

That shows that do any URI encoding here is not wanted.

However, that does not means the attribute should not be encoded as other attributes.",MYFACES-3801
Link to resource is IMHO less frequent then to an action. (I don't think there is frequent purpose for resource linking) ,MYFACES-3800
"Internet explorer doesn't implement textContent on XMLNode so errorName is evaluated to """".",MYFACES-3799
"the result of ViewHandlerImpl#getProtectedViewsUnmodifiable isn't spec. compliant.
addProtectedView and removeProtectedView don't recreate _unmodifiableProtectedViewsSet. at the end of both we need:
_unmodifiableProtectedViewsSet = Collections.unmodifiableSet(_protectedViewsSet);
or we always return Collections.unmodifiableSet(_protectedViewsSet); in ViewHandlerImpl#getProtectedViewsUnmodifiable",MYFACES-3798
"with
    <context-param>
        <param-name>org.apache.myfaces.CDI_MANAGED_CONVERTERS_ENABLED</param-name>
        <param-value>true</param-value>
    </context-param>
and
    <context-param>
        <param-name>org.apache.myfaces.CDI_MANAGED_VALIDATORS_ENABLED</param-name>
        <param-value>true</param-value>
    </context-param>
it should be possible to enable cdi support for converters/validators.
we need the config, because it was postponed for the spec.",MYFACES-3797
The partial updates for the 'style' attribute do not work as expected in IE 7/8. ,MYFACES-3796
"We have noticed that there is a memory leak in class org.apache.myfaces.renderkit.ErrorPageWriter,  map: visitedFacetCount.
This memory leak occurs when <ui:debug/> is used.

Description of problem:
Ui debug component tree page use visitedFacetCount as a temporary source of UI components in order to generate html page based on such components.
This generator use visitor : ExtendedComponentTreeVisitCallback class.
Inside method visit we have following lines :
972: _incrementVisitedFacetCount(parent); //put compnent into visitedFacetCount map
...
1131: _removeVisitedFacetCount(parent); // remove visited component from visitedFacetCount map.
Unfortunatelly visited component is removed from visitedFacetCount  map only if there are no children for component.
Thus it looks like components are never removed properly from visitedFacetCount.

Possible solution:
Parrent componet should be removed from visitedFacetCount  when it back from recursion.",MYFACES-3795
"we are running My faces 1.1.8 version on Websphere 6.1. now we are migrating the same application to Websphere 8.5 and observing that it is not compatible with Webpshere runtime as it by default supports my faces 2.x.

so do we need to upgrade our code to  my faces 2.x ? Plesae suggest. 
To highlight our applicaiton is developed on My faces 1.1.8, ICE Faces 1.8.2 and Struts 1.x",MYFACES-3794
"EarlyFlushHtmlResponseWriterImpl shouldn't be needed to implement MYFACES-3775 - see the spec-document and -javadoc wording for ResponseWriter#flush

furthermore, StateWriter gets used to wrap the current ResponseOutputWriter (ExternalContext#getResponseOutputWriter) without delegating #flush.
-> methods of HtmlResponseWriterImpl (like #forceFlush and #endDocument) which use _currentWriter.flush() call the empty #flush method of StateWriter.",MYFACES-3793
"Sometimes exception below occurs. It looks like map in ManagedBeanDestroyer is not a concurrence map and this could be an issue.
lifecycle provider: org.apache.myfaces.config.annotation.TomcatAnnotationLifecycleProvider

stack trace: 
testjavax.servlet.ServletException 
at javax.faces.webapp.FacesServlet.service(FacesServlet.java:229) 
at 
org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290) 
at 
org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)  
at 
org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235) 
at 
org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206) 
at 
org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235) 
at 
org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206) 
at 
org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve. 
java:233) 
at 
org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve. 
java:191) 
at 
org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:563) 
at 
org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:1 
27) 
at 
org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:1 
02) 
at 
org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.ja 
va:109) 
at 
org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:293 
) 
at 
org.apache.coyote.ajp.AjpAprProcessor.process(AjpAprProcessor.java:448) 
at 
org.apache.coyote.ajp.AjpAprProtocol$AjpConnectionHandler.process(AjpAprProtocol.java:399) 
at 
org.apache.tomcat.util.net.AprEndpoint$Worker.run(AprEndpoint.java:1675) 
at java.lang.Thread.run(Thread.java:662) 
Caused by: java.util.ConcurrentModificationException 
at java.util.HashMap$HashIterator.nextEntry(HashMap.java:793) 
at java.util.HashMap$KeyIterator.next(HashMap.java:828) 
at 
org.apache.myfaces.config.ManagedBeanDestroyer.processEvent(ManagedBeanDestroyer.java:100) 
at 
javax.faces.event.SystemEvent.processListener(SystemEvent.java:43) 
at 
org.apache.myfaces.application.ApplicationImpl._traverseListenerList(ApplicationImpl.java:2410) 
at 
org.apache.myfaces.application.ApplicationImpl.access$000(ApplicationImpl. 
java:119) 
at 
org.apache.myfaces.application.ApplicationImpl$SystemListenerEntry.publish(ApplicationImpl.java:2601) 
at 
org.apache.myfaces.application.ApplicationImpl.publishEvent(ApplicationImp 
l.java:592) 
at 
org.apache.myfaces.application.ApplicationImpl.publishEvent(ApplicationImp 
l.java:607) 
at 
javax.faces.component.UIViewRoot$ViewScope.clear(UIViewRoot.java:1596) 
at 
org.apache.myfaces.application.NavigationHandlerImpl.handleNavigation(NavigationHandlerImpl.java:133) 
at 
org.apache.myfaces.application.ActionListenerImpl.processAction(ActionListenerImpl.java:89) 
at javax.faces.component.UICommand.broadcast(UICommand.java:120) 
at 
javax.faces.component.UIViewRoot._broadcastAll(UIViewRoot.java:1028) 
at 
javax.faces.component.UIViewRoot.broadcastEvents(UIViewRoot.java:286) 
at javax.faces.component.UIViewRoot._process(UIViewRoot.java:1375) 
at 
javax.faces.component.UIViewRoot.processApplication(UIViewRoot.java:752) 
at 
org.apache.myfaces.lifecycle.InvokeApplicationExecutor.execute(InvokeApplicationExecutor.java:38) 
at 
org.apache.myfaces.lifecycle.LifecycleImpl.executePhase(LifecycleImpl.java 
:170) 
at 
org.apache.myfaces.lifecycle.LifecycleImpl.execute(LifecycleImpl.java:117) 
at javax.faces.webapp.FacesServlet.service(FacesServlet.java:197) 
... 19 more",MYFACES-3792
"
Current  implementation of UISelectOne.validateValue creates (when component.requred = true) two instances of _SelectItemsIterator, iterates  2x  and evaluates ValueExpression for SelectItem(s) 2x.

We can create one instance of SelectItemsIterator and store the noSelectionOption direct in the _SelectItemsIterator instance and reuse in noSelectionOption-block.

Similar issue MYFACES-3710.",MYFACES-3791
"During the configuring of a new project I found these two params in JSF spec 2.2:

1)
javax.faces.validator.DISABLE_DEFAULT_BEAN_VALIDATOR

If this param is set, and calling toLowerCase().equals(""true"") on a String representation of its value returns true, the runtime must not automatically add the validator with validator-id equal to the value of the symbolic constant javax.faces.validator.VALIDATOR_ID to the list of default validators. Setting this parameter to true will have the effect of disabling the automatic installation of Bean Validation to every input component in every view in the application, though manual installation is still possible.

2) 
javax.faces.validator.DISABLE_BEAN_VALIDATOR

In environments that include Bean Validation, the following additional actions must be taken at startup time. If the javax.faces.validator.DISABLE_BEAN_VALIDATOR <context-param> exists and its value is true, the following step must be skipped:
The runtime must guarantee that the validator id javax.faces.Bean is included in the result from a call to
Application.getDefaultValidatorInfo() (see Section 7.1.12.1 “Default Validator Ids”), regardless of any
configuration found in the application configuration resources or via the @FacesValidator annotation.


I don't see a difference really. I guess, this is a error in the spec.

But I didn't found the DISABLE_BEAN_VALIDATOR in Myfaces source code - should we implement it nevertheless ?



",MYFACES-3790
"A typical developer works as follows
1) edits a facelets view  (template, composite component)
2) CTRL +S
3) refresh in browser (or LiveReload)

but: from 2) to  3) takes it sometimes less as 2 secs and the programmer must repeat the 3)

We can override this behaviour with context-param:
javax.faces.FACELETS_REFRESH_PERIOD=0

but then is for development neccesary:
javax.faces.PROJECT_STAGE=Development
javax.faces.FACELETS_REFRESH_PERIOD=0

and for Production:
javax.faces.PROJECT_STAGE=Production
javax.faces.FACELETS_REFRESH_PERIOD=-1

that means a configuration of 2 params instead of one (ProjectStage) (the problem is:  javax.faces.FACELETS_REFRESH_PERIOD when not default always wins  and PROJECT_STAGE=Production doesn't set FACELETS_REFRESH_PERIOD to -1)

with default refresh period = 0 makes the method FaceletCacheFactoryImpl.getFaceletCache() the job and only javax.faces.PROJECT_STAGE=Production is necessary.

Does anybody know why is the default 2 seconds ?",MYFACES-3789
"for example:

<h:outputLabel value=""aLabel"" for=""nonExistentId"" styleClass=""rowTitle"" />

displays:

""Unable to find component 'nonExistentId' (calling findComponent on component 'j_id_61:j_id_6h:j_id_6t').""

1) show component location in development stage
2) take into consideration project stage for log-level
",MYFACES-3788
"As discussed [1], now with 2.2 release is the time to switch the default behaviour. Myfaces render all scripts
with <!--

//-->

and that is in 2013 a little not topical.


[1] http://www.mail-archive.com/dev@myfaces.apache.org/msg56743.html",MYFACES-3787
" This issue is all about how to inject beans into jsf artifacts.

See JSF 2.2 section 5.4.1

The problem here is in some point we need to give the control to the underlying environment to inject beans into the artifacts, but we don't know much about how to properly do it, so we need to try with examples.

",MYFACES-3786
"This issue was included in the spec as:

https://java.net/jira/browse/JAVASERVERFACES_SPEC_PUBLIC-1109

But it is more difficult than just implement one wrapper class. The reason is @ListenerFor and @ResourceDependency annotations could be used in the base class and in the wrapper. 

In this part we need to update MyFaces implementation to check for RendererWrapper in the places where we need to scan for annotations. 

I can remember some problems with renderer wrappers in extval and other libraries, and the inclusion of RendererWrapper aims to solve all these troubles, saying ""all wrappers now must implement RendererWrapper class, and you can walkthrough the hierarchy of objects using getWrapped() method"".





",MYFACES-3785
"See http://java.net/jira/browse/JAVASERVERFACES_SPEC_PUBLIC-1164
If running in a container that supports EL 3.0, add the necessary ELResolvers. See Section 5.6.2.8 “Stream,
StaticField, Map, List, Array, and Bean ELResolvers”.

",MYFACES-3784
"Per spec it was decided long time ago to use tree visiting when state saving is performed. The fix suppose deprecate org.apache.myfaces.SAVE_STATE_WITH_VISIT_TREE_ON_PSS param and remove the unused code in DefaultFaceletsStateManagementStrategy . I tried to use visitTree when the component is restored, but it doesn't work because the visitTree relies on the tree integrity. ComponentModificationManager stuff was not included in JSF 2.2, so the best here is keep the code as is, using invokeOnComponent to perform addition and removals.",MYFACES-3783
"All description, in a nice format, is here:
http://stackoverflow.com/questions/18992241/random-jsf-error-no-saved-view-state-could-be-found",MYFACES-3782
"From stackoverflow.com:

http://stackoverflow.com/questions/18495673/validation-conversion-errors-of-fviewparam-do-not-localize-to-fview-locale

In few words, if a:

<f:view locale=""#{... ...}"">

is used and there is a converter attached to a f:viewParam, the locale is not set before the converter is used. In theory, f:view must be taken into account when the facelet view metadata is created, but the content of f:view tag should not be added by performance considerations.

I think the issue is valid, and it has relevance under JSF 2.2 spec, so it should be fixed for 2.0.x, 2.1.x and 2.2.x",MYFACES-3781
"Checking some stuff I have found that there is an old check for null in ComponentAttributesMap.put(...)

This check doesn't have sense, because null values are valid for hashmap, and in that sense the check is useless.

The fix is very simple, just remove the unnecessary check. I just comment the related code, to prevent other people to try to add it in the future.

The fix will be done on 2.0.x, 2.1.x and 2.2.x branches",MYFACES-3780
"How about having a mixed mode for state saving whereby state is initially kept on server for a configurable amount of time (so that fast frequent requests are served without transferring the state from client to server several times, the drawback with client side saving) & after that period of time if the page is still alive in browser but it is idle, a javascript request is triggered which asks the server for that state data & now it will be kept on client side, now the client & the server both know that state for this session is there on client. If the page has died & no request has been sent to server asking for state data till that period of time, then state data would be removed from server.

A further enhancement could be that you could set a fixed amount out of all memory on server that you want to allocate for state saving of all sessions. Till the time that quota remains, state is kept on server using that quota. But when that quota is over all the state information for further sessions is kept using client side state saving. Also a mixed mode.

Such mixed modes would be very helpful in improving performance, & better utilization of the server resources.",MYFACES-3779
"Checking performance of the latest 2.2.x code, I have found that both url and request path for default Resource instances are calculated over and over, but they never change. The reason is you cannot add resources to the path dynamically, which means all resources are static and does not change over application lifetime, so it is safe to store these two values in the cache and reuse them. 

The only side effect detected is if two mappings (prefix and suffix) are used on the same application, the request path for a resource will not be according to the current mapping, but that's ok because one or the other should just the same.

This will improve performance a bit. The reason is before this patch, each Resource instace requires calculate the url and the request path. This is relevant for composite components, because each composite component requires create 1 Resource instance each time it is instantiated.",MYFACES-3778
"With the introduction of the new JSF 2.2 spec, there are new points where we need FacesContext instance. The idea is just minimize those calls.

When a view is refreshed, many FacesContext.getCurrentInstance() calls are required because setParent() is called. I have found a way to avoid that and improve performance a bit in that part.",MYFACES-3777
Just use the same hack done in UIComponentBase to avoid calls to FacesContext.getCurrentInstance(),MYFACES-3776
"in project-stage production it should be possible to enable an early flush via context-param (performed at the end of HtmlHeadRenderer#encodeEnd)

(see http://developer.yahoo.com/performance/rules.html#flush)",MYFACES-3775
"Checking some stuff I realized in ComponentTagHandlerDelegate.apply(...), the following instructions are done when the view requires refresh in render response phase:

                 String facetName = this.getFacetName(ctx, parent);

....

                c = ComponentSupport.findChildByTagId(parent, id);

....

                if (facetName == null)
                {
                    parent.getChildren().remove(c);
                }
                else
                {
                    ComponentSupport.removeFacet(ctx, parent, c, facetName);
                }

....


        if (facetName == null)
        {
            parent.getChildren().add(c);
        }
        else
        {
            ComponentSupport.addFacet(ctx, parent, c, facetName);
        }

The thing is if facetName == null the component will always be as a children. If facetName != null, the component will always be in the facet associated to that name. But the code in findChildByTagId(...) always look on the children first and then in all facets using an iterator, which is just overkill. 

It is better if we split findChildByTagId(...) into two variants (findChildInFacetByTagId and findChildInChildrenByTagId) and use the facetName as the condition and to get the right one if the component is in the facet. That will save 1 iterator instance per facet and a lot of unnecessary component.getAttributes().get(...) calls. But from the other side, myfaces algorithm is smart enough to avoid view refreshing at all, so the improvement will only be seen in some selected situations. Anyway, it is worth to do it for 2.2.x branch.",MYFACES-3774
"Looking for minor issues in JSF spec I found this one:

https://java.net/jira/browse/JAVASERVERFACES_SPEC_PUBLIC-1058
VDL Docs Need Correction/Clarification For ui:repeat size Attribute

""... Currently, the VDL docs say this for ui:repeat ""size"" attribute:

""Read-write property setting the size of the collection to iterate. If this value is less than the actual size of the collection, a FacesException must be thrown.""

However, the purpose of the size attribute is to specify the number of elements or items to iterate over in the overall collection. So, for example:

    overall collection size = 10
    u:repeat size=""5""
    should iterate over the first 5 items of the collection.

...""

This issue was fixed in Mojarra as:

https://java.net/jira/browse/JAVASERVERFACES-2425

but we have been struggling on this for a long time too. See:

https://issues.apache.org/jira/browse/MYFACES-3183
https://issues.apache.org/jira/browse/MYFACES-3034

The current behavior for 2.0.x and 2.1.x is the same as Mojarra before fix JAVASERVERFACES-2425, but in practice we need to fix this one for all branches. The current behavior is clearly inconsistent and if it was fixed in Mojarra, in this case we should do the same too.",MYFACES-3773
"I am using myfaces in our project. We use some session scoped beans. Let me explain the error reproduction steps with two Tomcat6 nodes and Apache httpd load balancer (without sticky session). web.xml has <distributable/> element. Other session variables are synchronizing well.

1. Start node 1
2. Set some value in the property of a session bean
3. Value is available for get on node 1
4. Start node 2 same value is available on node 2
5. Set new value on the property of node 1
6. New value is available on node 1
7. Node 2 still contains the old value
8. Restart node 2
9. Node 2 now contains new value
10. Set new value on node 2
11. New value available on node 2 but not on node 1
12. Restart node 2
13. Node 2 has the old value taken from Node 1

No exception is raised during the process. Session bean implements Serializable interface.",MYFACES-3772
"The renderkit javadoc of javax.faces.Command / javax.faces.Button has this new line:

""... Because this renderer is responsible for rendering its own children, the renderer will decide if the end tag is required or not based on the presence or absence of children for the component. ...""

All encoding right now is done in encodeEnd, but to make this work correctly we need to put some code in encodeBegin and close the tag in encodeEnd.",MYFACES-3771
"Implement <f:resetValues> tag and <f:ajax resetValues=true ... >

See http://java.net/jira/browse/JAVASERVERFACES_SPEC_PUBLIC-1129

The js part is already in place, we just need the server side part.",MYFACES-3770
"You are able to access properties of a parent composite component while in a child composite component using the el syntax #{cc.parent.attrs.propName} but method invoking does not work.  e.g. action=""#{cc.parent.attrs.saveAction}"".  It can make sense to specify a method in the parent cc that child cc's would like to invoke.  I think this is a relatively easy change to the regular expressions in the CompositeComponentELUtils class to support one or more "".parent"" within method expressions.",MYFACES-3769
"The ordinal values for the Severity levels in Mojarra use values starting from 0 while MyFaces uses values starting from 1. This results in inconsistent behavior between implementations. I suggest aligning the values starting with 0 since this is consistent with general programming expectations.

Mojarra
 
INFO(0), WARN(1), ERROR(2), and FATAL(3)

MyFaces

INFO(1), WARN(2), ERROR(3), and FATAL(4)
",MYFACES-3768
"I got two inputText, one outputText and 1 ajax button inside a ui:fragment that initially has value of false for his rendered attribute. The second inputText and the outputText got the same value.

The button (copy button) simply copies the value from the first inputText to the second one and the outputText.
Outside the fragment there's another button (show button) tha changes the value of the rendered atribute from false to true. This button execs an actionListener with immediate=true. 

The point is that, once the fields are visible, the text in the first inputText is not copied to the second one but in the outputText by clickind the copy button. 
If you change the immendiate value of the show button to false, it works fine (both input and output are updated at once). Also, if you show the fields using ajax tag with immediate=true it works as expected.
",MYFACES-3767
Adding SelectItem objects to a Set (instead of a List) does NOT remove duplicate items.,MYFACES-3766
"This is related to:

[jsr344-experts] [730-Flows] transitions using OutcomeTarget rendered components
https://java.net/projects/javaserverfaces-spec-public/lists/users/archive/2013-02/message/74

This issue requires careful analysis, because it could be some corner cases for JSF 2.3
",MYFACES-3765
"I remember this was discussed on:

[jsr344-experts] [730-Flows] Return node handling
https://java.net/projects/javaserverfaces-spec-public/lists/jsr344-experts/archive/2013-02/message/69

Now that we have a clean faces flow algorithm, it is time to add this part. ",MYFACES-3764
"There is an small bug in the algorithm that resolve navigation cases. For a rule like this:

  <navigation-rule>
    <from-view-id>/a.jsp</from-view-id>
    <navigation-case>
        <from-action>go</from-action>
        <if>#{test.true}</if>
        <to-view-id>/b.jsp</to-view-id>
    </navigation-case>
  </navigation-rule>

If the condition under the if is true it does not enforce the from-action, leading to a wrong match under some conditions. ",MYFACES-3763
"Checking some code I realized there is a bug related with HtmlRenderKitImpl.getComponentFamilies(). It seems at some point the code in HtmlRenderKitImpl was changed, but it was forgotten to update this method. The fix is very simple, just use the key set of  _renderers map instead.",MYFACES-3762
JSF 2.2 facelets engine consider all pages as html5. ResponseWriter.writeDoctype(...) was added and we should honor that.,MYFACES-3761
"There is an small bug in FacesConfigurator related to how ClientBehaviorRendered is added. It does not have any side effect, but from performance perspective it should be fixed",MYFACES-3760
"Even if the logic related was moved to ResourceHandler.createViewResource(...), @FaceletsResourceResolver was added, so we need to add the necessary code.",MYFACES-3759
"The javadoc of UIViewRoot says this:

""... Take the following action regarding PhaseListeners.

... Initialize a state flag to false. ....

... Upon return from the listener, call FacesContext.getResponseComplete() and FacesContext.getRenderResponse(). If either return true set the internal state flag to true. ...""

Here we have a small misunderstanding. The algorithm always check for responseComplete or renderResponse even if there is no phase listener set or there is no change on the state flag.

This issue has minor priority, because it does not have any effect in normal situations, but it can be seen in some special tests.

This affects 2.1 and 2.0 branches, but since it does not change anything it will be fixed only in 2.2.

",MYFACES-3758
"Implement passing of passthrough attribute with this notation for facelets:

<h:panelGrid p:attr1=""value1""/>

This part is tricky, because passthrough attributes are different from normal attributes. The trick is make the diference in MetaRuleset implementation. In this way passthrough attributes are not handled as normal attributes. The idea is use the same api as for normal attributes but mark the rules that deals with passthrough attributes with an interface called PassthroughRule. Then we add the special rule in ComponentTagHandlerDelegate and that's it.",MYFACES-3757
"@FacesComponent and @FacesValidator ""value"" attribute javadoc changed. Now if no value is set, a default one can be derived from the class name.",MYFACES-3756
,MYFACES-3755
"There are some special points in PartialViewContext and PartialResponseWriter that needs to be prefixed.

For example, use writePreamble(...) , some lines to deal with ClientWindow and fix ViewState for portlet case.",MYFACES-3754
"CompositeComponentELResolver map containsKey() should take into account default values, as described in JSF 2.2 spec section 5.6.2.2 Table 5-11 for containsKey()",MYFACES-3753
"If you set Flash.setKeepMessages(true) in an action of an immediate-true-button, the messages do not survive the Request-Redirect-Post cycle. If the button is set to immediate=""false"", setKeepMessages works as advertised.

I will attach a simple test case that shows this problem.",MYFACES-3752
"I was looking for a bug in our scripts happening on submit of the form. 

Unfortunately the JSF-Javascript submitting the form (myfaces.oam.submitForm()) is swallowing exceptions that occur while submitting.

try {
    form.submit();
}
catch(e) {
}

Maybe one could do some kind of logging there to help debugging.

try {
    form.submit();
}
catch(e) {
    console.error(e); //?
}",MYFACES-3751
Allow to reference composite components directly from facelets taglib file using <resource-id> ,MYFACES-3750
"Sample JSF page:

<h:outputStylesheet library=""css"" name=""table-style.css""  />
<h:dataTable value=""#{dataTableBean.sampleList}"" var=""o""
styleClass=""order-table""
headerClass=""order-table-header""
rowClasses=""order-table-odd-row,order-table-even-row""
columnClasses=""col0,col1,col2,col3""
>
<f:param id=""testParam"" value=""TESTER"" />
            
<h:column>
<f:facet name=""header"">Column1</f:facet>
#{o.str1}
</h:column>
    
<h:column>
<f:facet name=""header"">Column2</f:facet>
#{o.str2}
</h:column>
    
<h:column>
<f:facet name=""header"">Column3</f:facet>
#{o.str3}
</h:column>
    
<h:column>
<f:facet name=""header"">Column4</f:facet>
#{o.str4}
</h:column>
</h:dataTable>  

Sample CSS:
.order-table{   
border-collapse:collapse;
}

.order-table-header{
text-align:center;
}

.order-table-odd-row{
text-align:center;
}

.order-table-even-row{
text-align:center;
}

.col0{
text-align:center;
}

.col1{
text-align:center;
}

.col2{
text-align:center;
}

.col3{
text-align:center;
}

Problem description:

The rendered output of one of the rows of the above page is the following:

<tr class=""order-table-odd-row""><td class=""col1"">
test1
</td><td class=""col2"">
test2
</td><td class=""col3"">
test3
</td><td class="""">
test4
</td></tr>

As you can see the last column has no definition of a columnClass ( class="""" ).   The same page works if we remove the <f:param/> definition from within the 
<h:dataTable/>.  If the f:param tag is removed then I see that all of the columns have a defined class as expected ( the number of columns is less than or equal to the 
defined columnClasses so each of the columns should have a class defined. 



",MYFACES-3749
"The check for required attributes at Composite Components in CompositeComponentResourceTagHandler does not parses literal booleans right. It uses Boolean.getBoolen(systemProperty) which looks up a System property with the given name. Boolean.valueOf(string) should be used instead:

CompositeComponentResourceTagHandler.createComponent(FaceletContext)

    Object value = ve.getValue(facesContext.getELContext());
    Boolean required = null;
    if (value instanceof Boolean)
    {
        required = (Boolean) value;
    }
    else if (value != null)
    {
        required = Boolean.valueOf(value.toString());
    } 
    
    if (required != null && required.booleanValue())
    {
        Object attrValue = this.tag.getAttributes().get (propertyDescriptor.getName());
        
        if (attrValue == null)
        {
            throw new TagException(this.tag, ""Attribute '"" + propertyDescriptor.getName()
                                             + ""' is required"");
        }
    }",MYFACES-3748
"JSF 2.2 spec includes some changes related to view scope behavior:

- There is a new CDI annotation javax.faces.view.ViewScoped 
- In UIViewRoot.getViewMap() javadoc it says: ""... For reasons made clear in ViewScoped, this map must ultimately be stored in the session. For this reason, a true value for the create argument will force the session to be created with a call to ExternalContext.getSession(boolean). ""
- Both @ViewScoped annotations javadoc include this: ""... The runtime must ensure that any methods on the bean annotated with PostConstruct or PreDestroy are called when the scope begins and ends, respectively. Two circumstances can cause the scope to end. ...""
- ""... In the session expiration case, the runtime must ensure that FacesContext.getCurrentInstance() returns a valid instance if it is called during the processing of the @PreDestroy annotated method. The set of methods on FacesContext that are valid to call in this circumstance is identical to those documented as ""valid to call this method during application startup or shutdown"". On the ExternalContext returned from that FacesContext, all of the methods documented as ""valid to call this method during application startup or shutdown"" are valid to call. In addition, the method ExternalContext.getSessionMap() is also valid to call. ...""

",MYFACES-3747
"In UIInput.shouldInterpretEmptyStringSubmittedValuesAsNull() the resolved value of 'javax.faces.INTERPRET_EMPTY_STRING_SUBMITTED_VALUES_AS_NULL' is cached in the application map. It might be worth doing the same for 'javax.faces.VALIDATE_EMPTY_FIELDS' in UIInput.shouldValidateEmptyFields():

private boolean shouldValidateEmptyFields(FacesContext context)
{
    ExternalContext ec = context.getExternalContext();
    Boolean validateEmptyFields = (Boolean) ec.getApplicationMap()
                                                                     .get(VALIDATE_EMPTY_FIELDS_PARAM_NAME);
   
    if (validateEmptyFields == null)
    {
         String param = ec.getInitParameter(VALIDATE_EMPTY_FIELDS_PARAM_NAME);
         
         // null means the same as auto.
         if (param == null)
         {
             param = ""auto"";
         }
         else
         {
             // The environment variables are case insensitive.
             param = param.toLowerCase();
         }
         
         if (param.equals(""auto"") && _ExternalSpecifications.isBeanValidationAvailable())
         {
             validateEmptyFields = true;
         }
         else if (param.equals(""true""))
         {
             validateEmptyFields = true;
         } else {
             validateEmptyFields = false;
         }
         
         // cache the parsed value
         ec.getApplicationMap().put(VALIDATE_EMPTY_FIELDS_PARAM_NAME, validateEmptyFields);
    }

    return validateEmptyFields;
}",MYFACES-3746
"In MYFACES-3246 the following constructor was updated:

DefaultFaceletContext(FacesContext faces, AbstractFacelet facelet, FaceletCompositionContext mctx)

It no longer does the following:

       //Set FACELET_CONTEXT_KEY on FacesContext attribute map, to 
       //reflect the current facelet context instance
       faces.getAttributes().put(FaceletContext.FACELET_CONTEXT_KEY, this);

Setting the FACELET_CONTEXT_KEY is now done where ever the DefaultFaceletContext is created for instance in DefaultFacelet.

DefaultFaceletContext ctxWrapper = new DefaultFaceletContext((DefaultFaceletContext)ctx, this, false);
ctx.getFacesContext().getAttributes().put(FaceletContext.FACELET_CONTEXT_KEY, ctxWrapper);

However, the other constructor which is actually being called above still sets the FACELET_CONTEXT_KEY and so it is set in the constructor and then set again directly after creation.

 //Update FACELET_CONTEXT_KEY on FacesContext attribute map, to
//reflect the current facelet context instance
ctx.getFacesContext().getAttributes().put(FaceletContext.FACELET_CONTEXT_KEY, this);

I think this was just an oversight when fixing this bug.  But I think we should clean this up and I'll provide the trivial patch that can be applied.

",MYFACES-3745
"If AJAX response contains \u000B-character (i.e., as value of outputText), then 'not well formed xml'-error is displayed in js-console. Request is not processed properly.

Works with Mojarra 2.1.24",MYFACES-3744
"See:

https://java.net/jira/browse/JAVASERVERFACES_SPEC_PUBLIC-698

<redirect><view-param> still works so the only change we need to do is add the proper rules into the parser.",MYFACES-3743
"Implement @FlowDefinition cdi annotation, as described in the spec.

I have found this annotation very tricky to implement. It is simple to do it using @Produces annotation, but the real trouble is we can't use CDI annotations inside myfaces implementation by the following reasons:

- jar files without beans.xml will not be scanned. If we add the file inside myfaces jar, CDI will try to scan all classes inside the jar file, and some of them require optional dependencies. The final effect is CDI will start to throw errors.

- In some cases, myfaces jars are not on WEB-INF/lib folder, and are just part of the default libraries of the server, so there is no reference to the files.

The only option is use javax.enterprise.inject.spi.Producer, but Producer.getInjectionPoints() returns a Set<InjectionPoint> which usually are customized for the CDI implementation. So, we need to provide an implementation, but before that, we need to check how that part works to do not break CDI implementations.",MYFACES-3742
"Implement CDI Flow Scope and add the necessary integration points into the implementation.
",MYFACES-3741
"Doing some reviews in the code, I found these lines in JSF 2.2 section 5.6.2.5 :

getValue()

""... If property contains a single colon character ‘:’, treat the content before the ‘:’ as the libraryName and the content after the ‘:’ as the resourceName and pass both to ResourceHandler.createResource(
resourceName, libraryName). If the value of libraryName is the literal string “this” (without the quotes), discover the library name of the current resource (or the contract name of the current resource, the two
are mutually exclusive) and replace “this” with that library name (or contract name) before calling
ResourceHandler.createResource(). In the case of resource library contracts, libraryName will actually be the contract name. If property contains more than one colon character ‘:’, throw a localized
ELException, including property ...""

In JSF 2.0, ""this"" was used when el expression where inside composite components, but in this case ""this"" refers to the contract itself.",MYFACES-3740
"The issue was initially reported against RichFaces: https://issues.jboss.org/browse/RF-13025
But it does not look like it is anything wrong with RichFaces here.
The issue is reproducible with pure myfaces when partial state saving is turned OFF e.g. with the following code (every second click on ""Toggle"" button causes new UIOutput element to be inserted to the view tree):

{code}
  <h:form>
    <h:commandButton value=""Toggle"" action=""#{bean.togglePanelShown}"">
      <f:ajax execute=""@this"" render=""group""/>
    </h:commandButton>
    <h:panelGroup id=""group"">
      <c:if test=""#{bean.panelShown}"">
        <!-- Any component with @ResourceDependency annotation. -->
        <custom:componentWithResourceDependency/>
      </c:if>
    </h:panelGroup>
  </h:form>
{code}",MYFACES-3739
"See http://java.net/jira/browse/JAVASERVERFACES_SPEC_PUBLIC-550

Just add the attribute to the renderer class, because there is no instance (uses UIOutput)",MYFACES-3738
_Html classes are used by the builder plugin and not required to be there in api.jar to have it lighter.,MYFACES-3737
"From time to time I encountered the following error:

ERROR http-apr-80-exec-2 ResourceHandlerImpl:425: Error trying to load resource jsf.js with library javax.faces :null

That is all I have. I can't tell what the exact request details or what is the IOException.

Can you please also make it possible to log the IOException stacktrace?

Thanks.",MYFACES-3736
"In our application (MyFaces 2.1.10, RichFaces 4.2.2), the following exception is sometimes (rarely) thrown when logging in. If that happens, it completely breaks the app, all subsequent login attempts fail with the same exception.

{code}
java.lang.NullPointerException
	at org.apache.myfaces.view.facelets.tag.composite.CompositeMetadataTargetImpl.<init>(CompositeMetadataTargetImpl.java:58)
	at org.apache.myfaces.view.facelets.tag.composite.CompositeMetaRulesetImpl.<init>(CompositeMetaRulesetImpl.java:103)
	at org.apache.myfaces.view.facelets.tag.composite.CompositeComponentResourceTagHandler.createMetaRuleset(CompositeComponentResourceTagHandler.java:410)
	at org.apache.myfaces.view.facelets.tag.composite.CompositeComponentResourceTagHandler.setAttributes(CompositeComponentResourceTagHandler.java:401)
	at org.richfaces.view.facelets.html.BehaviorsAddingComponentHandlerWrapper.setAttributes(BehaviorsAddingComponentHandlerWrapper.java:113)
	at org.apache.myfaces.view.facelets.tag.jsf.ComponentTagHandlerDelegate.apply(ComponentTagHandlerDelegate.java:237)
	at javax.faces.view.facelets.DelegatingMetaTagHandler.apply(DelegatingMetaTagHandler.java:53)
	at javax.faces.view.facelets.CompositeFaceletHandler.apply(CompositeFaceletHandler.java:49)
	at javax.faces.view.facelets.DelegatingMetaTagHandler.applyNextHandler(DelegatingMetaTagHandler.java:58)
	at org.richfaces.view.facelets.html.BehaviorsAddingComponentHandlerWrapper.applyNextHandler(BehaviorsAddingComponentHandlerWrapper.java:53)
	at org.apache.myfaces.view.facelets.tag.jsf.ComponentTagHandlerDelegate.apply(ComponentTagHandlerDelegate.java:294)
	at javax.faces.view.facelets.DelegatingMetaTagHandler.apply(DelegatingMetaTagHandler.java:53)
	at javax.faces.view.facelets.CompositeFaceletHandler.apply(CompositeFaceletHandler.java:49)
	at org.apache.myfaces.view.facelets.tag.ui.CompositionHandler.apply(CompositionHandler.java:158)
	at org.apache.myfaces.view.facelets.compiler.NamespaceHandler.apply(NamespaceHandler.java:57)
	at org.apache.myfaces.view.facelets.compiler.EncodingHandler.apply(EncodingHandler.java:48)
	at org.apache.myfaces.view.facelets.impl.DefaultFacelet.include(DefaultFacelet.java:394)
	at org.apache.myfaces.view.facelets.impl.DefaultFacelet.include(DefaultFacelet.java:448)
	at org.apache.myfaces.view.facelets.impl.DefaultFacelet.include(DefaultFacelet.java:426)
	at org.apache.myfaces.view.facelets.impl.DefaultFaceletContext.includeFacelet(DefaultFaceletContext.java:244)
	at org.apache.myfaces.view.facelets.tag.ui.IncludeHandler.apply(IncludeHandler.java:217)
	at javax.faces.view.facelets.CompositeFaceletHandler.apply(CompositeFaceletHandler.java:49)
	at javax.faces.view.facelets.DelegatingMetaTagHandler.applyNextHandler(DelegatingMetaTagHandler.java:58)
	at org.richfaces.view.facelets.html.BehaviorsAddingComponentHandlerWrapper.applyNextHandler(BehaviorsAddingComponentHandlerWrapper.java:53)
	at org.apache.myfaces.view.facelets.tag.jsf.ComponentTagHandlerDelegate.apply(ComponentTagHandlerDelegate.java:294)
	at javax.faces.view.facelets.DelegatingMetaTagHandler.apply(DelegatingMetaTagHandler.java:53)
	at javax.faces.view.facelets.CompositeFaceletHandler.apply(CompositeFaceletHandler.java:49)
	at javax.faces.view.facelets.DelegatingMetaTagHandler.applyNextHandler(DelegatingMetaTagHandler.java:58)
	at org.richfaces.view.facelets.html.BehaviorsAddingComponentHandlerWrapper.applyNextHandler(BehaviorsAddingComponentHandlerWrapper.java:53)
	at org.apache.myfaces.view.facelets.tag.jsf.ComponentTagHandlerDelegate.apply(ComponentTagHandlerDelegate.java:294)
	at javax.faces.view.facelets.DelegatingMetaTagHandler.apply(DelegatingMetaTagHandler.java:53)
	at javax.faces.view.facelets.CompositeFaceletHandler.apply(CompositeFaceletHandler.java:49)
	at javax.faces.view.facelets.DelegatingMetaTagHandler.applyNextHandler(DelegatingMetaTagHandler.java:58)
	at org.richfaces.view.facelets.html.BehaviorsAddingComponentHandlerWrapper.applyNextHandler(BehaviorsAddingComponentHandlerWrapper.java:53)
	at org.apache.myfaces.view.facelets.tag.jsf.ComponentTagHandlerDelegate.apply(ComponentTagHandlerDelegate.java:294)
	at javax.faces.view.facelets.DelegatingMetaTagHandler.apply(DelegatingMetaTagHandler.java:53)
	at javax.faces.view.facelets.CompositeFaceletHandler.apply(CompositeFaceletHandler.java:49)
	at javax.faces.view.facelets.DelegatingMetaTagHandler.applyNextHandler(DelegatingMetaTagHandler.java:58)
	at org.richfaces.view.facelets.html.BehaviorsAddingComponentHandlerWrapper.applyNextHandler(BehaviorsAddingComponentHandlerWrapper.java:53)
	at org.apache.myfaces.view.facelets.tag.jsf.ComponentTagHandlerDelegate.apply(ComponentTagHandlerDelegate.java:294)
	at javax.faces.view.facelets.DelegatingMetaTagHandler.apply(DelegatingMetaTagHandler.java:53)
	at javax.faces.view.facelets.CompositeFaceletHandler.apply(CompositeFaceletHandler.java:49)
	at org.apache.myfaces.view.facelets.tag.ui.CompositionHandler.apply(CompositionHandler.java:158)
	at org.apache.myfaces.view.facelets.compiler.NamespaceHandler.apply(NamespaceHandler.java:57)
	at org.apache.myfaces.view.facelets.compiler.EncodingHandler.apply(EncodingHandler.java:48)
	at org.apache.myfaces.view.facelets.impl.DefaultFacelet.include(DefaultFacelet.java:394)
	at org.apache.myfaces.view.facelets.impl.DefaultFacelet.include(DefaultFacelet.java:448)
	at org.apache.myfaces.view.facelets.impl.DefaultFacelet.include(DefaultFacelet.java:426)
	at org.apache.myfaces.view.facelets.impl.DefaultFaceletContext.includeFacelet(DefaultFaceletContext.java:244)
	at org.apache.myfaces.view.facelets.tag.ui.IncludeHandler.apply(IncludeHandler.java:217)
	at org.apache.myfaces.view.facelets.tag.ui.DefineHandler.applyDefinition(DefineHandler.java:86)
	at org.apache.myfaces.view.facelets.tag.ui.CompositionHandler.apply(CompositionHandler.java:175)
	at org.apache.myfaces.view.facelets.impl.TemplateContextImpl$TemplateManagerImpl.apply(TemplateContextImpl.java:186)
	at org.apache.myfaces.view.facelets.impl.TemplateContextImpl.includeDefinition(TemplateContextImpl.java:131)
	at org.apache.myfaces.view.facelets.impl.DefaultFaceletContext.includeDefinition(DefaultFaceletContext.java:460)
	at org.apache.myfaces.view.facelets.tag.ui.InsertHandler.apply(InsertHandler.java:94)
	at javax.faces.view.facelets.CompositeFaceletHandler.apply(CompositeFaceletHandler.java:49)
	at javax.faces.view.facelets.DelegatingMetaTagHandler.applyNextHandler(DelegatingMetaTagHandler.java:58)
	at org.richfaces.view.facelets.html.BehaviorsAddingComponentHandlerWrapper.applyNextHandler(BehaviorsAddingComponentHandlerWrapper.java:53)
	at org.apache.myfaces.view.facelets.tag.jsf.ComponentTagHandlerDelegate.apply(ComponentTagHandlerDelegate.java:294)
	at javax.faces.view.facelets.DelegatingMetaTagHandler.apply(DelegatingMetaTagHandler.java:53)
	at javax.faces.view.facelets.CompositeFaceletHandler.apply(CompositeFaceletHandler.java:49)
	at org.apache.myfaces.view.facelets.compiler.NamespaceHandler.apply(NamespaceHandler.java:57)
	at org.apache.myfaces.view.facelets.compiler.EncodingHandler.apply(EncodingHandler.java:48)
	at org.apache.myfaces.view.facelets.impl.DefaultFacelet.include(DefaultFacelet.java:394)
	at org.apache.myfaces.view.facelets.impl.DefaultFacelet.include(DefaultFacelet.java:448)
	at org.apache.myfaces.view.facelets.impl.DefaultFacelet.include(DefaultFacelet.java:426)
	at org.apache.myfaces.view.facelets.impl.DefaultFaceletContext.includeFacelet(DefaultFaceletContext.java:244)
	at org.apache.myfaces.view.facelets.tag.ui.CompositionHandler.apply(CompositionHandler.java:148)
	at org.apache.myfaces.view.facelets.compiler.NamespaceHandler.apply(NamespaceHandler.java:57)
	at org.apache.myfaces.view.facelets.compiler.EncodingHandler.apply(EncodingHandler.java:48)
	at org.apache.myfaces.view.facelets.impl.DefaultFacelet.apply(DefaultFacelet.java:179)
	at org.apache.myfaces.view.facelets.FaceletViewDeclarationLanguage.buildView(FaceletViewDeclarationLanguage.java:452)
	at org.apache.myfaces.lifecycle.RenderResponseExecutor.execute(RenderResponseExecutor.java:78)
	at org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:241)
	at javax.faces.webapp.FacesServlet.service(FacesServlet.java:199)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at com.recommind.litigation.client.web.filters.LoginFilter.doFilter(LoginFilter.java:236)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at com.recommind.litigation.client.web.filters.CacheFilter.doFilter(CacheFilter.java:105)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at com.recommind.litigation.client.web.filters.TimerFilter.doFilter(TimerFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at com.recommind.litigation.client.web.filters.EncodingFilter.doFilter(EncodingFilter.java:54)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:470)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:293)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:859)
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:602)
	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)
	at java.lang.Thread.run(Thread.java:722)
{code}

I'm sorry that I can not give much info, we saw it happening during automated UI tests but have not been able to reproduce it in a way that we can debug it.",MYFACES-3735
"The trick with this one is add proper metadata in FacesConfig class to identify which components has a ""component tag definition"". The best is associate the componentType with the definition.

When the configuration is read, this information goes to RuntimeConfig and finally facelets vdl grab this information and set up the compiler.

In theory it should be something like the hierarchy of classes we have for FacesConfig, but for facelets, but since there is and there will be an stronger collaboration between jsf and facelets, it has more sense to put all related information into FacesConfig.",MYFACES-3734
"This is a difficult issue to do in JSF 2.2 . I have spent a long time to solve this one, and given the complexity involved and since there is no documentation anywhere about how this should work, I'll let the required explanation here.

The idea is allow to include generated vdl fragments into pages programatically. This includes normal components, composite components or just fragments of markup. The method signature is this:

public UIComponent createComponent(FacesContext context, String taglibURI, String tagName, Map<String,Object> attributes)

Some valid examples of this are:

// Normal component
UIComponent component = vdl.createComponent(facesContext, 
    ""http://java.sun.com/jsf/html"", 
    ""outputText"", attributes);

// Composite component
UIComponent component = vdl.createComponent(facesContext, 
    ""http://java.sun.com/jsf/composite/testComposite"", 
    ""dynComp_1"", attributes);

// Dynamic include
Map<String, Object> attributes = new HashMap<String, Object>();
attributes.put(""src"", ""/addSimpleIncludeVDL_1_1.xhtml"");
UIComponent component = vdl.createComponent(facesContext, 
    ""http://java.sun.com/jsf/facelets"", 
    ""include"", attributes);

The javadoc does not suggest the dynamic include is valid, but I think users expect these kind of stuff work. 

Theoretically it sounds like something easy to do, but unfortunately it is not. The reasons why this is so are:

- Facelets algorithm wraps html markup into UILeaf instances, which is a special ""transient"" component. UILeaf instances are never saved or restored from the component tree, but in some points of the algorithm (restore view and before render response when vdl.buildView() is called) the component tree is updated, adding or removing UILeaf instances.

- Facelets has an algorithm that require id generation to be stable, otherwise a duplicate id exception may arise. A lot of effort has been done to organize this part, and the current solution works very well. But in this case, we need to generate unique ids that can be refreshed somehow.

- Facelets algorithm has an special logic to deal with dynamic sections like the ones generated by c:if or 
ui:include src=""#{...}"" . Add facelets sections programatically could make this algorithm fail, removing sections that should be.

- Facelets PSS algorithm needs to be taken into account too. The listener that is used to register programmatic changes on the tree in DefaultFaceletsStateManagementStrategy uses  ComponentSupport.MARK_CREATED to identify which component belongs to the component tree and which one was added by outside. Add facelets sections programatically could make this algorithm fail, because it could assume some sections of the tree does not need to be saved fully, even if that's not true.

The issue in the spec is this:

https://java.net/jira/browse/JAVASERVERFACES_SPEC_PUBLIC-611

At start the idea was to export FaceletFactory directly, but I told to the EG that it was a bad idea by multiple reasons (That's a Pandora's Box). See:

https://java.net/projects/javaserverfaces-spec-public/lists/jsr344-experts/archive/2012-11/message/91

This previous message is useful too:

https://java.net/projects/javaserverfaces-spec-public/lists/jsr344-experts/archive/2012-06/message/18



After thinking and trying different strategies to overcome this issue, I finally found the following solution:

- Use the compiler for generate a custom Facelet ""inline"" or ""on the fly"". It is not necessary to create an
xml document and then parse it, just generate the Tag class and pass it to the compiler to generate an
Abstract Syntax Tree (AST), with the hierarchy of facelet TagHandler instances.

- To solve the issue with UILeaf instances, the best is create a stateful ComponentSystemEventListener that on restore view phase it compiles the custom Facelet and apply it over the fragment. The ideal and only event to attach the listener is PostRestoreStateEvent, but we need to add the code in UIComponent.processEvent().

- In the case of a ui:include, if multiple components are returned, all of them are grouped into a single
UIPanel. If the code returns one component, it returns that component.

- If the code generates a branch, or in other words, multiple nested components, it should attach the 
listener to deal with UILeaf instances, if it just generates one component do not do that because it is
not necessary.

- To solve the issue with the ids, just call UIViewRoot.createUniqueId() and use the generated value to derive unique facelets ids. The new algorithm that generate ids is very flexible and it will support this case. This base key should be saved in the state so the same ids are generated for the same fragment.

- Support composite components needs special treatment. The idea is support something like this:

UIComponent component = vdl.createComponent(facesContext, 
    ""http://java.sun.com/jsf/composite/testComposite"", 
    ""dynComp_1"", attributes);
    
// .... add children / facets to the algorithm

someComponentInTheView.getChildren().add(component);

In this case the ""processing"" of the composite component content must be done only when the component is added to the view. The idea is vdl.createComponent only create the root component class, and then use a listener attached to PostAddToViewEvent to process the content. We need to modify the algorithm, because in this case children/facets are created programatically and not using facelets algorithm. The idea is add an extra facelet in the compiler to detect when the result is a composite component. The listener attached to PostAddToViewEvent must be done in a way that only works on the first addition to PostAddToViewEvent.

- If the call to vdl.createComponent() occur when there is an active FaceletCompositionContext instance, reuse that instance doing the necessary changes in the context, otherwise instantiate a clean context.

- Facelets PSS algorithm will work just fine as long as the returned component does not have ComponentSupport.MARK_CREATED set when the view is refreshed, saved or restored. It is enough to just use the component attribute map.

- The two base cases to test are:
   * Create components programatically inside a ""binding"" method.
   * Create components programatically in PreRenderViewEvent or in the Renderer.
  The difference is the ""binding"" occur when there is a FaceletCompositionContext instance active, but in the other cases there is no active instance.

Comply with all previous requirements can be difficult, but it is very important, otherwise the algorithm will not be stable enough.",MYFACES-3733
" Myfaces-core-2.1.12-src/src/myfaces-core-module-2.1.12/ still trigger
rat failures:

 DEPENDENCIES
 impl/src/main/resources/META-INF/services/javax.servlet.ServletContainerInitializer

Both of these should probably be added to the exclude list
",MYFACES-3732
"In HTMLEncoder.encodeURIAtributte is a check to not re-escape already percent-encoded parts. But that code assumes the percent-encoded symbols to be uppercase letters.

So in the following link the '%2b' is escaped to '%252b':

Original:
""http://host/app/?ae=Item&a=Open&t=IPM.Note&id=RgAAAAB4E8INIm43RZNuTeFByn9IBwCfBp1RvH2jT7X5YNYS8KZjAAAApBU%2bAABNyiydsdzWRbj76MCJ9qhxAAAAmaj0AAAJ&exvsurl=1"";

Encoded:
""http://host/app/?ae=Item&amp;a=Open&amp;t=IPM.Note&amp;id=RgAAAAB4E8INIm43RZNuTeFByn9IBwCfBp1RvH2jT7X5YNYS8KZjAAAApBU%252bAABNyiydsdzWRbj76MCJ9qhxAAAAmaj0AAAJ&amp;exvsurl=1

(http://tools.ietf.org/html/rfc3986#page-12 says uppercase and lowercase letters have to be considered as equal.)",MYFACES-3731
Implement ViewDeclarationLanguageWrapper,MYFACES-3730
"Implement resource library contracts specification is one of the main topics part of JSF 2.2

It is necessary to change all ResourceHandler default implementation to introduce the contracts on top or everything. Additionally, facelets algorithm must be updated to use createViewResource(...), but it is good to remember that it is resposibility of the vdl to decide if it uses it or not.",MYFACES-3729
"i found a weird issue that if i use p:ajax on inputText with process=""@none"", the InputTextRenderer#decode method will be still invoked.
This works fine with f:ajax in myfaces and mojarra.
p:ajax only works expected on mojarra.

The only difference i found is, that p:ajax sends the ""javax.faces.partial.execute"" param and f:ajax not.

Here is a list with the post params (without my inputs):

PrimeFaces:
javax.faces.ViewState=N%2F6uUZMB9%2BPXSBTJVus5p6rncWDWwUAgQ9UIOweKuerVM0Z7
javax.faces.partial.ajax=true
javax.faces.source=xxx
javax.faces.partial.execute=%40none
javax.faces.partial.render=%40none
javax.faces.behavior.event=change
javax.faces.partial.event=change
form_SUBMIT=1

MyFaces:
javax.faces.ViewState=EHCQlskNw%2BLXSBTJVus5pyzjdxWpT%2B72t7rvnK11Nffi10%2Bl
javax.faces.partial.ajax=true
javax.faces.source=xxx
javax.faces.behavior.event=change
javax.faces.partial.event=change
javax.faces.windowId=2cc
form_SUBMIT=1
form=form",MYFACES-3728
"The method says:

hasConversationContext() {
        return getCurrentConversationContext() == null;
}

should rather be the opposite -
!= null

...",MYFACES-3727
"When the webapp context is root (""/"") its name is still appended before the urls (i didn't check all cases) so we end up with urls like //index.xhtml which makes the navigation not working anymore.

I'm sure it happens at least in org.apache.myfaces.shared.application.DefaultViewHandlerSupport#calculateActionURL where

       builder.append(contextPath);

should be replaced by


       if (!""/"".equals(contextPath)) {
            builder.append(contextPath);
        }


We saw this issue in tomee (here a sample to reproduce it https://github.com/maxtorzito/tomee-codi)",MYFACES-3726
"The JSF 2.2 adds the new context parameter javax.faces.WEBAPP_RESOURCES_DIRECTORY to specify a custom resources directory that is used instead of /resources.

The strange thing in the spec is, that the JavaDoc for ResourceHandler.WEBAPP_RESOURCES_DIRECTORY_PARAM_NAME defines, that the specified value must not start with a '/'. This is also pointed out in JAVASERVERFACES_SPEC_PUBLIC-996 (see [1]) but unfortunately not answered. Even stranger as setting this parameter in a web app with Mojarra only works if it starts with '/'.

[1]: https://java.net/jira/browse/JAVASERVERFACES_SPEC_PUBLIC-996",MYFACES-3725
"_SharedRendererUtils.getConvertedUISelectManyValue(...) creates an instance of  PersistentBag at line 268.
LazyInitializationException comes later in UISelectMany._createItemValuesIterator at line 436.

Works with Myfaces 1.2.12

",MYFACES-3724
"The JSF 2.2 spec defines a new context parameter javax.faces.SERIALIZE_SERVER_STATE. This parameter controls state serialization for server side state saving. As far as I see it, it should be the same as the MyFaces parameter org.apache.myfaces.SERIALIZE_STATE_IN_SESSION.

Maybe org.apache.myfaces.SERIALIZE_STATE_IN_SESSION can even be deprecated for 2.2?",MYFACES-3723
"There is a cache for the calculated result whether the given request is a resource request.

I think it is not working as expected in the moment.

ResourceHandlerImpl:
    @Override
    public boolean isResourceRequest(FacesContext facesContext)
    {
        // Since this method could be called many times we save it
        //on request map so the first time is calculated it remains
        //alive until the end of the request
        Boolean value = (Boolean) facesContext.getAttributes().get(IS_RESOURCE_REQUEST);

        if (value != null && value)
        {
            //return the saved value
            return value;
        }
        else
        {
            String resourceBasePath = getResourceHandlerSupport()
                    .calculateResourceBasePath(facesContext);

            if (resourceBasePath != null
                    && resourceBasePath.startsWith(ResourceHandler.RESOURCE_IDENTIFIER))
            {
                facesContext.getAttributes().put(IS_RESOURCE_REQUEST, Boolean.TRUE);
                return true;
            }
            else
            {
                facesContext.getAttributes().put(IS_RESOURCE_REQUEST, Boolean.FALSE);
                return false;
            }
        }
    }

In case of IS_RESOURCE_REQUEST=false the value is recalculated for every method call again because of the 'if (value != null && value)'. I think it just should be 'if (value != null)', or?


----

(
    @Override
    public boolean isResourceRequest(FacesContext facesContext)
    {
        // Since this method could be called many times we save it
        // on request map so the first time is calculated it remains
        // alive until the end of the request
        Boolean value = (Boolean) facesContext.getAttributes().get(IS_RESOURCE_REQUEST);

        if (value == null)
        {
            String resourceBasePath = getResourceHandlerSupport()
                    .calculateResourceBasePath(facesContext);

            value = resourceBasePath != null
                    && resourceBasePath.startsWith(ResourceHandler.RESOURCE_IDENTIFIER);
            facesContext.getAttributes().put(IS_RESOURCE_REQUEST, value);
        }
        return value;
    }

)",MYFACES-3722
"I have found an issue with the solution applied in MYFACES-3663. The steps to cause the problem are the following:

1. The view is rendered and some unique ids are generated. UIViewRoot has state and it is saved.
2. The view needs to be restored, PSS algorithm takes the uniqueIdCounter from the state and set it to UIViewRoot, then the initial state is constructed using facelets algorithm
3. Inside facelets algorithm, a new component is created and that increase uniqueIdCounter (f:ajax tag handler adds default jsf.js and ask for a unique id from UIViewRoot).
4. The delta state is applied, overriding uniqueIdCounter.
5. A new component is created in render response phase, creating the duplicate id condition.
6. The state saving algorithm detects the duplicate id and throw duplicate id exception.

The conditions required to reproduce the problem are very unlikely, so other tests done were not able to reproduce the problem.
",MYFACES-3721
"Originally reported as OmniFaces issue # 167 (please take a look at this, as I attached some files there in OmniFaces issue tracker)
https://code.google.com/p/omnifaces/issues/detail?id=167

OmniFaces response was the following:

Project Member #3 balusc
This problem is indeed not related to o:enableRestorableView. The only occurrence in the stack trace is just the delegation to super (i.e. the process continues less or more as if the o:enableRestorableView was never involved):

    UIViewRoot restoredView = super.restoreView(context, viewId);


Below is stack trace with TomEE 1.6.0 (2013-04-29), myFaces 2.1.11, and PrimeFaces 4.0 snapshot. Is this a MyFaces bug or user error?

May 09, 2013 8:06:54 AM org.apache.catalina.core.StandardWrapperValve invoke
SEVERE: Servlet.service() for servlet [Faces Servlet] in context with path [/mcmsweb] threw exception [Error restoring component: ordersViewForm:orderViewTabView:j_id_b_1_4q_1] with root cause
java.lang.ClassCastException: java.util.HashMap cannot be cast to javax.faces.convert.Converter
	at javax.faces.component.UIOutput.restoreState(UIOutput.java:248)
	at org.apache.myfaces.view.facelets.DefaultFaceletsStateManagementStrategy.restoreStateFromMap(DefaultFaceletsStateManagementStrategy.java:687)
	at org.apache.myfaces.view.facelets.DefaultFaceletsStateManagementStrategy.restoreStateFromMap(DefaultFaceletsStateManagementStrategy.java:706)
	at org.apache.myfaces.view.facelets.DefaultFaceletsStateManagementStrategy.restoreStateFromMap(DefaultFaceletsStateManagementStrategy.java:706)
	at org.apache.myfaces.view.facelets.DefaultFaceletsStateManagementStrategy.restoreStateFromMap(DefaultFaceletsStateManagementStrategy.java:706)
	at org.apache.myfaces.view.facelets.DefaultFaceletsStateManagementStrategy.restoreStateFromMap(DefaultFaceletsStateManagementStrategy.java:706)
	at org.apache.myfaces.view.facelets.DefaultFaceletsStateManagementStrategy.restoreStateFromMap(DefaultFaceletsStateManagementStrategy.java:706)
	at org.apache.myfaces.view.facelets.DefaultFaceletsStateManagementStrategy.restoreStateFromMap(DefaultFaceletsStateManagementStrategy.java:706)
	at org.apache.myfaces.view.facelets.DefaultFaceletsStateManagementStrategy.restoreStateFromMap(DefaultFaceletsStateManagementStrategy.java:706)
	at org.apache.myfaces.view.facelets.DefaultFaceletsStateManagementStrategy.restoreStateFromMap(DefaultFaceletsStateManagementStrategy.java:706)
	at org.apache.myfaces.view.facelets.DefaultFaceletsStateManagementStrategy.restoreStateFromMap(DefaultFaceletsStateManagementStrategy.java:706)
	at org.apache.myfaces.view.facelets.DefaultFaceletsStateManagementStrategy.restoreStateFromMap(DefaultFaceletsStateManagementStrategy.java:706)
	at org.apache.myfaces.view.facelets.DefaultFaceletsStateManagementStrategy.restoreView(DefaultFaceletsStateManagementStrategy.java:340)
	at org.apache.myfaces.application.StateManagerImpl.restoreView(StateManagerImpl.java:129)
	at org.apache.myfaces.shared.view.ViewDeclarationLanguageBase.restoreView(ViewDeclarationLanguageBase.java:106)
	at org.apache.myfaces.view.facelets.FaceletViewDeclarationLanguage.restoreView(FaceletViewDeclarationLanguage.java:2118)
	at org.apache.myfaces.application.ViewHandlerImpl.restoreView(ViewHandlerImpl.java:300)
	at javax.faces.application.ViewHandlerWrapper.restoreView(ViewHandlerWrapper.java:83)
	at org.omnifaces.viewhandler.RestorableViewHandler.restoreView(RestorableViewHandler.java:66)
	at javax.faces.application.ViewHandlerWrapper.restoreView(ViewHandlerWrapper.java:83)
	at org.apache.myfaces.lifecycle.RestoreViewExecutor.execute(RestoreViewExecutor.java:127)
	at org.apache.myfaces.lifecycle.LifecycleImpl.executePhase(LifecycleImpl.java:170)
	at org.apache.myfaces.lifecycle.LifecycleImpl.execute(LifecycleImpl.java:117)
	at javax.faces.webapp.FacesServlet.service(FacesServlet.java:197)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:305)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)
	at org.primefaces.webapp.filter.FileUploadFilter.doFilter(FileUploadFilter.java:79)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)
	at org.omnifaces.filter.GzipResponseFilter.doFilter(GzipResponseFilter.java:148)
	at org.omnifaces.filter.HttpFilter.doFilter(HttpFilter.java:75)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)
	at pf.LoginFilter.doFilter(LoginFilter.java:244)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:222)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:123)
	at org.apache.tomee.catalina.OpenEJBValve.invoke(OpenEJBValve.java:45)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:472)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:171)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:99)
	at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:947)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:118)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:408)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1009)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:589)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1686)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:722)
",MYFACES-3720
"I have a commandButton with a specific action which is disabled. The button is rendered with a disabled attribute and gets a bit different onclick script.

Problem is, when the user removes the disabled and onclick attributes, with for example Firebug, it is possible to click the button. And JSF does not prevent the action from being executed.

I expected that the execution is prevented also on server-side.",MYFACES-3719
"According to the spec the new namespace should be http://xmlns.jcp.org/jsf , but http://java.sun.com/jsf should still work. This include all libraries that has that prefix, including jstl tags too. 
",MYFACES-3718
,MYFACES-3717
Implement h:inputFile as described in the spec,MYFACES-3716
"Before any release, it is necessary to remove unnecessary parameters or features from earlier versions

One example is org.apache.myfaces.HANDLE_STATE_CACHING_MECHANICS web config param. It was added in 2.0.x/2.1.x to deal with StateManager implementations that relies on previous behavior, but in 2.2.x, we should unify that part (ri behavior).

Other example is org.apache.myfaces.RENDER_FORM_SUBMIT_SCRIPT_INLINE web config param. With the standard javascript api (jsf.js), this behavior was included in the javascript file by default. The param was included only for backward compatibility with previous versions (JSF 1.2).

There are other examples of config params like org.apache.myfaces.PRETTY_HTML that are only things left from 1.1.x versions. 

It is necessary to do this part before any official release.",MYFACES-3715
"Implement stateless mode using f:view ""transient"" attribute

The big problem with this stuff is what happen when view protection is considered and the resulting relationship between the state mode used (client or server) and mixing everything together.

For example, view protection relies on what's inside javax.faces.ViewState hidden field and how it is encoded. Theorically javax.faces.ViewState protects against CSRF attacks, but with a special stateless token it could be possible to use that token into non stateless views. We should prevent that adding proper checks into the StateManagementStrategy and the Restore View phase.

In theory, it is necessary to extend org.apache.myfaces.application.StateCache abstract class to reflect the necessary logic to ensure protected views are always secured, even if they are declared as stateless.",MYFACES-3714
"There are some spots where getFacets() is called directly or getFacets().isEmpty is used. The ideal is prevent that call and use getFacetCount() when possible. Also, use getFacetsAndChildren() is nicer but use getFacetCount() prevents create 1 iterator per component class that does not have facets attached, which is a common case.

The effect is very, very small, but anyway it is quite simple to do it.",MYFACES-3713
"UILeaf.setId() does not require the valid id check, because it is always generated by facelets. There is no reason to do that check over an over each time setId() is called in that location, because UILeaf is a wrapper for html markup, which only needs to be rendered and does not have any special behavior in decoding or validation.

",MYFACES-3712
"In MYFACES-3160, EL Expression Cache Mode was introduced but soon it was seen a
problem found on MYFACES-3169 (ui:param and c:set implementations does not 
work as expected).

There are two problems that limit the scope where EL Expression Cache can 
be used:

1. Facelets user tags cannot cache EL Expressions.
2. Inclusions using ui:param must always contains the same number of 
parameters.

To understand the reasons it is worth to remember this example:

a.xhtml
<ui:composition template=""c.xhtml"">
    <ui:param name=""var1"" value=""value1""/>
</ui:composition>

b.xhtml
<ui:composition template=""c.xhtml"">
    <ui:param name=""var1"" value=""value1""/>
    <ui:param name=""var2"" value=""value2""/>
</ui:composition>

c.xhtml
<ui:composition>
   <h:outputText value=""#{var1}/>
   <h:outputText value=""#{var2}/>
</ui:composition>

When facelet c.xhtml is constructed from a.xhtml, ""var2"" is not recognized as
a parameter so all EL expressions inside c.xhtml holding refereces to ""var2""
will be cached. Later, facelet c.xhtml is reused from b.xhtml but since 
some EL expressions are cached the passed value in ""var2"" is not taken into 
account and the error arise.

In this point it is good to remember that ui:include or ui:decorate or user 
tags are build view time tags, so they are executed only when the view is
built. Parameters or attributes passed by ui:param or as user tag attributes
follows the same principle, they are calculated on build view time through
VariableMapper and the evaluation is stored inside the EL Expression. This
means all EL Expressions holding references to these variables cannot be
cached and needs to be generated each time the view is built.

There is no way to know beforehand which references are affected, because
in a template or an user tag there is no declaration of the parameters or
attributes. But from user point of view that's good, because in this context
a declaration of the parameters is just not necessary.

The problem is ui:param and user tags are very useful features, widely used.
A solution to this problem will improve performance in those cases.

I have been thinking for a long time how to solve this, trying different 
strategies. Use some kind of concurrency algorithm inside TagAttributeImpl
does not work because it is too expensive, or use a central storage for 
cache the expressions by the cost involved in the comparisons.

The objective of cache EL expressions inside facelets abstract syntax tree 
(AST) is minimize the calculations required to get a valid expression. EL
implementations has already an internal map that cache that information,
but that code usually has synchronized blocks or similar things. In that
sense, the idea is rely on that storage in those EL expressions where 
there is no choice and they need to be recreated.

After doing many experiments in this part, I came up with a solution, which
involves the following points:

1. Associate to a facelet, the parameters that were considered as passed 
through ui:param or as a user tag attribute. If in some point of time
we know for example c.xhtml uses var1, just consider it as c.xhtml(var1).

2. Use DefaultVariableMapper to track the parameters that are passed through
ui:param or as a user tag attribute. When the EL expression is created, if
it uses at least one parameter, mark the expression as not cacheable.

3. Override FaceletCache implementation and force a recompilation of a 
facelet if a new parameter is detected that was not considered the first 
time the template was created.

4. A facelet stored in the cache can be used if and only if all the 
parameters used for the template where considered when it was compiled at
first time.

In the example proposed, when facelet c.xhtml is constructed from a.xhtml,
we say that c.xhtml was built with var1 as a known parameter, or 
c.xhtml(var1). when we try to reuse facelet c.xhtml from b.xhtml, we discover
that var2 is also a parameter, but since the cached facelet is c.xhtml(var1),
the algorithm discard the facelet and create a new one, but taking into
account var2 too, so the new facelet becomes c.xhtml(var1,var2). If there
is a call to c.xhtml with no params, it is considered that c.xhtml(var1,var2)
can be used in that case.

The final effect is just some extra compilations of the same facelet at
startup but in the medium/long term, the information we need is calculated 
and associated with the facelet url. Nice!. Facelet is very fast doing those
extra compilation steps, and the final effect over performance really pays 
off. We could even set this mode as default.

The only disadvantage of this strategy is the current contract of FaceletCache
is insuficient. As it has been described in MYFACES-3705, there are 
implementation details inside MyFaces Core and in our facelets implementation,
that needs to be exposed in a proper way. We need to create a custom
AbstractFaceletCache and specify how to implement it.
",MYFACES-3711
"Creating the SelectItemsIterator seams to be a bit slow when using a big collection. (At least using the Tomahawk UISlectItems and transforming a list of Objects to SelectItems with evaluating expressions on each item.)

UISelectMany stores the Iterator in a local collection to use that twice. I think the same could be done in UISelectOne:

	Collection<SelectItem> items = new ArrayList<SelectItem>();
	for (Iterator<SelectItem> iter = new _SelectItemsIterator(this, context); iter.hasNext();)
	{
	    items.add(iter.next());
	}
	
	// selected value must match to one of the available options
	// and if required is true it must not match an option with noSelectionOption set to true (since 2.0)
	Converter converter = getConverter();
	
	if (_SelectItemsUtil.matchValue(context, this, value, items.iterator(), converter))
	{
	    if (! this.isRequired())
	    {
	        return; // Matched & Required false, so return ok.
	    }
	    if (! _SelectItemsUtil.isNoSelectionOption(context, this, value,
	    		items.iterator(), converter))
	    {
	        return; // Matched & Required true & No-selection did NOT match, so return ok.
	    }
	}
",MYFACES-3710
"Just run the attached project. Following exception occurs:

java.lang.IllegalStateException: component with duplicate id ""j_id__md_1"" found
	at org.apache.myfaces.view.facelets.compiler.CheckDuplicateIdFaceletUtils.checkIds(CheckDuplicateIdFaceletUtils.java:100)
	at org.apache.myfaces.view.facelets.compiler.CheckDuplicateIdFaceletUtils.checkIds(CheckDuplicateIdFaceletUtils.java:116)
	at org.apache.myfaces.view.facelets.compiler.CheckDuplicateIdFaceletUtils.checkIds(CheckDuplicateIdFaceletUtils.java:110)
	at org.apache.myfaces.view.facelets.compiler.CheckDuplicateIdFaceletUtils.checkIds(CheckDuplicateIdFaceletUtils.java:82)
	at org.apache.myfaces.view.facelets.DefaultFaceletsStateManagementStrategy.saveView(DefaultFaceletsStateManagementStrategy.java:558)
	at org.apache.myfaces.application.StateManagerImpl.saveView(StateManagerImpl.java:188)
	at org.apache.myfaces.view.facelets.FaceletViewDeclarationLanguage.renderView(FaceletViewDeclarationLanguage.java:2052)
	at org.apache.myfaces.application.ViewHandlerImpl.renderView(ViewHandlerImpl.java:285)
	at javax.faces.application.ViewHandlerWrapper.renderView(ViewHandlerWrapper.java:59)
	at org.apache.myfaces.lifecycle.RenderResponseExecutor.execute(RenderResponseExecutor.java:116)
	at org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:241)
	at javax.faces.webapp.FacesServlet.service(FacesServlet.java:199)

This works fine if i remove the f:viewParam.",MYFACES-3709
"Primefaces mobile pages are described with pm:page and you can set title=""your title"".

I don't want a title so I left the attribute out but that caused NPE.

HtmlResponseWriterImpl
1018        if (str.length() > 0)

The string in that case is null hence the length check causes NPE. Not sure if str != null should be added or not , maybe primefaces is doing something bad.

Workaround is to use title="""" but it's not very pretty. ",MYFACES-3708
"I think could be good in portal environment to have a new context parameter like

org.apache.myfaces.STANDARD_JSF_AJAX_LIBRARY_LOADED

in a way that ""true"" would prevent AjaxHandler to add outputScript component to the head section(skip call registerJsfAjaxDefaultResource).

In this case, developer would be responsible for including the resource",MYFACES-3707
"The spec jsf.js.html states that a resetValues has to be passed through, this needs to be implemented on the javascript side of things first, so that the proper passthrough value is passed.
",MYFACES-3706
"I'm implementing my own FaceletCache which is decorating org.apache.myfaces.view.facelets.impl.FaceletCacheImpl by adding my own caching policy. When I was studying the code I'm decorating, I noticed that scrictly speaking it was not behaving. The problem lies in this code snippet (and the same for metadata facelets):

            if (_refreshPeriod != NO_CACHE_DELAY)
            {
                Map<String, DefaultFacelet> newLoc = new HashMap<String, DefaultFacelet>(_facelets);
                newLoc.put(key, f);
                _facelets = newLoc;
            }

First of all, multiple concurrent modifications of _facelets map may cause lost updates. Think what happens when thread one copies the hashmap, updates local copy but before it sets the reference, thread b does the same. One update is now lost. In reality, the number of concurrent threads and number of lost updates may be much larger. The second thing is that the new reference set to _facelets is not quaranteed to be visible to other threads due to missing synchronization. To prove my concerns, I created a small test bench which proved my doubts and was able to show both lost updates and visibility problem. When I modified the map to be ConcurrentHashMap and just used put-method all problems vanished. So instead of

                Map<String, DefaultFacelet> newLoc = new HashMap<String, DefaultFacelet>(_facelets);
                newLoc.put(key, f);
                _facelets = newLoc;

I used

                _facelets.put( key,f );

I know it may not be a problem, possibly just causing multiple loads of same resource, but still I don't feel comfortable with the code behaving concurrency-wise incorrectly.

BR, Paci
",MYFACES-3705
"To reproduce: 

1. Download http://www.manorrock.com/repo/org/manorrock/faces/org-manorrock-faces-demo/2.1.1.0.0/ 
2. Deploy to /demo/faces on Tomcat

It throws an exception. It should work. 

If you need more information please let me know!",MYFACES-3704
"To reproduce:

1. Download http://www.manorrock.com/repo/org/manorrock/faces/org-manorrock-faces-demo/2.1.1.0.0/
2. Click on Accordion on left hand side it should activate and expand the accordion (it does not because it looks like the renderkit that was used was the FOPRenderKit).

Note to see it properly work visit 

http://www.manorrock.com/demo/faces/

If you need more information please let me know!",MYFACES-3703
"ui:repeat caches its data model. Usually it it is cleared before rendering. But not if there are any errors in faces context. 

Why is it not cleared then?

That causes a problem in the following scenario:

We have an ui:repeat that iterating over a list of more detailed error messages of an object on the page. This list is empty in the start of an request. While invoking an action on the page error messages are added to the faces context to be shown on the page. Additionally some more detailed information is stored to be shown directly with that object.

But they won't appear because the empty list is cached in the ui:repeat's data model.


I could reproduce it with the following more general example: The first button creates an info message which will be shown by the ui:repeat. The second button creates an error message and nothing is rendered through the ui:repeat.

Testpage.xhtml

<his:form id=""testForm"">
  <h:commandButton value=""Create info message"" action=""#{testController.createInfoMessage()}"" />
  <h:commandButton value=""Create error message"" action=""#{testController.createErrorMessage()}"" />
  <br/>

  UI:Repeat:
  <ui:repeat var=""item"" value=""#{facesContext.getMessageList()}"">
    FacesMessage #{item.severity} // #{item.summary}
  </ui:repreat>|<br/>

  Has Messages: #{not empty facesContext.getMessageList()}|
</his:form>

TestController

public void createErrorMessage() {
  MessageUtils.addMessage(FacesMessage.SEVERITY_ERROR, ""Oh no, an error!"", new Object[] {});
}

public void createInfoMessage() {
  MessageUtils.addMessage(FacesMessage.SEVERITY_INFO, ""Just an information."", new Object[] {});
}
",MYFACES-3702
"Is that http://java.net/jira/browse/JAVASERVERFACES_SPEC_PUBLIC-787  implemented in myfaces? viewScope works as expected in  mojarra 2.2-snapshot, but not with myfaces.",MYFACES-3701
"When updating boolean attributes (such as disabled, readonly or checked) special handling code needs to be employed since the generic Element.setAttribute never works.",MYFACES-3700
"When on* attributes are updated in IE with event handler code that contains the 'this' variable the browser will fail to reference the targeted element (as expected). When window.execScript function is used to evaluate scripts the 'this' variable references the window object.

Also when 'return' statement is used in the event handler code IE will throw the following error:

Line: 1
Char: 217
Error: 'return' statement outside of function
Code: 0


Using 'return' statements in a event handler is a valid way of enabling or disabling the execution of default action in the browser.",MYFACES-3699
,MYFACES-3698
"The exception will be set with initCause() instead of the constructor.
But the class SAXException holds it's own local exception, which will not be set, when calling initCause().

I think this is a bug in sax, but we should workaround it.",MYFACES-3697
"The renderer for command buttons and command links inserts a special form submit script inline before the first button (or link) on a page is rendered by calling 'org.apache.myfaces.shared.renderkit.html.HtmlJavaScriptUtils.renderFormSubmitScript(FacesContext)'

I have a CommandButton with ajax behavior that renders also itself like this:

    <h:form id=""testForm"">
        <h:commandButton
            value=""do somethings"">
            <f:ajax execute=""@this"" render=""@this"" />
        </h:commandButton>
    </h:form>

After the ajax request is done and the markup is replaced by the Javascript function _Dom.outerHtml() the html in the browser ends up with this:

    <input
        type=""text/javascript""
        onclick=""...submit code ...""
        value="""" />

and is not a 'button' anymore (Firefox renders it as text input field).

The cause is that the update response for the button contains as first element the inline script code.

Is it necessary to render the inline script on ajax requests?

Changing HtmlJavaScriptUtils to insert it only on non-ajax request the example above works as expected at the first glance.

HtmlJavaScriptUtils.java

    public static void renderFormSubmitScript(FacesContext facesContext) throws IOException
    {
        if (facesContext.getPartialViewContext().isAjaxRequest())
        {
            return;
        }
        ...
",MYFACES-3696
"When trying to handle a resource using the default implementation of ResourceHandler, namely ResourceHandlerImpl, a warning message is logged when running on WebSphere Application Server 7 or 8:

W com.ibm.ws.webcontainer.srt.SRTServletResponse setIntHeader SRVE8094W: WARNING: Cannot set header. Response already committed.

Looking at the code of ResourceHandlerImpl.handleResourceRequest(FacesContext context) I found the following snippet:

            try
            {
                InputStream in = resource.getInputStream();
                OutputStream out = httpServletResponse.getOutputStream();
                //byte[] buffer = new byte[_BUFFER_SIZE];
                byte[] buffer = new byte[this.getResourceBufferSize()];
    
                try
                {
                    int count = pipeBytes(in, out, buffer);
                    //set the content lenght
                    httpServletResponse.setContentLength(count);
                }
                finally
                {
                    try
                    {
                        in.close();
                    }
                    finally
                    {
                        out.close();
                    }
                }
            }

If the resource is small enough and the buffer limit is not reached everything should be fine (default size seems 2048), however if the resource is bigger the buffer gets flushed WebSphere Application Server will use chunked encoding and the httpServletResponse.setContentLength(count) gets executed after the fact resulting in the mentioned message. Setting the org.apache.myfaces.RESOURCE_BUFFER_SIZE context parameter is a possible workaround, but it would be better to avoid this as resource sizes can be unpredictable.",MYFACES-3695
"According to the JSF 2.2 Specification JavaDoc for ExternalContext:

Key in ""values"" Map 	Expected type of value. 	Name of setter method on Cookie instance to be set with the value from the Map.
comment 	String 	setComment
domain 	String 	setDomain
maxAge 	Integer 	setMaxAge
secure 	Boolean 	setSecure
path 	String 	setPath
httpOnly 	Boolean 	setHttpOnly

Add implementation detail for httpOnly as it is new for JSF 2.2.",MYFACES-3694
"Implement ExternalContext.getApplicationContextPaht() 

This is for JSF 2.2 to solve spec issue: http://java.net/jira/browse/JAVASERVERFACES_SPEC_PUBLIC-1012?page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel",MYFACES-3693
Implement jsf:element tag as described in the spec,MYFACES-3692
Implement Faces Flows as described in JSF 2.2 spec. ,MYFACES-3691
"It seems we only require to define the interfaces, but maybe we can find some use cases inside MyFaces code",MYFACES-3689
Implement ExternalContext.getSessionId(),MYFACES-3688
"The call of callValidators(FacesContext, UIInput, Object) in javax.faces.component.UISelectMany.validateValue(FacesContext, Object) is implemented as

// run the validators only if there are item values to validate
if (hasValues)
{
    _ComponentUtils.callValidators(context, this, convertedValue);
}

compared to

if (!isEmpty || shouldValidateEmptyFields(context))
{
    _ComponentUtils.callValidators(context, this, convertedValue);
}

in javax.faces.component.UIInput.validateValue(FacesContext, Object).

My guess is, that shouldValidateEmptyFields(context) have to be also checked OR connected with hasValues in UISelectMany to catch not empty validators like @NotEmpty or @Size(min=1)",MYFACES-3687
"Implement f:passThroughAttribute and f:passThroughAttributes as described in JSF 2.2 spec

Note this one is tricky, because these attributes are rendered using ResponseWriter instead add some code in the Renderer implementation, and care must be taken to keep code as fast as possible.",MYFACES-3686
Implement f:attributes facelet tag as described in JSF 2.2 spec,MYFACES-3685
"There is a bug in UIViewParameter.getSubmittedValue(). By default, a String is handled internally, but it can return an Object.",MYFACES-3684
Implement AjaxBehavior resetValues and delay as described in the spec. ,MYFACES-3683
"Implement Client Side Request Forgery protection, as described in JSF 2.2 spec and javadocs of ViewHandler",MYFACES-3682
Implement CollectionDataModel as described in JSF 2.2 spec,MYFACES-3681
"A long awaited task planned to do for JSF 2.2 is create a special module to put the interfaces that are supposed to be public from impl.

This requires some changes into our SPI interfaces, but after trying to do MYFACES-3679, anyway JSF 2.2 requires some special points, so this part needs to be changed. 

Note this time is our only chance to get it done. After an official release of Myfaces Core 2.2.x, change something will cause problems. 

Note also that change our SPI interfaces requires change some integration code for application servers.",MYFACES-3680
This is a new way to provide faces-config configuration. We should do the necessary changes.,MYFACES-3679
Add ActionListenerWrapper class,MYFACES-3678
"Implement 'javax.faces.WEBAPP_RESOURCES_DIRECTORY' as described in JSF 2.2 spec

""
If this param is set, the runtime must interpret its value as a path, relative to the web app root, where resources are to be located. This param value must not start with a “/”, though it may contain “/” characters. If no such param exists, or its value is invalid, the value “resources”, without the quotes, must be used by the runtime as the value.
""

I was looking last week for a way to move the 'resources' folder to a non-public location and read about this parameter. As I can't find if it is already implemented in 2.2 I gave it a try.

I updated 'DefaultResourceHandlerSupport' to contain and use that parameter to instantiate the 'ExternalContextResourceLoader'.


",MYFACES-3677
Implement FlashFactory and related events as described in JSF 2.2 spec,MYFACES-3676
"When running in the context of a request, MyFaces calls FacesContext.getCurrentInstance().getExternalContext.getSessionMap() in order to get/set session attributes. This provides the portlet bridge with the ability to get/set attributes using the PortletSession, which is a layer of abstraction on top of the HttpSession. But when a session expires, the org.apache.myfaces.config.ManagedBeanDestroyer.isManagedBean(String) method does not check the attribute name for a portlet environment. This causes a memory leak when running in a portlet environment, because the portlet bridge is not consulted. Specifically, @SessionScoped managed-beans are not cleaned up.

The good news is that Section PLT.18.3 of the Portlet 2.0 Specification titled ""Binding Attributes into a Session"" requires that PortletSession attribute names be namespaced/prefixed with the ""javax.portlet.p.<ID>?"" pattern when they are stored in the underlying HttpSession. This would enable MyFaces to find the session attributes, so that cleanup can take place correctly during session expiration/invalidation.

Here is the parallel issue in Mojarra:
http://java.net/jira/browse/JAVASERVERFACES-2691",MYFACES-3675
"Implement f:viewAction as described in JSF 2.2 spec.

Note there are some pending details that needs to be fixed before close this issue.",MYFACES-3674
"Hi,

the following exception occurs when ich try to forward from an init action the preRenderView phase:
The xhtml page i call contains the following preRenderView listener:

<f:metadata>
	<f:event type=""preRenderView"" listener=""#{localizedInitializerView.init}"" />
</f:metadata>

In the init Method of the listener i am performing a forward to a different page with the following
logic:

    public void init() throws Exception {

        // performs the forward
        HttpServletResponse response =
                (HttpServletResponse) FacesContext.getCurrentInstance().getExternalContext().getResponse();
        HttpServletRequest request =
                (HttpServletRequest) FacesContext.getCurrentInstance().getExternalContext().getRequest();

        RequestDispatcher dispatcher = request.getRequestDispatcher(""localized.jsf"");
        dispatcher.forward(request, response);

        // FacesContext.getCurrentInstance().getExternalContext().redirect(""localized.jsf"");

        FacesContext.getCurrentInstance().responseComplete();
    }

The result is strange, because the forward just works fine, however i am always getting the following
NullPointerException in the log file. Using a redirect instead of the forward just works fine.

java.lang.NullPointerException
        at org.apache.myfaces.shared.context.flash.FlashImpl.isKeepMessages(FlashImpl.java:389)
        at org.apache.myfaces.shared.context.flash.FlashImpl._saveMessages(FlashImpl.java:666)
        at org.apache.myfaces.shared.context.flash.FlashImpl.doPostPhaseActions(FlashImpl.java:270)
        at org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:251)
        at javax.faces.webapp.FacesServlet.service(FacesServlet.java:191)
        at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:598)
        at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:486)
        at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:119)
        at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:524)
        at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:233)
        at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1065)
        at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:413)
        at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:192)
        at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:999)
        at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:117)
        at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:250)
        at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:149)
        at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:111)
        at org.eclipse.jetty.server.Server.handle(Server.java:350)
        at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:454)
        at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:890)
        at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:944)
        at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:630)
        at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:230)
        at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:77)
        at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:606)

If you need more information about the problem or a testcase, please tell me.

 Cheers,
Andy",MYFACES-3673
"There is a small TODO 'optimize this code'-Comment in ResourceHandlerImpl.isResourceIdentifierExcluded().

I saw (randomly) that and replaced it with the attached patch. It just saves the Array of exclude resource extensions instead of creating it  newly on every method call. 

Maybe it's worth replacing it.",MYFACES-3672
"The 'jsf-uncompressed.js' tries to load the script '_FinalizeableObj.js' that seams not to exist?

  _ls(""#{resource['org.apache.myfaces.core.impl.xhrCore:_FinalizeableObj.js']}"", null, null, ""UTF-8"", false);

This results in an empty string for the load:

  _ls("""", null, null, ""UTF-8"", false); 

which causes a second request to the original page in my browser.

",MYFACES-3671
"<ui:repeat varStatus=""idx"" var=""variable"" value=""#{bean.arraylist}"">
	<h:form>
		<h:inputHidden value=""${idx.index}"" />
		<h:inputHidden value=""${variable.key}"" />
		<p:commandButton action=""#{bean.check}"" update=""@form"" />
	</h:form>
</ui:repeat>

when submit, properties are modified
",MYFACES-3670
"This is duplicate of MYFACES-3638 still occuring in 2.1.10

Stacktrace:

java.lang.NullPointerException
	org.apache.myfaces.renderkit.ServerSideStateCacheImpl$CounterSessionViewStorageFactory.createSerializedViewKey(ServerSideStateCacheImpl.java:1413)
	org.apache.myfaces.renderkit.ServerSideStateCacheImpl$CounterSessionViewStorageFactory.createSerializedViewKey(ServerSideStateCacheImpl.java:1392)
	org.apache.myfaces.renderkit.ServerSideStateCacheImpl.saveSerializedViewInServletSession(ServerSideStateCacheImpl.java:318)
	org.apache.myfaces.renderkit.ServerSideStateCacheImpl.saveSerializedView(ServerSideStateCacheImpl.java:1036)
	org.apache.myfaces.renderkit.html.HtmlResponseStateManager.saveState(HtmlResponseStateManager.java:149)
	org.apache.myfaces.application.StateManagerImpl.saveView(StateManagerImpl.java:253)
	org.apache.myfaces.shared.view.JspViewDeclarationLanguageBase.renderView(JspViewDeclarationLanguageBase.java:221)
	org.apache.myfaces.application.ViewHandlerImpl.renderView(ViewHandlerImpl.java:285)
	javax.faces.application.ViewHandlerWrapper.renderView(ViewHandlerWrapper.java:59)
	javax.faces.application.ViewHandlerWrapper.renderView(ViewHandlerWrapper.java:59)
	org.apache.myfaces.lifecycle.RenderResponseExecutor.execute(RenderResponseExecutor.java:116)
	org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:241)
	org.apache.myfaces.extensions.cdi.jsf2.impl.listener.phase.CodiLifecycleWrapper.render(CodiLifecycleWrapper.java:126)
	org.apache.myfaces.extensions.validator.core.startup.ExtValLifecycleWrapper.render(ExtValLifecycleWrapper.java:79)
	javax.faces.webapp.FacesServlet.service(FacesServlet.java:199)
	org.apache.myfaces.webapp.MyFacesServlet.service(MyFacesServlet.java:112)
	de.orbitx.retena.web.filter.CharacterEncodingFilter.doFilter(CharacterEncodingFilter.java:48)
	org.primefaces.webapp.filter.FileUploadFilter.doFilter(FileUploadFilter.java:79)
	org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)",MYFACES-3669
"If prependId=""false"", the generated id should get an unique id from the parent naming container of UIForm, to ensure uniqueness on id generation.

Reported by Zhao Koh on dev list : MyFaces 2.1.8 - Issues with composite component renderFacet


Hi all,

I am currently using MyFaces 2.1.8 but discovered an issue with composite component renderFacet - and this issue started at version 2.1.4.

The following describes the problem:

I have a composite component called buttonSelectBox that uses composite:renderFacet to inject content from client - nothing fancy, only a span that surrounds the content.


<html xmlns=""http://www.w3.org/1999/xhtml"" 
        xmlns:h=""http://java.sun.com/jsf/html"" 
        xmlns:f=""http://java.sun.com/jsf/core"" 
        xmlns:c=""http://java.sun.com/jsp/jstl/core"" 
        xmlns:ui=""http://java.sun.com/jsf/facelets"" 
        xmlns:composite=""http://java.sun.com/jsf/composite"" 
        xmlns:p=""http://primefaces.org/ui""> 

        <composite:interface> 
                <composite:attribute name=""compId"" required=""true"" /> 
                <composite:attribute name=""defaultText"" required=""true"" /> 
                <composite:facet name=""content"" required=""false"" /> 
        </composite:interface> 

        <composite:implementation> 
                <span class=""buttonlink""> 
                        <composite:renderFacet name=""content"" /> 
                  </span>                     
        </composite:implementation> 

</html> 



Then I have a facelet page that uses this composite component and a standard <h:commandButton> that invokes an action.

<!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Transitional//EN"" ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd""> 

<html xmlns=""http://www.w3.org/1999/xhtml"" 
        xmlns:h=""http://java.sun.com/jsf/html"" 
        xmlns:c=""http://java.sun.com/jsp/jstl/core"" 
        xmlns:f=""http://java.sun.com/jsf/core"" 
        xmlns:ui=""http://java.sun.com/jsf/facelets"" 
        xmlns:custom=""http://java.sun.com/jsf/composite/components"" 
        xmlns:p=""http://primefaces.org/ui"" 
        xmlns:pe=""http://primefaces.org/ui/extensions"" 
        lang=""en""> 

<h:head> 
</h:head> 
<h:body> 

        <div class=""container""> 
        
                <div class=""row""> 
                        <div id=""workspace""> 
                                <h:form id=""taskListForm"" prependId=""false""> 
                                        <custom:buttonSelectBox compId=""myLinksMenu"" defaultText=""2222""> 
                                                <f:facet name=""content""> 
                                            <ul> 
                                                <li><a href=""#"">My Preferences</a></li> 
                                        </ul> 
                                        <ul> 
                                                <li><a href=""#"">My Profile</a></li> 
                                            <li><a href=""#{facesContext.externalContext.requestContextPath}/logout"">Logout</a></li> 
                                        </ul> 
                                                </f:facet> 
                                        </custom:buttonSelectBox> 
                                
                                        <h:commandButton action=""#{testBean.buttonAction}"" value=""Click ME"" /> 
                                </h:form> 
                        </div>         
                </div> 
        </div> 
        
</h:body> 
</html> ",MYFACES-3668
"We have set the parameter 'javax.faces.INTERPRET_EMPTY_STRING_SUBMITTED_VALUES_AS_NULL' to tr.

Scenario:
I have a required input field. I type in a value and submit it. Then I remove the value and try to submit. As expected the validation fails. But now the old value is rendered again.

The reason is that other parts rendering the input test whether submittedValue is null and if so render the value.

If the named parameter is true UIInput set the submittedValue to null if is empty, not only internally during validation method working.

There is a comment in UIInput saying that 'setSubmittedValue(null)' is wrong. Maybe it is wrong and the line should be removed? If I remove it, the behavior is as expected and the empty value is rendered.

----
// Begin new JSF 2.0 requirement (INTERPRET_EMPTY_STRING_SUBMITTED_VALUES_AS_NULL)
if (shouldInterpretEmptyStringSubmittedValuesAsNull(context) && isEmptyString(submittedValue))
{   
    // -= matzew = setSubmittedValue(null) is wrong, see:
    // https://javaserverfaces-spec-public.dev.java.net/issues/show_bug.cgi?id=671
    setSubmittedValue(null);
    submittedValue = null;
}
// End new JSF 2.0 requirement (INTERPRET_EMPTY_STRING_SUBMITTED_VALUES_AS_NULL)",MYFACES-3667
"There is a security setting which allows to turn off the native XMLHttpRequest, luckily for such browsers the activeX fallback works.
",MYFACES-3666
"Suppose this example:

ex1.xhtml

<ui:composition template=""/META-INF/templates/template1.xhtml"">
  <f:metadata>
    <f:viewParam name=""id""/>
  </f:metadata>
  <ui:define name=""container"">
    <h1>Myfaces Examples</h1>
    <h:messages/>
    <h:form id=""mainForm"">
        <h:commandButton value=""POSTBACK""/>
    </h:form>
  </ui:define>
</ui:composition>

The template page (template1.xhtml) includes the content under ""container"" section but note f:metadata is outside that part so it is not included. 

The compilation suppose 2 steps:

- Build a view metadata facelet, which only has what's inside <f:metadata> section, no matter where is it.
- Build a normal facelet, which builds the component tree itself.

In this case, when the normal facelet is applied, the section under f:metadata is removed by facelets refresh algorithm, because it is not included in that facelet. It is an effect that is difficult to see, but it appear when you have a preRenderView listener or in the tests using JSF 2.2 f:viewAction.

The spec javadoc suggest do this instead:

<ui:composition template=""/META-INF/templates/template1.xhtml"">
  <ui:define name=""metadata"">
    <f:metadata>
        <f:viewParam name=""id""/>
    </f:metadata>
    <!-- ..... -->
  </ui:define>

And add in the template on the top level a simple <ui:insert name=""metadata/> to include the section when facelets process the page.

Other alternative is use this syntax:

<ui:composition 
    xmlns=""http://www.w3.org/1999/xhtml""
    xmlns:ui=""http://java.sun.com/jsf/facelets""
    xmlns:h=""http://java.sun.com/jsf/html""
    xmlns:f=""http://java.sun.com/jsf/core"">
<f:metadata>
        <f:viewParam name=""id""/>
</f:metadata>
<ui:decorate template=""template1.xhtml"">

It also works but the point is f:metadata is never inside a <c:if> section or any other that changes the tree structure dynamically, because the compilation suppose only it should be located at the top page level and not in a template client.

So, the first syntax should be valid, and its more, even put f:metadata outside ui:composition should work, because the syntax is smaller.

The proposed fix is exclude f:metadata facet from mark/delete algorithm, just adding some lines in DefaultFacelet.",MYFACES-3665
"In the last months, I have been doing some investigations around ""stateless JSF"" ideas. The intention is try to find ways to improve MyFaces Core performance as much as possible, without lose all those nice features we all are used to.

In summary, the justification around stateless JSF is that, if it is possible to cut the build view time from a request, there will be an improvement from both speed and memory perspective. This is true, but only to some point, because the response time for a request is given by the build view, validation/invoke application and render response time. 

To get to the same goal, without sacrifice JSF stateful behavior, other improvements has been already done (cache EL expressions, cache ids, make tree structure lighter, ...). The idea is cache that ""stateless information"" into a place where it can be reused effectively, which in this case is inside Facelet abstract syntax tree (AST). This has worked well so far. The side effects of enable these optimizations has been analysed, and there is a good understanding about this.

In few words, the basic idea about stateless JSF as proposed originally by Rudi Simic in his blog is this:

Mark the view as stateless using some attribute.
Use a pool of views, because views are not thread safe.
Before store the view in the pool, use a visitTree call to reset the fields.

Unfortunately, it was quickly found that the implementation proposed requires a better view pool and try to reset the fields is not fail-safe, because the component tree also stores more than just the input field values. Additionally, it doesn't provide a way to use it for dynamic views.

Provide a thread safe implementation of UIComponent that can be reused across threads is not a  good solution, because anyway there is some information that is inside UIComponent and should be stored per thread, and precisely UIComponent is a place specifically designed to store that information.

Based on the previous background, the big question is if a solution based on object pooling pattern can be done effectively for a web framework like JSF. A good description of the technique and its trade-off can be found at:

http://en.wikipedia.org/wiki/Object_pool_pattern 

In few words, the proposal is go ""Beyond JSF Stateless Mode"", and instead blame the state, make it your friend. Let's just take advantage of the stateful nature of JSF to allow reuse views fully or partially. 

How? 

- PSS algorithm can be used to check if a view has been modified or not, checking its state. So, it can be used to check which components has state, and if it is possible to provide a way to reset the state of a component to the initial state set by the first markInitialState(), restore the state is possible.

-If the view cannot be reset fully, it is possible to use facelets refreshing algorithm and reuse a view partially.

- Add some additional code to recover a view instance when it is discarded, and store it into the view pool. This requires some changes over NavigationHandlerImpl, because it is not possible to reuse a view and store it in the pool that is still on usage, so it is necessary to do a ""deferred navigation"", changing the default ActionListenerImpl and ensure handleNavigation() is called before end invoke application phase but outside the visitTree() call.

- In MyFaces there exists the concept of FaceletState. It is possible to use this concept and cache even dynamic views, because each different FaceletState can identify an specific view structure. 
",MYFACES-3664
"In JSF 2.2 spec there is a change related to UIViewRoot.createUniqueId(). The javadoc says this:

""... Generate an identifier for a component. The identifier will be prefixed with UNIQUE_ID_PREFIX, and will be unique within the non-NamingContainer child sub-trees of this UIViewRoot. ...""

Thinking in MYFACES-3660, this fact becomes more evident. I think we should not wait to 2.2 and instead implement this is 2.1.x/2.0.x branches because it will improve the stability of the component tree under dynamic addition/removal.

The suggested solution is do something like this:

j_id__v_1
j_id__v_2
j_id__v_3
j_id__v_4
....

This solution will keep ids small and will not cause any conflict with facelet created components or components that receive the ids through UniqueIdVendor/NamingContainer hierarchy:

j_id1
j_id2
j_id3
j_id4",MYFACES-3663
"It probably is better to host the cms part of our site near the svnpubsub site.
",MYFACES-3662
"outputFormat doesn't replace parameters if there is a simple quote [']in text.

We have to double the quote [''] to have parameters substitution.",MYFACES-3661
"A problem related to @ResourceDependency has been mentioned on:

http://stackoverflow.com/questions/13526624/duplicate-id-error-with-partial-state-saving-and-myfaces-codi

CODI add a component called WindowContextIdHolderComponent in ResponseWriter.startDocument(), and later a UIViewRoot.createUniqueId() call is done when getClientId() is called from the code that checks for duplicate ids. 

The problem is the code that process @ResourceDependency annotations in ApplicationImpl object let UIViewRoot.addComponentResource() internals to call createUniqueId(). In the example proposed, there is a dynamic block that changes the resources added at an specific moment of time, and since by PSS saving algorithm, restore view phase calls buildView() before restore the initial state, the count of uniqueIdCounter in UIViewRoot is never restored, and there is a chance that the same id of the one assigned to WindowContextIdHolderComponent can be set to a component resource added by @ResourceDependency effect.

The problem of how generate ids is well known and has been studied for a long time. A general solution for facelets was committed in MYFACES-3329, and has worked well so far.

In few words, we need to generate predictable component ids to make PSS algorithm reliable, otherwise it will be problems related to state saving that are very difficult to track down and solve. In the other hand, PSS algorithm impose some restrictions over the view that conflicts with dynamic manipulations of the component tree.

I think the solution for this one is ensure all components created inside facelets vdl.buildView has unique ids, doing some changes over UIViewRoot.createUniqueId and changing @ResourceDependency processing in ApplicationImpl, so if facelets is processing the current view use FaceletCompositionContext.generateUniqueComponentId() to set an Id. Since @ResourceDependency depends on the component tree structure, the ids will now contains the information related to the tree structure itself (in the generated id), preventing duplicates.

In theory, if we can ensure that all components generated by facelets has a component id defined by facelets algorithm, createUniqueId will be let to components added programatically, so we can do some hack to restore the uniqueIdCounter for UIViewRoot on restore view phase before call vdl.buildView, and simulate the same behavior we had in JSF 1.2, without the side effects over the state and performance.

I think solutions using a HashMap using duplicates or random generators are out of discussion, because they will not ensure the predictability we need to get correct operation of PSS algorithm.",MYFACES-3660
"I am inserting a script 'X.js' dependent on a condition (c:if). The default case is to include it. If I change the underlying value within an action so that the condition evaluates to false, the script is still included. Also after any other following action.

Using F5 in Firefox the page is now rendered without the script.

The script 'X.js' was added to the view root and is never 'forgot' or removed. It is the same if the script is included in a composite component. In that case I even observed that the order of the scripts changes and the script 'X.js' is included before other basic scripts like jQuery on which 'X.js' depends.

----
<h:form id=""form"">
  <c:set var=""sessionScope"" value=""#{facesContext.externalContext.sessionMap}"" />
    
  <h:commandButton value=""deactivate""
      rendered=""#{empty sessionScope.__isActive_ or sessionScope.__isActive_}"">
      <f:setPropertyActionListener target=""#{sessionScope.__isActive_}"" value=""#{false}"" />
  </h:commandButton>
  <h:commandButton value=""activate""
      rendered=""#{not empty sessionScope.__isActive_ and not sessionScope.__isActive_}"">
      <f:setPropertyActionListener target=""#{sessionScope.__isActive_}"" value=""#{true}"" />
  </h:commandButton>
    
  <h:commandButton value=""do nothing"" />
    
  <h:outputScript library=""js"" name=""jQuery.js"" target=""body"" />
    
  <c:if test=""#{empty sessionScope.__isActive_ or sessionScope.__isActive_}"">
    BLA
    <h:outputScript library=""js"" name=""X.js"" target=""body"" />
    </c:if>      
</h:form>

----

Am I doing something wrong? Is there another (or better) way to include scripts conditionally?

(
If I change 'HtmlOutputScriptHandler' to set the script transient, it works in the first glance, but I don't know the impact...

@Override
public void onComponentPopulated(FaceletContext ctx, UIComponent c, UIComponent parent) {
    super.onComponentPopulated(ctx, c, parent);
    c.setTransient(true);
}
)",MYFACES-3659
Add default implementations for HTML_BASIC renderkit,MYFACES-3658
"We have a checkstyle violation in our 2.2 branch impl, this needs to be fixed",MYFACES-3657
"My beans are defined as follows:

   <managed-bean>
		<managed-bean-name>appManagerBean</managed-bean-name>
		<managed-bean-class>com.ibm.ws.jsf.beans.AppManagerBean</managed-bean-class>
		<managed-bean-scope>application</managed-bean-scope>
	</managed-bean>
     
	<managed-bean>
		<managed-bean-name>emailBean</managed-bean-name>
		<managed-bean-class>com.ibm.ws.jsf.beans.EmailBean</managed-bean-class>
		<managed-bean-scope>session</managed-bean-scope>
	</managed-bean>
    <managed-bean>
        <managed-bean-name>viewScopedBean</managed-bean-name>
        <managed-bean-class>com.ibm.ws.jsf.beans.ViewScopedManagedBean</managed-bean-class>
        <managed-bean-scope>view</managed-bean-scope>
        
        <managed-property>
        		<property-name>emailBean</property-name>
        		<value>#{emailBean}</value>
    		</managed-property>
	    	<managed-property>
        		<property-name>appManagerBean</property-name>
        		<value>#{appManagerBean}</value>
    		</managed-property>
          
    </managed-bean>

I've provided an application that reproduces this issue.  To reproduce follow these steps:

1) install application 
2) drive a request into the following URL <host>:<port>/<context-root>/ViewScopeTest1.jsf
3) leave the email field empty
4) press the submit button.
5) you should be taken to the error page
6) the following text should appear in the textArea but it does not ""Invalid Email: Email can Not be empty""

The second test ""ViewScopeTest2.jsf"" is similar it does not contain the binding attribute and just references a value from the ViewScoped bean and the problem can again be reproduced.  

It seems as though the AppManager errorMessage field is null but it has not been reset.  I would think that the application scoped bean would still be accessible even though the view scoped bean is out of scope.

If you set the SERIALIZE_STATE_IN_SESSION to false and redeploy the application then everything works as expected, which seems odd to me but if you un-comment this from the web.xml you'll see we get the text on the error page as expected.

I've been working to debug this issue and can't seem to figure out where the problem is in the MyFaces code.  I tested the same application on WAS and Tomcat to ensure that it was not something specific to a server.  It seems as though this is a implementation issue.

Any help that folks can provide would be greatly appreciated!!  ",MYFACES-3656
"We might check if we can get an even better performance by using a different serialisation strategy. This might heavily improve the performance of ClientSideStateSaving and ViewMap serialisation(if enabled).

There are a few alternative libraries like XStream and Kryo available:

* http://xstream.codehaus.org
* http://code.google.com/p/kryo/

Thomas from the OWB team did a nice benchmark for his clustering project:
http://code.google.com/p/memcached-session-manager/wiki/SerializationStrategyBenchmark

Definitely worth taking a look imo.",MYFACES-3655
"java.util.Random always locks and thus creates a bottleneck in heavy threaded server scenarios. In Java 7 a new ThreadLocalRandom got introduced which fixes that but we cannot use this as we still need to support java5 and 6.

The algorithm used in java.util.Random also is not the best in terms of spreading. 

I propose to introduce a small XorShift random generator which has a very good spreading and is vastly faster than java.util.Random as well.",MYFACES-3654
"When focus is own by an input element and an incoming partial update will update the element, the focus is removed from the element. Most often this occurs when validation is run for each input field and input is cleared if corresponding validation failed.",MYFACES-3653
"Currently we have a few different viewkey generator implementations. Those got added only in 2.1.9. Before that the only had a TicketCounter in each Session. 

The original implementation also had no viewId in the key.
If you think about it, then it makes no sense at all to add the viewId. Despite it's an int hashCode we have 2 problems which completely trashes the purpose: 
a.) hashCode is not guaranteed to be unique
b.) the hashCode is always the same for the same view.

Think about an application with only one xhtml page. In that case the viewId would add no additional info.
With 4 pages you would only reduce the collision rate to over 25%. Since the application will most times mainly hit by a few entry points like index.html you gain barely anything from adding this information.

IF we have had problems with any collisions, then we shall add an XorShift random generator instead of the viewId. Leo, I didn't an issue report for such a problem. Do you have any tip for me where I can find that?",MYFACES-3652
"We currently have a few things in our ViewState handling which could get even further improved.
There are 3 main goals we achieve (in order of importance):

1.) security - it should not be easily possible to create state key clashes
2.) performance - we still use java 1.3 tricks and e.g. barely use java.util.concurrent
3.) memory - we shall keep the mem footprint as low as possible

 ",MYFACES-3651
"the current 2.2.x branch contains a few 2.2.0-SNAPSHOT dependencies and a few to 2.1.x. 
That all should get moved to 2.2.0-SNAPSHOT",MYFACES-3650
myfaces-shared-impl hardcoded unpacks mf-2.1.1 right now. How can this work?,MYFACES-3649
some jsf files contain illegal UTF characters and thus our 2.2 build is broken,MYFACES-3648
"JspStateManagerImpl and a few other classes usage got remove a long time it seems. Nontheless this classes still are in the code and make it hard to read and maintain the codebase. 

Let's just drop it!",MYFACES-3647
This seems to be an unused leftover from ancient times. Let's get rid of it.,MYFACES-3646
"We currently have a few things in our ViewState handling which could get even further improved.
There are 3 main goals we achieve (in order of importance):

1.) security - it should not be easily possible to create state key clashes
2.) performance - we still use java 1.3 tricks and e.g. barely use java.util.concurrent
3.) memory - we shall keep the mem footprint as low as possible

 ",MYFACES-3645
Currently our ViewState handling is pretty complicated. We shall review it and get rid of unused stuff.,MYFACES-3644
there is an apache parent 12 available already which upgrades lots of system dependencies.,MYFACES-3643
"maven-checkstyle-plugin has an option to output checkstyle errors to the console.

That makes it easier to fix them.
I'll enable this configuration in our master pom.",MYFACES-3642
"This exception is thrown from ViewDeclarationLanguageFactoryImpl.getViewDeclarationLanguage(String viewId):

javax.faces.FacesException: Cannot find a valid PDL for view id /hxome.view.xml
        org.apache.myfaces.view.ViewDeclarationLanguageFactoryImpl.getViewDeclarationLanguage(ViewDeclarationLanguageFactoryImpl.java:93)
        org.apache.myfaces.application.ViewHandlerImpl.getViewDeclarationLanguage(ViewHandlerImpl.java:179)
        org.apache.myfaces.shared.application.DefaultViewHandlerSupport.checkResourceExists(DefaultViewHandlerSupport.java:546)
        org.apache.myfaces.shared.application.DefaultViewHandlerSupport.handleSuffixMapping(DefaultViewHandlerSupport.java:484)
        org.apache.myfaces.shared.application.DefaultViewHandlerSupport.calculateViewId(DefaultViewHandlerSupport.java:114)
        org.apache.myfaces.application.ViewHandlerImpl.deriveLogicalViewId(ViewHandlerImpl.java:118)
        org.apache.myfaces.lifecycle.RestoreViewExecutor.execute(RestoreViewExecutor.java:157)
        org.apache.myfaces.lifecycle.LifecycleImpl.executePhase(LifecycleImpl.java:170)
        org.apache.myfaces.lifecycle.LifecycleImpl.execute(LifecycleImpl.java:117)
        javax.faces.webapp.FacesServlet.service(FacesServlet.java:197)

Instead throw an exception it return null, which indicates that the viewId has not associate VDL. Other algorithms in myfaces has already expect that, like DefaultViewHandlerSupport.checkResourceExists()",MYFACES-3641
"Due to the pending documentation changes until the years end we have to create the cms infrastructure.
",MYFACES-3640
The oam.Flash.RENDERMAP.TOKEN cookie does not have the HttpOnly flag set.  Many security policies require that cookies have HttpOnly set if possible.,MYFACES-3639
"I'm getting the following NPE when having a request which leads to a 404:
{code}
Nov  9 09:00:45 j02 java.lang.NullPointerException
Nov  9 09:00:45 j02      at org.apache.myfaces.renderkit.ServerSideStateCacheImpl$CounterSessionViewStorageFactory.createSerializedViewKey(ServerSideStateCacheImpl.java:1413)
Nov  9 09:00:45 j02      at org.apache.myfaces.renderkit.ServerSideStateCacheImpl$CounterSessionViewStorageFactory.createSerializedViewKey(ServerSideStateCacheImpl.java:1392)
Nov  9 09:00:45 j02      at org.apache.myfaces.renderkit.ServerSideStateCacheImpl.saveSerializedViewInServletSession(ServerSideStateCacheImpl.java:318)
Nov  9 09:00:45 j02      at org.apache.myfaces.renderkit.ServerSideStateCacheImpl.saveSerializedView(ServerSideStateCacheImpl.java:1036)
Nov  9 09:00:45 j02      at org.apache.myfaces.renderkit.html.HtmlResponseStateManager.saveState(HtmlResponseStateManager.java:149)
Nov  9 09:00:45 j02      at org.apache.myfaces.application.StateManagerImpl.saveView(StateManagerImpl.java:253)
Nov  9 09:00:45 j02      at org.apache.myfaces.shared.view.JspViewDeclarationLanguageBase.renderView(JspViewDeclarationLanguageBase.java:221)
Nov  9 09:00:45 j02      at org.apache.myfaces.application.ViewHandlerImpl.renderView(ViewHandlerImpl.java:285)
Nov  9 09:00:45 j02      at javax.faces.application.ViewHandlerWrapper.renderView(ViewHandlerWrapper.java:59)
Nov  9 09:00:45 j02      at javax.faces.application.ViewHandlerWrapper.renderView(ViewHandlerWrapper.java:59)
Nov  9 09:00:45 j02      at javax.faces.application.ViewHandlerWrapper.renderView(ViewHandlerWrapper.java:59)
Nov  9 09:00:45 j02      at org.apache.myfaces.tomahawk.application.ResourceViewHandlerWrapper.renderView(ResourceViewHandlerWrapper.java:93)
Nov  9 09:00:45 j02      at javax.faces.application.ViewHandlerWrapper.renderView(ViewHandlerWrapper.java:59)
Nov  9 09:00:45 j02      at org.apache.myfaces.lifecycle.RenderResponseExecutor.execute(RenderResponseExecutor.java:116)
Nov  9 09:00:45 j02      at org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:241)
Nov  9 09:00:45 j02      at org.apache.myfaces.extensions.cdi.jsf2.impl.listener.phase.CodiLifecycleWrapper.render(CodiLifecycleWrapper.java:126)
Nov  9 09:00:45 j02      at javax.faces.webapp.FacesServlet.service(FacesServlet.java:199)
{code}",MYFACES-3638
"Roger Kitain from the Mojarra team has notified me towards a bug which we also have in MyFaces. Currently all script tags in the response mockup are evaled. This is wrong, there are script tags which we cannot eval like text/template they should be pushed into the dom as is.
I personally think, that only text/javascript/ecmascript in all its combinations should be manually evaled for now to avoid problems with the js eval function running into a language which it does not understand.
",MYFACES-3637
"Add new Web Context Parameter to set Resource Buffer Size to prevent the ""WARNING: Cannot set header. Response already committed."" message for JSF resources.  This message in the log is known to occur on WebSphere 7 but may also occur on other application servers.

For more information see MYFACES-3104.",MYFACES-3636
"It is possible to reorganize a little bit the code and with some simple tricks, we can save some time when expressions containing #{cc} and #{cc.attrs} are evaluated. At the end, this will improve composite components performance.",MYFACES-3635
"Using ui:param to access some bean with it ""shortname"" works on Mojarra, but doesn't work on Myfaces

<f:metadata>
  <ui:param name=""usedBean"" value=""#{MyLongNameBean}""/>
<f:metadata>

<ui:composition template=""template.xhtml"">
    <ui:param name=""title"" value=""#{usedBean.text['account.find.title']}""/>
    <ui:define name=""content"">
...usedBean in EL experssions many times
    </ui:define>
</ui:composition>

all EL exp. where is usedBean resolved to null. On Mojarra 'usedBean' calculated as MyLongNameBean and works correctly",MYFACES-3634
"Hi,

We are currently doing performance testing for our application for 500 - 2500 users . 
We are using RPT tool for testing.We are getting too many view expired exception in the logs
under heavy load. If the load is below 250 then this does not appears.We have a login page where 
the user is authenticated and the home page is displayed.After that we have logout which goes to another
logout page . In logout page we have inputhidden where we call a method to invalidate 
session. The code of logout.xhtml and the method for inputhidden field is as follows .

<!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Transitional//EN""
""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"">
<html lang=""en""
xmlns=""http://www.w3.org/1999/xhtml""
xmlns:h=""http://java.sun.com/jsf/html""
xmlns:f=""http://java.sun.com/jsf/core""
xmlns:ui=""http://java.sun.com/jsf/facelets"">
<h:head>
<h:outputStylesheet library=""css"" name=""ultimatix.css"" />
</h:head>
<h:body>
<h:form>	
	<table border=""0"" cellpadding=""5"" width=""700"" align=""center"">
		<tr>

		</tr>
		
		<tr>
			<td align=""center""><font style=""color: crimson; font-size: small; font-weight: bold; text-align: center"">
				</font></td>
		</tr>
		<tr>
			<td align=""center""><font style=""color: cornflowerblue; font-size: small; font-weight: normal; text-align: center"">Please close this window and Open link again
				</font></td>
		</tr>
		<tr>
			<td align=""center""><input align=""middle"" type=""button"" value=""Close Window"" onclick=""javascript:window.close();"" class=""buttonText"" />
	</td>
		</tr>
	</table>
	<h:inputHidden value=""#{HeavyLoadBean.heavyLoad}""></h:inputHidden>

	</h:form>
</h:body>
</html>

Code for session invalidate .

public class HeavyLoadBean {
	private String heavyLoad = null;
	
	public String getHeavyLoad(){		
		HttpServletRequest req= (HttpServletRequest)FacesContext.getCurrentInstance().getExternalContext().getRequest();
		weblogic.servlet.security.ServletAuthentication.logout(req);
		weblogic.servlet.security.ServletAuthentication.invalidateAll(req);
		return """";
	}
	public void setHeavyLoad(String str){
		
	}


We have also tried removing the session invalidate calls. But still same error comes. We have
 set state saving method as client . 

Please suggest how we can avoid this error. We dont want to catch and handle it , rather we want to prevent it from occurring.",MYFACES-3633
"http://stackoverflow.com/questions/12951850/richtabpanel-does-not-work-with-textarea

The point is that my property is named 'text', and i have also a resource bundle called 'text'. Additionally in the javax.el.CompositeELResolver the org.apache.myfaces.el.unified.resolver.ResourceBundleResolver is before the javax.el.BeanELResolver.

And the org.apache.myfaces.el.unified.resolver.ResourceBundleResolver.setValue(ELContext context, Object base, Object property, Object value) method does NOT check the base object and just looks for a resource bundle named as the property, in my case it finds something and peng! Exception!

It should check (base != null) and just leave.",MYFACES-3632
"code to reproduce:
{code:xml}
<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Transitional//EN""
        ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"">
<html xmlns=""http://www.w3.org/1999/xhtml""
      xmlns:h=""http://java.sun.com/jsf/html""
      xmlns:a4j=""http://richfaces.org/a4j""
      xmlns:c=""http://java.sun.com/jsp/jstl/core""
      xmlns:rich=""http://richfaces.org/rich"" >

  <h:head><title>Test</title></h:head>
  <h:body>
    <h1>Test</h1>
    <h:form id=""form"" >
      <rich:tabPanel switchType=""ajax"" >
        <rich:tab name=""tab1"" header=""tab1"">
          Tab1
          <h:selectBooleanCheckbox value=""#{testBean.check}"" />
        </rich:tab>
        <rich:tab name=""tab2"" header=""tab2"">
          <c:if test=""#{testBean.check}"">
            <h:inputText id=""myId"" />
            <h:inputText id=""myId"" />
          </c:if>
        </rich:tab>
      </rich:tabPanel>
    </h:form>
    <a4j:log />
  </h:body>    
</html>
{code}

check the checkbox and change the tab to obtain:
{code}
info [16:20:14.159]: Received 'begin' event from <div id=form:j_id2114509110_7e08d99f class=rf-tab ...>
info [16:20:14.213]: Received 'beforedomupdate' event from <div id=form:j_id2114509110_7e08d99f class=rf-tab ...>
info [16:20:14.215]: Server returned responseText: <?xml version=""1.0"" encoding=""utf-8""?><partial-response><error><error-name>java.lang.IllegalStateException</error-name><error-message><![CDATA[component with duplicate id ""form:myId"" found]]></error-message></error></changes></partial-response>
error[16:20:14.218]: Received 'error@malformedXML' event from <div id=form:j_id2114509110_7e08d99f class=rf-tab ...>
error[16:20:14.218]: [200] undefined: undefined
info [16:20:14.220]: Received 'complete' event from <div id=form:j_id2114509110_7e08d99f class=rf-tab ...>
{code}

I think the problem is somewhere in the org.apache.myfaces.shared.context.AjaxExceptionHandlerImpl class but not sure.
",MYFACES-3631
"There is a small bug on PartialViewContextImpl.findHeadComponent. It says this:

    private UIComponent findHeadComponent(UIViewRoot root)
    {
        for (UIComponent child : root.getChildren())
        {
            if (child instanceof HtmlHead)
            {
                return child;
            }
            else
            {
                for (UIComponent grandchild : child.getChildren())
                {
                    if (child instanceof HtmlHead)
                    {
                        return child;
                    }
                }
            }
        }
        return null;
    }

but it should be this:

    private UIComponent findHeadComponent(UIViewRoot root)
    {
        for (UIComponent child : root.getChildren())
        {
            if (child instanceof HtmlHead)
            {
                return child;
            }
            else
            {
                for (UIComponent grandchild : child.getChildren())
                {
                    if (grandchild instanceof HtmlHead)
                    {
                        return grandchild;
                    }
                }
            }
        }
        return null;
    }

Usually h:head and h:body are direct children of UIViewRoot, so it is difficult to see any problem. This is only relevant when org.apache.myfaces.STRICT_JSF_2_REFRESH_TARGET_AJAX web config param is set to true.",MYFACES-3630
"I'm trying to move all my common web.xml content from my 12 webapps in an EAR into a web-fragment.xml which gets referenced.

MyFaces fails with the following Exception if the FacesServlet is defined in a web-fragment rather than web.xml:


>If you did that and find nothing, the mistake might be due to the fact that you use some special  
>web-containers which do not support registering context-listeners via TLD files and a context listener is not 
> setup in your web.xml.
> A typical config looks like this;
> <listener>
>  <listener-class>org.apache.myfaces.webapp.StartupServletContextListener</listener-class>
> </listener>

In general the StartupServletContextListener defined in JSF-2.1 is pure PITA as it does crash apps which do not have any JSF content at all!.

We should scan if we either find a faces-config.xml or any *.xhtml files in the app and if not we shall not start JSF.",MYFACES-3629
"Doing some perf tests, I notice some methods in DefaultViewHandlerSupport and DefaultRestoreViewSupport are called multiple times, but always return the same value over and over, because they are based on initialization params, which does not change over application lifetime.

The solution is do some small changes over these two classes, passing FacesContext as constructor and calculating those values only the first time those classes are created.",MYFACES-3628
"The way isMultipartCandidate is implemented causes a javascript error on older ies, this needs to be fixed, the bug is trivial because in a normal non fileupload case which is the standard ppr case, this function is never called.
",MYFACES-3627
"When f:ajax is used to initiate a request, and '@none' is the execution target, JSF spec indicates that the 'java.faces.partial.execute' request parameter should be left blank. This is also indicated by comments in MyFaces javascript and in the following issue:

https://issues.apache.org/jira/browse/MYFACES-2914

However, trace the same code where the behaviour is described in comments, and you'll find the following:

_transformList: function(passThrgh, target, srcStr, form, elementId) {
    var _Lang = this._Lang;
    //this is probably the fastest transformation method
    //it uses an array and an index to position all elements correctly
    //the offset variable is there to prevent 0 which results in a javascript
    //false
    var offset = 1,
            vals = (srcStr) ? srcStr.split(/\s+/) : [],
    idIdx = (vals.length) ? _Lang.arrToMap(vals, offset) : {},

            //helpers to improve speed and compression
            none = idIdx[this.IDENT_NONE],
            all = idIdx[this.IDENT_ALL],
            theThis = idIdx[this.IDENT_THIS],
            theForm = idIdx[this.IDENT_FORM];

    if (none) {
        //in case of none only one value is returned
        passThrgh[target] = this.IDENT_NONE;
        return passThrgh;
    }
    ...


Which instead of setting a empty string for the 'javax.faces.partial.execute' request param, sets '@none' itself.

'@none' is submitted as the value of 'javax.faces.partial.execute', which causes the executing VisitTreeCallback to have the set of ids to execute ['@none', 'form3e:button']. 'form3e:button' is the value of  'javax.faces.source', and is the client id of the submitting element. This visit causes listeners and input on the submitting element to decode. This is erroneous behaviour for a request with '@none' as the sole target.

When using manual JavaScript debugging to prevent the offending '@none' request parameter, the request correctly did not execute the submitting element.

I will be attaching a proposed patch to resolve this issue as well as a reduced test case.

",MYFACES-3626
"MYFACES-3251 is actual again in 2.0.15 and 2.1.9.

https://issues.apache.org/jira/browse/MYFACES-3251
",MYFACES-3625
,MYFACES-3624
"I have seen this trick from Trinidad long time ago. I tested it and it is worth to do it, because you can skip some unnecessary String instances created by toLowerCase(), and instead use equalsIgnoreCase(). From memory perspective it is good and form speed perspective it suppose an small improvement.",MYFACES-3623
"i have several tested extensions from my apache-extras sideproject which need to be merged into the 2.2 branch, this is done under this task",MYFACES-3622
"We need a myfaces 2.2 branch for prototyping various 2.2 issues out, the branch should be created from the windowId branch.
",MYFACES-3621
"If you pass down an explicit @this in f:ajax as execute part (which is not needed since it is appended automatically) we will get a javascript error, due to the fact that the param resolution resolves only one @this to the issuing component id. This needs to be fixed.",MYFACES-3620
"I have notice the need to define a special property or attribute to indicate PSS algorithm when a component has been created by facelets. In practice we use the following fragment in DefaultFaceletsStateManagementStrategy:

                if (!isRefreshOnTransientBuildPreserveState() &&
                    FaceletCompositionContext.getCurrentInstance(_facesContext) != null &&
                    (component.getAttributes().containsKey(ComponentSupport.MARK_CREATED) ||
                     component.getAttributes().containsKey(ComponentSupport.FACET_CREATED_UIPANEL_MARKER)) ||
                     (component.getId() != null && component.getId().length() > 16 && 
                      component.getId().startsWith(UIViewRoot.UNIQUE_ID_PREFIX) && 
                      component.getId().endsWith(""__f_cc_facet"") )
                    )

It is a complex check for something that should be simple. The idea is reduce that to something like this:

                if (!isRefreshOnTransientBuildPreserveState() &&
                    FaceletCompositionContext.getCurrentInstance(_facesContext) != null &&
                    (component.getAttributes().containsKey(ComponentSupport.MARK_CREATED) ||
                     component.getAttributes().containsKey(ComponentSupport.COMPONENT_ADDED_BY_HANDLER_MARKER))
                    )

and create oam.vf.addedByHandler as special facelets attribute just like oam.vf.MARK_ID or MARK_CREATED is, to make facelets refreshTransientBuild faster.

It is required to do some changes in some locations, specially when ComponentSupport.FACET_CREATED_UIPANEL_MARKER is used, to set that one and ComponentSupport.COMPONENT_ADDED_BY_HANDLER_MARKER together. It is not conveniento to mix both because both are used in different situations.",MYFACES-3619
"The ajax response is missing a new Error param in the error handling of replaceHTMLItem, the result in an error case is an invalid error message of error._mfInternal not found.
",MYFACES-3618
"When using a f:viewParm on a page and using an EL Expression in the name attribute of the f:viewParm the following NullPointerException occurs:

java.lang.NullPointerException
	at org.apache.myfaces.util.AbstractAttributeMap.get(AbstractAttributeMap.java:94)
	at javax.faces.component.UIViewParameter.decode(UIViewParameter.java:84)
	at javax.faces.component.UIComponentBase.processDecodes(UIComponentBase.java:1377)
	at javax.faces.component.UIInput.processDecodes(UIInput.java:188)
	at javax.faces.component.UIComponentBase.processDecodes(UIComponentBase.java:1371)
	at javax.faces.component.UIComponentBase.processDecodes(UIComponentBase.java:1365)
	at javax.faces.component.UIViewRoot._processDecodesDefault(UIViewRoot.java:1406)
	at javax.faces.component.UIViewRoot.access$400(UIViewRoot.java:74)
	at javax.faces.component.UIViewRoot$ApplyRequestValuesPhaseProcessor.process(UIViewRoot.java:1497)
	at javax.faces.component.UIViewRoot._process(UIViewRoot.java:1372)
	at javax.faces.component.UIViewRoot.processDecodes(UIViewRoot.java:759)
	at org.apache.myfaces.lifecycle.ApplyRequestValuesExecutor.execute(ApplyRequestValuesExecutor.java:38)
	at org.apache.myfaces.lifecycle.LifecycleImpl.executePhase(LifecycleImpl.java:171)
	at org.apache.myfaces.lifecycle.LifecycleImpl.execute(LifecycleImpl.java:118)

For example the following will work:

<f:viewParam name=""firstName"" value=""#{userBean.user.firstName}"" />

but this would fail:

<f:viewParam name=""#{userBean.paramName1}"" value=""#{userBean.user.firstName}"" />

I'm willing to code up a fix for this issue, but I need a bit of help figuring out where the fix needs to go.  It seems the EL expression works fine in the value attribute just not in the name attribute.  However according to the JavaDocs name can be an EL Expression.


",MYFACES-3617
"After an AJAX request in Javascript the method _AjaxResponse.replaceHtmlItem() is called which raises an error if the item to be replaced is not found. Here the method _raiseError() is called without the 'new Error()' as first argument as in all other occurrences:

throw this._raiseError(_Lang.getMessage(""ERR_ITEM_ID_NOTFOUND"", null, ""_AjaxResponse.replaceHtmlItem"", (itemIdToReplace) ? itemIdToReplace.toString() : ""undefined""));

This works:

throw this._raiseError(new Error(), _Lang.getMessage(""ERR_ITEM_ID_NOTFOUND"", null, ""_AjaxResponse.replaceHtmlItem"", (itemIdToReplace) ? itemIdToReplace.toString() : ""undefined""), ""replaceHtmlItem"");",MYFACES-3616
"I get following error in Tomcat log after stopping my web app:

24.09.2012 15:56:11 org.apache.catalina.loader.WebappClassLoader clearThreadLocalMap
SCHWERWIEGEND: The web application [/foo] created a ThreadLocal with key of type [java.lang.ThreadLocal] (value [java.lang.ThreadLocal@694c68ff]) and a value of type [org.apache.myfaces.context.servlet.ServletExternalContextImpl] (value [org.apache.myfaces.context.servlet.ServletExternalContextImpl@46a53092]) but failed to remove it when the web application was stopped. This is very likely to create a memory leak.",MYFACES-3615
"When switch the JSF implementation from Majora to MyFaces, the getWrappedData() return null ",MYFACES-3614
"Consider the following component (simpleCommandButton.xhtml)

<ui:component xmlns=""http://www.w3.org/1999/xhtml"" 
	xmlns:ui=""http://java.sun.com/jsf/facelets""
  	xmlns:h=""http://java.sun.com/jsf/html"" 
  	xmlns:p=""http://primefaces.org/ui""  	
	xmlns:cc=""http://java.sun.com/jsf/composite""
  	>

	<cc:interface>
		<cc:attribute name=""action""/>
		<cc:attribute name=""actionListener""/>
        <cc:attribute name=""value""/>        
	</cc:interface>
	<cc:implementation>		
		<h:commandButton value=""#{cc.attrs.value}"" action=""#{cc.attrs.action}"" actionListener=""#{cc.attrs.actionListener}"" immediate=""true"">			
			<cc:insertChildren/>
		</h:commandButton>
	</cc:implementation>
</ui:component>

And in your page:
<myLib::simpleCommandButton value=""Test"" action=""exit""/>


When clicking on the button a NPE occurs:

java.lang.NullPointerException
	at org.apache.myfaces.view.facelets.el.ValueExpressionMethodExpression.invoke(ValueExpressionMethodExpression.java:68)
	at org.apache.myfaces.view.facelets.el.ContextAwareTagMethodExpression.invoke(ContextAwareTagMethodExpression.java:96)
	at javax.faces.event.MethodExpressionActionListener.processAction(MethodExpressionActionListener.java:83)
	at javax.faces.event.ActionEvent.processListener(ActionEvent.java:51)
	at javax.faces.component.UIComponentBase.broadcast(UIComponentBase.java:418)
	at javax.faces.component.UICommand.broadcast(UICommand.java:103)
	at javax.faces.component.UIViewRoot._broadcastAll(UIViewRoot.java:1028)
	at javax.faces.component.UIViewRoot.broadcastEvents(UIViewRoot.java:286)
	at javax.faces.component.UIViewRoot._process(UIViewRoot.java:1375)
	at javax.faces.component.UIViewRoot.processDecodes(UIViewRoot.java:759)
	at org.springframework.faces.webflow.FlowLifecycle.invokePhase(FlowLifecycle.java:118)
	at org.springframework.faces.webflow.FlowLifecycle.execute(FlowLifecycle.java:70)
	at org.springframework.faces.webflow.JsfView.processUserEvent(JsfView.java:120)
	at org.springframework.webflow.engine.ViewState.handleEvent(ViewState.java:226)
	at org.springframework.webflow.engine.ViewState.resume(ViewState.java:196)
	at org.springframework.webflow.engine.Flow.resume(Flow.java:545)
	at org.springframework.webflow.engine.impl.FlowExecutionImpl.resume(FlowExecutionImpl.java:258)
	at org.springframework.webflow.executor.FlowExecutorImpl.resumeExecution(FlowExecutorImpl.java:169)
	at org.springframework.webflow.mvc.servlet.FlowHandlerAdapter.handle(FlowHandlerAdapter.java:183)
	at org.springframework.faces.webflow.JsfFlowHandlerAdapter.handle(JsfFlowHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:789)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:643)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1331)
	at org.primefaces.webapp.filter.FileUploadFilter.doFilter(FileUploadFilter.java:79)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1302)
	at net.sf.ehcache.constructs.web.filter.GzipFilter.doFilter(GzipFilter.java:95)
	at net.sf.ehcache.constructs.web.filter.Filter.doFilter(Filter.java:86)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1302)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java

probably because of the missing (null) attribute ""actionListener"" in the source declaration.",MYFACES-3613
"Facelets algorithm usually takes almost all spaces in a page and output them directly. The algorithm only trim the spaces on the right, but it doesn't do anything about the spaces/tabs on the left.

Thinking about how to solve this properly, I notice html markup is compiled in a list of Instruction instances, that follows a command pattern to do calls over ResponseWriter. It is possible to use that information and decide when remove all spaces between two elements or when just let one space or line break in between or at the begin/end of the html markup.

This optimization can reduce effectively the amount of information sent to the client with minimal side effects. Anyway, to keep compatibility with the reference implementation (and keep running some tests) we cannot enable this one by default.

The proposal is add an extra element in faces-config file like this:

<faces-config xmlns=""http://java.sun.com/xml/ns/javaee""
                         xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
                         xsi:schemaLocation=""http://java.sun.com/xml/ns/javaee
                         http://java.sun.com/xml/ns/javaee/web-facesconfig_2_1.xsd""
                         version=""2.1"">
<faces-config-extension>
    <facelets-processing>
        <file-extension>.xhtml</file-extension>
        <process-as>xhtml</process-as>
        <oam-compress-spaces>true</oam-compress-spaces>
    </facelets-processing>
</faces-config>

Suggestions are welcome.",MYFACES-3612
"There's a problem in the validation phase when you mix ajax action and a binding value in the same form. For example I have this simple form:
<h:form id=""form"">
	<h:inputText id=""text"" value=""#{controles.text}"" validator=""#{controles.validateText}"" 
	binding=""#{controles.textComponent}""/>		
	<br/><br/>
	<h:commandButton value=""validate"">
		<f:ajax event=""click"" render=""text"" listener=""#{controles.clearText}"" execute=""@form"" immediate=""false""/>
	</h:commandButton>
</h:form>

And when validate button is clicked the validator method validateText is called twice the first time, 3 times for the second submit and one more time each time the ajax action is fired.


",MYFACES-3611
"I'm creating this as a JIRA issue so that I can attach a test case. However it behaves the same on Mojarra as on MyFaces so possibly it is 'by design'?

My question is this:

* If I dynamically create UIComponents using Application.createComponent, I find they automatically add any dependent resources (JS/CSS) to the h:head. This is fantastic.

* If I dynamically create ClientBehaviours using Application.createBehavior, no dependent resources get added.

Am I supposed to add such resources manually? For example:

   UIOutput js = new UIOutput();
   js.setRendererType(""javax.faces.resource.Script"");
   js.getAttributes().put(""library"", ""mylibrary"");
   js.getAttributes().put(""name"", ""bar.js"");

   FacesContext context = FacesContext.getCurrentInstance();
   context.getViewRoot().addComponentResource(context, js, ""head"");

If so, how am I supposed to know what they are? For example, if I am dynamically adding an AjaxBehavior the exact name of the JavaScript file depends on which JSF implementation I am using.",MYFACES-3610
"If you use the rendered attribute of f:selectItem within h:selectOneListBox, it is not evaluated. In the example below you can see, that an item with rendered-condition false is rendered, which is not the expected behaviour.

Example:
<!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Transitional//EN"" ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"">
<html xmlns=""http://www.w3.org/1999/xhtml""
	  xmlns:h=""http://java.sun.com/jsf/html""
	  xmlns:f=""http://java.sun.com/jsf/core""
	  xmlns:ui=""http://java.sun.com/jsf/facelets""
	 >
	<h:head>
		<title>JSF Test</title>		
	</h:head>

	<h:body>
		<h:form id=""myForm"">
			<h:selectOneListbox id=""mySelect"" value=""none"" size=""1"" style=""width:100px;"">
				<f:selectItem itemValue=""A"" itemLabel=""A"" />
				<f:selectItem itemValue=""B"" itemLabel=""B"" rendered=""#{'1' eq '2'}""/>
			</h:selectOneListbox>
			
			<br/>
			output rendered condition selectItem 'B': #{'1' eq '2'}
			<br/>
			you can see, that selectItem is rendered while rendered condition is false.
			<br/>
			it looks like, that attribute 'rendered' is not evaluated at all.
		</h:form>
	</h:body>
</html>",MYFACES-3609
"Apache Rat identified several files which either need licensing information or need to be excluded.

# These files looks trivial -- I don't even know if they support
comments.   I would think we can exclude these.
implee6/src/main/resources/META-INF/services/javax.servlet.ServletContainerInitializer
impl/src/test/resources/META-INF/services/org.apache.myfaces.config.annotation.LifecycleProvider
impl/src/main/resources/META-INF/services/org.apache.myfaces.config.annotation.LifecycleProvider

# Needs standard APL
impl/src/test/java/org/apache/myfaces/config/annotation/ClassByteCodeAnnotationFilterTest.java
impl/src/test/resources/org/apache/myfaces/view/facelets/tag/composite/testSimpleThisResourceReference.xhtml
impl/src/test/resources/org/apache/myfaces/lifecycle/view2.xhtml
impl/src/test/resources/org/apache/myfaces/lifecycle/view1.jsp
impl/src/main/resources/META-INF/xdoc-component.vm (in velocity comment style)
impl/src/main/resources/META-INF/xdoc-tag.vm (in velocity comment style)
impl/src/main/resources/META-INF/xdoc-web-config.vm (in velocity comment style)
shared-public/src/test/resources/org/apache/myfaces/shared/application/view2.xhtml
shared-public/src/test/resources/org/apache/myfaces/shared/application/view1.jsp
shared/src/test/resources/org/apache/myfaces/shared/application/view2.xhtml
shared/src/test/resources/org/apache/myfaces/shared/application/view1.jsp

# not sure about this one, but probably needs license as it looks like
source for generating files.
impl/src/main/conf/META-INF/.standard-faces-config-base.xml.jsfdia

# mostly empty file?  Maybe stick license inside instead of dummy text?
impl/src/test/resources/org/apache/myfaces/view/facelets/tag/composite/javax.faces/jsf.js
impl/src/test/resources/org/apache/myfaces/view/facelets/tag/jsf/html/javax.faces/jsf.js
impl/src/test/resources/org/apache/myfaces/view/facelets/updateheadres/resources/javax.faces/jsf.js

# not sure about this one.  Looks like data, not source.   Probably
should put a license on it to be safe.
impl/src/test/resources/org/apache/myfaces/context/nestedScriptCDATA.xml

# Is CDDL+GPL a compatible license? What are we using this for?  The
xsd files?  I think that xsd files are fair game for inclusion.
impl/src/main/resources/META-INF/licenses/glassfish-LICENSE.txt
impl/src/main/resources/org/apache/myfaces/resource/javaee_5.xsd
impl/src/main/resources/org/apache/myfaces/resource/javaee_web_services_client_1_2.xsd


# We can exclude this one
impl/src/main/resources/META-INF/licenses/facelets-LICENSE.txt",MYFACES-3608
"Certain page structure can cause incorrect ""Component with id:XXX not found"".
For example, the '<f:ajax render=""messagesDiv"" />' on this page:

<!DOCTYPE html >
<html xmlns:h=""http://java.sun.com/jsf/html""
      xmlns:f=""http://java.sun.com/jsf/core"">
<h:head>
</h:head>
<h:body>
    <h:form id=""myForm"">
        <h:dataTable value=""#{application.servletNames}"">
            <h:column>
                <h:commandButton value=""CLICK"">
                    <f:ajax render=""messagesDiv"" />
                </h:commandButton>
            </h:column>
        </h:dataTable>
        <h:messages id=""messagesDiv""/>
    </h:form>
</h:body>
</html>


Is causing this exception:


12/09/2012 00:07:11,672 ERROR ExceptionHandlerFactory:66: Context attributes: {}, Component: null, PhaseId: RENDER_RESPONSE(6)
javax.faces.FacesException: Component with id:messagesDiv not found
	at org.apache.myfaces.renderkit.html.HtmlAjaxBehaviorRenderer.getComponentId(HtmlAjaxBehaviorRenderer.java:411)
	at org.apache.myfaces.renderkit.html.HtmlAjaxBehaviorRenderer.build(HtmlAjaxBehaviorRenderer.java:384)
	at org.apache.myfaces.renderkit.html.HtmlAjaxBehaviorRenderer.mapToString(HtmlAjaxBehaviorRenderer.java:356)
	at org.apache.myfaces.renderkit.html.HtmlAjaxBehaviorRenderer.makeAjax(HtmlAjaxBehaviorRenderer.java:157)
	at org.apache.myfaces.renderkit.html.HtmlAjaxBehaviorRenderer.getScript(HtmlAjaxBehaviorRenderer.java:101)
	at javax.faces.component.behavior.ClientBehaviorBase.getScript(ClientBehaviorBase.java:99)
	at org.apache.myfaces.shared.renderkit.html.HtmlRendererUtils._appendClientBehaviourScript(HtmlRendererUtils.java:2007)
	at org.apache.myfaces.shared.renderkit.html.HtmlRendererUtils.getClientBehaviorScript(HtmlRendererUtils.java:1986)
	at org.apache.myfaces.shared.renderkit.html.HtmlRendererUtils.buildBehaviorChain(HtmlRendererUtils.java:2157)
	at org.apache.myfaces.shared.renderkit.html.HtmlRendererUtils.buildBehaviorChain(HtmlRendererUtils.java:2122)
	at org.apache.myfaces.shared.renderkit.html.HtmlButtonRendererBase.buildBehaviorizedOnClick(HtmlButtonRendererBase.java:393)
	at org.apache.myfaces.shared.renderkit.html.HtmlButtonRendererBase.encodeEnd(HtmlButtonRendererBase.java:209)
	at javax.faces.component.UIComponentBase.encodeEnd(UIComponentBase.java:663)
	at javax.faces.component.UIComponentBase.encodeAll(UIComponentBase.java:543)
	at javax.faces.component.UIComponentBase.encodeAll(UIComponentBase.java:539)
	at org.apache.myfaces.shared.renderkit.html.HtmlTableRendererBase.renderColumnBody(HtmlTableRendererBase.java:689)
	at org.apache.myfaces.shared.renderkit.html.HtmlTableRendererBase.encodeColumnChild(HtmlTableRendererBase.java:648)
	at org.apache.myfaces.shared.renderkit.html.HtmlTableRendererBase.encodeInnerHtml(HtmlTableRendererBase.java:502)
	at org.apache.myfaces.shared.renderkit.html.HtmlTableRendererBase.encodeChildren(HtmlTableRendererBase.java:214)
	at javax.faces.component.UIComponentBase.encodeChildren(UIComponentBase.java:632)
	at javax.faces.component.UIComponentBase.encodeAll(UIComponentBase.java:530)
	at javax.faces.component.UIComponentBase.encodeAll(UIComponentBase.java:539)
	at javax.faces.component.UIComponentBase.encodeAll(UIComponentBase.java:539)
	at javax.faces.component.UIComponentBase.encodeAll(UIComponentBase.java:539)
	at org.apache.myfaces.view.facelets.FaceletViewDeclarationLanguage.renderView(FaceletViewDeclarationLanguage.java:1972)
	at org.apache.myfaces.application.ViewHandlerImpl.renderView(ViewHandlerImpl.java:285)
	at javax.faces.application.ViewHandlerWrapper.renderView(ViewHandlerWrapper.java:59)
	at org.apache.myfaces.lifecycle.RenderResponseExecutor.execute(RenderResponseExecutor.java:116)
	at org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:241)
	at javax.faces.webapp.FacesServlet.service(FacesServlet.java:199)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:305)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:225)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:169)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:472)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:168)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:98)
	at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:927)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:118)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:407)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:999)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:565)
	at org.apache.tomcat.util.net.AprEndpoint$SocketProcessor.run(AprEndpoint.java:1812)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)
	at java.lang.Thread.run(Thread.java:722)
",MYFACES-3607
"I have the following button:

<h:commandButton immediate=""true"" value=""immediate_true"" action=""#{testBean.actionTest}""></h:commandButton>

As part of the testBean.actionTest, I am adding a message to Flash Scope.

    public String actionTest() {
		FacesContext.getCurrentInstance().getExternalContext().getFlash().put(""infoMessage"",""TEST IMMEDIATE"");
		return ""page2?faces-redirect=true"";

}

I do not see the flash message displayed on the next screen when I press the command button. I will
see the message if immediate is set to false.

This works fine with Mojarra 2.1.12",MYFACES-3606
"After upgrading from 2.1.8 to 2.1.9 follwing exceptions occurs:

Caused by: java.lang.ClassCastException: org.apache.myfaces.view.facelets.el.ContextAwareTagMethodExpression cannot be cast to org.apache.myfaces.view.facelets.el.LocationMethodExpression
at org.apache.myfaces.view.facelets.tag.TagAttributeImpl.getMethodExpression(TagAttributeImpl.java:222)
at org.apache.myfaces.view.facelets.tag.jsf.core.EventHandler.apply(EventHandler.java:125)
at javax.faces.view.facelets.DelegatingMetaTagHandler.applyNextHandler(DelegatingMetaTagHandler.java:58)
at org.apache.myfaces.view.facelets.tag.jsf.ComponentTagHandlerDelegate.apply(ComponentTagHandlerDelegate.java:294)
at javax.faces.view.facelets.DelegatingMetaTagHandler.apply(DelegatingMetaTagHandler.java:53)
at javax.faces.view.facelets.CompositeFaceletHandler.apply(CompositeFaceletHandler.java:49)
at javax.faces.view.facelets.DelegatingMetaTagHandler.applyNextHandler(DelegatingMetaTagHandler.java:58)
at org.apache.myfaces.view.facelets.tag.jsf.ComponentTagHandlerDelegate.apply(ComponentTagHandlerDelegate.java:294)
at javax.faces.view.facelets.DelegatingMetaTagHandler.apply(DelegatingMetaTagHandler.java:53)
at javax.faces.view.facelets.CompositeFaceletHandler.apply(CompositeFaceletHandler.java:49)
at org.apache.myfaces.view.facelets.tag.composite.ImplementationHandler.apply(ImplementationHandler.java:67)
at javax.faces.view.facelets.CompositeFaceletHandler.apply(CompositeFaceletHandler.java:49)
at org.apache.myfaces.view.facelets.tag.composite.CompositeComponentDefinitionTagHandler.apply(CompositeComponentDefinitionTagHandler.java:255)
at org.apache.myfaces.view.facelets.compiler.NamespaceHandler.apply(NamespaceHandler.java:57)
at org.apache.myfaces.view.facelets.compiler.EncodingHandler.apply(EncodingHandler.java:48)
at org.apache.myfaces.view.facelets.impl.DefaultFacelet.applyCompositeComponent(DefaultFacelet.java:482)
at org.apache.myfaces.view.facelets.impl.DefaultFaceletContext.applyCompositeComponent(DefaultFaceletContext.java:779)
at org.apache.myfaces.view.facelets.tag.composite.CompositeComponentResourceTagHandler.applyCompositeComponentFacelet(CompositeComponentResourceTagHandler.java:378)
at org.apache.myfaces.view.facelets.tag.composite.CompositeComponentResourceTagHandler.applyNextHandler(CompositeComponentResourceTagHandler.java:158)
at org.apache.myfaces.view.facelets.tag.jsf.ComponentTagHandlerDelegate.apply(ComponentTagHandlerDelegate.java:294)
at javax.faces.view.facelets.DelegatingMetaTagHandler.apply(DelegatingMetaTagHandler.java:53)
at javax.faces.view.facelets.CompositeFaceletHandler.apply(CompositeFaceletHandler.java:49)
at org.apache.myfaces.view.facelets.tag.ui.DefineHandler.applyDefinition(DefineHandler.java:86)
at org.apache.myfaces.view.facelets.tag.ui.CompositionHandler.apply(CompositionHandler.java:175)
at org.apache.myfaces.view.facelets.impl.TemplateContextImpl$TemplateManagerImpl.apply(TemplateContextImpl.java:186)
at org.apache.myfaces.view.facelets.impl.TemplateContextImpl.includeDefinition(TemplateContextImpl.java:131)
at org.apache.myfaces.view.facelets.impl.DefaultFaceletContext.includeDefinition(DefaultFaceletContext.java:460)
at org.apache.myfaces.view.facelets.tag.ui.InsertHandler.apply(InsertHandler.java:94)
at javax.faces.view.facelets.CompositeFaceletHandler.apply(CompositeFaceletHandler.java:49)
at javax.faces.view.facelets.DelegatingMetaTagHandler.applyNextHandler(DelegatingMetaTagHandler.java:58)
at org.apache.myfaces.view.facelets.tag.jsf.ComponentTagHandlerDelegate.apply(ComponentTagHandlerDelegate.java:294)
at javax.faces.view.facelets.DelegatingMetaTagHandler.apply(DelegatingMetaTagHandler.java:53)
at javax.faces.view.facelets.CompositeFaceletHandler.apply(CompositeFaceletHandler.java:49)
at org.apache.myfaces.view.facelets.tag.jsf.core.ViewHandler.apply(ViewHandler.java:156)
at javax.faces.view.facelets.CompositeFaceletHandler.apply(CompositeFaceletHandler.java:49)
at org.apache.myfaces.view.facelets.compiler.NamespaceHandler.apply(NamespaceHandler.java:57)
at javax.faces.view.facelets.CompositeFaceletHandler.apply(CompositeFaceletHandler.java:49)
at org.apache.myfaces.view.facelets.compiler.EncodingHandler.apply(EncodingHandler.java:48)
at org.apache.myfaces.view.facelets.impl.DefaultFacelet.include(DefaultFacelet.java:394)
at org.apache.myfaces.view.facelets.impl.DefaultFacelet.include(DefaultFacelet.java:448)
at org.apache.myfaces.view.facelets.impl.DefaultFacelet.include(DefaultFacelet.java:426)
at org.apache.myfaces.view.facelets.impl.DefaultFaceletContext.includeFacelet(DefaultFaceletContext.java:244)
at org.apache.myfaces.view.facelets.tag.ui.CompositionHandler.apply(CompositionHandler.java:148)
at org.apache.myfaces.view.facelets.compiler.NamespaceHandler.apply(NamespaceHandler.java:57)
at org.apache.myfaces.view.facelets.compiler.EncodingHandler.apply(EncodingHandler.java:48)
at org.apache.myfaces.view.facelets.impl.DefaultFacelet.include(DefaultFacelet.java:394)
at org.apache.myfaces.view.facelets.impl.DefaultFacelet.include(DefaultFacelet.java:448)
at org.apache.myfaces.view.facelets.impl.DefaultFacelet.include(DefaultFacelet.java:426)
at org.apache.myfaces.view.facelets.impl.DefaultFaceletContext.includeFacelet(DefaultFaceletContext.java:244)
at org.apache.myfaces.view.facelets.tag.ui.CompositionHandler.apply(CompositionHandler.java:148)
at org.apache.myfaces.view.facelets.compiler.NamespaceHandler.apply(NamespaceHandler.java:57)
at org.apache.myfaces.view.facelets.compiler.EncodingHandler.apply(EncodingHandler.java:48)
at org.apache.myfaces.view.facelets.impl.DefaultFacelet.apply(DefaultFacelet.java:179)
at org.apache.myfaces.view.facelets.FaceletViewDeclarationLanguage.buildView(FaceletViewDeclarationLanguage.java:452)
at org.apache.myfaces.view.facelets.DefaultFaceletsStateManagementStrategy.restoreView(DefaultFaceletsStateManagementStrategy.java:273)

",MYFACES-3605
"When using the listed configuration a NullPointerException is thrown in UIComponentBase when transitioning Spring Webflow states. With the same configuration but Trinidad 1.2.x (1.2.11 and 1.2.14 tested), everything works fine. 


org.springframework.webflow.execution.FlowExecutionException: Exception thrown in state 'start' of flow 'unauthenticated'
	at org.springframework.webflow.engine.impl.FlowExecutionImpl.wrap(FlowExecutionImpl.java:571)
	at org.springframework.webflow.engine.impl.FlowExecutionImpl.resume(FlowExecutionImpl.java:262)
	at org.springframework.webflow.executor.FlowExecutorImpl.resumeExecution(FlowExecutorImpl.java:169)
	at org.springframework.webflow.mvc.servlet.FlowHandlerAdapter.handle(FlowHandlerAdapter.java:183)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:789)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:727)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:820)
	at weblogic.servlet.internal.StubSecurityHelper$ServletServiceAction.run(StubSecurityHelper.java:227)
	at weblogic.servlet.internal.StubSecurityHelper.invokeServlet(StubSecurityHelper.java:125)
	at weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:300)
	at weblogic.servlet.internal.TailFilter.doFilter(TailFilter.java:26)
	at weblogic.servlet.internal.FilterChainImpl.doFilter(FilterChainImpl.java:56)
	at org.apache.myfaces.trinidadinternal.webapp.TrinidadFilterImpl._doFilterImpl(TrinidadFilterImpl.java:293)
	at org.apache.myfaces.trinidadinternal.webapp.TrinidadFilterImpl.doFilter(TrinidadFilterImpl.java:199)
	at org.apache.myfaces.trinidad.webapp.TrinidadFilter.doFilter(TrinidadFilter.java:92)
	at weblogic.servlet.internal.FilterChainImpl.doFilter(FilterChainImpl.java:56)
	at mil.osd.dmdc.deers.applicationsecurity.policyagent.filter.AbstractConsentFilter.doFilter(AbstractConsentFilter.java:114)
	at weblogic.servlet.internal.FilterChainImpl.doFilter(FilterChainImpl.java:56)
	at mil.osd.dmdc.ctis.rss.server.InputDateFilter.doFilter(InputDateFilter.java:46)
	at weblogic.servlet.internal.FilterChainImpl.doFilter(FilterChainImpl.java:56)
	at mil.osd.dmdc.ctis.rss.server.AuditTransactionErrorHandlingFilter.doFilter(AuditTransactionErrorHandlingFilter.java:40)
	at weblogic.servlet.internal.FilterChainImpl.doFilter(FilterChainImpl.java:56)
	at weblogic.servlet.internal.RequestEventsFilter.doFilter(RequestEventsFilter.java:27)
	at weblogic.servlet.internal.FilterChainImpl.doFilter(FilterChainImpl.java:56)
	at weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.wrapRun(WebAppServletContext.java:3715)
	at weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.run(WebAppServletContext.java:3681)
	at weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:321)
	at weblogic.security.service.SecurityManager.runAs(SecurityManager.java:120)
	at weblogic.servlet.internal.WebAppServletContext.securedExecute(WebAppServletContext.java:2277)
	at weblogic.servlet.internal.WebAppServletContext.execute(WebAppServletContext.java:2183)
	at weblogic.servlet.internal.ServletRequestImpl.run(ServletRequestImpl.java:1454)
	at weblogic.work.ExecuteThread.execute(ExecuteThread.java:209)
	at weblogic.work.ExecuteThread.run(ExecuteThread.java:178)
Caused by: java.lang.NullPointerException: state
	at javax.faces.component.UIComponentBase.restoreState(UIComponentBase.java:1981)
	at javax.faces.component.UIComponentBase.processRestoreState(UIComponentBase.java:1593)
	at javax.faces.component.UIComponentBase.processRestoreState(UIComponentBase.java:1608)
	at javax.faces.component.UIViewRoot.processRestoreState(UIViewRoot.java:772)
	at org.springframework.faces.webflow.FlowViewStateManager.restoreComponentState(FlowViewStateManager.java:78)
	at org.springframework.faces.webflow.FlowViewStateManager.restoreView(FlowViewStateManager.java:203)
	at org.apache.myfaces.shared.view.ViewDeclarationLanguageBase.restoreView(ViewDeclarationLanguageBase.java:106)
	at org.apache.myfaces.view.facelets.FaceletViewDeclarationLanguage.restoreView(FaceletViewDeclarationLanguage.java:2045)
	at org.apache.myfaces.trinidadinternal.application.ViewDeclarationLanguageFactoryImpl$ChangeApplyingVDLWrapper.restoreView(ViewDeclarationLanguageFactoryImpl.java:335)
	at org.apache.myfaces.application.ViewHandlerImpl.restoreView(ViewHandlerImpl.java:300)
	at javax.faces.application.ViewHandlerWrapper.restoreView(ViewHandlerWrapper.java:83)
	at org.apache.myfaces.trinidadinternal.application.ViewHandlerImpl.restoreView(ViewHandlerImpl.java:242)
	at org.springframework.faces.webflow.FlowViewHandler.restoreFlowView(FlowViewHandler.java:144)
	at org.springframework.faces.webflow.FlowViewHandler.restoreView(FlowViewHandler.java:83)
	at org.springframework.faces.webflow.JsfViewFactory.getView(JsfViewFactory.java:105)
	at org.springframework.webflow.engine.ViewState.resume(ViewState.java:193)
	at org.springframework.webflow.engine.Flow.resume(Flow.java:545)
	at org.springframework.webflow.engine.impl.FlowExecutionImpl.resume(FlowExecutionImpl.java:258)
	... 34 more
",MYFACES-3604
"In a high concurrency load test with Apache MyFaces + RichFaces component library we found that under peak load majority of our web container threads were stuck in this call stack

at java/util/zip/Inflater.inflateBytes(Native Method) at java/util/zip/Inflater.inflate(Inflater.java:249(Compiled Code)) at java/util/zip/InflaterInputStream.read(InflaterInputStream.java:146(Compiled Code)) at java/util/zip/InflaterInputStream.read(InflaterInputStream.java:116(Compiled Code)) at java/io/FilterInputStream.read(FilterInputStream.java:77(Compiled Code)) at java/io/FilterInputStream.read(FilterInputStream.java:77(Compiled Code)) at java/io/PushbackInputStream.read(PushbackInputStream.java:133(Compiled Code)) at org/apache/myfaces/shared_impl/resource/ResourceImpl$ValueExpressionFilterInputStream.read(ResourceImpl.java:117(Compiled Code)) at java/io/InputStream.read(InputStream.java:175(Compiled Code)) at java/io/InputStream.read(InputStream.java:97(Compiled Code)) at org/apache/myfaces/application/ResourceHandlerImpl.pipeBytes(ResourceHandlerImpl.java:402(Compiled Code)) at org/apache/myfaces/application/ResourceHandlerImpl.handleResourceRequest(ResourceHandlerImpl.java:357(Compiled Code)) at org/richfaces/resource/ResourceHandlerImpl.handleResourceRequest(ResourceHandlerImpl.java:257(Compiled Code)) at javax/faces/webapp/FacesServlet.service(FacesServlet.java:183(Compiled Code)) at org/richfaces/webapp/ResourceServlet.httpService(ResourceServlet.java:110(Compiled Code)) at org/richfaces/webapp/ResourceServlet.service(ResourceServlet.java:105(Compiled Code))

After looking at the src code of org.apache.myfaces.application.ResourceHandlerImpl.handleResourceRequest(FacesContext) I can see that the ResourceHandlerCache caches the Resource metadata ; however the actual output of the resource which is written to the outputstream in ResourceHandlerImpl.pipeBytes is NEVER cached.

This causes a scalability problem in our case because each access to the resource involves cracking open a jar, inflating the bytes and parsing a stream of bytes. This is done multiple times for the same resource(say a css file) inside the richfaces jar inspite of the resource not changing.

I propose a much needed performance optimization wherein we cache the output of the Resource handled and stash the output byte[] it as softReference in the ResourceHandlerCache.ResourceValue.

I have attached a patch that does the same and would like your feedback on my proposal. These patches are from src taken from Apache MyFaces 2.0.5

-cheers, Rohit Kelapure, Apache Open WebBeans committer ",MYFACES-3603
"The simple presence of the popupanel or calendar or datatable tag frin richfaces makes the myfaces javascript library not included in the page disabling the link ex the simple jsf  page below :

--------------
<?xml version=""1.0"" encoding=""UTF-8""?>
<html xmlns=""http://www.w3.org/1999/xhtml""
xmlns:h=""http://java.sun.com/jsf/html""
xmlns:rich=""http://richfaces.org/rich"">

<h:head></h:head>
<h:body>

<h:form>
<h:commandLink value=""Index"" action=""welcome"" immediate=""true"" />
<rich:popupPanel >
</rich:popupPanel>
</h:form>

</h:body>
</html>
-------------------------------


A soon as richfaces tags are added to the page, the myFace JavaScript library link usually included in the 1st form of the page:

<script type=""text/javascript"" src=""/pilot/javax.faces.resource/oamSubmit.js.xhtml?ln=org.apache.myfaces"">

disappears from the rendered HTML. And consequently all ""h:commandLink"" links fail in the browser with a javascript error ""myFaces not defined"".",MYFACES-3602
"The call in FaceletViewDeclarationLanguage.buildView() creates state in the view without need, because its value usually does not change. The solution is just check and only write the value when it changes.",MYFACES-3601
"There is a code in UIInstructionHandler that does not remove the components inside a facet like ComponentTagHandlerDelegate does. 

This code works well, but in some cases, it creates an additional facet panel than later is stored into the state, because it is created in a refresh. The solution is just do the same as we do in ComponentTagHandlerDelegate (it seems something that comes from facelets 1.1.x).",MYFACES-3600
"While using a string->list(& viceversa) converter, I made use of Collections.EMPTY_LIST but it gives the following error. (This worked fine with Mojarra)

<error>
<error-name>java.lang.IllegalStateException</error-name>
<error-message>java.lang.RuntimeException: java.lang.IllegalAccessException: Class javax.faces.component.UIComponentBase can not access a member of class java.util.Collections$EmptyList with modifiers ""private""</error-message>
</error>

 Why cannot I use Collections.EMPTY_LIST but replacing with new ArrayList<Integer>() just works ?
Converter code as follows:
------------------

FacesConverter(value = ""listConverter"", forClass = px10.Utils.ListConverter.class)
public class ListConverter implements Converter {
    
    @Override
    public Object getAsObject(FacesContext fc, UIComponent uic, String stringVal) {
        if (stringVal==null) 
            return Collections.EMPTY_LIST; 
        
        String[] split = stringVal.split("","");
        List<Integer> list = new ArrayList<Integer>(split.length);
        for (int i = 0; i < split.length; i++) {
            list.add(Integer.parseInt(split[i]));
        }
        return list;
    }
    ...
    ...
}",MYFACES-3599
"We have a simple webApp with 2 views.
The first view (login screen) contains a non ajax button which navigates to the second view.
The second view contains a non ajax button (logout) which invalidates the web session and navigates back to the first view.

A ViewExpiredException occurs with myfaces if these steps are executed exactly 3 times (logn followed by logoutand logout action)
The ViewExpiredException occurs in restore view during the 3rd logut action.

The ViewExpiredException does not occur if the web session is not invalidated in the logout action!

Config:
javax.faces.STATE_SAVING_METHOD=server
javax.faces.PARTIAL_STATE_SAVING=false
org.apache.myfaces.NUMBER_OF_VIEWS_IN_SESSION = 2
org.apache.myfaces.NUMBER_OF_SEQUENTIAL_VIEWS_IN_SESSION = 2
  

The ViewExpiredException does not occur with mojarra 2.1.12 with 
com.sun.faces.numberOfViewsInSession and com.sun.faces.numberOfLogicalViews both set to 2.",MYFACES-3598
"Reported by Jon Bionda on dev list:

myfaces-core-2.1.8 source

    org.apache.myfaces.webapp.WebConfigParamsLogger.logWebContextParams()

 

Not a big deal but it caused me a few hours of scratching my head so thought I would subscribe and post this.

 

I am getting the ""Starting up Tomahawk on the RI-JSF-Implementation."" message on startup with JBoss 7.1.1 when using the org.jboss.jbossfaces.WAR_BUNDLES_JSF_IMPL context parm to stop it from loading the JSF RI.  I see lots of myfaces initialization msgs in the log so I was pretty sure(hopeful) the message was wrong so I downloaded and looked at the code and think I see a reverse logic error in the source file identified at the top of this email.

 

Here’s the code and I think the wrong message is being issued for when it checks for availability of both the RI and myfaces classes.

 

        if (myfacesConfig.isTomahawkAvailable())

        {

            if(myfacesConfig.isMyfacesImplAvailable())

            {

                if(log.isLoggable(Level.INFO))

                {

                    log.info(""Starting up Tomahawk on the RI-JSF-Implementation."");   ßmsg should be MyFaces

                }

            }

 

            if(myfacesConfig.isRiImplAvailable())

            {

                if(log.isLoggable(Level.INFO))

                {

                    log.info(""Starting up Tomahawk on the MyFaces-JSF-Implementation"");  ß msg should be RI

                }

            }

        }",MYFACES-3597
"When using a4j:commanButton from webflow rendered view NullPointerException is thrown during restoreState of component (state==null). Changing to mojarra implementation solves this problem, therefore it is myfaces integration issue. Please see sample webapp and logs attached.",MYFACES-3596
"I tried the following page :

<html xmlns=""http://www.w3.org/1999/xhtml""
      xmlns:h=""http://java.sun.com/jsf/html""
      xmlns:ui=""http://java.sun.com/jsf/facelets"">

        <h:head>        
        </h:head>

        <h:body >
            <ui:insert name=""heading"">Test<br/></ui:insert>

            <h:panelGroup>                
                  <ui:param name=""x1"" value=""6345675678/"" /><!--http://stackoverflow.com/questions/6878275/how-get-the-base-url/6878393#6878393-->
                  value:-  #{x1}                 
            </h:panelGroup>
        </h:body>

</html>


but the ui:param does not work until the ui:insert tags are removed from this page.",MYFACES-3595
"The following exception can occur after an application restart:

javax.faces.FacesException: java.lang.ClassCastException: org.apache.myfaces.extensions.validator.core.storage.DefaultRendererInterceptorPropertyStorage incompatible with org.apache.myfaces.extensions.validator.core.storage.RendererInterceptorPropertyStorage
	at org.apache.myfaces.shared_impl.context.ExceptionHandlerImpl.wrap(ExceptionHandlerImpl.java:241)
	at org.apache.myfaces.shared_impl.context.ExceptionHandlerImpl.handle(ExceptionHandlerImpl.java:156)
	at org.apache.myfaces.lifecycle.LifecycleImpl.executePhase(LifecycleImpl.java:191)
	at org.apache.myfaces.lifecycle.LifecycleImpl.execute(LifecycleImpl.java:118)
	at org.apache.myfaces.extensions.validator.core.startup.ExtValLifecycleWrapper.execute(ExtValLifecycleWrapper.java:61)
	at javax.faces.webapp.FacesServlet.service(FacesServlet.java:189)
	at com.ibm.ws.webcontainer.servlet.ServletWrapper.service(ServletWrapper.java:1224)
	at com.ibm.ws.webcontainer.servlet.ServletWrapper.handleRequest(ServletWrapper.java:774)
	at com.ibm.ws.webcontainer.servlet.ServletWrapper.handleRequest(ServletWrapper.java:456)
	at com.ibm.ws.webcontainer.servlet.ServletWrapperImpl.handleRequest(ServletWrapperImpl.java:178)
	at com.ibm.ws.webcontainer.filter.WebAppFilterManager.invokeFilters(WebAppFilterManager.java:1032)
	at com.ibm.ws.webcontainer.webapp.WebApp.handleRequest(WebApp.java:3704)
	at com.ibm.ws.webcontainer.webapp.WebGroup.handleRequest(WebGroup.java:304)
	at com.ibm.ws.webcontainer.WebContainer.handleRequest(WebContainer.java:962)
	at com.ibm.ws.webcontainer.WSWebContainer.handleRequest(WSWebContainer.java:1662)
	at com.ibm.ws.webcontainer.channel.WCChannelLink.ready(WCChannelLink.java:195)
	at com.ibm.ws.http.channel.inbound.impl.HttpInboundLink.handleDiscrimination(HttpInboundLink.java:452)
	at com.ibm.ws.http.channel.inbound.impl.HttpInboundLink.handleNewRequest(HttpInboundLink.java:511)
	at com.ibm.ws.http.channel.inbound.impl.HttpInboundLink.processRequest(HttpInboundLink.java:305)
	at com.ibm.ws.http.channel.inbound.impl.HttpICLReadCallback.complete(HttpICLReadCallback.java:83)
	at com.ibm.ws.tcp.channel.impl.AioReadCompletionListener.futureCompleted(AioReadCompletionListener.java:165)
	at com.ibm.io.async.AbstractAsyncFuture.invokeCallback(AbstractAsyncFuture.java:217)
	at com.ibm.io.async.AsyncChannelFuture.fireCompletionActions(AsyncChannelFuture.java:161)
	at com.ibm.io.async.AsyncFuture.completed(AsyncFuture.java:138)
	at com.ibm.io.async.ResultHandler.complete(ResultHandler.java:204)
	at com.ibm.io.async.ResultHandler.runEventProcessingLoop(ResultHandler.java:775)
	at com.ibm.io.async.ResultHandler$2.run(ResultHandler.java:905)
	at com.ibm.ws.util.ThreadPool$Worker.run(ThreadPool.java:1659)
Caused by: java.lang.ClassCastException: org.apache.myfaces.extensions.validator.core.storage.DefaultRendererInterceptorPropertyStorage incompatible with org.apache.myfaces.extensions.validator.core.storage.RendererInterceptorPropertyStorage
	at org.apache.myfaces.extensions.validator.core.interceptor.AbstractValidationInterceptor.getRendererInterceptorPropertyStorage(AbstractValidationInterceptor.java:477)
	at org.apache.myfaces.extensions.validator.core.interceptor.AbstractValidationInterceptor.setRendererInterceptorProperties(AbstractValidationInterceptor.java:456)
	at org.apache.myfaces.extensions.validator.core.interceptor.AbstractValidationInterceptor.beforeGetConvertedValue(AbstractValidationInterceptor.java:166)
	at org.apache.myfaces.extensions.validator.core.renderkit.ExtValRendererWrapper.getConvertedValue(ExtValRendererWrapper.java:361)
	at javax.faces.component.UIViewParameter.getConvertedValue(UIViewParameter.java:248)
	at javax.faces.component.UIInput.validate(UIInput.java:556)
	at javax.faces.component.UIInput.processValidators(UIInput.java:247)
	at javax.faces.component.UIViewParameter.processValidators(UIViewParameter.java:218)
	at javax.faces.component.UIComponentBase.processValidators(UIComponentBase.java:1234)
	at javax.faces.component.UIComponentBase.processValidators(UIComponentBase.java:1234)
	at javax.faces.component.UIViewRoot._processValidatorsDefault(UIViewRoot.java:1326)
	at javax.faces.component.UIViewRoot.access$500(UIViewRoot.java:75)
	at javax.faces.component.UIViewRoot$ProcessValidatorPhaseProcessor.process(UIViewRoot.java:1401)
	at javax.faces.component.UIViewRoot._process(UIViewRoot.java:1282)
	at javax.faces.component.UIViewRoot.processValidators(UIViewRoot.java:758)
	at org.apache.myfaces.lifecycle.ProcessValidationsExecutor.execute(ProcessValidationsExecutor.java:34)
	at org.apache.myfaces.lifecycle.LifecycleImpl.executePhase(LifecycleImpl.java:171)
	... 25 more

The exception occurred because the UIViewParameter.java was holding on to it's renderer because it's a static variable.  This cause a few problems:

1) Since WebSphere ships MyFaces in the runtime more than one application is using this Static variable ( unlike when JSF is bundled within the application ), so each application is using the same renderer.

2) The renderer was not being released during a restart of the application so one from a different classloader was being used causing the ClassCastException

3) Since UIViewParameter is within the API we could not just add a method to clean up the render, so I had to use the reflection API to make the call into a private static method.

I've attached a patch for this issue.  Please review and let me know your thoughts.  I've tested this and have had a customer also verify that it solves the issue they were seeing.
",MYFACES-3594
"i click commandLink to change the locale , like flow:
<f:view>
    <f:loadBundle var=""msg"" basename=""welcome"" />
    <h:outputText value=""#{msg['welcome.jsf']}"" />
    <h:commandLink value=""Change Locale"" action=""#{locale.changeLocale}"" />
</view>

 <f:view>must have,if delete, locale 100% cannot change
and in my backend the cold like flow:
if(locale.equals(Locale.ENGLISH))
		{
			locale = Locale.SIMPLIFIED_CHINESE;
			FacesContext.getCurrentInstance().getViewRoot().setLocale(locale);
		}else if(locale.equals(Locale.SIMPLIFIED_CHINESE)){
			locale = Locale.ENGLISH;
			FacesContext.getCurrentInstance().getViewRoot().setLocale(locale);
		}

page will have some error,
if local is en,it is really show cn_ZH value
if local is cn_ZH,it is show en value.

at end,i can not find the same error in Mojarra.",MYFACES-3593
"When I use the following code to inject a Spring Bean into my ViewScoped ManagedBean then the reference to the Spring Bean is always null:

@ManagedBean
@ViewScoped
public class CreateOwnerBean implements Serializable {

        //inject Spring Bean
	@ManagedProperty(value = ""#{ownerManagementService}"")
	private transient OwnerManagementService ownerManagementService;

	public void setOwnerManagementService(
			OwnerManagementService ownerManagementService) {
		this.ownerManagementService = ownerManagementService;
	}
}

I use org.springframework.web.jsf.el.SpringBeanFacesELResolver as EL Resolver. The code works as expected when I use Mojarra. 

With MyFaces it only works if I change my ManagedBean to be SessionScoped.",MYFACES-3592
"I have a simple form with two required fields. 
First field has label with plain text. 
Second field has a label with an EL expression.

The label with the EL expression is not shown in messages if javax.faces.PARTIAL_STATE_SAVING is set to false. 

The error occurs with myfaces 2.1.8.

It works correctly with mojarra 2.1.11

Sample:
<h:form id=""myform"">
  <h:inputText id=""name"" value=""#{myController.name}"" required=""true""  label=""Hardcoded name"" />
  <h:inputText id=""password"" value=""#{myController.password}"" required=""true"" label=""#{msgs['password']}""/> 

 <h:commandButton id=""loginButton""
                  action=""#{myController.login}""
                  value=""Login""/>

<t:messages id=""idMsgs""
            showDetail=""false""
            showSummary=""true""
            replaceIdWithLabel=""true""/>
</h:form>

This is currently a blocker for an update from JSF 1.2 to 2.1",MYFACES-3591
"I have an application which is experiencing an AccessControlException with the following stack trace: 

Caused by: java.security.AccessControlException: Access denied (java.io.FilePermission \META-INF read)
	at java.security.AccessController.checkPermission(AccessController.java:108)
	at java.lang.SecurityManager.checkPermission(SecurityManager.java:544)
	at com.ibm.ws.security.core.SecurityManager.checkPermission(SecurityManager.java:208)
	at java.lang.SecurityManager.checkRead(SecurityManager.java:883)
	at java.io.File.exists(File.java:742)
	at org.apache.myfaces.view.facelets.util.Classpath._searchDir(Classpath.java:116)
	at org.apache.myfaces.view.facelets.util.Classpath._searchResource(Classpath.java:106)
	at org.apache.myfaces.view.facelets.util.Classpath.search(Classpath.java:61)

I've attached a patch which just adds a doPrivileged block around the offending code.

If someone can review and commit the change that would be great, let me know if there are any questions.

Thanks!",MYFACES-3590
"See MYFACES-2651.
In particular, there is still a case in which the proposed solution won't work.
Consider the component test 1  slightly modified:

<cc:interface name=""test1"">
    <cc:attribute name=""test"" required=""true"" />
</cc:interface>
<cc:implementation>
    test1
    <t2:test2 test=""#{myLibrary:myFunction(...) or cc.attrs.test}"" />
</cc:implementation>

In that case the regex expression looking for cc.attrs will exclude the expression because cc.attrs is preceded by a left parenthesis (as stated in CompositeComponentELUtils).

Changing to
 <t2:test2 test=""#{cc.attrs.test or myLibrary:myFunction(...)}"" />
will work. ",MYFACES-3589
"as discussed at http://s.apache.org/gpT we should try to implement ClientWindow (specified for jsf v2.2) also for myfaces-core 2.0.x and 2.1.x as a proprietary feature. we need a myfaces specific api in org.apache.myfaces.* (not in javax.faces) which matches 1:1 with the upcoming api for jsf 2.2 and can be used by myfaces-core itself (to fix the state-saving and scope issues in case of multi-tab constellations) as well as by myfaces specific adapters (which will be provided e.g. by myfaces codi and deltaspike).

if possible/useful myfaces-core 2.2.x should use the same implementation and the new api in javax.faces should just delegate to the myfaces specific api.",MYFACES-3588
"If i call a page, which does not exist, following exceptions occurs: Cannot reset buffer after response has been committed.

After digging deeper into this problem, i found out that getViewHandlerSupport()#calculateViewId returns null and the JspViewDeclarationLanguageStrategy will be used -> 

Cannot reset buffer after response has been committed. 

occurs.

I added a null check for the logicalViewId in RestoreViewExecutor#execute to call HttpServletResponse#sendError.

It does not work as expected because it just renders the errorPage and no redirect will be done.

Why there is not such null check?

Is it possible to add this check and redirect to the web.xml defined 404 or common error page? Or should it use the ErrorHandler?
",MYFACES-3587
"In a high concurrency load test with Apache MyFaces + RichFaces component library we found that under peak load majority of our web container threads were stuck in this call stack 

at java/util/zip/Inflater.inflateBytes(Native Method)
at java/util/zip/Inflater.inflate(Inflater.java:249(Compiled Code))
at java/util/zip/InflaterInputStream.read(InflaterInputStream.java:146(Compiled Code))
at java/util/zip/InflaterInputStream.read(InflaterInputStream.java:116(Compiled Code))
at java/io/FilterInputStream.read(FilterInputStream.java:77(Compiled Code))
at java/io/FilterInputStream.read(FilterInputStream.java:77(Compiled Code))
at java/io/PushbackInputStream.read(PushbackInputStream.java:133(Compiled Code))
at org/apache/myfaces/shared_impl/resource/ResourceImpl$ValueExpressionFilterInputStream.read(ResourceImpl.java:117(Compiled Code))
at java/io/InputStream.read(InputStream.java:175(Compiled Code))
at java/io/InputStream.read(InputStream.java:97(Compiled Code))
at org/apache/myfaces/application/ResourceHandlerImpl.pipeBytes(ResourceHandlerImpl.java:402(Compiled Code))
at org/apache/myfaces/application/ResourceHandlerImpl.handleResourceRequest(ResourceHandlerImpl.java:357(Compiled Code))
at org/richfaces/resource/ResourceHandlerImpl.handleResourceRequest(ResourceHandlerImpl.java:257(Compiled Code))
at javax/faces/webapp/FacesServlet.service(FacesServlet.java:183(Compiled Code))
at org/richfaces/webapp/ResourceServlet.httpService(ResourceServlet.java:110(Compiled Code))
at org/richfaces/webapp/ResourceServlet.service(ResourceServlet.java:105(Compiled Code)) 

After looking at the src code of  org.apache.myfaces.application.ResourceHandlerImpl.handleResourceRequest(FacesContext)  I can see that the ResourceHandlerCache caches the Resource metadata ; however the actual output of the resource which is written to the outputstream in ResourceHandlerImpl.pipeBytes is NEVER cached. 

This causes a scalability problem in our case because each access to the resource involves cracking open a jar, inflating the bytes and parsing a stream of bytes. This is done multiple times for the same resource(say a css file) inside the richfaces jar inspite of the resource not changing. 

I propose a much needed performance optimization wherein we cache the output of the Resource handled and stash the output byte[] it as softReference in the ResourceHandlerCache.ResourceValue. ",MYFACES-3586
"There is a bug in release method of FacesContextImpl class:


    @Override
    public final void release()
    {
        assertNotReleased();

        _messages = null;
        _orderedMessages = null;
        _currentPhaseId = null;
        _responseStream = null;
        _responseWriter = null;
        _maximumSeverity = null;
        _partialViewContext = null;
        _facesContextFactory = null;
        _renderKitFactory = null;
        _partialViewContextFactory = null;

        if (_facesContextFactory != null)
        {
            _facesContextFactory.release();
            _facesContextFactory = null;
        }

_facesContextFactory is set to null and then tested for null. _facesContextFactory is neved released then.",MYFACES-3585
"If you do not set the id of a h:commandLink explicitly the generated onclick JavaScript references an HTML id (client id of the command link) that was no rendered in the response.

Example:

<h:form id=""form"">
  <script>
    function myFunction(element) {
  	  alert(element.id);
  	  return false;
    }
  </script>
  <h:commandLink value=""commandLink"" onclick=""return myFunction(this);"" />
</h:form>

renders:

<a href=""#"" onclick=""return jsf.util.chain(document.getElementById('form:j_id_6'), event,'return myFunction(this);', 'return myfaces.oam.submitForm(\'form\',\'form:j_id_6\');');"">commandLink</a>

The HTML id ""form:j_id_6"" is referenced here in script, but is not rendered. This also happens if no onclick is defined explicitly for h:commandLink.

In this example passing the ""this""-JavaScript reference inside the JS function will be the window object. Thats an error and a fallback if the supplied id could not be found. The link DOM element would be expected here.

If the id of the h:commandLink is set explicitly, the ""this""-JavaScript reference inside the JS function will be the correct link DOM element.",MYFACES-3584
"Setting escape=""false"" on h:outputFormat causes rendering of an unneccessary <span> tag.
Setting escape=""false"" on h:outputText does not render the <span> tag.

Example:

<h:outputFormat value=""some value"" escape=""false"" /> renders: <span>some value</span>

I would expect only the unescaped value to be rendered without the <span> tag like h:outputText does.
",MYFACES-3583
"I am unable to make ajax calls within nested Composite Components. The outer composite could be just a wrapper. For the issue to appear it could be empty with only <composite:insertChildren/> in it. 
The inner composite component uses 
<composite:clientBehavior name=""change"" event=""change"" targets=""#{cc.clientId}:some-id-here""/>
The event actually doesn't matter.

The inner component receives an ajax call like this:

<controls:listBox property=""#{carDetailsMediator.carDetailsCarMakesListBoxProp}"" 
items=""#{carDetailsMediator.carDetailsCarMakesListBoxSelectItems}""
customId=""carMakes"" width=""115"" visibleLines=""6"">	
	<f:ajax event=""change"" render="":formID:carModel:combobox""
		 listener=""#{carDetailsMediator.changeCarMake}"" onevent=""initComboboxes"" />
</controls:listBox>

I tried to debug the myFaces 2.1.8 implementation and got to the point where in the lifecycle of the process at step 5 - Invoke Application there were no events and therefore no listeners were called.
I tried the same setup, but without the outer Composite Component, everything worked - the correct event was fired and the listeners called.",MYFACES-3582
"If you have a ViewScoped ManagedBean, @EJB injection appears to fail when an ajax request is submitted. This may be because the MyFacesObjectInputStream is not using the context class loader.

See original bug report here: http://stackoverflow.com/questions/11371573/jsf2-0-ejb-injection-into-viewscoped-causing-myfaces-to-cfne/11371846#11371846

@ManagedBean
@ViewScoped
public class BlogMB implements Serializable {
    private static final long serialVersionUID = 1L;
    @EJB
    private CategoryService categoryService;
}
Here's the view code:

<h:commandLink value=""#{category.name}"">
    <f:setPropertyActionListener
        target=""#{blogMB.selectedCategory}""
        value=""#{category}"" />
    <f:ajax
        listener=""#{blogMB.filterPostsByCategory()}""
        execute=""@this""
        render="":blogPosts"" />
</h:commandLink>

This will cause the following exception:
Jul 06, 2012 8:25:51 PM org.apache.myfaces.renderkit.ServerSideStateCacheImpl deserializeView
SEVERE: Exiting deserializeView - Could not deserialize state: com.xxx.blog.service.CategoryService
java.lang.ClassNotFoundException: com.xxx.blog.service.CategoryService
    at java.net.URLClassLoader$1.run(URLClassLoader.java:366)
    at java.net.URLClassLoader$1.run(URLClassLoader.java:355)
    at java.security.AccessController.doPrivileged(Native Method)
    at java.net.URLClassLoader.findClass(URLClassLoader.java:354)
    at java.lang.ClassLoader.loadClass(ClassLoader.java:423)
    at java.lang.ClassLoader.loadClass(ClassLoader.java:356)
    at java.lang.Class.forName0(Native Method)
    at java.lang.Class.forName(Class.java:264)
    at java.io.ObjectInputStream.resolveProxyClass(ObjectInputStream.java:694)
    at java.io.ObjectInputStream.readProxyDesc(ObjectInputStream.java:1549)
    at java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1511)
    at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1750)
    at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1347)
    at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1964)
    at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1888)
    at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1771)
    at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1347)
    at java.io.ObjectInputStream.readObject(ObjectInputStream.java:369)
    at java.util.HashMap.readObject(HashMap.java:1043)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:601)
    at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1004)
    at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1866)
    at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1771)
    at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1347)
    at java.io.ObjectInputStream.readArray(ObjectInputStream.java:1685)
    at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1341)
    at java.io.ObjectInputStream.readObject(ObjectInputStream.java:369)
    at java.util.HashMap.readObject(HashMap.java:1043)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:601)
    at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1004)
    at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1866)
    at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1771)
    at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1347)
    at java.io.ObjectInputStream.readArray(ObjectInputStream.java:1685)
    at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1341)
    at java.io.ObjectInputStream.readObject(ObjectInputStream.java:369)
    at org.apache.myfaces.renderkit.ServerSideStateCacheImpl.deserializeView(ServerSideStateCacheImpl.java:497)
    at org.apache.myfaces.renderkit.ServerSideStateCacheImpl.getSerializedViewFromServletSession(ServerSideStateCacheImpl.java:289)
    at org.apache.myfaces.renderkit.ServerSideStateCacheImpl.restoreSerializedView(ServerSideStateCacheImpl.java:891)
    at org.apache.myfaces.renderkit.html.HtmlResponseStateManager.getState(HtmlResponseStateManager.java:205)
    at org.apache.myfaces.view.facelets.DefaultFaceletsStateManagementStrategy.restoreView(DefaultFaceletsStateManagementStrategy.java:207)
    at org.apache.myfaces.application.StateManagerImpl.restoreView(StateManagerImpl.java:130)
    at org.apache.myfaces.shared.view.ViewDeclarationLanguageBase.restoreView(ViewDeclarationLanguageBase.java:106)
    at org.apache.myfaces.view.facelets.FaceletViewDeclarationLanguage.restoreView(FaceletViewDeclarationLanguage.java:2109)
    at org.apache.myfaces.application.ViewHandlerImpl.restoreView(ViewHandlerImpl.java:300)
    at com.ocpsoft.pretty.faces.application.PrettyViewHandler.restoreView(PrettyViewHandler.java:109)
    at javax.faces.application.ViewHandlerWrapper.restoreView(ViewHandlerWrapper.java:83)
    at org.apache.myfaces.lifecycle.RestoreViewExecutor.execute(RestoreViewExecutor.java:127)
    at org.apache.myfaces.lifecycle.LifecycleImpl.executePhase(LifecycleImpl.java:170)
    at org.apache.myfaces.lifecycle.LifecycleImpl.execute(LifecycleImpl.java:117)
    at javax.faces.webapp.FacesServlet.service(FacesServlet.java:197)
    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:305)
    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)
    at com.ocpsoft.pretty.PrettyFilter.doFilter(PrettyFilter.java:145)
    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)
    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)
    at org.omnifaces.filter.GzipResponseFilter.doFilter(GzipResponseFilter.java:147)
    at org.omnifaces.filter.HttpFilter.doFilter(HttpFilter.java:75)
    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)
    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)
    at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:225)
    at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:169)
    at org.apache.tomee.catalina.OpenEJBValve.invoke(OpenEJBValve.java:44)
    at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:472)
    at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:168)
    at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:98)
    at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:927)
    at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:118)
    at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:407)
    at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:999)
    at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:565)
    at org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:309)
    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)
    at java.lang.Thread.run(Thread.java:722)",MYFACES-3581
"We have an EAR which contains a WAR and a RAR (Resource Adapter). The RAR archive contains a JAR with Resource Adapter classes.

The problem is that trying to deploy such an EAR in Weblogic 10.3.5 causes a FileNotFoundException to be thrown.",MYFACES-3580
"Hi,

with template:

<h:form>
    <h:messages />

    <h:inputText required=""true"" label=""1"" />
    <h:inputText required=""true"" label=""2"" />
    <h:inputText required=""true"" label=""3"" />
    <h:commandButton value=""Submit"" />
</h:form>

messages in h:messages doesn't match order of components, h:messages will show:

2: Validation error
3: Validation error
1: Validation error

It looks like that problem occurs when h:messages element is wrapped in another component, because this works:

<h:messages />
<h:form>
    <h:inputText required=""true"" label=""1"" />
    <h:inputText required=""true"" label=""2"" />
    <h:inputText required=""true"" label=""3"" />
    <h:commandButton value=""Submit"" />
</h:form>

but this doesn't:

<h:panelGroup>
    <h:messages />

    <h:form>
        <h:inputText required=""true"" label=""1"" />
        <h:inputText required=""true"" label=""2"" />
        <h:inputText required=""true"" label=""3"" />
        <h:commandButton value=""Submit"" />
    </h:form>
</h:panelGroup>

With Mojarra h:messages or PrimeFaces p:messages order matches component order. 

Regards,
Pavel",MYFACES-3579
"http://bugs.sun.com/view_bug.do?bug_id=4510618

mojarra already implements a workaround (http://java.net/jira/browse/JAVASERVERFACES-755)

Myfaces NumberConverter partially implements it already, but:

value = value.replace('\u00a0', ' ');

part is missing.",MYFACES-3578
"JSF specification JSF_20101108 mentions in its section 3.1.5 ""It is strongly
recommend that application developers place managed beans that are pointed at by component binding expressions in
""request"" scope, and not any other scope.""
My concerns are as follows:-
1) We are getting duplicate component id exception when using binding in a session scoped variable in myfaces 2.1.It is a well known issue.

This is a ""recommendation"" for the developers but has been forced by the myfaces implementation.

2) JSF 1.2 and 1.1 implementations worked fine with the binding variables in session scope also.

3) The mojarra implementation does not enforces this.

Please let me know if this issue will be taken up in future releases or myfaces is going to have the same implementaion from now on.",MYFACES-3577
"Checking some code I saw this line:

    public String getViewId()
    {
        return (String) getStateHelper().eval(PropertyKeys.viewId);
    }

A viewId can never be a ValueExpression! The viewId is a value that identifies the view in a unique way and it is set according to the rules of the spec. It is possible to change the line and use get() instead.",MYFACES-3576
"In some circumstances the caching of the relative location in the public Facelet getFacelet(String uri) in DefaultFaceletFactory is not desirable: e.g. return the mobile and full content version for the same URI, if the user changes the content type on the fly. Now this caching always causes the same content to be returned.
Should it be possible to switch it off like it is done for other caches in this class with needsToBeRefreshed check and NO_CACHE_DELAY configuration parameter?",MYFACES-3575
"The issue resides in the JS code that is responsible for updating javax.faces.ViewState key in the hidden input elements. 
In IE7 during the second update the lookup for the 'javax.faces.ViewState' named input element fails. The element[name] syntax is used for the lookup which is known to fail for elements with complex names (such as 'javax.faces.ViewState'). 
When the lookup fails to find the input element a second input element is created which will contain the new javax.faces.ViewState value. The next submit will send two 'javax.faces.ViewState' parameters but only the first one (the oldest) is read by the server state manager . This old key is not known to the server anymore and  this causes a ViewExpired exception to be thrown on the server.",MYFACES-3574
"Just call:

            ExternalSpecifications.isUnifiedELAvailable();
            ExternalSpecifications.isBeanValidationAvailable();

from AbstractFacesListener and remove redundant logging in javax.faces.validator._ExternalSpecifications",MYFACES-3573
"There are 4 component properties that are very special in JSF:

value
localValueSet
valid
submittedValue

These ones are used intensively over JSF lifecycle. By performance reasons, PSS algorithm does not save the initial state of a component and instead, just mark the properties that were changed from its initial state and save them in the delta state. This reduce the required memory for a component and also reduce the necessary calculations to derive the delta.

But since these 4 properties are used intensively, it is worth to calculate the initial state and store it into the StateHelper. Later, we can use that information in StateHelper.saveState(), to remove from delta the values that are not necessary to save, because are the same ones from the initial state. We only need to add some lines into UIInput.markInitialState(), which is reasonable.

The result of this change is an important reduction over state size generated by input components. If validation is successful, the input component will not generate state, and if the validation fails, only the components with some value to save will store something into the state.",MYFACES-3572
"There is a typo error in the param, because in the spec it was declared as javax.faces.DECORATORS, but when the conversion from facelets 1.1.x code was done, it was replaced ""facelets."" with ""javax.faces.FACELETS_"", renaming it as javax.faces.FACELETS_DECORATORS . In this case, the param name in the spec should be used instead",MYFACES-3571
"We are building a dynamic form and to do we're using 4 blocks of code ( pages :b1.xthml,b2.xhtml, b3.xhtml and b4.xhtml ) that are included using a c:forEach loop and ui:include.

Clicking on a link make the application iterate over a list and includes blocks dynamically.

imagine section 1 has 1 block and section 2 has tow blocks. when user click section1's link and the section's 2 link it's fine, but when he click section's 1 link he got tow blocks instead of one. it sames like the last block  from section 2 is still here although sectino 1 has only one block",MYFACES-3570
"In SerializedViewKey, the current code uses a counter and the full viewId as key to retrieve or save the state into session. 

But store the full viewId is not really necessary. The counter itself gives uniqueness inside the session, and the viewId is just a way to check if the state to restore is the right one. In other words, given the probability of found two valid viewIds in an application with the same hashCode is astronomical and the fact that there is a counter that identify in an unique way a view state session token, it is reasonable to store into the state only the hashCode, and when the view is restored compare the viewId hashCode with the stored one into the state.

This change will reduce the size required by SerializedViewKey.",MYFACES-3568
"With the improvements done in PSS, it is usual to find view without delta state. Such views passes an empty object array with two null slots.

private static final Object[] EMPTY_STATES = new Object[]{null, null};

The tricky part here is when the algorithm that restore the state returns null, a ViewExpiredException is thrown. In this case the empty array identifies a view with zero delta, but we don't want to store that empty array into the state for both client side and server side state saving.

Instead, we can store just a null value into the state and add some code that check the condition and convert that null value to an empty array when the view is restored and viceversa. In JSF 1.2 state saving the state is never null, so the old code will continue working. If saveState is called passing a null instance, we can store the empty array into the state and then check for that condition to return the null value (which is invalid and cause ViewExpiredException anyway).

So, at the end we are just ""switching"" null and new Object[]{null, null} before store them into the state, but all that will be benefical, because a call to saveState with null state is invalid, but the call with empty object array, which has meaning and is more frequently in views does not produce additional state.",MYFACES-3567
It could be good to add a random token option to the generated token embedded in the view when server side state saving is enabled.,MYFACES-3566
"I think it has sense to add a web config param (default disabled) to add a timestamp to the view state on client side state saving, to make possible expire a view after some time.",MYFACES-3565
"The current default implementation of HtmlResponseStateManager sends the viewId inside the token for server side state saving and client side state saving, but it is just useless information, because it is not used in any way.

Instead, JSF 2.0 spec defines that the viewId is derived in RestoreViewPhase from the url, following a specified set of rules (see restoreViewSupport.calculateViewId() ).

In server side state saving the viewId is used as part of the key used to restore the state from session map, which is reasonable.

The proposed change involves do not add this information into the token, because it is useless. Anyway, in client side state saving it has sense to send the viewId or some similar information into the state, and include a logic to check if the viewId match with the calculated viewId, to ensure the state can be applied to the expected view.",MYFACES-3564
"Following the improvements done in:

MYFACES-3117 Current server state saving implementation prevents multi-window usage

Which included also:

MYFACES-3134 Move all code related to state caching into one place
MYFACES-3137 Align ResponseStateManager implementation with the spec
MYFACES-3138 Simplify ResponseStateManager implementation code

It is possible to improve this part a lot more. The are some parts of the code that works fine but are too old and are not very well understood. I think it is reasonable to review this part in deep. Note this could suppose some changes in ServerSideStateCacheImpl, and other related classes.

Our PSS algorithm is very good, but these changes are more related to the logic involved in save/restore the state for both modes client side and server side state saving. 

It is possible to imagine a ""mixed"" strategy between client side and server side state saving that could reduce the session size and in that way, achieve an even better scalability. Also, it is possible to imagine way to secure the token sent in the view when server side state saving is used using a random number, allowing to disable encryption in such cases.",MYFACES-3563
"1) use converterSaved as delta change check
2)  remove nullDelta boolean
3) move  new _AttachedDeltaWrapper into if (attachedState != null) statement

question: _AttachedDeltaWrapper used in this context provides Class of Converter, but that info is not used in restoreState - can we remove usage of that wrapper?",MYFACES-3562
"Component unique ids generated by facelets need always to pass as params through 

UniqueIdVendor.createUniqueId(FacesContext context, String seed)

But most of the time, the only thing this call does is append the unique id prefix UIViewRoot.UNIQUE_ID_PREFIX or j_id to the seed. It has sense for programatically added component ids but is complete worthless for facelets added components, because in this case there is a global strategy to keep uniqueness of components without rely on UniqueIdVendor logic.

The big question is if we can set it by default. There is nothing in the spec that forces us to do it......",MYFACES-3561
"There are some cases, when part or the whole component tree is refreshed, in which it is not necessary to calculate the generated component id. Instead, it is possible to reorganize the code a little bit and add FaceletCompositionContext.incrementUniqueComponentId() to cause the same effect without generate the instance. An increment in a counter will be always faster than any check in the cache or any unnecessary String generation. 

Remember there is a static table for generated component ids, so the effect is minimal in typical cases, but anyway I think it is worth to do it because in dynamic parts, the static table is not used.",MYFACES-3560
"By now the system-event-listeners must be configured with 'faces-config.xml'.

The class 'DefaultAnnotationProvider' has already two lines to enable the bytcode lookup for the annotations 'ListenerFor' and 'ListenersFor' that are commented out.

Maybe it is possible to enable the detection of system event listeners? I commented that in and wrote an 'handle' method in AnnotationConfigurator. 

Can anybody check if it is right?
It works for my project.",MYFACES-3559
"Given a view scoped bean:

@ManagedBean
@ViewScoped
public class Bean implements Serializable {
    @PostConstruct
    public void pc() {
        System.out.println(""in postConstruct"");
    }
}

and a simple form:

    <h:form>
        <h:commandLink value=""update"">
            <f:ajax render=""label""/>
        </h:commandLink>
        <h:outputText id=""label"" value=""#{bean}""/>
    </h:form>

Repeatable hitting on ""update"" button makes the value of label change:
com.denisk.test.Bean@5b62a166
com.denisk.test.Bean@27afca98
com.denisk.test.Bean@3a93ea5f

PostConstruct is fired only once though.
I know that there is plenty of ViewScoped-related havoc in JSF2, which is described in 
http://java.net/jira/browse/JAVASERVERFACES-1492
and related JSF spec issue (which will be fixed in spec v. 2.2):
http://java.net/jira/browse/JAVASERVERFACES_SPEC_PUBLIC-787
But current defect seems to be MyFaces-specific since on Mojarra 2.1.8 this works just fine",MYFACES-3558
"I have an application which was posted in MyFaces-3530 (ViewExpiredException.war) which uses a custom ExceptionHandler to deal with a ViewExpiredException.  Everything looks to be working as expected with this when I'm using a Faces Servlet Mapping such
as the following (suffix mapping):

	<servlet-mapping>
    		<servlet-name>Faces Servlet</servlet-name>
   		<url-pattern>*.jsf</url-pattern>
 	 </servlet-mapping>


However if I use something such as this (prefix mapping):

	<servlet-mapping>
		<servlet-name>Faces Servlet</servlet-name>
		<url-pattern>/f/*</url-pattern>
	</servlet-mapping>

I get the following exception when doing implicit navigation in my Exception Handler such as:

	nav.handleNavigation(fc, null, ""viewExpired"");  // viewExpired.xhtml exists in the web application

Exception:
	Caused by: org.apache.myfaces.lifecycle.ViewNotFoundException: A view is required to execute RENDER_RESPONSE(6)
	at org.apache.myfaces.lifecycle.RenderResponseExecutor.execute(RenderResponseExecutor.java:62)
	at org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:239)
	at javax.faces.webapp.FacesServlet.service(FacesServlet.java:191)

According to the JSF 2.0 specification specifically Section 7.4.2:
""If viewIdToTest does not have a “file extension”, take the file extension from the current viewId and append it
properly to viewIdToTest.""

Since the viewId is null after the ViewExpiredException we don't have anything to grab the file extension from when using implicit navigation in this case.  

https://issues.apache.org/jira/browse/MYFACES-3530 , deals with a similar situation where we were not adding the ""/"" prefix when the viewId was null. 

The only way I could determine the extension we should be using was to call "" DefaultRestoreViewSupport.calculateViewId(FacesContext context)"" this uses the RequestServletPath to determine the viewId of the current view.  

It is also worth taking note in that fact that this only looks to really matter when using prefix mapping since the algo. in 7.5.2 differs for prefix and suffix mapping.

I've provided a patch for NavigationHandlerImpl as well as NavigationHandlerImplTest (As once the patch is applied we don't have all the information in the facesContext given the current test so we fail, however if we don't use implicit navigation in the test we can still test that we don't get any NPEs after a VEE )

If everyone can take a look at the patch and let me know what you think that would be very helpful.  I'm willing to make changes but I've tested this and it is currently working.  I'm looking to see if I missed any cases where this would not work.  Patch contains some comments to explain what is going on and actually added an additional log statement.

Thanks!",MYFACES-3557
"To ensure compatibility with the RI, In JSF 2.1, markInitialState() call is done after the component tree is built with a visitTree() call. That works fine, but in JSF 2.0 or when you have a dynamic content inside a page, it is necessary to activate markInitialState() call through facelet algorithm as described in MYFACES-3451.

The concept works very good, but I notice a side effect in vdl.retargetAttachedObjects() and vdl.retargetMethodExpressions(). Since markInitialState() call goes from leaf to the root, and these methods traverse the tree to apply changes in child components, all changes done by these two methods are stored into the ""delta"" part of the state. 

Since vdl.retargetAttachedObjects() and vdl.retargetMethodExpressions() are called in build view time and only when the composite component is created, it is safe to check if pss is used in the view and markInitialState() algorithm has been activated, to call markInitialState() over the child components (the call for the top level component is done in the outside). Maybe it will be some extra calls to markInitialState() for the same component, but it is worth to do it, because this call is very fast, and the effect is get a zero (or almost zero) state size overhead for composite components.

Additionally, it is better in this case to use these classes:

org.apache.myfaces.view.facelets.tag.jsf.PartialMethodExpressionActionListener;
org.apache.myfaces.view.facelets.tag.jsf.PartialMethodExpressionValidator;
org.apache.myfaces.view.facelets.tag.jsf.PartialMethodExpressionValueChangeListener;

to ensure no state is stored in these cases. Note this issue is the solution to the problem described in MYFACES-3551",MYFACES-3556
"In CompositeComponentDefinitionTagHandler, there are some lines that store the Location object inside the composite component, that is used later for EL resolution (CompositeComponentELUtils.LOCATION_KEY), but each time the algorithm pass over that part when the view is refreshed, the same value is stored over and over again. With as simple check we can avoid that and minimize the state size when composite component are used.",MYFACES-3555
"Hi guys,

Thanks again for all the great work you do on MyFaces!

There appears to have been an identical regression between MyFaces 2.0.11 and 2.0.12, and between MyFaces 2.1.5 and 2.1.6. My apologies for not picking this up earlier. This regression is likely related to a suite of unit tests I gave you in MYFACES-2935, though unfortunately I guess my suite didn't cover this particular bug?

I attach 4 versions of the same sample application. You'll see it works for the 2.0.11/2.1.5 versions, but not the 2.0.12/2.1.6 versions. To reproduce:

1. Run the app
2. On the opening page click on contact 'Homer Simpson'
3. Click Edit

In the regressed versions you will see:

java.lang.IllegalStateException: component with duplicate id ""form:j_id_b"" found
org.apache.myfaces.view.facelets.compiler.CheckDuplicateIdFaceletUtils.checkIdsStatefulComponents(CheckDuplicateIdFaceletUtils.java:54)
org.apache.myfaces.view.facelets.compiler.CheckDuplicateIdFaceletUtils.checkIdsStatefulComponents(CheckDuplicateIdFaceletUtils.java:75)
org.apache.myfaces.view.facelets.compiler.CheckDuplicateIdFaceletUtils.checkIdsStatefulComponents(CheckDuplicateIdFaceletUtils.java:75)
org.apache.myfaces.view.facelets.compiler.CheckDuplicateIdFaceletUtils.checkIdsStatefulComponents(CheckDuplicateIdFaceletUtils.java:75)
org.apache.myfaces.view.facelets.compiler.CheckDuplicateIdFaceletUtils.checkIdsStatefulComponents(CheckDuplicateIdFaceletUtils.java:75)
org.apache.myfaces.view.facelets.compiler.CheckDuplicateIdFaceletUtils.checkIdsStatefulComponents(CheckDuplicateIdFaceletUtils.java:35)
org.apache.myfaces.view.facelets.DefaultFaceletsStateManagementStrategy.saveView(DefaultFaceletsStateManagementStrategy.java:488)
	org.apache.myfaces.application.StateManagerImpl.saveView(StateManagerImpl.java:166)
org.apache.myfaces.view.facelets.FaceletViewDeclarationLanguage.renderView(FaceletViewDeclarationLanguage.java:1619)
	org.apache.myfaces.application.ViewHandlerImpl.renderView(ViewHandlerImpl.java:264)
	org.apache.myfaces.lifecycle.RenderResponseExecutor.execute(RenderResponseExecutor.java:115)
	org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:239)
	javax.faces.webapp.FacesServlet.service(FacesServlet.java:191)
	
I'm assuming this is on your end, but if it's a case of you tightening up spec compliance and exposing a bug in my code, please let know!

Regards,

Richard.",MYFACES-3554
"In MyFaces users list, it has been reported that Spring and JSF are slow in GAE when they start, because it is necessary to scan the classpath for .faces-config.xml or .taglib.xml or annotations.

It is possible to put myfaces jars and other jsf related jars outside /WEB-INF/lib folder, but in GAE we can skip this limitation, so it becomes more effective to indicate the jar files to scan in a web config param:

org.apache.myfaces.GAE_JSF_JAR_FILES

MyFaces jars does not need to be scanned so with this param it is possible to set:

    <context-param>
        <param-name>org.apache.myfaces.GAE_JSF_JAR_FILES</param-name>
        <param-value>none</param-value>
    </context-param>

And skip scanning at all (/WEB-INF/classes will still be scanned).

With this changes, startup in GAE will be quick. Note this is not necessary in other application containers, because initialization occur when the application is deployed, and just take some seconds.

Anyway, I consider it is worth to do it.",MYFACES-3553
"consider a component with 5 listeners (or other attached objects). All listeners implement PartialStateHolder.
In a ideal case, delta is 0.

javax.faces.component._DeltaList.saveState(FacesContext) currently creates :
1) a Object [] array with length 5
2) a  _AttachedDeltaWrapper, one for each listener, 5 total

but in the end, when delta is 0, saveState returns null and all object are GCed immediately
",MYFACES-3552
"org.apache.myfaces.view.facelets.tag.jsf.core.SetPropertyActionListenerHandler$SetPropertyListener
org.apache.myfaces.view.facelets.tag.jsf.core.ValueChangeListenerHandler$LazyValueChangeListener
org.apache.myfaces.view.facelets.tag.jsf.core.ActionListenerHandler$LazyActionListener

are not PartialStateHolder and therefore they create instances during PPS in _DeltaList.saveState

all three can be effectively recreated during VDL.buildView and have no delta because they are immutable.",MYFACES-3551
"It is still possible to minimize even more the number of calls to FacesContext.getCurrentInstance(), just doing some small changes in some methods.

For example, Application.createComponent(String componentType) has an internal call to FacesContext.getCurrentInstance(), but the variant Application.createComponent(FacesContext context, String componentType, String rendererType) does not, because it can be retrieved from the parameter. Since rendererType can be null according to JSF spec, the result of both methods is equivalent, so it is possible to use the second variant and save one call per component that does not have rendererType.

Other important place is when EL evaluation occur (FacesCompositeELResolver), FacesContext.getCurrentInstance() is always called, but it is preferred to get the FacesContext from the ELContext first, because a get over a map of 1 or 2 elements will be faster than a ThreadLocal lookup, which is proportional to the number of threads running.
",MYFACES-3550
"I would like to propose an alternative solution to bugs MYFACES-3262 and MYFACES-3510, which consists in rollback the changes made in MYFACES-3510 and modify the solution given in MYFACES-3262 by adding a soft reference to the methods held in the class _PropertyDescriptorHolder.

This alternative solution fixes MYFACES-3262 and avoids the performance loss caused by MYFACES-3510.

More information in this email:
http://markmail.org/message/xh66wlte6luqn63d
",MYFACES-3549
"Issues like MYFACES-3345, MYFACES-3348 are not applied in Messages_en.properties.",MYFACES-3548
"Attaching a test case that shows a problem when using an expression for an attribute in a validator. We have markup that looks like this:

<h:inputText id=""ajaxMy""
value=""#{testBean.myNumber}"">
<f:validateLongRange minimum=""1""
maximum=""#{testBean.maxValue}""/>
<f:ajax execute=""@this""
render=""@form""/>
</h:inputText>

When the value of the maximum attribute is modified via Ajax from another input field, the value of the bean is properly set but the validator doesn't resolve appear to resolve the expression at the right time and the result is that validation occurs against the ""old"" values.",MYFACES-3547
"Hi

I'm trying to load some heavy js file only after a user have clicked on button

so basically when user loads the main page there is a hidden page inside <ui:include

     <h:body>
        <h:form>
            <h:commandButton value=""ClickMe"" action=""#{myBean.callme()}"" >
                <f:ajax render=""includeWrapper""></f:ajax>
            </h:commandButton>
            <h:panelGroup id=""includeWrapper"">
                wrapper
                <h:panelGroup rendered=""#{myBean.show}"">
                    <ui:include src=""/page2.xhtml""></ui:include>
                </h:panelGroup>
            </h:panelGroup>
        </h:form>
    </h:body>


that hidden page got <h:outputScript that should be rendered when  user will click on the commandButton


page2.xhtml looks like this

<ui:composition xmlns=""http://www.w3.org/1999/xhtml"" xmlns:ui=""http://java.sun.com/jsf/facelets""
    xmlns:h=""http://java.sun.com/jsf/html"" xmlns:f=""http://java.sun.com/jsf/core""
    xmlns:c=""http://java.sun.com/jsp/jstl/core"">


    #{myBean.show}
    <h:outputScript library=""js"" name=""myscript.js"" rendered=""#{myBean.show}""/>
    Woooow
</ui:composition>


and my callme looks like this

    public void callme(){
        show = !show;
        System.out.println(""caaaaaaaaaaaal me\t""+show);
    }

This works perfectly in my mojarra sandbox , but for some reason it is not being loaded in my Myfaces 2.0.11 application I even tried the latest 2.1.8 snapshot


After I click on the show button and the script was supposed to be loaded , it gets loaded if I click F5 / Ctrl + F5 / or hit Enter in the URL of the browser... 

Thanks ahead.",MYFACES-3546
"this is a classic one:
https://issues.apache.org/jira/browse/TRINIDAD-73
https://issues.apache.org/jira/browse/MYFACES-1982

From http://www.mail-archive.com/wicket-user@lists.sourceforge.net/msg20937.html:

"" .... It's a bug in Sun's JarURLConnection. The workaround should solve the problems even in 
development mode.


When you open an URL connection to an entry in a jar, you get a
JarURLConnection. The JarURLConnection in the package
sun.net.www.protocol.jar has an internal field

    /* the url connection for the JAR file */
    private URLConnection jarFileURLConnection;

which you cannot access in any way. When you ask for the last modified
time, the JarURLConnection will ask for the header field
""last-modified"", which in turn will ask the jarFileURLConnection for the
that header field, which in turn will cause the initializeHeaders() call
in FileURLConnection, which in turn calls connect() and opens the file
(even though for the last modified header that is quite unnecessary).
The way to close the file is to call getInputStream().close() on the
jarFileURLConnection field, but unfortunately you can't since it is hidden.

There is a very simple workaround though. In code:

            URL url = new URL(""jar:file:jarfile.jar!Entry.class"");
            URLConnection connection = url.openConnection();
            if (connection instanceof JarURLConnection) {
                JarURLConnection jarUrlConnection = (JarURLConnection)
connection;
                URL jarFileUrl = jarUrlConnection.getJarFileURL();
                URLConnection jarFileConnection =
jarFileUrl.openConnection();
                long lastModified = jarFileConnection.getLastModified();
                jarFileConnection.getInputStream().close();
                System.out.println(""last modified="" + new
Date(lastModified));
            }
... ""

This little hack is not done in myfaces DefaultFaceletFactory and FaceletCacheImpl.

Simple workaround is:  javax.faces.FACELETS_REFRESH_PERIOD=0 in Development stage",MYFACES-3545
"The following error occurs if a primefaces datatable is rendered by f:ajax.

Error Message: fragment is null

--------------------------------------------------------
Error Name: clientError
Server error name: TypeError

--------------------------------------------------------
Note, this message is only sent, because project stage is development and no other error listeners are registered.

If an element outside of the table (e.g. the form) is rendered by f:ajax then it works.

I will attach a small example. 

1.) Start it with e.g. tomcat 7 and VM option = -Dfaces.PROJECT_STAGE=Development
2.) call page.xhtml
3.) press the ""update"" button
",MYFACES-3544
"Mobile webkit browser doesn't send an accept header on ajax requests.

java.lang.IllegalArgumentException:   text/xml
at org.apache.myfaces.renderkit.html.HtmlRenderKitImpl.createResponseWriter(HtmlRenderKitImpl.java:299)
at org.apache.myfaces.extensions.cdi.jsf2.impl.scope.conversation.InterceptedRenderKit.createResponseWriter(InterceptedRenderKit.java:56)
at org.apache.myfaces.context.servlet.PartialViewContextImpl.getPartialResponseWriter(PartialViewContextImpl.java:344)
at org.primefaces.context.PrimePartialViewContext.getPartialResponseWriter(PrimePartialViewContext.java:50)",MYFACES-3543
The render attribute of AjaxBehavior should evaluated during post-back after 'Invoke Application' and before 'Render Response'. It's easly to add this feature with a own PartialViewContext. But there is no call to processPartial with 'Invoke Application'. The Phase 'Render Response' is too late if you are using c:if to skip components from the component tree. See attached example app and pictures.,MYFACES-3542
"I implemented a wizard with ui:includes.
The current page of the wizard is included via a dynamic src attribute with an EL expression pointing to the right page.
The second page of this wizard contains a composite component with an actionListener which is defined in the composite:interface.
This actionListener is working well when this page of the wizard is visited the first time!
The actionListener is not called anymore if user navigates back and forth in the wizard, which results in other included components and a changed component tree.

I'll attach a sample web archive and describe the steps in detail.",MYFACES-3541
"Setting the parameter org.apache.myfaces.HANDLE_STATE_CACHING_MECHANICS to false results in a blown up view state on client side.
The content of javax.faces.ViewState is > 10 times larger.

Comparison:
HANDLE_STATE_CACHING_MECHANICS = true
  Request content length: 2369 bytes
  Response content length: 1849 bytes

Same operation with HANDLE_STATE_CACHING_MECHANICS = false
  Request content length: 28095 bytes
  Response content length: 25783 bytes

There seems to be something wrong with the state saving.",MYFACES-3540
"The current codebase throws an error in the timeout area due to a firefox bug, the current firefox codebase does not allow to set a timeout on the xhr object. We need to add a try catch block there to bypass this error and to use our standard timeout mechanism.
",MYFACES-3539
"My colleague Christoph Ledl found the following issue in MyFaces:

----
Wrong implementation of the OPTIONS method

FacesServlet does not handle OPTIONS (and possilby other methods) correctly.
It looks like these request are processed like a GET, which is wrong.

the implementation of FacesServlet.service() does not deal with methods.
one cheap fix would be to send 405 (SC_METHOD_NOT_ALLOWED) for all unsupported methods like TRACE and OPTIONS.

another approach would to extend HttpServlet (instead of implementing Servlet)
and implement only required methods like GET and POST (this would leave the other methods to the default implementation)

citeation of HttpServlet java doc:
There's almost no reason to override the ""service"" method.

Likewise, there's almost no reason to override the ""doOptions"" and ""doTrace"" methods.
---

This materializes in the following Exception:

Feb 28 17:48:13 j04 [http-8080-exec-14]   ERROR log.LogFilter j04 0 43396625FA6E47DF1C03B12B60BF request done OPTIONS /events/ical.xhtml?locale=de&token=488d-1-b7da-f29fcf074 time=749.16ms cpu=610ms ex=IllegalStateException msg=null UA=Microsoft-WebDAV-MiniRedir/6.1.7601
Feb 28 17:48:13 j04 [http-8080-exec-14]   INFO  log.LogFilter params: token=48b0368d-b7da-f2974 locale=de
Feb 28 17:48:13 j04 [http-8080-exec-14]   ERROR [/events].[Faces Servlet] Servlet.service() for servlet Faces Servlet threw exception
Feb 28 17:48:13 j04 java.lang.IllegalStateException
Feb 28 17:48:13 j04      at org.apache.catalina.connector.ResponseFacade.sendRedirect(ResponseFacade.java:435)
Feb 28 17:48:13 j04      at org.apache.myfaces.context.servlet.ServletExternalContextImpl.redirect(ServletExternalContextImpl.java:465)
Feb 28 17:48:13 j04      at org.apache.myfaces.extensions.cdi.jsf.impl.scope.conversation.DefaultWindowHandler.sendRedirect(DefaultWindowHandler.java:104)
Feb 28 17:48:13 j04      at sun.reflect.GeneratedMethodAccessor1600.invoke(Unknown Source)
Feb 28 17:48:13 j04      at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
Feb 28 17:48:13 j04      at java.lang.reflect.Method.invoke(Method.java:597)
Feb 28 17:48:13 j04      at org.apache.webbeans.intercept.InterceptorHandler.invoke(InterceptorHandler.java:329)
Feb 28 17:48:13 j04      at org.apache.webbeans.intercept.NormalScopedBeanInterceptorHandler.invoke(NormalScopedBeanInterceptorHandler.java:122)


Most times this method gets used by mobile browsers in smartphones. 
",MYFACES-3538
"The trigger is this OmniFaces issue: http://code.google.com/p/omnifaces/issues/detail?id=9

OmniFaces has a <description> element right before <namespace> element in the taglib.xml files which describes the taglib.

<facelet-taglib id=""o""
    xmlns=""http://java.sun.com/xml/ns/javaee""
    xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
    xsi:schemaLocation=""http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-facelettaglibrary_2_0.xsd""
    version=""2.0""
>
    <description>OmniFaces UI components.</description>
    <namespace>http://omnifaces.org/ui</namespace>

    ...
</facelet-taglib>

It get parsed fine on Mojarra, but on MyFaces 2.1.7 the following exception occurs:

Caused by: org.xml.sax.SAXException: Error Handling [jar:file:/C:/Users/BalusC/Documents/Work/M4N/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp2/wtpwebapps/omnifaces_test/WEB-INF/lib/omnifaces.jar!/META-INF/omnifaces-ui.taglib.xml@20,33] <description>
	at org.apache.myfaces.view.facelets.compiler.TagLibraryConfig$LibraryHandler.endElement(TagLibraryConfig.java:609)
	at com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.endElement(AbstractSAXParser.java:606)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanEndElement(XMLDocumentFragmentScannerImpl.java:1741)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:2898)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:607)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.next(XMLNSDocumentScannerImpl.java:116)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:488)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:835)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:764)
	at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:123)
	at com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.parse(AbstractSAXParser.java:1210)
	at com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser.parse(SAXParserImpl.java:568)
	at com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl.parse(SAXParserImpl.java:302)
	at javax.xml.parsers.SAXParser.parse(SAXParser.java:195)
	at org.apache.myfaces.view.facelets.compiler.TagLibraryConfig.create(TagLibraryConfig.java:788)
	... 37 more

Removing the <description> element solves the problem. But this is not what we want. Putting the <description> element _after_ the <namespace> element also solves the problem, but Eclipse marks the XML invalid according the XSD.
",MYFACES-3537
"After fixing MYFACES-3530 I enabled Java2 Security in Websphere Application Server Version 8.0 and found the following issue related to using a custom Exception Handler to handle a ViewExpiredException.  

When we Navigate to a page from the customer Exception Handler in the application the following exception occurs:

java.security.AccessControlException: Access denied org.osgi.framework.AdminPermission (id=65) resolve,resource)
	at java.security.AccessController.checkPermission(AccessController.java:108)
	at java.lang.SecurityManager.checkPermission(SecurityManager.java:544)
	at com.ibm.ws.security.core.SecurityManager.checkPermission(SecurityManager.java:208)
	at org.eclipse.osgi.framework.internal.core.BundleResourceHandler.checkAuthorization(BundleResourceHandler.java:289)
	at org.eclipse.osgi.framework.internal.core.BundleResourceHandler.parseURL(BundleResourceHandler.java:128)
	at java.net.URL.<init>(URL.java:608)
	at java.net.URL.<init>(URL.java:476)
	at java.net.URL.<init>(URL.java:425)
	at org.apache.xerces.impl.XMLEntityManager.setupCurrentEntity(Unknown Source)
	at org.apache.xerces.impl.XMLEntityManager.startEntity(Unknown Source)
	at org.apache.xerces.impl.XMLEntityManager.startDTDEntity(Unknown Source)
	at org.apache.xerces.impl.XMLDTDScannerImpl.setInputSource(Unknown Source)
	at org.apache.xerces.impl.XMLDocumentScannerImpl$DTDDispatcher.dispatch(Unknown Source)
	at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanDocument(Unknown Source)
	at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
	at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
	at org.apache.xerces.parsers.XMLParser.parse(Unknown Source)
	at org.apache.xerces.parsers.AbstractSAXParser.parse(Unknown Source)
	at org.apache.xerces.jaxp.SAXParserImpl$JAXPSAXParser.parse(Unknown Source)
	at org.apache.xerces.jaxp.SAXParserImpl.parse(Unknown Source)
	at javax.xml.parsers.SAXParser.parse(Unknown Source)
	at org.apache.myfaces.view.facelets.compiler.SAXCompiler.doCompileViewMetadata(SAXCompiler.java:712)
	at org.apache.myfaces.view.facelets.compiler.Compiler.compileViewMetadata(Compiler.java:126)
	at org.apache.myfaces.view.facelets.impl.DefaultFaceletFactory._createViewMetadataFacelet(DefaultFaceletFactory.java:311)
	at org.apache.myfaces.view.facelets.impl.DefaultFaceletFactory.getViewMetadataFacelet(DefaultFaceletFactory.java:394)
	at org.apache.myfaces.view.facelets.impl.DefaultFaceletFactory.getViewMetadataFacelet(DefaultFaceletFactory.java:376)
	at org.apache.myfaces.view.facelets.FaceletViewDeclarationLanguage._getViewMetadataFacelet(FaceletViewDeclarationLanguage.java:1940)
	at org.apache.myfaces.view.facelets.FaceletViewDeclarationLanguage.access$000(FaceletViewDeclarationLanguage.java:129)
	at org.apache.myfaces.view.facelets.FaceletViewDeclarationLanguage$FaceletViewMetadata.createMetadataView(FaceletViewDeclarationLanguage.java:2049)
	at org.apache.myfaces.application.NavigationHandlerImpl.handleNavigation(NavigationHandlerImpl.java:174)
	at com.ibm.ws.jsf.fat.test.PM62254.ViewExpiredExceptionExceptionHandler.handle(ViewExpiredExceptionExceptionHandler.java:45)  -> Application code

I've attached Exception.txt showing the full stack trace for reference.  The exception looks to come from: 

org.apache.myfaces.view.facelets.compiler.SAXCompiler.doCompileViewMetadata(SAXCompiler.java:712).

I've attached a suggested patch that wraps the offending code in an AccessController.doPrivileged block.  I had to make the following changes to completely fix the problem:

1) Make the ViewMetadataHandler and SAXParser local variables final so they can be used within the doPrivileged block.

2) I had to create a secondary InputStream object ""finalInputStream which is just a copy of the local ""is"" InputStream but is marked final so it can also be used within the doPrivileged block.

3) I also added a nested try/catch block that will catch the PrivilegedActionException and catches the SAXException/IOException and keeps the behavior we had before ( throwing IOException, throwing new FaceletException for the SAXException ). I had to do this since the doPrivileged block wraps the exceptions from parser.parse in a PrivilegedActionException.

4) The new code is only used if System.getSecurityManager() != null so there should be no performance ramifications if security is not enabled.

Please review and let me know if you are ok with my patch.


Thanks!

",MYFACES-3536
"Application port from from Mojarra / Glassfish 3.1 and JBoss 7.1 to WebSphere 8 using MyFaces. With the Mojarra implementation no problems arise, while with MyFaces almost nothing is running! Class not found exceptions, Method not found exceptions, see log trace, while every thing exist and the difference consist of the jsf implementation used by the AS!

The method ProjectHandler#generateDocumentContent() exist, and is declared public!
action=""#{cc.attrs.handler.generateDocumentContent(cc.attrs.handler.documentId[0])}""
""cc.attrs.handler"" is correctly replaced by ""ProjectHandler"" so the syntax is correct and Myfaces should also be able to find the method:
public final String generateDocumentContent(final String contentType) { ... }

[02.05.12 08:22:12:382 MESZ] 0000003a FfdcProvider  W com.ibm.ws.ffdc.impl.FfdcProvider logIncident FFDC1003I: FFDC Inci
dent emitted on D:\programs\IBM\WebSphere\AppServer\profiles\AppSrv01\logs\ffdc\server1_3a1fffb_12.05.02_08.22.12.272254
170309146331495.txt com.ibm.ws.webcontainer.webapp.WebApp.getResourceAsStream 602
[02.05.12 08:22:12:428 MESZ] 0000003a ErrorPageWrit E   An exception occurred
                                 javax.faces.el.MethodNotFoundException: javax.el.MethodNotFoundException: /resources/ut
ils/listMenu.xhtml at line 98 and column 72 action=""#{cc.attrs.handler.generateDocumentContent(cc.attrs.handler.document
Id[0])}"": Method not found: ch.commcity.monterosa.web.ProjectHandler@39c7d55.generateDocumentContent()
	at javax.faces.component._MethodExpressionToMethodBinding.invoke(_MethodExpressionToMethodBinding.java:92)
	at org.apache.myfaces.application.ActionListenerImpl.processAction(ActionListenerImpl.java:100)
	at javax.faces.component.UICommand.broadcast(UICommand.java:120)
	at javax.faces.component.UIViewRoot._broadcastAll(UIViewRoot.java:973)
	at javax.faces.component.UIViewRoot.broadcastEvents(UIViewRoot.java:275)
	at javax.faces.component.UIViewRoot._process(UIViewRoot.java:1285)
	at javax.faces.component.UIViewRoot.processApplication(UIViewRoot.java:711)
	at org.apache.myfaces.lifecycle.InvokeApplicationExecutor.execute(InvokeApplicationExecutor.java:34)
	at org.apache.myfaces.lifecycle.LifecycleImpl.executePhase(LifecycleImpl.java:171)
	at org.apache.myfaces.lifecycle.LifecycleImpl.execute(LifecycleImpl.java:118)
	at javax.faces.webapp.FacesServlet.service(FacesServlet.java:189)
	at com.ibm.ws.webcontainer.servlet.ServletWrapper.service(ServletWrapper.java:1188)
	at com.ibm.ws.webcontainer.servlet.ServletWrapper.handleRequest(ServletWrapper.java:763)
	at com.ibm.ws.webcontainer.servlet.ServletWrapper.handleRequest(ServletWrapper.java:454)
	at com.ibm.ws.webcontainer.servlet.ServletWrapperImpl.handleRequest(ServletWrapperImpl.java:178)
	at com.ibm.ws.webcontainer.filter.WebAppFilterManager.invokeFilters(WebAppFilterManager.java:1020)
	at com.ibm.ws.webcontainer.servlet.CacheServletWrapper.handleRequest(CacheServletWrapper.java:87)
	at com.ibm.ws.webcontainer.WebContainer.handleRequest(WebContainer.java:895)
	at com.ibm.ws.webcontainer.WSWebContainer.handleRequest(WSWebContainer.java:1662)
	at com.ibm.ws.webcontainer.channel.WCChannelLink.ready(WCChannelLink.java:195)
	at com.ibm.ws.http.channel.inbound.impl.HttpInboundLink.handleDiscrimination(HttpInboundLink.java:452)
	at com.ibm.ws.http.channel.inbound.impl.HttpInboundLink.handleNewRequest(HttpInboundLink.java:511)
	at com.ibm.ws.http.channel.inbound.impl.HttpInboundLink.processRequest(HttpInboundLink.java:305)
	at com.ibm.ws.http.channel.inbound.impl.HttpInboundLink.ready(HttpInboundLink.java:276)
	at com.ibm.ws.tcp.channel.impl.NewConnectionInitialReadCallback.sendToDiscriminators(NewConnectionInitialReadCallback.j
ava:214)
	at com.ibm.ws.tcp.channel.impl.NewConnectionInitialReadCallback.complete(NewConnectionInitialReadCallback.java:113)
	at com.ibm.ws.tcp.channel.impl.AioReadCompletionListener.futureCompleted(AioReadCompletionListener.java:165)
	at com.ibm.io.async.AbstractAsyncFuture.invokeCallback(AbstractAsyncFuture.java:217)
	at com.ibm.io.async.AsyncChannelFuture.fireCompletionActions(AsyncChannelFuture.java:161)
	at com.ibm.io.async.AsyncFuture.completed(AsyncFuture.java:138)
	at com.ibm.io.async.ResultHandler.complete(ResultHandler.java:204)
	at com.ibm.io.async.ResultHandler.runEventProcessingLoop(ResultHandler.java:775)
	at com.ibm.io.async.ResultHandler$2.run(ResultHandler.java:905)
	at com.ibm.ws.util.ThreadPool$Worker.run(ThreadPool.java:1659)
Caused by: javax.el.MethodNotFoundException: /resources/utils/listMenu.xhtml at line 98 and column 72 action=""#{cc.attrs
.handler.generateDocumentContent(cc.attrs.handler.documentId[0])}"": Method not found: ch.commcity.monterosa.web.ProjectH
andler@39c7d55.generateDocumentContent()
	at org.apache.myfaces.view.facelets.el.TagMethodExpression.invoke(TagMethodExpression.java:91)
	at javax.faces.component._MethodExpressionToMethodBinding.invoke(_MethodExpressionToMethodBinding.java:88)
	... 33 more",MYFACES-3535
"The enum Role exist as in the following code snippet:

public final class Facets {
   ...
   public enum Role{
     R1, R2, R3;
   }

  ...
}

The application and the shown issue runs fine with Mojarra 2.x under Glassfish 3.1.x and JBoss 7.1.x",MYFACES-3534
"Caused by: javax.el.ELException: requirementsList.xhtml at line 34 and column 56 value=""#{(((req.title).length() lt 23) ? req.title : (req.title).substring(0,20).concat('...'))}"": java.lang.NoSuchMethodException : java.lang.String.substring(java.lang.Long, java.lang.Long)

(req.title).substring(0,20) must call method String.substring(int, int)",MYFACES-3533
Add tomcat7-maven-plugin to myfaces 2.0 archetypes,MYFACES-3532
"There is an infinite loop in DefaultRestoreViewSupport.handlePrefixMapping when there is an empty prefix.  There was a similar issue reported in MyFaces-2891 however the algorithm was not
updated in DefaultrestoreViewSupport.

I've made the same fix in DefaultRestoreViewSupport as was made in DefaultViewHandlerSupport.handlePrefixMapping in MyFaces-2891.

I'll attach a diff showing my changes.  If a sample application is needed I can also provide that as it's a very simple application.",MYFACES-3531
"When implementing a Custom ExceptionHandler to deal with ViewExpiredExceptions as suggested here: http://weblogs.java.net/blog/edburns/archive/2009/09/03/dealing-gracefully-viewexpiredexception-jsf2

The implicit navigation to ""viewExpired"" does not work due to the fact that a ""/"" is not added to the ""viewIdToTest"" in NavigationHandlerImpl.getOutcomeNavigationCase.  The algorithm was correct until we pulled in MYFACES-3101 to avoid
a NullPointerException after a ViewExpiredException.

The exception we see without the patch is the following:

[4/19/12 20:52:15:323 EDT] 00000028 webapp        E com.ibm.ws.webcontainer.webapp.WebApp logServletError SRVE0293E: [Servlet Error]-[Faces Servlet]: org.apache.myfaces.lifecycle.ViewNotFoundException: A view is required to execute RENDER_RESPONSE(6)
	at org.apache.myfaces.lifecycle.RenderResponseExecutor.execute(RenderResponseExecutor.java:62)
	at org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:239)

The view does exist but is no longer found since we don't add a ""/"" since the viewId is null.  

I've also added a couple of additional ""null"" checks that look to have been missed in MyFaces-3101.

A test Application will be provided as well as a diff showing my changes to NavigationHandlerImpl.java and NavigationHandlerImplTest.java ( the ViewExpiredException test needs to look for /viewExpired not viewExpired after the fix...which to me seems correct )
	",MYFACES-3530
"In version 2.1.5 library resources could have bin located in cascaded sub-folders like e.g. resources/group/mylibrary and referenced in a page with: <h:graphicImage library=""group/mylibrary"" name=""image.png"">.
This does not work in version 2.1.7 any more. There you need to put the image file in a direct sub-folder of resources.
So the attribute 'library' is not a path but only a name.

Same situation with location of composite components. They need to be in a direct sub-folder of resources in version 2.1.7 while in version 2.1.5 it worked with cascaded sub-folders too. ",MYFACES-3529
"Last week I did some JMeter testing, profiling and code checking on MyFaces to try increase the overall performance. Here are my suggestions for improvement:

*) _ComponentAttributesMap
I introduced a cache for maps with component attributes. This cache avoids rebuilding the map for every instance of the same component class. It is implemented using a WeakHashMap to allow the GC to remove entries that are not referenced in any instance.

*) UIComponentBase
Made a few changes in isIdValid as it is called quite often. The new id is now checked against the old id and if it is the same it is assumed as valid (avoids checking chars). Additionally I use isLetterOrDigit() and access string chars directly insted of fetching an array first.

*) ImplicitObjectResolver
I replaced List with Map to avoid iteration over lists.

*) HtmlResponseWriterImpl
Use new method of HTMLEncoder for char[]

*) HTMLEncoder
Improved performance of encode mthod and added a new one that takes a char[] und directly writes to a writer.

*) UnicodeEncoder
Replaced StringBuffer with StringBuilder.",MYFACES-3528
"state of composite components is not saved within ui:repeat.

see mailing list: 
http://markmail.org/message/xfl65uuriwjgvf6j?q=ajax+update+composite+component+ui:repeat+list:org%2Eapache%2Emyfaces%2Eusers",MYFACES-3527
"I get a NullPointerException when using the -Dsun.io.serialization.extendedDebugInfo=true on avax.faces.application.Resource.toString()
The problem seems to be that, toString() uses:
  org.apache.myfaces.shared.resource.BaseResourceHandlerSupport.getFacesServletMapping(context)
with ""context"" that might be NULL (which is my case).

Shouldn't toString method use try-catch to prevent exceptions?

Problem seems to be present in 2.1.6 but I didn't test it. 

12:09:13,258 ERROR [org.apache.catalina.core.ContainerBase.[jboss.web].[default-host].[/XXXXXXX].[Spring MVC Dispatcher Servlet]] (http--0.0.0.0-8080-4) Servlet.service() para servlet Spring MVC Dispatcher Servlet lanzó excepción: java.lang.NullPointerException
    at org.apache.myfaces.shared.resource.BaseResourceHandlerSupport.getFacesServletMapping(BaseResourceHandlerSupport.java:155) [myfaces-impl-2.1.5.jar:2.1.5]
    at org.apache.myfaces.shared.resource.BaseResourceHandlerSupport.isExtensionMapping(BaseResourceHandlerSupport.java:119) [myfaces-impl-2.1.5.jar:2.1.5]
    at org.apache.myfaces.shared.resource.ResourceImpl.getRequestPath(ResourceImpl.java:231) [myfaces-impl-2.1.5.jar:2.1.5]
    at org.apache.myfaces.view.facelets.tag.composite.CompositeResouceWrapper.getRequestPath(CompositeResouceWrapper.java:74) [myfaces-impl-2.1.5.jar:2.1.5]
    at javax.faces.application.Resource.toString(Resource.java:91) [classes:1.0.0.0.0-SNAPSHOT]
    at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1387) [rt.jar:1.6.0_26]
    at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1158) [rt.jar:1.6.0_26]
    at java.io.ObjectOutputStream.writeArray(ObjectOutputStream.java:1346) [rt.jar:1.6.0_26]
    at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1154) [rt.jar:1.6.0_26]
    at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1518) [rt.jar:1.6.0_26]
    at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1483) [rt.jar:1.6.0_26]
    at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1400) [rt.jar:1.6.0_26]
    at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1158) [rt.jar:1.6.0_26]
    at java.io.ObjectOutputStream.writeArray(ObjectOutputStream.java:1346) [rt.jar:1.6.0_26]
    at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1154) [rt.jar:1.6.0_26]
    at java.io.ObjectOutputStream.writeArray(ObjectOutputStream.java:1346) [rt.jar:1.6.0_26]
    at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1154) [rt.jar:1.6.0_26]
    at java.io.ObjectOutputStream.writeArray(ObjectOutputStream.java:1346) [rt.jar:1.6.0_26]
    at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1154) [rt.jar:1.6.0_26]
    at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:330) [rt.jar:1.6.0_26]
    at java.util.ArrayList.writeObject(ArrayList.java:570) [rt.jar:1.6.0_26]
    at sun.reflect.GeneratedMethodAccessor152.invoke(Unknown Source) [:1.6.0_26]
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) [rt.jar:1.6.0_26]
    at java.lang.reflect.Method.invoke(Method.java:597) [rt.jar:1.6.0_26]
    at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:945) [rt.jar:1.6.0_26]
    at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1469) [rt.jar:1.6.0_26]
    at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1400) [rt.jar:1.6.0_26]
    at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1158) [rt.jar:1.6.0_26]
    at java.io.ObjectOutputStream.writeArray(ObjectOutputStream.java:1346) [rt.jar:1.6.0_26]
    at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1154) [rt.jar:1.6.0_26]
    at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:330) [rt.jar:1.6.0_26]
    at java.util.ArrayList.writeObject(ArrayList.java:570) [rt.jar:1.6.0_26]
    at sun.reflect.GeneratedMethodAccessor152.invoke(Unknown Source) [:1.6.0_26]
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) [rt.jar:1.6.0_26]
    at java.lang.reflect.Method.invoke(Method.java:597) [rt.jar:1.6.0_26]
    at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:945) [rt.jar:1.6.0_26]
    at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1469) [rt.jar:1.6.0_26]
    at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1400) [rt.jar:1.6.0_26]
    at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1158) [rt.jar:1.6.0_26]
    at java.io.ObjectOutputStream.writeArray(ObjectOutputStream.java:1346) [rt.jar:1.6.0_26]
    at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1154) [rt.jar:1.6.0_26]
    at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:330) [rt.jar:1.6.0_26]
    at java.util.ArrayList.writeObject(ArrayList.java:570) [rt.jar:1.6.0_26]
    at sun.reflect.GeneratedMethodAccessor152.invoke(Unknown Source) [:1.6.0_26]
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) [rt.jar:1.6.0_26]
    at java.lang.reflect.Method.invoke(Method.java:597) [rt.jar:1.6.0_26]
    at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:945) [rt.jar:1.6.0_26]
    at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1469) [rt.jar:1.6.0_26]
    at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1400) [rt.jar:1.6.0_26]
    at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1158) [rt.jar:1.6.0_26]
    at java.io.ObjectOutputStream.writeArray(ObjectOutputStream.java:1346) [rt.jar:1.6.0_26]
    at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1154) [rt.jar:1.6.0_26]
    at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:330) [rt.jar:1.6.0_26]
    at java.util.ArrayList.writeObject(ArrayList.java:570) [rt.jar:1.6.0_26]
    at sun.reflect.GeneratedMethodAccessor152.invoke(Unknown Source) [:1.6.0_26]
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) [rt.jar:1.6.0_26]
    at java.lang.reflect.Method.invoke(Method.java:597) [rt.jar:1.6.0_26]
    at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:945) [rt.jar:1.6.0_26]
    at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1469) [rt.jar:1.6.0_26]
    at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1400) [rt.jar:1.6.0_26]
    at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1158) [rt.jar:1.6.0_26]
    at java.io.ObjectOutputStream.writeArray(ObjectOutputStream.java:1346) [rt.jar:1.6.0_26]
    at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1154) [rt.jar:1.6.0_26]
    at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:330) [rt.jar:1.6.0_26]
    at java.util.ArrayList.writeObject(ArrayList.java:570) [rt.jar:1.6.0_26]
    at sun.reflect.GeneratedMethodAccessor152.invoke(Unknown Source) [:1.6.0_26]
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) [rt.jar:1.6.0_26]
    at java.lang.reflect.Method.invoke(Method.java:597) [rt.jar:1.6.0_26]
    at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:945) [rt.jar:1.6.0_26]
    at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1469) [rt.jar:1.6.0_26]
    at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1400) [rt.jar:1.6.0_26]
    at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1158) [rt.jar:1.6.0_26]
    at java.io.ObjectOutputStream.writeArray(ObjectOutputStream.java:1346) [rt.jar:1.6.0_26]
    at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1154) [rt.jar:1.6.0_26]
    at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1518) [rt.jar:1.6.0_26]
    at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1483) [rt.jar:1.6.0_26]
    at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1400) [rt.jar:1.6.0_26]
    at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1158) [rt.jar:1.6.0_26]
    at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:330) [rt.jar:1.6.0_26]
    at java.util.HashMap.writeObject(HashMap.java:1001) [rt.jar:1.6.0_26]
    at sun.reflect.GeneratedMethodAccessor151.invoke(Unknown Source) [:1.6.0_26]
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) [rt.jar:1.6.0_26]
    at java.lang.reflect.Method.invoke(Method.java:597) [rt.jar:1.6.0_26]
    at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:945) [rt.jar:1.6.0_26]
    at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1469) [rt.jar:1.6.0_26]
    at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1400) [rt.jar:1.6.0_26]
    at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1158) [rt.jar:1.6.0_26]
    at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1518) [rt.jar:1.6.0_26]
    at java.io.ObjectOutputStream.defaultWriteObject(ObjectOutputStream.java:422) [rt.jar:1.6.0_26]
    at org.springframework.webflow.core.collection.LocalAttributeMap.writeObject(LocalAttributeMap.java:327) [classes:1.0.0.0.0-SNAPSHOT]
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) [rt.jar:1.6.0_26]
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39) [rt.jar:1.6.0_26]
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) [rt.jar:1.6.0_26]
    at java.lang.reflect.Method.invoke(Method.java:597) [rt.jar:1.6.0_26]
    at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:945) [rt.jar:1.6.0_26]
    at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1469) [rt.jar:1.6.0_26]
    at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1400) [rt.jar:1.6.0_26]
    at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1158) [rt.jar:1.6.0_26]
    at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:330) [rt.jar:1.6.0_26]
    at java.util.HashMap.writeObject(HashMap.java:1001) [rt.jar:1.6.0_26]
    at sun.reflect.GeneratedMethodAccessor151.invoke(Unknown Source) [:1.6.0_26]
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) [rt.jar:1.6.0_26]
    at java.lang.reflect.Method.invoke(Method.java:597) [rt.jar:1.6.0_26]
    at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:945) [rt.jar:1.6.0_26]
    at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1469) [rt.jar:1.6.0_26]
    at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1400) [rt.jar:1.6.0_26]
    at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1158) [rt.jar:1.6.0_26]
    at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1518) [rt.jar:1.6.0_26]
    at java.io.ObjectOutputStream.defaultWriteObject(ObjectOutputStream.java:422) [rt.jar:1.6.0_26]
    at org.springframework.webflow.core.collection.LocalAttributeMap.writeObject(LocalAttributeMap.java:327) [classes:1.0.0.0.0-SNAPSHOT]
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) [rt.jar:1.6.0_26]
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39) [rt.jar:1.6.0_26]
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) [rt.jar:1.6.0_26]
    at java.lang.reflect.Method.invoke(Method.java:597) [rt.jar:1.6.0_26]
    at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:945) [rt.jar:1.6.0_26]
    at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1469) [rt.jar:1.6.0_26]
    at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1400) [rt.jar:1.6.0_26]
    at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1158) [rt.jar:1.6.0_26]
    at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:330) [rt.jar:1.6.0_26]
    at org.springframework.webflow.engine.impl.FlowSessionImpl.writeExternal(FlowSessionImpl.java:154) [classes:1.0.0.0.0-SNAPSHOT]
    at java.io.ObjectOutputStream.writeExternalData(ObjectOutputStream.java:1429) [rt.jar:1.6.0_26]
    at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1398) [rt.jar:1.6.0_26]
    at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1158) [rt.jar:1.6.0_26]
    at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:330) [rt.jar:1.6.0_26]
    at java.util.LinkedList.writeObject(LinkedList.java:943) [rt.jar:1.6.0_26]
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) [rt.jar:1.6.0_26]
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39) [rt.jar:1.6.0_26]
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) [rt.jar:1.6.0_26]
    at java.lang.reflect.Method.invoke(Method.java:597) [rt.jar:1.6.0_26]
    at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:945) [rt.jar:1.6.0_26]
    at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1469) [rt.jar:1.6.0_26]
    at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1400) [rt.jar:1.6.0_26]
    at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1158) [rt.jar:1.6.0_26]
    at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:330) [rt.jar:1.6.0_26]
    at org.springframework.webflow.engine.impl.FlowExecutionImpl.writeExternal(FlowExecutionImpl.java:312) [classes:1.0.0.0.0-SNAPSHOT]
    at java.io.ObjectOutputStream.writeExternalData(ObjectOutputStream.java:1429) [rt.jar:1.6.0_26]
    at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1398) [rt.jar:1.6.0_26]
    at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1158) [rt.jar:1.6.0_26]
    at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:330) [rt.jar:1.6.0_26]
    at org.springframework.webflow.execution.repository.snapshot.SerializedFlowExecutionSnapshot.serialize(SerializedFlowExecutionSnapshot.java:173) [classes:1.0.0.0.0-SNAPSHOT]
    at org.springframework.webflow.execution.repository.snapshot.SerializedFlowExecutionSnapshot.<init>(SerializedFlowExecutionSnapshot.java:70) [classes:1.0.0.0.0-SNAPSHOT]
    at org.springframework.webflow.execution.repository.snapshot.SerializedFlowExecutionSnapshotFactory.createSnapshot(SerializedFlowExecutionSnapshotFactory.java:70) [classes:1.0.0.0.0-SNAPSHOT]
    at org.springframework.webflow.execution.repository.snapshot.AbstractSnapshottingFlowExecutionRepository.snapshot(AbstractSnapshottingFlowExecutionRepository.java:75) [classes:1.0.0.0.0-SNAPSHOT]
    at org.springframework.webflow.execution.repository.impl.DefaultFlowExecutionRepository.putFlowExecution(DefaultFlowExecutionRepository.java:126) [classes:1.0.0.0.0-SNAPSHOT]
    at org.springframework.webflow.executor.FlowExecutorImpl.resumeExecution(FlowExecutorImpl.java:171) [classes:1.0.0.0.0-SNAPSHOT]
    at org.springframework.webflow.mvc.servlet.FlowHandlerAdapter.handle(FlowHandlerAdapter.java:183) [classes:1.0.0.0.0-SNAPSHOT]
    at org.springframework.faces.webflow.JsfFlowHandlerAdapter.handle(JsfFlowHandlerAdapter.java:48) [classes:1.0.0.0.0-SNAPSHOT]
    at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:790) [spring-webmvc-3.0.5.RELEASE.jar:3.0.5.RELEASE]
    at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:719) [spring-webmvc-3.0.5.RELEASE.jar:3.0.5.RELEASE]
    at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:644) [spring-webmvc-3.0.5.RELEASE.jar:3.0.5.RELEASE]
    at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:549) [spring-webmvc-3.0.5.RELEASE.jar:3.0.5.RELEASE]
    at javax.servlet.http.HttpServlet.service(HttpServlet.java:734) [jboss-servlet-api_3.0_spec-1.0.0.Final.jar:1.0.0.Final]
    at javax.servlet.http.HttpServlet.service(HttpServlet.java:847) [jboss-servlet-api_3.0_spec-1.0.0.Final.jar:1.0.0.Final]
    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:329) [jbossweb-7.0.10.Final.jar:]
    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:248) [jbossweb-7.0.10.Final.jar:]
    at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:368) [spring-security-web-3.0.5.RELEASE.jar:3.0.5.RELEASE]
    at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:109) [spring-security-web-3.0.5.RELEASE.jar:3.0.5.RELEASE]
    at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83) [spring-security-web-3.0.5.RELEASE.jar:3.0.5.RELEASE]
    at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380) [spring-security-web-3.0.5.RELEASE.jar:3.0.5.RELEASE]
    at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:97) [spring-security-web-3.0.5.RELEASE.jar:3.0.5.RELEASE]
    at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380) [spring-security-web-3.0.5.RELEASE.jar:3.0.5.RELEASE]
    ...",MYFACES-3526
"Inconsistent behavior for required field validation when javax.faces.INTERPRET_EMPTY_STRING_SUBMITTED_VALUES_AS_NULL is set to true versus false

To observe behavior:
1. Set javax.faces.INTERPRET_EMPTY_STRING_SUBMITTED_VALUES_AS_NULL to true in web.xml

2. Create JSF Page:

<h:form>
<h:messages showSummary=""true""/>
<h:inputText value=""#{page1Controller.firstName}""
required=""true""
requiredMessage=""You must enter a first name""/>
<h:commandButton value=""Submit""/>
</h:form>

3. Create Managed Bean:

@ManagedBean
public class Page1Controller
{

public String getFirstName()
{ return ""Default Value""; }

public void setFirstName(String value)
{ // no-op (for example purposes only) }

4. Load JSF page, blank out value in the input field and click Submit

5. Error message is displayed, however the value in the input field (which you formerly blanked out) is now reset back to its original value.

6. Change the javax.faces.INTERPRET_EMPTY_STRING_SUBMITTED_VALUES_AS_NULL setting to false and re-run the test.

7. Note that the value in the input field remains blank.

Behavior is inconsistent and should be fixed (javax.faces.INTERPRET_EMPTY_STRING_SUBMITTED_VALUES_AS_NULL setting of true or false should not result in inconsistent behavior with required fields)

----

To state in a different way:

When INTERPRET_EMPTY_STRING_SUBMITTED_VALUES_AS_NULL is TRUE, and you blank out a value for a required field that had previously been populated by the model, submit the form, you will see the OLD data from the model in the field. However, if that field had had a format validation applied to it and the user submits the form with a format validation error, the OLD data is NOT shown in the field (instead, the submitted/invalid data is shown). The same should happen for required field validation errors. The field should show the ""blank"" data and not the original model data. In order to get the correct behavior, the developer has to currently set INTERPRET_EMPTY_STRING_SUBMITTED_VALUES_AS_NULL to false. But they should not have to do this... whether INTERPRET_EMPTY_STRING_SUBMITTED_VALUES_AS_NULL is true or false, the behavior of showing the blank field that the user submitted should be the same.
",MYFACES-3525
"We were migrating from MyFaces 1.1.8 to MyFaces 2.1.6, when we ran into a really crippling problem:
Whenever an uncaught error happens, MyFaces 2.1.6 just returns a blank page, and doesn't show anything on the log, either. Naturally, this error makes it almost impossible to even find out what error is ocurring. 
Couldn't the error at least be shown in the log?",MYFACES-3524
"I have introduced a javascript error in my Firefox 3.5/3.6 double eval fix. This needs to be fixed.
",MYFACES-3523
"The collectionType attribute of h:selectManyCheckbox is not processed correctly.

The value attribute of selectManyCheckbox points to a Map with an ArrayList containing Strings as values, representing the selected values.
The checkboxes are initially correctly checked, but after ajax submission the model (Map<Sting,Object) contains StringArrays instead of ArrayLists.
This worked well since JSF 1.0, but it does not work with 2.1 anymore.
It can be easily reproduced with MyFaces only.
I see this as critical because ClassCastException are thrown as a result in application code.",MYFACES-3522
"click 2x times on link

			<h:form>
				<script>
					var x= new String(""a"")
				</script>
				<script>
					(1==3)? 'd':'e';
				</script>
				<h:commandLink value=""link"">
					<f:ajax render=""@form""/>
				</h:commandLink>
			</h:form>


I'm not sure that is bug but works in jsf-ri.
In real scenario problem occurs for example if AUTO_SCROLL in contex-param is set to true and rich:tooltip is used.

Rendered HTML markup:

<script>
<!--
new RichFaces.ui.Tooltip(""j_id_v:j_id_3y"",{""ajax"":{""incId"":""1""} ,""target"":""j_id_v:j_id_3y"",""offset"":[10,10] } )
//-->
</script>
<script>
<!--
(!window.myfaces) ? window.myfaces = {} : null;(!myfaces.core) ? myfaces.core = {} : null;(!myfaces.core.config) ? myfaces.core.config = {} : null;myfaces.core.config.autoScroll = true;
//-->
</script>


see
https://issues.jboss.org/browse/RF-12130",MYFACES-3521
"I have an scenario where an xhml is included. The included file has a parameter with the same name as some outer variable. In the included file the parameter is ignored and the outer variable is used. 

Some xhtml:
<c:forEach var=""item"" begin=""1"" end=""3"">
    <div>
        <ui:include src=""templateContextTestInclude.xhtml"">
            <ui:param name=""item"" value=""#{item + 10}"" />
        </ui:include>    
    </div>
</c:forEach> 

templateContextTestInclude.xhtml:
<!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Transitional//EN"" 
""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"">
<html xmlns=""http://www.w3.org/1999/xhtml""
    xmlns:ui=""http://java.sun.com/jsf/facelets""
    xmlns:h=""http://java.sun.com/jsf/html""
    xmlns:f=""http://java.sun.com/jsf/core""
    xmlns:c=""http://java.sun.com/jsp/jstl/core""
    xmlns:t=""http://myfaces.apache.org/tomahawk"">

    <body>
        <ui:composition>        
            Item: <h:outputText value=""#{item}"" /><br/>       
        </ui:composition>
    </body>
</html>  

I found out that the ""hierarchy"" of VariableMappers is asked for a value before the 'DefaultVariableMapper' tests the current template/page context. That was not what I expected. Is that how it should be?
In JSF1 it works that way.

(If I change the VariableMapperWrapper locally to test the template/page context first the behaviour is as I would have expected (don't know if it is the right place ;-)):
    public ValueExpression resolveVariable(String variable)
    {
        
        AbstractFaceletContext faceletContext = (AbstractFaceletContext) FacesContext.getCurrentInstance().getAttributes().get(FaceletContext.FACELET_CONTEXT_KEY);
        
        //Check on page and template context
        PageContext pageContext = faceletContext.getPageContext(); 
        if (pageContext != null && pageContext.getAttributeCount() > 0)
        {
            if (pageContext.getAttributes().containsKey(variable))
            {
                ValueExpression returnValue = pageContext.getAttributes().get(variable);
                if (_trackResolveVariables)
                {
                    _variableResolved = true;
                }
                return returnValue;
            }
        }
        
        TemplateContext templateContext = faceletContext.getTemplateContext();
        if (templateContext  != null && !templateContext.isParameterEmpty())
        {
            if (templateContext.getParameterMap().containsKey(variable))
            {
                ValueExpression returnValue = templateContext.getParameter(variable);
                if (_trackResolveVariables)
                {
                    _variableResolved = true;
                }
                return returnValue;
            }
        }
        
        ValueExpression ve = null;
        ....
)

Thanks in advance,
dennis
",MYFACES-3520
"Hi,

I am testing MyFaces 2.1.6 with ProjectStage=Development. And I have an Javascript-error: Firefox showes me that 'myfaces.core.impl.xhrCore.engine' is undefined. After looking around I found that the jsf-uncompressed.js loads some libraries, i.e.:

    _ls(""#{resource['org.apache.myfaces.core.impl.xhrCore.engine:XhrConst.js']}"", null, null, ""UTF-8"", false);
    _ls(""#{resource['org.apache.myfaces.core.impl.xhrCore.engine:FormData.js']}"", null, null, ""UTF-8"", false);
    _ls(""#{resource['org.apache.myfaces.core.impl.xhrCore.engine:Xhr1.js']}"", null, null, ""UTF-8"", false);
    _ls(""#{resource['org.apache.myfaces.core.impl.xhrCore.engine:IFrame.js']}"", null, null, ""UTF-8"", false);


The replaced JS in Firefox for these entries looks like the following:

    _ls("""", null, null, ""UTF-8"", false);

The resources are packaged under:

META-INF/internal-resources/org.apache.myfaces.core.impl.xhrCore/engine

The ResourceLoader expects them to be in:

META-INF/internal-resources/org.apache.myfaces.core.impl.xhrCore.engine

After changing it in my local myfaces-jar all libraries could be loaded.
",MYFACES-3519
"Hello, when I use the following BeanClass and xhtml page, Datatable is not populated with data, despite the method getAll() returns ResultSet that contains customer names.
Code line System.out.println(crs.getString(""Name"")) iterates through the ResultSet and prints customer names from customer table before the ResultSet is being returned to h:dataTable component. This is what I get in Tomcat log:

..........

*******************************************************************
*** WARNING: Apache MyFaces-2 is running in DEVELOPMENT mode.   ***
***                                         ^^^^^^^^^^^         ***
*** Do NOT deploy to your live server(s) without changing this. ***
*** See Application#getProjectStage() for more information.     ***
*******************************************************************

29/03/2012 22:19:57 org.apache.coyote.AbstractProtocol start
INFO: Starting ProtocolHandler [""http-bio-8080""]
29/03/2012 22:19:57 org.apache.coyote.AbstractProtocol start
INFO: Starting ProtocolHandler [""ajp-bio-8009""]
29/03/2012 22:19:57 org.apache.catalina.startup.Catalina start
INFO: Server startup in 4706 ms
29/03/2012 22:19:58 org.apache.myfaces.util.ExternalSpecifications isUnifiedELAvailable
INFO: MyFaces Unified EL support enabled

Start of Debug

William Dupont
William Dupont

End of Debug

This is the ManagedBean:

package com.corejsf;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.annotation.Resource;
import javax.faces.bean.*; 
import javax.sql.DataSource;
import javax.sql.rowset.CachedRowSet;


@ManagedBean
@RequestScoped

public class CustomerBean {
	
	@Resource(name=""jdbc/Sufa"") private DataSource ds;
	  
    public ResultSet getAll() throws SQLException {
      
      Connection conn = ds.getConnection();
	  try { 
        
        Statement stmt = conn.createStatement();        
        ResultSet result = stmt.executeQuery(""SELECT * FROM customers"");         
        CachedRowSet crs = new com.sun.rowset.CachedRowSetImpl();         
        crs.populate(result);
        
        System.out.println(""Start of Debug"");
        
        while(crs.next()) {
          System.out.println(crs.getString(""Name""));
	    }
        
        System.out.println(""End of Debug"");
	       
        return crs;
        
      } finally {
	    conn.close();
      }
    }
}


This is xhtml page:

<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Transitional//EN""  
""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"">
<html xmlns=""http://www.w3.org/1999/xhtml""
	xmlns:f=""http://java.sun.com/jsf/core""
	xmlns:h=""http://java.sun.com/jsf/html""
	xmlns:ui=""http://java.sun.com/jsf/facelets"">
<h:body>
<h:form>

<h:dataTable value=""#{customerBean.all}"" var=""customer"">
  <h:column>
    <f:facet name=""header"">#{msgs.nameHeader}</f:facet>
      #{customer.Name}
  </h:column>
</h:dataTable>

</h:form>
</h:body>
</html>

It's important to mention that the same code works perfect when I change JSF implementation to mojarra-2.1.7.
It's seems like a bug.

Thanks a lot

Sagi

",MYFACES-3518
"This is a regression bug, on firefox 3.6- all scripts are evaluated twice.
This bug was revealed by a standard regression testing against firefox 3.6.
",MYFACES-3516
"Hello,

I get an IllegalStateException using a facet in a composite component. The facet gets the same id as the internal 'composite component'-facet. The facet is created using CumponentSupport.addFacet(). Here the id of the facet is generated using the view root instead of the UniqueIdVendor of the parent to whom the facet is added.

In other places the id is retrieved with something like

        FaceletCompositionContext mctx = FaceletCompositionContext.getCurrentInstance(facesContext);
        UniqueIdVendor uniqueIdVendor = mctx.getUniqueIdVendorFromStack();
        if (uniqueIdVendor == null)
        {
            uniqueIdVendor = facesContext.getViewRoot();
        }
	String uid = uniqueIdVendor.createUniqueId(facesContext, null);",MYFACES-3515
"Hello,

I just copied the emails of the problem that not all children of composite components will be rendered out of the dev-list in here.

------
Hi Leonardo,

that was my first attempt too. But as I mentioned earlier, we have also own TagHandlers (no UserTagHandlers, they extends TagHandler) - that ones will be still ignored... Maybe there can be a special marker interface? So that the 'list' is more dynamically? (But I am not very glad with this solution if anyone having own tag handlers must do a special thing to get them work with composite components (?)...)

Greetings,
dennis

Hi Dennis

I have checked the code and I think we can consider all UserTagHandler
instances as containers of components (just like DecorateHandler and
IncludeHandler). That means if <cc:insertChildren> is used, all
instances of UserTagHandler should be executed in the place when
<cc:insertChildren> is called. So we just need to increase the list
to:

- javax.faces.view.facelets.ComponentHandler.class
- InsertChildrenHandler.class
- InsertHandler.class
- DecorateHandler.class
- IncludeHandler.class
- TextHandler.class
- UserHagHandler.class

After looking carefully this issue, it seems we need to include <c:if>
and <c:choose> too.

Could you please create an issue for this one in

https://issues.apache.org/jira/browse/MYFACES

so I can fix it?

regards,

Leonardo

2012/3/27 Dennis Hörsch <hoersch@his.de>:
> Hi,
>
> I was expecting that composite components behave like any other.
>
> I am currently updating a big project from JSF1 to 2. We have many usages of
> JSTL as 'child'-components. And our 'old-fashioned' facelets components now
> are UserTagHandlers in the end. This ones will also be ignored...
>
> I had a look an at CompositeComponentResourceTagHandler and changed it in
> the way that 'newly' added childs are stored and will later be added to the
> right component. My simple test scenario works, but I have no clue about
> Partial State Saving and if there are any other cases that may be affected.
>
> I attached it, can you have a look?
>
> Thank you,
> dennis hoersch
>
>
> Am 26.03.2012 22:42, schrieb Leonardo Uribe:
>
> Hi
>
> Difficult question. You should avoid that trick, or at least use c:if
> inside you custom tag to make it work properly. Really there are some
> details that will not work as expected.
>
> First of all, <c:if> code has changed since the original code inside
> facelets, to ensure proper operation with JSF 2.0 Partial State
> Saving. It is very complex to explain, but in resume, no component
> like c:if can be created without rely in some implementation details.
>
> The second part is composite component algorithm cannot recognize the
> tag as a tag containing component instances, so if the composite
> component uses cc:insertChildren, the part related to the tag will not
> be applied correctly. The solution in this case is use a composite
> component or a normal component instead a facelets user tag. Anyway,
> maybe we can do something better in this part (
> org.apache.myfaces.view.facelets.tag.composite.CompositeComponentResourceTagHandler),
> and try to detect better cases like the one described here.
>
> regards,
>
> Leonardo Uribe
>
> 2012/3/26 Dennis Hörsch <hoersch@his.de>:
>
> Hey,
>
> I have a problem with composite components. The scenario is as follows:
>
> <his:someCompositeComponent id=""outer"">
>     <h:inputText id=""first"" ... />
>
>     <his:someTagHandlerTag condition=""bla"">
>         <h:inputText is=""second"" ... />
>     </his:someTagHandlerTag>
> </his:someCompositeComponent>
>
> The problem is, only the first input field is rendered. The second is not.
> After building the component tree, the first is a child of the 'composite
> component'-facet of the surrounding UINamingContainer (outer), the second
> ends as child of the UINamingContainer. The 'HtmlCompositeComponentRenderer'
> renders only the children of the facet.
>
> The 'someTagHandlerTag' is handled by a subclass of TagHandler. If the
> condition is true, it calls the nextHandler (second-input field) which adds
> the input as child to the composite component.
>
> It is the same with the JSTL-Tags: If I have a 'c:if' inside a composite
> component, it will not be rendered in any case.
>
> Is this how it should be? Or should this tags also be rendered (handled) as
> childs using composite components?
>
> I hope that I could clarify the problem 
>
> Thank you,
> dennis hoersch
>
",MYFACES-3514
"When two client behaviors are provided and one uses default event while second has event provided

<html xmlns=""http://www.w3.org/1999/xhtml"" xmlns:f=""http://java.sun.com/jsf/core"" xmlns:h=""http://java.sun.com/jsf/html""
    xmlns:fryc=""http://fryc.eu/behavior"">
<h:body>
    <h:inputText>
        <f:ajax event=""change"" />
        <fryc:behavior1 />
    </h:inputText>
</h:body>
</html>

these scripts are chained wrong:

<input id=""j_id_3"" name=""j_id_3"" type=""text"" value="""" onchange=""jsf.util.chain(document.getElementById('j_id_3'), event,'jsf.ajax.request(\'j_id_3\',event,{\'javax.faces.behavior.event\':\'change\'})''alert(\'xyz\')'); return false;"" />


Note there is no space between quotes before alert: ...''alert(\'xyz\')'); return false;"" />
-------------------------


There is source code for additional behavior:



@FacesBehavior(""eu.fryc.Behavior1"")
public class Behavior1 extends ClientBehaviorBase {
    
    @Override
    public String getScript(ClientBehaviorContext behaviorContext) {
        return ""alert('xyz')"";
    }
}


<facelet-taglib xmlns=""http://java.sun.com/xml/ns/javaee"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
    xsi:schemaLocation=""http://java.sun.com/xml/ns/javaee
http://java.sun.com/xml/ns/javaee/web-facelettaglibrary_2_0.xsd""
    version=""2.0"">

    <namespace>http://fryc.eu/behavior</namespace>
    <tag>
        <tag-name>behavior1</tag-name>
        <behavior>
            <behavior-id>eu.fryc.Behavior1</behavior-id>
        </behavior>
    </tag>
</facelet-taglib>

-------------------------

Note that if you provide events explicitly for both behaviors (or not provide events at all), chaining works as expected.",MYFACES-3513
"We have a set of internal events which go beyound of what JSF 2.x can deliver, to use those we have for now to add a context param to our web.xml. Now JDK6 has a service faclity which we should use optionally if present to load the plugins as services.
The commits under this issue will enable this facilty if present.
",MYFACES-3512
"If you click the ajaxified commandButton the ui:include switches.
After a few clicks, the switch doesn't work correct anymore. You must click twice to switch the include, which is a bug.

The problem is caused by multiple childs within a facet. If the facet has only one child, everything works as expected.
This issue is a regression. See MYFACES-3455 There was the identical problem.

A testcase to reproduce this issue is attached.
http://localhost:8080/jsftest/simplenavtest.jsf",MYFACES-3511
"We've seen an application classloader memory leak due to the new class javax.faces.component._PropertyDescriptorHolder class introduced in version 2.1.6

This class holds a reference to a Method of a component loaded by the application classloader. The memory leak shows up when the _PropertyDescriptorHolder is stored in the _ComponentAttributesMap class that is loaded by the system class loader.

You should use a WeakReference instead of storing the direct reference to the Method",MYFACES-3510
"While running one of our test applications in IE8 we got this ""Object doesn't support this property or method"" error occurring.
After debugging the code the problem was located in api/src/main/javascript/META-INF/resources/myfaces/_impl/_util/_Lang.js code. It seems that 'arrForEach' is trying to use the browser native 'forEach' function but it fails since IE8 (or IE7) does not implement it.

Here is a constructed call stack that shows when and where the error occurs:

(startPos) ? arr.slice(startPos).forEach(func, thisObj) : arr.forEach(func, thisObj); -- file: api/src/main/javascript/META-INF/resources/myfaces/_impl/_util/_Lang.js, line: 346
this._Lang.arrForEach(this._q, closure, this._space);  -- file: api/src/main/javascript/META-INF/resources/myfaces/_impl/_util/_Queue.js, line: 155
this.each(broadCastFunc); -- file: api/src/main/javascript/META-INF/resources/myfaces/_impl/_util/_ListenerQueue.js, line: 80
this._evtListeners.broadcastEvent(eventData); -- file: api/src/main/javascript/META-INF/resources/myfaces/_impl/core/Impl.js, line: 564
....

I noticed that in api/src/main/javascript/META-INF/resources/myfaces/_impl/_util/_LangQuirks.js there's a version of 'arrForEach' function that iterates over elements using a plain 'for' loop. Unfortunately this version of the method is not loaded because of the condition at the top of the file is not fulfilled. I attached a patch that we used to get things going. Of course you might have a better solution to this issue.

Here's also the original JIRA case: http://jira.icesoft.org/browse/ICE-7899 ",MYFACES-3509
"With MyFaces 2.1.7-SNAPSHOT sometimes we see this stacktrace:


Caused by: java.lang.ClassCastException: 
org.apache.myfaces.renderkit.html.HtmlTextRenderer cannot be cast to 
javax.faces.event.ComponentSystemEventListener
at 
javax.faces.component.UIComponent$EventListenerWrapper.restoreState(UIComponent.java:1600)
at 
javax.faces.component.UIComponentBase.restoreAttachedState(UIComponentBase.java:1878)
at javax.faces.component._DeltaList.restoreState(_DeltaList.java:254)
at 
javax.faces.component.UIComponentBase.restoreAttachedState(UIComponentBase.java:1878)
at 
javax.faces.component.UIComponentBase.restoreFullSystemEventListenerClassMap(UIComponentBase.java:2181)
at javax.faces.component.UIComponentBase.restoreState(UIComponentBase.java:2021)
at javax.faces.component.UIOutput.restoreState(UIOutput.java:209)
at 
javax.faces.component.UIComponentBase.processRestoreState(UIComponentBase.java:1593)
at 
org.apache.myfaces.view.facelets.DefaultFaceletsStateManagementStrategy$2.invokeContextCallback(DefaultFaceletsStateManagementStrategy.java:441)
at javax.faces.component.UIComponent.invokeOnComponent(UIComponent.java:227)
at 
javax.faces.component.UIComponentBase.invokeOnComponent(UIComponentBase.java:1136)
at javax.faces.component.UIComponent.invokeOnComponent(UIComponent.java:238)
at 
javax.faces.component.UIComponentBase.invokeOnComponent(UIComponentBase.java:1136)


test and other informations:
http://www.mail-archive.com/users@myfaces.apache.org/msg58543.html
",MYFACES-3508
,MYFACES-3507
"Myfaces generate a message ""component with duplicate id ""id"" found."" currently completely without information where is the first, or the second component with duplicate id. 

In big view with many lines and naming containers or with multilevel templating is very hard to solve this problem.

Provide information about:
1) first component
2) second component with duplicate id
3) lines/columns in xhtml
",MYFACES-3506
see attached patch for proposed change,MYFACES-3505
"Some parts of code can use org.apache.myfaces.shared.renderkit.html.util.SharedStringBuilder and replace:

1) String concatenation 
2) new StringBuilder/Buffer 

with one shared StringBuilder instance.",MYFACES-3504
"<f:setPropertyActionListener value=""#{10}"" target=#{bean.booleanProperty}  /> leads to exception: 

Cannot convert 10 of type class java.long.Long to class java.lang.Boolean

but without line/column (without javax.faces.view.Location), because expressionFactory.coerceToType is not oam-LocationAware operation.

See attached patch for details.

",MYFACES-3503
"There is a subtle but important bug when f:metadata sections are processed. Between the view metadata is created and the whole view is built, facelets algorithm discard and recreate all components. In typical situations this effect is not visible, because there is a description spec code that hide this effect. See UIViewParameter.setSubmittedValue() javadoc:

""... PENDING (docs) Interesting that submitted value isn't saved by the parent ...""

The discussion comes from issue:

MYFACES-2645 The view state is saved before encodeAll() is called on every UIViewParameter in an AJAX request

In that time, I commented the following:

LU>> The javadocs of UIViewParameter.encodeAll says this:

LU>> "".......Called specially by UIViewRoot.encodeEnd(javax.faces.context.FacesContext), this method simply sets the submitted value to be the return from 
LU>> getStringValue(javax.faces.context.FacesContext)......""

LU>> My question is why? isn't that bad? 

In that time, the discussion was related to how to preserve the view params in ajax request. The argument was submittedValue is set to null on process validations, and it is necessary a way to preserve that value into the state. 

The solution in that issue is valid, but what happen when validation fails? submittedValue should not change, so why its value is lost before encodeAll() is processed?. 

By performance reasons, two different facelets are used for a view: one for create metadata that just process stuff inside <f:metadata> and the other for build the whole view (including metadata too). Since there are two different facelets, generated in different way, the associated tagId is different and then the generated ComponentSupport.MARK_CREATED identifier is different too. Then, when the whole view is processed, facelets cannot identify the component as the same, so it is removed and created again, and in the process submittedValue and localValue are discarded, looking as if they are set to null. 

The solution is ensure facelets generate the same unique ids in ComponentSupport.MARK_CREATED when f:metadata is processed, no matter if the metadata facelet or the normal facelet process the view. CompilationManager.nextTagId() uses the alias and a counter to derive an unique tag id, so it will obviously generate different tags, so the idea is ignore that part of the unique id when f:metadata section is processed, and fix DefaultFaceletContext.generateUniqueId(), so it generate the same id.",MYFACES-3502
"Similar to MYFACES-3214:
ld code uses:

 catch(Exception ex)
        {
            throw new FacesException(""Could not retrieve value of component with path : ""+
                    getPathToComponent(component),ex);
        }

to provide path to problematic component. With JSF 2.0 and exception handler is is not necessary (and only makes stacktrace harder to read), because:
1) exception is always queued with component instance (see MYFACES-3201 and MYFACES-3199)
2) every EL expression knows about it's location (MYFACES-3202) ",MYFACES-3501
"Since once the first request is processed Application.setResourceHandler cannot be called, it is safe to cache it on CompositeResourceLibrary and TagLibraryImpl. In this way we can prevent unnecessary calls to FacesContext.getCurrentInstance() each time a facelet page is compiled",MYFACES-3500
,MYFACES-3499
"Create shared-public module as discussed on dev list. See discussion:

http://markmail.org/message/ujqdvipurs6zzju5?q=[DISCUSS]+how+to+get+rid+of+tons+of+duplicated+code

",MYFACES-3498
"org.apache.myfaces.view.facelets.tag.jsf.core.EventHandler

* cache created MethodExpressions (same as in MYFACES-3160)
* if f:event type="""" is literal, cache resulting class
* review implementation of  EventHandler.Listener.processEvent(ComponentSystemEvent): uses ""void"" El method invocation to detect if method exists - spec requires this but maybe better solution exists
* ....",MYFACES-3497
"Jetty 8 maven plugin is out and since people is using JSF2 / EL 2.2 / Servlet 3.0 , it could be good to use that plugin for all our JSF 2 archetypes.

Also, I would like to contribute with a maven archetype I use frequently to debug myfaces stuff. It has some profile configurations that makes easier test myfaces in some situations, and also use some utilities used to create junit tests inside myfaces core. For example, it has a test case that checks if a xhtml can be recognized by facelets compiler.

",MYFACES-3496
"When using bean validation, I notice the default validation groups are stored fully into the state.

This is done because MYFACES-2528 requires this field to be stored fully.

We can add some logic to prevent add the default validationGroup. In that way, only when other validationGroup is used or when the validationGroup changes by some reason, the field will be saved. At the end, the state will be smaller. ",MYFACES-3495
"There are two possible optimizations for DefaultFaceletsStateManagementStrategy

- When saving the view, do not call getClientId() unless necessary. 
- Check when there are no state to be restored and if that so, skip tree traversal.
- Check when only the viewRoot needs to be restored and if that so, restore root and skip tree traversal.

These changes will improve speed and memory a little bit, since myfaces pss algorithm is highly optimized and has usually zero or almost zero delta. ",MYFACES-3494
"The existent resources are cached in the public Resource createResource(String resourceName, String libraryName, String contentType) method,
which is good, but the information about resources, which are not existent ( deriveResourceMeta(loader, resourceName, libraryName, localePrefix) returned null ) is not cached.
Thus at the next requests for the same resource the same resource lookup operations will happen, which may be expensive.
In my case, for example (Tomcat + Spring + MyFaces + Tomahawk), for every html tag, lookup on the file system and in all classpaths (including ~30 jars) is performed (and failing), which de-gradates response time by factor of 25!",MYFACES-3493
It is good for performance to reduce the ammount of calls to FacesContext.getCurrentInstance(). There are some indirected ways to trigger that call without warning using getClientId(). The idea is pass or cache facesContext when possible.,MYFACES-3492
"hi all

i am getting the following error when running on appengine.

Unable to use direct char[] access of java.lang.String

i found some src code that alowed for onfiguration of the the chararray access.

http://svn.apache.org/repos/asf/myfaces/core/trunk/shared/src/main/java/org/apache/myfaces/shared/util/StringCharArrayAccessor.java

it uses a poperty to disable using the char access.
static volatile boolean enabled = !Boolean
            .getBoolean(""oam.stringchararrayaccessor.disabled"");
where is this property set? 
it is not documented anywhere.",MYFACES-3491
"In my JSF-Page I got a <h:commandButton> with styleClass set. In web.xml I disabled JavaScript (JavaScript isn't allowed on the hole page).

On then rendered page on Firefox, the CommandButton will not change its style, because the ""class""-tag is missing. If I turn on JavaScript in web.xml, everything works fine and also the ""class""-tag for the CommandButton is rendered successfully.
What I'm doing wrong or is this a bug in myfaces 2.1.6?

Best wishes and many thank you very much!!
Tobi",MYFACES-3490
"The code shown in 
https://issues.apache.org/jira/browse/MYFACES-3375

sets the static initialization variable ""portlet20Supported"" properly, and the static final boolean  _PORTLET_20_SUPPORTED has the correct value, but the code at line 129 doesn't properly check the flag to identify the request type. 

    if(_PORTLET_10_SUPPORTED)

should be: 

    if(_PORTLET_10_SUPPORTED || _PORTLET_20_SUPPORTED)

In WebSphere portal environments, the existing code doesn't property identify button clicks as Action events.  ",MYFACES-3489
"Inspired on the suggestions done in MYFACES-3470 and MYFACES-3471, I have found a solution for both cases.

MARK_CREATED and rendererType are special properties. Both are more related to the real UIComponent instance, which means those properties does not change for components inside a table (h:dataTable rowStatePreserved=""true""). 

In the case of MARK_CREATED, almost all components created by facelets uses it, and this is assigned when the view is built. It has only sense to save this value when the component needs to be restored fully, but since this is a property that does not change once created, it does not have sense to store it on the delta. 

In the case of rendererType, the same as MARK_CREATED happens, but by the spec, it could be valid to set a ValueExpression for it and it is feasible to create a component, call markInitialState() and then call setRendererType(...), so this value could be saved on the delta.

Components that are created without properties (for example h:panelGroup) only require these two properties, so storing these values at UIComponentBase it is possible to prevent create unnecessary Map.Entry instances. ",MYFACES-3488
"It could be good to cache unique ids and reduce the impact in memory such generation has in memory. It is possible to cache:

1. The generated unique ids at level 0 per view. If the view is not dinamic the generated list will always be the same, but it will change per view. The ideal is store it in a volatile field.
2. The component unique ids passed to generate later an unique id in UniqueIdVendor.createUniqueId(). By the spec it is not possible to hook createUniqueId, but we can reuse for that counter the generated values ""at level 0"" (which means for components that are not in a dynamic part).

It is possible to use FaceletCompositionContext.startComponentUniqueIdSection(), to indicate the ""level 0"" where all unique ids will be generated whithout change.

The cache proposed in 2. can be enabled by default, because it is something more related to the counter, but the cache for 1. it is too risky. I tried by default and it pass all tests, but for now I'll let it by default false to prevent problems.

 The proposal is add these two params:

    /**
     * Enable or disable a cache used to ""remember"" the generated facelets unique ids and reduce 
     * the impact on memory usage, only active if javax.faces.FACELETS_REFRESH_PERIOD is -1 (no refresh).
     */
    @JSFWebConfigParam(defaultValue = ""false"", since = ""2.0.13, 2.1.7"", expectedValues=""true, false"", 
            group=""viewhandler"", tags=""performance"",
            desc=""Enable or disable a cache used to 'remember'  the generated facelets unique ids "" + 
                 ""and reduce the impact over memory usage."")
    public static final String INIT_PARAM_VIEW_UNIQUE_IDS_CACHE_ENABLED = 
        ""org.apache.myfaces.VIEW_UNIQUE_IDS_CACHE_ENABLED"";
    public static final boolean INIT_PARAM_VIEW_UNIQUE_IDS_CACHE_ENABLED_DEFAULT = false;
    
    /**
     * Set the size of the cache used to store strings generated using SectionUniqueIdCounter
     * for component ids. If this is set to 0, no cache is used. By default is set to 100.
     */
    @JSFWebConfigParam(defaultValue = ""100"", since = ""2.0.13, 2.1.7"",
            group=""viewhandler"", tags=""performance"")
    public static final String INIT_PARAM_COMPONENT_UNIQUE_IDS_CACHE_SIZE =
        ""org.apache.myfaces.COMPONENT_UNIQUE_IDS_CACHE_SIZE"";
    public static final int INIT_PARAM_COMPONENT_UNIQUE_IDS_CACHE_SIZE_DEFAULT = 100;

If no objections I'll commit the solution proposed soon.",MYFACES-3487
"FactoryFinder.getFactory() contains some synchronized blocks. The code is fast enough, but it could be good to prevent those calls if is not really necessary. 

Checking this stuff I had an idea about how to prevent those calls. The idea is call FactoryFinder.getFactory() in the factory itself, and then pass the factory as a param for the object that uses it (FacesContext or PartialViewContext or whatever). Also, we can replace VisitContext.createVisitContext with calling the factory and then getVisitContext() directly (note createVisitContext is an static method thought for users). Additionally, add some volatile variables in some places to prevent multiple initializations is a good idea too.",MYFACES-3486
"Use facesContext attribute map instead request map is a good idea for some reasons:

- Store on request or session map causes unnecessary servlet events to be propagated. Most of the time myfaces uses those variables as a flags or as a temporal cache.
- facesContext attributes has the same lifetime of FacesContext, which usually is an invariant of jsf internal flags/cache vars.

",MYFACES-3485
"Some tests shows that use Collections.synchronizedMap for create a LRU cache cause some contention.

We have 3 places susceptibles for this optimization:

- org.apache.myfaces.shared.resource.ResourceHandlerCache
- org.apache.myfaces.shared.application.DefaultViewHandlerSupport
- org.apache.myfaces.lifecycle.DefaultRestoreViewSupport

Instead use Collections.synchronizedMap, we can use solr org.apache.solr.util.ConcurrentLRUCache.  For example:

_checkedViewIdMap = new ConcurrentLRUCache<String, Boolean>((maxSize * 4 + 3) / 3, maxSize);

We set the lower mark on maxSize and the upper mark at 1.33 maxSize. Solr implementation is very good for these cases. In typical situations, user will set maxSize to a value that prevents cache cleanup.",MYFACES-3484
"@PostConstruct annotated method in abstract class is not called when managed bean extends this class

 public abstract class AbstractTest {

            @PostConstruct
            public void init() {

            }
    }

    @ManagedBean
    @SessionScoped
    public Test extends AbstractTest {

    }


",MYFACES-3483
"As preparation for jsf 2.2 we need a get windowid function in jsf.js. Since the windowid is developed under the apache myfaces umbrella we are going to do the initial commits here for this functionality.
",MYFACES-3482
"myfaces in Production stage:

<f:validateBean>
            <h:outputLabel>myfaces</h:outputLabel>
</f:validateBean>

(or book.xhtml in myfaces-jpa test app)

In every request/response, this invocation appears:

MetaRulesetImpl.<init>(Tag, Class<?>) line: 118	
ComponentTagHandlerDelegate.createMetaRuleset(Class) line: 459	
HtmlComponentHandler(DelegatingMetaTagHandler).createMetaRuleset(Class) line: 102	
HtmlComponentHandler.createMetaRuleset(Class) line: 42	
HtmlComponentHandler(MetaTagHandler).setAttributes(FaceletContext, Object) line: 63	
HtmlComponentHandler(DelegatingMetaTagHandler).setAttributes(FaceletContext, Object) line: 93	
ComponentTagHandlerDelegate.apply(FaceletContext, UIComponent) line: 235	
HtmlComponentHandler(DelegatingMetaTagHandler).apply(FaceletContext, UIComponent) line: 53	
ValidatorTagHandlerDelegate.apply(FaceletContext, UIComponent) line: 152	
ValidatorHandler(DelegatingMetaTagHandler).apply(FaceletContext, UIComponent) line: 53	

this applies for all children of f:validateBean

Without f:validateBean Metatag rules are created only once in production stage during initial request to facelet.

(Not sure if it is a bug - maybe something special needs to be done for f:beanValidator )

It also leads to stack bellow - but _getFactory method is synchronized and slow down response times to  the same facelet:

FactoryFinder._getFactory(String) line: 259	
FactoryFinder.getFactory(String) line: 206	
ConvertNumberHandler(DelegatingMetaTagHandler).<init>(TagConfig) line: 42	
ConvertNumberHandler(FaceletsAttachedObjectHandler).<init>(TagConfig) line: 42	
ConvertNumberHandler(ConverterHandler).<init>(ConverterConfig) line: 44	
ConvertNumberHandler.<init>(ConverterConfig) line: 57	
NativeConstructorAccessorImpl.newInstance0(Constructor, Object[]) line: not available [native method]	
NativeConstructorAccessorImpl.newInstance(Object[]) line: 39	
DelegatingConstructorAccessorImpl.newInstance(Object[]) line: 27	
Constructor<T>.newInstance(Object...) line: 513	
AbstractTagLibrary$UserConverterHandlerFactory.createHandler(TagConfig) line: 593	
CoreLibrary(AbstractTagLibrary).createTagHandler(String, String, TagConfig) line: 98	
CompositeTagLibrary.createTagHandler(String, String, TagConfig) line: 93	
TagUnit.createFaceletHandler() line: 56	
TextUnit.createFaceletHandler() line: 104	
TagUnit(CompilationUnit).getNextFaceletHandler() line: 82	
TagUnit.getNextHandler() line: 61	
AbstractTagLibrary$ComponentConfigWrapper.getNextHandler() line: 431	
HtmlComponentHandler(TagHandler).<init>(TagConfig) line: 39	
HtmlComponentHandler(MetaTagHandler).<init>(TagConfig) line: 35	
HtmlComponentHandler(DelegatingMetaTagHandler).<init>(TagConfig) line: 40	
HtmlComponentHandler(ComponentHandler).<init>(ComponentConfig) line: 37	
HtmlComponentHandler.<init>(ComponentConfig) line: 37	
GeneratedConstructorAccessor17.newInstance(Object[]) line: not available	
DelegatingConstructorAccessorImpl.newInstance(Object[]) line: 27	
Constructor<T>.newInstance(Object...) line: 513	
AbstractTagLibrary$UserComponentHandlerFactory.createHandler(TagConfig) line: 519	
HtmlLibrary(AbstractTagLibrary).createTagHandler(String, String, TagConfig) line: 98	
CompositeTagLibrary.createTagHandler(String, String, TagConfig) line: 93	
TagUnit.createFaceletHandler() line: 56	
TextUnit.createFaceletHandler() line: 104	
TagUnit(CompilationUnit).getNextFaceletHandler() line: 82	",MYFACES-3481
"goal: make component tree creation fast as possible and avoid unnecessary instances

some components instantialize attributes direct in field or in constructor. In many cases it is not necessary, because those HashMap/Set instances are not used in current request/response - it depends on use case.

Example: UIViewRoot.listenerSuccessMap: lazy init is very suitable, because many view have no phase listener.

Check all components: candidates are ""smarter"" components like UIDate or UIInput",MYFACES-3480
"This seems like dead code but invokes attributeMap.remove operation and that alocates some objects.

See the attached patch for details.",MYFACES-3479
"hints = new HashSet();
hints.add(VisitHint.SKIP_UNRENDERED)

can be replaced with EnumSet.of(...).

The result is safe to multiple threads (with read operations) - a constant can be used instead of new instance every time.

",MYFACES-3478
"instances of byte [] are created in:
1) org.apache.myfaces.shared.util.StateUtils.getAsByteArray(Object, ExternalContext)
2) org.apache.myfaces.shared.util.serial.DefaultSerialFactory.getObjectOutputStream
3) writer.writeObject(object); in org.apache.myfaces.shared.util.StateUtils.getAsByteArray
4) org.apache.myfaces.shared.util.StateUtils.encode(byte[])
5) org.apache.myfaces.shared.util.serial.DefaultSerialFactory.getObjectInputStream(InputStream)
6) org.apache.myfaces.shared.util.StateUtils.reconstruct(String, ExternalContext)

those allocations are not performance problem; only in cumulative time are those methods #1 source of byte [] in myfaces - maybe can be some of them removed.",MYFACES-3477
"When the filter (CDataEndEscapeFilterWriter) parses 2 CDATA End tags, it passes an incorrect length to the writer throwing an exception further down the stack.  The incorrect length comes from the method write(char[] cbuf, int off, int len).  On the second match of the end tag the (offset+length) passed to the super.write can be greater than the (offset+length) passed to the method.  Suggested fix:
change index = i+1; to index = off+i+1; and
change super.write(cbuf, index, i+1);
to super.write(cbuf, index, i+1 - ( index - off ) );",MYFACES-3476
"HtmlResponseWriterImpl is a very light object created many times. But its constructor uses a memory intensive test if character encoding is valid:

            // validates the encoding, it will throw an UnsupportedEncodingException if the encoding is invalid
            try
            {
                new String(""myfaces"".getBytes(), characterEncoding);
            }
            catch (UnsupportedEncodingException e)
            {
                throw new IllegalArgumentException(""Unsupported encoding: ""+characterEncoding);
            }

this code is number 1. of byte [] allocations in my tests.

We can probably remove this check entirely: a exception  will be thrown a few moments later if encoding is not supported

Review other code in constructor too - it must be fast as possible.
",MYFACES-3475
"It seems that
org.apache.myfaces.config.ManagedBeanBuilder.buildManagedBean(FacesContext, ManagedBean) tries to locale implementation of a interface, but the instance found is never stored in application map: see code in org.apache.myfaces.config.annotation.LifecycleProviderFactory.getLifecycleProviderFactory(ExternalContext)

this lead to Webappclassloader.loadClass invocation, which is sychronized and accesses disk.

Can significantly affect perfomance of myfaces app with managed-bean in multithreaded environment.

maybe reason for http://prezi.com/dr3on1qcajzw/www-world-wide-wait-devoxx-edition/ ?

",MYFACES-3474
HtmlRenderer.getChildren calls component.getChildren() directly and initializes _ComponentChildrenList instance even if component has no children.,MYFACES-3473
patch attached,MYFACES-3472
"It initializes StateHelper Map and creates new HashMap$Entry instance for .put(""rendererType"", null) operation. 

ComponentResourceContainer
HtmlColumn
UIDebug
UINamingContainer
UIPanel
UIParameter
UISelectItem
UISelectItems
UIViewParameter
UIViewRoot

(needs modification of myfaces maven build plugin)",MYFACES-3471
"Whe using PPS,  ComponentTagHandlerDelegate.apply:

1) generates a unique id: String id = ctx.generateUniqueId(_delegate.getTagId());
2) stores it in component.attributes under key MARK_CREATED c.getAttributes().put(ComponentSupport.MARK_CREATED, id)

both  steps creates new instances (StringBuilder, HashMap.Entry). 

But is seems, that this MARK_CREATED is used only in case of RefreshingTransientBuild = true and it is probably not necessary create and store that id for every component.",MYFACES-3470
"java.util.Collections.emptyList() is singleton instance of java.util.Collections.EmptyList class, but this class inherits from java.util.AbstractList and creates new garbage iterator java.util.AbstractList.Itr instance in every foreach  loop.

It is better to use own singleton instance (similar as google guava has)

same for java.util.Collections.emptySet()

",MYFACES-3469
"this is mostly done with ""if (component.getFacetCount() > 0)"" check, but few places are not optimized",MYFACES-3468
see MYFACES-3130 for details,MYFACES-3467
"When giving a managed bean the name of the class, methods annotated with @PostConstruct are not called after construction  of the bean.
Example:

@ManagedBean( name = ""TestBean"" )
public class TestBean {
  @PostConstruct
  void init() {
  }
}",MYFACES-3466
"As discussed with Leonardo, i create an issue with the stateless jsf extension. 
The code: http://www.mediafire.com/?3wr72zlch7ly1wc (also prepared with myfaces namespace and checkstyle)

This extension is based on: http://industrieit.com/blog/2011/11/stateless-jsf-high-performance-zero-per-request-memory-overhead/ (Thanks to Rudi!)
I completely refactored the code and made it compatible with mojarra and myfaces (with extra modules).



",MYFACES-3465
"There seems to be no way to use an EL other than what is provided by Websphere (have not checked with any other server).

We are using JSF 2 via isolated shared library with Websphere  version 7.0.0.17. Trying to use jBoss-el by adding it to the isolated shared libraries or to lib directory and setting 

 <context-param>
        <param-name>org.apache.myfaces.EXPRESSION_FACTORY</param-name>
        <param-value>org.jboss.el.ExpressionFactoryImpl</param-value>
    </context-param>

in web.xml does not make myfaces pickup the supplied EL.

In the logs this line is written [13/02/12 15:19:06:113 EST] 00000029 ExternalSpeci I   MyFaces Unified EL support disabled.

tracked it down to this method org.apache.myfaces.util.ExternalSpecifications#isUnifiedELAvailable() . The try block throws a error as can not find class ( and method but exception is thrown at the first check i.e class) and catch block sets the return value to false. This stopping it to use an externally supplied EL . 

I have also asked this question on SO

http://stackoverflow.com/questions/9091354/how-can-i-update-websphere-7-to-use-el2-2",MYFACES-3464
"Right now, the code in org.apache.myfaces.view.facelets.component.UIRepeat has not been reviewed more than to fix issues related to JSF 2 spec. It works, but it can be done better.

The code has the following opportunities:

- Implement PSS algorithm, to prevent store data in the state.
- The algorithm used in UIData to handle state is better.
- Fix MYFACES-3415",MYFACES-3463
"Related to topic sent on jsr344-experts list:

[jsr344-experts] Facelet page with dynamic content and update ajax content does not work as user expects

Now take a look at this example:

include.xhtml

<h:commandLink ...>
   <f:ajax render=""content""/>
</h:commandLink>
...
<f:subview id=""content"">
<ui:include src=""#{testManagedBean.page}""/>
</f:subview>

page1.xhtml

<ui:composition
    xmlns:h=""http://java.sun.com/jsf/html""
    xmlns:f=""http://java.sun.com/jsf/core""
    xmlns:ui=""http://java.sun.com/jsf/facelets"">
<h:outputText id=""component1"" value=""Page 1""/>
<!-- ... more components ... -->
</ui:composition>

page2.xhtml

<ui:composition
    xmlns:h=""http://java.sun.com/jsf/html""
    xmlns:f=""http://java.sun.com/jsf/core""
    xmlns:ui=""http://java.sun.com/jsf/facelets"">
<h:outputStylesheet ... />
<h:outputText id=""component2"" value=""Page 2""/>
<!-- ... more components ... -->
</ui:composition>

Here the problem is if the dynamic content changes and add a resource under
""head"" target (h:outputStylesheet does that), shouldn't be added a section
on the ajax payload to update the <head> section? In theory yes, because
this breaks encapsulation principle. If the user says render all inside
content if the <head> section changes it is responsability of the framework
(in this case PartialViewContext) to detect that an send the correct
payload, right?. Here we have two options:

a. Keep track of the resources rendered and save that on the state, then use
that information to check if the head should be rendered. 
b. Use PostAddToViewEvent to check when a change on the component tree has 
triggered a change on the head.

Option b. save some bytes on the state but it could cause render <head> 
section more than necessary (for example a dynamic change but the head
has already rendered the resource, so it is not necessary). Option a.
impose that you need a way to check if the <head> was changed, and
require changes on the spec. 

I'll solve this problem adding a web config param:

org.apache.myfaces.STRICT_JSF_2_REFRESH_TARGET_AJAX

 on MyFaces and doing some
changes on the algorithm, adding a flag to indicate if a view is being built
by first time. 
",MYFACES-3462
"The Problem appeared testing with myfaces-impl-2.0.7 and is still visible in the 2.1.6 Code.

HtmlRendererUtils.renderSelectOptions() loops over all SelectItems of a SelectBox to render them.
Rendering depends on the activation state of both the item to be rendered and the entire SelectBox. Therefore the method queries the ""diasbled"" property of the UI component to be rendered (SelectBox). This is performed in the SelectItem-Loop so it may happen very often (depending on the size of the Select-List).
It happens that queriing the ""disabled"" property implies calling the ViewBean to obtain the SelectItem-List (which the Method itself loops over!). This can be a perfromance issue if obtaining the SelectItem-List takes some time (in our example every single call  took 10ms and the list consisted of 150 items so the call was performed 150 times which adds up to 1.5s). Anyway there is a lot of unnecessary Reflection and Method Calls to be avoided.

We solved the issue by simply moving the detection of the UI component's ""disabled""-Property out of the loop.",MYFACES-3461
"During the migration from JSF 1.2 to 2.1 I noticed that the onsubmit attribute of forms is not executed for ajax links.

Sample:

<html xmlns=""http://www.w3.org/1999/xhtml""
      xmlns:ui=""http://java.sun.com/jsf/facelets""
      xmlns:h=""http://java.sun.com/jsf/html""
      xmlns:f=""http://java.sun.com/jsf/core"">
<ui:composition>

<h:form id=""myform"" onsubmit=""alert('submitted')"" >
<h:outputText id=""oldCounter"" value=""oldCounter: #{MyController.counter}""/><br/>
<h:outputText id=""newCounter"" value=""newCounter: #{MyController.counter}""/><br/>

<h:commandButton value=""AjaxButton"" actionListener=""#{MyController.increase}"" >
<f:ajax render=""newCounter"" execute=""@this""/>
</h:commandButton><br/>
<h:commandButton value=""Button"" actionListener=""#{MyController.increase}""/>
</h:form>

</ui:composition>
</html>

@ManagedBean(name = ""MyController"")
@SessionScoped
public class MyController{
  private int counter = 1;
  public int getCounter() {
    return counter;
  }
  public void increase(ActionEvent ae) {
    counter++;
  }
}

This is also not working with mojarra 2.1.6 and 2.0.8.

I used the onsbumit with JSF 1.2 in order to lock the screen and prevent double submits.
Now I do not see any working alternative in JSF 2.1",MYFACES-3460
"RegexValidator uses javax.faces.validator.RegexValidator.NOT_MATCHED 2x:

javax.faces.validator.RegexValidator.NOT_MATCHED= the passed value is not a String, or when the pattern does not match the passed value.

the first usage for"" if (value instanceof String)"" check does not provide args for {0} {1} in message.


",MYFACES-3459
"Doing stress tests on a JSF application we have noticed some contention.
14% of the time that the threads are blocked is due to calls to ClassLoader#getResource(String). Such calls comes from method  org.apache.myfaces.shared.resource.ResourceImpl#getUrl(). (see attached image)

Viewing the code of the method ResourceImpl#getURL(), it is always calculating the URL of the resource through the ResourceLoader. This, in turn, ends up calling the method ClassLoader#getResource(String).


    public URL getURL()
    {
        return getResourceLoader().getResourceURL(_resourceMeta);
    }

Since the resulting URL will not change during the life of the resource instance, it could be stored in an instance variable and thus prevent subsequent calls to this method end up calling the ClassLoader.


    private URL _url;

    public URL getURL()
    {
    	if (_url == null) {
    		_url = getResourceLoader().getResourceURL(_resourceMeta);
    	}
        return _url;
    }


With this change applied we obtained a performance improvement between 14% and 119% of throughput, depending on the complexity of the rendered view.
",MYFACES-3458
"A recent fix on 2.1.6-SNAPSHOT over EL resolvers revealed the method ImplicitObjectResolver.makeResolverForJSP does not register ""resource"" as described on JSF 2.0 section 5.6.1.1. Previous versions of myfaces does not have the fix, so works as expected.",MYFACES-3457
"We have introduced a small refactoring bug, which should not affect to many users. The eval codebase currently does not load javascript files due to a wrong if condition.
",MYFACES-3456
"If you click the ajaxified commandButton the ui:include switches. 
After a few clicks, the switch doesn't work correct anymore. You must click twice to switch the include, which is a bug.

A testcase to reproduce this issue is attached. Note, that this issue doesn't appear within myfaces 2.1.5

http://localhost:8080/jsftest/navtest.jsf",MYFACES-3455
"If you use myfaces 2.1.6-SNAPSHOT, a composite component is not rendered correctly anymore. With myfaces-2.1.5 everything is ok.
A testcase to reproduce this issue is attached.

http://localhost:8080/jsftest/componenttest.jsf",MYFACES-3454
"TomcatAnnotationLifecycleProvider and Tomcat7AnnotationLifecycleProvider log all managed bean creation with info level, filling the log with unnecessary data. It is better to log such informantion if the level is finest (or trace in commons-logging).",MYFACES-3452
"Implement change according to mail sent about it to dev list under the name:

[core] Improve PSS algorithm when a dynamic view (use of c:if or ui:include src=#{...}) is used

In the last months I have been working on a solution to improve Partial State Saving (PSS) performance in cases where the view is updated dynamically by effect of a facelet tags like:

- <c:if ...>
- <c:when>
- <ui:include src=""#{...}"">
- <ui:decorate template=""#{...}"">

In simple words, any use of the previous tags in a page causes all components inside them to be saved and restored fully. The side effect is the overall state gets bigger. With the introduction of PSS in JSF 2.0, instead save an array of properties, a key/value pairs are used, so usually this effect is difficult to notice, but it is relevant specially when <ui:include src=""#{...}""> is used to update content dynamically. It is quite simple to find examples with a search engine on the internet.

I'll explain in detail what's going on.

Let's see what happen when c:if is used:

<c:if test=""#{condition}"">
    <h:outputText value=""Some text""/>
</c:if>

The first time the view is rendered, if the condition is false, the component is not added, but later in a postback if the condition changes from false to true, the component is added. Here the algorithm have two options:

1. Ignore it.
2. Mark the component or branch to be restored fully.

Most of the time ignore (1) is ok, but in some complex cases the state synch is lost, because test=""#{condition}"" is evaluated every time the view is restored, with different results. The users usually have reported this as ""state get lost"" or ClassCastException problems. To deal with such cases, a special mode was added in MyFaces to implement (2) with a web config param called org.apache.myfaces.REFRESH_TRANSIENT_BUILD_ON_PSS.

But what happen if the algorithm save c:if ""condition"" the first time the view is rendered? With that, PSS algorithm will always restore the initial view as expected. Recently in 2.0.10 / 2.1.4, this improvement (MYFACES-3329) was added so it is no longer necessary to enable the web config param. Great! But note this does not solve the ""state gets bigger"" problem.

Now consider what happen if c:if ""condition"" is saved every time it change (before render response). If the condition is false and changes to true, the initial state will now be restored including the
component, so if it is called markInitialState() over the component, and then the delta is saved, the state size will be smaller and finally it will be saved more efficently, because the initial state is the one who gets bigger, instead the part that is saved as delta.

This solution can be applied to <c:if ...>, <c:when>, <ui:include src=""#{...}""> and <ui:decorate template=""#{...}"">, which is enough because <c:forEach> can be replaced with <h:dataTable rowStatePreserved=true ...> or a similar component like the ones available in Tomahawk or any other variant. It is interesting to note the solution also fix the problem when <h:dataTable rowStatePreserved=true ...> is used inside a dynamic part.

Fortunately, the spec doesn't say anything about how markInitialState() is called, and let it as an implementation detail. Also, javax.faces.IS_BUILDING_INITIAL_STATE description is so general that even with the change there is no need to change the javadoc. After considering all history behind PSS algorithm, it seems reasonable to activate markInitialState() call and set javax.faces.IS_BUILDING_INITIAL_STATE to true when a dynamic update in a component tree is done by a facelet tag, and deactivate it as soon as the code process the content.

At the end, applications using the previous tags will have a really huge improvement into its state. But anyway, since it is a ""extension"" of the initial intention of the flag, I consider desirable to mention it. It is difficult to measure the impact, because it depends of the view structure itself, but it sounds like a very promising change.

Suggestions, opinions and what you do want to say about this proposed change is welcome. If no objections, I'll commit the proposed change soon.",MYFACES-3451
"Looking for a solution to replace the default FastWriter implementation, with one that allocate multiple blocks on demand, and in this way reduce the memory used to render a page, I founded one cool implementation in:

org.codehaus.groovy.grails.web.util.StreamCharBuffer

http://grails.org/doc/latest/api/org/codehaus/groovy/grails/web/util/StreamCharBuffer.html

This file has Apache v2.0 license, so we can include it into MyFaces and use it into our HtmlResponseWriterImpl as internal buffer. I did some performance tests and I notice the impact in speed is minimal or non existent, but in memory it is good enough, because HtmlResponseWriterImpl usually is cloned on ajax requests and FastWriter always initialize a buffer, no matter if it is used or not, and if the page is big, the buffer grows without unnecessary copy operations.

",MYFACES-3450
"The current implementation of PartialResponseWriter uses a StringWriter with an inner StringBuilder to store the data and then post-process it, escaping CDATA ending sections.

After checking the code I notice it is possible to replace the buffer with a Filter that escape such sections ""on the fly"". This will reduce the memory used to handle ajax requests and improve speed a little bit, because the jvm does not longer need to expand over and over such buffer to fit the response.",MYFACES-3449
"The UISelectOne.validateValue(...) code is not particularly human-readable to say the least.
Also, in the case of a match(the norm) the method this.isRequired() is called twice(!) if it returns false.
Patch attached. (100% tested for all permutations of match, isRequired & NoSelection)",MYFACES-3448
"The method addComponentResource of the class UIViewRoot makes a check over the Id attribute of each component that will be inserted into the componentResources list:

<code>

        // If the component ID of componentResource matches the ID of a resource that has already been added, remove the old resource.
        String componentId = componentResource.getId();

       ...

        else if (componentId != null)
            {
                for(Iterator<UIComponent> it = componentResources.iterator(); it.hasNext();)
                {
                    UIComponent component = it.next();
                    if(componentId.equals(component.getId()) && componentResource != component)
                    {
                        it.remove();
                    }
                    else if (componentResource == component)
                    {
                        alreadyAdded = true;
                    }
                }
            }

</code>

As you can see, if there are two components with the same Id but different clientId, only one of them will be included in the header:

<bks:outputStylesheet id=""testStyle"" library=""css1"" name=""test1.css""/> <!-- Its clientId is testStyle -->

<form id=""form"">
...
<bks:outputStylesheet id=""testStyle"" library=""css2"" name=""test2.css""/> <!-- Its clientId is form:testStyle -->
...
</form>

This situtation can be solved using the clientId instead of the id attribute:

<code>
        // If the component CLIENT_ID of componentResource matches the CLIENT_ID of a resource that has already been added, remove the old resource.
        String componentId = componentResource.getClientId();
</code>
       ",MYFACES-3447
"There are some improvements we can do for our html Renderers:

- Complete the optimization started in MYFACES-3237, reducing call to getAttributes().get().
- Replace StringBuffer with StringBuilder.
- Optimize client behaviors like with MYFACES-3237 too.
- ValueExpressions that return empty String ("""") for a passthrough property should not be rendered, because it is not necessary.
- Create some new optimized methods for render properties, but let the old api intact for now.",MYFACES-3446
"The default ResponseWriter implementation creates and discard too many StringBuilder instances. I think we can rearrange the code to prevent create those instances and write directly on the stream, or reuse the allocated buffers if necessary. Additionally, there is a check for UTF-8 encoding that is done over and over, that we can replace storing it into a boolean variable.",MYFACES-3445
"If i do sorting within richfaces extendeddatatable component a js error occurs.

A testcase to reproduce this issue is attached.

Steps to reproduce this issue:

1. http://localhost:8080/jsf2testcase/extendeddatatable.jsf
2. click 'Sort ColumnA'
3. js-error occurs

If you use Firefox 9 or chrome 16, everything works as expected. If you use IE8, the following js-error occurs:

IE-8 js-error:
Meldung: 'richfaces.utils.getCSSRule(...).style' ist Null oder kein Objekt
Zeile: 362
Zeichen: 17
Code: 0
URI: http://localhost:8080/jsf2testcase/javax.faces.resource/extendedDataTable.js.jsf;jsessionid=F4E29BC7AFDDEBB4A0395E622B5B44E7?ln=org.richfaces


Meldung: '_mfInternal' ist Null oder kein Objekt
Zeile: 1
Zeichen: 99511
Code: 0
URI: http://localhost:8080/jsf2testcase/javax.faces.resource/jsf.js.jsf;jsessionid=F4E29BC7AFDDEBB4A0395E622B5B44E7?ln=javax.faces

Note: This issue doesn't occur with mojarra-2.1.5
Because of this, i think, that this is a myfaces issue and not a richfaces one.",MYFACES-3444
"Each time a managed bean is created, it is inspected for PostConstruct/PreDestroy annotations. The default algorithm does not cache that information. Usually the container do that, so this effect is not seen in containers like Tomcat and others (MyFaces provide a LifecycleProvider for them).

By default, we can use the same trick for MetaRulesetImpl, that has a WeakHashMap<ClassLoader, Map<..., ...> > so when the application is undeployed, no cyclic reference is hold.",MYFACES-3443
"Hi,

when doing Load Tests, we  recognize that we sometimes got stuck in an infinite loop, when calling the _handleListenerForAnnotations method of the ApplicationImpl class. According to our analysis, this is related to the _classToListenerForMap attribute that is is defined as plain HashMap, so no synchronisation takes place when it is accessed from several threads. Our suggestion would be, to define it as a ConcurrentHashMap instead, because according to our experience, such kind of infinite loops due to concurrency don't occur with ConcurrentHashMaps.

Kind regards,

Michael",MYFACES-3442
method  javax.faces.component.UIComponentBase._getSharedStringBuilder(FacesContext) already provide this. Add same method to public API and use request-shared StringBuilder instance in renderers too.,MYFACES-3441
"When <facelets-processing> mode is set to jspx/xml, the JSF implementation should strip the CDATA section wrappers (ie. ""<![CDATA["" and ""]]>""). These wrappers should not be represented in the corresponding UIComponent tree or be passed through in the rendered content.

Currently, the CDATA section wrappers are removed, but this is implemented by removing the entire CDATA block, including any nested text content. This is not the desired behavior - ie. the text content itself should survive - only the CDATA wrapper constructs should be removed.

See:

http://java.net/projects/javaserverfaces-spec-public/lists/jsr344-experts/archive/2012-01/message/2

For more details.",MYFACES-3440
Solution is simple: ApplicationImpl has already method _handleResourceDependencyAnnotations for renderers and components. This method caches infos about ResourceDependecies annotations.,MYFACES-3439
"While we already have improved the error reporting a lot. We still have room for improvement.
For instance the error alert could need some room for improvement, we should also report the faulty http codes
in case of a http error etc...
Also we should discuss whether we really should use the alert if there is a console present. (would make more sense
to push error reports into the console on newer browsers if present)

",MYFACES-3438
"use index based loop where possible, see class java.util.RandomAccess for details",MYFACES-3437
"'c:' and 'fn:' is rendered differently from previous versions.
When clicking the inc and dec buttons in the example you can see that the field contents are updates each click but the number of fields is not (comma at the end when pressing 'dec'. Pressing 'render' then fixes the output.


MAG,
Milo

See also: https://issues.jboss.org/browse/RF-11803

{code:title=""testje4.xhtml""}
<!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Transitional//EN"" ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"">
<html
  xmlns=""http://www.w3.org/1999/xhtml""
  xmlns:h=""http://java.sun.com/jsf/html""
  xmlns:f=""http://java.sun.com/jsf/core""
  xmlns:ui=""http://java.sun.com/jsf/facelets""
  xmlns:fn=""http://java.sun.com/jsp/jstl/functions""
  xmlns:c=""http://java.sun.com/jsp/jstl/core""
>

<h:head>
</h:head>

<h:body>
	<h:form>
		<h:panelGroup id=""counter"">
			Counter: #{testBean.counter}<br/>
		</h:panelGroup>
		
		<hr/>
		<h:panelGroup id=""panel"">
			<c:forEach id=""fieldsDefinitions"" items=""#{testBean.fieldsList}"" var=""field"" varStatus=""status"">
				<c:set var=""fields"" value=""#{fields}#{field}#{status.last?'':','}""/>
			</c:forEach>
			<c:set var=""fieldsArray"" value=""#{fn:split(fields, ',')}""/>
			<ui:repeat id=""repeat"" value=""#{fieldsArray}"" var=""field"">
				'#{field}', '#{fields}'<br/>
			</ui:repeat>
		</h:panelGroup>
		<hr/>
		
		Without RichFaces:
		<h:commandButton value=""dec"" actionListener=""#{testBean.decCounter()}"" >
			<f:ajax event=""click"" render=""counter panel""/>
		</h:commandButton>
		<h:commandButton value=""inc"" actionListener=""#{testBean.incCounter()}"">
			<f:ajax event=""click"" render=""counter panel""/>
		</h:commandButton>
		<br/>
		Manual render:
		<a4j:commandButton value=""render"" render=""counter, panel""/>
	</h:form>
</h:body>

</html>
{code}

{code:title=""testBean.java""}
package com.vetmanager.base.test;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.faces.bean.ManagedBean;
import javax.faces.bean.SessionScoped;

@ManagedBean
@SessionScoped
public class TestBean {
	private int counter = 5;

	public List<Integer> getTable() {
		List<Integer> list = new ArrayList<Integer>();
		for (int i = 0; i < counter; i++) {
			Double number = Double.valueOf(Math.random() * 1000);
			list.add(Integer.valueOf(number.intValue()));
		}

		return list;
	}

	public String getFieldsString() {
		StringBuilder builder = new StringBuilder();
		boolean firstField = true;
		for (int i = 0; i < counter; i++) {
			if (!firstField) builder.append(',');
			firstField = false;

			char[] fill = new char[i + 1];
			Arrays.fill(fill, Character.forDigit(counter, 10));
			String fieldName = new String(fill);

			builder.append(fieldName);
		}
		return builder.toString();
	}

	public List<String> getFieldsList() {
		String string = getFieldsString();
		List<String> list = Arrays.asList(string.split("",""));
		return list;
	}

	public void decCounter() {
		counter--;
		if (counter < 1) counter = 1;
	}

	public void incCounter() {
		counter++;
		if (counter > 9) counter = 9;
	}

	public int getCounter() {
		return counter;
	}

	public void setCounter(int counter) {
		this.counter = counter;
	}

}
{code}",MYFACES-3436
"Two internal classes _DeltaList in API:

1) now use delegation pattern, but are always initialized with an ArrayList instance -> use inheritance and  ArrayList as parent -> improvement in memory area, reduces number of GCed object in one request/response of (_DeltaList instances/2) 
2) initialize expected size of _DeltaList (for example, number of validators per one component is perhaps never 10, use: new _DeltaList(5))
3) use indexes in 'for' instead of iterator (java.util.RandomAccess) ->  improvement in performance",MYFACES-3435
"Project http://industrieit.com/blog/2011/11/stateless-jsf-high-performance-zero-per-request-memory-overhead/ clears pooled UIViewRoot outside request/response in a separate thread, with no FacesContext.

Methods UIInput.setValue() and UIInput.setSubmittedValue() throw in such situation NPE.",MYFACES-3434
"NPE at line 103 in PhaseListenerManager.informPhaseListenersAfter:

if(.... beforePhaseSuccess[i])

can occur if LifecycleImpl.executePhase was unsuccessful and didn't call phaseListenerMgr.informPhaseListenersBefore(currentPhaseId)
",MYFACES-3433
"z.B. 

#{viewScope['myfaces'] == null}

initializes empty view scope map at UIViewRoot and method saveState saves this empty map with an extra ArrayList instance",MYFACES-3432
"The spec jsdoc states following in the section for jsf.ajax.response:

If the response was successfully processed, send a success event as outlined in Chapter 13 ""Sending Events"" section of the spec prose document linked in the overview summary.

This means, the jsf.ajax.response is responsible for sending the success event. For now we are sending it from the ajaxrequest response handler.
This needs to be fixed.
",MYFACES-3431
"ALL VERSIONS.

PushbackInputStream delegate is not closed, so we get  ""too many open files"" on Linux -platform.
Our Total File Descriptors For System is 8000.

PushbackInputStream delegate is used when reading stylesheet files (.css -files ""text/css"" -content type).
Used in JSF2 <h:outputStylesheet/> -tag.

ADD Stream closing...
private class ValueExpressionFilterInputStream extends InputStream
{
...
        /**
         * PushbackInputStream delegate MUST BE CLOSED or you will get ""too many open files"" on Linux-platform
         */
        @Override
        public void close( ) throws IOException {
        	delegate.close();
        	//System.out.println( ""EYECATCHER. "" + getClass( ).getSimpleName( ) + "".close called"" );
        }

",MYFACES-3430
"I found following exception in the logfile of an automated test. It happened right after system start when about 10 requests arrived in the same millisecond.

http-8080-7 [ERROR] [D32BD7B2195DF1AAE182A4D24DBE11FF] PhaseListenerManager
informPhaseListenersBefore: Exception in PhaseListener RESTORE_VIEW(1)
beforePhase.
java.lang.ArrayIndexOutOfBoundsException: 6
    at javax.el.CompositeELResolver.add(CompositeELResolver.java:45)
    at
org.apache.myfaces.el.CompositeELResolver.add(CompositeELResolver.java:50)
    at
org.apache.myfaces.el.unified.ResolverBuilderForJSP.build(ResolverBuilderForJSP.java:62)
    at
org.apache.myfaces.el.ResolverForJSPInitializer.beforePhase(ResolverForJSPInitializer.java:54)
    at
org.apache.myfaces.lifecycle.PhaseListenerManager.informPhaseListenersBefore(PhaseListenerManager.java:73)
    at
org.apache.myfaces.lifecycle.LifecycleImpl.executePhase(LifecycleImpl.java:93)
    at
org.apache.myfaces.lifecycle.LifecycleImpl.execute(LifecycleImpl.java:76)
    at
org.apache.myfaces.custom.ppr.PPRLifecycleWrapper.execute(PPRLifecycleWrapper.java:68)
    at javax.faces.webapp.FacesServlet.service(FacesServlet.java:183)
    at xxx.servlets.FacesServletWrapper.service(FacesServletWrapper.java:119)
    at
org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
    at
org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
    at org.ajax4jsf.webapp.BaseXMLFilter.doXmlFilter(BaseXMLFilter.java:206)
    at org.ajax4jsf.webapp.BaseFilter.handleRequest(BaseFilter.java:290)
    at
org.ajax4jsf.webapp.BaseFilter.processUploadsAndHandleRequest(BaseFilter.java:388)
    at org.ajax4jsf.webapp.BaseFilter.doFilter(BaseFilter.java:515)
    at
org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
    at
org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
    at
org.apache.myfaces.webapp.filter.ExtensionsFilter.doFilter(ExtensionsFilter.java:392)
    at
org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
    at
org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
    at xxx.filters.LoginFilter.doFilter(LoginFilter.java:211)
    at
org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
    at
org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
    at xxx.filters.CacheFilter.doFilter(CacheFilter.java:104)
    at
org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
    at
org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
    at xxx.filters.EncodingFilter.doFilter(EncodingFilter.java:54)
    at
org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
    at
org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
    at xxx.filters.TimerFilter.doFilter(TimerFilter.java:80)
    at
org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
    at
org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
    at
org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
    at
org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
    at
org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:470)
    at
org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
    at
org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
    at
org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
    at
org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)
    at
org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:859)
    at
org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)
    at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)
    at java.lang.Thread.run(Thread.java:662)

I created this bug first in the Tomcat issue tracker: https://issues.apache.org/bugzilla/show_bug.cgi?id=52271
It has been closed as invalid with following statement :""It sounds as if MyFaces is trying to configure the same CompositeELResolver instance from multiple
threads.""",MYFACES-3429
"UILeaf is a facelets internal class that acts as a wrapper for html markup. Since this is a stateless transient class, used intensively by JSF it is better to reduce the size and overhead caused by this class.

1. Make this class extends from UIComponent instead UIComponentBase to reduce the overall size of the object in memory.
2. Do not use an extra object for implement its attribute map.
3. Use a variable for ComponentSupport.MARK_CREATED instead store it into a HashMap. 

With these optimizations we can reduce object size to less than a half and replace a lot of calls to HashMap.get() by simple variable assignments.",MYFACES-3428
"The code that generate unique identifiers, like UIComponentBase.getClientId() and others inside facelets are operations that are called very frequent, so it is necessary to ensure that code is as fast as possible and use few memory resources

Also, doing some performance tests I notice Long.toString(long, radix) is too expensive. It creates a lot of unnecessary String objects.

In practice, we should prevent create object instances in such locations, and use only one StringBuffer if possible.",MYFACES-3427
"Doing some performance tests I notice that even if no VariableResolver / PropertyResolver is set, when resolving EL expressions the code goes directly through that path, doing some unnecessary operations or calling some specified ELResolvers more than once.

To prevent that, we can check if it was installed a custom VariableResolver / PropertyResolver and if it is not found, let the EL chain to continue its route. For example, DefaultPropertyResolver has an extra call to FacesContext.getCurrentInstance() and with this code, we prevent that call.",MYFACES-3426
There are some parts in myfaces that with some small changes we can reduce the ammount of objects created and make iteration faster.,MYFACES-3425
"Checking MYFACES-3423 I notice some methods that invoke broadcast doesn't call popComponentFromEL on the right instance. Fortunately this does not cause any problem at all, but it is better to be strict in this part and call push/pop in the right sequence.",MYFACES-3424
"Doing some performance tests it was found that LinkedList create and discard lots of instances of LinkedList.EntrySet. Use an ArrayList is better because it does not create such instances, improving code speed and reducing memory footprint. Note use LinkedList was a good idea because that makes easier to think about algorithm itself, but since that part of the code is pretty stable and have , we can change it without problem.",MYFACES-3423
"Hi,

according to our understanding, setting execute=""@all"" for a f:ajax tag should submit and process entries of all forms on the page, instead of submitting only entries of the surroundig form, if execute=""@form"" is set. Unfortunately, this seems not to work. I attached a small project to reproduce the issue.

Kind regards,

Michael",MYFACES-3422
"We should get a graceful Exception (at least in ProjectStage.Development where I'm in). Instead we get a long XML and the following text on the client:

""malformedXML: malformedXML Caller: myfaces._impl.xhrCore._AjaxResponse
Caller Function: processResponse
XML Parse ErrorEs gab zwar eine Antwort des Servers, jedoch war diese nicht im erwarteten XML Format. Der Server hat kein valides XML gesendet! Bearbeitung abgebrochen.""

The XML response from the server looks like the following


{noformat}
<?xml version=""1.0"" encoding=""utf-8""?><partial-response><changes><update id=""nodeForm:tree""><![CDATA[<div id=""nodeForm:tree""><div id=""nodeForm:tree_container"" class=""ygtv-highlight""></div><input id=""nodeForm:tree_selection"" name=""nodeForm:tree_selection"" type=""hidden"" /></div><script type=""text/javascript""><!--
widget_nodeForm_tree = new PrimeFaces.widget.TreeView('nodeForm:tree', [{html:'Masterstudium Building Science and Technology ',type:'html',rowKey:'0',expanded:true,children:[{html:' Fundamentals ',type:'html',rowKey:'0.0',expanded:true,children:[{html:'VU  Tools and Media ',type:'html',rowKey:'0.0.0',isLeaf:true,expanded:true,children:[]},{html:'VO  Research Design and Methods ',type:'html',rowKey:'0.0.1',isLeaf:true,expanded:true,children:[]},{html:'SE  Research Seminar ',type:'html',rowKey:'0.0.2',isLeaf:true,expanded:true,children:[]},{html:'VU  Fundamentals in Building Science ',type:'html',rowKey:'0.0.3',isLeaf:true,expanded:true,children:[]}]},{html:' Design Computing ',type:'html',rowKey:'0.1',expanded:true,children:[{html:'SE  Current Issues in CAAD ',type:'html',rowKey:'0.1.0',isLeaf:true,expanded:true,children:[]},{html:'VU  Design Methods ',type:'html',rowKey:'0.1.1',isLeaf:true,expanded:true,children:[]},{html:'VU  Advanced Geometry Concepts ',type:'html',rowKey:'0.1.2',isLeaf:true,expanded:true,children:[]},{html:'VU  Information Architecture ',type:'html',rowKey:'0.1.3',isLeaf:true,expanded:true,children:[]},{html:'VU  Dynamic Simulation and Visualization ',type:'html',rowKey:'0.1.4',isLeaf:true,expanded:true,children:[]},{html:'VU  Intruduction in Information Systems ',type:'html',rowKey:'0.1.5',isLeaf:true,expanded:true,children:[]}]},{html:' Building Performance ',type:'html',rowKey:'0.2',expanded:true,children:[{html:'VU  Energy and Buildings ',type:'html',rowKey:'0.2.0',isLeaf:true,expanded:true,children:[]},{html:'VU  Thermal building Performance ',type:'html',rowKey:'0.2.1',isLeaf:true,expanded:true,children:[]},{html:'VU  Building Diagnostics ',type:'html',rowKey:'0.2.2',isLeaf:true,expanded:true,children:[]},{html:'VO  Visual and acoustical building performance ',type:'html',rowKey:'0.2.3',isLeaf:true,expanded:true,children:[]},{html:'VU  Building systems and controls ',type:'html',rowKey:'0.2.4',isLeaf:true,expanded:true,children:[]},{html:'VU  Building Diagnostics laboratory ',type:'html',rowKey:'0.2.5',isLeaf:true,expanded:true,children:[]},{html:'VO  Building ecology ',type:'html',rowKey:'0.2.6',isLeaf:true,expanded:true,children:[]},{html:'VU  Building Performance Modeling (bis 2008/09) ',type:'html',rowKey:'0.2.7',isLeaf:true,expanded:true,children:[]},{html:'VU  Building Performance Simulation (bis 2008/09) ',type:'html',rowKey:'0.2.8',isLeaf:true,expanded:true,children:[]},{html:'VU  Building Controls and Diagnostics (bis 2008/09) ',type:'html',rowKey:'0.2.9',isLeaf:true,expanded:true,children:[]},{html:'VU  Building Diagnostics Laboratory (bis 2008/09) ',type:'html',rowKey:'0.2.10',isLeaf:true,expanded:true,children:[]},{html:'VU  Building Ecology and sustainable design (bis 2008/09) ',type:'html',rowKey:'0.2.11',isLeaf:true,expanded:true,children:[]},{html:'SE  Building Ecology Workshop (bis 2008/09) ',type:'html',rowKey:'0.2.12',isLeaf:true,expanded:true,children:[]},{html:'VO  Human Ecology (bis 2008/09) ',type:'html',rowKey:'0.2.13',isLeaf:true,expanded:true,children:[]}]},{html:' Vertiefungsfächer ',type:'html',rowKey:'0.3',expanded:true,children:[{html:'UE  Project Course in Building Performance or Design Computing ',type:'html',rowKey:'0.3.0',isLeaf:true,expanded:true,children:[]},{html:'SE  Master Project Seminar ',type:'html',rowKey:'0.3.1',isLeaf:true,expanded:true,children:[]},{html:'SE  Advanced Topics in Building Science ',type:'html',rowKey:'0.3.2',isLeaf:true,expanded:true,children:[]}]},{html:' Masters Project ',type:'html',rowKey:'0.4',expanded:true,children:[{html:'UE  Masters Project ',type:'html',rowKey:'0.4.0',isLeaf:true,expanded:true,children:[]}]},{html:' Wahlfächer Architektur ',type:'html',rowKey:'0.5',expanded:true,children:[{html:' Wahlfächer Architektur ',type:'html',rowKey:'0.5.0',expanded:true,children:[{html:'VO  Architektur und Tragwerk ',type:'html',rowKey:'0.5.0.0',isLeaf:true,expanded:true,children:[]},{html:'VU  EDV-gestützte Tragwerksplanung ',type:'html',rowKey:'0.5.0.1',isLeaf:true,expanded:true,children:[]},{html:'VU  Konstruieren und Realisieren von komplexen Tragwerken ',type:'html',rowKey:'0.5.0.2',isLeaf:true,expanded:true,children:[]},{html:'SE  Projektorient.Lösen stat.konstr.Fragestellungen ',type:'html',rowKey:'0.5.0.3',isLeaf:true,expanded:true,children:[]}]}]},{html:' Freie Wahlfächer u. Zusatzqualifikationen ',type:'html',rowKey:'0.6',isLeaf:true,expanded:true,children:[]}]}],{dynamic:false,url:'/curriculum/admin/editNode.xhtml?windowId=window',formId:'nodeForm',cache:true,selectionMode:'single',propagateHighlightDown:false,propagateHighlightUp:false});
widget_nodeForm_tree.render();

//--></script>]]></update><extension primefacesCallbackParam=""validationFailed"">{""validationFailed"":false}</extension></changes></partial-response><?xml version=""1.0"" encoding=""utf-8""?><partial-response><error><error-name>java.lang.IllegalStateException</error-name><error-message><![CDATA[component with duplicate id ""nodeForm:j_id_89_1"" found]]></error-message></error></partial-response>
{noformat}

The rendered component is a PrimeFaces p:tree:

{noformat}
<p:tree id=""tree"" value=""#{model.root}"" var=""_n""
                            selectionMode=""single"" selection=""#{model.selectedNode}"">
                        <p:treeNode> ...
{noformat}
",MYFACES-3421
Due to the update to intellij 11 we get a better javascript checkstyle  checker. This revealed a small number of minor bugs and checkstyle violations which will be fixed. ,MYFACES-3420
"1) JavaDoc AjaxBehavior.isImmediateSet():
Tests whether the immediate attribute is specified. Returns true if the immediate attribute is specified, either as a locally set property or as a value expression.  This information allows an associated client behavior renderer to fall back on the parent component's immediate status when immediate is not  explicitly specified on the AjaxBehavior.

myfaces don't implement this feature in HtmlAjaxBehaviorRenderer

2) isComponentImmediate use introspection for evaluation of isImmediate - that is unefficient (Contains code comment: Currently implemented by ActionSource and EditableValueHolder but we cannot be sure about both interfaces so lets make introspection calls here - but what means ""we cannot be sure about both interfaces"" ?)",MYFACES-3419
see discussion here: http://www.mail-archive.com/dev@myfaces.apache.org/msg52995.html,MYFACES-3418
"There is a typo bug that prevents the default ValidatorFactory to be stored on application map. 

Additionally, FacesMessageInterpolator uses an strategy that is not the best for performance reasons, because there is a FacesContext.getCurrentInstance() call inside interpolate() method. According to some tests done it is better to create an object and store FacesContext instance there to use it later. ",MYFACES-3416
"A testcase to reproduce the issue is attached.
1. http://localhost:8080/jsf2test/index.jsf
2. enter some data into field 'input2' and field 'item' (field item is surrounded by ui:repeat) and leave the first field 'input' empty
3. click button

result: validation error and field value of field 'input2' is shown (this is expected). But field value of field 'item' is not shown anymore (this is not expected)

Note: with mojarra-2.1.5 the field value doesn't disappear",MYFACES-3415
"We have logged an issue in our own JIRA tracker for this issue as well: http://jira.icefaces.org/browse/ICE-7518

It was discovered running on Liferay but the issue turn out to be not specific to portlets - it's simply manifest more obviously there.  Given a CSS file with an EL resource such as:

url(""#{resource['icefaces.ace:themes/sam/images/ui-default.png']}"") 

MyFaces will typically return something like:

url(""/my/javax.faces.resource/themes/sam/images/ui-default.png.jsf?ln=icefaces.ace"") 

When running on Liferay, the returned URL will be much longer given the portlet namespacing and the various Liferay request parameters:

url(""http://localhost:8080/web/guest/acefile?_fileEntry_WAR_showcaseportlet_ln=icefaces.ace&_fileEntry_WAR_showcaseportlet_javax.faces.resource=themes%2Fsam%2Fimages%2Fui-default.png&p_p_col_count=1&p_p_col_id=column-1&p_p_id=fileEntry_WAR_showcaseportlet&p_p_lifecycle=2"") 

However, the URL that is actually written into our CSS file looks like this:

url(""lhost:8080/web/guest/acefile?_fileEntry_WAR_showcaseportlet_ln=icefaces.ace&_fileEntry_WAR_showcaseportlet_javax.faces.resource=themes%2Fsam%2Fimages%2Fui-default.png&p_p_col_count=1&p_p_col_id=column-1&p_p_id=fileEntry_WAR_showcaseportlet&p_p_lifecycle=2"") 

The URL is missing characters at the front

lhost:8080/web

instead of 

http://localhost:8080/web

Almost all the resource URLs in our CSS file are mangled in a similar way.  After a lot of head scratching, it turns out that the URLs are longer than ResourceImpl$ValueExpressionFilterInputStream is prepared to handle:


    private class ValueExpressionFilterInputStream extends InputStream 
    { 
        private PushbackInputStream delegate; 
         
        public ValueExpressionFilterInputStream(InputStream in) 
        { 
            super(); 
            delegate = new PushbackInputStream(in,255); 
        } 
... 

For us, setting the ""unread"" buffer to a higher number than 255 appears to solve the issue.  Perhaps this could be done a different way to account for longer URLs or at least made configurable if someone needs to adjust it.",MYFACES-3414
"The default MyFaces Error handling throws a NullPointerException during the writing out of the component tree when an attribute's ValueExpression.getExpressionString() returns null.

As an example, this can happen with Richfaces 4.1.x skinning as the org.richfaces.application.GlobalResourcesViewHandler$SkinningResourceRenderedExpression
used for ""rendered"" on the __rf_skinning_resource UIOutput has a null value for getExpressionString().

From what I can tell, it's legal for Expression.getExpressionString() to return null.

http://docs.oracle.com/javaee/5/api/javax/el/Expression.html#getExpressionString%28%29

In any case, since this is an error handling routine, it should
probably be more flexible in handling unexpected values.

What do we want to do in this case?

We could skip outputting the attribute.

We could output the attribute with empty string as the value expression.

In this particular case, we could check for isReadOnly() and if true, output getValue().   Not sure if we'd want to do that in the case of !isReadOnly().  In fact, I'm not entirely certain we want to be evaluating getValue().

We could output the class of the value expression.

As a first pass, I am going to output the value expression as the empty string.",MYFACES-3413
"The attached examples shows a problem I face after updating to the latest 2.0.10/11 and 2.1.4/5 MyFaces versions.

I have 2 primefaces date pickers inside a h:panelGroup. Both date pickers create ajax requests and refresh their values. If you click one of them (both update the whole panelGroup), the 2nd date picker disapears.

This might have something to do with the AJAX js rework?

I can easily work around this issue, but I'm not sure which other problems might arise as well, thus we better fix this ",MYFACES-3412
"This archetype creates a webapp which does not work. The start page appears but the JSF ManagedBean ""helloWorld"" cannot be found in the postback.",MYFACES-3411
"When using JSF 2's 'method parameters' feature:

   #{fooBean.add(42)}

The evaluation fails when trying on a child object:

   #{fooBean.foo.add(42)}

As a workaround you can use:

   <ui:param name=""_foo"" value=""#{fooBean.foo}""/>
   #{_foo.add(42)}

But this seems like it should work without needing ui:param?

See attached test case.
",MYFACES-3410
"We have a small performance bug in our XHR1 object, we use mixmaps with a whitelist to transfer the request values into the wrapping class, however the main problem there is that the whitelist functionality has yet to be implemented which means all values will be probed.
We can add this mini fixup to our 2.1.5 bugfix release.
",MYFACES-3409
"Example site:

<!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Transitional//EN"" ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"">
<html xmlns=""http://www.w3.org/1999/xhtml""
	xmlns:h=""http://java.sun.com/jsf/html""
	xmlns:f=""http://java.sun.com/jsf/core""
	xmlns:ui=""http://java.sun.com/jsf/facelets"">
	
	<h:head>
		<title>JSF Test</title>		
	</h:head>

	<h:body>		
		<h:form id=""testForm"">
			<h:commandButton id=""buttonId"" value=""click me"">
				<f:ajax event=""click"" execute=""@this"" render=""textId"" />
			</h:commandButton>
			<h:outputText id=""textId"" value=""Test"" />
		</h:form>
	</h:body>
</html>

If you click the button, the following happens (you can see this if you use the richfaces a4j:log component):
myfaces-2.1.4:
info [20:19:52.375]: Received 'begin' event from <input id=testForm:buttonId ...>
info [20:19:52.421]: Received 'beforedomupdate' event from <input id=testForm:buttonId ...>
info [20:19:52.453]: Received 'success' event from <input id=testForm:buttonId ...>
info [20:19:52.453]: Received 'complete' event from <input id=testForm:buttonId ...>

but with myfaces-2.1.3 and mojarra-2.1.4:
info [20:23:57.671]: Received 'begin' event from <input id=testForm:buttonId ...>
info [20:23:57.828]: Received 'beforedomupdate' event from <input id=testForm:buttonId ...>
info [20:23:57.843]: Listing content of response changes element:
Element update for id=testForm:textId
<update id=""testForm:textId""><![CDATA[<span id=""testForm:textId"">Test</span>]]></update>
Element update for id=javax.faces.ViewState
<update id=""javax.faces.ViewState""><![CDATA[j0LjX8e0GxCO+29xvrdy2+8Ioe6Fl0/0rxQEZOOH3gbOawFqNemG/u0qOkv8g9mdmT4e8Zt3Qd+VmBXTz7ibVDKOj1kPnFKT+11GTlQ4BRvtRAGk9ioKZSuzhTbGgPwzW+4BMw==]]></update>


You see, that now with myfaces-2.1.4 something goes wrong...
This new behaviour causes some problems within richfaces. For example the rich:tabPanel component doesn't work correct now, if used in ajax mode.",MYFACES-3408
"Our error handling code, while working is somewhat byzantine, it basically catches to much within the code and then recovers to early. The idea is to remove all the catches in ajax response and the ajax utils to have the ajaxrequest object dealing with it.
The result is leaner and somewhat cleaner code.
",MYFACES-3407
"In case of a connection error the code runs into an old variable which has been renamed in the last refactorings.
This needs to be fixed. Since this code is triggered rather seldom. I will mark it as minor, however it is a bug and needs fixing.
",MYFACES-3406
"I just wanted to make you aware of the following security issue in conjunction with the includeViewParameters navigation parameter. It seems it is also reproducible with MyFaces:

http://java.net/jira/browse/JAVASERVERFACES-2247

I'm not sure which workaround would be best in accordance with the Spec, but at least a quick fix might be worth considering to improve the security of the default behavior.",MYFACES-3405
"From dev list:

Hi

MS>> The ClientSideWindowHandler solution in CODI looks good so far, but there
MS>> is still a lot to do.

MS>> And like every technology, it has it's pros and cons...

MS>> What do you think about making the windowId provider pluggable in MyFaces
MS>> core first?

I have been thinking about every possible option we have for implement this and
the conclusion was the best way is make something like the hack done in CODI or
a ""variant"" of it, like the one described on:

http://wiki.apache.org/myfaces/Drafts/WindowId

(Mixed approach of the first prototype)

From the point of view of MyFaces Core, any solution should be bound to the
renderkit in some way. So, windowId concept has sense to include it on the spec
but its implementation should be done according to the renderkit. If the
renderkit handles html, do the hack proposed but if is xml, do other thing
and so on. It sounds like something to do outside MyFaces Core. Basically the
problem is how to create an interface about something that could require
changes over the renderkit/viewhandler?.

Maybe we can minimize the problem, and provide an interface like this:

public interface WindowIdRenderKitAware
{
   public String getCurrentWindowId(FacesContext facesContext);
}

But let the details about how to ""plug"" all pieces inside CODI. MyFaces Core
just offer the ""integration point"", and the default algorithm just do what is
doing right now. Who should implement this interface? the renderkit, even if
in the implementation the value can be stored inside FacesContext attribute
map or request map. There exists a RenderKitWrapper interface, so it is
easy to create a wrapper for default HTML_BASIC renderkit or any other and
then scan through the wrappers and the first one implementing the interface
will be the choosen.

MS>> The REAL problem with JSF and multiple tabs is that once you open 2 tabs
MS>> and click in 1 of them often enough, then you will destroy the state of
MS>> the view in the other tab as well somewhen. Usually after 20 requests
MS>> (default).

 There are two points where this logic could be useful inside MyFaces Core :

1. Server side state
2. Flash scope

But in practice the only really relevant is 1. To implement 2. it is necessary
a ""requestId"". MyFaces FlashImpl uses a counter and store its value inside
a cookie. To fix this scope properly, the best is create a ExternalContext
wrapper and provide and alternate Flash object, but that sounds like something
that can be done outside MyFaces Core. If you are using CDI scopes, it sounds
reasonable to provide an alternate Flash scope in CODI.

If we can just modify the logic inside server side state to include ""windowId""
concept, it will be enough.

MS>> To come over this, we need to store the n last views not only per session,
MS>> but also per browser tab (==windowId).
MS>> Of course, there can be lots of fancy stuff done to detect closed tabs,
MS>> etc. But all this is much more stable if we really have the opportunity
MS>> to distinguish between tabs. We can e.g. also introduce a configuration
MS>> for maximum allowed tabs, to reduce memory blasting.

Really since all state is stored in session, if the session is invalidated all
tabs are removed from memory. Basically we already have params for max number
of sessions and max number of logical sessions (which in fact can be seen
as ""tabs""). So what we have right now is ok, we just need to include windowId
concept into the logic and that's it.

MS>> All this is actually completely independent of how the windowId get's
MS>> created and checked imo.

Yes, that's right.

MS>> I now tend to do the following (just atm creating a better playground
MS>> example in CODI + hack on the ClientSideWindowHandler):
MS>>
MS>> a.) the cookie thingy is pretty bääh. it just doesn't work if a
user clicks
MS>> quickly through a list and opens lots of 'detail pages' on different tabs
MS>> within 2 seconds.
MS>>
MS>> b.) it's currently a 'one or the other' thingy, and I now thought about
MS>> combining the lazyWindowIdDropp.js and the current windowhandler.js
MS>>
MS>> My current research goes into the direction of
MS>>
MS>> 1.) always adding the windowId to each and every link and transport the
MS>> windowId only via this parameter.
MS>>
MS>> 2.) For HTML5-browsers (detected via UserAgent) I render the
MS>> windowhandler.html intermediate page which does all the fancy stuff of
MS>> dynamically applying the old DOM on the intermediate page, etc. For other
MS>> clients we rely on the lazyWindowId script.

Ok, sounds promising. So, I'll focus on how to fix the logic for myfaces
core server side state saving
(org.apache.myfaces.renderkit.ServerSideStateCacheImpl), with the alternative
proposed in this mail (WindowIdRenderKitAware interface, and then use a
RenderKit wrapper).


The idea is doing this simple steps:

<faces-config xmlns=""http://java.sun.com/xml/ns/javaee"" 
              xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" 
              xsi:schemaLocation=""http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-facesconfig_2_0.xsd"" 
              version=""2.0"">

  <render-kit>
      <render-kit-id>HTML_BASIC</render-kit-id>
      <render-kit-class>org.apache.myfaces.renderkit.windowid.WindowIdRenderKitWrapper</render-kit-class>
  </render-kit>

</faces-config>

And writing a wrapper like this:

public class WindowIdRenderKitWrapper extends RenderKitWrapper implements WindowIdRenderKitAware
{
    
    private RenderKit delegate;

    public WindowIdRenderKitWrapper(RenderKit delegate)
    {
        super();
        this.delegate = delegate;
    }

    @Override
    public RenderKit getWrapped()
    {
        return delegate;
    }

    public String getCurrentWindowId(FacesContext facesContext)
    {
        return facesContext.getExternalContext().getRequestParameterMap().get(""windowId"");
    }
}

Allow server side state saving to get a windowId identifier to ""chain"" the views inside a window and use that logic to discard old views and prevent view expired exceptions.",MYFACES-3404
"We currently use the function encodeUriComponent to encode our input texts. The problem with this function as used is, that it is bound to utf-8. Now, if we switch the encoding we send down garbage and get garbage back.
We have to investigate on what we can use for proper uri encoding in other charsets.
",MYFACES-3403
"While I was testing different ajax encodings I discovered that the Partial Response writer always returns the header listed on the headline of this issue. It ignores simply the original encoding.
A blackbox test against Mojarra showed in that exact case the proper encoding not UTF-8 static.
I guess the fix simply should be to make this part of the partial response writer more dynamic and to fetch
the encoding in from the request header.
",MYFACES-3402
"I have an application that I'll attach to this issue that can reproduce this issue.  To reproduce you need to: 

1) Install webapp.war

2) navigate to index.xhtml

3) click the ""add"" button and select a file to upload ( any file it does not matter )

4) click the ""upload"" button

The following error occurs: context.source is undefined  -> jsf.js.jsf:6422

If I look at the jsf.js line 6422 I see the following:

   var elementId = (context._mfInternal)? context._mfInternal[""_mfSourceControlId""] : context.source.id;

The above line is in the processUpdate : function(request, context, node)  method.  I'm not very familiar with the JS within MyFaces so I wanted to open up an issue and get some feedback from the community.

I see that other issues have been opened regarding RichFaces fileUpload such as : https://issues.apache.org/jira/browse/MYFACES-3043

",MYFACES-3401
"Currently the default behavior for the encoding is UTF-8 for an ajax request with a config param for overriding the default encoding. Now due to a user request this does not work out. We need to have the ajax encoding more flexible. The idea is to detect the ajax encoding one way or the other (probably by dom parsing) and to adjust the request encoding accordingly.
Investigation and code will be logged under this issue. However it is not sure if the final result will make it into 2.1, accordingly to the JSF-EG and the Mojarra people we will discuss it out whether the fixup will make it into the 2.1 codebase or not.
",MYFACES-3400
"In the javadoc of javax.faces.event.PostAddToViewEvent the conditions of when to publish that event are expressed explicitly:

The implementation must guarantee that Application.publishEvent(javax.faces.context.FacesContext, java.lang.Class, java.lang.Object) is called, immediately after any UIComponent instance is added to the view hierarchy *except* in the case where ResponseStateManager.isPostback(javax.faces.context.FacesContext) returns true at the same time as FacesContext.getCurrentPhaseId() returns PhaseId.RESTORE_VIEW. When both of those conditions are met, Application.publishEvent(javax.faces.context.FacesContext, java.lang.Class, java.lang.Object) must not be called.

MyFaces 2.1.3 is publishing this event when those conditions are met despite of the spec.
",MYFACES-3399
"Assume, a Composite Component contains input fields, i.e any subclass of EditableValueHolder (e.g. inputText, inputTextarea, ..). If this CC is than used in a subclass of UIData, e.g. a dataTable, the values entered in the CCs input fields get lost (despite for the last row in the Model of the UIData object).

This seems to be related to the fact how the method ""saveDescendantComponentStates(..)"" of the UIData class checks, if a component has childs, whos state must be saved, before changing the rowIndex. The mentioned method only checks ""child.getChildCount() > 0"", but getChildCount() is 0 for a CC. I assume it would be necessary to check the FacetCount for a CC instead. 

The attached WAR file can help to reproduce the issue with a simple example.",MYFACES-3398
"Unfortunately the recent refactoring has induced an ie related bug, which caused an error message.
This fix fixes it",MYFACES-3397
"Hi,

I made bean validation working well in an osgi environment. 
The problem is that it need to export the validator 'by hand'.
As myfaces detects Hibernate validator automatically detected Hibernate implementation, I'm not able to wire these two framework.
It would be cool to make and helper class allowing to manually wire jsr 303 implementation and Myfaces.
I made an example of a running bean validation implementation in an osgi environment:
http://hudson.osgiliath.net/job/orthank-sample%20Tag/ws/

In order to compile, you juste need to have maven 3 and run: mvn clean install -DskipTests=true (integration tests are not stable for now).
then, in order to launch run: mvn pax:provision -Dframework=equinox (or -Dframework=felix) and point your browser to http://localhost:8080/net.osgiliath.orthank-sample.java.web.simple_1.0.1.SNAPSHOT

You'll be able to say hello with web services.
You can désactivate ws client module to run it without ws.

To test validation, try to enter an empty text in the input, you'll be redirected to an error page.
If Myfaces had this helper, a validation message could be shown to the user.

Regards, Charlie (tcharl on twitter, cmordant1@gmail.com on gtalk) ",MYFACES-3396
"Hi:

ui: repeat does not work correctly in MyFaces Core 2.1.3:


package example;

import java.util.ArrayList;
import java.util.List;

/**
 * @author Juan Lama
 *
 */
public class MyBean {

	private List<String> head;
	private List<List<String>> body;
	
	private int MAX_HEAD = 3;
	private int MAX_BODY = 5;
	
	public MyBean() {
	}

	public List<String> getHead() {
		if( head == null ) {
			head = new ArrayList<String>();
			for( int i = 1; i <= MAX_HEAD ; i++ ) {
				head.add( ""HEAD"".concat(Integer.toString(i)) );
			}
		}
		return head;
	}

	public void setHead(List<String> head) {
		this.head = head;
	}

	public List<List<String>> getBody() {
		if( body == null ) {
			body = new ArrayList<List<String>>();
			List<String> listTemp = null;
			int i;
			int j;
			for( i = 1; i <= MAX_HEAD ; i++ ) {
				listTemp = new ArrayList<String>();
				for( j = 1; j <= MAX_BODY ; j++ ) {
					listTemp.add( ""BODY"".concat(Integer.toString(i)).concat(""-"").concat(Integer.toString(j)) );
				}
				body.add(listTemp);
			}
		}
		return body;
	}

	public void setBody(List<List<String>> body) {
		this.body = body;
	}
}



<!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Transitional//EN"" 
    ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"">

<html xmlns=""http://www.w3.org/1999/xhtml""
	xmlns:ui=""http://java.sun.com/jsf/facelets""
	xmlns:h=""http://java.sun.com/jsf/html""
	xmlns:f=""http://java.sun.com/jsf/core"">
	<head>
		<meta content=""text/html; charset=ISO-8859-1"" http-equiv=""Content-Type"" />
		<title>Result</title>
	</head>
	<body>
		<f:view>
			<h:form>
				<div align=""center"">
					<h:panelGrid columns=""1"">
						<table border=""1"" class=""dr-table rich-table"" width=""100%"">
				            <thead>
				                <tr>
				                	<ui:repeat value=""#{myBean.head}"" var=""myvar"">
				                		<td>
				            				 <h:outputText value=""#{myvar}"" />
				            			</td>
				                	</ui:repeat>
				                </tr>
				            </thead>
				            <tbody>
				            	<ui:repeat value=""#{myBean.body}"" var=""myvar2"">
				            		<tr>
				            			<ui:repeat value=""#{myvar2}"" var=""myvar3"">
				            				<td align=""center"">
				                            	<h:outputText value=""#{myvar3}"" />
				                            </td>
				            			</ui:repeat>
				            		</tr>
				            	</ui:repeat>
				            </tbody>
				        </table>
					</h:panelGrid>
				</div>
			</h:form>
		</f:view>
	</body>
</html>


Generates the following:



<!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Transitional//EN"" ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"" >
<html xmlns=""http://www.w3.org/1999/xhtml"">
<head>
<meta content=""text/html; charset=ISO-8859-1"" http-equiv=""Content-Type"" />
<title>Result</title>
</head>
<body>
	<form id=""j_id1773819711_69ba570b"" name=""j_id1773819711_69ba570b""
		method=""post""
		action=""/ui/faces/result.xhtml;jsessionid=5C7C5542FBF797643CCB4C3A0A250795""
		enctype=""application/x-www-form-urlencoded"">
		<div align=""center"">
			<table>
				<tbody>
					<tr>
						<td>
							<table border=""1"" class=""dr-table rich-table"" width=""100%"">

								<thead>
									<tr>
										</td>
									</tr>
									<tr>
										<td>
											<td>HEAD1</td>
											<td>HEAD2</td>
											<td>HEAD3</td>
										</td>
									</tr>
									<tr>
										<td>
									</tr>

								</thead>
								<tbody>
									</td>
									</tr>
									<tr>
										<td>
											<tr>
												<td align=""center"">BODY1-1</td>
												<td align=""center"">BODY1-2</td>
												<td align=""center"">BODY1-3</td>
												<td align=""center"">BODY1-4</td>

												<td align=""center"">BODY1-5</td>
											</tr>
											<tr>
												<td align=""center"">BODY2-1</td>
												<td align=""center"">BODY2-2</td>
												<td align=""center"">BODY2-3</td>
												<td align=""center"">BODY2-4</td>

												<td align=""center"">BODY2-5</td>
											</tr>
											<tr>
												<td align=""center"">BODY3-1</td>
												<td align=""center"">BODY3-2</td>
												<td align=""center"">BODY3-3</td>
												<td align=""center"">BODY3-4</td>

												<td align=""center"">BODY3-5</td>
											</tr>
										</td>
									</tr>
									<tr>
										<td>
								</tbody>
							</table>
						</td>
					</tr>
				</tbody>
			</table>
		</div>
		<input type=""hidden"" name=""j_id1773819711_69ba570b_SUBMIT"" value=""1"" /><input
			type=""hidden"" name=""javax.faces.ViewState"" id=""javax.faces.ViewState""
			value=""cg0+V14JsgFPNQA1c/ay81AaVVWBV1cKCa4QVp8xkJujv3Tc7sG1y6Cn6L9w7/YenIRbJ9ikyCjuU077q5GfiYb2Za4pR7mM2Z4wasFe27JapcVvWy/XnJcLHUfkCmQqzdYAgw=="" />
	</form>
</body>
</html>



you see:

                                  <tr>
							</td>
					</tr>

these labels are wrong
",MYFACES-3395
"There still was improvement potential in the area of dom and ajax, the dom table handling code could be improved for minimal-modern
Also some of the extended form handling in the ajax area could be moved to experimental.
",MYFACES-3394
"In preparations for jsf 2.2 the delay handling needs to be moved from the queue into impl.
The advantage of moving the delay there is simply, speed improvement because no xhr object
is generated upfront and secondly less code because it needs less logic on the impl side than on the queue side.
",MYFACES-3393
"Hi,

Debug level with log4j in an osgi environnement makes myfaces going in an infinite loop.

I made an example available here:
http://hudson.osgiliath.net/job/orthank-sample%20Tag/ws/

In order to compile, you just need to have maven 3 and run: mvn clean install -DskipTests=true (integration tests are not stable for now).
then, in order to launch run: mvn pax:provision -Dframework=equinox (or -Dframework=felix) and point your browser to http://localhost:8080/net.osgiliath.orthank-sample.java.web.simple_1.0.1.SNAPSHOT
You'll be able to say hello with web services.
You can desactivate ws client module to run it without ws.

Turn the log level to debug in order to test (orthank-sample/orthank-sample.java/orthank-sample.java.logging-config/src/main/resource/log4j.properties file).

Regards, Charlie (tcharl on twitter, cmordant1@gmail.com on gtalk)
",MYFACES-3392
"We have a small lifecycle problem. In case of an error the the success event should not be called anymore. We currently call it.
",MYFACES-3391
"We have an alert dialog in the error case which is shown if there is no error listener set and development mode is on.
The problem is, if you pass down a local listener the error dialog still is shown. This needs to be fixed.
",MYFACES-3390
"We have a use case, where the model (i.e. items) of a forEach is changed in the Invoke Application phase, in a way that rows are added or deleted in the middle of the model. 
During the buildView(...) in the Render Response phase, the forEach Tag Handler recognizes, that the model has changed, and for example that now one more row is available, but it does not recognize, that this row was not added as last row. So the forEach Tag Handler logic starts to create additional components for the additional row, but it creates these components for entries at the end of the model. The issue is, that there already exist components for the last row in the UIViewRoot and these componts already have the same Ids than the newly created ones. Thus we end up with a Duplicate Id Exception

The attached file might help you, to recreate the issue with a simple example.",MYFACES-3389
"I'm writing a custom version of UIData component by extending the default UIData class. I want to register a DataModelListener in order to be notified on UIData's row index changes.
I have overridden the UIData#setValue(Object) method to register a DataModelListener whenever a new value is set to the component:

    @Override
    public void setValue(Object value) {
      super.setValue(value);
      getDataModel().addDataModelListener(new MyDataModelListener());
    }

But MyDataModelListener is not notified the very first time the UIData's row index changes from -1 to 0.

Looking through the code, this is caused because when getDataModel() is first called, it calls createDataModel() and then a new model instance is created using the one-argument constructor. This one-argument constructor in all variants of DataModel concrete classes calls the method setWrappedData() and, as the specification of this method says:

                ""If data is non-null, the currently selected row index must be set to zero, and a DataModelEvent must be sent to the rowSelected() method of all registered DataModelListeners indicating that this row is now selected.""

But this DataModelEvent will never be sent to any listeners, because this is triggered from the constructor and so, it is impossible to have any listener registered.

This issue has a very easy workaround, to reset the model's row index right after its creation.

    @Override
    public void setValue(Object value) {
      super.setValue(value);
      DataModel<?> dm = getDataModel();
      dm.setRowIndex(-1);     // FIXME reset rowIndex due to bug
      dm.addDataModelListener(new MyDataModelListener());
    }

I think that one solution may be that the one-argument constructor of the DataModel classes shouldn't call setWrappedData(), but instead assign its internal variable directly.
",MYFACES-3388
"While developing my own component, I need disable/enable converters/validators based on EL. Please support disabled attribute for the following:
ColorConverter
DateTimeConverter
NumberConverter

ByteLengthValidator
DateRestrictionValidator
DateTimeRangeValidator
DoubleRangeValidator
LengthValidator
LOngRangeValidator
RegExpValidator

Also multiple validators for a single component needs to be supported.
A patch is attached.",MYFACES-3387
"Assume, a Composite Component contains input fields, i.e any subclass of EditableValueHolder (e.g. inputText, inputTextarea, ..). If this CC is than used in a subclass of UIData, e.g. a dataTable, the values entered in the CCs input fields get lost (despite for the last row in the Model of the UIData object).

This seems to be related to the fact how the method ""saveDescendantComponentStates(..)"" of the UIData class checks, if a component has childs, whos state must be saved, before changing the rowIndex. The mentioned method only checks ""child.getChildCount() > 0"", but getChildCount() is 0 for a CC. I assume it would be necessary to check the FacetCount for a CC instead. 

The attached WAR file can help to reproduce the issue with a simple example.",MYFACES-3385
"Some weeks ago I saw that maven checkstyle plugin creates a property file that store all lastModified dates of each file that is checked, to prevent unnecessary executions and improve speed. The hack is easy to do, but it is necessary move some refactor some code. 

In few words, the idea is get the lastModified date of each file parsed or used by myfaces-builder-plugin and save it in a file. When the goal is called again, it checks all files again and if the dates are the same, skip the goal. Additionally, myfaces-metadata.xml lastModified is saved and associated to each generated file. So if myfaces-metadata.xml is refreshed, we can check if the generated file has a previous lastModified date and if that so, create the file again.",MYFACES-3384
"If the same Composite Component is used inside itself, e.g. as child of an ui:include that is included in the Composite Component, an StackOverflow happens, if an EL Expression is refering CC interface attributes. 

The use case is a CC to include a facelet, given by name. If the included facelet uses the same CC to include another facelet, ""CompositeComponentELUtils.getCompositeComponentBasedOnLocation(..)""  does always find the same CC, which leads to an endless loop.

Please see the attached file for an example of the issue.",MYFACES-3383
"Currently, the version of org.apache.myfaces:myfaces was changed to 11-SNAPSHOT in the MyFaces core pom.xml. On machines that don't have this dependency in the local repository this breaks the build. The snapshot repository is referenced in the Apache parent which is useless if the MyFaces parent can't be found.

I see 2 solutions:

1) (Redundantly) Add snapshot repo to MyFaces core pom.xml.
2) Don't use snapshot versions of the MyFaces parent.

If there are no objections, I will commit solution 1.",MYFACES-3382
"Add @JSFFaceletFunction annotation, so that all information related to a JSF module can be stored on myfaces-metadata.xml file.",MYFACES-3381
"Per the JSF 2.0 and 2.1 specs, this element is minOccurs=""0""",MYFACES-3380
"Doing some tests about PostAddToViewEvent, I notice this event is not called for UIViewRoot after the view is built. 

The solution is do it manually on buildView() method after the view is populated.

There is another bug in 2.1.x branch related to markInitialState call. In MYFACES-3367, it was used ""javax.faces.IS_BUILDING_INITIAL_STATE"" to detect if the view is build by first time, but in 2.1.x it is used to indicate if we call markInitialState or not. We need another different flag for that purpose, so I change it to ""org.apache.myfaces.MARK_INITIAL_STATE"" and fix ""javax.faces.IS_BUILDING_INITIAL_STATE"" to set and remove it like in 2.0.x branch. 

",MYFACES-3379
"When PSS is disabled, the algorithm to restore view state disable event processing, but that cause setInView() is not called. Later, when a dynamic component is added using c:if, since setInView is false, PostAddToViewEvent is not called. With PSS enabled everything works well.

The solution is when processing events is disabled, call another method that does not propagate the event but call setInView.",MYFACES-3378
"as seen in 
org.apache.myfaces.util.AbstractAttributeMap and
org.apache.myfaces.util.AbstractThreadSafeAttributeMap",MYFACES-3377
"There are some complex cases we need to test inside myfaces core and other projects. But create those test becomes a difficult task, mostly because with in-container testing you have a lot of unnecessary problems setting up dependencies, war files, classloaders, etc. And each time they are executed requires time setting up/shutting down the container. In other hand, doing testing with mock objects like the ones in myfaces test does not work very well, because sometimes we need to test the ""interaction"" between multiple parts of myfaces core (viewhandler, statemanager, lifecycle ...).

Things like org.apache.myfaces.view.facelets.FaceletTestCase are very productive to test such scenarios. You just provide an xhtml file, write a test method that take the vdl and build the view and then you add some asserts and that's it. These tests are very fast and very compact. Additionally it is very easy to debug, because you can put a break point directly on myfaces code and then on the test case and since it is the same thread running the code it becomes very easy and straightforward to follow the code.

In-container testing like the alternatives already proposed in myfaces using Arquillian are good but for integration tests, where you need to test complete use cases. Here we need to test only some parts of server-side code. But this strategy could be useful too in such scenarios, specially because you can ""simulate"" an user input and check navigation, if pages compiles against facelets engine, check if the EL expressions has all managed beans, take statistics about the code, and much more that you just can't do it with the other strategy.

The proposal I'm working on is create these classes:

org.apache.myfaces.mc.test.core.AbstractMyFacesTestCase
org.apache.myfaces.mc.test.core.AbstractMyFacesRequestTestCase
org.apache.myfaces.mc.test.core.AbstractMyFacesFaceletsTestCase

as base classes to create unit tests. The trick here is initialize/shutdown myfaces and provide the same variables as in MyFaces Test. So if you already written a junit test using myfaces test, this is not really different.

for the client provide a class like this:

org.apache.myfaces.mc.test.core.MockMyFacesClient

that ""hides"" the client language. By default, it just takes the data directly from the component and fill the request parameters, header and cookies. In that way the client is decoupled from the test environment. 

Finally provide a MockMyFacesFaceletViewDeclarationLanguage class that extends from the default FaceletViewDeclarationLanguage but that add this method:

public void buildView(FacesContext context, UIViewRoot view, String xmlFile) throws IOException

To call it from AbstractMyFacesFaceletsTestCase, just like FaceletTestCase.

For now my intention is add these classes to myfaces-impl test package and use it to see how it works and if it is worth to create a custom module for this one in myfaces test.

Suggestions are welcome.",MYFACES-3376
"There are two issues I'd like to report here.

1) Bridge Class is specific to Apache

org.apache.myfaces.shared.util.ExternalContextUtils.java / isPortlet(ExternalContext ec) does the following:

return getRequestType(ec).isPortlet();

This class. contains the logic to determine if Portlet is supported by finding a Bridge class  and can return the incorrect value when a Bridge other than the Apache Bridge is available.  For instance in 
WebSphere Application Server (WAS) when running in a Portlet environment the MyFaces code incorrectly returns a Servlet RequestType.

After looking at the code I see why this is:
	//Summary of values obtained
	javax.portlet.PortletContext =  _PORTLET_CONTEXT_CLASS
	javax.portlet.ActionRequest = _PORTLET_ACTION_REQUEST_CLASS
	javax.portlet.RenderRequest =  PORTLET_RENDER_REQUEST_CLASS
	javax.portlet.ResourceRequest = _PORTLET_RESOURCE_REQUEST_CLASS

//Find bridge to tell if portal is supported
Class<?> bridge = ClassLoaderUtils.loadClass(""javax.portlet.faces.Bridge"");

If the above javax.portlet.faces.Bridge Class is not found then PortletSupported variables are set to false.  There needs to be a better way to determine if a Bridge is 
available and therefore determine if Portlets are supported in this environment.


2) Portlet support is determined globally which is not always the case, a more granular determination is needed at the application level.
",MYFACES-3375
"ServletContext.getContextPath() is only available in 2.5
It is only used for logging in the moment.
 ",MYFACES-3374
"If prependId=""false"", the generated id should get an unique id from the parent naming container of UIForm, to ensure uniqueness on id generation.",MYFACES-3373
Reviewing some stuff I notice that FacesConfigurator does not initialize Lifecycle instances correctly using lifecycleFactory.getLifecycleIds() and then on each Lifecycle instance register one by one each phase listener registered on faces-config.xml,MYFACES-3372
"I have created a custom render kit with some renderers. If the application request a renderer that is not registered in the render kit, it delegates the request to the HTML_BASIC renderkit:

public Renderer getRenderer(String family, String rendererType) {
                Renderer renderer = null;
                HashMap<String,Renderer> renderers = rendererFamilies.get(family);// In this Map I have put all the registered renderers
		
                if(renderers != null){
                       renderer = renderers.get(rendererType);
                }
		
                if(renderer == null){
                        //There are not any renderer defined for this Family and Rendertype, delegating the request to the HTML_BASIC renderkit
                        FacesContext context = FacesContext.getCurrentInstance();
                        RenderKit renderKit = getRenderKitFactory().getRenderKit(context, ""HTML_BASIC"");
                        return renderKit.getRenderer(family, rendererType);
                }

                return ((renderers != null) ? renderers.get(rendererType) : null);
}


In the other hand, each Renderer performs some operations (add custom attributes, validations, etc...) and then delegate the process to the Renderer of the HTML_BASIC renderkit:

CustomInputTextRenderer extends Renderer{
...
        @Override
        public void encodeEnd(FacesContext context, UIComponent component) throws IOException {

                //DO SOME CUSTOM OPERATIONS LIKE ADD CUSTOM ATTRIBUTES
               
                // Then, call to the same method of the HTML_BASIC Renderer
                RenderKitFactory renderKitFactory = (RenderKitFactory)FactoryFinder.getFactory(FactoryFinder.RENDER_KIT_FACTORY);
                RenderKit renderKit = renderKitFactory.getRenderKit(context, ""HTML_BKS"");
                renderKit.getRenderer(component.getFamily(), component.getRendererType()).encodeEnd(context, component);
        }

}


With this approach, there are not need of any class to extend any of the Myfaces renderer, so the application is decoupled from the JSF implementation.

This approach works good with Mojarra (2.1.0), because the Mojarra Renderers calls the ResponseWriter.startElement() in the Renderer.encodeBegin() and it calls the  ResponseWriter.endElement() in the Renderer.encodeEnd().

But with Myfaces (2.1.3) it does not work, because the Myfaces Renderers calls both ResponseWriter.startElement() and ResponseWriter.endElement() in the same method (Renderer.encodeEnd()), so there are not any way to insert code between these two calls without extends all the Myfaces Renderers.

This can be solved by changing all the Renderers (well, not all, the FormRenderer is ok, it calls the startElement in the encodeBegin and the endElement in the encodeEnd) moving the startElement call to the encodeBegin method.

Greetings.

",MYFACES-3371
"In the following snippet:

        <h:selectOneMenu id=""selector""
          value=""#{cc.attrs.backingBean[cc.attrs.property]}""
          required=""#{cc.attrs.required}""
          requiredMessage=""#{cc.attrs.requiredMessage}""
          disabledClass=""tnui-selectDisabled""
          disabled=""#{cc.attrs.disabled}""
          immediate=""#{cc.attrs.immediate}""
          readonly=""#{cc.attrs.readonly}""
          onchange=""#{cc.attrs.onchange}""
          style=""#{cc.attrs.style}"">
          <f:selectItem
            itemLabel=""#{cc.attrs.noSelectOptionLabel}#{sessionBean.classOfService}""
            itemValue=""#{null}""
            noSelectionOption=""true""
            rendered=""false""/>
          <p:ajax update=""#{cc.attrs.updateTargets}"" disabled=""#{!includeAjaxUpdate}""/>
          <composite:insertChildren />
        </h:selectOneMenu>

The embedded f:selectItem is always included even though it's rendered attribute is set to false.",MYFACES-3370
svn:eol-style affects the way EOL chars are treated on a checkout. Thist must always be set to 'native' for compatibility reasons according to the ASF committers documentation.,MYFACES-3369
"We currently only have the 'minimal' checks enabled in core, which actually only checks the correct license headers.

We should go for the 'standard' checkstyle rules, even if this would take some time to fix (found 1111 errors only in the first module).
",MYFACES-3368
"Related to topic sent on jsr344-experts list:

[jsr344-experts] Facelet page with dynamic content and update ajax content does not work as user expects

Now take a look at this example:

include.xhtml

<h:commandLink ...>
   <f:ajax render=""content""/>
</h:commandLink>
...
<f:subview id=""content"">
<ui:include src=""#{testManagedBean.page}""/>
</f:subview>

page1.xhtml

<ui:composition
    xmlns:h=""http://java.sun.com/jsf/html""
    xmlns:f=""http://java.sun.com/jsf/core""
    xmlns:ui=""http://java.sun.com/jsf/facelets"">
<h:outputText id=""component1"" value=""Page 1""/>
<!-- ... more components ... -->
</ui:composition>

page2.xhtml

<ui:composition
    xmlns:h=""http://java.sun.com/jsf/html""
    xmlns:f=""http://java.sun.com/jsf/core""
    xmlns:ui=""http://java.sun.com/jsf/facelets"">
<h:outputStylesheet ... />
<h:outputText id=""component2"" value=""Page 2""/>
<!-- ... more components ... -->
</ui:composition>

Here the problem is if the dynamic content changes and add a resource under
""head"" target (h:outputStylesheet does that), shouldn't be added a section
on the ajax payload to update the <head> section? In theory yes, because
this breaks encapsulation principle. If the user says render all inside
content if the <head> section changes it is responsability of the framework
(in this case PartialViewContext) to detect that an send the correct
payload, right?. Here we have two options:

a. Keep track of the resources rendered and save that on the state, then use
that information to check if the head should be rendered. 
b. Use PostAddToViewEvent to check when a change on the component tree has 
triggered a change on the head.

Option b. save some bytes on the state but it could cause render <head> 
section more than necessary (for example a dynamic change but the head
has already rendered the resource, so it is not necessary). Option a.
impose that you need a way to check if the <head> was changed, and
require changes on the spec. 

I'll solve this problem adding a web config param:

org.apache.myfaces.STRICT_JSF_2_REFRESH_TARGET_AJAX

 on MyFaces and doing some
changes on the algorithm, adding a flag to indicate if a view is being built
by first time. 
",MYFACES-3367
To support overriding FacesContext should call other methods of FacesContext with FacesContext.getCurrentInstance(),MYFACES-3366
"The getProjectStage in our impl is suboptimal performancewise because it is implemented purely functional. But our implementation is an imperative singleton, so we can apply the singleton pattern to the method as well and safe the state after the first determination for future access. This should save us a little bit of time because we do not have to parse the script tags every time.
Also the 4 == in the if are slower than a direct map lookup. The code becomes tighter that way as well.


",MYFACES-3365
"Regression from 1.2 to 2.x
See: javax.faces.component.UIComponentFindComponentTest.testOverriddenFindComponent()",MYFACES-3364
"I've now seen a lot MyFaces projects which have wrong or none checkstyle reports activated.
This - amongst others - also checks for proper License headers in our files - thus this is a mandatory step in our build process!

I'll go forward and enable the standard checks in our parent pom 11-SNAPSHOT.

Projects which already have the maven-checkstyle-plugin properly configured with their own settings (like tobago) will not be affected.
This will only 'bite' the projects which did no checkstyle checks at all!",MYFACES-3363
"h2. Currently we have one big jsf.js file with all code in

* *core* which implements all of the spec
* *i18n* which implements the language messages for currently 7 languages
* *experimental* which implements features targetted for jsf 2.2 onwards
* *quirksmode* code which supports non standard compliant browsers

The idea is to still keep one big file, but also provide several files which partially can be mixed to achieve the functionality needed


h2. We are going to allow 

* one big file which resembles our current jsf.js
* a base file which resembles the core + quirksmode
* a modern browser file which resembles the core only without quirksmode code
* a separate i18n file for the i18n messages
* a legacy file for quirksmode browsers
* an experimental file with all non standard features combined
 In the end the plan is to allow the users to mix those feature sets to reduce the import size while still retaining all the existing
functionality.

",MYFACES-3361
"With the fix done in MYFACES-3329, the code in DefaultFaceletsStateManagementStrategy.PostAddPreRemoveFromViewListener no longer needs to prevent save changes triggered when refreshing algorithm occur.

The code affected looks like this:

        public void processEvent(SystemEvent event)
        {
            UIComponent component = (UIComponent) event.getSource();
            
            if (component.isTransient())
            {
                return;
            }
            
            FacesContext facesContext = FacesContext.getCurrentInstance();
            if (FaceletViewDeclarationLanguage.isRefreshingTransientBuild(facesContext))
            {
                return;
            }

Since the ""dynamic"" parts of the tree was not stable, save any related state produce exceptions on the state. With the param org.apache.myfaces.REFRESH_TRANSIENT_BUILD_ON_PSS_PRESERVE_STATE, since the parent component is marked to save/restore, everything worked as expected.

But the new algorithm make such parts stable, so we no longer require the check for FaceletViewDeclarationLanguage.isRefreshingTransientBuild(facesContext).

The effect of these lines was that state get lost in this example:

<h:form id=""mainForm"">
<ui:include src=""#{testManagedBean.page}""/>
<h:commandButton id=""page1"" value=""Go to 1"" actionListener=""#{testManagedBean.page1}""/>
<h:commandButton id=""page2"" value=""Go to 2"" actionListener=""#{testManagedBean.page2}""/>
</h:form>

page1.xhtml

<ui:composition
    xmlns:h=""http://java.sun.com/jsf/html""
    xmlns:f=""http://java.sun.com/jsf/core""
    xmlns:ui=""http://java.sun.com/jsf/facelets"">
<h:outputText id=""component1"" value=""Page 1""/>
</ui:composition>

page2.xhtml

<ui:composition
    xmlns:h=""http://java.sun.com/jsf/html""
    xmlns:f=""http://java.sun.com/jsf/core""
    xmlns:ui=""http://java.sun.com/jsf/facelets"">
<h:outputText id=""component2"" value=""Page 2""/>
</ui:composition>

click on Go to 2 button twice and then check if component2 was created on refresh, which means the component was not restored and the other one from the previous page was not removed.

",MYFACES-3360
"Due to code reorganisation we do not use the delegation pattern anymore, we can externalize that code to an unused externalized class. This will bring us another 2 kbyte compressed.
",MYFACES-3359
"I have a custom ExceptionHandler for handling ViewExpiredException as occurred in session timeout or application restart.  I have to tell the user in the redirected page the reason for being redirected.  Here is the handler:

        public void handle() throws FacesException {
                for (Iterator<ExceptionQueuedEvent> i=getUnhandledExceptionQueuedEvents().iterator(); i.hasNext(); ) {
                        ExceptionQueuedEventContext context = i.next().getContext();
                        Throwable t = context.getException();
                        if (t instanceof ViewExpiredException) {
                                FacesContext ctx = FacesContext.getCurrentInstance();
                                ViewExpiredException vee = (ViewExpiredException)t;
                                try {
                                        ctx.addMessage(null, new FacesMessage(FacesMessage.SEVERITY_ERROR, vee.getClass().getName(), vee.getMessage()));
                                        Flash flash = ctx.getExternalContext().getFlash();
                                        flash.put(""expiredViewId"", vee.getViewId());
                                        flash.setKeepMessages(true);

                                        ctx.getApplication().getNavigationHandler().handleNavigation(ctx, null, ""/login?faces-redirect=true"");
                                        ctx.renderResponse();
                                }
                                finally {
                                        i.remove();
                                }
                        }
                }
                super.handle();
        }

In the login.xhtml, it has #{flash.expiredViewId} and <f:messages> but both are empty when displayed.",MYFACES-3358
"We have long package names for every call to the inheritance and singleton, Also we use our logging as extension to lang. Both costs performance, and in case of extends sacrifices readability and filesize.
While I cannot wrap a function around the entire init process, I can temporarily introduce global variables which remap the original long namespace to a short one, and after being done, I can restore the original values again.

The Logging subframework will be moved into its own singleton, it does not make sense to extend anymore given the size of lang. This also improves the performance by 1-2% in development mode.

",MYFACES-3357
"During initialization, MyFaces assumes that the Web Application has been exploded in some location in the filesystem. This assumption is caused by heavily using [ServletContext.getRealPath|http://download.oracle.com/javaee/6/api/javax/servlet/ServletContext.html#getRealPath(java.lang.String)] during initialization, as well as File objects to access xhtml pages.

This makes MyFaces behave badly in containers which do not need to explode WARs, e.g. Apache Karaf with PAX Web. It also hinders OSGi-friendliness.

I have pinpointed the following locations, at least:
* org.apache.myfaces.config.FacesConfigValidator (line 102 in v2.1.3): when validating the from-id and to-id in the navigation rules.
* org.apache.myfaces.webapp.AbstractFacesInitializer (line 320 in v2.1.3): when setting the context path for validations
* org.apache.myfaces.webapp.AbstractFacesInitializer (line 133 in v2.1.3): logging

It would be a good idea to refactor this code to use ServletContext.getResource, as naturally XHTML files are bound to be WAR resources anyway. This will also make MyFaces more implementation-agnostic.
",MYFACES-3356
"The renderers for h:outputScript and h:outputStylesheet assume that library name / resource name cannot be relocated. One possible example could be merge multiple js or css files into a single one, but only on production time. In theory it should be possible to write a custom Resource wrapper and a custom ResourceHandlerWrapper that check if the file was merged and replace the library name / resource name.

The solution is add an additional check, and mark the resource as rendered again but with the returned value of resource.getLibraryName() and resource.getResourceName()",MYFACES-3355
"XHTML file:

      <p:commandButton id=""saveAndGo""
        value=""Save and Go""
        action=""#{launchBean.saveAction}""
        ajax=""false"">
      </p:commandButton>

Backing Bean method:


  public String saveAction()
    throws Exception
  {
      ProcessInstance process = _createProcessInstance();
      return ""/home/assistants/assistant?faces-redirect=true&processInstanceId=""
            + process.getId();
   }


Invoking the command button produces the following stack trace, causing part of the next page to terminate rendering:


java.lang.NullPointerException
	at java.io.Writer.write(Writer.java:140)
	at org.mortbay.jetty.NCSARequestLog.log(NCSARequestLog.java:319)
	at org.mortbay.jetty.handler.RequestLogHandler.handle(RequestLogHandler.java:51)
	at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:712)
	at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:405)
	at org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:211)
	at org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)
	at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:139)
	at org.mortbay.jetty.Server.handle(Server.java:313)
	at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:506)
	at org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:830)
	at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:514)
	at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:211)
	at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:381)
	at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:396)
	at org.mortbay.thread.BoundedThreadPool$PoolThread.run(BoundedThreadPool.java:442)
	

The section of jetty code that throws the NullPointerException is as follows (offending line highlighted):


                if (_logCookies)
                {
                    Cookie[] cookies = request.getCookies();
                    if (cookies == null || cookies.length == 0)
                        _writer.write("" -"");
                    else
                    {
                        _writer.write("" \"""");
                        for (int i = 0; i < cookies.length; i++)
                        {
                            if (i != 0)
                                _writer.write(';');
                            _writer.write(cookies[i].getName());
                            _writer.write('=');
                            _writer.write(cookies[i].getValue());  // <<-- NullPointerException
                        }
                        _writer.write(""\"""");
                    }
                }

Caused because the cookie oam.Flash.REDIRECT has a null value.


Looking at the source code for Myfaces Core - org.apache.myfaces.shared.context.flash.FlashImpl, the function _restoreRedirectValue has the following code which is used to remove the cookie:


            if (cookie != null)
            {
                // the cookie exists means there was a redirect, regardless of the value
                externalContext.getRequestMap().put(
                        FLASH_PREVIOUS_REQUEST_REDIRECT, Boolean.TRUE);
                
                // A redirect happened, so it is safe to remove the cookie, setting
                // the maxAge to 0 seconds. The effect is we passed FLASH_REDIRECT param 
                // to this request object
                cookie.setMaxAge(0);
                cookie.setPath(_getCookiePath(externalContext));
                cookie.setValue(null);
                httpResponse.addCookie(cookie);
            }

My understanding is that a cookie can be removed by setMaxAge(0). Hence the setValue(null) is redundant. Removing this should fix the issue.",MYFACES-3354
"We have a full single inheritance system in our core, the problem is that our callsuper method ignores the return value of the called method, this patch fixes it, it also fixes a scroll issue with the in window error log",MYFACES-3353
"I would like to provide the Simplified Chinese, Hong Kong Traditional Chinese and Taiwan Traditional Chinese Translation of Messages.js as well as related scripts.",MYFACES-3352
"According to JSF 2.0 and 2.1 spec section 14.4.2 table 14-6, the error data payload contains a description attribute describing the error.  It is missing in the implementation.

The standard descriptions of each error from the spec are quoted as follows for reference:

[httpError]: request status==null or request.status==undefined or request.status<200 or request.status >=300
[serverError]: The Ajax response contains an ""error"" element.
[malformedXML]: The Ajax response does not follow the proper format. See Section 1.4 ""XML Schema Definition for Partial Responses""
[emptyResponse]: There was no Ajax response from the server.

Instead of having static description, it could be context sensitive such as including http status for httpError.

In addition, it could make use of the localized system message module in Message.js for the description message.",MYFACES-3351
"According to JSF 2.0 and 2.1 spec section 14.4.2 table 14-6, the attributes of error data payload are:

	type
	status
	description
	source
	responseCode
	responseXML
	responseText
	errorName
	errorMessage

However, the attributes errorName and errorMessage are named as serverErrorName and serverErrorMessage respectively.  I have identified the changes and attached as follows.",MYFACES-3350
MyFaces Core pom.xml references myfaces-builder-plugin and myfaces-builder-annotations in snapshot versions but the snapshot repository is not configures as plugin repository. Therefore the build is broken.,MYFACES-3349
"In Messages.properties, the following standard message text

javax.faces.validator.LengthValidator.MAXIMUM = {1}: Validation Error: Value is greater than allowable maximum of ''{0}''
javax.faces.validator.LengthValidator.MINIMUM = {1}: Validation Error: Value is less than allowable minimum of ''{0}''

should be

javax.faces.validator.LengthValidator.MAXIMUM = {1}: Validation Error: Length is greater than allowable maximum of ''{0}''
javax.faces.validator.LengthValidator.MINIMUM = {1}: Validation Error: Length is less than allowable minimum of ''{0}''",MYFACES-3348
"Right now, some params are logged when myfaces is started or shutdown. Such log is done on MyfacesConfig class. It has the following problems:

- Logging about application startup should be done on AbstractFacesInitializer.
- That log should only be done on Production and Development project stage. For UnitTest and SystemTest, it should be silently ignored.
- A web config param should be used to enable/disable.
- All web config params not configured should be logged, not only the ones defined on MyfacesConfig.
- Deprecated params should not be logged.
- Params with expected values should be checked, and if it fails, log a warning message.

To solve all that problems, the idea is add the following fields to @JSFWebConfigParam:

    /**
     * The group which the param belongs. 
     * 
     * <p>These are the groups used in myfaces core:</p>
     * <ul>
     * <li>state</li>
     * <li>resources</li>
     * <li>viewhandler</li>
     * <li>validation</li>
     * <li>render</li>
     * <li>EL</li>
     * </ul>
     * 
     * @return
     */
    String group() default """";

    /**
     * The tag(s) or clasification(s), separated by commas
     * that this web config param can be clasified. 
     * 
     * <p>These are the tags used in myfaces core:</p>
     * <ul>
     * <li>tomahawk</li>
     * <li>performance</li>
     * </ul>
     * 
     * 
     * @return
     */
    String tags() default """";
    
    /**
     * Indicate if the param was deprecated or not.
     * 
     * @return
     */
    boolean deprecated() default false;

    /**
     * Indicate an alias or alternate name for this param. 
     * @return
     */
    String alias() default """";
    
    /**
     * Indicate if this param ignore upper or lower case when read params 
     * @return
     */
    boolean ignoreUpperLowerCase() default false;
    
    /**
     * The java type or class which this param is converted
     * 
     * @return
     */
    String classType() default """";

And create a class that generate this automatically using myfaces builder plugin make-config goal. In that way, each time we add a @JSFWebConfigParam annotation, the code will be synchronized automatically. Definitively this strategy is easier than create a class that hold all web config params, because it is more ""flexible"" and simple. Just create a constant, and the annotation and that's it.
",MYFACES-3347
"It is found that the keys in Messages_zh_CN.properties are not synchronized with Messages.properties.  I reorganize the keys to match Messages.properties and make the punctuations consistently.  Also, I've provided the Traditional Chinese translation on Messages_zh_TW.properties and Messages_zh_HK.properties.",MYFACES-3346
"Quotes (') in messages should be double-single-quoted ('').  Also, a double quote has been changed to double-single-quote for consistency.  Changed keys are:

javax.faces.converter.BooleanConverter.BOOLEAN
javax.faces.converter.BooleanConverter.BOOLEAN_detail
javax.faces.converter.DateTimeConverter.PATTERN_TYPE
javax.faces.validator.DoubleRangeValidator.MAXIMUM",MYFACES-3345
"Hi,

I have a problem when using p:selectManyCheckbox, as well as p:selectManyMenu, with MyFaces 2. Here is the page fragment:

	<p:inputTextarea value=""#{customer.firstName}"" required=""true""/>

	<p:selectManyCheckbox value=""#{customer.phones}"">
		<f:selectItem itemValue=""SS"" itemLabel=""Samsung""/>
		<f:selectItem itemValue=""LG"" itemLabel=""LG""/>
		<f:selectItem itemValue=""AP"" itemLabel=""Apple""/>
	</p:selectManyCheckbox>

	<p:commandButton value=""Submit"" process=""@form"" update=""@form""/>

Steps to reproduce the problem:

1. Let the firstName field empty and click Submit
2. Type something in the firstName field and click Submit

Then, the following exception occurs, amendment to MyFaces is needed to capture the stack trace,

[2011/10/4   12:29:01:093 CST] 0000001d UIComponentBa W   类 javax/faces/component/UIComponentBase 非法访问 ""private"" 类 java/util/Arrays$ArrayList
                                 java.lang.IllegalAccessException: 类 javax/faces/component/UIComponentBase 非法访问 ""private"" 类 java/util/Arrays$ArrayList
	at java.lang.J9VMInternals.newInstanceImpl(Native Method)
	at java.lang.Class.newInstance(Class.java:1345)
	at javax.faces.component.UIComponentBase.restoreAttachedState(UIComponentBase.java:1717)
	at javax.faces.component._DeltaStateHelper.restoreState(_DeltaStateHelper.java:614)
	at javax.faces.component.UIComponentBase.restoreState(UIComponentBase.java:1885)
	at javax.faces.component.UIOutput.restoreState(UIOutput.java:213)
	at javax.faces.component.UIInput.restoreState(UIInput.java:1012)
	at org.apache.myfaces.view.facelets.DefaultFaceletsStateManagementStrategy.restoreStateFromMap(DefaultFaceletsStateManagementStrategy.java:545)
	at org.apache.myfaces.view.facelets.DefaultFaceletsStateManagementStrategy.restoreStateFromMap(DefaultFaceletsStateManagementStrategy.java:581)
	at org.apache.myfaces.view.facelets.DefaultFaceletsStateManagementStrategy.restoreStateFromMap(DefaultFaceletsStateManagementStrategy.java:564)
	at org.apache.myfaces.view.facelets.DefaultFaceletsStateManagementStrategy.restoreStateFromMap(DefaultFaceletsStateManagementStrategy.java:564)
	at org.apache.myfaces.view.facelets.DefaultFaceletsStateManagementStrategy.restoreStateFromMap(DefaultFaceletsStateManagementStrategy.java:564)
	at org.apache.myfaces.view.facelets.DefaultFaceletsStateManagementStrategy.restoreStateFromMap(DefaultFaceletsStateManagementStrategy.java:564)
	at org.apache.myfaces.view.facelets.DefaultFaceletsStateManagementStrategy.restoreStateFromMap(DefaultFaceletsStateManagementStrategy.java:564)
	at org.apache.myfaces.view.facelets.DefaultFaceletsStateManagementStrategy.restoreView(DefaultFaceletsStateManagementStrategy.java:241)
	at org.apache.myfaces.application.StateManagerImpl.restoreView(StateManagerImpl.java:113)
	at org.apache.myfaces.shared.view.ViewDeclarationLanguageBase.restoreView(ViewDeclarationLanguageBase.java:106)
	at org.apache.myfaces.view.facelets.FaceletViewDeclarationLanguage.restoreView(FaceletViewDeclarationLanguage.java:1832)
	at org.apache.myfaces.application.ViewHandlerImpl.restoreView(ViewHandlerImpl.java:296)
	at org.apache.myfaces.lifecycle.RestoreViewExecutor.execute(RestoreViewExecutor.java:123)
	at org.apache.myfaces.lifecycle.LifecycleImpl.executePhase(LifecycleImpl.java:171)
	at org.apache.myfaces.lifecycle.LifecycleImpl.execute(LifecycleImpl.java:118)
	at javax.faces.webapp.FacesServlet.service(FacesServlet.java:189)
	at com.ibm.ws.webcontainer.servlet.ServletWrapper.service(ServletWrapper.java:1147)
	at com.ibm.ws.webcontainer.servlet.ServletWrapper.handleRequest(ServletWrapper.java:722)
	at com.ibm.ws.webcontainer.servlet.ServletWrapper.handleRequest(ServletWrapper.java:449)
	at com.ibm.ws.webcontainer.servlet.ServletWrapperImpl.handleRequest(ServletWrapperImpl.java:178)
	at com.ibm.ws.webcontainer.filter.WebAppFilterChain.invokeTarget(WebAppFilterChain.java:125)
	at com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:77)
	at com.ibm.ws.webcontainer.filter.WebAppFilterManager.doFilter(WebAppFilterManager.java:919)
	at com.ibm.ws.webcontainer.filter.WebAppFilterManager.invokeFilters(WebAppFilterManager.java:1016)
	at com.ibm.ws.webcontainer.servlet.CacheServletWrapper.handleRequest(CacheServletWrapper.java:87)
	at com.ibm.ws.webcontainer.WebContainer.handleRequest(WebContainer.java:883)
	at com.ibm.ws.webcontainer.WSWebContainer.handleRequest(WSWebContainer.java:1659)
	at com.ibm.ws.webcontainer.channel.WCChannelLink.ready(WCChannelLink.java:195)
	at com.ibm.ws.http.channel.inbound.impl.HttpInboundLink.handleDiscrimination(HttpInboundLink.java:452)
	at com.ibm.ws.http.channel.inbound.impl.HttpInboundLink.handleNewRequest(HttpInboundLink.java:511)
	at com.ibm.ws.http.channel.inbound.impl.HttpInboundLink.processRequest(HttpInboundLink.java:305)
	at com.ibm.ws.http.channel.inbound.impl.HttpICLReadCallback.complete(HttpICLReadCallback.java:83)
	at com.ibm.ws.tcp.channel.impl.AioReadCompletionListener.futureCompleted(AioReadCompletionListener.java:165)
	at com.ibm.io.async.AbstractAsyncFuture.invokeCallback(AbstractAsyncFuture.java:217)
	at com.ibm.io.async.AsyncChannelFuture.fireCompletionActions(AsyncChannelFuture.java:161)
	at com.ibm.io.async.AsyncFuture.completed(AsyncFuture.java:138)
	at com.ibm.io.async.ResultHandler.complete(ResultHandler.java:204)
	at com.ibm.io.async.ResultHandler.runEventProcessingLoop(ResultHandler.java:775)
	at com.ibm.io.async.ResultHandler$2.run(ResultHandler.java:905)
	at com.ibm.ws.util.ThreadPool$Worker.run(ThreadPool.java:1648)

After investigation, the cause could be in the saveAttachedState method of UIComponentBase.java:

        else if (attachedObject instanceof Collection)
        {
            if (ArrayList.class.equals(attachedObject.getClass()))
            {
                List<Object> lst = new ArrayList<Object>(((List<?>) attachedObject).size());

The above fragment only consider if the attachedObject is an instance of ArrayList.  However, the object returned from PrimeFaces is created by Arrays.asList, which is java.util.Arrays$ArrayList.  So, when performing restoreAttachedState, this private class could not be instantiated.  So, I suggest to change the line

            if (ArrayList.class.equals(attachedObject.getClass()))

as this

            if (ArrayList.class.equals(attachedObject.getClass()) || _ClassUtils.simpleClassForName(""java.util.Arrays$ArrayList"").equals(attachedObject.getClass()))

to solve the problem.
",MYFACES-3344
It should receive String instances too.,MYFACES-3343
UISelectMany child components could receive non array or collection instances as selected values.,MYFACES-3342
Call to getClientId() on UIInput._createFieldDebugInfo on jsp cause invalid client to be assigned on development project stage. A simple check for parent and if the component is in view is enough to prevent this problem.,MYFACES-3341
"Trying this test case:

        <h:commandButton id=""submit"" value=""Submit"">
            <f:param name=""someparam"" value=""123""/>
            <f:ajax .... />
        </h:commandButton>

The final link appends the submit script, but it should not. In theory the submit script should be added but in practice there is no clean way to detect if a ""submit"" behavior has been added to the component, so to keep things simple, if the button is submit type, it is responsibility of the developer to add a client behavior that submit the form, for example using a f:ajax tag.
Otherwise, there will be a situation where a full submit could be trigger after an ajax operation. Note we still need to append two scripts if necessary: autoscroll and clearhidden fields, because this code is called for a submit button.",MYFACES-3340
"One of my automated tests regarding render javax.faces.ViewRoot fails on chrome and ie, it works on all other browsers.

",MYFACES-3339
"The getViewState is not called instead the underlying encodeSubmittable fields is called, hence an outside decoration of the function must fail.
This needs to be fixed",MYFACES-3338
"Checking MYFACES-3313 I notice that param defined with f:param inside h:button or h:link has precedence over the same param defined in a faces-config navigation rule. The curious part is the code has this comment:

        // In theory the precedence order to deal with params is this:
        // component parameters, navigation-case parameters, view parameters
        // getBookmarkableURL deal with this details.

It seems components parameters and navigation-case parameters are handled on the link, but still it is true that getBookmarkable should deal with the remaining stuff.",MYFACES-3337
"Paths like this

http://localhost:8080/mycustomapp/faces

should an exception on flash scope and http response 500. Since the prefix is reserved to jsf servlet, it should return 404 not found, because it is not possible to derive a view. Note in portlet case it could be valid, because the viewId can be encoded as a query param.

In this case, a InvalidViewIdException should be thrown and later on restore view phase, we should check if the view was committed, to prevent restore view / rendering code continue and throw other unwanted exceptions.",MYFACES-3336
"jsf.getViewState() create a new _AjaxUtils object, but it is singleton. It should just grab the object, because when jsf.js is loaded, this instance is created",MYFACES-3335
use of f:ajax tage generets 'this._onWarning is not a function' Error,MYFACES-3334
"This is clearly not a bug, but a problem in html unit. At a full page replacement test I am getting a undefined.noteType is not defined.
Now the problem here is I traced it down, and it seemed to be a timing issue. Inserting assertion checks which throw errors at the corresponding methods resolve the issue to a satisfying degree.
The errors clearly if triggered would have caused an error in the console log and in the page. Also the error is not present in html unit 2.6.
So I mark the fixes as improvement, because they will allow to run our tests.
",MYFACES-3333
"Since JSF 2.1, after the view is built an addtional iteration to call markInitialState is done. 

The condition to call ComponentSupport.markComponentToRestoreFully relies on that value, but instead we should use this condition:

fcc.isRefreshTransientBuildOnPSS() && !fcc.isRefreshingTransientBuild()

If no refreshing is done we are creating a new view, just like markInitialState. The effect is the view is not refreshed automatically in ""auto"" mode. It has been reported earlier, but checking the patch done on MYFACES-3329 I realized this condition is not working as expected.",MYFACES-3332
"Suppose this use case:

    <c:if test=""..."">
        <testComposite:simpleComposite/>
    </c:if>
    <testComposite:simpleComposite/>

If c:if condition is first false and then it is true, the id for the second component will be assigned to the first one. The effect is c:if add/remove/refresh algorithm gets confused. Later if the value changes back to false, the component that is removed will be the other that is not expected. At the end the state of one component is lost.

The algoritm that generate that identifier must meet at minimal two conditions.

1. They should be unique but
2. The same ids should be generated each time the view is built for comply with c:if addition/removal algorithm.

Additionally, considering this use case:

<h:outputText value=""-A-""/>
<ui:include src=""#{pageSelected}""/>
<h:outputText value=""-C-""/>

page1.xhtml:

<ui:composition>
<h:outputText value=""-B-""/>
</ui:composition>

page2.xhtml:

<ui:composition>
<h:outputText value=""-B-""/>
</ui:composition>

We need to ensure this condition:

3. Different ids should be generated for components in different.

To ensure two pages with the same components in this configuration can be associated with different ids, it is necessary to keep track of the facelet hierarchy.

How to solve it?

First create a ""hierarchical counter"" that can generate something like this:

1
2
3
4
5_1
5_2_1
5_2_2
5_2_3
5_3

The proposal I'm working on is create a counter like this:

[hierarchical counter]_[faceletHierarchy_prefix]_[tagId]

And use two hierarchical counters, one for the previous id and the other one for the component generated id.
",MYFACES-3331
"To ensure uniqueness, MyFaces uses a unique tag id more associated to a facelet. The effect is each page ends with ids that are too long. For example:

j_id538961478_e4e33bc

It is necessary to provide another strategy to generate component ids as small as possible. It should meet two conditions:

1. They should be unique but
2. The same ids should be generated each time the view is built for comply with PSS algorithm.

How to solve it?

First create a ""hierarchical counter"" that can generate something like this:

j_id_1
j_id_2
j_id_3
j_id_4
j_id_5_1
j_id_5_2_1
j_id_5_2_2
j_id_5_2_3
j_id_5_3
....
j_id_z

Use the max radix available for a counter, because for a html id we can use:

0123456789abcdefghijklmnopqrstuvwxyz

as valid characters.

This counter does not need to be related to the one used by MARK_CREATED, but the same methods should be used to create additional hierarchies.

This change will improve performance too, because the generated pages will be shorter and we can get rid two maps, so for each tag we remove a map.get call. Additionally, with this strategy we can make PSS algorithm work better, because the final 

component ids will be more stable, and that's very important. There are some corner use cases where to make it work it is required to enable org.apache.myfaces.REFRESH_TRANSIENT_BUILD_ON_PSS and 

org.apache.myfaces.REFRESH_TRANSIENT_BUILD_ON_PSS_PRESERVE_STATE, but with this change we can open the possibility to do not require them at all and reduce even more the state size.
",MYFACES-3330
"There is a well known issue related to use c:if and ui:include src=""#{...}"". It has been described in different ways for a long time. For example see:

MYFACES-3271 ui:include tag handler evaluates its bindings to soon during JSF lifecycle

There is a lot of related issues but to keep things simple, PSS algorithm is based on the following conditions:

1. Each time the view is build by first time or when it is restored, the same initial state will be retrieved.
2. It is possible to calculate a delta state, based on that initial state.

In practice, there are some use cases that breaks that:

a. c:if tag
b. c:choose, c:when and c:otherwise
c. ui:include src=""#{...}"" (usually known as ""dynamic include"")
d. ui:decorate template=""#{...}""
e. c:forEach 

The reason is they change the component tree dynamically. For example a c:if tag could be bound to a ValueExpression that in one moment could be true and then false, so the ""initial state"" calculated by PSS algorithm through a vdl.buildView() will be different each time, breaking condition 1.

It is true there exists the workaround with org.apache.myfaces.REFRESH_TRANSIENT_BUILD_ON_PSS_PRESERVE_STATE, which mark some parts of the tree to be restored fully, so it does not matter the initial state, at the end just we restore such parts fully and everything works as facelets 1.1.x. But even so, it is a workaround, and we need a better solution to that.

In practice, points a., b., c. and d. are relevant. The case e. related to c:forEach is not because the iterated data has 

usually a life longer than the view (session, conversation or view scope), so we can exclude this case. 

The solution to this problem is store the result of the evaluated expressions within the view. It is the only that will work 

as good as org.apache.myfaces.REFRESH_TRANSIENT_BUILD_ON_PSS_PRESERVE_STATE. 

To do that we need to generate an unique id per tag and make components and tags inside them generate unique tags too but the 

same ids should be generated each time the view is build no matter the conditions. For example:

<h:outputText value=""-A-""/>
<c:if test=""#{condition}"">
<h:outputText value=""-B-""/>
</c:if>
<h:outputText value=""-C-""/>

-C- should have the same id each time, no matter what happen inside c:if. Since PSS algorithm uses clientIds to store the ""delta"" state of the components, ensure that is CRITICAL, otherwise the state will get mixed or lost.

Additionally, we must restore that ""facelet state"" before the view is built to use it when the initial state is derived.
",MYFACES-3329
"By performance reasons, FlashELResolver should get FacesContext instance when it is necessary. Just moving some lines we can save a map.get() call per each evaluation. Additionally, a check for null should be added too.",MYFACES-3328
"Checking some examples I notice that facelets algorithm swallow spaces between markup and component. This comes from original facelets algorithm, but in some point it was fixed by Mojarra. See these links for details:

http://java.net/jira/browse/JAVASERVERFACES-959
http://java.net/jira/browse/JAVASERVERFACES-1208

I review the provided and the solution done in Mojarra is correct. Additionally, to keep compatibility with Mojarra, this issue becomes relevant, because applications moving from Mojarra to MyFaces will notice this.",MYFACES-3327
"I have a h:dataTable component with an h:inputText component per row bound to a list. Now I want to add a new row with a h:commandLink outside the table via ajax. This link is immediate to avoid validation on the input components.

The problem is, that when I set the command link immediate, data the user entered into the input components vanishes (render and execute in f:ajax are set to the table). I did some investigations and saw that UIData.encodeBegin() resets the state (and submitted values!) before rendering. IMO, the submitted values must be preserved if phases 3 to 5 are skipped.

I first thought that setting _isValidChilds to false in processDecodes if renderResponse() is called might work. But as the link is outside and after the table renderResponse() is not called yet at that point. I wonder what the correct way to handle this could be? Maybe remember if processValidators() was called on the table. If not, don't kill the state.

Btw. the same applies for ui:repeat.",MYFACES-3326
h:column should use HtmlColumn instead UIColumn. The problem is HtmlLibrary uses javax.faces.Column instead javax.faces.HtmlColumn. This cause the effect that rowHeader is assigned as String on the attribute map instead call its setter on HtmlColumn class.,MYFACES-3325
"Conditional navigation match has priority over same case without conditional navigation

for example:

  <navigation-rule>
    <from-view-id>/a.jsp</from-view-id>
    <navigation-case>
        <from-outcome>go</from-outcome>
        <if>#{test.true}</if>
        <to-view-id>/b.jsp</to-view-id>
    </navigation-case>
  </navigation-rule>
  <navigation-rule>
    <from-view-id>/a.jsp</from-view-id>
    <navigation-case>
        <from-outcome>go</from-outcome>
        <to-view-id>/c.jsp</to-view-id>
    </navigation-case>
  </navigation-rule>

should return b.jsp, but it is returning c.jsp. ",MYFACES-3324
"If a primitive array is used on the input, a ClassCastException is thrown because it can't be cast to Object[]",MYFACES-3323
"I found this problem on stackoverflow:

http://stackoverflow.com/questions/7102695/how-can-i-include-a-js-file-with-query-string-in-houtputscript

It claims that you can include query params on ""name"" attribute. There is no mention on the spec or javadoc or renderkitdoc about this, but it mentions this issue:

http://java.net/jira/browse/JAVASERVERFACES-1212

Maybe it was applied on mojarra code but never documented. Anyway, it seems reasonable to include it in MyFaces too.",MYFACES-3322
"Script fragments containing & characters are encoded into &amp; before the script is evaluated. I checked the code from the server side and it is correct, so the problem is on the javascript part. ",MYFACES-3321
"In 2.1.4-SNAPSHOT there seems to be a serious problem with Ajax on Webkit based browsers. I have a table that is updated via a ajax call that adds a row to this table. In Safari and Chrome (MacOS)  this works only once (then no further requests are issued).

This problem does not occur with Firefox. Neither do I have troubles like this with version 2.1.3 on any browser.",MYFACES-3320
"I'm currently trying to create a custom ajax tag that is based on f:ajax but supports an additional attribute. For this, I wanted to create a new tag handler that extends AjaxHandler.

What I found out is, that it is VERY hard to do so. The creation of the AjaxBehavior is buried inside applyAttachedObject(). The only reasonable way I found to set an additional value expression on the created AjaxBehavior is to pass in a wrapped FacesContext/Application from the derived class.

It would be so much easier, if, for instance, creating the behavior would be done in a protected method. Then the behavior would be accessible in derived classes.",MYFACES-3319
"The spec javascript documentation says this:

If an <insert> element is found in the response with the attribute before:

<insert id=""insert id"" before=""before id"">
   <![CDATA[...]]>
</insert>

    Extract this <insert> element's CDATA contents from the response.
    Find the DOM element whose identifier matches before id and insert the <insert> element's CDATA content before the DOM element in the document.

If an <insert> element is found in the response with the attribute after:

<insert id=""insert id"" after=""after id"">
   <![CDATA[...]]>
</insert>

    Extract this <insert> element's CDATA contents from the response.
    Find the DOM element whose identifier matches after id and insert the <insert> element's CDATA content after the DOM element in the document.


But JSF 2.0 Appendix A about partial response xml says it should be:

<insert>
<before id=""before id"">
   <![CDATA[...]]>
</before>
</insert>

<insert>
<after id=""after id"">
   <![CDATA[...]]>
</after>
</insert>

MyFaces implements the description on the javascript doc, but Mojarra follows the structure inside the spec. In this case the spec takes precedence over the javascript doc.



",MYFACES-3318
Just insert an additional space so ajax errors looks better,MYFACES-3317
"I've run into an issue where the fix in MyFaces-1890 does not work.
When dealing with a composite component:

		 		  valueBinding.getType(facesContext.getElContext());

returns java.lang.Object since the MapELResolver.getType returns
Object.class in accordance with the EL Spec, the JavaDoc can be found here:

http://java.sun.com/javaee/5/docs/api/javax/el/MapELResolver.html

The fix was made in the following JIRA issue for the TomCat EL:
https://issues.apache.org/bugzilla/show_bug.cgi?id=51177

So in the case of a composite components the MyFaces Implementation still
has an issue.

Could a context parameter be added to set df.setParseBigDecimal(true); so
that we can avoid the problem faced here? I think the only reason this was
not made the default behavior was to keep some samples from failing or
existing applications that depend on the behavior from failing.

I'm willing to create,test and contribute the fix. Please let me know what
your thoughts are on this issue and I'll to a solution to contribute.

",MYFACES-3316
"It is not possible to add a default validator with @FacesValidator(value=""someID"", isDefault = true). I had to add the validator id manually in the faces-config.xml to make it work.

It looks like the isValid() element is not processed in AnnotationConfigurator.",MYFACES-3315
"I just tried to create a new custom AjaxBehavior. I extended MyFaces' AjaxBehavior and saw that both getStateHelper() methods are private, which makes it kind of hard. They should be protected. ",MYFACES-3314
"I have a simple navigation test case that does a navigation between two pages.  Both pages have the same simple markup:

  <h:body>
    <h2>Page 01</h2>
    <h:form>
      <h:commandButton id=""navButton"" 
                       value=""Nav""
                       action=""#{testBean.lastPage}"" />
    </h:form>
  </h:body>

The backing bean methods simply return the appropriate action outcome:

    public String lastPage(){
        return ""lastPage"";
    }

And the faces-config file has the following navigation rules:


    <navigation-rule>
        <from-view-id>*</from-view-id>
        <navigation-case>
            <from-outcome>lastPage</from-outcome>
            <to-view-id>/page02.jsf</to-view-id>
            <redirect/>
        </navigation-case>

        <navigation-case>
            <from-outcome>firstPage</from-outcome>
            <to-view-id>/page01.jsf</to-view-id>
            <redirect/>
        </navigation-case>
    </navigation-rule>

The web.xml has a servlet mapping for .jsf files:

    <servlet-mapping>
        <servlet-name>Faces Servlet</servlet-name>
        <url-pattern>*.jsf</url-pattern>
    </servlet-mapping>

If I go to the page01.jsf, the page loads fine.  When I click the ""Nav"" button, the navigation occurs but the URL is page02.xhtml rather than page02.jsf.  Because the extension is not preserved and there is no mapping for .xhtml in this case, the page doesn't get handled by the Faces Servlet.  The current version of Mojarra (2.1.3) does preserve the extension when the redirect URL is encoded.
",MYFACES-3313
"If a navigation occur inside PreRenderViewEvent to the same page, a new viewRoot component is created, but the algorithm is not detecting that case. The effect is a empty page is rendered, but it should not.",MYFACES-3312
"I have some serious problems with composite component attributes. I have a composite component with the attribute value. This attribute (#{cc.attrs.value}) is mapped to the value attribute of an internal h:inputText. When I pass a VE to the composite component, the value is not converted in the h:inputText.

The problem is caused in _SharedRendererUtils.findUIOutputConverter(). In this method the converter is resolved based on the type returned by a call to getType() on the VE. Unfortunately, for the VE in the composite component (#{cc.attrs.value}) this resolves to java.lang.Object (and not to java.lang.Long in my case).

I quickly tried to replace the call to VE.getType() with a call to getValue().getClass(). This works, but I guess this introduces additional constraints I'm currently not aware of. Any ideas? Wasn't something like this already discussed in the past?",MYFACES-3311
"Storing the factory instance on the servlet context makes it impossible to use in a portlet environment. It would be easier just storing it on the application map regardless of context instance.

Regards,
Hampus",MYFACES-3310
"While using FactoryFinderProvider SPI, it is required to check the real exception from InvocationTargetException, and throw some exceptions directly.",MYFACES-3309
"I tried to make a localized composite components for dynamic localization of content on my pages (that goes beyond resource bundles). The basic idea is to be able to create composite components with static text and/or components (links, images...) for different languages. As a composite component basically is a resource I thought something like this should be possible:

/resources/fragments/fragment01.xhtml
/resources/de/fragments/fragment01.xhtml

IMO the spec is a bit unclear on this but I would say it should work. I tried it - it did not work. The problem is, that CompositeComponentResourceTagHandler gets a resource in the constructor that will be used till the death of the webapp. No chance to switch locales.

My idea is to use a cache holding a resource for every locale.",MYFACES-3308
This is needed because we have an issue in the current setup of the checkstyle plugin,MYFACES-3307
"I have a case where I use a JPA domain object (Mission) that has a standard @ManyToMany relationship to another domain object Departments. The fetch type is set to EAGER on both ends.
The web page has a <h:selectManyCheckBox> with all possible Departments. The selection is then mapped to the mission object's department set via a custom converter. This all works well.
When I submit my form I get an org.hibernate.LazyInitializationException in (I believe)  the validation phase. The problem is that MyFaces tries to create a new instance of the specific hibernate class PersistentSet (which should NOT be used outside Hibernate). It then populates this Set with objects and that is when LazyInitializationException hits!

I have pinpointed the exact location to org.apache.myfaces.shared_impl.renderkit.SharedRendererUtils.java, Line 255:
                           // try to create the (concrete) collection from modelType 
                            // or with the class object of componentValue (if any)
                            try
                            {
                            	 targetForConvertedValues = (componentValue != null
                                         ? componentValue.getClass()
                                         : modelType).newInstance();
                            }

With I add a check so we are not instanciating Hibernate collections (AbstractPersistentCollection) the program then goes on to create a standard HashSet and all is well. My program works perfectly with this patch:
                           // try to create the (concrete) collection from modelType 
                            // or with the class object of componentValue (if any)
                            try
                            {
                            	 targetForConvertedValues = (componentValue != null && !(componentValue instanceof org.hibernate.collection.AbstractPersistentCollection)
                                         ? componentValue.getClass()
                                         : modelType).newInstance();
                            }

Of course, adding a dependency on Hibernate in Myfaces is not the correct solution, so another solution has to be invented. 

My program is solid in itself with regards to the dreaded LIE exception, it is only when I use persisted objects with OneToMany or ManyToMany collections that this problem occurs. 
MyFaces should never try to instanciate Hibernate collections without having an entity manager session, which you do not.
I can attach some code examples if needed, but the problem lies not in the rather standard JSF code, but in this specific point in code listed above. Let me know if more examples are needed.",MYFACES-3306
"The current xhr core of our jsf.js implementation is somewhat messy. I have started to clean up the core and generally 
some myfaces jsf.js parts. The idea is to implement a xhr level2 interface on top of xhr level1 and iframe so that our ajax request class can utilize the cleaner xhr level2 interface or the native xhr level2 objects whenever present.
The idea is to split the current ajax request classes into an engine part and a jsf part the jsf part should keep the logic as is
and the engine part should be a plain xhr implementation which follows closely the xhr level2 interface.

Additionally to that I want to move the ajax response and ajax utils classes into singletons for performance reasons and clean up the code generally a little bit.
",MYFACES-3305
"Trying to use a h:selectOneRadio to select one of two values for an enum and it fails, throwing a NullPointerException. No explicit converter is in use so (from debugging) it appears to be using the default EnumConverter.

Code snippets in question are as follows:

testLovs.xhtml:


    <h:panelGrid columns=""1"">

      Simple radio button with constant string values
      <h:selectOneRadio id=""l1"" value=""#{testLovsBean.l1}"">
         <f:selectItem itemValue=""A"" itemLabel=""labelA""/>
         <f:selectItem itemValue=""B"" itemLabel=""labelB""/>
      </h:selectOneRadio>
      <h:outputText id=""l1Str"" value=""l1: #{testLovBean.l1AsString}""/>

      <p:separator/>

      Radio button for enum
      <h:selectOneRadio id=""l2"" value=""#{testLovsBean.l2}"">
         <f:selectItem itemValue=""#{VALUEA}"" itemLabel=""labelA""/>
         <f:selectItem itemValue=""#{VALUEB}"" itemLabel=""labelB""/>
      </h:selectOneRadio>
      <h:outputText id=""l2Str"" value=""l2: #{testLovBean.l2AsString}""/>

      <p:separator/>

      <p:commandButton id=""commitCommand""
        action=""#{testLovsBean.commitAction}""
        value=""Submit""
        ajax=""false""/>


TestLovsBean.java:


package tn.view.bean.test;

import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Component;

import tn.view.util.FacesUtils;

/**
 * Class used for testing date controls
 */
@Component
@Scope(""request"")
public class TestLovsBean
{
  public TestLovsBean()
  {
  }

  public String getL1()
  {
    return _l1;
  }

  public void setL1(String l1)
  {
    _l1 = l1;
  }

  public String getL1AsString()
  {
    return _l1;
  }

  public TestEnum getL2()
  {
    return _l2;
  }

  public void setL2(TestEnum l2)
  {
    _l2 = l2;
  }

  public String commitAction()
  {
    System.out.println(""commitAction invoked"");
    FacesUtils.addInfoMessage(""L1: "" + _l1);
    FacesUtils.addInfoMessage(""L2: "" + _l2);
    return null;
  }

  private String _l1;
  private TestEnum _l2;
}


TestEnum.java:

package tn.view.bean.test;

public enum TestEnum
{
  VALUEA,
  VALUEB,
}


Stack trace:

javax.servlet.ServletException
	at javax.faces.webapp.FacesServlet.service(FacesServlet.java:221)
	at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:487)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1093)
	at tn.view.error.ResponseCapturingFilter.doFilter(ResponseCapturingFilter.java:83)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1084)
	at tn.view.error.AbstractUncaughtExceptionInterceptor.doFilter(AbstractUncaughtExceptionInterceptor.java:66)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1084)
	at net.sf.acegisecurity.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:292)
	at net.sf.acegisecurity.intercept.web.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:108)
	at net.sf.acegisecurity.intercept.web.SecurityEnforcementFilter.doFilter(SecurityEnforcementFilter.java:197)
	at net.sf.acegisecurity.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:303)
	at net.sf.acegisecurity.providers.anonymous.AnonymousProcessingFilter.doFilter(AnonymousProcessingFilter.java:143)
	at net.sf.acegisecurity.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:303)
	at net.sf.acegisecurity.ui.basicauth.BasicProcessingFilter.doFilter(BasicProcessingFilter.java:214)
	at net.sf.acegisecurity.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:303)
	at net.sf.acegisecurity.ui.AbstractProcessingFilter.doFilter(AbstractProcessingFilter.java:324)
	at net.sf.acegisecurity.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:303)
	at net.sf.acegisecurity.context.HttpSessionContextIntegrationFilter.doFilter(HttpSessionContextIntegrationFilter.java:220)
	at net.sf.acegisecurity.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:303)
	at net.sf.acegisecurity.securechannel.ChannelProcessingFilter.doFilter(ChannelProcessingFilter.java:168)
	at tn.security.CustomChannelProcessingFilter.doFilter(CustomChannelProcessingFilter.java:23)
	at net.sf.acegisecurity.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:303)
	at net.sf.acegisecurity.util.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at net.sf.acegisecurity.util.FilterToBeanProxy.doFilter(FilterToBeanProxy.java:120)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1084)
	at net.sf.acegisecurity.wrapper.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:50)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1084)
	at tn.view.filter.StaticContentCachingFilter.doFilter(StaticContentCachingFilter.java:85)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1084)
	at tn.view.error.AbstractUncaughtExceptionFilter.doFilter(AbstractUncaughtExceptionFilter.java:81)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1084)
	at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:360)
	at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)
	at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181)
	at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:139)
	at org.mortbay.jetty.handler.RequestLogHandler.handle(RequestLogHandler.java:49)
	at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:712)
	at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:405)
	at org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:211)
	at org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)
	at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:139)
	at org.mortbay.jetty.Server.handle(Server.java:313)
	at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:506)
	at org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:830)
	at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:514)
	at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:211)
	at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:381)
	at org.mortbay.jetty.bio.SocketConnector$Connection.run(SocketConnector.java:227)
	at org.mortbay.jetty.security.SslSocketConnector$SslConnection.run(SslSocketConnector.java:626)
	at org.mortbay.thread.BoundedThreadPool$PoolThread.run(BoundedThreadPool.java:442)
Caused by: java.lang.NullPointerException
	at org.apache.myfaces.shared.renderkit.html.HtmlRadioRendererBase.renderGroupOrItemRadio(HtmlRadioRendererBase.java:221)
	at org.apache.myfaces.shared.renderkit.html.HtmlRadioRendererBase.encodeEnd(HtmlRadioRendererBase.java:126)
	at javax.faces.component.UIComponentBase.encodeEnd(UIComponentBase.java:539)
	at org.apache.myfaces.shared.renderkit.RendererUtils.renderChild(RendererUtils.java:551)
	at org.apache.myfaces.shared.renderkit.html.HtmlGridRendererBase.renderChildren(HtmlGridRendererBase.java:334)
	at org.apache.myfaces.shared.renderkit.html.HtmlGridRendererBase.encodeEnd(HtmlGridRendererBase.java:169)
	at javax.faces.component.UIComponentBase.encodeEnd(UIComponentBase.java:539)
	at org.primefaces.renderkit.CoreRenderer.renderChild(CoreRenderer.java:64)
	at org.primefaces.renderkit.CoreRenderer.renderChildren(CoreRenderer.java:48)
	at org.primefaces.renderkit.CoreRenderer.renderChild(CoreRenderer.java:62)
	at org.primefaces.renderkit.CoreRenderer.renderChildren(CoreRenderer.java:48)
	at org.primefaces.component.layout.LayoutUnitRenderer.encodeEnd(LayoutUnitRenderer.java:51)
	at javax.faces.component.UIComponentBase.encodeEnd(UIComponentBase.java:539)
	at javax.faces.component.UIComponent.encodeAll(UIComponent.java:641)
	at javax.faces.component.UIComponent.encodeAll(UIComponent.java:637)
	at javax.faces.component.UIComponent.encodeAll(UIComponent.java:637)
	at javax.faces.component.UIComponent.encodeAll(UIComponent.java:637)
	at org.apache.myfaces.view.facelets.FaceletViewDeclarationLanguage.renderView(FaceletViewDeclarationLanguage.java:1481)
	at org.apache.myfaces.application.ViewHandlerImpl.renderView(ViewHandlerImpl.java:264)
	at org.apache.myfaces.lifecycle.RenderResponseExecutor.execute(RenderResponseExecutor.java:90)
	at org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:239)
	at javax.faces.webapp.FacesServlet.service(FacesServlet.java:191)
	... 49 more

",MYFACES-3304
"In ExceptionHandlerWrapper, method getHandledExceptionQueuedEvents() incorrectly delegates to getUnhandledExceptionQueuedEvents() of wrapped instance.",MYFACES-3303
"I use the ViewAccessScope from CODI. 
If I create a bean with viewAccessScope and link from a view (where the bean is called) to another view (where the bean is accessed too) and then go back to the original view, I expect, that the same instance of the bean is used. But at the time I go back to the original view in the Restore-View-Phase the instance of the bean is destroyed and a new one is created.

This behaviour only happen if I use the PROJECT_STAGE=Development AND implement a viewParameter to the view. So I think, that in Development-Stage the <metadata>-Tag or the <viewParameter>-Tag do something that brings the BeanManager to handle the beans in abnormal way.

There is a sample project at https://bitbucket.org/os890/myfaces-mailing-list/src/56d0ef922d12
",MYFACES-3302
"Due to the new ContextAware exception reporting system, ValidatorExceptions are not handled as validation errors, but as ELExceptions.

See MYFACES-3300 for a detailed description and an example.",MYFACES-3301
"I am currently trying to update some examples to Myfaces 2.1.2 and ran into some ajax related problems. I have a h:selectBooleanCheckbox component that collapses and expands two input fields via f:ajax. There is a value change listener for the checkbox that sets the value internally and calls renderResponse(). In f:ajax, those input fields are also listed in execute to preserve the input the user has potentially made. So far, I had no problems with this solution. The validation for the input fields did not kick in (or did not bother me) and the values were preserved.

With 2.1.2 I have two issues:
1) Even if the input values are valid the values in the input fields vanish when they are expanded and collapsed again.
2) Now validation kicks in for invalid values and I get an error message in the browser

This works with all older versions I tried (2.0.4, 2.1.0 and 2.1.1).

Would be interesting to know what really changed here!",MYFACES-3300
"I am having problems using MyFaces with Bean Validation.

I am not clear what the JSF spec means, but it says ""Consider a simple web application that has one page, written in Facelets for JSF 2, that has a several text fields inside of a form. This application is running in a JSF runtime in an environment that does require JSR 303 Bean Validation, and therefore this feature is available. Assume that every text field is bound to a managed bean property that has at least one Bean Validation constraint annotation attached to it. During the render response phase that always precedes a postback, due to the specification requirements in Section 3.5.3 ""Validation Registration"", every UIInput in this application has an instance of Validator with id javax.faces.Bean attached to it"".

George Gastaldi and I have created a sample application (attached) that demonstrates several ways of creating a simple input text bound to Bean Validation. This must be deployed to a Java EE 6 container (we tested against JBoss AS 6). You will note the first two pages (Normal Facelets form, Binding Component) work fine. When you click 'Click Me' to POSTback, Bean Validation is invoked and a validation error is displayed.

The second two pages (Dynamic Component, Dynamic Component (with Metawidget)) do not work as expected. They both use PreRenderViewEvent to create the inputText programmatically. The spec is unclear whether we're meant to explicitly add a javax.faces.Bean validator in this case? The way I read section 3.5.3, I don't think we do, but it doesn't work without it?",MYFACES-3299
"The h:outputText seems to incorectly render a <span> element, even though no id/style/styleClass attribute is specified (as specified in http://myfaces.apache.org/core21/myfaces-impl/tlddoc-facelets/h/outputText.html )

Example:
<h:outputText value=""abc"" escape=""false"" /> ---renders---> <span>abc</span>

In 2.1.1 it corectly rendered just abc.

Reason for the regression seems to be the optimization introduced in MYFACES-3237. I didn't go much into the details of the optimization mechanism, but seems that in HtmlTextRendererBase:renderOutput the ""span = true"" gets incorectly set when any attribute is encountered (and not only one of id/style/styleClass).

",MYFACES-3298
"<h:inputText style=""width:5em"" value=""#{foo.bar}"" />

works as expected in version 2.1.1,

I upgraded to version 2.1.2 and the style tag no longer shows up in the rendered html tag. Reverting back to version 2.1.1 resolves the problem.",MYFACES-3297
"It would be good, if all jsf-components allow the usage of custom attributes:
Example: <h:inputText id=""testcomponent"" value=""value""  myattribute=""test"" />

A common usecase for this issue is the usage of HTML5 data-* attributes ( http://dev.w3.org/html5/spec/elements.html#custom-data-attribute )

Currently all custom attributes are ignored and not rendered.",MYFACES-3296
"Checking other issues, if was notice that RendererUtils.renderChild() is almost equal to UIComponent.encodeAll(). 

Historically, RendererUtils.renderChild() is older than UIComponent.encodeAll(), but the later one is better because gives the chance to the component to override it.

It is known any override goes on encodeBegin(), encodeChildren() or encodeEnd(), but to honor JSF 2.0 spec, we should fix RendererUtils.renderChildren(), and use encodeAll() instead RendererUtils.renderChild().",MYFACES-3295
"Hi guys,

As per Martin's request on MYFACES-3293, and possibly related to MYFACES-3117, there appears to have been a regression in state saving between 2.0.7 -> 2.0.8. To reproduce:

1. Deploy the attached WAR
2. Click 'Add Personal Contact'
3. Click 'Save' (without entering any values, therefore getting a validation error)
4. Upon validation error, note CSS styles have disappeared from many parts of the XHTML! In particular around the table and buttons
5. Switch the 2.0.8 JARs for 2.0.7, and it works fine

My renderer uses facets to determine the CSS styles. This incorrect behaviour is new to 2.0.8.",MYFACES-3294
"Hi guys,

Thanks for all the work you do on MyFaces. It is such a robust JSF implementation.

There appears to have been a regression between 2.0.5 and 2.0.6/2.0.7? Specifically, RendererUtils.renderChild no longer does an 'upfront' check of whether a UIComponent is rendered or not. This logic appears flawed if the UIComponent does *not* render its own children (the default in Renderer.getRendersChildren)?

First, encodeBegin/encodeEnd for the UIComponent will skip (the default in UIComponentBase.encodeBegin). But encodeChildren for the UIComponent will not get called (because getRendersChildren is false), so the UIComponent has no opportunity to prevent rendering of its children. Instead RendererUtils will invoke encodeBegin/encodeEnd on each child directly. So if a rendered component is nested inside a non-rendered component, it will still appear.

Surely there is an implication that even if I elect not to render my own children (i.e. I let JSF handle it), they should not get rendered if I myself am not rendered?

I enclose a small project that demonstrates the issue. Hopefully it is sufficient to debug. If not I can try and untangle it from Metawidget.",MYFACES-3293
"The problem so far is that we cannot generate documentation from our javascripts. The jsdoc plugin will resolve this.
",MYFACES-3292
,MYFACES-3291
We should provide an archetype for generating integration-test modules. This will make creating an integration-test a lot easier!,MYFACES-3290
"This is one of the ""most wanted"" hacks to do. Long time ago I tried it without success, but now I finally founded and alternative. Following the same principle of MYFACES-3287, we can use a ""find component expression"" to locate the composite component later and setup the environment correctly. As with MYFACES-3287 if the component is inside a datatable, the code on the listener will only execute once, and not per row, which is something expected and the affected properties on the component has the same limitations. 

The other part of the hack include use a listener to PostAddToViewEvent to subscribe the listener after the tree is built, so we can calculate the ""find component expression"" correctly.",MYFACES-3289
UIComponent.encodeAll isRendered should be evaluated inside pushComponentToEL block,MYFACES-3288
"Look this example:

<composite:interface>
    <composite:attribute name=""style""/>
</composite:interface>
<composite:implementation>
<h:outputStylesheet rendered=""#{!empty cc.attrs.style}""><![CDATA[
.myCustomStyle { #{cc.attrs.style} }
]]></h:outputStylesheet>
</composite:implementation>

h:outputStylesheet definitions are always relocated to <head>, so this fragment of code just does not work, but it is valid. 

After doing a lot of tests I realize that we can create a ""find component expression"" and save it on h:outputStylesheet as an attribute, and use it later to locate the right instance in the component tree.

If the component is inside a datatable, it will get the component state without row, which has the effect to makes the related properties not changeable inside a datatable. It has sense after all because this use case of h:outputStylesheet is to add an style declaration per component added to a page, and not to render inline row (for that use <style> instead, right?).

",MYFACES-3287
"When an error is handled by myfaces exception handler implementation, it is a good practice to set response status codes. This is not necessary for ajax responses but for normal requests. The visible effect is with firebug you see the red link.

Additionally, there is a missing line, to prevent set myfaces exception handler on production stages, unless it is declared on web.xml",MYFACES-3286
"cc:attribute targetAttributeName does not work well on nesting cases, because RetargetMethodExpressionRule should check it and if so, set it on attribute map.",MYFACES-3285
"JSF 2.0 facelets tlddoc says this about cc:insertFacet ""required"" attribute:

""... If true, and there is no such facet present on the top level component, a TagException must be thrown, containing the Location, the facet name, and a localized descriptive error message. ...""

There is a check on cc:renderFacet, but cc:insertFacet and cc:facet has this attribute too, and we need to implement this description.",MYFACES-3284
"If you reference a property of child component anywhere outside of the composite's context (i.e. in an action method, a component system event listener, etc.), the property will not be evaluated properly if the expression is a composite component attribute (i.e. ""#{cc.attrs.property}""). This is because the EL evaluation code can't find the parent composite component.

For example, consider the composite component:

<?xml version=""1.0""?>
<html xmlns=""http://www.w3.org/1999/xhtml""
	xmlns:h=""http://java.sun.com/jsf/html""
	xmlns:composite=""http://java.sun.com/jsf/composite"">

<composite:interface>
	<composite:attribute name=""label"" />
	<composite:attribute name=""value"" required=""true"" />
</composite:interface>

<composite:implementation>
	<h:outputLabel for=""input"" value=""#{cc.attrs.label}"" />
	<h:inputText id=""input"" value=""#{cc.attrs.value}"" />
</composite:implementation>
</html>

The calling page:

<!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Transitional//EN"" ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"">
<html xmlns=""http://www.w3.org/1999/xhtml""
	xmlns:ui=""http://java.sun.com/jsf/facelets""
	xmlns:h=""http://java.sun.com/jsf/html""
	xmlns:f=""http://java.sun.com/jsf/core""
	xmlns:ez=""http://java.sun.com/jsf/composite/demo"">

<h:head></h:head>
<h:body>
	<h:form id=""form"">
		<h:messages />
		<ez:input id=""composite"" label=""Enter something:""
			value=""#{testBean.value}"" />
		<h:commandButton value=""Submit"" action=""#{testBean.testCcAttribute}"" />
	</h:form>
</h:body>
</html>

Here's testBean.testCcAttribute():

	public String testCcAttribute() {
		HtmlInputText input = (HtmlInputText)FacesContext.getCurrentInstance().getViewRoot().findComponent(""form:composite:input"");
		UIComponent composite = FacesContext.getCurrentInstance().getViewRoot().findComponent(""form:composite"");
		String message = ""Input control label attribute is: "" + input.getLabel() + ""; Composite label attribute is: "" + composite.getAttributes().get(""label"");
		display(message);
		return null;
	}

This action method generates the following message:

Input control label attribute is: null; Composite label attribute is: Enter something:


---

Full example WAR attached.

Note this is the same as the following issue with Mojarra: http://java.net/jira/browse/JAVASERVERFACES-2009.
",MYFACES-3283
"Unpack goal needs to be updated to use maven-dependency-plugin 2.3, to make it work well when site is generated on maven 3",MYFACES-3282
"The description of cc:actionSource ""targets"" says this:

""... If present, this must be a space (not tab) separated list of client ids (relative to the top level component) of components within the <composite:implementation> section. ...""

The current implementation uses findComponent over the top level component. The effect is components inside the composite component but outside cc:implementation can be affected by ""targets"" definitions.

Usually this does not happens, because different ids are used. Anyway, the spec is clear in this point.",MYFACES-3281
facelets.VIEWMAPPINGS should be renamed as facelets.VIEW_MAPPINGS,MYFACES-3280
"composite component default values for method expressions cannot be evaluated on attribute map, because this case is handled on retargetMethodExpressions, so in this case a ValueExpression is expected.",MYFACES-3279
"The spec has a problem when it try to derive which resource should be resolved according to a locale. 

All start on JSF 2.0 section 2.6.1.4. There is some pseudo code that says this:

function getLocalePrefix() {
    var localePrefix;
    var appBundleName = facesContext.application.messageBundle;
    if (null != appBundleName) {

        var locale = facesContext.application.viewHandler.calculateLocale();

        ResourceBundle appBundle = ResourceBundle.getBundle(
            appBundleName, locale);
        localePrefix = appBundle.getString(ResourceHandler.
            LOCALE_PREFIX);
    }
    // Any MissingResourceException instances that are encountered
    // in the above code must be swallowed by this method, and null
    // returned;
    return localePrefix;
}

The problem start when to calculate the locale using facesContext.application.viewHandler.calculateLocale(). The description on the javadoc about this method says this:

""... Returns an appropriate Locale to use for this and subsequent requests for the current client....""

Ok. Now look spec section 7.5.1. :

    public Locale calculateLocale(FacesContext context);
    public String calculateRenderKitId(FacesContext context);

""... These methods are called from createView() to allow the new view to determine the Locale to be used for all subsequent requests, and to find out which renderKitId should be used for rendering the view. ...""

On ""view"" requests, when ViewHandler.createView() is called, calculateLocale() is called too and the locale is assigned to the viewRoot through UIViewRoot.setLocale(). Later, facelets ViewHandler or jsf ViewTag can override this value using an static string or a ValueExpression.

But, if the current request is a ""resource"" request, no viewRoot will be found, so calculateLocale() should be done. In this case the locale should be extracted in some way from the request path.

Doing some tests it seems Mojarra guys thought the same too, because they append a &loc=... for each resource, but that param is broken, because it is ignored when it is loaded. Anyway, it seems to be the way to go. Other minor changes will be committed too.",MYFACES-3278
"There are two lines missing when @NamedEvent is parsed, to read the name and the class.",MYFACES-3277
"Doing some tests about xml support in JSF 2.1, I notice that xmlns property of h:head and h:body is not rendered, because facelets compiler set on attribute map as if the property key is """".

The solution is just add a check for TagAttributeImpl, so if an empty attribute is sent, use qName instead.",MYFACES-3276
"It was created the component, the renderer and to some tests against the renderer, but without an entry in HtmlLibrary, the component just does not work.",MYFACES-3275
"ELContext should not be cached; if the first ELContext to access cc.attrs happens to be a third-party component such as ExtVal, this ELContext will continue to be used for this component, wrongly.",MYFACES-3274
Create a better site layout for myfaces project,MYFACES-3273
"We've documented some of the analysis in our own tracking system: http://jira.icefaces.org/browse/ICE-6622

The issue is that, with both the h:message and h:messages tags, the rendered output is empty if an ""id"" attribute is not provided. When an Ajax request triggers a message, the resulting update needs to look for a parent element - like the form or even the entire body depending on where the h:message(s) tag is located.  This can make the updates much larger than they need to be.

By adding an ""id"" attribute, the renderer will ouput a containing element, regardless of whether are messages or not:

h:message will render a <span id=... /> 
h:messages will render a <div id=... /> 

In the case of h:message, an update that actually contains the span will be replaced by a span - which is basically the behaviour we want.  But with h:messages, the div is replaced by ul which is less desirable as the actual element type is changing.

What we'd like to see is that the renderers provide consistent output at all times, whether there is a message or not.  So that a span or div with a id (generated if necessary) is always present and this consistent parent element would allow updates to be smaller and more efficient.

Note:  The same problem exists with Mojarra and we submitted an issue awhile ago but it's still pending: http://java.net/jira/browse/JAVASERVERFACES_SPEC_PUBLIC-931",MYFACES-3272
"When ui:include uses a bean value binding for its ""src"" attribute the binding is evaluated during restore view phase. In case binding's value is modified by a postback its value is not reflected when the page is rendered because the binding was already evaluated.

Original issue: http://jira.icefaces.org/browse/ICE-7017",MYFACES-3271
"The current implementation of DataModel.iterator assume getRowCount will return a valid value, but the implementation of ResultSetDataModel returns -1 because the number or rows is unknown in this case, and that's valid.

Instead, isRowAvailable() and setRowIndex() should be used to iterate over the data.",MYFACES-3270
"UIViewRoot.getLocale only convert some common locales passed as string. It does not check for variant inside the locale. By the spec, it is valid to pass a string value or ValueExpression pointing to a string value.

I think it is better to copy LocaleUtils class from commons lang and use it.",MYFACES-3269
"Suppose the following tree

x
|-x

and the following search expression:

x:x

The current algorithm has at the end this line:

return findBase.findComponent(expr.substring(separator + 1));

The effect of this call is the component is not found, because the first x is swallowed, but the recursive call over the same component return the parent again, so the expected component is not returned, instead the parent.

It is rare to use this kind of code, but with composite components, there are NamingContainer instances everywhere, which makes this issue more probable.

",MYFACES-3268
"Since JSF 2.0, the javadoc of UIComponentBase.saveAttachedState says this:

""... This method supports saving attached objects of the following type: Objects, null values, and Collections of these objects. If any contained objects are not Collections and do not implement StateHolder, they must have zero-argument public constructors. The exact structure of the returned object is undefined and opaque, but will be serializable. ...""

In JSF 1.2 Lists instead Collections are handled. It is a small change, because usually StateHolder is implemented to deal with special cases.

",MYFACES-3267
"<BLOCKED>java.util.logging.Logger.getLogger(String)
   javax.faces.component.UIViewRoot.<init>()

problem is that has non-static logger  and logger is requested in every view init. For a class (static) method, the monitor associated with the Class object for the method's class is used. 

Check myfaces code base for this usage.
",MYFACES-3266
"Allow ConcurrentHashMap in ResourceHandlerCache.

For project where amount of resources is know and concurrency is top priority it better to use ConcurrentHashMap  as cache. 
Pros: higher level of concurrency
Const: cache has no limit (it will cache all resources because LRU is not easily doable in this case)",MYFACES-3265
"introduce parameter o.a.m.CONCURRENCY_LEVEL = ""The estimated number of concurrently running threads. The implementation of Myfaces performs internal sizing and optimizations to try to accommodate this many threads."" ( description taken from ConcurrentHashMap API)",MYFACES-3264
"1) <BLOCKED> java.util.Collections$SynchronizedMap.containsKey(Object)	
   java.lang.reflect.Proxy.isProxyClass(Class)
      sun.reflect.annotation.AnnotationInvocationHandler.asOneOfUs(Object)
         sun.reflect.annotation.AnnotationInvocationHandler.equalsImpl(Object)
            sun.reflect.annotation.AnnotationInvocationHandler.invoke(Object, Method, Object[])
               $Proxy272.equals(Object)
                  java.util.HashMap.getEntry(Object)
                     java.util.HashMap.containsKey(Object)
                                o.a.m.context.RequestViewContext.isResourceDependencyAlreadyProcessed(ResourceDependency)	


2) <BLOCKED>  java.lang.Class.initAnnotationsIfNecessary()
   java.lang.Class.getAnnotation(Class)
      org.apache.myfaces.application.ApplicationImpl._handleAttachedResourceDependencyAnnotations(FacesContext, Object)	

ad 1) consider IdentityHashMap - (how is specified equals() for annotation ?)

ad2) ApplicationImpl has _classToResourceDependencyMap already - use it?",MYFACES-3263
"Results from  concurrency tests: 

<BLOCKED> java.beans.PropertyDescriptor.getReadMethod()
   javax.faces.component._ComponentAttributesMap.getComponentProperty(PropertyDescriptor)
      javax.faces.component._ComponentAttributesMap.get(Object)


<BLOCKED> java.beans.PropertyDescriptor.getWriteMethod()
   javax.faces.component._ComponentAttributesMap.setComponentProperty(PropertyDescriptor, Object)
      javax.faces.component._ComponentAttributesMap.put(String, Object)


see http://www.mail-archive.com/dev@myfaces.apache.org/msg54272.html for details


",MYFACES-3262
"Our code which handles the global eval for browsers which implement execScript is never called. This is not a big issue because the code is never called anyway, because the browsers who apparently have this functionality have auto eval anyway, nevertheless this needs to be fixed.
",MYFACES-3261
"The base implementations of DataModel does not trigger a DataModelEvent when setWrappedData is called, changing the instance. 

It also should take care of the order of the instructions. If data is null it should call setRowIndex(-1) first and then _data = null. 

Note this operation is very rare, but still valid.",MYFACES-3260
demo forthcoming; it would seem the FaceletCompositionContext would need to keep track of the delegate as well as the id of enclosing validators in order to be able to apply the xml attributes.,MYFACES-3259
"If #{} (without a component tag) throws a exception (mainly in render response), it is practically impossible for user to find out which element was the source.

Suggestions:
* use Location and TagAttributeAware EL context wrappers from  MYFACES-3202 in ELText
* put UIComponent.VIEW_LOCATION_KEY into UILeaf during VDL.buildView
* improve toString for UIInstructions (output sometimes spans over three or more lines)
",MYFACES-3258
"See:

http://java.net/jira/browse/JAVASERVERFACES_SPEC_PUBLIC-1028

for details.",MYFACES-3257
"I encountered the ClassCastException due to Integer vs. String on h:input @maxlength, which is defined at http://download.oracle.com/docs/cd/E17802_01/j2ee/javaee/javaserverfaces/2.0/docs/pdldocs/facelets/h/inputText.html as (must evaluate to int).  I would presume the same for @size (int) and @readonly (boolean).  Perhaps naively, it would seem that simply removing the String cast and using Object in CommonPropertyUtils#renderHtmlStringAttribute() (potentially renaming this method in the process) would solve the issue.",MYFACES-3256
"Checking some javadoc for JSF 2.2 ""viewAction"", I notice our implementation of UICommand.queueEvent does not match with the documentation since JSF 2.0.

Before:

public void queueEvent(FacesEvent e)

    Intercept queueEvent and, for ActionEvents, mark the phaseId for the event to be PhaseId.APPLY_REQUEST_VALUES if the immediate flag is true, PhaseId.INVOKE_APPLICATION otherwise.

After:

public void queueEvent(FacesEvent e)

    Intercept queueEvent and take the following action. If the event is an ActionEvent, obtain the UIComponent instance from the event. If the component is an ActionSource obtain the value of its ""immediate"" property. If it is true, mark the phaseId for the event to be PhaseId.APPLY_REQUEST_VALUES otherwise, mark the phaseId to be PhaseId.INVOKE_APPLICATION. The event must be passed on to super.queueEvent() before returning from this method.


Tracking this one I found this issue:

http://java.net/jira/browse/JAVASERVERFACES-622

Since it was added after 1.2 rev A and before 2.0, myfaces code still does what the spec says since 1.2. Anyway,  we should change MyFaces code to follow the javadoc description.",MYFACES-3255
"The code in UIComponent.popComponentFromEL does not check cases where some bad written code tries to pop a component, or just there is a missing pop.

In theory good code has push/pop in pairs, but sometimes this is not good enough and our code does not check if the component can be pop out. It could be good if we can check this condition and deal with it.",MYFACES-3254
"While trying to build the current21 trunk I get the following exception:

[INFO] ------------------------------------------------------------------------
[ERROR] BUILD ERROR
[INFO] ------------------------------------------------------------------------
[INFO] Failed to resolve dependencies for one or more projects in the reactor. R
eason: Missing:
----------
1) org.apache.myfaces.core:myfaces-api:jar:2.1.0-SNAPSHOT

  Try downloading the file manually from the project website.

  Then, install it using the command:
      mvn install:install-file -DgroupId=org.apache.myfaces.core -DartifactId=my
faces-api -Dversion=2.1.0-SNAPSHOT -Dpackaging=jar -Dfile=/path/to/file

  Alternatively, if you host your own repository you can deploy the file there:

      mvn deploy:deploy-file -DgroupId=org.apache.myfaces.core -DartifactId=myfa
ces-api -Dversion=2.1.0-SNAPSHOT -Dpackaging=jar -Dfile=/path/to/file -Durl=[url
] -DrepositoryId=[id]

  Path to dependency:
        1) org.apache.myfaces.shared:myfaces-shared-project:pom:4.1.1-SNAPSHOT
        2) org.apache.myfaces.core:myfaces-api:jar:2.1.0-SNAPSHOT

----------
1 required artifact is missing.

for artifact:
  org.apache.myfaces.shared:myfaces-shared-project:pom:4.1.1-SNAPSHOT

from the specified remote repositories:
  apache.snapshots (http://repository.apache.org/snapshots),
  central (http://repo1.maven.org/maven2),
  apache-maven-snapshots (http://people.apache.org/repo/m2-snapshot-repository)",MYFACES-3253
"
Implement support for ResourceBundle.Control object (new in java 6). Allows users to provide own Control (new web.xml param?). Useful for example for UTF-8 based properties or for custom language resolving.

http://download.oracle.com/javase/tutorial/i18n/resbundle/control.html



",MYFACES-3252
for this reason e.g. a cc cannot propagate an action attribute to an inner h:commandButton.,MYFACES-3251
"When running stress test this is one of the most BLOCKED thread (blocked on some ArrayList monitor in tomcat internals):
org.apache.catalina.core.ContainerBase.fireContainerEvent(String, Object)
   org.apache.catalina.session.StandardSession.fireContainerEvent(Context, String, Object)
      org.apache.catalina.session.StandardSession.setAttribute(String, Object, boolean)
         org.apache.catalina.session.StandardSession.setAttribute(String, Object)
            org.apache.catalina.session.StandardSessionFacade.setAttribute(String, Object)	
               org.apache.myfaces.context.servlet.SessionMap.setAttribute(String, Object)
                  org.apache.myfaces.util.AbstractThreadSafeAttributeMap.put(String, Object)
                     org.apache.myfaces.util.AbstractThreadSafeAttributeMap.put(Object, Object)

This happens when someone puts a attribute into httpSession:
org.apache.myfaces.util.AbstractThreadSafeAttributeMap.put(Object, Object)
  org.apache.myfaces.renderkit.ServerSideStateCacheImpl.nextViewSequence(FacesContext)
  org.apache.myfaces.view.facelets.FaceletViewDeclarationLanguage.getResponseEncoding(FacesContext, String)	
  org.apache.myfaces.renderkit.ServerSideStateCacheImpl.saveSerializedViewInServletSession(FacesContext, 

then Servlet container delivers event HttpSessionBindingEvent.

in myfaces HttpSessionAttributeListener in implemented by oam.StartupServletContextListener and handles some stuff for managed beans. 
Review if this is needed - ideally remove it.
",MYFACES-3250
"This issue was open long time ago as:

http://java.net/jira/browse/JAVASERVERFACES_SPEC_PUBLIC-537

but on the way we forgot it. There is no changes on the spec, but section 3.2.7.3 says this:

""... The PreValidateEvent is published immediately before the component gets validated. PostValidate is published after validation has occurred, regardless if the validation was successful or not. If the validation for the component did pass successfully, and the previous value of this component differs from the current value, the ValueChangeEvent is published. ...""

The problem we had was the code implemented did not match the spec, but finally it was corrected. Here is the mail notifying the change:

[jsr-314-open] [537-PrePostValidate] RESOLVED (was: Re: [2.1 Spec Review] Pre/PostValidateEvent publishing conditions)

DG> The only reason I can think of is that UIData is also (potentially,
DG> anyway) a container of inputs. But so are panels, and they,
DG> evidently, are excluded.  Why?

EB> No, it does not mean that *only* those components will deliver those
EB> events.  It means that in the case of components who are iterating
EB> components, the event must be published before, or after, the child
EB> component processing.  This is true for any components that have
EB> children.  I will revise the documentation to be as follows.
EB>
EB> PostValidateEvent
EB>
EB> Components with children must publish this event after processing their
EB> child nodes in processValidators.  This is especially important for
EB> iterating components such as UIData and form components, such as UIForm.
EB>
EB> PreValidateEvent
EB>
EB> Components with children must publish this before after processing their
EB> child nodes in processValidators.  This is especially important for
EB> iterating components such as UIData and form components, such as UIForm.

Anyway we have to notify the EG about the javadoc does not include this detail and fix it into our codebase.",MYFACES-3249
"The javadoc of UIComponent.getFacets() says this:

""... Return a mutable Map representing the facet UIComponents associated with this UIComponent, keyed by facet name (which must be a String). The returned implementation must support all of the standard and optional Map methods, plus support the following additional requirements: 

- The Map implementation must implement the java.io.Serializable interface.
- Any attempt to add a null key or value must throw a NullPointerException.
- Any attempt to add a key that is not a String must throw a ClassCastException.
- Any attempt to add a value that is not a UIComponent must throw a ClassCastException.
- Whenever a new facet UIComponent is added:
      - The parent property of the component must be set to this component instance.
      -  If the parent property of the component was already non-null, the component must first be removed from its previous parent (where it may have been either a child or a facet).
- Whenever an existing facet UIComponent is removed:
      - The parent property of the facet must be set to null.
....""

The current implementation is not strict about ""... the returned implementation must support all of the standard and optional Map methods ..."". There are ways to modify facet map indirectly, using iterator.remove(), or entry.setValue() or removing some key, value from entrySet(), keySet() or values() collection.

These methods are not very common, so in normal use cases there is no problem at all, but at the end this should be done to prevent bug reports like MYFACES-3227, MYFACES-3175 or MYFACES-2407.",MYFACES-3248
"Move shared core module to myfaces core directory and rename package from shared-impl to shared, as discussed on dev list.",MYFACES-3247
"java.lang.IndexOutOfBoundsException: Index: 2, Size: 2
	at java.util.ArrayList.RangeCheck(ArrayList.java:547)
	at java.util.ArrayList.get(ArrayList.java:322)
	at org.apache.myfaces.view.facelets.impl.DefaultFaceletContext.getTemplateContext(DefaultFaceletContext.java:632)
	at org.apache.myfaces.view.facelets.impl.DefaultFaceletContext.isAllowCacheELExpressions(DefaultFaceletContext.java:831)
	at org.apache.myfaces.view.facelets.tag.TagAttributeImpl.getValueExpression(TagAttributeImpl.java:426)
	at org.apache.myfaces.view.facelets.tag.jsf.core.AjaxHandler.applyAttachedObject(AjaxHandler.java:391)
	at org.apache.myfaces.view.facelets.tag.jsf.core.AjaxHandler.apply(AjaxHandler.java:218)",MYFACES-3246
"A testcase to reproduce this issue is attached.

Steps to reproduce this issue: 

1. http://localhost:8080/jsftest/testselect.jsf

The choice ""Select..."" should not be rendered, but it is rendered when the page is initially rendered.
After selection of ""Item A"" or ""Item B"" and form submit it disappears
If you then clear the selection (action: this.selectedItems = new ArrayList<String>();) and page is rerendered, the choice ""Select..."" is there again. ",MYFACES-3245
"I have switched from 2.0.6 to 2.0.7 and I get the following exception when I clicked action button,

Jul 27, 2011 12:30:10 PM org.apache.catalina.core.StandardWrapperValve invoke
java.lang.IllegalArgumentException: ContentTypeList does not contain a supported content type: text/css
	at org.apache.myfaces.shared_impl.renderkit.html.HtmlRendererUtils.selectContentType(HtmlRendererUtils.java:1928)
	at org.apache.myfaces.renderkit.html.HtmlRenderKitImpl.createResponseWriter(HtmlRenderKitImpl.java:223)
	at org.ajax4jsf.resource.TemplateCSSRenderer.send(TemplateCSSRenderer.java:85)
	at org.ajax4jsf.resource.InternetResourceBase.send(InternetResourceBase.java:374)
	at org.ajax4jsf.resource.ResourceLifecycle.sendResource(ResourceLifecycle.java:221)
	at org.ajax4jsf.resource.ResourceLifecycle.send(ResourceLifecycle.java:148)
	at org.ajax4jsf.resource.InternetResourceService.load(InternetResourceService.java:335)
	at org.ajax4jsf.cache.LRUMapCache.load(LRUMapCache.java:116)
	at org.ajax4jsf.cache.LRUMapCache.get(LRUMapCache.java:87)
	at org.ajax4jsf.resource.InternetResourceService.serviceResource(InternetResourceService.java:195)
	at org.ajax4jsf.resource.InternetResourceService.serviceResource(InternetResourceService.java:141)
	at org.ajax4jsf.webapp.BaseFilter.doFilter(BaseFilter.java:508)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:224)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:175)
	at siwpas.mechsoft.com.tr.integration.EJBSecurityValve.invoke(EJBSecurityValve.java:75)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:462)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:164)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:100)
	at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:851)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:118)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:405)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:278)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:515)
	at org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:300)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:662)

This problem has not seen in MyFaces 2.0.6",MYFACES-3244
HtmlImageRendererBase outputs warning if url or alt is missing but message is not sufficient to locate source component,MYFACES-3243
"Examples from myfaces:

if(projectStage.equals(ProjectStage.Development) || projectStage.equals(ProjectStage.UnitTest))
 log.warning(""ALT attribute is missing for : "" + uiComponent.getId());

if (log.isLoggable(Level.WARNING)) log.warning(""Graphic with id "" + uiComponent.getClientId(facesContext) + "" has no value (url or name)."");


Level level = Level.FINE;
if (!_facesContext.isProjectStage(ProjectStage.Production)) {
                        level = Level.WARNING;
}
if (log.isLoggable(level))
{ ...}


if (facesContext.isProjectStage(ProjectStage.Development))
 {

Clarify:
* facesContext.isProjectStage(ProjectStage.Development) vs !_facesContext.isProjectStage(ProjectStage.Production) - how to understand UnitTest and SystemTest stages when logging
* which logs are conditioned with project stage
* if log something with level FINE in production (performance)
",MYFACES-3242
"RendererUtils.getPathToComponent - output Location in view

In development project stage in facelets Location stored in component attributes map under key ""javax.faces.component.VIEW_LOCATION_KEY""",MYFACES-3241
"javax.faces.component.UIInput.getConvertedValue converts empty String to null even when javax.faces.INTERPRET_EMPTY_STRING_SUBMITTED_VALUES_AS_NULL is set as false.

When I dug deeper I narrowed down the issue to the method org.apache.myfaces.shared_impl.renderkit.RendererUtils.getConvertedUISelectOneValue where if the submitted value is an empty string the submittedvalue is set to null. I also understand that this logic was put in place to solve the issue no. 1759 for version 1.2.2 but in JSF 2.0 the empty string to null conversion is handled globally using context parameter javax.faces.INTERPRET_EMPTY_STRING_SUBMITTED_VALUES_AS_NULL.  ",MYFACES-3240
"When nested inside h:dataTable or h:panelGroup, ui:fragment is always rendered even if rendered=""false""

In the following example, 'This text should not appear' appears in the output.  And it shouldn't.

<h:dataTable id=""dtTable"" value=""#{myBean.someList}"" var=""row"">
<h:column>
	<ui:fragment rendered=""false"">
		<h:outputText value=""This text should not appear""/>
	</ui:fragment>
</h:column>
</h:dataTable>

This example with h:panelGroup is similar
<h:panelGroup id=""somePanel"">
	<ui:fragment rendered=""false"">
		<h:outputText value=""This text should not appear either""/>
	</ui:fragment>
</h:panelGroup>
",MYFACES-3239
"This method is called every time a h:outputText is rendered. The problem is each time it calls ClassUtils.simpleClassForName, which is an expensive call. For Application.createConverter(final String converterId) we use a _converterIdToClassMap that reduce the cost involved but we don't have something similar on Application.createConverter(Class<?> forClass).",MYFACES-3238
"Doing some performance tests with Gerhard, we notice renderers like the one used for h:outputText does a lot of calls to getAttributes().get().

The problem is most of this calls just return null, wasting time and resources. For example, usually h:outputText uses value, style and styleClass. Think about the most basic use case where you need to show some data with just h:dataTable and h:outputText. Per each h:outputText, 6 calls to getAttributes().get() for passthrough attributes, most of them completely unnecessary. The same is true for other components.

We can reduce the number of calls if we have something that keep track of the properties already set. Obviously this will be a myfaces internal, but I think it is worth to do it at least for the most used components like h:outputText, h:outputLabel, h:outputFormat, h:outputScript and h:outputStylesheet. Note do this can make renderers harder to maintain, because some extra code should be added.

We already have some interfaces in javax.faces.component.html package like

    _StyleProperties
    _UniversalProperties
    _TitleProperty
    _EscapeProperty
    _DisabledClassEnabledClassProperties
    _DisabledReadonlyProperties
    _AccesskeyProperty
    _AltProperty
    _ChangeSelectProperties
    _EventProperties
    _FocusBlurProperties
    _LabelProperty
    _LinkProperties
    _MessageProperties
    _TabindexProperty

The idea could be focus only on these set of properties, and let the others as is.

Long time ago, when I reviewed trinidad code for implement MyFaces Core Partial State Saving, I notice the class org.apache.myfaces.trinidad.bean.PropertyKey has an algorithm that assign a number to each property. Maybe we can assign a number to each property and store a flag on attribute map when it is set, and then retrieve this value from the renderer and only check the ones that needs to be rendered.
",MYFACES-3237
"Some days ago there was a discussion on dev list titled:

[core] performance: performance hints

With the following intention (proposed by Martin Koci):

    MK>> is it possible to introduce performance hints in myfaces-core? Hints
    MK>> similar to javax.faces.component.visit.VisitHint but related to
    MK>> performance improvements. Example:
    
    MK>> For dataTable like:
    MK>> <a:dataTable
    MK>> <a:column>
    MK>>     #{aExpression}
    
    MK>> it's completely unnecessary to save per-row state. Currently there is no
    MK>> elegant way how to do read-only table (state per-row is always
    MK>> maintained). If user wants (fast) readOnly table, he/she must extend
    MK>> UIData and re-implemenent setRowIndex method. But hint say
    MK>> ""org.apache.myfaces.core.UIData.saveRowState""=false can solve it
    MK>> elegantly - if present (in component.getAttributes()) UIData skips
    MK>> row-state-saving and restoring methods entirely.
    
    MK>> Lifespan of those hints can be request (faceContext.attributes) or view
    MK>> (component.attributes)
    
The discussion there was to create or not a hint but a review of the default algorithm was never done. In theory, UIData.setRowIndex do the following tasks:

1. If the component is in row -1 (no row), take a ""snapshot"" of the components that implements EditableValueHolder, to restore them later when rows are traversed.
2. If the component is in a row, save the current state of EditableValueHolder components.
3. Move to the selected row.
4. If no state saved found, restore EditableValueHolder components from saved initial state.
5. If state saved found, restore EditableValueHolder components from stored saved state.  

After an in-deep analysis, the conclusion was it is not really necessary to create the hint. Instead, we can create a better algorithm that take advantage of 
the fact that add a non transient EditableValueHolder component inside a dataTable row on render response time leads to a illegal state.

Since UIData.setRowIndex is a code that is called multiple times, specially for large datatable sets. Doing some performance tests, it was notice the current 
algorithm uses a lot of memory resources. The proposal is do the following:

1. Iterate using index instead iterator for children. This can duplicate the lines of code 
2. Do not create Object[]{null,null} instances, use a private static final variable.
3. Cache DataListener[].
4. If no EditableValueHolder instances found, skip state saving code, but reset all ids.
5. Prevent unnecessary calls to getContainerClientId().
6. Provide initial size for created ArrayList instances to reduce memory usage.
7. Iterate over row state using index, instead iterator, and take advantage instances are ArrayList.
8. Do not instantiate ArrayList, unless it is necessary.
 
Tests done shows a really big improvement, specially when non EditableValueHolder component instances are inside the datatable, which is a very common use case.

Based on this patch we can do other things like:

1. Port this code to UIRepeat.
2. Port this code to Tomahawk.
3. Reuse already created state instances, which can improve performance on postback requests.",MYFACES-3236
"Create classes like MyfacesLogger, MyfacesLogRecord etc. like Trinidad has.",MYFACES-3235
"example: 

CodiFacesContextWrapper extends FacesContextWrapper

org.apache.myfaces.context.servlet.FacesContextImpl.getPartialViewContext():
_partialViewContext = factory.getPartialViewContext(this)


-> partial view context is created always with FacesContextImpl instance not with the wrapped one",MYFACES-3234
"myfaces don't support ValueExpression in f:ajax event=#{bean.method}, although it is specified in Facelets tag documentation",MYFACES-3233
"Review ResourceBundleResolver and ApplicationImpl.getResourceBundle for performance in production project stage
",MYFACES-3232
"always provide (if available)
1) component + path to component
2) facelets location

example:
18.7.2011 20:06:08 org.apache.myfaces.shared_impl.renderkit.html.HtmlImageRendererBase encodeEnd
WARNING: ALT attribute is missing for : j_id881263656_6689cfc4

change to

18.7.2011 20:06:08 org.apache.myfaces.shared_impl.renderkit.html.HtmlImageRendererBase encodeEnd
WARNING: ALT attribute is missing for : ... info about component ... path to component: .... facelets tag location
",MYFACES-3231
"Improved error page (MYFACES-3207, MYFACES-3213) outputs info about components, facelets tags etc.

Output same in console. That has advantages:
1) user can copy info into clipboard
2) IDE support one click navigation to source file (check this for facelets)
",MYFACES-3230
"ServletExternalContextImpl.encodeRedirectURL() doesn't work correctly if the base URL already contains encoded query parameters. In this case the resulting URL contains the query parameter encoded twice, which completely breaks them.

Take a look at this example:

   externalContext.encodeRedirectURL(""/test?p1=a+b"", null);

   Result ---->    /test?p1=a%2Bb

Another example are encoded ampersand:

   externalContext.encodeRedirectURL(""/test?p1=a%26b"", null);

   Result ---->     /test?p1=a%2526b

The root cause of the problem seems to be that ServletExternalContextImpl.encodeURL() doesn't decode the query parameters while parsing the base URL.
",MYFACES-3229
"hi.
at first, i'm not native english speaker
and this subject which i will explain is something complex.
so forgive me please even though cant easily understand this.

this is something uncommon case. let's see follow code.



javax.faces.PARTIAL_STATE_SAVING=true
javax.faces.STATE_SAVING_METHOD=client

===
package com.mycompany.mavenproject31;

import java.io.IOException;
import javax.faces.component.ActionSource2;
import javax.faces.component.PartialStateHolder;
import javax.faces.component.UIComponent;
import javax.faces.context.FacesContext;
import javax.faces.event.AbortProcessingException;
import javax.faces.event.ActionEvent;
import javax.faces.event.ActionListener;
import javax.faces.view.facelets.ComponentHandler;
import javax.faces.view.facelets.FaceletContext;
import javax.faces.view.facelets.TagConfig;
import javax.faces.view.facelets.TagHandler;

public class AnotherActionListenerTagHandler extends TagHandler {
	static public class AnotherActionListener implements ActionListener, PartialStateHolder {
		transient boolean isInitialState = false, isTransient = false;
		Integer state1 = null;

		public AnotherActionListener() {
			state1 = 100;
		}

		@Override
		public void processAction(ActionEvent actionEvent) throws AbortProcessingException {
			return;
		}

		@Override
		public void clearInitialState() {
			isInitialState = false;
		}
		@Override
		public boolean initialStateMarked() {
			return isInitialState;
		}
		@Override
		public void markInitialState() {
			isInitialState = true;
		}

		@Override
		public Object saveState(FacesContext context) {
			if(isInitialState==true || isTransient==true)
				return null;
			return state1;
		}
		@Override
		public void restoreState(FacesContext context, Object state) {
			state1 = (Integer) state;
		}

		@Override
		public boolean isTransient() {
			return isTransient;
		}
		@Override
		public void setTransient(boolean newTransientValue) {
			isTransient = newTransientValue;
		}

		public Integer getState1() {
			return state1;
		}
		public void setState1(Integer state1) {
			boolean nullFlag1 = this.state1 == null, nullFlag2 = state1 == null;
			if(nullFlag1==nullFlag2 && nullFlag1==true)
				return;
			if(nullFlag1!=nullFlag2)
				clearInitialState();
			else
				if(this.state1.equals(state1)==false)
					clearInitialState();
			this.state1 = state1;
		}

	}
	public AnotherActionListenerTagHandler(TagConfig tagConfig) {
		super(tagConfig);
	}

	@Override
	public void apply(FaceletContext ctx, UIComponent parent) throws IOException {
		if(ComponentHandler.isNew(parent)==false)
			return;
		ActionSource2 actionSource2 = (ActionSource2) parent;
		actionSource2.addActionListener(new AnotherActionListener());
	}
}

<tag>
	<tag-name>anotherActionListener</tag-name>
	<handler-class>com.mycompany.mavenproject31.AnotherActionListenerTagHandler</handler-class>
</tag>

===

and follow is test code(not unit test!).
===

<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Transitional//EN"" ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"">
<html xmlns=""http://www.w3.org/1999/xhtml""
      xmlns:h=""http://java.sun.com/jsf/html""
	  xmlns:f=""http://java.sun.com/jsf/core""
	  xmlns:sample2=""http://sample.sample2"">
    <h:head>
        <title>Facelet Title</title>
    </h:head>
    <h:body>
		<h:form>
			<h:commandButton value=""iii"" binding=""#{anotherManagedBean.iii}"">
				<sample2:anotherActionListener/>
				<sample2:anotherActionListener/>
			</h:commandButton>
			<h:commandButton value=""aaa"" actionListener=""#{anotherManagedBean.aaaActionListener}""/>
		</h:form>
    </h:body>
</html>



package com.mycompany.mavenproject31;

import java.io.Serializable;
import javax.faces.bean.ManagedBean;
import javax.faces.bean.ViewScoped;
import javax.faces.component.UICommand;
import javax.faces.event.ActionEvent;

@ManagedBean
@ViewScoped
public class AnotherManagedBean implements Serializable {
	transient UICommand iii;

	public void aaaActionListener(ActionEvent event) {
		AnotherActionListenerTagHandler.AnotherActionListener listener = (AnotherActionListenerTagHandler.AnotherActionListener) iii.getActionListeners()[0];
		listener.setTransient(true);
		listener = (AnotherActionListenerTagHandler.AnotherActionListener) iii.getActionListeners()[1];
		listener.setState1(101);
		return;
	}

	public UICommand getIii() {
		return iii;
	}
	public void setIii(UICommand iii) {
		this.iii = iii;
	}
}
===

and test as follow.

1.load index2.xhtml
2.push ""iii"" button and check AnotherActionListener.processAction method's twice call.
3.push ""aaa"" button.
4.push ""iii"" button again and check listener method's twice call. but method call count is just one.

i testet this with myfaces 2.1.1 and mojarra-2.1.1-b04.
in mojarra this is fine,
but in myfaces, something strange.

i found something strange point in source code, but i cant explain detailed.
so i just point source code line number.
that is _DeltaList.java's 231-234 line.
delete these lines and duplicated counter variable(local variable name is ""int j"").
i think that duplicated counter(""j"") is not necessary.

but in common case,
because we dont use listener or validator as stateful object which is often state changed,
instead at use listener or validator as stateful object which is almost not state changed.
this is not explicit big problem.
but i think that this is potentially problem.",MYFACES-3228
"hi
at first, i'm not native english speaker.

let's see follow MyFaces's _DeltaList's code.
...
===
    public boolean retainAll(Collection<?> c)
    {
        return _delegate.retainAll(c);
    }
===

follow is java.util.List's retainAll method javadoc.
===
    /**
     * Retains only the elements in this list that are contained in the
     * specified collection (optional operation).  In other words, removes
     * from this list all the elements that are not contained in the specified
     * collection.
     *
     * @param c collection containing elements to be retained in this list
     * @return <tt>true</tt> if this list changed as a result of the call
     * @throws UnsupportedOperationException if the <tt>retainAll</tt> operation
     *         is not supported by this list
     * @throws ClassCastException if the class of an element of this list
     *         is incompatible with the specified collection (optional)
     * @throws NullPointerException if this list contains a null element and the
     *         specified collection does not permit null elements (optional),
     *         or if the specified collection is null
     * @see #remove(Object)
     * @see #contains(Object)
     */
    boolean retainAll(Collection<?> c);
===

so
===
List<Integer> thisList = new ArrayList<Integer>();
thisList.add(1);
thisList.add(2);
thisList.add(3);
List<Integer> paramList = new ArrayList<Integer>();
paramList.add(2);
paramList.add(3);
paramList.add(4);
thisList.retainAll(paramList);
for(Integer i:thisList)
  System.out.println(i);
==
result is 2,3.


i think that _DeltaList.retainAll should have clearInitialState() method call as follow.
===
    public boolean retainAll(Collection<?> c)
    {
        boolean result = _delegate.retainAll(c);
        if (result==true)
            clearInitialState();
        return result;
    }
===
of course, i know that calling to this method is not so many frequency.",MYFACES-3227
"Facelets VDL.buildView (TagHadlers)  use FaceletExceotion or FacesException.

Unify this and use one context aware FaceletException type (XML Location, XML attribute name/value) . Improve ErrorPage (""This is exception from buildView. Please check line/column .... for ..."". 
",MYFACES-3226
"hi
at first, i'm not native english speaker.

let's see follow code.

===
javax.faces.PARTIAL_STATE_SAVING=true
javax.faces.STATE_SAVING_METHOD=client

<h:selectOneMenu ...>
	<f:ajax listener=""#{...}""/>
</h:selectOneMenu>
===

in this case, behavior map's saveState result is not null. because AjaxHandler.AjaxBehaviorListenerImpl didnt implement PartialStateHolder, instead at implemented StateHolder.

since making new listener instance at every view re-building can be expensive, so is this better good?
nor just mistake?

thanks for reading. have a nice day.",MYFACES-3225
"In development stage if exception occurs (in render response)

1) HTML request +  response not committed -> error page displayed
2) HTML request + response committed:  -> ""Response already committed "" error in console + error page rendered as part or original view
3) AJAX request + response not committed -> <error> in XML response, javascript alert displayed
4) AJAX request + response committed -> Response already committed "" error in console


Goal:

Provide same handling for all those cases. Ideally use same way as in 1) - error page. The 3) solution in development mode is useless - coder have to check XML response or/and console.",MYFACES-3224
"Caused by:
java.io.FileNotFoundException - /Test1.xhtml Not Found in ExternalContext as a Resource
at org.apache.myfaces.view.facelets.impl.DefaultFaceletFactory.resolveURL(DefaultFaceletFactory.java:243)

if user enters a nonexistent view (resource)

Use ViewNotFoundException as consistent indication of this situation.",MYFACES-3223
"The jsf 2.x jsdocs state that params is one option value allowed, which allows params to be added to be included in the request.
Currently we handle that by simply parsing additional options params. 
I have to crosscheck via a black box test if our behavior is also allowed or if we have to process the params explicitely as submap.
I assume params is a submap (the spec is not fully clear) but given that it is stated as allowed key it must be like that.
",MYFACES-3222
"This can be considered as continuation of MYFACES-3202. Implements requirement ""any time there is an error the user should see not just a cryptic stack  trace, but the EL expression that was being evaluated -   including the part of the EL expression that triggered the problem""

Example:
<f:actionListener type=""com.foo.Bazz"" /> is represented as org.apache.myfaces.view.facelets.tag.jsf.core.ValueChangeListenerHandler.LazyValueChangeListener instance. But if look in code, you see simple valueChangeListener.processValueChange(event); without try catch. If exception occurs, no facelets Location or  TagAttribute context is available and therefore exception handling mechanism is not able to output info about problematic XML tag.


Use types created as part of MYFACES-3202 (ContextAware, LocationAware .. ); create something like ExecuteTemplate and ExecuteCallback and perform all operation with proper context.",MYFACES-3221
"PhaseListenerManager currently creates a new PhaseEvent instance per phaseId, per listener, per before/after.  The supplied patch reduces this to per phaseId, per before/after, sharing instances of this immutable class among listeners.",MYFACES-3220
"Suppose this example:

<testComposite:compositeRefVE value=""success"">
</testComposite:compositeRefVE>

compositeRefVE.xhtml

<composite:interface>
    <composite:attribute name=""value""/>
</composite:interface>
<composite:implementation>
    <testComposite:compositeRefVE2>
       <p>Some text: <h:outputText value=""#{cc.attrs.value}""/> there.</p>
    </testComposite:compositeRefVE2>
</composite:implementation>

compositeRefVE2.xhtml

<composite:interface>
</composite:interface>
<composite:implementation>
    <composite:insertChildren/>    
</composite:implementation>

It works, everything is ok in this case. The final output is ""Some text: success there."". But now change compositeRefVE.xhtml to this:

<composite:interface>
    <composite:attribute name=""value""/>
</composite:interface>
<composite:implementation>
    <testComposite:compositeRefVE2>
       <p>Some text: #{cc.attrs.value} there.</p>
    </testComposite:compositeRefVE2>
</composite:implementation>

It should do the same, but it does not work, because #{cc.attrs.value} is resolved to null. Why? There are two reasons:

1. When the markup is executed, the current component on the stack is the inner one (compositeRefVE2), and it should be the outer one. This means the inner component must be pop and push. We didn't notice the effect in the other case, because Location object is used there to detect the current composite component.

2. If #{cc} is used, the expression should be wrapped using LocationValueExpression, like on TagAttributeImpl

Additionally, I saw we are not caching inline EL expressions, so this is a good oportunity to do it.",MYFACES-3219
"Doing some tests, I notice org.apache.myfaces.view.facelets.compiler.UILeaf does not override attributes map, and it should be. 

This cause some side effects. Component attributes map is used to store org.apache.myfaces.view.facelets.MARK_ID key, but do that creates 2 HashMap instances (state helper, state helper attributes key) with default size, but in practice only 1 attribute will be set. This component is just a reference to render markup, so there it is a waste of memory resources, more if you consider that jsf pages are a mixture between markup (backed by UILeaf) and stateful components.",MYFACES-3218
"Some time ago we already talked about the need for integration tests for MyFaces core in order to ensure the quality of MyFaces code, but we never created something for this. Now after successfully releasing MyFaces CODI v1.0.0 with a working integration-test concept, it is time to apply this concept also on MyFaces core.

The concept is simple: use an integration-test module that will be added to the MyFaces core build via profile (-Pintegration-tests) and thus will not be part of a release. This module consists of a support module containing general integration-test support classes (e.g. an abstract MyFacesIntegrationTest base class for all JUnit integration-tests) and various war-modules that contain the actual integration-tests.

The war modules use the cargo maven plugin to start and stop a specific container (e.g. jetty or tomcat) and HtmlUnit to run tests against the running server. The HtmlUnit tests are executed with the maven failsafe plugin to ensure container shutdown in error cases.

I already created three war-modules with the following configuration:
  - servlet 2.5 and el 1.0 (jetty 7)
  - servlet 2.5 and el 2.2 (jetty 6 and glassfish el)
  - servlet 3.0 and el 2.2 (tomcat 7)

These modules also already contain a very basic integration test, just as reference.

The plan is to put basic tests that do not need any special configuration into these modules and to create new special war-modules for tests that need a specific configuration (e.g. MyFaces core on tomcat 6 with bean validation and client state saving enabled and ....). In addition, I plan to create an archetype for these integration-test war-modules.

The long-term plan would be to have an integration-test for every jira issue on MyFaces core, thus implementing test-driven-development. With the complete infrastructure in place, it should not be very hard to create a test case for a jira issue (maybe even already by the user that reports the issue) and thus being able to fix issues a lot quicker and to ensure that new code or changes do not break anything.

I will create a wiki page describing this stuff in more detail, also giving examples on how to create modules and tests and on how to debug tests.",MYFACES-3217
"There is something suspicious about these two maps:

javax.faces.component._ComponentAttributesMap

    // Cache for component property descriptors
    private static Map<Class<?>, Map<String, PropertyDescriptor>> _propertyDescriptorCache = 
        new WeakHashMap<Class<?>, Map<String, PropertyDescriptor>>();

org.apache.myfaces.view.facelets.tag

    private final static WeakHashMap<ClassLoader, Map<String, MetadataTarget>> _metadata
            = new WeakHashMap<ClassLoader, Map<String, MetadataTarget>>();

Both maps do something similar, cache PropertyDescriptor and other information that is unique per class. The problem is WeakHashMap is not thread safe, so in both cases there is a potential risk of throw exceptions when calling ""put"" method under high load.

The solution is put proper synchronized blocks when calling to put is done, just like FactoryFinder does.

Reported stack trace by Rajadurai_p. See http://markmail.org/message/4md2rsiii5mjhvcr?q=MyFaces+-+Thread+issues+under+High+load for details:

Hi,

we are facing problems in MyFaces framework under high load. Bulk of the
application container threads (weblogic) are stuck upon a same stack trace.
I have pasted a sample stack trace below. Kindly help.

We use JSF 1.2, MyFaces 1.2.9, Tomahawk 1.1.9 & RichFaces 3.3.3.

java.beans.PropertyDescriptor.getReadMethod(PropertyDescriptor.java:158)

javax.faces.component._ComponentAttributesMap.getComponentProperty(_ComponentAttributesMap.java:382)

javax.faces.component._ComponentAttributesMap.get(_ComponentAttributesMap.java:227)

org.apache.myfaces.shared_tomahawk.renderkit.html.HtmlRendererUtils.renderHTMLAttribute(HtmlRendererUtils.java:584)

org.apache.myfaces.shared_tomahawk.renderkit.html.HtmlRendererUtils.renderHTMLAttributes(HtmlRendererUtils.java:598)

org.apache.myfaces.custom.htmlTag.HtmlTagRenderer.encodeBegin(HtmlTagRenderer.java:73)
       javax.faces.component.UIComponentBase.encodeBegin(UIComponentBase.java:600)

org.apache.myfaces.shared_tomahawk.renderkit.RendererUtils.renderChild(RendererUtils.java:525)

org.apache.myfaces.shared_tomahawk.renderkit.RendererUtils.renderChildren(RendererUtils.java:511)

org.apache.myfaces.custom.htmlTag.HtmlTagRenderer.encodeChildren(HtmlTagRenderer.java:111)

javax.faces.component.UIComponentBase.encodeChildren(UIComponentBase.java:627)

org.apache.myfaces.shared_tomahawk.renderkit.RendererUtils.renderChild(RendererUtils.java:528)

org.apache.myfaces.shared_tomahawk.renderkit.RendererUtils.renderChildren(RendererUtils.java:511)

org.apache.myfaces.custom.htmlTag.HtmlTagRenderer.encodeChildren(HtmlTagRenderer.java:111)

javax.faces.component.UIComponentBase.encodeChildren(UIComponentBase.java:627)
       org.ajax4jsf.renderkit.RendererBase.renderChild(RendererBase.java:277)
       org.ajax4jsf.renderkit.RendererBase.renderChildren(RendererBase.java:258)

org.richfaces.renderkit.AbstractGridRenderer.encodeOneRow(AbstractGridRenderer.java:96)

org.richfaces.renderkit.AbstractRowsRenderer.process(AbstractRowsRenderer.java:83)
       org.ajax4jsf.model.SequenceDataModel.walk(SequenceDataModel.java:101)
       org.ajax4jsf.component.UIDataAdaptorBase.walk(UIDataAdaptorBase.java:1156)

org.richfaces.renderkit.AbstractRowsRenderer.encodeRows(AbstractRowsRenderer.java:104)

org.richfaces.renderkit.AbstractRowsRenderer.encodeRows(AbstractRowsRenderer.java:88)

org.richfaces.renderkit.AbstractRowsRenderer.encodeChildren(AbstractRowsRenderer.java:137)

javax.faces.component.UIComponentBase.encodeChildren(UIComponentBase.java:627)
       org.ajax4jsf.renderkit.RendererBase.renderChild(RendererBase.java:277)
       org.ajax4jsf.renderkit.RendererBase.renderChildren(RendererBase.java:258)

org.ajax4jsf.renderkit.html.AjaxOutputPanelRenderer.encodeChildren(AjaxOutputPanelRenderer.java:78)

javax.faces.component.UIComponentBase.encodeChildren(UIComponentBase.java:627)

org.apache.myfaces.shared_tomahawk.renderkit.RendererUtils.renderChild(RendererUtils.java:528)

org.apache.myfaces.shared_tomahawk.renderkit.RendererUtils.renderChildren(RendererUtils.java:511)

org.apache.myfaces.custom.htmlTag.HtmlTagRenderer.encodeChildren(HtmlTagRenderer.java:111)

javax.faces.component.UIComponentBase.encodeChildren(UIComponentBase.java:627)
       javax.faces.component.UIComponent.encodeAll(UIComponent.java:250)

com.sun.facelets.component.RepeatRenderer.encodeChildren(RepeatRenderer.java:64)
       com.sun.facelets.component.UIRepeat.process(UIRepeat.java:423)
       com.sun.facelets.component.UIRepeat.encodeChildren(UIRepeat.java:684)
       org.ajax4jsf.renderkit.RendererBase.renderChild(RendererBase.java:277)
       org.ajax4jsf.renderkit.RendererBase.renderChildren(RendererBase.java:258)

org.richfaces.renderkit.html.PanelRenderer.doEncodeChildren(PanelRenderer.java:200)

org.richfaces.renderkit.html.PanelRenderer.doEncodeChildren(PanelRenderer.java:195)
       org.ajax4jsf.renderkit.RendererBase.encodeChildren(RendererBase.java:120)

javax.faces.component.UIComponentBase.encodeChildren(UIComponentBase.java:627)
       org.ajax4jsf.renderkit.RendererBase.renderChild(RendererBase.java:277)
       org.ajax4jsf.renderkit.RendererBase.renderChildren(RendererBase.java:258)
       org.ajax4jsf.renderkit.RendererBase.renderChild(RendererBase.java:279)
       org.ajax4jsf.renderkit.RendererBase.renderChildren(RendererBase.java:258)

org.ajax4jsf.renderkit.html.AjaxOutputPanelRenderer.encodeChildren(AjaxOutputPanelRenderer.java:78)

javax.faces.component.UIComponentBase.encodeChildren(UIComponentBase.java:627)

org.apache.myfaces.shared_tomahawk.renderkit.RendererUtils.renderChild(RendererUtils.java:528)

org.apache.myfaces.shared_tomahawk.renderkit.RendererUtils.renderChildren(RendererUtils.java:511)

org.apache.myfaces.custom.htmlTag.HtmlTagRenderer.encodeChildren(HtmlTagRenderer.java:111)

javax.faces.component.UIComponentBase.encodeChildren(UIComponentBase.java:627)

org.apache.myfaces.shared_tomahawk.renderkit.RendererUtils.renderChild(RendererUtils.java:528)

org.apache.myfaces.shared_tomahawk.renderkit.RendererUtils.renderChildren(RendererUtils.java:511)

org.apache.myfaces.shared_tomahawk.renderkit.RendererUtils.renderChild(RendererUtils.java:532)

org.apache.myfaces.shared_tomahawk.renderkit.RendererUtils.renderChildren(RendererUtils.java:511)

org.apache.myfaces.custom.htmlTag.HtmlTagRenderer.encodeChildren(HtmlTagRenderer.java:111)

javax.faces.component.UIComponentBase.encodeChildren(UIComponentBase.java:627)

org.apache.myfaces.shared_tomahawk.renderkit.RendererUtils.renderChild(RendererUtils.java:528)

org.apache.myfaces.shared_tomahawk.renderkit.RendererUtils.renderChildren(RendererUtils.java:511)

org.apache.myfaces.custom.htmlTag.HtmlTagRenderer.encodeChildren(HtmlTagRenderer.java:111)

javax.faces.component.UIComponentBase.encodeChildren(UIComponentBase.java:627)

org.apache.myfaces.shared_tomahawk.renderkit.RendererUtils.renderChild(RendererUtils.java:528)

org.apache.myfaces.shared_tomahawk.renderkit.RendererUtils.renderChildren(RendererUtils.java:511)

org.apache.myfaces.custom.htmlTag.HtmlTagRenderer.encodeChildren(HtmlTagRenderer.java:111)

javax.faces.component.UIComponentBase.encodeChildren(UIComponentBase.java:627)

org.apache.myfaces.shared_tomahawk.renderkit.RendererUtils.renderChild(RendererUtils.java:528)

org.apache.myfaces.shared_tomahawk.renderkit.RendererUtils.renderChildren(RendererUtils.java:511)

org.apache.myfaces.custom.htmlTag.HtmlTagRenderer.encodeChildren(HtmlTagRenderer.java:111)

javax.faces.component.UIComponentBase.encodeChildren(UIComponentBase.java:627)
       javax.faces.component.UIComponent.encodeAll(UIComponent.java:250)
       javax.faces.component.UIComponent.encodeAll(UIComponent.java:257)
       com.sun.facelets.FaceletViewHandler.renderView(FaceletViewHandler.java:594)

org.ajax4jsf.application.ViewHandlerWrapper.renderView(ViewHandlerWrapper.java:100)

org.ajax4jsf.application.AjaxViewHandler.renderView(AjaxViewHandler.java:176)

org.apache.myfaces.lifecycle.RenderResponseExecutor.execute(RenderResponseExecutor.java:41)
       org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:140)
       javax.faces.webapp.FacesServlet.service(FacesServlet.java:187)

weblogic.servlet.internal.StubSecurityHelper$ServletServiceAction.run(StubSecurityHelper.java:227)

weblogic.servlet.internal.StubSecurityHelper.invokeServlet(StubSecurityHelper.java:125)
       weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:283)
       weblogic.servlet.internal.TailFilter.doFilter(TailFilter.java:26)
       weblogic.servlet.internal.FilterChainImpl.doFilter(FilterChainImpl.java:42)
       org.ajax4jsf.webapp.BaseXMLFilter.doXmlFilter(BaseXMLFilter.java:206)
       org.ajax4jsf.webapp.BaseFilter.handleRequest(BaseFilter.java:290)

org.ajax4jsf.webapp.BaseFilter.processUploadsAndHandleRequest(BaseFilter.java:388)
       org.ajax4jsf.webapp.BaseFilter.doFilter(BaseFilter.java:515)
       weblogic.servlet.internal.FilterChainImpl.doFilter(FilterChainImpl.java:42)

org.tuckey.web.filters.urlrewrite.RuleChain.handleRewrite(RuleChain.java:164)
       org.tuckey.web.filters.urlrewrite.RuleChain.doRules(RuleChain.java:141)

org.tuckey.web.filters.urlrewrite.UrlRewriter.processRequest(UrlRewriter.java:90)

org.tuckey.web.filters.urlrewrite.UrlRewriteFilter.doFilter(UrlRewriteFilter.java:407)
       weblogic.servlet.internal.FilterChainImpl.doFilter(FilterChainImpl.java:42)

org.apache.myfaces.webapp.filter.ExtensionsFilter.doFilter(ExtensionsFilter.java:384)
       weblogic.servlet.internal.FilterChainImpl.doFilter(FilterChainImpl.java:42)

com.xxx.yyy.zzz.CookieCartCountFilter.doFilter(CookieCartCountFilter.java:69)
       weblogic.servlet.internal.FilterChainImpl.doFilter(FilterChainImpl.java:42)

com.xxx.yyy.zzz.webservice.onesite.OneSiteCacheFilter.doFilter(OneSiteCacheFilter.java:388)
       weblogic.servlet.internal.FilterChainImpl.doFilter(FilterChainImpl.java:42)
       com.xxx.yyy.zzz.util.CachingFilter.doFilter(CachingFilter.java:143)
       weblogic.servlet.internal.FilterChainImpl.doFilter(FilterChainImpl.java:42)
       com.xxx.yyy.zzz.util.JsessionidFilter.doFilter(JsessionidFilter.java:43)
       weblogic.servlet.internal.FilterChainImpl.doFilter(FilterChainImpl.java:42)

com.xxx.yyy.zzz.util.SessionCookieSupportFilter.doFilter(SessionCookieSupportFilter.java:180)
       weblogic.servlet.internal.FilterChainImpl.doFilter(FilterChainImpl.java:42)

de.hybris.platform.util.RootRequestFilter.doFilter(RootRequestFilter.java:741)
       weblogic.servlet.internal.FilterChainImpl.doFilter(FilterChainImpl.java:42)

weblogic.servlet.internal.RequestEventsFilter.doFilter(RequestEventsFilter.java:26)
       weblogic.servlet.internal.FilterChainImpl.doFilter(FilterChainImpl.java:42)

weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.run(WebAppServletContext.java:3229)

weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:321)
       weblogic.security.service.SecurityManager.runAs(SecurityManager.java:121)

weblogic.servlet.internal.WebAppServletContext.securedExecute(WebAppServletContext.java:2002)

weblogic.servlet.internal.WebAppServletContext.execute(WebAppServletContext.java:1908)

weblogic.servlet.internal.ServletRequestImpl.run(ServletRequestImpl.java:1362)
       weblogic.work.ExecuteThread.execute(ExecuteThread.java:209)
       weblogic.work.ExecuteThread.run(ExecuteThread.java:181)


",MYFACES-3216
"Found on stackoverflow:

http://stackoverflow.com/questions/6581225/myfaces-never-throw-exception-for-undefined-custom-tags

It is worth to do it on MyFaces, it is a common JSF begginer error.",MYFACES-3215
"some old code uses: 

 catch(Exception ex)
        {
            throw new FacesException(""Could not retrieve value of component with path : ""+
                    getPathToComponent(component),ex);
        }

to provide path to problematic component. With JSF 2.0 and exception handler is is not necessary (and only makes stacktrace harder to read), because:
1) exception is always queued with component instance (see MYFACES-3201)
2) every EL expression knows about it's location (MYFACES-3202)
",MYFACES-3214
"General error page improvements (includes other subtask from MYFACES-3053). 

Please see attached screenshots - the tested view is:

            <h:inputText  id=""inputText"" value=""#{bean.value}"" >
                <f:valueChangeListener binding=""#{bean}"" />
            </h:inputText>
            <h:inputText  id=""inputText2"" value=""#{bean.value}"" >
                <f:valueChangeListener binding=""#{bean}"" />
            </h:inputText>


where valueChangeListener throws NPE. ",MYFACES-3213
"When scanning class files searching for annotatios, if org.apache.myfaces.config.annotation.DefaultAnnotationProvider can not open URL quietly do nothing. It's really difficult to discover what is going on and many people may think that provided MyFaces can not be used on JbossAS6 

I think that org.apache.myfaces.config.annotation.DefaultAnnotationProvider._getAlternativeJarFile(URL url) must report/log some error before 'return null' and point the user to implement a CustomAnnotationProvider in order to make it work.

I didn't found any documentation that make this clear at any point. MyFaces documentation should explain:
   - why is needed
   - How to provide custom DefaultAnnotationProvider in web.xml context param or in META-INF/services/org.apache.myfaces.spi.AnnotationProvider
   - Explain that in JBoss AS6 a custom implementation must be provided able to use jboss-vsf and point to VSF documentation in http://community.jboss.org/wiki/VFS3UserGuide. We implemented a scanner based on VSF visitor pattern that work great but spent a huge amount of time on it. Can't this provider be included because of license issues with jboss?

This will make migration from Mojarra much faster when using jboss and probably others.
Thank you for your attention. ",MYFACES-3212
"In 2.1.0 the shaded-impl module was introduced in order to solve a cyclic dependency problem (access classes of myfaces-impl in myfaces-impl-ee6). However, this introduces unnecessary redundancy and complexity to our build process and is subject to a lot of problems (currently shaded-impl is myfaces-impl:2.0.5, but it is used as if it was myfaces-impl:2.1.1, which could lead to inconsistencies and other problems).

Some time ago we briefly discussed a solution to this problem: the introduction of a myfaces-spi module. This module contains all classes of the org.apache.myfaces.spi package (not *.spi.impl) and the necessary data objects. It is independent of impl and impl-ee6 and thus can be used by them!

I will attach a patch for this one shortly!",MYFACES-3211
"As discussed on the mailing list, see http://old.nabble.com/Proposal%3A-Change-groupId-of-myfaces-impl-ee6-to-org.apache.myfaces.core.internal-td32014798.html

>About a year ago we introduced the myfaces-impl-ee6 module, which
>includes the servlet 3.0 related stuff for myfaces-impl. This means
>the module is only needed for development reasons and will be shaded
>into myfaces-impl anyway.
>
>However, I noticed that some developers who are not that familiar with
>MyFaces core don't know what to do with myfaces-impl-ee6. Some even
>think this is the replacement of myfaces-impl when using java ee 6,
>which is - of course - complete nonsense.
>
>Thus I would like to propose to change the groupId of myfaces-impl-ee6
>from org.apache.myfaces.core to org.apache.myfaces.core.internal. IMO
>this makes it a lot more clear that this module is for internal
>purposes only!

Affected modules: myfaces-impl-ee6 and shaded-impl.",MYFACES-3210
"SetPropertyListener does not conform 9.4.12 <f:setPropertyActionListener>, the ""Coerce the value of the ""value"" expression to the ""target"" expression value type following the Expression Language coercion rules. "" is missing.

",MYFACES-3209
"TagLibraryConfig.containsTagHandler search a composite component file like:

                ResourceHandler resourceHandler = 
                    FacesContext.getCurrentInstance().getApplication().getResourceHandler();

                Resource compositeComponentResource = resourceHandler.createResource(
                        localName +"".xhtml"", _compositeLibraryName);

But never checks if the name space is the same as requested, so method returns 'true' if same tag name exist on different name space.
Then null pointer is thrown when building component tree:

11:47:31,191 FATAL [org.apache.myfaces.renderkit.ErrorPageWriter] An exception occurred: javax.faces.FacesException: java.lang.NullPointerException
   at org.apache.myfaces.shared_impl.context.ExceptionHandlerImpl.wrap(ExceptionHandlerImpl.java:241) [:2.0.1]
   at org.apache.myfaces.shared_impl.context.ExceptionHandlerImpl.handle(ExceptionHandlerImpl.java:156) [:2.0.1]
   at org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:258) [:2.0.1]
   at org.springframework.faces.mvc.JsfView.renderMergedOutputModel(JsfView.java:85) [:2.3.0.RELEASE]
   at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:250) [:3.0.5.RELEASE]
   at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1047) [:3.0.5.RELEASE]
   at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:817) [:3.0.5.RELEASE]
   at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:719) [:3.0.5.RELEASE]
   at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:644) [:3.0.5.RELEASE]
   at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:549) [:3.0.5.RELEASE]
   at javax.servlet.http.HttpServlet.service(HttpServlet.java:734) [:1.0.0.Final]
   at javax.servlet.http.HttpServlet.service(HttpServlet.java:847) [:1.0.0.Final]
   at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:324) [:6.0.0.Final]
   at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:242) [:6.0.0.Final]
   at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:368) [:3.0.5.RELEASE]
   at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:109) [:3.0.5.RELEASE]
   at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83) [:3.0.5.RELEASE]
   at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380) [:3.0.5.RELEASE]
   at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:97) [:3.0.5.RELEASE]
   at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380) [:3.0.5.RELEASE]
   at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:100) [:3.0.5.RELEASE]
   at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380) [:3.0.5.RELEASE]
   at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:78) [:3.0.5.RELEASE]
   at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380) [:3.0.5.RELEASE]
   at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:54) [:3.0.5.RELEASE]
   at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380) [:3.0.5.RELEASE]
   at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:35) [:3.0.5.RELEASE]
   at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380) [:3.0.5.RELEASE]
   at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:177) [:3.0.5.RELEASE]
   at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380) [:3.0.5.RELEASE]
   at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:187) [:3.0.5.RELEASE]
   at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380) [:3.0.5.RELEASE]
   at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:105) [:3.0.5.RELEASE]
   at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380) [:3.0.5.RELEASE]
   at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:79) [:3.0.5.RELEASE]
   at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:380) [:3.0.5.RELEASE]
   at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:169) [:3.0.5.RELEASE]
   at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:237) [:3.0.5.RELEASE]
   at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:167) [:3.0.5.RELEASE]
   at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:274) [:6.0.0.Final]
   at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:242) [:6.0.0.Final]
   at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88) [:3.0.5.RELEASE]
   at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76) [:3.0.5.RELEASE]
   at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:274) [:6.0.0.Final]
   at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:242) [:6.0.0.Final]
   at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:275) [:6.0.0.Final]
   at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191) [:6.0.0.Final]
   at org.jboss.web.tomcat.security.SecurityAssociationValve.invoke(SecurityAssociationValve.java:181) [:6.0.0.Final]
   at org.jboss.modcluster.catalina.CatalinaContext$RequestListenerValve.event(CatalinaContext.java:285) [:1.1.0.Final]
   at org.jboss.modcluster.catalina.CatalinaContext$RequestListenerValve.invoke(CatalinaContext.java:261) [:1.1.0.Final]
   at org.jboss.web.tomcat.security.JaccContextValve.invoke(JaccContextValve.java:88) [:6.0.0.Final]
   at org.jboss.web.tomcat.security.SecurityContextEstablishmentValve.invoke(SecurityContextEstablishmentValve.java:100) [:6.0.0.Final]
   at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127) [:6.0.0.Final]
   at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102) [:6.0.0.Final]
   at org.jboss.web.tomcat.service.jca.CachedConnectionValve.invoke(CachedConnectionValve.java:158) [:6.0.0.Final]
   at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109) [:6.0.0.Final]
   at org.jboss.web.tomcat.service.request.ActiveRequestResponseCacheValve.invoke(ActiveRequestResponseCacheValve.java:53) [:6.0.0.Final]
   at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:362) [:6.0.0.Final]
   at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:877) [:6.0.0.Final]
   at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:654) [:6.0.0.Final]
   at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:951) [:6.0.0.Final]
   at java.lang.Thread.run(Thread.java:662) [:1.6.0_24]
Caused by: java.lang.NullPointerException
   at javax.faces.view.facelets.DelegatingMetaTagHandler.applyNextHandler(DelegatingMetaTagHandler.java:59) [:2.0.1]
   at org.apache.myfaces.view.facelets.tag.jsf.ComponentTagHandlerDelegate.apply(ComponentTagHandlerDelegate.java:263) [:2.0.1]
   at javax.faces.view.facelets.DelegatingMetaTagHandler.apply(DelegatingMetaTagHandler.java:54) [:2.0.1]
   at javax.faces.view.facelets.DelegatingMetaTagHandler.applyNextHandler(DelegatingMetaTagHandler.java:59) [:2.0.1]
   at org.apache.myfaces.view.facelets.tag.jsf.ComponentTagHandlerDelegate.apply(ComponentTagHandlerDelegate.java:263) [:2.0.1]
   at javax.faces.view.facelets.DelegatingMetaTagHandler.apply(DelegatingMetaTagHandler.java:54) [:2.0.1]
   at javax.faces.view.facelets.CompositeFaceletHandler.apply(CompositeFaceletHandler.java:51) [:2.0.1]
   at org.apache.myfaces.view.facelets.tag.jsf.core.ViewHandler.apply(ViewHandler.java:156) [:2.0.1]
   at javax.faces.view.facelets.CompositeFaceletHandler.apply(CompositeFaceletHandler.java:51) [:2.0.1]
   at org.apache.myfaces.view.facelets.compiler.NamespaceHandler.apply(NamespaceHandler.java:57) [:2.0.1]
   at javax.faces.view.facelets.CompositeFaceletHandler.apply(CompositeFaceletHandler.java:51) [:2.0.1]
   at org.apache.myfaces.view.facelets.compiler.EncodingHandler.apply(EncodingHandler.java:45) [:2.0.1]
   at org.apache.myfaces.view.facelets.impl.DefaultFacelet.apply(DefaultFacelet.java:143) [:2.0.1]
   at org.apache.myfaces.view.facelets.FaceletViewDeclarationLanguage.buildView(FaceletViewDeclarationLanguage.java:310) [:2.0.1]
   at org.apache.myfaces.lifecycle.RenderResponseExecutor.execute(RenderResponseExecutor.java:66) [:2.0.1]
   at org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:239) [:2.0.1]
   ... 59 more


A check like:
    if ( ! _namespace.equals(ns) ) return false;
Is not needed previous to facelet file search? 


",MYFACES-3208
"""any time there is an error in any part of the lifecycle, the user should see not just a cryptic stack trace, but also the component - that  triggered the problem"" - from MYFACES-3053

Currently ErrorPageWriter does not output info source component, although component in the most important class in JSF.

",MYFACES-3207
"If you use a ui:repeat with the varStatus set then the varStatus is lost during an ajax call.
for example:
<h:panelGroup id=""myPanel"">
  <ui:repeat value=""#{repeatOver}"" 
                   id=""repeatID""
	 var=""v""
                   varStatus=""vStatus"">
    <h:outputText value=""vStatus.index"" />
  </ui:repeat>
</h:panelGroup>

If you invoke an ajax call which renders ""myPanel"" then the vStatus variable is now null.
If you look at org.apache.myfaces.view.facelets.component.UIRepeat the restoreState and saveState methods save _var but not _varStatus.",MYFACES-3206
"Some time ago we were already thinking of moving away from our old ant-task and the dependency plugin for re-packaging and including shared in myfaces core and using the maven shade-plugin instead. I also did some prototyping back then in a separate branch, but unfortunately ran into some serious issues.

However, while working on MyFaces CODI we found out new ways to deals with those problems. Furthermore we now provide a separate OSGi bundle, which automatically takes care of all the OSGi issues we had back then with the shade-plugin.

I will create a new separate branch and try this stuff again, now having a lot more knowledge about it. If it works well, I will write a mail to the dev list!",MYFACES-3205
"If you use the following xhtml tags...

﻿
<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE html
        PUBLIC ""-//W3C//DTD XHTML 1.0 Transitional//EN""
        ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"">
<html xmlns=""http://www.w3.org/1999/xhtml"" xml:lang=""en"" lang=""en""
        xmlns:h=""http://java.sun.com/jsf/html"">
<body>

<h:form>
        <h:panelGrid>
            <div id=""presetRanges"">
                <h:panelGrid columns=""1"" rendered=""false"">
                    <!--<h:outputText value=""bar""/>-->
                </h:panelGrid>
            </div>
        </h:panelGrid>
    </h:form>
</body>

</html>

 
It renders as...

 
<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Transitional//EN""
        ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"" >
<html xmlns=""http://www.w3.org/1999/xhtml"" xml:lang=""en"" lang=""en"">
    <body>
        <form id=""j_id1140648439_43fce9ed"" name=""j_id1140648439_43fce9ed"" method=""post""
             action=""/testJSF2Web/testPage2.jsf"" enctype=""application/x-www-form-urlencoded"">
            <table>
                <tbody>
                    <tr>
                        <td>
                            <div id=""presetRanges"">
                        </td>
                    </tr>
                    <tr>
                        <td>
                        </div>
                    </td>
                </tr>
            </tbody>
        </table>
        <input type=""hidden"" name=""j_id1140648439_43fce9ed_SUBMIT"" value=""1""/>
        <input type=""hidden"" name=""javax.faces.ViewState"" id=""javax.faces.ViewState""
               value=""q6SajcUugOiXkLYISx+QCHdiiJQJaJ0Jp3CJQ1RG4fxGBST1c3AxMgaZV3YCFzI9Zw0w96iHAnAMsgzyz8pgbdtPf62LeHqDS/XPyF4aZcRgRL6/wBvcghc1G/wLNvr2cnNRNw==""/>
    </form>
    <div id=""javax_faces_developmentstage_messages""></div>
</body>
</html>

 
Notice that the <div> tag's closing is placed in the incorrect location in the table, resulting in invalid HTML.",MYFACES-3204
"Problem 1: 
In multilevel templating developer losts context easily
and puts a new h:form into exiting one. In this situation myfaces should output a warning or throw a exception

Problem 2:
component requiring h:form: some components require h:form to produce request. Outputs a warning if h:form is missing (this is very common problem, discussed frequently at users mailing list)
",MYFACES-3203
"From MYFACES-3053 ""user should see not just a cryptic stack trace, but the EL expression that was being evaluated  including the part of the EL expression that triggered the problem""

Myfaces utilize TagValueExpression and TagValueExpressionUEL as TagAtrribute-aware wrappers around EL ValueExpression. But this ""context"" is  only .toString()  of TagAttribute and that prohibits user-frendly formatting of messages.

Provide TagAttribute instance, create TagAttributeAwareExceptionWrapper that will hold this instance. Clients (mainly ErrorPage) can read attributes of TagAttribute and format it as necessary, for example ""EL expression that triggered the problem: "" + wrapper.getTagAttribute().getValue()",MYFACES-3202
"Requirement: ""user should see not just a cryptic stack  trace, but also the component  that   triggered the problem""

Problem in current code is that first exception breaks current phase and exception in queued without component info.


I think that every lifecycle method (processDecodes, processValidator etc.) should try catch every exception and publish it for later processing with exception handler.

Spec does not says it directly but we can find:

""The exception must not be re-thrown. This enables tree traversal to continue for this lifecycle phase, as in all the other lifecycle phases"" from UIInput.updateModel

""ExceptionHandler is the central point for handling unexpected Exceptions that are thrown during the Faces lifecycle"" from ExceptionHandler javadoc

process* method can silently ""do nothing"" : UIInput.updateModel does it already.

Publishing event allows handle multiple problem at once: consider buggy validators/converters -> create more than one exception in queue and coder can see them at once.

The main parameter of ExceptionQueuedContext is UIComponent and the best place where component is always known is component itself.
",MYFACES-3201
"A testcase to reproduce this issue is attached. 

Steps to reproduce this issue:

1. http://localhost:8080/jsf2testcase/components.jsf
2. you can see the value of one of the attributes of the self-defined composite component at 'Panel1'
2. click 'Panel2'
3. click 'Panel1'
4. value at 'Panel1' is not shown anymore. (if you refresh the page with 'F5' after that, the value is there again)

Note:
This behaviour occurs with the latest myfaces-2.1.2-SNAPSHOT (30.06.2011)
With an older version of myfaces-2.1.2-SNAPSHOT (22.06.2011) and with myfaces-2.1.1 everything works as expected.",MYFACES-3200
"UIViewRoot:
 try  {
    source.broadcast(event);
 }
            catch (AbortProcessingException e)
            {
                ExceptionQueuedEventContext exceptionContext 
                        = new ExceptionQueuedEventContext(context, e, source, context.getCurrentPhaseId());
                context.getApplication().publishEvent(context, ExceptionQueuedEvent.class, exceptionContext);
                
                // Abortion
                return false;
}


Problem 1: 
<h:inputText  valueChangeListener=""#{bean.processValueChange}"">

MethodExpressionValueChangeListener wraps all exceptions to AbortProcessingException and therefore exception is queued

Problem 2: 
            <h:inputText  >
                <f:valueChangeListener binding=""#{bean}"" />
            </h:inputText>
ValueChangeListenerHandler does not wrap exception to AbortProcessingException and therefore  exception is not queued in this block (but it is queued from phase executor but without component info)


Problem 3: JSF spec 2.1 : 
""Clarification made: throwing an AbortProcessingException tells an implementation that no further broadcast of the
current event occurs. Does not affect future events."" 
But I think that code in UIViewRoot makes opposite:  // Abortion  return false;






",MYFACES-3199
"Myfaces PartialViewContextImpl.PhaseAwareVisitCallback.processRenderComponent(UIComponent)  catches only IOExpcetion and nothing else.

I've checked Mojarra and RichFaces (they have own PartialViewContextImpl) and both those implementations catch all exception; that isolates rendering of a component (and it children) - in case of exception, rest of component tree can still be rendered.

Similar concept of isolating execution for one component can be seen in UIInput.updateModel - problem in one component does not have influence on other components in tree. Maybe we should check all code for this symmetry.

previous is valid for partial lifecycle. For full lifecycle, rendering begins with UIViewRoot.encodeAll .


Also catched exception should not be logged, but queued with ExceptionQueuedEvent.
",MYFACES-3198
"If a exception occurs in UIInput.updateModel, exception and its stacktrace is outputed 2x in log:
1) from javax.faces.component.UIInput.updateModel(FacesContext) - context.getExternalContext().log(e.getMessage(), e);
2) from ExceptionHandlerImpl/ErrorPagewriter

The first one is unwanted, because all exceptions should be handled with exception handling mechanism. Remove that logging.

29.6.2011 13:15:44 org.apache.catalina.core.ApplicationContext log
SEVERE: java.lang.ClassCastException@1580929
java.lang.IllegalArgumentException: java.lang.ClassCastException@1580929
	at sun.reflect.GeneratedMethodAccessor535.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)

...


29.6.2011 13:16:11 org.apache.myfaces.renderkit.ErrorPageWriter handleThrowable
SEVERE: An exception occurred
javax.faces.component.UpdateModelException: java.lang.IllegalArgumentException: java.lang.ClassCastException@1580929
	at javax.faces.component.UIInput.updateModel(UIInput.java:400)
	at javax.faces.component.UIInput.processUpdates(UIInput.java:304)
	at javax.faces.component.UIForm.processUpdates(UIForm.java:219

",MYFACES-3197
"When parsing numbers with java.text.NumberFormat, it is important to observe the ParsePosition.

If, after parsing a number, the parsePosition is less than the length of the input string, this actually means there was a problem. Example:

With grouping disabled, the String ""0,23"" is parsed to 0, and the parsePosition is set to 1. This should be considered as a parsing error.



",MYFACES-3196
"javax.faces.convert.NumberConverter uses the ""groupingUsed"" attribute only for formatting, but not for parsing numbers. This leads to a nasty bug:

When I input the value ""0.23"" in an input field using a German locale, it is converted to ""23.00"", which is bad.

Proposed patch, in method getAsObject():

                NumberFormat format = getNumberFormat(facesContext);
                format.setParseIntegerOnly(_integerOnly);
+              format.setGroupingUsed(_groupingUsed);",MYFACES-3195
,MYFACES-3194
"If user sees this exception:
javax.faces.FacesException: java.lang.NullPointerException
	at org.apache.myfaces.shared_impl.context.ExceptionHandlerImpl.wrap(ExceptionHandlerImpl.java:241)
	at org.apache.myfaces.shared_impl.context.ExceptionHandlerImpl.handle(ExceptionHandlerImpl.java:156)

he/she thinks sometimes that this is a NPE (or other exception) from myfaces codebase. But callstack continues:

Caused by: java.lang.NullPointerException
	at cz.kocicak.myfaces.ManagedBean.getValue(ManagedBean.java:2

but nobody reads it all.

To prevent this misunderstanding, unwrap exception in ErrorPageWriter.",MYFACES-3193
"If a exception occurs in render response phase (see MYFACES-3191), exception and its stacktrace is outputed 2x in log:
1) from org.apache.myfaces.view.facelets.FaceletViewDeclarationLanguage.handleRenderException
2) from ExceptionHandlerImpl/ErrorPagewriter

The first one is unwanted, because all exceptions should be handled with exception handling mechanism. Remove that logging or change its level to FINE.



27.6.2011 21:40:21 org.apache.myfaces.view.facelets.FaceletViewDeclarationLanguage handleRenderException
SEVERE: Error Rendering View[/renderResponseExceptions.xhtml]
javax.faces.FacesException: Could not retrieve value of component with path : {Component-Path : [Class: javax.faces.component.UIViewRoot,ViewId: /renderResponseExceptions.xhtml][Class: javax.faces.component.html.HtmlBody,Id: j_id773823935_2e1f9d8b][Class: javax.faces.component.html.HtmlForm,Id: j_id773823935_2e1f9df1][Class: javax.faces.component.html.HtmlOutputText,Id: outputText]}
	at org.apache.myfaces.shared_impl.renderkit.RendererUtils.getValue(RendererUtils.java:347)
	at org.apache.myfaces.shared_impl.renderkit.RendererUtils.getStringValue(RendererUtils.java:295)
	at org.apache.myfaces.shared_impl.renderkit.html.HtmlTextRendererBase.renderOutput(HtmlTextRendererBase.java:92)


....


27.6.2011 21:40:21 org.apache.myfaces.renderkit.ErrorPageWriter handleThrowable
SEVERE: An exception occurred
javax.faces.FacesException: java.lang.NullPointerException
	at org.apache.myfaces.shared_impl.context.ExceptionHandlerImpl.wrap(ExceptionHandlerImpl.java:241)
	at org.apache.myfaces.shared_impl.context.ExceptionHandlerImpl.handle(ExceptionHandlerImpl.java:15


",MYFACES-3192
"View.xhtml snippet:
<h:commandButton value=""Submit"">
                <f:setPropertyActionListener value=""#{true}"" target=""#{bean.rendered}"" />
                <f:ajax render=""outputText"" />
</h:commandButton>
<h:outputText rendered=""#{bean.rendered}"" id=""outputText"" value=""#{bean.value}"" />

Bean.java snippet:
public Object getValue() {
		throw new NullPointerException();
}

Custom exception handler code:
			if (PhaseId.RENDER_RESPONSE.equals(currentPhaseId)) {
				try {
					nav.handleNavigation(facesContext, null, ""/ErrorPage.xhtml?faces-redirect=true"");
				} finally {
					i.remove();
				}
			}
Modify view and exception handler to achieve following combinations (HTML request = comment out f:ajax, forward = remove ?faces-redirect=true)

1) HTML request  + forward: nothing in log, and malformed output is produced (no closing tags for  </body> etc.)

2) HTML request + redirect: OK , redirect to ErrorPage.xhtml is done

3) AJAX request + forward: exception in log, bud no forward to ErrorPage performed

4) AJAX request + redirect: exception in log, malformed XML produced (<?xml and <partial-response 2x in output) , no redirect performed
",MYFACES-3191
"If user handles successfully handles ViewExpiredExpception with http://weblogs.java.net/blog/edburns/archive/2009/09/03/dealing-gracefully-viewexpiredexception-jsf2, myfaces still produce following output in log:

org.apache.myfaces.shared_impl.util.StateUtils reconstruct
SEVERE: View State cannot be reconstructed
javax.faces.FacesException: javax.faces.application.ViewExpiredException
	at org.apache.myfaces.shared_impl.util.StateUtils.decrypt(StateUtils.java:496)
	at org.apache.myfaces.shared_impl.util.StateUtils.reconstruct(StateUtils.java:378)
	at org.apache.myfaces.renderkit.html.HtmlResponseStateManager.getSavedState(HtmlResponseStateManager.java:239)
	at org.apache.myfaces.renderkit.html.HtmlResponseStateManager.getState(HtmlResponseStateManager.java:178)
	at org.apache.myfaces.view.facelets.DefaultFaceletsStateManagementStrategy.restoreView(DefaultFaceletsStateManagementStrategy.java:145)
	at org.apache.myfaces.application.StateManagerImpl.restoreView(StateManagerImpl.java:113)
	at org.apache.myfaces.shared_impl.view.ViewDeclarationLanguageBase.restoreView(ViewDeclarationLanguageBase.java:106)
	at org.apache.myfaces.view.facelets.FaceletViewDeclarationLanguage.restoreView(FaceletViewDeclarationLanguage.java:1621)
	at org.apache.myfaces.application.ViewHandlerImpl.restoreView(ViewHandlerImpl.java:296)
	at org.apache.myfaces.lifecycle.RestoreViewExecutor.execute(RestoreViewExecutor.java:123)
	at org.apache.myfaces.lifecycle.LifecycleImpl.executePhase(LifecycleImpl.java:171)
	at org.apache.myfaces.lifecycle.LifecycleImpl.execute(LifecycleImpl.java:118)
	at javax.faces.webapp.FacesServlet.service(FacesServlet.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:852)
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)
	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)
	at java.lang.Thread.run(Thread.java:662)
Caused by: javax.faces.application.ViewExpiredException
	at org.apache.myfaces.shared_impl.util.StateUtils.decrypt(StateUtils.java:489)
	... 24 more

The stacktrace comes from StateUtils.reconstruct(String, ExternalContext):

            if (log.isLoggable(Level.SEVERE))
            {
                log.log(Level.SEVERE, ""View State cannot be reconstructed"", e);
            }

This SEVERE log is unnecessary, because real ViewExpiredExpcetion is thrown from RestoreViewExecutor.",MYFACES-3190
"see http://weblogs.java.net/blog/edburns/archive/2009/09/03/dealing-gracefully-viewexpiredexception-jsf2

If user provides nonexistent viewId, NPE occurs: MYFACES-3188

navigation in this situation leads to facesContext.viewRoot = null. I don't know what spec says about it but mojarra stays on current view in this case (navigate?) - on that view, where VVE is. 

We should also provide a warning about this situation.

",MYFACES-3189
"Caused by: java.lang.NullPointerException
	at org.apache.myfaces.lifecycle.RenderResponseExecutor.execute(RenderResponseExecutor.java:60)
	at org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:239)

NPE ocurres in situation:
1) ViewExpiredException
2) Navigate to viewExpired.xhtml in ExpcetionHandler
3) but viewExpired.xhtml does not exists as resource


(In previous situation, navigationHandler should stay on current view (mojarra does it) - I'll create separate issue for that.)

improve RenderResponseExecutor: provide useful log instead of cryptic NPE.",MYFACES-3188
this phase-listener leads to a different behaviour in project-stage development -> it shouldn't be active by default,MYFACES-3187
"Somewhat complicated to explain... myfaces-extval, for example, can make changes to components by intercepting Renderer.encodeBegin().  My experience is this:
I have a ui:repeat, in which I nest an h:selectOneMenu.  If I add its child elements using a renderer interceptor approach like that of extval, these are lost after the view is rendered, so that the form submit fails due to the h:selectOneMenu having no selectItems available.  Other h:selectOneMenu components in the tree work properly when I add children in the same way, thus I believe that ui:repeat is where the problem arises.  I am attaching a project demonstrating the situation.",MYFACES-3186
"Registering a system event listener in the faces-config need a concrete class like HtmlInputText. If you wan't to register a listener for let's say all UIInputs you need to explicit configure all subclasses. 
        
<system-event-listener>
            <system-event-listener-class>view.RequiredValidationListener</system-event-listener-class>
            <system-event-class>javax.faces.event.PostValidateEvent</system-event-class>
            <source-class>javax.faces.component.html.HtmlInputText</source-class>
 </system-event-listener>

<system-event-listener>
            <system-event-listener-class>view.RequiredValidationListener</system-event-listener-class>
            <system-event-class>javax.faces.event.PostValidateEvent</system-event-class>
            <source-class>javax.faces.component.html.HtmlInputSecret</source-class>
 </system-event-listener>

etc.


Supporting base classes would be great:

<system-event-listener>
            <system-event-listener-class>view.RequiredValidationListener</system-event-listener-class>
            <system-event-class>javax.faces.event.PostValidateEvent</system-event-class>
            <source-class>javax.faces.component.UIInput</source-class>
 </system-event-listener>

a fine-grained configuration would be still possible through SystemEventListener.isListenerForSource(Object source)",MYFACES-3185
"if the id is set, it is written to the containing table and everything works fine.  Otherwise, the client-side DOM has no element with the id of the selectOneRadio component and the full effects of the ajax call (e.g. listener method invocation) are never carried out.  Works on Mojarra.",MYFACES-3184
"I have found a problem with parameters offset and size of ui:repeat tag.
offset sets the first index of the list to iterate over.
size is the number of element to iterate.

If you set a offset value greater than size you get an Exception:
javax.faces.FacesException: iteration offset cannot be greater than collection size

But it should be possible to iterate over last two elements of a 102 elements list starting from index 100, for example (offset=100,size=1).",MYFACES-3183
"In version 2.0 composite components does not resolve default values correctly when a direct call to cc.getAttributes().get(key) is done. Only EL expressions are resolved correctly, because by the spec an EL resolver is added to deal with this.

Testing some stuff on MYFACES-3168, I notice Mojarra 2.0.6 and 2.1.2 resolves it, so we need something there too. I knew about that problem long time ago, but since the spec mention the EL resolver way to do it, I preferred do not do any changes until 2.1.

In my opinion the best way to solve it is do the same thing the EL resolver does, but on the component attribute map. It is important to take care about performance in that part, because that part is very critical. 

The only reference I found about it is:

http://java.net/jira/browse/JAVASERVERFACES-1966",MYFACES-3182
"constellation:
javax.faces.INTERPRET_EMPTY_STRING_SUBMITTED_VALUES_AS_NULL
+ a property annotated with @NotNull
if an input component has a value and it gets removed by the user, a validation error occurs as expected but the old value of the model gets displayed instead of the wrong value (which is the empty string)",MYFACES-3181
"I've tried to create a simple reload button which triggers a bean method via ajax. With a ""normal"" button it works perfectly but as soon as I add an image to the button the method doesn't get called. See the following code snippets:


<h:commandButton id=""buttonWithoutImage"">
	<f:ajax event=""click"" listener=""#{ajaxTest.printHello}"" render=""anotherComponent"" />
</h:commandButton>

<h:commandButton id=""buttonWithImage"" image=""#{resource['images:icons/reload.png']}"">
	<f:ajax event=""click"" listener=""#{ajaxTest.printHello}"" render=""anotherComponent"" />
</h:commandButton>


@ManagedBean
@SessionScoped
public class AjaxTest
{
	public void printHello(AjaxBehaviorEvent ajaxEvent)
	{
		System.out.println(""Hello World from Ajax-Listener"");
	}
}


The first button works on each click while the second with the image never calls the bean method.",MYFACES-3180
"I've developed a test case (which will be attached) which is a simple JSF app that has 3 different methods of registering SystemEventListeners for PostAddToViewEvents:

    1) via @ListenFor annotations
    2) via definition in faces-config.xml
    3) via programmatically adding the listener through an eagerly created application scoped bean

Then I ran this tst case with the following JSF implemenations:

    * Mojarra 2.1
    * MyFaces 2.0.7
    * MyFaces 2.1.0
    * MyFaces 2.1.1

The behaviour can be summarized as follows:

Method 1 - Annotations

All implementations: The listener instance is never constructed or used.  (Perhaps it's a limitation of the annotation processing in Tomcat?)


Method 2 - Defining in faces-config.xml

Mojarra 2.1: An instance of the listener is created and used appropriately.
MyFaces 2.*: An instance of the listener is created but the isListenerFor() and processEvent() methods are never called.


Method 3 - Programmatic registration

All implementations: An instance of the listener is created and used appropriately.

So the question is why, when the listeners are defined in the faces-config file, are the listeners created but never called.  Other MyFaces JIRAs that might have some relevance:

https://issues.apache.org/jira/browse/MYFACES-2509
https://issues.apache.org/jira/browse/MYFACES-2638

Bottom line is that only the programmatic approach appears to be reliable across the 2 implementations.
",MYFACES-3179
"The jsf.getViewState() function is a standard part of the JSF client API.  Currently, if I call this function with a valid reference to a form object, an exception is thrown.  Firefox 4 (with Firebug) reports it as:

this._onException is not a function

I believe the problem stems from the getViewState implementation itself in Impl.js:


    getViewState : function(form) {
        /**
         *  typecheck assert!, we opt for strong typing here
         *  because it makes it easier to detect bugs
         */
        if (form) {
            form = this._Lang.byId(form);
        }

        if (!form
                || !form.nodeName
                || form.nodeName.toLowerCase() != ""form"") {
            throw new Error(this._Lang.getMessage(""ERR_VIEWSTATE""));
        }

        var ajaxUtils = new myfaces._impl.xhrCore._AjaxUtils(0);

        var ret = this._Lang.createFormDataDecorator([]);
        ajaxUtils.encodeSubmittableFields(ret, null, null, form, null);
        return ret.makeFinal();
    },

In that function, some checking is done to ensure that the form is a valid reference, then a new AjaxUtils is created with no parameters. Typically these would be warning and exception handlers.  Since these handlers are missing, when encodeSubmittable fields runs into a problem and tries to use the handler, the above noted exception occurs.

When encodeSubmittableFields is called, the form reference is set as the parameter expected for an individual form item and the parentItem is null.  I believe the form should be set as the parent item:

        ajaxUtils.encodeSubmittableFields(ret, null, null, null, form, null);

By setting it as the parent item, the encoding logic should be able to handle it correctly.",MYFACES-3178
"We did some security tests for our application and one of the results was that for example the oam.Flash.RENDERMAP.TOKEN should be marked as secure if the page is accessed via https.


http://download.oracle.com/javaee/6/api/javax/servlet/http/Cookie.html#setSecure(boolean)",MYFACES-3177
"After changing the default SEPARATOR_CHAR from colon to something else, using AJAX fails:

org.apache.myfaces.renderkit.html.HtmlAjaxBehaviorRenderer.getComponentId(HtmlAjaxBehaviorRenderer.java:291)

It looks like org.apache.myfaces.renderkit.html.HtmlAjaxBehaviorRenderer assumes that the separator char is always a colon. Here is the method throwing the exception:

    private final String getComponentId(ClientBehaviorContext context, String id) {

        UIComponent contextComponent = context.getComponent();
        UIComponent target = contextComponent.findComponent(id);
        if (target == null) {
            target = contextComponent.findComponent(COLON + id);
        }
        if (target != null) {
            return target.getClientId();
        }
        throw new FacesException(""Component with id:"" + id + "" not found""
 );
 }

Probably, UINamingContainer.getSeparatorChar(FacesContext) should be used instead of COLON.
",MYFACES-3176
" Per the Java doc of http://javaserverfaces.java.net/nonav/docs/2.0/javadocs/javax/faces/component/UIComponent.html#getChildren(), if I set an existing child in the returned children list, the target child should be removed from its previous parent in both children and facet list. While currently MyFaces seems only remove from the children list. And for the facet map, now it only remove from the facet map. Is it a bug for MyFaces ?
    --->
getChildren

public abstract List<UIComponent> getChildren()

Return a mutable List representing the child UIComponents associated with this component. The returned implementation must support all of the standard and optional List methods, plus support the following additional requirements:

The List implementation must implement the java.io.Serializable interface.
Any attempt to add a null must throw a NullPointerException
Any attempt to add an object that does not implement UIComponent must throw a ClassCastException.
Whenever a new child component is added, the parent property of the child must be set to this component instance. If the parent property of the child was already non-null, the child must first be removed from its previous parent (where it may have been either a child or a facet).
Whenever an existing child component is removed, the parent property of the child must be set to null.

After the child component has been added to the view, if the following condition is not met:

FacesContext.isPostback() returns true and FacesContext.getCurrentPhaseId() returns PhaseId.RESTORE_VIEW

Application.publishEvent(javax.faces.context.FacesContext, java.lang.Class, java.lang.Object) must be called, passing PostAddToViewEvent.class as the first argument and the newly added component as the second argument.",MYFACES-3175
"When requesting css resources IE9 sends a header accept ""text/css"" while IE8 or other browsers send ""text/css,*/*"".
When loading a css resource with Richfaces 3.3.3 by using <a4j:loadStyle> HtmlRendererUtils.selectContentType throws an IllegalArgumentException because ""text/css"" is not a supported content type:

{code}
java.lang.IllegalArgumentException: ContentTypeList does not contain a supported content type: text/css
	at org.apache.myfaces.shared_impl.renderkit.html.HtmlRendererUtils.selectContentType(HtmlRendererUtils.java:1676)
	at org.apache.myfaces.renderkit.html.HtmlRenderKitImpl.createResponseWriter(HtmlRenderKitImpl.java:152)
	at org.ajax4jsf.resource.TemplateCSSRenderer.send(TemplateCSSRenderer.java:85)
	at org.ajax4jsf.resource.InternetResourceBase.send(InternetResourceBase.java:374)
	at org.ajax4jsf.resource.ResourceLifecycle.sendResource(ResourceLifecycle.java:221)
	at org.ajax4jsf.resource.ResourceLifecycle.send(ResourceLifecycle.java:148)
	at org.ajax4jsf.resource.InternetResourceService.load(InternetResourceService.java:335)
	at org.ajax4jsf.cache.LRUMapCache.load(LRUMapCache.java:116)
	at org.ajax4jsf.cache.LRUMapCache.get(LRUMapCache.java:87)
	at org.ajax4jsf.resource.InternetResourceService.serviceResource(InternetResourceService.java:195)
	at org.ajax4jsf.resource.InternetResourceService.serviceResource(InternetResourceService.java:141)
	at org.ajax4jsf.webapp.BaseFilter.doFilter(BaseFilter.java:508)
{code}

It does not happen when switching back to IE8 Mode or in other browsers like Firefox 3.6, 4.0, Chrome, Safari.",MYFACES-3174
"The following case:

<composite:interface  componentType=""org.apache.myfaces.view.facelets.tag.composite.CompositeTestComponent"">
</composite:interface>
<composite:implementation>
    <f:event type=""javax.faces.event.PostAddToViewEvent"" listener=""#{cc.postAddToViewCallback}""/>
</composite:implementation>

throws an exception, because component stack is not set correctly when PostAddToView is delivered.",MYFACES-3173
"When an illegal character is encountered an IllegalArgumentException is thrown which explains the nature of the violation as well as the unexpected character.  It would be much easier to address the cause of such an exception, however, if the entire illegal id were presented.",MYFACES-3172
"We have a call to _Lang.forEach in the remove function of the ListenerQueue, this is wrong it should be arrForEach.
Since the API is an api which is not yet used, this is a minor issue (the api is a preparation api for 2.2)
",MYFACES-3171
"
new ArrayList() creates Object [10]  and in some situation it is not necessary. For example, UIInput.addValidator allocates ArrayList of size ten but in real usage nobody adds 10 validators to one component.

Analyze usage of new ArrayList() and myfaces code and use initialCapacity if possible.

i
",MYFACES-3170
"Original message sent to jsr344-experts and users mailing list:

Checking how ui:param and c:set works and its relationship with facelets 
VariableMapper, I notice the original implementation that comes from facelets 
does not work like a page developer should expect. In fact, in some situations
ui:param and c:set implementation is just the same.

The consequence of this situation is there are ways to write code that just 
should not be allowed, because it breaks the intention of those tags. JSF 
implementations should fix this, and maybe if it is required add more 
documentation specifying these tags better.

The first case is c:set. This is the description on facelets taglibdoc:

""... Sets the result of an expression evaluation based on the value of the 
attributes. If 'scope' the is present, but has a zero length or is equal 
to the string 'page', TagException is thrown with an informative error 
message, ensuring page location information is saved. ...""

""... This handler operates in one of two ways.

1. The user has set 'var', 'value' and (optionally) 'scope' attributes.

2. The user has set 'target', 'property', and 'value' attributes.

The first case takes precedence over the second ...""

The buggy behavior of this tag can be seen when it is used in this way:

<c:set var=""someVar"" value=""someValue""/>

Look the part that says ""... if 'scope' the is present, but has zero length or
is equal to the string 'page' ..."" . In JSP, it exists a page context and
in that context, the variable has scope to the current page. Since in that
case there are no template tags, this variable cannot be located on other 
pages included with jsp:include or whatever you use. 

The current implementation of c:set that comes from facelets 1.1.x does not
implements the original intention of this tag in jsp, and instead it uses
VariableMapper instance obtained through FaceletContext (which is instance
of ELContext). Since both JSF 2.0 implementations comes from the original 
facelets 1.1.x code, you can see the following problems: 

cset1.xhtml

<c:set var=""someVar"" value=""someValue""/>
<ui:decorate template=""cset1_1.xhtml"">
   <!-- ... -->
</ui:decorate>

cset1_1.xhtml

<ui:composition>
   <h:outputText value=""#{someVar}""/>
</ui:composition>

The previous code in practice will output ""someValue"", but it should not, 
because ""someVar"" should be only available on the current .xhtml page, in
this case cset1.xhtml. 

Now consider this more realistic example:

cset2.xhtml

<c:set var=""someVar"" value=""someValue""/>
<ui:decorate template=""cset2_1.xhtml"">
   <!-- ... -->
   <ui:define name=""header"">
       <h:outputText value=""#{someVar}""/>
   </ui:define>
</ui:decorate>

cset2_1.xhtml

<ui:composition>
   <c:set var=""someVar"" value=""badValue""/>
   
   <!-- ... something with someVar ... -->
   
   <ui:insert name=""header""/>

</ui:composition>

In practice the output will be ""badValue"", but it should be ""someValue"",
again because c:set intention is to define a value that should be
available only on the current page. This problem is also valid if you
replace ui tags with a composite component and cc:insertXXX tags.

Now take a look at this one:

cset3.xhtml

<c:set var=""someVar"" value=""someValue""/>
<ui:decorate template=""cset3_1.xhtml"">
    <!-- ... code without use ui:param ... -->
</ui:decorate>
<h:outputText value=""#{someVar}""/>

cset3_1.xhtml

<ui:composition>
   <c:set var=""someVar"" value=""badValue""/>
   <!-- ... something with someVar ... -->
</ui:composition>

In practice the output will be again ""badValue"", but it is interesting to note
that if you use ui:param, the example will work again, because a
VariableMapperWrapper is used, discarding the bad value after ui:decorate 
ends.

Things start to get worse when you see how ui:param works:

    String nameStr = this.name.getValue(ctx);
    ValueExpression valueVE = this.value.getValueExpression(ctx, Object.class);
    ctx.getVariableMapper().setVariable(nameStr, valueVE);
        
It is the same thing as c:set!!!!! . 

    if (this.scope != null)
    {
        /* ... Does this exception really has sense ??? ... */
        if (""page"".equals(scopeStr))
        {
            throw new TagException(tag, ""page scope is not allowed"");
        }
        /* ... some stuff that works well ...*/
    } else {
        ctx.getVariableMapper().setVariable(varStr, veObj);
    }

Why this code hasn't been broken before? because nobody has ever use c:set and
ui:param with exactly the same var name. Maybe because on facelets dev 
documentation:

http://facelets.java.net/nonav/docs/dev/docbook.html

says this:

""... Table 3.5. <c:set/> (Avoid if Possible) ...""

Really there are some particular situations where c:set is useful.

There are a lot more examples I tried on ui:param that just don't work. But
the big question is how c:set and ui:param should work?

- c:set using only 'var' and 'value' should define the variable only as 
""page"" scoped, just like the old jstl tag does and the current spec javadoc
says.

- ui:param should define a variable ""template"" scoped, that means it applies
to both template client and templates. It should be propagated through 
ui:composition, ui:decorate, ui:define and ui:insert, but it should not pass
composite components, because this one defines a different template resolution
context (hack only on MyFaces, but valid for JSF). It should not pass on
nested templates case (nested ui:composition or ui:decorate). 

- The facelets taglibdoc of ui:param says:

""... Use this tag to pass parameters to an included file (using ui:include), 
or a template (linked to either a composition or decorator). Embed ui:param 
tags in either ui:include, ui:composition, or ui:decorate to pass the 
parameters. ...""

JSF implementation should do exactly what it says here.

Note all this should work using a more elaborate hack over VariableMapper,
because it is not possible to use another alternative here. One idea is 
create a component that defines a ""local"" page scope just like {} does 
in java code, but maybe is too much for something than in practice should
be simple.

I think this should be fixed. Obviously I'm doing an interpretation of the
few documentation available, but note at the end a ""final word"" should be
done here at spec level to keep compatibility between JSF implementations.
",MYFACES-3169
"When nesting custom composite components, any data bound attributes (eg #{someValueExpression} ) will resolve to null during the PreRenderViewEvent. This only occurs on the second level or deeper nested component (the top-level component in the page works fine).

This same issue occurs on JSF RI 2.0.4, 2.1.x, 2.2.x

I have an eclipse project for upload that reproduces the problem.

I have no cause for the issue at this time.

Cheers,

Matt",MYFACES-3168
"Our current implementation for EventListenerWrapper class inside UIComponent works well but it can be better.

This wrapper is used by UIComponent.subscribeToEvent and unsubscribeFromEvent to handle the case when a listener is the same component, so when the state is restored, the component could be found using UIComponent.getCurrentComponent().

The spec says that @ListenerFor annotations can be used for both components and renderers. Why EventListenerWrapper don't do the same trick for renderers? Since the rendererType does not change over component lifetime (just on init time), we can expect UIComponent.getCurrentComponent().getRenderer(facesContext) return the expected one without need to create it, right?

Other reason to assume the previous trick for renderers, is renderer listeners are not registered for components that does not use the same renderer. This can be checked easily looking on ApplicationImpl.createComponent code.

Additionally, EventListenerWrapper could take into account other cases where the listener implements StateHolde or PartialStateHolder, or even better it can assume on PSS it is not required to save info and restore the listener, because the listener is stateless.

The effect of this optimization is h:outputScript and h:outputStylesheet will return null when saveState() is called and PSS is on, minimizing the state stored by state saving algorithm.",MYFACES-3167
"I am running an application in Geronimo 2.1.7 that requires valid scope and it fails with the following exception

Servlet.service() for servlet jsp  threw exception                                                          
java.lang.IllegalStateException: unknown scope defined: null             
        at                                                               
org.apache.myfaces.el.VariableResolverImpl.resolveVariable(VariableResol 
verImpl.java:71)                                                         
        at                                                               
org.apache.myfaces.el.convert.VariableResolverToELResolver.getValue(Vari 
ableResolverToELResolver.java:93)                                        
        at                                                               
javax.el.CompositeELResolver.getValue(CompositeELResolver.java:53)       
---------------                                                          
---------------                                                          
Servlet.service() for servlet jsp  threw exception                                                          
java.lang.NullPointerException                                           
        at                                                               
javax.el.CompositeELResolver.getValue(CompositeELResolver.java:53)       
        at                                                               
org.apache.myfaces.el.unified.resolver.FacesCompositeELResolver.access$3 
01(FacesCompositeELResolver.java:46)                                     
        at                                                               
org.apache.myfaces.el.unified.resolver.FacesCompositeELResolver$4.invoke 
(FacesCompositeELResolver.java:108)                                      
        at                                                               
org.apache.myfaces.el.unified.resolver.FacesCompositeELResolver.invoke(F 
acesCompositeELResolver.java:148)                                        
        at                                                               
org.apache.myfaces.el.unified.resolver.FacesCompositeELResolver.getValue 
(FacesCompositeELResolver.java:104)                                      
        at                                                               
javax.el.CompositeELResolver.getValue(CompositeELResolver.java:53)       

After investigating on codebase i see that the following is the code snippet where one thread sets the scope and some other thread on the same context unsets scope to null before a call made to  org.apache.myfaces.el.VariableResolverImpl.resolveVariable and it leads the above exception

try
        {
            setScope(requestMap);
            super.setValue(context, base, property, val);
        }
        finally
        {
            unsetScope(requestMap);
        }

So to fix the scope i have changed the following code snippet in the FacesCompositeELResolver to put back previous scope value

try
        {
            tmpScope = getScope(requestMap);
            setScope(requestMap);
            super.setValue(context, base, property, val);
        }
        finally
        {
            if( tmpScope != null){
               setScope(requestMap, tmpScope);
            }else{
	       unsetScope(requestMap);
            }
        }

I am attaching the code with all the changes to fix this issue.Please review and provide your comments.",MYFACES-3166
"This issue is exactly same as MYFACES-2713, but in this case is for UIData instead UIRepeat.

The effect is #{cc} like expressions does not resolve properly the composite parent, because it is not on the EL component stack",MYFACES-3165
"javascript error this.Lang is not defined.
See _BaseRequest.js line 204.
I think it's supposed to be this._Lang",MYFACES-3164
"review methods for performance:

HtmlRendererUtils.renderSelectOptions
RendererUtils.getSelectItemList
RendererUtils.internalGetSelectItemList
",MYFACES-3163
"When the web configuration param ""org.apache.myfaces.HANDLE_STATE_CACHING_MECHANICS"" is set to false, after the first ajax call, all further ajax calls fail.  The failure occurs with a ViewExpiredException on the next ajax call.  The reason is that the sequence number part of the view state is being lost during the first ajax call.  (See HtmlResponseStateManager.getViewState() where baseState is lost when isHandlingStateCachingMechanics(facesContext) returns false.",MYFACES-3162
"The optimization done on MYFACES-3111 that skips save descendants children state, passing the state as null revealed the need to check for null on child states.

This happens only when the row is empty and a new row is created.",MYFACES-3161
"See discussion on:

http://markmail.org/message/kca64ojdvb6em367?q=%5Bcore%5D+performance:+TagAttributeImpl+part+II:+object+allocations

",MYFACES-3160
"I have an usecase with more than one form on a page and heavy use of ajax.
After several ajax requests within one of the forms and after that, another ajax request in one of the other forms, a ViewExpiredException occurs.

A simplified testcase to reproduce this issue is attached. 

Steps to reproduce:
1. http://localhost:8080/jsf2testcase/test.jsf
2. click minimum 21 times (one more time than the default value for numberOfViewsInSession) one of the first two buttons
3. click the third button in the other from
4. ViewExpiredException occurs

If you only use the two buttons within the first form, the ViewExpiredException never occurs, so i think this is a bug. 


To use only one form is no option for my usecase and to increase the number of views in session is also no good solution for this, because this only delays the problem.",MYFACES-3159
"After updating to MyFaces 1.2.10 I still see following error in Tomcat log after stopping my web app:

26.05.2011 12:33:54 org.apache.catalina.loader.WebappClassLoader clearThreadLocalMap
SCHWERWIEGEND: The web application [/fliti] created a ThreadLocal with key of type [org.apache.myfaces.el.convert.VariableResolverToELResolver$1] (value [org.apache.myfaces.el.convert.VariableResolverToELResolver$1@5c3bb813]) and a value of type [java.util.HashSet] (value [[]]) but failed to remove it when the web application was stopped. This is very likely to create a memory leak.

I thought this was solved with bug  MYFACES-3001""Memory Leak in MyFaces 1.2 related to RuntimeConfig ThreadLocal""
but apparently only the issue with org.apache.myfaces.config.RuntimeConfig has been fixed.",MYFACES-3158
"Current specification for lifecycles methods:
1) processDecodes
2) processValidators
3) processUpdates
4) encodeAll
4) encodeBegin

explicitly says that:

1) If the rendered property of this UIComponent is false, skip further processing.
2) call pushComponentToEL

But in that order of invocations it is impossible to achieve rendered like this:

<h:outputText rendered=""#{component.id eq 'outputTextId'}"" id=""outputTextId"" />

i.e. any rendered ValueEpression based on component itself. In Myfaces  we should implement in in reverse order, because specified behaviour is buggy.


Please see this mail thread: http://www.mail-archive.com/dev@myfaces.apache.org/msg53300.html

and

http://java.net/jira/browse/JAVASERVERFACES_SPEC_PUBLIC-1002

for details.",MYFACES-3157
"It looks like this issue is the same as MYFACES-3080 and MYFACES-3115, which was solved in MyFaces 2.0.6, but now in 2.1.0 it appears again.

A testcase to reproduce is attached.

Do the following steps:
1.: call http://localhost:8080/jsftest/test.jsf
2.: fill something into the input field and press the ""Render""-Button
3.: you can see in the infobox at top, that no begin-event is recieved. With the current 2.0.6-SNAPSHOT a begin-event is recieved, which is the correct behaviour.",MYFACES-3156
"Subtask of MYFACES-3130 [PERF] Avoid unnecessary AbstractList$Itr instances.

Myfaces  use getFacetsAndChildren() iterator for iterating over children in lifecycle methods process(Decodes,Validation,...). 

In typical scenario, one invocation of getFacetsAndChildren() creates:
1) one instance of iterator from getFacets().values().iterator()
2) one instance of iterator from getChildren().iterator()
3) one instance of _FacetsAndChildrenIterator

we can avoid 2) and 3) with index-based iteration over getChildren(). It will also run faster (see MYFACES-3130).",MYFACES-3155
"UIDebug#encodeBegin resolves the current action-url and just adds '?' for its own parameters.
-> if the url already contains parameters, the url contains two '?' in the end which breaks the javascript. ",MYFACES-3154
,MYFACES-3153
"There is a subtle change on javax.faces.application.StateManager, that was shown after the cleanup of state saving algorithm. 

The descriptions from writeState and saveSerializedView changed to fallback the methods introduced in JSF 1.2, which has sense.",MYFACES-3152
"init-param from webapp context cannot change - it is sufficient read it once in constructor (ApplicationImpl for example)

New problem (new in 2.1) is ""great"" javax.faces.HONOR_CURRENT_COMPONENT_ATTRIBUTES param for pushComponentToEL and popComponentFromEL - at least we can cache it in component (because push and pop are called more then ones during one lifecycle) and maybe cache it's value also in org.apache.myfaces.context.servlet.ServletExternalContextImplBase.getInitParameter(String)

I have about ~ 90 000 invocations of getInitPaparameter in my test case in one request/response and that is not cheap.",MYFACES-3151
"Consider 1000 components in view without any f:facet. 

During VDL.buildView Facelets call  for each component ComponentHandler.getFacetName(FaceletContext, UIComponent) and that creates 3 calls of Map.get():

1) _ComponentAttributesMap.getPropertyDescriptor(String)
2) _ComponentAttributesMap.getUnderlyingMap().get()
3) UIComponent.getValueExpression(String)

3000 ""empty"" invocations in buildView withnout match.

Suggestions:
* do not use Component.attribute for that marker (comes from FacetHandler)
* replace map.get calls with property for performance reasons
* use a stack or property on AbstractFaceletContext if possible",MYFACES-3150
"When using HTML entities (like &copy;) in a facelet page, they are removed in the final HTML by MyFaces. When using Mojarra, they are kept.

Current workaround: use UTF-8 as encoding of the local xhtml files and directly use the HTML entities' values (© instead of &copy;).",MYFACES-3149
"Log message ""PanelGrid ... has not enough children""  with Level.FINE in Production in HtmlGridRendererBase.renderChildren",MYFACES-3148
"#1 the message isn't internationalized
the message is hardcoded:

throw new ViewExpiredException(""No saved view state could be found for the view identifier: "" + viewId, viewId)

#2 the message doesn't make a lot of sense
#2.1 #getMessage concatenate two strings without a blank
#2.2 the original message text gets concatenated with the view-id and #getMessage adds the view-id again to the beginning of the message.

this results in a message which isn't very useful - e.g.:

/page.xhtmlNo saved view state could be found for the view identifier: /page.xhtml

-> since ViewExpiredException also provides #getViewId we can remove the overridden #getMessage completely.
workaround:
just use the exception as a marker and use a custom message",MYFACES-3147
"JSF 2.0 rev A spec says that ui:fragment has rendered property: If this attribute's value is ""false"" or the value is an EL expression that evaluates to ""false"", the fragment is not rendered in the page.

Because ui:fragment is component-only (no renderer) it should returns from getRendersChildren() true to satisfy specified behaviour. 

http://java.net/jira/browse/JAVASERVERFACES_SPEC_PUBLIC-661",MYFACES-3146
"submitting commandButton buttons using javascript code ""document.getElementById('jsfsearch').submit()"" doesn't send all values in the form to the tomcat when using Mozilla. whereas the same code works on IE.

===============================================
 <h:form id=""jsfsearch"">

 <h:commandButton id=""abutton"" style=""font:
bold 100% 'trebuchet ms',helvetica; font-size: 18px;background-color:rgb(201,200
,202); border-color:rgb(234,40,57); border-style:thin;"" immediate=""true"" onclick
=""return submitSearch();"" action=""#{searchController.simple}"" value=""#{searchmes
sages['simplesearch']}""/>

 <h:inputText id=
""search_Srch1"" value=""#{searchController.vSrch1}""  rendered=""#{searchContr
oller.searchparameter1}"" />
</h:form>",MYFACES-3145
"UIComponentBase uses getRenderer(): Renderer in five methods:
1) decode
2) encodeBegin
3) encodeChildren
4) encodeEnd
50 getClientId

getting the renderer is not cheap if you have thousands component in view. 

Cache renderer instance in UIComponentBase (Trinidad UIXComponentBase does it already)

",MYFACES-3144
"if f:metadata and f:viewParam are in a template instead of a template-client, it gets parsed incorrectly. so there is no TagUnit instance for it and no UIPanel for f:metadata.
-> ViewMetadata#createMetadataView doesn't work correctly (in ViewMetadata#getViewParameters the call root.getFacet (UIViewRoot.METADATA_FACET_NAME) returns a UIViewParameter directly instead of a Metadata node with UIViewParameter as a child).",MYFACES-3143
"Long time ago I tried to make h:outputScript and h:outputStylesheet implement PartialStateHolder, to reduce the view state to the minimal. This works well, as long as you don't use javax.faces.FULL_STATE_SAVING_VIEW_IDS param, or in other words, you'll have views that require normal state saving, written in facelets and using those tags (a very exotic case indeed, since MyFaces PSS works very well).

We need to remove the marker for PartialStateHolder on both renderers, but note there is still a change to fix it correctly from UIComponent, checking if the listener comes from a renderer and if so, restore it properly (calling getRenderer() or something like that).",MYFACES-3142
"This is due, of course, to http://java.net/jira/browse/JAVASERVERFACES_SPEC_PUBLIC-921, but the simple interim solution is a custom serialization approach.  Attaching a patch to implement and test same, which necessarily incorporates changes from MYFACES-3140 as well.",MYFACES-3141
Per spec this list should be ordered as dictated by the ordinal values of the FacesMessage.Severity (emulated) enum values.  Attaching testcase proving it is not (additionally testing contract of VALUES_MAP) and patch to address issue.,MYFACES-3140
,MYFACES-3139
"ResponseStateManager implementation deals with state / structure logic, but this is not valid anymore, because that is now an implementation detail. 

We need to clean up all that code and just let a simple and efficient implementation there, so we can move to the next step.

Additionally, it could be good to create StateCacheFactory abstraction to deal with client /server differences, and divide StateCacheImpl into two, apply strategy pattern (because now we understand clearly how the algorithm should work).

Now StateCache is StateCache<K,V> where K is the token that allow it to restore the state V.",MYFACES-3138
"See:

http://markmail.org/message/g7bwhgcf4etl5itv?q=[core]+Enhancements+to+State+Saving+Caching+Algorithm",MYFACES-3137
"1) method UIComponentBase.getRendererType is the most frequent, because all encodeBegin, getRendersChildren and encodeAll l try to locate renderer

2) getRendererType uses StateHelper.eval - but can be renderType ValueExpression? If not, change StateHelper.eval to StateHelper.get

3) should rendererType even be part of state saving? Each component I've ever seen has setRendererType(""com.foo.renderer"") in  constructor and/or VDL calls setRendererType() after calling Application.createComponent(): If rendererType is not part of state saving, replace StateHelper with attribute

4) Cache getRenderer(FacesContext context) result anyway (I'll create separate issue for this)

",MYFACES-3136
patch forthcoming,MYFACES-3135
"It is necessary to do some cleanup and add more junit tests to state saving code in MyFaces. 

For PSS code, we just copied some parts of the original algorithm found on JspStateManagerImpl because just PSS was a very challenging task and the intention was prevent break existing code.

But now we have a stable code in this part, so it is the right moment to do some cleanup and then change the code to fit user's needs.",MYFACES-3134
"When a composite component is used inside a datatable, the resolving of the general ""cc""-attribute does not work consistently. For value bindings (with e.g. inputText) everything seems to be fine, but when used inside an ""actionListener""-attribute or an ""action""-attribute (with e.g. commandButton) the resolvement of ""cc"" fails. I've isolated the problem to the method ""CompositeComponentELUtils.getCompositeComponentBasedOnLocation(..)"" which checks if the parent component in the component stack is a ""composite component"". The ""HtmlDataTable"" element is not recognized as such.",MYFACES-3133
"When using IceFaces an NPE is encountered when one of the lower-level Writer calls is made against its DomResponseWriter (specifically this was a result of HtmlRendererUtils.renderSelectOptions() calling writer.write(TABULATOR)).  This is because java.io.Writer delegates all forms of #write() back to the abstract write(char[], int, int) variant.  MyFaces' version of ResponseWriterWrapper implements write(int) directly, whereas the spec actually not does declare this method as being implemented here and thus allows the default implementation from Writer to delegate to the char[], int, int version.  Since the MyFaces version calls getWrapped().write(int), an NPE is thrown that would be avoided if IceFaces were permitted to proceed through the call sequence as implicitly promised by the spec.  True implementation of the spec requires deleting each of:

* append(char)
* append(CharSequence)
* append(CharSequence, int, int)
* write(char[])
* write(int)
* write(String)
* write(String, int, int)",MYFACES-3132
"objects that start with <table> disappear when they are selected for render during an ajax call.
I debugged the problem and found it occurs in the _outerHTMLNonCompliant function.  When tagName is ""table"", _buildTableNodes is called (it really shouldn't be called in this case).
In _buildTableNodes, dummyPlaceHolder.innerHTML is set to ""<table><table>STUFF</table></table>"".
ie6 changes this to ""<table><tbody></tbody><table>STUFF</table></table>"" so evalNodes is set to the empty tbody and thus the table sent back from the server is lost.",MYFACES-3131
"Similar issue: MYFACES-3129

loop from java 5:

for (Object object: objects)

creates new instance of AbstractList$Itr, if objects are instance of ArrayList. 

Similar situation is with explicit .iterator() call.

In my testcases, it is about ~ 100 000 instances per request/response. Creation itself is cheap, but triggers GC lately.

I suggest to use old index-style for (i = 0; i < childCount;   i++) if possible. Are there any rawbacks of index-based iteration? 
Children is List and as implementation detail we  know that it is instance of ArrayList.

",MYFACES-3130
"To reduce the number of AbstractList$Itr instances, a good hint is call for getChildCount() or getFacetCount() before traverse. ",MYFACES-3129
"Hi.

I'm working in a project with Myfaces 2.0.5 (or 2.1.0) and I have had a problem with a custom ResourceResolver.

I have coded a ResourceResolver that dynamically builds an XHTML file when the engine asks him to resolve a certain URL.

To achieve this, I have update the web.xml as follows:

  <context-param>
    <param-name>javax.faces.FACELETS_VIEW_MAPPINGS</param-name>
    <param-value>*.test;*.xhtml</param-value>
  </context-param>
 
  <context-param>
      <param-name>javax.faces.FACELETS_RESOURCE_RESOLVER</param-name>
      <param-value>com.test.view.facelets.CustomResourceResolver</param-value>
  </context-param>

My CustomResourceResolver is very simple:

package com.test.view.facelets;

import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLConnection;
import java.net.URLStreamHandler;

import javax.faces.view.facelets.ResourceResolver;

public class CustomResourceResolver extends ResourceResolver {

    private ResourceResolver innerResourceResolver;
   
    private String viewSource = "".... xhtml of the test page ...."";
   
    public CustomResourceResolver(ResourceResolver resourceResolver){
        this.innerResourceResolver = resourceResolver;
    }
   
    @Override
    public URL resolveUrl(String path) {
        System.out.println(""Buscando la URL del recurso: "" + path);
        URL result = null;
       
        if(path.endsWith("".test"")){
            try{
                result = getUrlForResourceAsStream(path);
            }catch(Exception e){
                System.out.println(""Unexpected error while obtaining the URL from resource "" + path);
                e.printStackTrace(System.out);
            }
           
        }else{
            result = this.innerResourceResolver.resolveUrl(path);
        }
       
        return result;
    }

    private URL getUrlForResourceAsStream(String path) throws MalformedURLException {
        URLStreamHandler handler = new URLStreamHandler() {
            protected URLConnection openConnection(URL u) throws IOException {
                final String file = u.getFile();
                return new URLConnection(u) {
                    public void connect() throws IOException {
                    }

                    public InputStream getInputStream() throws IOException {
                        System.out.println(""Opening internal url to "" + file);
                       
                        try{
                            System.out.println(""Generando el InputStream de la pagina:\n"" + viewSource);
                            return new ByteArrayInputStream(viewSource.getBytes(""UTF-8""));
                        }catch (Exception e) {
                            e.printStackTrace();
                            throw new RuntimeException(""Unexpected error while obtaining the view"", e);
                        }
                    }
                };
            }
        };
        return new URL(""internal"", null, 0, path, handler);
    }
}


As you can see, the code is very simple. When the suffix matches the pattern "".test"", the Resolver creates a mock URL with a backing ByteArrayInputStream. If the suffix does not matches the pattern, the normal ResourceResolver is invoked.

With this configuration and code, when I request the URL: http://xxxxxx:yyyy/zzzzz/anything.test  the application fails with error:

The problem is this:

java.lang.NullPointerException
    at java.lang.StringBuilder.<init>(StringBuilder.java:92)
    at org.apache.myfaces.view.facelets.FaceletViewDeclarationLanguage.getRenderedViewId(FaceletViewDeclarationLanguage.java:1630)
    at org.apache.myfaces.view.facelets.FaceletViewDeclarationLanguage.buildView(FaceletViewDeclarationLanguage.java:279)
    ....

The executes the viewHandler.createView(""xxxx.test"") method. It internally calls the getViewHandlerSupport().calculateViewId(context, viewId); method to obtain the viewId, and this method calls DefaultViewHandlerSupport.checkResourceExists(FacesContext context, String viewId), that checks the physical file of this resource, but there are not any file for this resource!!!! so it return false, and the viewId of the resulting ViewRoot is assigned to null.

This causes a NullPointerException later, when the code executes the ViewDeclarationLanguage.buildView(FacesContext context, ViewRoot viewRoot).

If I change the Myfaces implementation with Mojarra 2.0.4, it works perfectly, so I think that the problem is in the implementation.

I can't extend any class of interface of Myfaces, because my application must not be coupled to a specific implementation.

I have attached two web projects, one with Myfaces configuration, that fails, and the same project with Mojarra configuration, that works

",MYFACES-3128
"Common problem:
<h:selectOneMenu value=""#{bean.selectedValue}"" > <!-- bean.selectedValue has value 'C' -->
  <f:selectItem itemValue=""A"" ... />
  <f:selectItem itemValue=""B"" ... />

if selectedValue is null or not  ""A"" or ""B"", combo is rendered, but only looks like ""A is selected"", because browser (firefox, chrome) show the first OPTION element as selected. Then after next submit, the real value selection occurs and ValueChangeEvent is delivered.

User don't expect that because he/she didn't touch the combo.


Suggestion : render a warning in PROJECT_STAGE Development",MYFACES-3127
"<h:panelGroup property=""foo"">
  <h:outputLabel rendered=""#{component.parent.property == 'foo'} />

don't work and label is  not rendered.

Reason: 
RendererUtils.renderChild contains code:

if (!child.isRendered()) return;
child.encodeBegin(facesContext);

-> rendering is skipped before method pushComponentToEL is called.
",MYFACES-3126
"In my particular example (which I may or may not be able to extract and reproduce), I have:

<h:form>
  <f:validateBean>
    <h:inputText />
    ...
  </f:validateBean>
</h:form>

In this example, the form's children are marked for deletion; then, when ValidatorTHDelegate sees that the parent is not a new component, it bails out, thus failing to invoke the next handler and re-add the child components.  When the deletion is finalized the form is left with no children, which incidentally makes it impossible to complete the AJAX request as designed, since the component to re-render no longer exists!  I believe this would only be a problem in wrapping mode.  I have verified that removing the validateBean tag causes the form's structure to be preserved.",MYFACES-3125
"With JSF 2.1 there are two hints: 
1) String ""javax.faces.visit.SKIP_ITERATION""
2) javax.faces.component.visit.VisitHint.SKIP_ITERATION

In RESTORE_VIEW use both hints for visitor, because third party renderkits can use one of them.

It seems that latest mojarra uses both too.",MYFACES-3124
,MYFACES-3123
"With the introduction of JSF 2.1 .view.xml extension, it is necessary to put proper schemas on META-INF/schema path, so users can just take and use them.",MYFACES-3122
,MYFACES-3121
,MYFACES-3120
"As reported in MYFACES-2466 (whose summary I copied here), I am encountering the NPE on the access of holderList in what is currently line 1917 of UIComponentBase whenever I use a ComponentSystemEventListener on UIViewRoot.  Specifically I am subscribing to PreRenderViewEvent and the problem occurs restoring the view regardless of whether I unsubscribe the listener e.g. after RENDER_RESPONSE.

More information:
_systemEventListenerClassMap is null when the method is called, thus the map is reinstantiated so of course the value looked up and assigned to holderList is null.

Now I have to go use Mojarra until this is fixed.  :(",MYFACES-3119
"while most of the code runs just fine with ie9 we have some smaller issues in the forEach handling and the way ie9 treats the treeWalker optimizations which vary slightly from the other browsers.
We have to work the nuances and fixes in.
",MYFACES-3118
"Problem:

open two tabs (or windows) in browser with view:

<h:body>
        <h:form id=""formId"">
            <h:commandButton value=""Click me 20x!"" />
        </h:form>
 </h:body>

then click the button on the first tab 20x or more -> then click the button on the second tab -> you will get the most beloved ViewExpiredException.


Reason:
oam.SerializedViewCollection drops the saved state for 2. tab from map. 


Suggestion:
remove the successfully restored view state from map. This can be done, because each SerializedViewKey is unique over *all requests* for one HttpSession -  see DefaultFaceletsStateManagementHelper.nextViewSequence(FacesContext). Because each request has unique sequence number, we can the ""just restored"" one remove from the map, because it can never come from  client again.

Open question: the previous statement is true except the double submit problem: 	JAVASERVERFACES_SPEC_PUBLIC-559. In this case, server can process same request (with the same sequence number) twice.",MYFACES-3117
"I have a managedbean which initializes some services:
@ManagedBean(eager = true)
@ApplicationScoped
public class Services {
 private SecurityContext securityContext;
 @PostConstruct
 public void init() {
  securityContext = new SecurityContext();
 }
}

In another bean i want to inject a ManagedProperty of type SecurityContext (applicationscoped as well)
@ManagedBean(eager = true)
@ApplicationScoped
public class Validator{	
 @ManagedProperty(""#{services.securityContext}"")
 private SecurityContext securityContext;
 //irrelevant code ...
 public void setSecurityContext(SecurityContext securityContext) {
  this.securityContext = securityContext;
 }
}

This is working with latest version of the reference implementation (mojarra 2.1.0). I was trying to use MyFaces because mojarra has another ugly bug, which initilizes application scoped beans twice.

On application startup myfaces cannot init Validator due to this exception:

INFO: Creating instance of com.eskupina.webrepositoryinterface.Services
26.04.2011 12:20:14 org.apache.myfaces.config.annotation.TomcatAnnotationLifecycleProvider newInstance
INFO: Creating instance of com.eskupina.webrepositoryinterface.Validator
26.04.2011 12:20:14 org.apache.myfaces.webapp.AbstractFacesInitializer initFaces
SCHWERWIEGEND: An error occured while initializing MyFaces: This method is not supported during startup
java.lang.UnsupportedOperationException: This method is not supported during startup
	at org.apache.myfaces.context.servlet.StartupServletExternalContextImpl.getRequestMap(StartupServletExternalContextImpl.java:149)
	at org.apache.myfaces.config.ManagedBeanBuilder.getScope(ManagedBeanBuilder.java:540)
	at org.apache.myfaces.config.ManagedBeanBuilder.getNarrowestScope(ManagedBeanBuilder.java:462)
	at org.apache.myfaces.config.ManagedBeanBuilder.isInValidScope(ManagedBeanBuilder.java:433)
	at org.apache.myfaces.config.ManagedBeanBuilder.initializeProperties(ManagedBeanBuilder.java:322)
	at org.apache.myfaces.config.ManagedBeanBuilder.buildManagedBean(ManagedBeanBuilder.java:169)
	at org.apache.myfaces.webapp.AbstractFacesInitializer._createEagerBeans(AbstractFacesInitializer.java:221)
	at org.apache.myfaces.webapp.AbstractFacesInitializer.initFaces(AbstractFacesInitializer.java:138)
	at org.apache.myfaces.webapp.StartupServletContextListener.contextInitialized(StartupServletContextListener.java:111)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4135)
	at org.apache.catalina.core.StandardContext.start(StandardContext.java:4630)
	at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:791)
	at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:771)
	at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:546)
	at org.apache.catalina.startup.HostConfig.deployWAR(HostConfig.java:905)
	at org.apache.catalina.startup.HostConfig.deployWARs(HostConfig.java:740)
	at org.apache.catalina.startup.HostConfig.deployApps(HostConfig.java:500)
	at org.apache.catalina.startup.HostConfig.start(HostConfig.java:1277)
	at org.apache.catalina.startup.HostConfig.lifecycleEvent(HostConfig.java:321)
	at org.apache.catalina.util.LifecycleSupport.fireLifecycleEvent(LifecycleSupport.java:119)
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1053)
	at org.apache.catalina.core.StandardHost.start(StandardHost.java:785)
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1045)
	at org.apache.catalina.core.StandardEngine.start(StandardEngine.java:445)
	at org.apache.catalina.core.StandardService.start(StandardService.java:519)
	at org.apache.catalina.core.StandardServer.start(StandardServer.java:710)
	at org.apache.catalina.startup.Catalina.start(Catalina.java:581)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:289)
	at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:414)
26.04.2011 12:20:14 org.apache.catalina.core.StandardContext start
SCHWERWIEGEND: Error filterStart
26.04.2011 12:20:14 org.apache.catalina.core.StandardContext start

",MYFACES-3116
"Martin Koci reported about a missing context.source.id in the event handling. I rather suspect this not being a bug since we had some name fallback in 2.0.4 which was removed to due to being not entirely correct this needs to be investigated.
",MYFACES-3115
"We use internal _mfInteral params for jsf.jax.response in our context var. The culprit is jsf.ajax.response is a public api and the response call definitely has to perform as well without those params if called separately.
This needs to be fixed.
Te _mfInternal params per se are not needed but they help us to deal with certain corner conditions regarding detached elements and forms.
",MYFACES-3114
"IMO the <f:ajax> delivers a bit too much.

For instance, take ""keyup"":
it already delivers the KEYUP when you tab into a field that has <f:ajax even=""keyup"" ... />

I was not expecting that - not sure if the SPEC is silent.... but the behavior is odd (especially when tabbing into the ""ajaxified"" field 
(also there is no way to restrict the actual list of KEYs (e.g. filter on number keys)",MYFACES-3113
"In my ""newEmployee.xhtml"" I am using a custom facelets component, like:


<kickstart:inputPassword id=""password"" value=""#{createEmployee.employee.password}"" valueChangeListener=""#{createEmployee.checkPassword}"" />

The inputPassword.xhtml looks like:
<html xmlns=""http://www.w3.org/1999/xhtml""
      xmlns:f=""http://java.sun.com/jsf/core""
      xmlns:h=""http://java.sun.com/jsf/html""
      xmlns:ui=""http://java.sun.com/jsf/facelets""
      xmlns:composite=""http://java.sun.com/jsf/composite"">
  <head/>
  <body>

    <composite:interface>
      <composite:attribute name=""id"" required=""true"" />
      <composite:attribute name=""value"" required=""true"" />
      <composite:attribute name=""valueChangeListener"" required=""true"" method-signature=""void f(javax.faces.event.ValueChangeEvent)"" targets=""inputField"" />
      <composite:editableValueHolder name=""inputField"" />
    </composite:interface>

    <composite:implementation>
    
    <div id=""#{cc.attrs.id}"">

          <h:inputSecret id=""inputField"" required=""true"" value=""#{cc.attrs.value}"" valueChangeListener=""#{cc.attrs.valueChangeListener}"">
             <f:ajax event=""valueChange"" execute=""@this"" render=""passwordHint pageForm:globalMessages"" />
          </h:inputSecret>
          <h:outputText id=""passwordHint"" />
    </div>


    </composite:implementation>
  </body>
</html>



When I type in a value, and move the focus away (to trigger the valueChange event), I am getting the below stack-trace in the console:



SEVERE: java.lang.IllegalArgumentException: Cannot convert /newEmployee.xhtml at line 39 and column 160 valueChangeListener=""#{createEmployee.checkPassword}"": org.apache.webbeans.el.WrappedValueExpression@168ae94f of type class org.apache.myfaces.view.facelets.el.TagValueExpressionUEL to class javax.el.MethodExpression
javax.faces.event.AbortProcessingException: java.lang.IllegalArgumentException: Cannot convert /newEmployee.xhtml at line 39 and column 160 valueChangeListener=""#{createEmployee.checkPassword}"": org.apache.webbeans.el.WrappedValueExpression@168ae94f of type class org.apache.myfaces.view.facelets.el.TagValueExpressionUEL to class javax.el.MethodExpression
	at javax.faces.event.MethodExpressionValueChangeListener.processValueChange(MethodExpressionValueChangeListener.java:100)
	at javax.faces.event.ValueChangeEvent.processListener(ValueChangeEvent.java:66)
	at javax.faces.component.UIComponentBase.broadcast(UIComponentBase.java:344)
	at javax.faces.component.UIInput.broadcast(UIInput.java:333)
	at javax.faces.component.UIViewRoot._broadcastAll(UIViewRoot.java:972)
	at javax.faces.component.UIViewRoot.broadcastEvents(UIViewRoot.java:273)
	at javax.faces.component.UIViewRoot._process(UIViewRoot.java:1284)
	at javax.faces.component.UIViewRoot.processValidators(UIViewRoot.java:757)
	at org.apache.myfaces.lifecycle.ProcessValidationsExecutor.execute(ProcessValidationsExecutor.java:34)
	at org.apache.myfaces.lifecycle.LifecycleImpl.executePhase(LifecycleImpl.java:171)
	at org.apache.myfaces.lifecycle.LifecycleImpl.execute(LifecycleImpl.java:118)
	at org.apache.myfaces.extensions.cdi.jsf2.impl.listener.phase.CodiLifecycleWrapper.execute(CodiLifecycleWrapper.java:93)
	at javax.faces.webapp.FacesServlet.service(FacesServlet.java:189)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:546)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1283)
	at com.ocpsoft.pretty.PrettyFilter.doFilter(PrettyFilter.java:115)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1254)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:481)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:119)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:516)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:230)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:956)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:411)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:188)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:891)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:117)
	at org.eclipse.jetty.server.Dispatcher.forward(Dispatcher.java:268)
	at org.eclipse.jetty.server.Dispatcher.forward(Dispatcher.java:99)
	at com.ocpsoft.pretty.PrettyFilter.doFilter(PrettyFilter.java:107)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1254)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:481)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:119)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:516)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:230)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:956)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:411)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:188)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:891)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:117)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:247)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:151)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:114)
	at org.eclipse.jetty.server.Server.handle(Server.java:353)
	at org.eclipse.jetty.server.HttpConnection.handleRequest(HttpConnection.java:598)
	at org.eclipse.jetty.server.HttpConnection$RequestHandler.content(HttpConnection.java:1076)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:805)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:218)
	at org.eclipse.jetty.server.HttpConnection.handle(HttpConnection.java:427)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:510)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.access$000(SelectChannelEndPoint.java:34)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:40)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:450)
	at java.lang.Thread.run(Thread.java:680)
Caused by: java.lang.IllegalArgumentException: Cannot convert /newEmployee.xhtml at line 39 and column 160 valueChangeListener=""#{createEmployee.checkPassword}"": org.apache.webbeans.el.WrappedValueExpression@168ae94f of type class org.apache.myfaces.view.facelets.el.TagValueExpressionUEL to class javax.el.MethodExpression
	at com.sun.el.lang.ELSupport.coerceToType(ELSupport.java:397)
	at com.sun.el.ValueExpressionImpl.getValue(ValueExpressionImpl.java:222)
	at org.apache.webbeans.el.WrappedValueExpression.getValue(WrappedValueExpression.java:68)
	at org.apache.myfaces.view.facelets.el.TagValueExpression.getValue(TagValueExpression.java:85)
	at org.apache.myfaces.view.facelets.el.LocationValueExpression.getValue(LocationValueExpression.java:90)
	at org.apache.myfaces.view.facelets.el.ValueExpressionMethodExpression.getMethodExpression(ValueExpressionMethodExpression.java:92)
	at org.apache.myfaces.view.facelets.el.ValueExpressionMethodExpression.invoke(ValueExpressionMethodExpression.java:58)
	at org.apache.myfaces.view.facelets.el.TagMethodExpression.invoke(TagMethodExpression.java:83)
	at javax.faces.event.MethodExpressionValueChangeListener.processValueChange(MethodExpressionValueChangeListener.java:78)
",MYFACES-3112
"In my test case, method UIData.saveDescendantComponentStates allocates ~ 310 000 instances during one request/response. Most of them are empty List (+ Object []) and AbstractList$Itr

Problems:

1) The current code reminds me the old state saving style from JSF 1.X - a big table of (mostly empty) arrays.

2) Using getChildren().iterator() creates new instance of AbstractList$Iter. 

3) Saving state of transient and state saving of EditableValueHolder: I don't see any mention of transient in setRowIndex JavaDoc.

Suggestions:

ad 1) JSF 2.0 and StateHelper is Map-based. Use map here or even the StateHelper directly. Create EditableValueHolderState instances only and not empty arrays and List. The saved state for a row with non-EditableValueHolder children must be null and must not allocate any objects.

ad 2) Use the old fashion way with indices; that will avoid thousand of unnecessary iterators instances.

ad 3)  It seems that mojarra saves per-row state for every EVH, even for transients.",MYFACES-3111
"In JSF 2.1 now it is possible to do this:

mycompositecomponent.xhtml

<cc:implementation>
   <h:commandButton image=""#{resource['this:myimage.jpg']}""/>
</cc:implementation>

note the word 'this' on the EL expression",MYFACES-3110
Function publishEvent is called with UIComponent.class instead of source.getClass according to spec java doc application.publishEvent.,MYFACES-3109
"Speaking with Michi Kurz, he told me that the MyFaces ResourceHandlerImpl's ResourceHandlerCache does not honor the localePrefix.

The problem is that if you have e.g. an english version and a german version of a resource and you serve the english version first, it will be cached and the german version will never be served, even if the locale is german.

I created a simple test case, which shows this problem - check it for details!",MYFACES-3108
,MYFACES-3107
"I'm migrating my project from JSF 1.2 to JSF2 and I was using a <ui:include src=""#{guiMB.viewID}"" /> tag wrapped in a <a4j:outputPanel> tag (from RichFaces) and rendering the a4j:outputPanel via ajax. However in JSF2 this doesn't load the resources for the page i'm including. 

So anything i include dynamically like this doesn't have any of the styling or javascript that should be loaded with it. 

I have created a test project which demonstrates the issue so i'll attach for you to replicate the issue.",MYFACES-3106
"http://www.nfjsone.com/blog/ed_burns/2009/09/dealing_gracefully_with_viewexpiredexception_in_jsf2.

MYFACES-3101 patch solves that for HTML request. 

For partial/ajax request/response new problems appear: if you try to use redirect like:

/viewExpired.xhtml?faces-redirect=true

myfaces throw NPE in org.apache.myfaces.context.servlet.PartialViewContextImpl.getPartialResponseWriter(), because 

_facesContext.getRenderKit() returns null in this case (no view root is available)

Second easy to fix problem is line facesContext.getViewRoot().getViewId().equals(newViewId) in NavigationHandlerImpl.handleNavigation(FacesContext, String, String) in case of navigationCase.isRedirect().",MYFACES-3105
"We have followed your documentation on the wiki in order to enable EL 2.2 (http://wiki.apache.org/myfaces/HowToEnableEl22), it doesn't work on Websphere 7. 
- we have added the 2 jars (el-api-2.2.jar and el-impl-2.2.jar from Glassfish implementation) in th classpath of the web application
- we have configured the web.xml like this :
          <context-param>
              <param-name>org.apache.myfaces.EXPRESSION_FACTORY</param-name>
              <param-value>com.sun.el.ExpressionFactoryImpl</param-value>
          </context-param>
          [...]
          <listener>
              <listener-class>org.apache.myfaces.webapp.StartupServletContextListener</listener-class>
          </listener>

The web application starts without errors,

Problem :
1) When the web application starts we have this first exception :

[04/04/11 11:24:39:136 CEST] 0000000a DefaultFacesC I   Reading standard config META-INF/standard-faces-config.xml
[04/04/11 11:24:39:277 CEST] 0000000a DefaultFacesC I   Reading config /WEB-INF/faces-config.xml
[04/04/11 11:24:39:823 CEST] 0000000a ExternalSpeci I   MyFaces Bean Validation support disabled
[04/04/11 11:24:39:855 CEST] 0000000a ApplicationIm I   Couldn't discover the current project stage, using Production
[04/04/11 11:24:39:855 CEST] 0000000a FacesConfigur I   Serialization provider : class org.apache.myfaces.shared_impl.util.serial.DefaultSerialFactory
[04/04/11 11:24:39:855 CEST] 0000000a DefaultLifecy I   Using LifecycleProvider org.apache.myfaces.config.annotation.AllAnnotationLifecycleProvider
[04/04/11 11:24:39:933 CEST] 0000000a FfdcProvider  W com.ibm.ws.ffdc.impl.FfdcProvider logIncident FFDC1003I: Incident FFDC émis sur C:\IBM\SDP75\runtimes\base_v7\profiles\was70profile2\logs\ffdc\server1_48704870_11.04.04_11.24.39.8706071861720806063404.txt com.ibm.ws.webcontainer.webapp.WebApp.notifyServletContextCreated 1341
[04/04/11 11:24:39:933 CEST] 0000000a webapp        E com.ibm.ws.webcontainer.webapp.WebApp notifyServletContextCreated SRVE0283E: Exception interceptée lors de l''initialisation du contexte : {0}
                                 java.lang.VerifyError: javax/servlet/jsp/JspApplicationContext.addELResolver(Ljavax/el/ELResolver;)V
	at org.apache.myfaces.webapp.Jsp21FacesInitializer.configureResolverForJSP(Jsp21FacesInitializer.java:123)
	at org.apache.myfaces.webapp.Jsp21FacesInitializer.initContainerIntegration(Jsp21FacesInitializer.java:77)
	at org.apache.myfaces.webapp.AbstractFacesInitializer.initFaces(AbstractFacesInitializer.java:126)
	at org.apache.myfaces.webapp.StartupServletContextListener.contextInitialized(StartupServletContextListener.java:111)
	at com.ibm.ws.webcontainer.webapp.WebApp.notifyServletContextCreated(WebApp.java:1681)
	at com.ibm.ws.webcontainer.webapp.WebApp.commonInitializationFinish(WebApp.java:374)
	at com.ibm.ws.webcontainer.webapp.WebAppImpl.initialize(WebAppImpl.java:299)
	at com.ibm.ws.webcontainer.webapp.WebGroupImpl.addWebApplication(WebGroupImpl.java:100)
	at com.ibm.ws.webcontainer.VirtualHostImpl.addWebApplication(VirtualHostImpl.java:166)
	at com.ibm.ws.webcontainer.WSWebContainer.addWebApp(WSWebContainer.java:731)
	at com.ibm.ws.webcontainer.WSWebContainer.addWebApplication(WSWebContainer.java:616)
	at com.ibm.ws.webcontainer.component.WebContainerImpl.install(WebContainerImpl.java:376)
	at com.ibm.ws.webcontainer.component.WebContainerImpl.start(WebContainerImpl.java:668)
	at com.ibm.ws.runtime.component.ApplicationMgrImpl.start(ApplicationMgrImpl.java:1122)
	at com.ibm.ws.runtime.component.DeployedApplicationImpl.fireDeployedObjectStart(DeployedApplicationImpl.java:1319)
	at com.ibm.ws.runtime.component.DeployedModuleImpl.start(DeployedModuleImpl.java:609)
	at com.ibm.ws.runtime.component.DeployedApplicationImpl.start(DeployedApplicationImpl.java:944)
	at com.ibm.ws.runtime.component.ApplicationMgrImpl.startApplication(ApplicationMgrImpl.java:725)
	at com.ibm.ws.runtime.component.ApplicationMgrImpl.start(ApplicationMgrImpl.java:2046)
	at com.ibm.ws.runtime.component.CompositionUnitMgrImpl.start(CompositionUnitMgrImpl.java:439)
	at com.ibm.ws.runtime.component.CompositionUnitImpl.start(CompositionUnitImpl.java:123)
	at com.ibm.ws.runtime.component.CompositionUnitMgrImpl.start(CompositionUnitMgrImpl.java:382)
	at com.ibm.ws.runtime.component.CompositionUnitMgrImpl.access$300(CompositionUnitMgrImpl.java:110)
	at com.ibm.ws.runtime.component.CompositionUnitMgrImpl$CUInitializer.run(CompositionUnitMgrImpl.java:949)
	at com.ibm.wsspi.runtime.component.WsComponentImpl$_AsynchInitializer.run(WsComponentImpl.java:349)
	at com.ibm.ws.util.ThreadPool$Worker.run(ThreadPool.java:1563)

2) This second exception appears in the log :

[04/04/11 11:24:53:436 CEST] 00000018 webapp        E com.ibm.ws.webcontainer.webapp.WebApp notifyServletContextDestroyed SRVE0285E: Exception interceptée lors de la destruction du contexte : {0}
                                 java.lang.IllegalStateException: No Factories configured for this Application. This happens if the faces-initialization does not work at all - make sure that you properly include all configuration settings necessary for a basic faces application and that all the necessary libs are included. Also check the logging output of your web application and your container for any exceptions!
If you did that and find nothing, the mistake might be due to the fact that you use some special web-containers which do not support registering context-listeners via TLD files and a context listener is not setup in your web.xml.
A typical config looks like this;
<listener>
  <listener-class>org.apache.myfaces.webapp.StartupServletContextListener</listener-class>
</listener>

	at javax.faces.FactoryFinder.getFactory(FactoryFinder.java:196)
        [...]




So can you tell us please how to configure EL 2.2 on Websphere 7 ?",MYFACES-3104
"It is not possible to use .view.xml as extension for a composite component.

In theory it should check all suffixes registered on javax.faces.DEFAULT_SUFFIX param (by default "".xhtml .view.xml .jsp""). For a component (for example, testcc:simpleCompositeComponent) as resource names it should be checked simpleCompositeComponent.xhtml and simpleCompositeComponent.view.xml but not simpleCompositeComponent.jsp. To differentiate the last case, it should check if facelets vdl could handle the extension, checking javax.faces.FACELETS_VIEW_MAPPINGS param name or javax.faces.FACELETS_SUFFIX param name. ",MYFACES-3103
"Checking some stuff, I notice FaceletViewDeclarationLanguage.getRenderedViewId has this code:

    protected String getRenderedViewId(FacesContext context, String actionId)
    {
        ExternalContext eContext = context.getExternalContext();
        String viewId = actionId;
        if (eContext.getRequestPathInfo() == null)
        {
            String viewSuffix = getDefaultSuffix(context);

            StringBuilder builder = new StringBuilder(viewId);

            viewId = builder.replace(viewId.lastIndexOf('.'), viewId.length(), viewSuffix).toString();
        }

        if (log.isLoggable(Level.FINEST))
        {
            log.finest(""ActionId -> ViewId: "" + actionId + "" -> "" + viewId);
        }

        return viewId;
    }

This code replace the suffix with the default suffix used by facelets. In facelets 1.1.x (FaceletViewHandler), this could have sense, but with jsf 2.0 it does not, because a new ViewDeclarationLanguage was added, so in theory it is possible to have multiple extensions to handle facelets files.

This is more relevant in JSF 2.1, because in that part, facelets-processing feature was added, allowing new extensions like .view.xml and .jspx

The solution is just return the value passed unchanged.",MYFACES-3102
"I tried to use the NavigationHandler inside a Faces exception handler to deal with ViewExpiredException as mentioned here: http://www.nfjsone.com/blog/ed_burns/2009/09/dealing_gracefully_with_viewexpiredexception_in_jsf2.

The example does not work with myfaces, because org.apache.myfaces.application.NavigationHandlerImpl throws a NullpointerException while handleNavigation() is called.
The exception occurs in line 160: String viewId = facesContext.getViewRoot().getViewId();

I think the cause is that the viewroot is not set anymore when the ViewExpiredException is thrown. 

The official API for NavigationHandler.handleNavigation tells, that the NullpointerException is thrown only if the given facescontext is null.
    NullPointerException - if context is null

",MYFACES-3101
"Each time a user initiates a post back, another view is serialized in the session. As a result, if the user does 20 postbacks (the default number of views to save) any other open views quickly get a ViewExpiredException.

1) Deploy the example below
2) Open a browser with a window to the page (http://localhost:8080/Web for example)
3) Open another tab in the same browser to the same page (or whatever you need to do in your browser to ensure the two pages share a session)
4) On the first page, click ""Update foo"" button 20 times.
5) Now go to the second page and click ""Update foo"".
6) Notice the ViewExpiredException

@ManagedBean

@SessionScoped

public class testBackingBean implements Serializable{

 

    private String msg=""foobar"";

 

    public String getMsg() {

        return msg;

    }

 

    public void setMsg(String msg) {

        this.msg = msg;

    }

 

 

}

﻿

xhtml

 

﻿

<?xml version=""1.0"" encoding=""UTF-8""?>

<!DOCTYPE html

        PUBLIC ""-//W3C//DTD XHTML 1.0 Transitional//EN""

        ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"">

<html xmlns=""http://www.w3.org/1999/xhtml""

      xmlns:f=""http://java.sun.com/jsf/core""

      xmlns:h=""http://java.sun.com/jsf/html"">

<head>

    <title>This is a test page</title>

</head>

<body>

 

<h:form>

    <h:outputText value=""#{testBackingBean.msg}""/>

 

    <br/>

    <h:commandButton value=""Update Foo"" />

</h:form>

</body>

</html>",MYFACES-3100
"After EXTCDI-90 is fixed, we can do another archetypes release. However, we should update them to the newest versions first.",MYFACES-3099
"This is one of the most important changes done in JSF 2.1 spec. The description is on JSF 2.1 spec sections:

- Appendix A 1.2 Required Handling of *-extension elements in the application configuration resources files
- Section 10.3.2 Facelet Tag Library mechanism

This is not going to be easy.",MYFACES-3098
"A new attribute was added to JSF 2.1 cc:attribute called targetAttributeName. The related issues on the spec are:

http://java.net/jira/browse/JAVASERVERFACES_SPEC_PUBLIC-906
http://java.net/jira/browse/JAVASERVERFACES_SPEC_PUBLIC-755
http://java.net/jira/browse/JAVASERVERFACES_SPEC_PUBLIC-859

It is a long story, but fortunately this problem is now fixed. Finally all pieces fit together.
",MYFACES-3097
"In this example:

                <testComposite:compositeActionTargetAttributeName id=""cc1"">
                    <f:actionListener for=""submitButton"" binding=""#{bean.submitActionListener}""/>
                    <f:actionListener for=""cancelButton"" binding=""#{bean.cancelActionListener}""/>
                </testComposite:compositeActionTargetAttributeName>

compositeActionTargetAttributeName

<cc:interface>
  <cc:actionSource name=""submitButton"" targets=""submitCancelButton""/>
  <cc:actionSource name=""cancelButton"" targets=""submitCancelButton""/>
</cc:interface>
<cc:implementation>
  <testComposite:actionTargetAttributeName id=""submitCancelButton""/>
</cc:implementation>

actionTargetAttributeName

<cc:interface>
  <cc:actionSource name=""submitButton""/>
  <cc:actionSource name=""cancelButton"" targets=""cancelAction""/>
</cc:interface>
<cc:implementation>
  <h:commandButton id=""submitButton"" value=""Submit Button""/>
  <h:commandButton id=""cancelAction"" value=""Cancel Button""/>
</cc:implementation>

for one of the buttons a f:actionListener is added twice. The problem resides in this code:

                        if (UIComponent.isCompositeComponent(component))
                        {
                            // How we obtain the list of AttachedObjectHandler for
                            // the current composite component? It should be a component
                            // attribute or retrieved by a key inside component.getAttributes
                            // map. Since api does not specify any attribute, we suppose
                            // this is an implementation detail and it should be retrieved
                            // from component attribute map.
                            // But this is only the point of the iceberg, because we should
                            // define how we register attached object handlers in this list.
                            // ANS: see CompositeComponentResourceTagHandler.
                            // The current handler should be added to the list, to be chained.
                            // Note that the inner component should have a target with the same name
                            // as ""for"" attribute
                            mctx.addAttachedObjectHandler(component, currentHandler);
                            
                            List<AttachedObjectHandler> handlers = mctx.getAttachedObjectHandlers(component);
                            
                            retargetAttachedObjects(context, component, handlers);
                        }

The next time it is called call again retargetAttachedObjects, but for the other attached object, the previous one is still on the list. In CompositeComponentResourceTagHandler all handlers are removed to prevent apply them twice, but in this special case, it is necessary to remove it manually adding some code like this:
                            
                            handlers.remove(currentHandler);

",MYFACES-3096
See renderkit doc for details,MYFACES-3095
Check javax.faces.resource.Script and javax.faces.resource.Stylesheet modifications,MYFACES-3094
"The description says this:

"".. If the application is running in a Servlet 3.0 (and beyond) container, the runtime must provide an implementation of the ServletContainerInitializer interface that declares the following classes in its javax.servlet.annotation.HandlesTypes annotation.

    * ResourceDependencies
    * ResourceDependency
    * javax.faces.bean.ManagedBean
    * FacesComponent
    * UIComponent
    * Converter
    * FacesConverter
    * ListenerFor
    * ListenersFor
    * FacesBehaviorRenderer
    * Renderer
    * FacesValidator
    * Validator

This servlet must automatically be mapped if it is not explicitly mapped in web.xml or web-fragment.xml and one or more of the following conditions are true.

    *

      A faces-config.xml file is found in WEB-INF
    *

      A faces-config.xml file is found in the META-INF directory of a jar in the application's classpath.
    *

      A filename ending in .faces-config.xml is found in the META-INF directory of a jar in the application's classpath.
    *

      The javax.faces.CONFIG_FILES context param is declared in web.xml or web-fragment.xml.
    *

      The Set of classes passed to the onStartup() method of the ServletContainerInitializer implementation is not empty.

If the runtime determines that the servlet must be automatically mapped, it must be mapped to the following <url-pattern> entries.

    * /faces
    * *.jsf
    * *.faces
...""

In theory, MyFaces has already that class (MyFacesContainerInitializer on implee6), but we need to check if it complies with the spec. Note the part that says UIComponent and Renderer classes should be added as HandlesTypes.
",MYFACES-3093
,MYFACES-3092
,MYFACES-3091
,MYFACES-3090
Implement FaceletCacheFactory and FaceletCache methods as described by JSF 2.1 spec.,MYFACES-3089
"Pay attention to this one!, maxInactiveInterval does not exists in servlet 2.5, so we need to do some hack with implee6 if we want to keep compatible JDK 5 and servlet 2.5 (but note JSF 2.1 is JDK 6 and servlet 3.0 compatible)",MYFACES-3088
Add h:head and h:body xmlns property,MYFACES-3087
Add h:doctype component,MYFACES-3086
Modify ResourceHandler.RESOURCE_EXCLUDES_DEFAULT_VALUE to include .groovy as an excluded default extension,MYFACES-3085
Add FacesContext.isReleased() method as described by JSF 2.1 spec,MYFACES-3084
Implement StateManager.IS_SAVING_STATE as described by JSF 2.1 spec,MYFACES-3083
"The spec javadoc section 11.5.1 says this:

""... If the <faces-config> element in the WEB-INF/faces-config.xml file
contains metadata-complete attribute whose value is ""true"", the implementation must not perform annotation
scanning on any classes except for those classes provided by the implementation itself. Otherwise, continue as
follows. ...""

On the Appendix A, the schema says this about metadata-complete:

""... The metadata-complete attribute defines whether this
JavaServer Faces application is complete, or whether
the class files available to this module and packaged with
this application should be examined for annotations
that specify configuration information.

This attribute is only inspected on the application
configuration resource file located at ""WEB-INF/faces-config.xml"".
The presence of this attribute on any application configuration
resource other than the one located at ""WEB-INF/faces-config.xml"",
including any files named using the javax.faces.CONFIG_FILES
attribute, must be ignored.

If metadata-complete is set to ""true"", the JavaServer Faces
runtime must ignore any annotations that specify configuration
information, which might be present in the class files
of the application.

If metadata-complete is not specified or is set to
""false"", the JavaServer Faces runtime must examine the class
files of the application for annotations, as specified by
the specification.

If ""WEB-INF/faces-config.xml"" is not present, the JavaServer
Faces runtime will assume metadata-complete to be ""false"".
The value of this attribute will have no impact on
runtime annotations such as @ResourceDependency or
@ListenerFor. ...""

In Mojarra, it seems this value is also applicable for
faces-config.xml files under META-INF/ folder, making it
possible to prevent scan annotations on such cases.

The documentation must be corrected to reflect the implemented
behavior.

Alternate issue on spec created:

http://java.net/jira/browse/JAVASERVERFACES_SPEC_PUBLIC-952",MYFACES-3082
"Line 140 of javax.faces.Application is currently:

            application.addBehavior(behaviorId, behaviorClass);

when it should be:

            return application.addBehavior(behaviorId, behaviorClass);

without the return we fall through and throw the UnsupportedOperationException when we shouldn't.

",MYFACES-3081
"With the current 2.0.5-SNAPSHOT 'begin' event does not have 'status' property set. This is due to missing argument in _Impl.sendEvent() call: _Impl.sendEvent(this._xhr, _Impl.BEGIN);",MYFACES-3080
"For ELResolver filtering and sorting it is useful to have some informations about how ELresolvers are used.

Create DebugCompositeELResolver which provides info about ELresolvers chain and operations during its usage like:


ELResolver: class org.apache.myfaces.el.unified.resolver.ManagedBeanResolver
  getValue invocations: 2997 getValue hits: 0
  getType invocations: 0 getType hits: 0


ELResolver: class org.apache.myfaces.el.unified.resolver.CompositeComponentELResolver
  getValue invocations: 4161 getValue hits: 0
  getType invocations: 0 getType hits: 0

ELResolver: class org.apache.myfaces.el.unified.resolver.ScopedAttributeResolver
  getValue invocations: 54 getValue hits: 54
  getType invocations: 0 getType hits: 0



",MYFACES-3079
"Since JSF 2.0 JSP are deprecated. Allow:

o.a.m.SUPPORT_JSP=false|true

if this flag is false myfaces will not install FacesCompositeELResolver
and will skip JSP initializer during startup

see full discussion here:
http://www.mail-archive.com/dev@myfaces.apache.org/msg49177.html",MYFACES-3078
"One of the problems from category: http://www.mail-archive.com/dev@myfaces.apache.org/msg50721.html

Situation: if user creates (mostly by mistake) two converters for same type:

@FacesConverter(forClass=AEntity.class)
public class ConverterOne {}

@FacesConverter(forClass=AEntity.class)
public class ConverterTwo {}


myfaces don't say nothing, moreover random behaviour occurs, because HashMap<String,Converter> and together with classloading in ConverterOne or ConverterTwo is used randomly.


This obviously can afftect @FacesValidator etc. ",MYFACES-3076
"related to topic
http://www.mail-archive.com/dev@myfaces.apache.org/msg49177.html


Problem: 
how to disable ELResolver smartly? Adding a context-param for each is an
overkill.

But we have https://cwiki.apache.org/MYFACES/elresolver-ordering.html in
codebase already. I propose to add new feature ""ELResolver filtering""
and new context-param:

<context-param>
  <param-name>org.apache.myfaces.EL_RESOLVER_PREDICATE</param-name>
  <param-value>org.foo.bazz.ELResolverPredicate</param-value>
</context-param>

Filter is simple instance of org.apache.commons.collections.Predicate.


For application where no ManagedBean(Resolver) is used or no Flash, user
can simply return false from Predicate.evaluate and ELResolver won't be
installed.


See mail thread here: http://www.mail-archive.com/dev@myfaces.apache.org/msg52082.html
",MYFACES-3075
"Hi,

I´m trying to write a really lightweight portal implementation based on JSF and one thing that´s quite limiting is that you can´t specify more than one view state. Wouldn´t it be possible to work around this issue by having a context-param which states the ViewState-id?

I´m writing the portal as a separate war-module and the portlet applications are deployed as seperate war-modules so they are not sharing context and should therefore be able to specify different view states.

I can work around this issue by not letting the portal handle any postback requests but it seems like an easy thing to do?

Great implementation BTW

Regards,
Hampus",MYFACES-3074
"The global eval code in _Runtime.js is not really very readable due to several nested ifs, this will be replaced by a more readable functional approach which utilizes several boolean conditions and dynamic calls.
",MYFACES-3073
"We can improve on the error reporting, first there were some error messages not fully localized secondly 
we still have relatively unformatted error reporting strings. We can improve on both of that.
Third the entire error handlers are currently hooked on transport we should move them over both to impl and to the ajax
request directly, depending on where it makes sense mostly.

",MYFACES-3072
"Up until now we have used synchronous http get requests and evals to load the scripts. Now html5 opens another way we still can use the head appendix method but differently than before, we simply have to move it over to the addition of script src elements with async set to false and true depending on the script being loadable asynchronously or not.
Also we can add this mechanism to our existing synchronous load by making the mechanism either asynchronous or synchronous.
We then can redjust our dynamic loading code for the debugging case to this new loading method.
",MYFACES-3071
"The problem with the current code and generally the spec is that if a viewstate update is issued the viewstate elemts should be updated normally this happens at the end of the rendering, but what if the viewstate is issued in between, then our update might happen on elements not yet rendered or later updated. Hence the viewstate then is lost. It makes sense to defer the viewstate update always to the end of the rendering cycle.",MYFACES-3070
"Attached is example of custom component that needs to proxy jsf.ajax.response. Works in Mojarra, doesn't work in MyFaces.

To reproduce, run example, navigate to http://localhost:8080/jsf2-test/index.jsf and press link -> alert should be shown if function was overriden correctly.",MYFACES-3069
"1. create page 
<h:form>
           <h:panelGrid columns=""2"">
               f:ajax with  h:commandLink
                <h:commandLink value=""commandLink"">
                    <f:ajax disabled=""false""/>
                </h:commandLink>
               disabled   f:ajax with  h:commandLink
                <h:commandLink value=""commandLink"">
                    <f:ajax disabled=""true""/>
                </h:commandLink>
           </h:panelGrid>
</h:form>
Result: the first command link work fine, second one is not working at all
May be because in myfaces in /impl/renderkit/html/HtmlLinkRendererBase.java the encodeBegin method in line 125
 behaviors = ((ClientBehaviorHolder) component).getClientBehaviors();
            if (!behaviors.isEmpty())
            {
                ResourceUtils.renderDefaultJsfJsInlineIfNecessary(facesContext, facesContext.getResponseWriter());
            } 
inside if it checks only behaviors existence but not checked if they are enabled, so this blocks script for commandlink to be encoded",MYFACES-3068
"Submitting a new bug based on one I recently reopened as it pertains to 1.2 and 2.0 impls as well:
Referer bug: https://issues.apache.org/jira/browse/MYFACES-702

Problem reported in the above bug is related to the component's id being prefixed with the portletNamespace which is caused by calling encodeNamespace.  Why is this api called in generating the component id.  encodeNamespace was added to external context by and large for the portlet environment  to allow it to prefix client ids to be unique on the page they are being incorporated into.  Is there a reason for needing this when generating the component id?  FYI ... Mojarra doesn't make this call from createUniqureId.

Hopefully, this is something that can be fixed by just removing the call ....",MYFACES-3066
"currently our DefaultWindowHandlerSupport contains the following lines:

            if (!context.isProjectStage(ProjectStage.Production))
            {
                return _checkedViewIdCacheEnabled = Boolean.FALSE;
            }

Imo it should be exactly the other way around. It should _only_ override any manual settings in ProjectStage.Development and evaluate the servlet params in any other case.",MYFACES-3065
"Submitting a new bug based on one I recently reopened as it pertains to 1.2 and 2.0 impls as well:
Referer bug: https://issues.apache.org/jira/browse/MYFACES-702

Problem reported in the above bug is related to the component's id being prefixed with the portletNamespace which is caused by calling encodeNamespace.  Why is this api called in generating the component id.  encodeNamespace was added to external context by and large for the portlet environment  to allow it to prefix client ids to be unique on the page they are being incorporated into.  Is there a reason for needing this when generating the component id?  FYI ... Mojarra doesn't make this call from createUniqureId.

Hopefully, this is something that can be fixed by just removing the call ....",MYFACES-3064
"A sonar scan shows lots of small possible enhancements, like using Integer#valueOf(i) instead new Integer(i) and stuff.",MYFACES-3063
"our api tests use cglib for creating a mock Application object. Sadly this cglib version causes problems in the sonar scan due to conflicting cglib versions being used. 

We should get rid of cglib and replace it with a simple subclass in this case.",MYFACES-3062
"The following code:


<h:head>
</h:head>

<h:body>
	<h:form>
		<ui:debug />

		<h:commandLink value=""Ajax"">
			<f:ajax render=""@all"" />
		</h:commandLink>
	</h:form>
</h:body>

Fails to update page correctly in Chrome browser.",MYFACES-3061
I'm lookig for a way of how to implement a descending sort for the datatable;the datatable has sortAscending attribute but how can it handle descending sort. what files do I need to alter. Thanks a lot.,MYFACES-3060
"There is a small bug on myfaces builder plugin. This method:

    public void addListener(ListenerMeta prop)
    {
        _listeners.put(prop.getClassName(), prop);
    }

uses the class name as a key, but the expected behavior is use the name as key. For example, if we have something like this:

    @JSFListener(event=""javax.faces.event.ActionEvent"",
            phases=""Invoke Application, Apply Request Values"")
    public ActionListener[] getActionListeners()

Right now the key used is javax.faces.event.ActionListener, but it should be used ""actionListener"". This change does not cause any side effects, because this tag is only used for documentation purposes and in practice there is no template calling:

    public ListenerMeta getListener(String name)
",MYFACES-3059
"In QdoxModelBuilder we have reached 2000 lines limit for checkstyle, so each time it is necessary to add something we need to remove some empty lines. Since the code is already stable, It is necessary to break this class into multiple classes, so we can reduce the size of the file and work with more confort.",MYFACES-3058
"I read
http://www.exploringbinary.com/java-hangs-when-converting-2-2250738585072012e-308/

Nice! and it even works with JSF :-)

Looking at the MyFaces (double) converter, I see ""Double.valueOf()"" 
Now, I did a quick check, with Trinidad (disabled client-side validation) and MyFaces (since Trinidad calls super.getAsObject()).

Entering ""2.2250738585072012e-308"" into a field, that has a double converter is keeping my JVM _really_ busy ! :)
Sweet!",MYFACES-3057
sonar shows issues (based on some of the default checkstyle and findbugs rules) which can't be fixed because they are given by the spec. or just don't make sense for frameworks,MYFACES-3056
"META-INF/faces-config.xml files in the jars of component libraries are loaded twice, causing OpenFaces to give the following error:
Second notification for the same phase in the same request occurred.

Below is the server log. Note that same config files, 99/1/bundlefile!/META-INF/faces-config.xml and 101/1/bundlefile!/META-INF/faces-config.xml are loaded twice.
[2011-02-22 17:00:55.245] start-signalling-1           System.err                                                        Feb 22, 2011 5:00:55 PM org.apache.myfaces.config.DefaultFacesConfigurationProvider getClassloaderFacesConfig 
[2011-02-22 17:00:55.246] start-signalling-1           System.err                                                        INFO: Reading config : jar:file:/usr/local/virgo-web-server/work/osgi/configuration/org.eclipse.osgi/bundles/36/data/store/org.eclipse.osgi/bundles/99/1/bundlefile!/META-INF/faces-config.xml 
[2011-02-22 17:00:55.277] start-signalling-1           System.err                                                        Feb 22, 2011 5:00:55 PM org.apache.myfaces.config.DefaultFacesConfigurationProvider getClassloaderFacesConfig 
[2011-02-22 17:00:55.277] start-signalling-1           System.err                                                        INFO: Reading config : jar:file:/usr/local/virgo-web-server/work/osgi/configuration/org.eclipse.osgi/bundles/36/data/store/org.eclipse.osgi/bundles/101/1/bundlefile!/META-INF/faces-config.xml 
[2011-02-22 17:00:55.290] start-signalling-1           System.err                                                        Feb 22, 2011 5:00:55 PM org.apache.myfaces.config.DefaultFacesConfigurationProvider getClassloaderFacesConfig 
[2011-02-22 17:00:55.291] start-signalling-1           System.err                                                        INFO: Reading config : jar:file:/usr/local/virgo-web-server/work/osgi/configuration/org.eclipse.osgi/bundles/36/data/store/org.eclipse.osgi/bundles/99/1/bundlefile!/META-INF/faces-config.xml 
[2011-02-22 17:00:55.369] start-signalling-1           System.err                                                        Feb 22, 2011 5:00:55 PM org.apache.myfaces.config.DefaultFacesConfigurationProvider getClassloaderFacesConfig 
[2011-02-22 17:00:55.370] start-signalling-1           System.err                                                        INFO: Reading config : jar:file:/usr/local/virgo-web-server/work/osgi/configuration/org.eclipse.osgi/bundles/36/data/store/org.eclipse.osgi/bundles/101/1/bundlefile!/META-INF/faces-config.xml

However, /WEB-INF/faces-config.xml in the war is only loaded once, so I suspect that this is a bug with org.apache.myfaces.config.DefaultFacesConfigurationProvider. My current workaround to install OpenFaces is, therefore, extract META-INF/faces-config.xml out of the jar, and load it with the war.",MYFACES-3055
"@FacesConverter(forClass=MyClass.class,value=""myClassConverter"") currently processes the forClass attribute and value( = converterId) is ignored.",MYFACES-3054
"See http://www.mail-archive.com/dev@myfaces.apache.org/msg50721.html

And from http://wiki.java.net/bin/view/Projects/Jsf2RequirementsScratchpad:

Better Error reporting, like what you get with Tapestry (also in
   JSR-252-EG, where it was said: any time there is an error in *any*
   part of the lifecycle, the user should see not just a cryptic stack
   trace, but also the component - including file and line number - that
   triggered the problem, the EL expression that was being evaluated -
   including the part of the EL expression that triggered the problem,
   etc. Diagnosability for state saving is also important. On this point,
   Gavin King wants to have centralized error handling, with an
   interception point, perhaps using navigation rules, to help handle
   errors.)
",MYFACES-3053
"According to the html spec insertchildren in a composite component should reposition every child component
within the composite tag to the final rendering position defined via insertchildren.
So far so good, but following usecase swallows the jsf component and only renders the html markup.

component call:
     <ezw:pull id=""pull"">
                aaaa
                <h:outputScript value=""hello world"" ></h:outputScript>
            </ezw:pull>

with the component
<ui:component xmlns=""""
              xmlns:ui=""http://java.sun.com/jsf/facelets""
              xmlns:composite=""http://java.sun.com/jsf/composite""
              xmlns:f=""http://java.sun.com/jsf/core""
              xmlns:h=""http://java.sun.com/jsf/html""
              xmlns:c=""http://java.sun.com/jsp/jstl/core"">
    <composite:interface>
      
    </composite:interface>
    <composite:implementation>
       <composite:insertChildren></composite:insertChildren>
    </composite:implementation>
</ui:component>

results in only aaaa being rendered but hello world emitted by the outputscript being swallowed.
",MYFACES-3052
"In most parts of the code we only use the ContextClassLoader to find Classes and Resources. However, in some parts we also use the ClassLoader of the current Class or of a specific Class (e.g. to use myfaces-api and/or myfaces-impl ClassLoader, see ApplicationImpl.getResourceBundle(), BeanValidator.postSetValidationGroups(), ResourceHandlerImpl.getBundle() or FactoryFinder for example).

IMO we should unify this code and maybe provide a custom ClassLoader that encapsulates three ClassLoaders (ContextClassLoader, myfaces-api and myfaces-impl). This most certainly would solve a lot of OSGi related problems.

WDYT?",MYFACES-3051
"During using the core classes of myfaces jsf.js I noticed smaller bugs in the queue code and in the addOnLoad handler.
In case of the queue the remove method simply does not remove (a line was forgotten) and in case of addOnLoad, if a handler throws an exception all others also bomb out.
^",MYFACES-3050
"I have this expression in my Facelet: #{newPaymentBean.payment.toAccount}

""payment"" resolves to the following:

@Entity
public class Payment implements Serializable {

    // More stuff...

    @NotNull @AccountNumber private String toAccount;

    // More stuff...
}

When debugging in javax.faces.validator._BeanValidatorUELUtils, I noticed the following on line 47 ""ValueReference valueReference = valueExpression.getValueReference(elCtx);"":

* With Glassfish EL, ""valueReference.property"" is null. This causes the BeanValidator to return at line 161, and to skip validation. ""valueReference.base"" points to the Payment object btw.
* With JUEL 2.2.3, ""valueReference.property"" is ""toAccount"", which is correct AFAIK.

I'm not sure whether this is a MyFaces or EL issue. I remember that when I wrote the BeanValidator, that the spec literally said what to do. See: http://javaserverfaces.java.net/nonav/docs/2.0/javadocs/javax/faces/validator/BeanValidator.html#validate(javax.faces.context.FacesContext, javax.faces.component.UIComponent, java.lang.Object)

So I guess this is an EL implementation issue, but I filed it nevertheless, at least for archiving purposes...

WDYT?",MYFACES-3049
"Following exception is thrown while building the trunk:

Downloading: http://repository.apache.org/snapshots/org/apache/myfaces/core/myfaces-api/2.0.5-SNAPSHOT/myfaces-api-2.0.5-SNAPSHOT-tests.jar
[INFO] Unable to find resource 'org.apache.myfaces.core:myfaces-api:jar:tests:2.0.5-SNAPSHOT' in repository apache.snapshots (http://repository.apache.org/snapshots)
[INFO] ------------------------------------------------------------------------
[ERROR] BUILD ERROR
[INFO] ------------------------------------------------------------------------
[INFO] Failed to resolve dependencies for one or more projects in the reactor. Reason: Missing:
----------
1) org.apache.myfaces.core:myfaces-api:jar:tests:2.0.5-SNAPSHOT

  Try downloading the file manually from the project website.

  Then, install it using the command:
      mvn install:install-file -DgroupId=org.apache.myfaces.core -DartifactId=myfaces-api -Dversion=2.0.5-SNAPSHOT -Dclassifier=tests -Dpackaging=jar -Dfile=/pa
th/to/file

  Alternatively, if you host your own repository you can deploy the file there:

      mvn deploy:deploy-file -DgroupId=org.apache.myfaces.core -DartifactId=myfaces-api -Dversion=2.0.5-SNAPSHOT -Dclassifier=tests -Dpackaging=jar -Dfile=/path/to/file -Durl=[url] -DrepositoryId=[id]

  Path to dependency:
        1) org.apache.myfaces.core:myfaces-impl:jar:2.0.5-SNAPSHOT
        2) org.apache.myfaces.core:myfaces-api:jar:tests:2.0.5-SNAPSHOT

----------
1 required artifact is missing.

for artifact:
  org.apache.myfaces.core:myfaces-impl:jar:2.0.5-SNAPSHOT

from the specified remote repositories:
  apache.snapshots (http://repository.apache.org/snapshots),
  tomcat (http://tomcat.apache.org/dev/dist/m2-repository),
  central (http://repo1.maven.org/maven2),
  java.net (http://download.java.net/maven/2)",MYFACES-3048
Run attached example and click command link. Component CSS is not added to the page after that.,MYFACES-3047
"When application developers uses Application#createComponent(String) method, component resources defined in its renderer are not added to the page, though renderer is picked up for encoding component correctly.
See attached project for example.",MYFACES-3046
"Javadoc for jsf.ajax.request says you determine the calling URL by:
Determine the posting URL as follows: If the hidden field javax.faces.encodedURL is present in the submitting form, use its value as the posting URL. Otherwise, use the action property of the form element as the URL.

Looks like the MyFaces impl skips loking for/using the javax.faces.encodedURL and only uses the form action.  This means ajax is broken in portlets (when using MyFaces).  I.e. the  javax.faces.encodedURL in the portlet case is different than the action URL and the one that needs to be used.",MYFACES-3045
"First there is a
WARNING: Resource referenced by resourceName jsf.js and libraryName javax.faces not found in call to ResourceHandler.createResource. It will be silenty ignored.
and later a NullPointerException

Using javax.faces.PROJECT_STAGE=Development, the class loader was trying to load META-INF/internal-resources/javax.faces/jsf-uncompressed-full.js (so I added the ""package"" META-INF.internal-resources.javax.faces to the list of exported packages of myfaces-bundle.jar). But then I changed it from Development to Production, and myfaces tried to load something else (and I decided to write a bug).",MYFACES-3044
"In RichFaces for file upload component we call jsf.ajax.response(...) method to process contents of IFRAME element. The problem is that this call is not preceded by call to jsf.ajax.request(...), making MyFaces fail:

response : function(request, context) {
this._q._curReq._response.processResponse(request, context);
}

this._q._curReq - is undefined.",MYFACES-3043
"In FaceletViewDeclarationLanguage.java: createResponseWriter(), getResponseEncoding(), handleFaceletNotFound(), and sendSourceNotFound() each cast to Servlet object.  This causes ClassCastExceptions when run in a portlet environment.  Each of these calls/casts can be removed and ExternalContext APIs can be used instead to get/set the needed information from the request or response object.",MYFACES-3042
"<h:outputFormat> simply does a toString() on its parameters, instead of properly using converters.",MYFACES-3041
"When session is invalidated, session scoped bean @PreDestroy method has called two times

 - When StartupServletcontextListener # sessionDestroyed
 - When StartupServletcontextListener # attributeRemoved
",MYFACES-3040
"JSF 2.0 improved the definition/handling of the instantiation of the FacesContext allowing non-servlet environments to wrap the base/core impl.  This was done because most of the FacesContext apis are inherently runtime environment neutral -- allowing the portlet bridge to not have to duplicate/reimplement and maybe get wrong base core function.  Unfortunately MyFaces doesn't conform to this change and hence the Portlet Bridge can't run in the MyFaces environment.  

Basically the bridge expects to be able to delegate from its FacesContextFactoryImpl.getFacesContext and then wrap the returned FacesContext with its own.  This requires the underlying core impl to be runtime (servlet/portlet) neutral during the creation process.  The bridge will wrap the FacesContext and supply its own ExternalContext such that  any servlet dependent impl in the core FacesContext/ExternalContext will be hidden by overrides.

FYI ... until this is addressed I can't begin any testing of the bridge on MyFaces.",MYFACES-3039
"Spec says a factory can be declared by including a META-INF/services file with the name of the javax.faces factory class (in this case java.faces.view.ViewDeclarationLanguageFactory ) with its contents containing a single line containing the name of the class that implements this factory.  The MyFaces startup/read config code throws an IllegalStateException however in this case.  Looks like the code wasn't updated to reflect the new 2.0 Factory.

Use case -- Portlet Bridge currently uses this methodology and hence doesn't run on MyFaces.  ",MYFACES-3038
"We currently use a tree visit to deliver PostRestoreStateEvents.  By default tree visits will cause iterating components (such as UIData/UIRepeat) to iterate over all visible rows in the model.  This results in children being visited once per iteration - and thus PostRestoreStateEvents re-delivered for each row.

An interesting side effect of this is that component binding setters will be evaluated multiple times.  For example, in a case like this:


 <h:dataTable value=""#{someModel}"" var=""row"">
   <h:column>
     <h:ouputText binding=""bean.foo""/>
   </h:column>
 </h:dataTable>

The binding setter (eg. setFoo()) is called multiple times (once per row) in 2.0.  In 1.2 this was only called one time.

Note that a solution for the following issue:

MYFACES-3036 Support SKIP_ITERATION FacesContext property

Would make fixing this issue simple.  The tree visit that we use for PostRestoreStateEvent delivery would simply specify the SKIP_ITERATION hint.
",MYFACES-3037
"In the following jsr-314-open thread:

http://lists.jboss.org/pipermail/jsr-314-open-mirror/2010-June/000200.html

Members of the Mojarra team, MyFaces team and EG discussed a temporary workaround for the lack of a proper VisitHint.SKIP_ITERATION API in JSF 2.0.x.  We agreed to use a FacesContext property to address this case until a new VisitHint enum value could be added in 2.1.

Logging this issue to request that we add support for the FacesContext property (""javax.faces.visit.SKIP_ITERATION"") in MyFaces 2.0.x to allow tree visits to be performed without forcing iterating components (like UIData/UIRepeat) to iterate over all rows.",MYFACES-3036
"Deploy attached project (use 'myfaces' profile only) under Tomcat 7 and open index.jsf. Inspect console output, Bean.init() should print injected list contents, however on Tomcat 7 it prints null. Tomcat 6 works as expected",MYFACES-3035
"The following ui:repeat tag with those values of size and offset throw a FacesException with the message: ""iteration offset cannot be greater than collection size.""

<ui:repeat var=""listing"" value=""#{myListings.listings}"" size=""19"" offset=""20"">

It appears that the method _validateAttributes() in the UIRepeat class performs the validation incorrectly.  It seems to assume that the value of size is the size of the collection, rather than the desired iteration size.  Here is the relevant code from _validateAttributes():

        if ((size > -1) && (begin > size)) {
            throw new FacesException (""iteration offset cannot be greater "" +
                ""than collection size"");
        }

The exception is thrown in the above case because begin > size, where begin = offset = 20.
",MYFACES-3034
"<h:dataTable var=""row"" >
  <h:column>
    <h:outputText rendered=""#{bean.isRendered(row)}""

There is new VisitHint.SKIP_ITERATION in JSF 2.1. If that hint is used UIData iterate over children in ""flat"" manner and therefore no row is available - bean.isRendered(row) obtains null as parameter and NPE can happen. One problem in this situation is a component tree walk before RESTORE_VIEW from DebugPhaseListener:

java.lang.NullPointerException
foo.bazz.bean.isRendered
...
at org.apache.myfaces.view.facelets.el.TagValueExpression.getValue(TagValueExpression.java:85)
at javax.faces.component._DeltaStateHelper.eval(_DeltaStateHelper.java:260)
at javax.faces.component.UIComponentBase.isRendered
...
at javax.faces.component.UIComponentBase.visitTree(UIComponentBase.java:991)
at org.apache.myfaces.view.facelets.tag.ui.DebugPhaseListener._doTreeVisit(DebugPhaseListener.java:310)
at org.apache.myfaces.view.facelets.tag.ui.DebugPhaseListener.afterPhase(DebugPhaseListener.java:286)


",MYFACES-3033
"Right now, the information for composite components is not integrated into myfaces-builder-plugin generated documentation. 

That information should be included when build-metadata goal is executed, so we can use it later in the documentation goals.",MYFACES-3032
"Right now there is no special goal to generate custom client behavior classes automatically, just like converters and validators. I think given the importance of this new feature introduced in JSF 2.0, it deserves to have better support from myfaces-builder-plugin

This issue is related to TOMAHAWK-1558. The idea is commit on sandbox the base class, and in this issue all changes related to myfaces-builder-plugin. 

In the future, the objective is start adding custom client behaviors on tomahawk sandbox, but that is still a work in progress.",MYFACES-3031
"Our DoubleConverter currently always use Double.valueOf() but this just takes the default Locale of the server we run at.

But the String representing the double might be different depending on the Users Locale.
E.g. in Germany, a double of 47.33 will be written as ""47,33"", whereas in the US, the decimal separator will be a dot: ""47.33""",MYFACES-3029
"From jsr-314-open@jcp.org 

[jsr-314-open] Composite component metadata runtime behavior

I checked in deep how attribute for composite components works, and here is what I found.

This is the javadoc of cc:attribute type:

""... Declares that this attribute must be a ValueExpression whose expected type is given by the value of this attribute. If not specified, and no ""method-signature"" attribute is present, java.lang.Object  is assumed. This attribute is mutually exclusive with the ""method-signature"" attribute. If both attributes are present, the ""method-signature"" attribute is ignored. ...""

MyFaces (2.0.3 and earlier) implemented what javadoc says, but in practice Mojarra (tested 2.0.3 and 2.1.0 snapshot branch) behaves different in this case. For example, if it is written this:


 <cc:attribute name=""foo"" type=""java.lang.Integer""/>

With the following component definition:

 <comp:bar foo=""5""/>

In MyFaces the String ""5"" is stored on the map, but in Mojarra an Integer 5 is. It is obvious the right behavior is the one shown by Mojarra, even if the javadoc is to explicit about this fact.

Now think about a little bit more complex example:

 <cc:attribute name=""foo"" type=""java.lang.Integer"" default=""5""/>

both MyFaces and Mojarra fails in this case, because the default is assumed to be a String ""5"" and not an Integer 5.

It is obvious the author expect ""type"" attribute enforce the value to the type using EL coercions, like it is done for all other components, right? Maybe the javadoc is not explicit, but it is clear the way to go.

Now try to get a value programatically instead use EL expressions.

 myCompositeBar.getAttributes.get(""foo"")

the default is just ignored. Why? by the spec, composite component default values are handled by ""Composite Component Attribute EL Resolver"". This is what JSF 2.0 spec section 5.6.6.2 says about it (getValue description)

""... get(): if the result of calling get() on the component attributes map is null, and a default value was declared in the composite component metadata, the value will be a ValueExpression. Evaluate it and return it. Otherwise, simply return the value from the component attributes map. ...""

In my opinion, we should do that on UIComponent.getAttributes() map instead on an EL resolver, after all we could use the value stored on BEANINFO_KEY to get the descriptor and handle the default value only if all fails.

But here is the big question: It is really necessary to support that case? The common case is lookup attributes map using an EL expression #{cc.attrs.myproperty}. This could be necessary only if we do a composite component with a custom component type and we need to play with properties defined on the component class and the composite component definition, but that's very exotic (but theorically possible).

Now it is possible to answer the questions (in my personal opinion, based on the previous reasoning):


1.  Should JSF implementations be making use of composite component metadata (like ""type"") at runtime to enforce the intentions of the composite component author?

Ans: Really this is already done, because ValueExpressions are created and values are coerced taking into account the type, but we don't have any code on the default component attribute map class that enforces it.

2.  Should this behavior be specified?

Ans: the javadoc of cc:attribute type is incomplete and definitively needs to be fixed.


3.  Are there other places where we have similar metadata (eg. Facelets taglib.xml files) that we should review as well?

Ans: User tag handlers does not have any semantic about how to handle attributes, so there is nothing we can do or other places to review (after all, one of the intentions of composite components is provide a transparent way to create components with the flexibility of custom facelets tag handlers).


What do we need to do? Fix the bugs on MyFaces and Mojarra related to this issue.",MYFACES-3027
,MYFACES-3026
"New in JSF 2.1: 
javax.faces.component.visit.VisitHint.SKIP_ITERATION = ""Hint that indicates that components that normally visit children multiple times (eg. {@link UIData})  in an iterative fashion should instead visit each child only one time.""

",MYFACES-3025
"I read
http://www.exploringbinary.com/java-hangs-when-converting-2-2250738585072012e-308/

Nice! and it even works with JSF :-)

Looking at the MyFaces (double) converter, I see ""Double.valueOf()"" 
Now, I did a quick check, with Trinidad (disabled client-side validation) and MyFaces (since Trinidad calls super.getAsObject()).

Entering ""2.2250738585072012e-308"" into a field, that has a double converter is keeping my JVM _really_ busy ! :)
Sweet!",MYFACES-3024
LifecycleProviderFactory instances are not released when the ServletContext is destroyed.,MYFACES-3023
"Very slow classloading
this patch can load 1000 times faster


# This patch file was generated by NetBeans IDE
# Following Index: paths are relative to: /home/m1k0/Projekty/opensource/repos/asf/myfaces/core/tags/myfaces-core-project-2.0.3/impl/src/main/java/org/apache/myfaces/view/facelets/util
# This patch can be applied using context Tools: Patch action on respective folder.
# It uses platform neutral UTF-8 encoding and \n newlines.
# Above lines and this line are ignored by the patching process.
Index: Classpath.java
--- Classpath.java Base (BASE)
+++ Classpath.java Locally Modified (Based On LOCAL)
@@ -36,6 +36,7 @@
 import org.apache.myfaces.shared_impl.util.ClassUtils;
 import java.nio.ByteBuffer;
 import java.nio.charset.Charset;
+import java.util.HashSet;
 /**
  * @author Jacob Hookom
  * @author Roland Huss
@@ -44,6 +45,7 @@
  */
 public final class Classpath
 {
+    private static Set _history = new HashSet();
     private static final Charset UTF8 = Charset.forName(""UTF-8"");
     private Classpath()
     {
@@ -72,6 +74,13 @@
         for (Enumeration<URL> urls = loader.getResources(resource); urls.hasMoreElements();)
         {
             URL url = urls.nextElement();
+	    String key = url.toString();
+	    if (_history.contains(key)) 
+	    {
+		continue;
+	    }
+	    _history.add(key);
+	    
             URLConnection conn = url.openConnection();
             conn.setUseCaches(false);
             conn.setDefaultUseCaches(false);
",MYFACES-3022
"Call TagHandlerDelegateFactory.createComponentHandlerDelegate on ComponentHandler constructor is not a good idea. The reason is we are creating over and over unnecessary instances of ComponentHandler through the factory that in the end they could never be used.

It also causes a problem when it is required to wrap a ComponentHandler instance for a composite component (using TagHandlerDelegateFactory)",MYFACES-3021
"Rudy de Buscher has provided the dutch jsf.js client side error message translations,
thanks rudy for providing them.

",MYFACES-3020
"If VisitContext.getIdsToVisit() contains ""nonexistentId""  of component, myfaces say nothing. It would be useful output a warning (in development stage). I noticed this problem with MYFACES-3018, because of that request contains javax.faces.partial.execute =  ""nonexistentId"" and execution silently fails.",MYFACES-3019
"Myfaces HtmlAjaxBehaviorRenderer renders marker ""@this"" in <f:ajax render=""@this"" execute=""@this"" /> as pass thru value 

This will not work with complex component, please see this thread ""[core] ajax @this with non trivial component"":
http://www.mail-archive.com/dev@myfaces.apache.org/msg50884.html  and javadoc for ClientBehaviorContext.getSourceId() for details.",MYFACES-3018
"1) The render method JspViewDeclarationLanguageBase.java in Shared currently only parses/replaces the VIEW_STATE token if its saving the state in the client -- this is presumably because MyFaces optimizes the server save state and writes the state key as part of render rather then needing to do the post process parse and replace.  Because this code is now shared with the Portlet Bridge and the bridge is designed to run in either a MyFaces or Mojarra environment (and Mojarra doesn't have this optimization) the logic needs to be reworked to preserve the MyFaces behavior in its world yet always do the parsing in the Mojarra world.


2) The render method JspViewDeclarationLanguageBase.java currently calls a protected method actuallyRenderView to render the faces tree.  Because the portlet bridge spec allows a redirect to occur during this render it must subclass.  However for it to get the benefits of the shared code that kicks off the tree rendering the signature of this method should be modified to return a boolean so the portlet subclass can determine whether the render completed successfully or not.


",MYFACES-3017
Stress testing has found cases where some methods result in NPEs and such if not synchronized.,MYFACES-3016
"When org.apache.myfaces.context.servlet.ServletExternalContextImpl.setRequest(Object) is called, cached request maps (e.g. _requestHeaderMap) are not reset, so data from new request is not used.

Here is what Mojarra does: 


    public void setRequest(Object request) {
        if (request instanceof ServletRequest) {
            this.request = (ServletRequest) request;
            requestHeaderMap = null;
            requestHeaderValuesMap = null;
            requestHeaderValuesMap = null;
            requestMap = null;
            requestParameterMap = null;
            requestParameterValuesMap = null;
        }
    }
",MYFACES-3015
Provide Czech and Slovak localization for MyFaces.,MYFACES-3014
"When org.apache.myfaces.context.servlet.ServletExternalContextImpl.setRequest(Object) is called, cached request maps (e.g. _requestHeaderMap) are not reset, so data from new request is not used.

Here is what Mojarra does: 


    public void setRequest(Object request) {
        if (request instanceof ServletRequest) {
            this.request = (ServletRequest) request;
            requestHeaderMap = null;
            requestHeaderValuesMap = null;
            requestHeaderValuesMap = null;
            requestMap = null;
            requestParameterMap = null;
            requestParameterValuesMap = null;
        }
    }
",MYFACES-3013
"I don't know what  spec says but following should work:

<h:inputText>
  <f:param name=""paramName"" value=""paramValue"" />   
  <f:ajax />
</h:inputText>

expected result is paramName = paramValue pair in request.

For h:command it works already.

",MYFACES-3012
"SEVERE: An exception occurred
javax.faces.FacesException: java.lang.IllegalArgumentException: Cannot convert javax.faces.component.html.HtmlSelectOneMenu@84b8f9 of type class javax.faces.component.html.HtmlSelectOneMenu to class de.akrebs.shop.domain.Category
	at org.apache.myfaces.shared_impl.context.ExceptionHandlerImpl.wrap(ExceptionHandlerImpl.java:241)
	at org.apache.myfaces.shared_impl.context.ExceptionHandlerImpl.handle(ExceptionHandlerImpl.java:156)
	at org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:258)
	at javax.faces.webapp.FacesServlet.service(FacesServlet.java:191)
	at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:511)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1166)
	at com.google.appengine.api.blobstore.dev.ServeBlobFilter.doFilter(ServeBlobFilter.java:58)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1157)
	at com.google.apphosting.utils.servlet.TransactionCleanupFilter.doFilter(TransactionCleanupFilter.java:43)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1157)
	at com.google.appengine.tools.development.StaticFileFilter.doFilter(StaticFileFilter.java:122)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1157)
	at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:388)
	at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)
	at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:182)
	at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:765)
	at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:418)
	at com.google.apphosting.utils.jetty.DevAppEngineWebAppContext.handle(DevAppEngineWebAppContext.java:70)
	at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)
	at com.google.appengine.tools.development.JettyContainerService$ApiProxyHandler.handle(JettyContainerService.java:349)
	at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)
	at org.mortbay.jetty.Server.handle(Server.java:326)
	at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:542)
	at org.mortbay.jetty.HttpConnection$RequestHandler.content(HttpConnection.java:938)
	at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:755)
	at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:218)
	at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:404)
	at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:409)
	at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:582)
Caused by: java.lang.IllegalArgumentException: Cannot convert javax.faces.component.html.HtmlSelectOneMenu@84b8f9 of type class javax.faces.component.html.HtmlSelectOneMenu to class de.akrebs.shop.domain.Category
	at com.sun.el.lang.ELSupport.coerceToEnum(ELSupport.java:196)
	at com.sun.el.lang.ELSupport.coerceToType(ELSupport.java:363)
	at com.sun.el.parser.AstValue.setValue(AstValue.java:164)
	at com.sun.el.ValueExpressionImpl.setValue(ValueExpressionImpl.java:273)
	at org.apache.myfaces.view.facelets.el.TagValueExpression.setValue(TagValueExpression.java:117)
	at org.apache.myfaces.application.ApplicationImpl.createComponent(ApplicationImpl.java:442)
	at org.apache.myfaces.application.ApplicationImpl.createComponent(ApplicationImpl.java:462)
	at org.apache.myfaces.view.facelets.tag.jsf.ComponentTagHandlerDelegate.createComponent(ComponentTagHandlerDelegate.java:511)
	at org.apache.myfaces.view.facelets.tag.jsf.ComponentTagHandlerDelegate.apply(ComponentTagHandlerDelegate.java:263)
	at javax.faces.view.facelets.DelegatingMetaTagHandler.apply(DelegatingMetaTagHandler.java:54)
	at javax.faces.view.facelets.CompositeFaceletHandler.apply(CompositeFaceletHandler.java:51)
	at javax.faces.view.facelets.DelegatingMetaTagHandler.applyNextHandler(DelegatingMetaTagHandler.java:59)
	at org.apache.myfaces.view.facelets.tag.jsf.ComponentTagHandlerDelegate.apply(ComponentTagHandlerDelegate.java:324)
	at javax.faces.view.facelets.DelegatingMetaTagHandler.apply(DelegatingMetaTagHandler.java:54)
	at org.apache.myfaces.view.facelets.tag.ui.DefineHandler.applyDefinition(DefineHandler.java:86)
	at org.apache.myfaces.view.facelets.tag.ui.CompositionHandler.apply(CompositionHandler.java:167)
	at org.apache.myfaces.view.facelets.impl.TemplateContextImpl$TemplateManagerImpl.apply(TemplateContextImpl.java:128)
	at org.apache.myfaces.view.facelets.impl.TemplateContextImpl.includeDefinition(TemplateContextImpl.java:92)
	at org.apache.myfaces.view.facelets.impl.DefaultFaceletContext.includeDefinition(DefaultFaceletContext.java:433)
	at org.apache.myfaces.view.facelets.tag.ui.InsertHandler.apply(InsertHandler.java:93)
	at javax.faces.view.facelets.CompositeFaceletHandler.apply(CompositeFaceletHandler.java:51)
	at org.apache.myfaces.view.facelets.compiler.NamespaceHandler.apply(NamespaceHandler.java:57)
	at javax.faces.view.facelets.CompositeFaceletHandler.apply(CompositeFaceletHandler.java:51)
	at org.apache.myfaces.view.facelets.compiler.EncodingHandler.apply(EncodingHandler.java:45)
	at org.apache.myfaces.view.facelets.impl.DefaultFacelet.include(DefaultFacelet.java:322)
	at org.apache.myfaces.view.facelets.impl.DefaultFacelet.include(DefaultFacelet.java:369)
	at org.apache.myfaces.view.facelets.impl.DefaultFacelet.include(DefaultFacelet.java:347)
	at org.apache.myfaces.view.facelets.impl.DefaultFaceletContext.includeFacelet(DefaultFaceletContext.java:215)
	at org.apache.myfaces.view.facelets.tag.ui.CompositionHandler.apply(CompositionHandler.java:140)
	at org.apache.myfaces.view.facelets.compiler.NamespaceHandler.apply(NamespaceHandler.java:57)
	at org.apache.myfaces.view.facelets.compiler.EncodingHandler.apply(EncodingHandler.java:45)
	at org.apache.myfaces.view.facelets.impl.DefaultFacelet.apply(DefaultFacelet.java:143)
	at org.apache.myfaces.view.facelets.FaceletViewDeclarationLanguage.buildView(FaceletViewDeclarationLanguage.java:329)
	at org.apache.myfaces.lifecycle.RenderResponseExecutor.execute(RenderResponseExecutor.java:66)
	at org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:239)
	... 26 more",MYFACES-3011
"Hi guys,

Thanks again for the great work you do on MyFaces and your fantastic JIRA response times!

I attach a small app that comes from the Metawidget (http://metawidget.org) distribution. I had you do MYFACES-2935 for me for MyFaces 2.0.3, and my app was working great with the 2.0.3-impl-SNAPSHOT.jar and the 2.0.2-api.jar. However now that 2.0.3 is out for real I have tried to upgrade my app, and it fails. To reproduce, please:

1. Unzip the attached app and deploy as an exploded WAR into Tomcat
2. Run Tomcat and hit http://localhost:8080/addressbook-faces2
3. In the Type dropdown, choose 'Business' and click Search

You will see an IllegalArgumentException. Now:

4. Stop Tomcat
5. Inside the exploded WAR, rename myfaces-api-2.0.2.rename.me to myfaces-api-2.0.2.jar (and delete/rename myfaces-api-2.0.3.jar)
6. Restart Tomcat and repeat steps 1-3

This time you will see no such error.

So something appears to have broken between myfaces-api-2.0.2.jar and myfaces-api-2.0.3.jar? Hopefully you can reproduce this and it is enough for you to debug the issue. The source code for the small app can be viewed here:

http://metawidget.svn.sourceforge.net/viewvc/metawidget/trunk/examples/src/java/org/metawidget/example/faces/addressbook/
http://metawidget.svn.sourceforge.net/viewvc/metawidget/trunk/examples/src/java/org/metawidget/example/shared/addressbook/

Of course, this could well be a case of 2.0.3 being stricter about something and therefore exposing a bug in my code. But my code worked in 2.0.2, JSF 1.2 and JSF 1.1, so hopefully not!

Regards,

Richard",MYFACES-3010
"Example as follows:
1) A facelet called Entry.xhtml

<h:form>
<table>
     <tr>
       <td>First Name:</td>
       <td>
         <h:inputText id=""fname"" value=""#{flash.firstName}""required=""true""/>
       </td>
     </tr>
     <tr>
       <td>Last Name:</td>
       <td>
         <h:inputText id=""lname"" value=""#{flash.lastName}""   required=""true""/>
       </td>
     </tr>
</table
 <p><h:commandButton value=""Submit"" action=""confirmation?faces-redirect=true""
/></p>
 </h:form>

and the confirmation.xhtml:
<table>
     <tr>
       <td>First Name:</td>
       <td>
         <h:outputText value=""#{flash.keep.firstName}"" />
       </td>
     </tr>
     <tr>
       <td>Last Name:</td>
       <td>
         <h:outputText value=""#{flash.keep.lastName}""/>
       </td>
      </tr>
</table>
<h:form>
<p><h:commandButton value=""Confirm"" action=""finished?faces-redirect=true"" /></p>
</h:form>


But when the confirmation page is loaded, the firstName and lastName I submitted
is missing. Why? I am using flash.keep. According to what I read it should
keep the values more than a PRG cycle.
It works if I use Mojarra.",MYFACES-3009
"javax.faces.component.UIInput.getConvertedValue converts empty String to null even when javax.faces.INTERPRET_EMPTY_STRING_SUBMITTED_VALUES_AS_NULL is set as false.

When I dug deeper I narrowed down the issue to the method org.apache.myfaces.shared_impl.renderkit.RendererUtils.getConvertedUISelectOneValue where if the submitted value is an empty string the submittedvalue is set to null. I also understand that this logic was put in place to solve the issue no. 1759 for version 1.2.2 but in JSF 2.0 the empty string to null conversion is handled globally using context parameter javax.faces.INTERPRET_EMPTY_STRING_SUBMITTED_VALUES_AS_NULL.  ",MYFACES-3008
"Compare behavior of the following code in Mojarra & MyFaces:


			<h:commandLink onclick=""var foo = &quot; \&quot; test &quot;; alert(foo);"">
				Test
				<f:ajax />
			</h:commandLink>

In Mojarra alert(...) is called, in MyFaces script error occurs",MYFACES-3007
"Hello, 

Actually I am not sure that this is an error related with MyFaces.

In a managed bean action method, I have stopped an application ""Tomcat Context""(not same with the current JSF application).

public String stopContext(){
     
     FacesContext.getCurrentInsatnce() --> It is ok, faces context is not null
     Context context = get Tomcat application context;

     //Stop tomcat context
     context.stop();   --> This is any application on Tomcat, not same with current JSF application
     FacesContext.getCurrentInstance() --> Problem, it is NULL
}

I think that Tomcat clear current JSF application thread locals. But I ask to stop other application context, therefore it must not destroy current application thread locals.

What do you think?",MYFACES-3006
"As pointed out by Ganesh on the mailing list [1], we do not always have to send the Flash cookie oam.Flash.RENDERMAP.TOKEN (e.g. when there is no data in the Flash scope).

[1] http://old.nabble.com/oam.Flash.RENDERMAP.TOKEN-ts30491897.html",MYFACES-3005
"Following scenario, two pages with implicit navigation. A prerender view system event handler set over 
  <h:head>
        <title>Facelet Title</title>
        <f:metadata>
            <f:event listener=""#{pageHandler.prerender}"" type=""preRenderView"" />
        </f:metadata>
    </h:head>

Now the prerender event is called:
a) if I go via http get into the page
b) If I execute actions which stay on the page

The event handler however is not called
if I navigate into the page via an implicit (maybe also explicit) navigation case.

A quick test revealed that the event handler is called in three cases in mojarra and I assume our behavior is faulty
and the behavior from mojarra is the one compliant to the spec.
I am setting the priority to major because the prerenderview event is very important in certain app classes which use callbacks to this event
to deal with auto display mechanisms and with data loading in certain app states.



Here is the complete example:

page1:
<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Transitional//EN"" ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"">
<html xmlns=""http://www.w3.org/1999/xhtml""
      xmlns:h=""http://java.sun.com/jsf/html""
      xmlns:f=""http://java.sun.com/jsf/core"">
    <h:head>
        <title>Facelet Title</title>
        <f:metadata>
            <f:event listener=""#{pageHandler.prerender}"" type=""preRenderView"" />
        </f:metadata>
    </h:head>
    <h:body>
        <h:form>
        Hello from Facelets
        <h:commandLink action=""page2"" value=""page2""/>

        </h:form>
    </h:body>
</html>


page2:
<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Transitional//EN"" ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"">
<html xmlns=""http://www.w3.org/1999/xhtml""
      xmlns:h=""http://java.sun.com/jsf/html"">
    <h:head>
        <title>Facelet Title</title>
    </h:head>
    <h:body>
        <h:form>
            Hello from Facelets
            <h:commandLink action=""page1"" value=""go to page 1"" />
        </h:form>
    </h:body>
</html>



and the corresponding bean:
@ManagedBean
@RequestScoped
public class PageHandler {

    public void prerender() {
        System.out.println(""Prerender View"");
    }

}
",MYFACES-3004
"Our pom.xml files grew over time and are on some parts really messy by now.

Things which should be changed:
  - there is no clear structure in the pom files. we should have 4-space indenting, but currently we have 2 and 4-space mixed all over the files.
  - get rid of javax.* dependencies and use Apache Geronimo specs instead (thus avoiding java.net or jboss repos)
  - get rid of unused repositories
  - use dependencyManagement in myfaces-core-project to manage the dependencies of all our modules by version and scope and thus avoiding using multiple versions in different modules
  - use pluginManagement for plugin versions
  - check for duplicate definitions (e.g. Apache snapshot repo already comes from apache-parent)
....",MYFACES-3003
"This is related to MYFACES-2774

FaceletComponsitionContextImpl#finalizeForDeletion drops the 'javax_faces_metadata' from the UIViewRoot s _facetMap. Thus all 'old' viewParams are not available for propagation to the next view anymore.

This situation happens if an action returns something like
> return ""nextPage.xhtml??faces-redirect=true&includeViewParams=true"";",MYFACES-3002
See MYFACES 2942 for details,MYFACES-3001
"This is a tricky one. I made a small testing app thanks to the commentary of a user who wanted to run MyFaces in GAE and caused a condition which occasionally occurs, which prevents the ViewState to be found.
Here is the mechanis. I have a small test app which loads a page. The page triggers a jsf.ajax request from time to time with render none, periodically but not connected to the session timeout I am getting single error returns from my ajax request from the server:

Working Request before:
Request
j_id1631913672_61450686	j_id1631913672_61450686
j_id1631913672_61450686_S...	1
javax.faces.ViewState	XsWFBIdJ3cAipIW1n5/t3iVN5WSwWxZx2zbF0fTt/gvRo//LO3glFrGpAY8IMulyF7vG3zU1dN9lR7tFYcOwrVKKk107jlZKitmWUhl9XeNBb34eh5bt8QyDTVM=
javax.faces.partial.ajax	true
javax.faces.partial.execu...	menu @this
javax.faces.source	menu
menu	1
menu2	1

Response
<?xml version=""1.0"" encoding=""utf-8""?><partial-response><changes><update id=""javax.faces.ViewState""><![CDATA[XsWFBIdJ3cAipIW1n5/t3iVN5WSwWxZx2zbF0fTt/gvRo//LO3glFrGpAY8IMulyOsU+YvfYynFlR7tFYcOwrVKKk107jlZKdUuJGd3B0bumy+XxfxY80nPViy4=]]></update></changes></partial-response>

After that following error request:
j_id1631913672_61450686	j_id1631913672_61450686
j_id1631913672_61450686_S...	1
javax.faces.ViewState	XsWFBIdJ3cAipIW1n5/t3iVN5WSwWxZx2zbF0fTt/gvRo//LO3glFrGpAY8IMulyOsU+YvfYynFlR7tFYcOwrVKKk107jlZKdUuJGd3B0bumy+XxfxY80nPViy4=
javax.faces.partial.ajax	true
javax.faces.partial.execu...	menu @this
javax.faces.source	menu
menu	1
menu2	1


<?xml version=""1.0"" encoding=""utf-8""?><partial-response><error><error-name>javax.faces.application.ViewExpiredException</error-name><error-message><![CDATA[/welcome.jsfNo saved view state could be found for the view identifier: /welcome.jsf]]></error-message></error></partial-response>

And aftert hat I am getting a normal answer again:

j_id1631913672_61450686	j_id1631913672_61450686
j_id1631913672_61450686_S...	1
javax.faces.ViewState	XsWFBIdJ3cAipIW1n5/t3iVN5WSwWxZx2zbF0fTt/gvRo//LO3glFrGpAY8IMulyOsU+YvfYynFlR7tFYcOwrVKKk107jlZKdUuJGd3B0bumy+XxfxY80nPViy4=
javax.faces.partial.ajax	true
javax.faces.partial.execu...	menu @this
javax.faces.source	menu
menu	1
menu2	1

<?xml version=""1.0"" encoding=""utf-8""?><partial-response><changes><update id=""javax.faces.ViewState""><![CDATA[XsWFBIdJ3cAipIW1n5/t3iVN5WSwWxZx2zbF0fTt/gvRo//LO3glFrGpAY8IMuly5RE5nlKK54RlR7tFYcOwrVKKk107jlZK6f7NdUZRuvvbL7VYnmj4v8VmnIQ=]]></update></changes></partial-response>


As it is visible here the viewstate between the error and the visible request are the same, it is just that in the first instance it was not able to restore the view

The error I have gotten on the console is as follows:

javax.faces.application.ViewExpiredException: /welcome.jsfNo saved view state could be found for the view identifier: /welcome.jsf
        at org.apache.myfaces.lifecycle.RestoreViewExecutor.execute(RestoreViewExecutor.java:128)
        at org.apache.myfaces.lifecycle.LifecycleImpl.executePhase(LifecycleImpl.java:171)
        at org.apache.myfaces.lifecycle.LifecycleImpl.execute(LifecycleImpl.java:118)
        at javax.faces.webapp.FacesServlet.service(FacesServlet.java:189)
        at org.apache.catalina.core.StandardWrapper.service(StandardWrapper.java:1523)
        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:279)
        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:188)
        at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:641)
        at com.sun.enterprise.web.WebPipeline.invoke(WebPipeline.java:97)
        at com.sun.enterprise.web.PESessionLockingStandardPipeline.invoke(PESessionLockingStandardPipeline.java:85)
        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:185)
        at org.apache.catalina.connector.CoyoteAdapter.doService(CoyoteAdapter.java:325)
        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:226)
        at com.sun.enterprise.v3.services.impl.ContainerMapper.service(ContainerMapper.java:165)
        at com.sun.grizzly.http.ProcessorTask.invokeAdapter(ProcessorTask.java:791)
        at com.sun.grizzly.http.ProcessorTask.doProcess(ProcessorTask.java:693)
        at com.sun.grizzly.http.ProcessorTask.process(ProcessorTask.java:954)
        at com.sun.grizzly.http.DefaultProtocolFilter.execute(DefaultProtocolFilter.java:170)
        at com.sun.grizzly.DefaultProtocolChain.executeProtocolFilter(DefaultProtocolChain.java:135)
        at com.sun.grizzly.DefaultProtocolChain.execute(DefaultProtocolChain.java:102)
        at com.sun.grizzly.DefaultProtocolChain.execute(DefaultProtocolChain.java:88)
        at com.sun.grizzly.http.HttpProtocolChain.execute(HttpProtocolChain.java:76)
        at com.sun.grizzly.ProtocolChainContextTask.doCall(ProtocolChainContextTask.java:53)
        at com.sun.grizzly.SelectionKeyContextTask.call(SelectionKeyContextTask.java:57)
        at com.sun.grizzly.ContextTask.run(ContextTask.java:69)
        at com.sun.grizzly.util.AbstractThreadPool$Worker.doWork(AbstractThreadPool.java:330)
        at com.sun.grizzly.util.AbstractThreadPool$Worker.run(AbstractThreadPool.java:309)
        at java.lang.Thread.run(Thread.java:680)

The web.xml is as follows:

<?xml version=""1.0"" encoding=""UTF-8""?>
<web-app version=""3.0"" xmlns=""http://java.sun.com/xml/ns/javaee"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:schemaLocation=""http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"">
    <context-param>
        <param-name>javax.faces.PROJECT_STAGE</param-name>
        <param-value>Development</param-value>
    </context-param>

    <context-param>
        <param-name>javax.faces.DEFAULT_SUFFIX</param-name>
        <param-value>.xhtml</param-value>
    </context-param>


     <!--
           We need to set annotation lifecycyle provider manually as org.apache.myfaces.config.annotation.NoInjectionAnnotationLifecycleProvider.
           Other providers use some classes that are restricted on Google App Engine.
        -->
    <context-param>
        <param-name>org.apache.myfaces.config.annotation.LifecycleProvider</param-name>
        <param-value>org.apache.myfaces.config.annotation.NoInjectionAnnotationLifecycleProvider</param-value>
    </context-param>

        <!--
            Need to set a secret to avoid javax.crypto.BadPaddingException.
            ""param-value"" must be Base64 encoded.
            More details: http://wiki.apache.org/myfaces/Secure_Your_Application
         -->
    <!--
    <context-param>
        <param-name>org.apache.myfaces.SECRET</param-name>
        <param-value>NzY1NDMyMTA=</param-value>
    </context-param>
    -->
     <!-- Defines the secret (Base64 encoded) used to initialize the secret key
         for encryption algorithm. The size of it depends on the algorithm used for encryption -->
   

    <context-param>
        <param-name>javax.faces.STATE_SAVING_METHOD</param-name>
        <param-value>server</param-value>
    </context-param>

    <servlet>
        <servlet-name>Faces Servlet</servlet-name>
        <servlet-class>javax.faces.webapp.FacesServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>Faces Servlet</servlet-name>
        <url-pattern>*.jsf</url-pattern>
        <url-pattern>/faces/*</url-pattern>
    </servlet-mapping>
    <session-config>
        <session-timeout>
            30
        </session-timeout>
    </session-config>
    <welcome-file-list>
        <welcome-file>index.jsp</welcome-file>
    </welcome-file-list>

  
</web-app>

So the use encryption param is on default and no key overrides are set!

The link to the app is as follows:
http://people.apache.org/~werpu/tesinck4040.tar.bz2 (note that you have to remove the encryption param there from the web.xml)

",MYFACES-3000
"When using <!-- Some comment --> in a panelGrid tag, panelGrid is not rendered correctly.

For example,

<h:panelGrid columns=""2"">
<!-- Some comment -->
   <h:outputText ...../>
   <h:outputText .... />
</h:panelGrid>

Above code has not rendered correctly! ",MYFACES-2999
"Currently the FacesConfigurationProvider provides the following methods to get the FacesConfig data from different sources:

- getStandardFacesConfig()
- getMetaInfServicesFacesConfig()
- getAnnotationsFacesConfig()
- getClassloaderFacesConfig()
- getContextSpecifiedFacesConfig()
- getWebAppFacesConfig()

Unfortunately it also provides a method that should combine all these data: getFacesConfigData(). This method is here due to refactorings, but IMHO this is the last place where it should be put, because it gets ""its own implementation"" via its Factory and then calls all of the above methods on it. I know this was introduced to support wrapping the default impl, but it really is very, very ugly.

Because of the fact that the faces-config merging (and ordering) is a very complex task and there is only one ""right"" way to do it (per JSF 2.0 spec), this must not be done by a custom SPI implementation. This code should be provided by MyFaces only.

Thus IMO the right way to solve this problem is to move all merging and ordering code into its own, MyFaces-specific class. This class (and not the SPI) should provide the getFacesConfigData() method. This means that in FacesConfigurator.configure() we should first get the FacesConfigurationProvider SPI impl and then pass it to FacesConfigMerger.getFacesConfigData().

NOTE that with this approach custom FacesConfigurationProvider impls (like in Geronimo) do not have to deal with this complex merging and ordering stuff and their life is a lot easier!",MYFACES-2998
Due to some refactorings SpiUtils overlapps with ClassUtils. Thus both buildApplicationObject() methods can be removed from SpiUtils.,MYFACES-2997
setServiceProviderFinder() is not called if _getServiceProviderFinderFromInitParam() returns an instance.,MYFACES-2996
As discussed on dev list.... geronimo would like to explicitly mark component boundaries rather than relying on the TCCL changing.,MYFACES-2995
"Reported by David Jencks

I'm finding a tck problem around FacesConfig ordering.  I haven't figured out if this is caused by the geronimo integration or myfaces itself but I think there's something odd in the myfaces code.

DefaultFacesConfigurationProvider line 461 has

                   getDispenser().feed(getFacesConfig(appConfigResources, nameSlot.getName()));


getFacesConfig can return null if it doesn't find a FacesConfig with the supplied name:

   private FacesConfig getFacesConfig(List<FacesConfig> appConfigResources, String name)
   {
       for (FacesConfig cfg: appConfigResources)
       {
           if (cfg.getName() != null && name.equals(cfg.getName()))
           {
               return cfg;
           }
       }
       return null;
   }


but the feed method starts off:

   public void feed(FacesConfig config)
   {
       for (Factory factory : config.getFactories())


assuming a non-null argument.

Whatever the cause of the null I'm seeing returned from getFacesConfig this doesn't seem right.
",MYFACES-2994
"if components are added dynamically to the component tree, all postbacks to the same page (after the first postback) lead to an invalid component tree.
DefaultFaceletsStateManagementStrategy#getClientIdsAdded doesn't return the correct values any more.

currently this issue also affects the new clientside-windowhandler of myfaces extcdi.",MYFACES-2993
"
if you post back to a page the first time DefaultFaceletsStateManagementStrategy#restoreView
line List<String> clientIdsAdded = getClientIdsAdded(view);
returns 1 entry if you added a component dynamically.
if you have further postbacks (same page), you get null

currently that breaks e.g. the new clientside-windowhandler of codi!

example for the prev. description:
https://svn.apache.org/repos/asf/myfaces/extensions/cdi/trunk/examples/jsf-examples/windowhandler_jsf20/

link: ""List sample""
-> http://localhost:8080/listsample/sampleList.xhtml
-> select an entry and on the details page click 2x on the button reload.",MYFACES-2992
"I ran into this with the tck in geronimo.  The test appears to be trying to render a button that is just created and not part of a view to test the EL bits of encodeBegin.  There's no resource info associated with this button so the resource URL is null, and trying to encode it throws an NPE.  Some comments in the code seem to indicate that something else should be happening.  In any case this can be fixed by testing for a null resourceURL and not trying to encode null.

Code involved and comments that make be wonder what should be happening are in

HtmlOutcomeTargetButtonRendererBase line 115:
            String href = facesContext.getExternalContext().encodeResourceURL(
                    HtmlRendererUtils.getOutcomeTargetLinkHref(facesContext,
                            (UIOutcomeTarget) uiComponent));



ServletExternalContextImpl line 325:
    @Override
    public String encodeResourceURL(final String url)
    {
        checkNull(url, ""url"");
        checkHttpServletRequest();
        return ((HttpServletResponse) _servletResponse).encodeURL(url);
    }


HtmlRendererUtils line 1771:

    public static String getOutcomeTargetLinkHref(
            FacesContext facesContext, UIOutcomeTarget component) throws IOException {
...
        // when navigation case is null, force the ""link"" to be rendered as text
        if (navigationCase == null) {
            return null;
        }
...

Result appears to be that when there is no navigation case the first method will throw an NPE, although the comment in getOutcomeTargetLinkHref seems to indicate something else should happen.

I haven't yet figured out how to add an appropriate renderer to the mock renderkit to write a unit test showing the problem.
",MYFACES-2991
"Running the tck we get into a bunch of problems with superclasses of exposed classes not being visible to the eclipse JDTCompiler used to compile jsps.   A typical error looks like...

11-30-2010 17:23:11:  TRACE: [WIRE] - << ""Caused by: org.apache.jasper.JasperException: Unable to compile class for JSP: [\n]""
11-30-2010 17:23:11:  TRACE: [WIRE] - << ""[\n]""
11-30-2010 17:23:11:  TRACE: [WIRE] - << ""An error occurred at line: 1 in the generated java file[\n]""
11-30-2010 17:23:11:  TRACE: [WIRE] - << ""The type org.apache.myfaces.shared_impl.taglib.UIComponentELTagBase cannot be resolved. It is indirectly referenced from required .class files[\n]""


I don't know how the eclipse compiler is tying itself in these knots, I guess it assumes that the classloader you give it can load by name all superclasses of accessible classes.  It would be better to figure out either how to give the compiler such a classloader or figure out how to remove this assumption from the compiler, but it seems more practical at the moment to just export the needed superclasses.",MYFACES-2990
"As per the JSF spec  <f:validateLongRange> does not require a maximum or a miniumum attribute but in the implementation, ValidateLongRangeTag  creates the validator from its super class GenericMinMaxValidatorTag which requires either a maximum or a minimum value. ",MYFACES-2989
"The following maven dependency is needed in order to use ValueExpression and MethodExpression in the code:

<dependency>
    <groupId>javax.el</groupId>
    <artifactId>el-api</artifactId>
    <version>1.0</version>
    <scope>provided</scope>
</dependency>",MYFACES-2988
See the discussion on the mailing list: http://mail-archives.apache.org/mod_mbox/myfaces-users/201012.mbox/%3C349D8CE30DC0554181C8EAD443A6DDA9887803@frnaserv03.nanterre.oberthurcs.com%3E,MYFACES-2987
"This is the last step to solve MYFACES-2944 and MYFACES-2945 problem related to OSGi and SPI. Now it is possible to call 

ServiceLoaderFinderFactory.setServiceLoaderFinder(ExternalContext ectx, ServiceLoaderFinder slp)

or 

ServiceLoaderFinderFactory.setServiceLoaderFinder(ServletContext ctx, ServiceLoaderFinder slp)

Just before initialization to set a ServiceLoaderFinder that will be used later to locate SPI interfaces. In this way, it is possible to provide a code that looks SPI interfaces using OSGi bundles.
",MYFACES-2986
"I have a jsf page wich is using (only) one viewscoped backing bean. When I want to navigate away from this jsf page to another non-jsf-page (in my case: jsp page) I wanted to use implicit navigation. 

If the outcome of the action of a commandbutton is ""index.jsp"" and I click this button I see the jsp page and the viewscoped bean is destroyed just fine (checked with @Predestroy annotation and System.out.println). Of course, in this case the browser displays still the jsf page in address bar. 

If the outcome of the action is ""index.jsp?faces-redirect=true"" the browser displays the jsp page and the correct url in address bar. BUT ... the viewscoped bean is NOT destroyed! When clicking a link on the jsp page back to the jsf page, this leads to another instance of the viewscoped bean and so on .. if user is switching back and forth between those 2 pages, I get more and more instances of the viewscoped bean where there should be only one.",MYFACES-2985
"Since ResourceWrapper doesn't wrap getContentType (is not defined as abstract in the 2.0 spec) some component libraries (namely primefaces) do not return a proper content type. 

Currently MyFaces directly sets this value in ResourceHandlerImpl.java. In case the wrapper doesn't define an own content type, we end up passing null to the response. 

In this case the servlet container guesses the content type depending on the extension of the request URL. For the classic *.xhtml mapping we now get text/xhtml for each and every resource request (which leads to broken detection of css and images for example).

TODO: we should check if the wrapper returns null and ask the external context for the proper content type in this case.",MYFACES-2984
There are a few instances where only the TCCL is considered for loading resources that are actually in a myfaces jar.  This won't work in an isolated classes environment like OSGI.  A simple fix is to try the TCCL and if it doesn't work try the cl that loads myfaces classes.  This solves the problem in geronimo's OSGI environment but I wonder if only the cl for myfaces classes should be considered in many of these cases since it looks like the resource being loaded is often a known file packed in with myfaces that can't be replaced by a user supplied resource.,MYFACES-2983
"Checking some stuff in myfaces commons, I notice some files has not been updated since 1.1.x. In jsf 1.2, standard localized messages were added to converters, so we need to sync those ones.",MYFACES-2982
"in web.xml i have configured the following:

    <context-param>
            <param-name>org.apache.myfaces.annotation.SCAN_PACKAGES</param-name>
            <param-value>com.dummy</param-value>
    </context-param>

In tomcat / jetty the given package is scanned ok. But when deploying to Weblogic I get the following stacktrace:

SEVERE: An error occured while initializing MyFaces: URI scheme is not ""file""
java.lang.IllegalArgumentException: URI scheme is not ""file""
	at java.io.File.<init>(File.java:366)
	at org.apache.myfaces.config.annotation._PackageInfo.getClasses(_PackageInfo.java:179)
	at org.apache.myfaces.config.annotation.DefaultAnnotationProvider.packageClasses(DefaultAnnotationProvider.java:324)
	at org.apache.myfaces.config.annotation.DefaultAnnotationProvider.getAnnotatedWebInfClasses(DefaultAnnotationProvider.java:275)
	at org.apache.myfaces.config.annotation.DefaultAnnotationProvider.getAnnotatedClasses(DefaultAnnotationProvider.java:153)
	at org.apache.myfaces.config.annotation.AnnotationConfigurator.createFacesConfig(AnnotationConfigurator.java:104)
	at org.apache.myfaces.config.FacesConfigurator.feedAnnotationConfig(FacesConfigurator.java:574)
	at org.apache.myfaces.config.FacesConfigurator.configure(FacesConfigurator.java:506)
	at org.apache.myfaces.webapp.AbstractFacesInitializer.buildConfiguration(AbstractFacesInitializer.java:303)
	at org.apache.myfaces.webapp.Jsp21FacesInitializer.initContainerIntegration(Jsp21FacesInitializer.java:73)
	at org.apache.myfaces.webapp.AbstractFacesInitializer.initFaces(AbstractFacesInitializer.java:126)
	at org.apache.myfaces.webapp.StartupServletContextListener.contextInitialized(StartupServletContextListener.java:111)
	at weblogic.servlet.internal.EventsManager$FireContextListenerAction.run(EventsManager.java:481)
	at weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:321)
	at weblogic.security.service.SecurityManager.runAs(SecurityManager.java:121)
	at weblogic.servlet.internal.EventsManager.notifyContextCreatedEvent(EventsManager.java:181)
	at weblogic.servlet.internal.WebAppServletContext.preloadResources(WebAppServletContext.java:1801)
	at weblogic.servlet.internal.WebAppServletContext.start(WebAppServletContext.java:3045)
	at weblogic.servlet.internal.WebAppModule.startContexts(WebAppModule.java:1397)
	at weblogic.servlet.internal.WebAppModule.start(WebAppModule.java:460)
	at weblogic.application.internal.flow.ModuleStateDriver$3.next(ModuleStateDriver.java:425)
	at weblogic.application.utils.StateMachineDriver.nextState(StateMachineDriver.java:83)
	at weblogic.application.internal.flow.ModuleStateDriver.start(ModuleStateDriver.java:119)
	at weblogic.application.internal.flow.ScopedModuleDriver.start(ScopedModuleDriver.java:200)
	at weblogic.application.internal.flow.ModuleListenerInvoker.start(ModuleListenerInvoker.java:247)
	at weblogic.application.internal.flow.ModuleStateDriver$3.next(ModuleStateDriver.java:425)
	at weblogic.application.utils.StateMachineDriver.nextState(StateMachineDriver.java:83)
	at weblogic.application.internal.flow.ModuleStateDriver.start(ModuleStateDriver.java:119)
	at weblogic.application.internal.flow.StartModulesFlow.activate(StartModulesFlow.java:27)
	at weblogic.application.internal.BaseDeployment$2.next(BaseDeployment.java:1267)
	at weblogic.application.utils.StateMachineDriver.nextState(StateMachineDriver.java:83)
	at weblogic.application.internal.BaseDeployment.activate(BaseDeployment.java:409)
	at weblogic.application.internal.EarDeployment.activate(EarDeployment.java:54)
	at weblogic.application.internal.DeploymentStateChecker.activate(DeploymentStateChecker.java:161)
	at weblogic.deploy.internal.targetserver.AppContainerInvoker.activate(AppContainerInvoker.java:79)
	at weblogic.deploy.internal.targetserver.BasicDeployment.activate(BasicDeployment.java:184)
	at weblogic.deploy.internal.targetserver.BasicDeployment.activateFromServerLifecycle(BasicDeployment.java:361)
	at weblogic.management.deploy.internal.DeploymentAdapter$1.doActivate(DeploymentAdapter.java:51)
	at weblogic.management.deploy.internal.DeploymentAdapter.activate(DeploymentAdapter.java:196)
	at weblogic.management.deploy.internal.AppTransition$2.transitionApp(AppTransition.java:30)
	at weblogic.management.deploy.internal.ConfiguredDeployments.transitionApps(ConfiguredDeployments.java:233)
	at weblogic.management.deploy.internal.ConfiguredDeployments.activate(ConfiguredDeployments.java:169)
	at weblogic.management.deploy.internal.ConfiguredDeployments.deploy(ConfiguredDeployments.java:123)
	at weblogic.management.deploy.internal.DeploymentServerService.resume(DeploymentServerService.java:173)
	at weblogic.management.deploy.internal.DeploymentServerService.start(DeploymentServerService.java:89)
	at weblogic.t3.srvr.SubsystemRequest.run(SubsystemRequest.java:64)
	at weblogic.work.ExecuteThread.execute(ExecuteThread.java:201)
	at weblogic.work.ExecuteThread.run(ExecuteThread.java:173)

The UrlConnection in _PackageInfo.getClasses is an instanceof weblogic.utils.zip.ZipURLConnection

I am not sure if this is a weblogic problem or if this is a bug in myfaces, but looking at the code in _PackageInfo.getClasses() i suspect it works in tomcat since they unpack the archive. When I deploy to Weblogic my stuff is packaged into an ear archive.

The error occurs in the constructor of File, around here:
   if ((scheme == null) || !scheme.equalsIgnoreCase(""file""))
            throw new IllegalArgumentException(""URI scheme is not \""file\"""");
",MYFACES-2981
"<h:form id=""form1"">
  <f:ajax render=""@form"">
    <h:commandButton id=""button"" value=""Click me 1!""/>
  </f:ajax>
</h:form>
        
<h:form id=""form2"">
  <h:commandButton id=""button"" value=""Click me 2!"" >
    <f:ajax render=""@form""/>
  </h:commandButton>
</h:form>

If you click ""Click me 1"" than button disappers because it is no rendered in ajax XML output. 

The second button with inner f:ajax work as expected. ",MYFACES-2980
"I have a logout method, shown below:

    public String logout() {
        final FacesContext fc = FacesContext.getCurrentInstance();
        final ExternalContext externalContext = fc.getExternalContext();
        try {
            externalContext.invalidateSession();
            externalContext.redirect(""http://www.google.nl"");
        } catch (IOException e) {
            log.error(""Error redirecting after logout"", e);
        } finally {
            fc.responseComplete();
        }
        return null;
    }

When I invoke this method, I get the following Exception from OpenWebBeans:

javax.enterprise.context.ContextNotActiveException: WebBeans context with scope type annotation @SessionScoped does not exist within current thread
	at org.apache.webbeans.container.BeanManagerImpl.getContext(BeanManagerImpl.java:309)
	at org.apache.webbeans.intercept.NormalScopedBeanInterceptorHandler.getContextualInstance(NormalScopedBeanInterceptorHandler.java:124)
	at org.apache.webbeans.intercept.NormalScopedBeanInterceptorHandler.invoke(NormalScopedBeanInterceptorHandler.java:95)
	at org.apache.myfaces.examples.ebanking.web.bean.SessionBean_$$_javassist_2.getCustomer(SessionBean_$$_javassist_2.java)
	at sun.reflect.GeneratedMethodAccessor37.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at javax.el.BeanELResolver.getValue(BeanELResolver.java:302)
	at javax.el.CompositeELResolver.getValue(CompositeELResolver.java:175)
	at org.apache.myfaces.el.unified.resolver.FacesCompositeELResolver.getValue(FacesCompositeELResolver.java:142)
	at org.apache.el.parser.AstValue.getValue(AstValue.java:123)
	at org.apache.el.parser.AstEmpty.getValue(AstEmpty.java:45)
	at org.apache.el.parser.AstNot.getValue(AstNot.java:42)
	at org.apache.el.ValueExpressionImpl.getValue(ValueExpressionImpl.java:186)
	at org.apache.webbeans.el.WrappedValueExpression.getValue(WrappedValueExpression.java:68)
	at org.apache.myfaces.view.facelets.el.TagValueExpression.getValue(TagValueExpression.java:85)
	at javax.faces.component._DeltaStateHelper.eval(_DeltaStateHelper.java:260)
	at javax.faces.component.UIComponentBase.isRendered(UIComponentBase.java:1007)
	at javax.faces.component.UIComponent.isVisitable(UIComponent.java:289)
	at javax.faces.component.UIComponent.visitTree(UIComponent.java:752)
	at javax.faces.component.UIComponentBase.visitTree(UIComponentBase.java:991)
	at javax.faces.component.UIComponent.visitTree(UIComponent.java:778)
	at javax.faces.component.UIComponentBase.visitTree(UIComponentBase.java:991)
	at org.apache.myfaces.view.facelets.tag.ui.DebugPhaseListener._doTreeVisit(DebugPhaseListener.java:310)
	at org.apache.myfaces.view.facelets.tag.ui.DebugPhaseListener.afterPhase(DebugPhaseListener.java:286)
	at org.apache.myfaces.lifecycle.PhaseListenerManager.informPhaseListenersAfter(PhaseListenerManager.java:111)
	at org.apache.myfaces.lifecycle.LifecycleImpl.executePhase(LifecycleImpl.java:185)
	at org.apache.myfaces.lifecycle.LifecycleImpl.execute(LifecycleImpl.java:118)
	at javax.faces.webapp.FacesServlet.service(FacesServlet.java:189)

This happens because the DebugPhaseListener starts visiting the tree and, in the process, needs to resolve a value expression, which points to an OWB session bean.

It only happens when the DebugPhaseListener is installed. In production mode everything is fine.",MYFACES-2979
"Using the cargo-maven2-plugin and jetty 6, you will get an application path like this: /private/var/folders/w4/w4XHIDXbF9OIP9d9vn2QjE+++TI/-Tmp-/Jetty_0_0_0_0_8080_myfaces-extcdi-cargo-test-0.9.1-SNAPSHOT.war__myfaces-extcdi-cargo-test__-lvwnpd/webapp/

Unfortunately this path contains some regex control characters like '+' and thus DefaultFaceletFactory fails with the following Exception when calling String.replaceFirst():

javax.faces.FacesException: java.util.regex.PatternSyntaxException: Dangling meta character '+' near index 48
/private/var/folders/w4/w4XHIDXbF9OIP9d9vn2QjE+++TI/-Tmp-/Jetty_0_0_0_0_8080_myfaces-extcdi-cargo-test-0.9.1-SNAPSHOT.war__myfaces-extcdi-cargo-test__-lvwnpd/webapp/
                                                ^
	at org.apache.myfaces.shared_impl.context.ExceptionHandlerImpl.wrap(ExceptionHandlerImpl.java:241)
	at org.apache.myfaces.shared_impl.context.ExceptionHandlerImpl.handle(ExceptionHandlerImpl.java:156)
	at org.apache.myfaces.lifecycle.LifecycleImpl.executePhase(LifecycleImpl.java:191)
	at org.apache.myfaces.lifecycle.LifecycleImpl.execute(LifecycleImpl.java:118)
	at org.apache.myfaces.extensions.cdi.jsf2.impl.listener.phase.CodiLifecycleWrapper.execute(CodiLifecycleWrapper.java:55)
	at javax.faces.webapp.FacesServlet.service(FacesServlet.java:189)
	at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:491)
	at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:367)
	at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:185)
	at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181)
	at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:689)
	at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:391)
	at org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:146)
	at org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)
	at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:139)
	at org.mortbay.jetty.Server.handle(Server.java:285)
	at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:457)
	at org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:751)
	at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:500)
	at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:209)
	at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:357)
	at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:329)
	at org.mortbay.thread.BoundedThreadPool$PoolThread.run(BoundedThreadPool.java:475)
Caused by: java.util.regex.PatternSyntaxException: Dangling meta character '+' near index 48
/private/var/folders/w4/w4XHIDXbF9OIP9d9vn2QjE+++TI/-Tmp-/Jetty_0_0_0_0_8080_myfaces-extcdi-cargo-test-0.9.1-SNAPSHOT.war__myfaces-extcdi-cargo-test__-lvwnpd/webapp/
                                                ^
	at java.util.regex.Pattern.error(Pattern.java:1713)
	at java.util.regex.Pattern.sequence(Pattern.java:1878)
	at java.util.regex.Pattern.expr(Pattern.java:1752)
	at java.util.regex.Pattern.compile(Pattern.java:1460)
	at java.util.regex.Pattern.<init>(Pattern.java:1133)
	at java.util.regex.Pattern.compile(Pattern.java:823)
	at java.lang.String.replaceFirst(String.java:2146)
	at org.apache.myfaces.view.facelets.impl.DefaultFaceletFactory._createViewMetadataFacelet(DefaultFaceletFactory.java:308)
	at org.apache.myfaces.view.facelets.impl.DefaultFaceletFactory.getViewMetadataFacelet(DefaultFaceletFactory.java:394)
	at org.apache.myfaces.view.facelets.impl.DefaultFaceletFactory.getViewMetadataFacelet(DefaultFaceletFactory.java:376)
	at org.apache.myfaces.view.facelets.FaceletViewDeclarationLanguage._getViewMetadataFacelet(FaceletViewDeclarationLanguage.java:1902)
	at org.apache.myfaces.view.facelets.FaceletViewDeclarationLanguage.access$000(FaceletViewDeclarationLanguage.java:128)
	at org.apache.myfaces.view.facelets.FaceletViewDeclarationLanguage$FaceletViewMetadata.createMetadataView(FaceletViewDeclarationLanguage.java:2136)
	at org.apache.myfaces.lifecycle.RestoreViewExecutor.execute(RestoreViewExecutor.java:161)
	at org.apache.myfaces.lifecycle.LifecycleImpl.executePhase(LifecycleImpl.java:171)
	... 20 more


String.replaceFirst() is used three times, in _createFacelet(), _createViewMetadataFacelet() and _createCompositeComponentMetadataFacelet(). Each time it is used to remove the path of the facelet-file.

The solution is to treat the search parameter as literal text and not as a regex. Thus doing exactly what String.replaceFirst() internally does, however, with Pattern.LITERAL set.",MYFACES-2978
"Factories loaded through META-INF/services/[factory name] should use FacesConfig object, instead feed its result directly.",MYFACES-2977
"The current osgi solution of using require-bundle between the api and impl jars is generally thought of as osgi worst-practice and just doesn't work with snapshot versions (presumably a bug in the bundle plugin).

Also this does not easily support hiding the impl classes.

Geronimo would like to use a single bundle containing both api and impl and hide the impl classes as much as possible.  This requires some slight modifications to the FactoryFinder so that impl classes can be loaded from the same classloader as FactoryFinder if they are not visible to the context class loader.

I think myfaces would be the best place for this combined bundle but geronimo can build it if necessary.  The FactoryFinder classloader changes are therefore more important.

I've suggested a module name which maps to the bundle symbolic name well, as this seems to be the preferred maven/osgi strategy at apache.",MYFACES-2976
"NamedEventManager should be configured per web application, and do not use a static instance. The best way to do that is attach it on RuntimeConfig",MYFACES-2975
"Instead call Application instance or RuntimeConfig directly, we should handle config information retrieved through annotation scanning like if it was another FacesConfig. In that way, the algorithm on FacesConfigurator becomes simpler.

Additionally, we need to fix metadataComplete behavior. It seems it is not working right now. ",MYFACES-2974
"UIComponent.unsubscribeFromEvent() calls getFacesContext().getApplication().unsubscribeFromEvent(), while the event listener added by subscribeToEvent() still remains in _systemEventListenerClassMap. This means that the component system event listener cannot be removed.",MYFACES-2973
"There is a minor bug which is not triggered in the jsf.js addOnload function, we have a generic functionality which checks for addOnLoad on a target and weaves its own function around, however internally we only have a check for window.onload this needs to be changed also for mobile devices a null check on target needs to be performed upfront since some mobile devices do not have a proper window object.
",MYFACES-2972
The http get handling code in our ajax scripts are slightly broken we have to adjust the code a little bit to deal with ajax http get properly,MYFACES-2971
"Checking some code on myfaces commons, I notice f:convertNumber conversion is not symmetric when currencyCode and currencySymbol are used.

The problem can be seen when an application has one locale, but you require the field read a different currency for the default one. The solution is call formatCurrency too from getAsObject method.

It seems MyFaces implements the javadoc description for NumberConverter without think carefully if that description was complete or not. On getAsString it says:

""...If the type is set to currency, it is also possible to configure the currency symbol to be used, using either the currencyCode or currencySymbol properties. If both are set, the value for currencyCode takes precedence on a JDK 1.4 (or later) JVM; otherwise, the value for currencySymbol takes precedence....""

But if that so, and getAsObject receive the string formatted with the previous rule, it should take into account the configured currencyCode/currencySymbol.

",MYFACES-2970
"When an error happens a example number in String format is added to f:convertNumber message, but in some locations ',' char is used as separator instead '.', so the message is not correct.",MYFACES-2969
"This is probably not specified but mojarra does it: Application.createMethodBinding creates method expression with void return type. That makes sence because original purpose of MethodBinding is a reference to faces listeners and they are without return values mostly.

o.a.m.ApplicationImpl creates value expression to method with Object return type.",MYFACES-2968
"Currently we have the internal error messages only in english, the aim of this issue is to introduce the basic i18n mechanisms for the error messages in conjunction with the internationalized strings for german and english.
",MYFACES-2967
"The impl request function is too much sphagetti code for my taste, we need to refactor it",MYFACES-2966
"If you go to http://ipad.parleys.com/parleys-frontend-ipad-1.0/ on your iPad, and then click on the button ""Latest"", ""Top Rated"" or some other button that invokes an AJAX request, the browser crashes and goes back to the desktop.

A simple debugging session pointed me to the jsf.ajax.request() invocation, but that's still pretty broad. Reverting to 2.0.1 solved the issue.

The code can be viewed online at: http://code.google.com/p/parleys-html5/source/browse/#svn/trunk/web-ipad/src/main/webapp

Talked offline with Werner about the issue and we think it's somewhere in the 2.0.2 optimizations.

Werner's first guess: ""If you want to check yourself you can set an alert in replacenode in Dom.js and see if the code is reached
And see if it finishes.
I am 100 percent sure the problem is there.
But it is just sixth sense on my part.
So just a guessing.""",MYFACES-2965
myfaces will only run on tomcat in osgi due to a mistaken Import-Package entry generated due to tomcat integration code.,MYFACES-2964
Set default templates automatically when jsfVersion is 20 or 2.0 with myfaces-builder-plugin,MYFACES-2963
"Descriptions of components, attributes, etc. are missing in taglib.xml files generated by MyFaces Builder Plugin.

Those documentations are used in most IDES (AFAIK Eclipse and Intellij). Of course most IDEs cache the documentation for standard Html libraries, but they read the documentation from taglib.xml file for the other libraries.",MYFACES-2962
"When StateHelper(Serializable, Object) is called in Mojarra & component has no local value but ValueExpression for this attribute that returns null, default value is returned.
Looking over MyFaces code, defaultValue passed in is not used at all if there's no local value and ValueExpression is defined. ",MYFACES-2961
"
When using the following, I am able to execute an action method:

<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE html>
<html xmlns=""http://www.w3.org/1999/xhtml""
      xmlns:f=""http://java.sun.com/jsf/core""
      xmlns:h=""http://java.sun.com/jsf/html""
      xmlns:ui=""http://java.sun.com/jsf/facelets"">
<h:head>
  <title>BUG...</title>
</h:head>
<h:body>
  <h:form id=""jsfForm"">
    <h:commandButton id=""button"" value=""dasdsa"" action=""#{fileMonitor.clicker}"">
      <f:ajax />
    </h:commandButton>
  </h:form>
</h:body>
</html>


However, when using this <h:form prependId=""false"" ......> it does not work.

",MYFACES-2960
"According to the requirement specifrication, MyFaces 1.1 is supposed to support java 1.3 or later, JSP 1.2, JSTL 1.0, and a Java Servlet 2.3 implementation. Unfortunately, the FacesConfigurator is using the javax.servlet.jsp.el package, which is only available since JSP 2.0.

Following classes to use wrongly javax.servlet.jsp.el.

- org.apache.myfaces.shared_impl.util.ClassUtils
- org.apache.myfaces.shared_impl.util._Coercions
- org.apache.myfaces.config.ManagedBeanBuilder
- org.apache.myfaces.el.ELParserHelper
- org.apache.myfaces.el.MethodBindingImpl
- org.apache.myfaces.el.ValueBindingImpl

Issue is related to the fact, that the apache commons-el 1.0 package is used, which requires the JSP 2.0 interfaces. This issue can be solved by reworking in two ways

1) Rework the interfaces for commons-el to remove the dependency for JSP 2.0

2) or by Adding the missing classes manually. You need to remove the annotations within the source code and compile it using Java 1.3

- ELException
- Expression
- ExpressionEvalutator
- FunctionMapper
- VariableResolver

The corresponding exception thrown within my j2ee container below

Error occured in invoking event ""contextInitialized()"" on listener class org.apache.myfaces.webapp.StartupServletContextListener. The error is: java.lang.NoClassDefFoundError: javax/servlet/jsp/el/ELException
	at org.apache.myfaces.config.FacesConfigurator.feedStandardConfig(FacesConfigurator.java:308)
	at org.apache.myfaces.config.FacesConfigurator.configure(FacesConfigurator.java:276)
	at org.apache.myfaces.webapp.StartupServletContextListener.initFaces(StartupServletContextListener.java:82)
	at org.apache.myfaces.webapp.StartupServletContextListener.contextInitialized(StartupServletContextListener.java:65)
	at com.sap.engine.services.servlets_jsp.server.runtime.context.WebEvents.contextInitialized(WebEvents.java:45)
	at com.sap.engine.services.servlets_jsp.server.container.ApplicationThreadInitializer.run(ApplicationThreadInitializer.java:112)
	at com.sap.engine.core.thread.impl3.ActionObject.run(ActionObject.java:37)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sap.engine.core.thread.impl3.SingleThread.execute(SingleThread.java:104)
	at com.sap.engine.core.thread.impl3.SingleThread.run(SingleThread.java:176)",MYFACES-2959
"If ajax response removes HTML form with source element, .js stops processing of others  HTML forms (specially it does not update ViewState elements).





",MYFACES-2958
"Right now, we need a special profile to load myfaces-impl module on eclipse, because myfaces-impl-ee6 module is added on source folders. 

Investigating alternative ways to do it, I notice that we can use maven shade plugin to handle myfaces-impl-ee6 module and prevent this condition. The advantage of this plugin is myfaces-impl-ee6 module is this is not added as a source path, but it updates binary and source jar properly.

The only disadvantage is maven-shade-plugin does not play well with felix OSGI bundle plugin. We can't control the execution order of maven plugins, due to http://jira.codehaus.org/browse/MNG-2258, and in this case, bundle plugin is executed before shade plugin.

There is a workaround for this one and is unpack myfaces-impl-ee6 .class files, so it will be taken into account by bundle plugin. Then, maven shade plugin detect the duplicate but does not stop working, replacing the class with the shaded one.",MYFACES-2957
"build-metadata goal does not take into account exclude generated source directory on myfaces-builder-plugin. 

I suppose that is the problem that causes tomahawk fails to build on solaris (hudson).

The idea is just add generatedSourceDirectory param to build-metadata goal, so when source directories are calculated, this one is excluded.

It is necessary to simplify ModelBuilder interface too.",MYFACES-2956
"Netbeans does not recognize myfaces builder plugin, because it is not used the ""standard"" convention:

${project.build.directory}/generated-sources/[generator tool name]

${project.build.directory}/generated-resources/[generator tool name]

Other generator tools like maven apt plugin, maven castor plugin and axis2 wsdl2code maven plugin uses that convention.

This change requires update all pom.xml files that uses the plugin.",MYFACES-2955
"Calling ExternalContext.encodeRedirectURL() with a baseUrl containing empty parameters fails with an ArrayIndexOutOfBoundsException.

Example:

  externalContext.encodeRedirectURL(""/test?p1=&p2=test"", null)

The spec contains the following statement regarding this method: ""This method must be able to encode the parameters to a baseUrl that may or may not have existing query parameters""

I've attached a unit test and a patch for this issue.
",MYFACES-2954
"We currently use a _very_ old version of the maven-checkstyle-plugin, which is not maven3 compatible [1].
Maybe there are other problems too, but we should be able to build myfaces with maven3.
I'll fix the checkstyle rules (have done this for OpenWebBeans already, so I know what to change).
We then need to release the whole build chain:

* myfaces-build-tools
* myfaces-master-pom
...

[1] https://cwiki.apache.org/MAVEN/maven-3x-plugin-compatibility-matrix.html",MYFACES-2953
"Currently MyFaces aborts the initialization when there is no configured ""FacesServlet"". While this does make sense in almost all cases, there are options when we do want the framework to initialize in a proper way:

Atmoshpere's Meteor ""framework"" to support comet/websocket",MYFACES-2952
"Reported by Martin Koci

MK>> a issue to consider in
MK>> org.apache.myfaces.view.facelets.tag.TagAttributeImpl:

MK>> Methods
MK>> TagAttributeImpl.getMethodExpression and
MK>> TagAttributeImpl.getValueExpression use
MK>> CompositeComponentELUtils.isCompositeComponentXYZ methods to detect if
MK>> current #{} contains cc expression. But consider following: if user
MK>> migrates from facelets 1.2 to 2.0, this new cc detection slows down
MK>> build view process. In one my test case VDL.buildView calls
MK>> CompositeComponentELUtils.isCompositeComponentXYZ approx 3000 times per
MK>> build view with no match. isCompositeComponentXYZ is not cheap method
MK>> because it uses Pattern.matches().

MK>> Are there possibilities to avoid this? For example is possible have some
MK>> kind of ""isProcessingCompositeComponent"" method and skip
MK>> Pattern.matches() if false? We are in VDL.buildView here and no
MK>> components are available yet, no use of methods like
MK>> UIComponent.isCompositeComponent(UIComponent) is possible.

See discussion on dev list:

[core] performance: TagAttributeImpl and composite component EL detection
",MYFACES-2951
"Reported by Gerhard Petraceck

""...action methods are allowed to use void as return type the implementation forces a string,  el-ri ignores the return type - juel e.g. checks for it and fails in case of void....""

The javadoc of ExpressionFactory.createMethodExpression says this:

""....If the expression is a String literal, a MethodExpression  is created, which when invoked, returns the String literal, coerced to expectedReturnType. An ELException is thrown if expectedReturnType is void or if the coercion of the String literal to the expectedReturnType yields an error (see Section ""1.16 Type Conversion"")...""

""...expectedReturnType - The expected return type for the method to be found. After evaluating the expression, the MethodExpression must check that the return type of the actual method matches this type. Passing in a value of null indicates the caller does not care what the return type is, and the check is disabled....""

JSF 2.0 section 7.3 says this:

""... Application action is not a formal JSF API; instead any method that meets the following requirements may be used as an Action by virtue of evaluating a method binding expression:
■ The method must be public.
■ The method must take no parameters.
■ The method must return Object. ....""

The conclusion is null should be used as expectedReturnType for create action MethodExpressions, instead use String.class. 


",MYFACES-2950
"I think that MyFaces should use JSF 2 resource handling instead of directly write script resources to the output stream. Why not use the UIViewRoot.addComponentResource. The problem I´m having is that I´ve got a simple portal implementation that queries the resources added to the viewroot and then puts them in the portal <head> section.

This could potentially be a problem in a portlet environment where several portlets will write out this script import directly to the response stream instead of collecting one of them under head.

Regards,
Hampus",MYFACES-2949
"invokeOnComponent does not call pushComponentToEL / popComponentFromEL like visitTree does.

That prevents EL expression evaluation inside a callback to work correctly.",MYFACES-2948
"In OSGi environment, BundleClassLoader is used to get jar file resource. , and the conn (refer the code below) is BundleURLConnection, and will never be JarURLConnection. This causes faces configuration files under jar file can not be accessed in OSGi environment. 

Code segment from myfaces-impl-2.0.2-sources\org\apache\myfaces\view\facelets\util\Classpath.java

for (  Enumeration<URL> urls = loader.getResources(resource); urls.hasMoreElements();   )
        {
            URL url = urls.nextElement();
            URLConnection conn = url.openConnection();
            conn.setUseCaches(false);
            conn.setDefaultUseCaches(false);

            JarFile jar;
            if (conn instanceof JarURLConnection)
            {
                jar = ((JarURLConnection) conn).getJarFile();
            }
            else
            {
                jar = _getAlternativeJarFile(url);
            }

            if (jar != null)
            {
                _searchJar(loader, result, jar, prefix, suffix);
            }
            else
            {
                if (!_searchDir(result, new File(URLDecoder.decode(url.getFile(), ""UTF-8"")), suffix))
                {
                    _searchFromURL(result, prefix, suffix, url);
                }
            }
        }",MYFACES-2947
"Some days ago, it was mentioned on myfaces dev list that ""targets""
attribute does not seem to work as expected. After review the available
documentation and doing some test, my conclusion was the spec is good,
but this part needs a little bit more documentation (and fix some 
bugs), because there are use cases that are causing problems to users.
Some of these problems has been already mentioned (spec issue 755) but
my intention here is do a full and detailed analysis. 

The property ""targets"" is used for these tags:

composite:actionSource
composite:editableValueHolder
composite:valueHolder
composite:clientBehavior
composite:attribute

For the first four cases, this property is used by :

ViewDeclarationLanguage.retargetAttachedObjects(FacesContext context,
                                    UIComponent topLevelComponent,
                                    List<AttachedObjectHandler> handlers)

In JSF 2.0 rev A it was made explicit the need to handle nested
composite component with this lines:

""... The implementation must support retargeting attached objects from 
the top level compsite component to targets that are composite and 
non-composite components ....""

This is ok ;-).

The problem is the description about how composite:attribute ""targets"" 
property works does not match with the algorithm for:

ViewDeclarationLanguage.retargetMethodExpressions(FacesContext context, 
                                    UIComponent topLevelComponent)

Here is the documentation about composite:attribute ""targets"":

""... If this element has a method-signature attribute, 

the value of the targets attribute must be interpreted as a space 
(not tab) separated list of client ids (relative to the top level 
component) of components within the <composite:implementation>  section. 

Space is used as the delimiter for compatibility with the IDREFS and 
NMTOKENS data types from the XML Schema. 

Each entry in the list must be interpreted as the id of an inner 
component to which the MethodExpression  from the composite component 
tag in the using page must be applied. 

If this element has a method-signature attribute, but no targets 
attribute, the value of the name  attribute is used as the single entry 
in the list. 

If the value of the name  attribute is not one of the special values 
listed in the description of the name attribute, targets  (or its 
derived value) need not correspond to the id of an inner component ..."".

At this point everything seems to be ok. But look this documentation
(I'll put the important points):

"".....
 # Get the value of the targets attribute. If the value is a ValueExpression 
   evaluate it. If there is no targets attribute, let the name of the 
   metadata element be the evaluated value of the targets attribute.
 # Interpret targets as a space (not tab) separated list of ids. For each entry 
   in the list:
     ......
    # If name is equal to the string ""action"" without the quotes, call 
      ActionSource2.setActionExpression(javax.el.MethodExpression) on target, 
      passing attributeMethodExpression.
    # If name is equal to the string ""actionListener"" without the quotes, call 
      ActionSource.addActionListener(javax.faces.event.ActionListener) on target, 
      passing attributeMethodExpression wrapped in a MethodExpressionActionListener.
    # If name is equal to the string ""validator"" without the quotes, call 
      EditableValueHolder.addValidator(javax.faces.validator.Validator) on target, 
      passing attributeMethodExpression wrapped in a MethodExpressionValidator.
    # If name is equal to the string ""valueChangeListener"" without the quotes, call 
      EditableValueHolder.addValueChangeListener(javax.faces.event.ValueChangeListener) 
      on target, passing attributeMethodExpression wrapped in a 
      MethodExpressionValueChangeListener.
    # Otherwise, assume that the MethodExpression should be placed in the 
      components attribute set. The runtme must create the MethodExpression 
      instance based on the value of the ""method-signature"" attribute.
.....""

My first interpretation of this javadoc was that ""targets"" only has sense for ""action"",
""actionListener"", ""validator"" and ""valueChangeListener"". But note if that's true,
someone could expect something like the description on retargetAttachedObjects, right?

The current behavior (Mojarra 2.0.3 and Myfaces 2.0.2) is the same, if we have two
nested composite components, that will throw a ClassCastException. There is a issue already
open for this one:

https://javaserverfaces-spec-public.dev.java.net/issues/show_bug.cgi?id=755

There are two possible alternatives here:

 1. Implement the algorithm proposed for retargetMethodExpressions and ignore 
    composite:attribute ""targets"" property says. 
 2. Implement the expected behavior of composite:attribute ""targets"" property and make
    some changes to retargetMethodExpressions algorithm.

The intention is take option 2 and include it for JSF 2.0, because in theory should be 
handled as an implementation detail of the algorithm (anyway it could be good to update 
the documentation with the same advice used for retargetAttachedObjects).

For ""action"", ""actionListener"", ""validator"" and ""valueChangeListener"" it is clear that
the action to take is something like this: 

 - If target is a composite component and that one ""retarget"" to other components and 
   additionally does not implements [ActionSource2/EditableValueHolder], call:
   
   targetComponent.getAttributes().put(attributeName, attributeNameValueExpression);
   
   and call retargetMethodExpressions recursively. Take care of apply the method twice
   and if the property pointed by ""attributeName"" was already set, revert its effects. 
   
The tricky part is how to handle generic method expression properties. The javadoc says:

""....
    # Otherwise, assume that the MethodExpression should be placed in the 
      components attribute set. The runtme must create the MethodExpression 
      instance based on the value of the ""method-signature"" attribute.
.....""

But I have identified three valid cases:

 1. testSimpleAttributeMethodExpressionEmpty.xhtml (Using an EL #{cc} reference)

    <testComposite:simpleAttributeMethodExpressionEmpty id=""cc1"" 
    customMethod=""#{methodExpressionBean.doSomethingFunny}"">
    </testComposite:simpleAttributeMethodExpressionEmpty>

    simpleAttributeMethodExpressionEmpty.xhtml

    <composite:interface>
        <composite:attribute 
        name=""customMethod"" 
        method-signature=""String doSomething(String)""/>
    </composite:interface>
    <composite:implementation>
        <tc:testComponent id=""testComponent"" customMethod=""#{cc.attrs.customMethod}""/>
    </composite:implementation>

 2. testSimpleAttributeMethodExpressionTarget.xhtml (Using ""targets"" to call 
    a property setter directly)

    <testComposite:simpleAttributeMethodExpressionTarget id=""cc1""
     customMethod=""#{methodExpressionBean.doSomethingFunny}"">
    </testComposite:simpleAttributeMethodExpressionTarget>
    
   simpleAttributeMethodExpressionTarget.xhtml
   
   <composite:interface>
        <composite:attribute 
        name=""customMethod"" 
        method-signature=""String doSomething(String)"" 
        targets=""testComponent""/>
   </composite:interface>
    <composite:implementation>
        <tc:testComponent id=""testComponent""/>
    </composite:implementation>
    
 3. testCompositeAttributeMethodExpressionTarget.xhtml (Using ""targets"", 
    but the target component is a composite one)

    <testComposite:compositeAttributeMethodExpressionTarget id=""cc1"" 
    customMethod=""#{methodExpressionBean.doSomethingFunny}"">
    </testComposite:compositeAttributeMethodExpressionTarget>

    compositeAttributeMethodExpressionTarget.xhtml

    <composite:interface>
        <composite:attribute 
        name=""customMethod"" 
        method-signature=""String doSomething(String)"" 
        targets=""simpleAttributeMethodExpressionTarget""/>
    </composite:interface>
    <composite:implementation>
        <testComposite:simpleAttributeMethodExpressionTarget id=""simpleAttributeMethodExpressionTarget""/>
    </composite:implementation>
    
    simpleAttributeMethodExpressionTarget.xhtml (could be like in 1 or 2)

The case (1) actually works but the case (2) and (3) does not work on both 
MyFaces 2.0.2 and Mojarra 2.0.3 . ",MYFACES-2946
"Currently, MyFaces startup listener will parse the all the faces configuration files and sort them on each startup time, and it will be better to do it once in the deployment time, and get those data structure instances from a provider. One possible way is to make those FacesConfig class serializable.
",MYFACES-2945
"In the Geronimo integration work, we have an internal structure for the parsed web.xml file, and we hope to use that instance to fill in the org.apache.myfaces.shared.webapp.webxml.WebXml, so that myfaces does not need to parse the web.xml file again, But those add*** method are package scope. 
Is it possible to make those methods public, I did not see it will break anyting.
Thanks",MYFACES-2944
"Currently DefaultLifecycleProviderFactory always logs ""Using LifecycleProvider java.lang.String"" due to refactorings in DefaultLifecycleProviderFactory (see MYFACES-2919). However, it should log the Class of the used LifecycleProvider instead of ""java.lang.String"".",MYFACES-2943
"Stan Silvert from JBoss reports:

I'm pretty sure 2.0.1 has a memory leak on undeploy.  Mojarra had an undeploy leak and it took a long time to track it down.  The same test I was using on Mojarra also failed on MyFaces but I haven't had time to track down the leak in MyFaces.

Maybe this is fixed in 2.0.2?  If not maybe someone can go ahead and take a look?  The mem leak keeps MyFaces from passing TCK on JBoss AS.  To test, all you need to do is create a small exploaded JSF app.  Then have a script that touches web.xml every 10 seconds.  That will cause the app to redeploy.  You will get a PermGen error in about an hour. ",MYFACES-2942
"The current implementation of _getAlternativeJarFile(URL url) in org.apache.myfaces.view.facelets.Classpath does not currently decode the filesystem path to remove escaped white-space prior to calling the JarFile constructor.  This can cause FileNotFoundExceptions on Windows if the jar's path is under a directory like ""Program Files"" or ""Documents and Settings"".  

Planning to re-use the decodeUrl method from the commons-io FileUtils class to make sure that this is handled properly.  Initial testing looks good.  ",MYFACES-2941
"On NamingContainer instances, we are traversing the whole tree without take into account that it is possible to detect if the current visit has clientIds inside it.

We did that for UIData and facelets UIRepeat, but we need to do that on UIForm and UINamingContainer.",MYFACES-2940
"From the mailinglist following bug was reported by Nikolai Rychkov

(I have to add I could reproduce the bug here on my machine as well, even
with a field being set to required so that validation definitely is called)


Original Message:

I try this simple example. But event doesn't be invoked. It looks like
<f:event type=""postValidate""> doesn't work



<?xml version=""1.0"" encoding=""UTF-8""?>

<!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Transitional//EN""

        ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"">

<html   xmlns=""http://www.w3.org/1999/xhtml""

        xmlns:f=""http://java.sun.com/jsf/core""

        xmlns:h=""http://java.sun.com/jsf/html""

        xmlns:ui=""http://java.sun.com/jsf/facelets""

        >

<h:head>



    <meta http-equiv=""Content-Type"" content=""text/html; charset=UTF-8""/>

    <title></title>



</h:head>

<h:body>

    <h:form id=""form"">

        <f:event type=""postValidate"" listener=""#{user.validate}""/>

        <h3>Please enter your name and password.</h3>

        <table>

            <tr>

                <td>Name:</td>

                <td><h:inputText id=""name"" value=""#{user.name}""/></td>

            </tr>

            <tr>

                <td>Password:</td>

                <td><h:inputSecret id=""password""
value=""#{user.password}""/></td>

            </tr>

        </table>

        <p><h:commandButton id=""button"" value=""Login"" action=""welcome""/></p>

    </h:form>

</h:body>

</html>



@ManagedBean(name = ""user"")

@SessionScoped

public class UserBean implements Serializable {

    private Logger log = LoggerFactory.getLogger(UserBean.class);

    private String name;

    private String password;

    private static final long serialVersionUID = -7858335225156624734L;



    public String getName() {    return name;    }

    public void setName(String newValue) {        name = newValue;    }

    public String getPassword() {    return password;    }

    public void setPassword(String newValue) {        password = newValue;
}



    public void validate(ComponentSystemEvent e) {

        log.info(""========================================"");

    }

}

",MYFACES-2939
"Reviewing myfaces commons, it was notice that @JSFValidator and @JSFConverter does not allow to have a custom tagHandler class, but there is one case this could be wanted.

On myfaces commons there exists a base class called org.apache.myfaces.commons.validator.ValidatorBase. This class is necessary to do two things:

1. Allow validators to have ValueBinding/ValueExpression instances that will be evaluated on validation time, not on build view time.
2. Provide utility methods for handle messages.

This works well on jsp, but it does not on facelets, because ValueExpression instances are not mapped calling setValueExpression() method. This is difficult to see because usually for converters and validators does not have properties with EL expressions or usually does not change.

We need to include two changes on myfaces builder plugin:

1. Allow @JSFValidator and @JSFConverter to define custom tagHandler class
2. Add a property to indicate when the base class allow set ValueExpressions calling setValueExpression method, so the template can decide if it calls setValueExpression or evaluate it at construction time,  like evaluateELOnValidation. It could be also wanted to include a new goal for generate converter classes.
",MYFACES-2938
"The function on FacesConfigurator getApplicationObject is very useful, so it deserves to be on shared ClassUtils. 

It allows easily instantiate objects using decorate pattern.",MYFACES-2937
"It could be good to have an utility class to handle init parameters, instead do the same code again and again over multiple classes.",MYFACES-2936
"Hi guys,

First - thanks for the great work you do with MyFaces. It's an awesome product and it's wonderful to have an independent implementation of the JSF spec!

I am the author of Metawidget (http://metawidget.org), a JSF component that does a lot of runtime component tree manipulation. This was unreliable under JSF 1, but JSF 2 introduced SystemEvents which promise to make this more solid. I believe Metawidget exercises SystemEvents more than most, and as such I am seeing problems both in MyFaces (2.0.2) and in Mojarra (2.0.3).

As a bit of fun I have created a small Acid Test (inspired by http://acidtests.org) for SystemEvents. I would be most grateful if you could work through the 3 tests and get MyFaces working with them. Basically the tests all use a combination of PreRenderViewEvent and tree manipulation. Full instructions are included on each JSF page. Of course, there may be bugs in the test itself in which case feel free to point them out :)

Regards,

Richard.",MYFACES-2935
"[FYI: I'm the person who fixed the padding oracle attack in ESAPI 2.0-rc# crypto which is why I spotted this.]

I did a quick code inspection of encrypt() / decrypt() methods in org.apache.myfaces.shared_impl.util.StateUtils as it relates to the fix for MYFACES-2749.  Most everything is done correct (MAC is over IV+ciphertext and checked before decryption), but I noticed a subtle flaw that, at least in theory (or enough data gathering and statistical analysis), that opens a side-channel timing attack that might be still be used as a oracle in a padded oracle attack such as described by Duong and Rizzo.

The problem is in the 'for' loop at lines 471-478 in StateUtils.java. You need to compare ALWAYS compare ALL the bytes in the MAC to ensure a timing side-channel attack cannot be used to as an oracle in the padding oracle attack.

Contact me at kevin.w.wall@gmail.com if you need more info or want to see how it was fixed in OWASP ESAPI.",MYFACES-2934
"We have a small structural problem in the myfaces archetypes. This is not a bug in our code, but nevertheless easily fixable. The problem is the way we handle the profiles which is not correctly understood by Netbeans 6.9.

We have following code:
<profiles>
        <profile>
            <id>myfaces</id>
            <activation>
                <property>
                    <name>!jsf</name>
                </property>
            </activation>

and

 <profile>
            <!-- Activate by adding -Djsf=mojarra -->
            <id>mojarra</id>
            <activation>
                <property>
                    <name>jsf</name>
                    <value>mojarra</value>
                </property>
            </activation>

No this structure just should ensure that if no jsf=... is set myfaces is chosen automatically. This makes netbeans go haiwire if you chosse mojarra as profile because suddenly we have the mojarra and myfaces dependencies parallely in the project.

Since this structure is mostly a hack we should replace it with the correct way to do things here:

<activation>
                <activeByDefault>true</activeByDefault>
                <property>
                    <name>jsf</name>
                    <value>myfaces</value>
                </property>
            </activation>

instead of !jsf so if no value is given we activate the myfaces profile by default",MYFACES-2933
"When the Bean Validation implementation fails to startup, for example because it is misconfigured by the developer, or because of some dependency issue (missing slf4j jar or something), the Bean Validator automatically turns itself off.

The error is logged as ""fine"", because in many cases the developer doesn't care about this behavior. For example, if bean validation api is provided, but impl is not. In these cases, logging an error is not desirable.

But maybe this should be increased to ""info"", to ease debugging in the cases where the developer is interested in why bean validation fails to startup.

I guess we change the logging to ""info"", especially because the block of code is guarded by a Class.forName() check, which takes care of the obvious case that Bean Validation is unavailable.",MYFACES-2932
"Template areas specified with <ui:define> are not visible in files that the template includes with <ui:include>.

See the following example.

The template:
http://github.com/chkal/myfaces-tests/blob/vdl-insert-bug/src/main/webapp/template.xhtml

The file included by the template:
http://github.com/chkal/myfaces-tests/blob/vdl-insert-bug/src/main/webapp/header.xhtml

The page using the template:
http://github.com/chkal/myfaces-tests/blob/vdl-insert-bug/src/main/webapp/page.xhtml

MyFaces 2.0.2 will show ""Wrong Title"" in the title div, which is the default value of the <ui:insert>. MyFaces 2.0.1 and Mojarra will instead display ""Correct Title"", which is the value definied in page.xhtml via <ui:define>.  

You can download an example application demonstrating this issue here:

http://github.com/chkal/myfaces-tests/archives/vdl-insert-bug

Start the app with:

mvn jetty:run

The page is then available here:

http://localhost:9090/
",MYFACES-2931
"The ClassByteCodeAnnotationFilter used to check classes for annotations by reading their bytecode doesn't read the constants pool table correctly.

The current code reads the number of entries from the class file and then reads each entry in the pool in a ""for"" loop. Unfortunately the code fails to process entries of the type ""CONSTANT_Long"" and ""CONSTANT_Double"" correctly. The Java VM spec says:

""All 8-byte constants take up two entries in the constant_pool table of the class file. If a CONSTANT_Long_info or CONSTANT_Double_info structure is the item in the constant_pool table at index n, then the next usable item in the pool is located at index n+2. The constant_pool index n+1 must be valid but is considered unusable.""

From: http://java.sun.com/docs/books/jvms/second_edition/html/ClassFile.doc.html#1348

The ClassByteCodeAnnotationFilter doesn't increase the loop counter for these entry types. Thus the filter will read bytes outside of the constants pool as soon as it finds a double or long constant in the constants pool because it will try to read more entries than there actually are.

Please note that this doesn't lead to faulty behavior of the class, because if the reader reaches the end of the constants pool, it didn't find any reference until then and therefore it is OK to abort scanning and return ""false"".

Find attached a patch containing a fix for this issue and a small unit test for the ClassByteCodeAnnotationFilter. I also added a log statement to default block of the switch statement. I guess this wasn't done because the current implementation often found bad tag values because of this bug. ",MYFACES-2930
"On website page http://myfaces.apache.org/index.html the line:

     If you want to know more about how JavaServer(tm) Faces works, take a look at the MyFaces <a href=""#jsfintro.html"">introduction to JSF

has a broken link. The # shouldn't be there, if it is removed then the link is repaired.",MYFACES-2929
"Checking some code on myfaces I notice this lines on FacesConfigurator:

        if(application instanceof ApplicationImpl)
        {
            for (Iterator it = _dispenser.getConverterConfigurationByClassName(); it.hasNext();)
            {
                String converterClassName = (String) it.next();

                ((ApplicationImpl) application).addConverterConfiguration(converterClassName,
                                                                          _dispenser.getConverterConfiguration(converterClassName));
            }
        }

We should avoid that, and instead use RuntimeConfig object, because that is the right place to do that. 

The problem with this hack is what happen when Application object is wrapped. It is very rare that someone overrides this class, but on JSF 2.0 this problem become important, because it is valid to wrap Application object.

The solution is just move the related code to RuntimeConfig object and call from ApplicationImpl doing a lookup to that location.",MYFACES-2928
"I discovered that MyFaces doesn't seem to handle null values correctly in listboxes and menus.

See the following example showing a h:selectOneMenu used to select an enum value:


  @ManagedBean
  @RequestScoped
  public class TestBean {

     public enum Level {
        HIGH, MEDIUM, LOW
     }

     private Level level;

     public String action() {
        FacesContext.getCurrentInstance().addMessage(null, 
              new FacesMessage(""Submitted level: "" + level));
        return null;
     }
  }


And the following view:


  <h:selectOneMenu value=""#{testBean.level}"" label=""Level"">
    <f:selectItem itemValue=""#{null}"" itemLabel=""Unknown""/>
    <f:selectItem itemValue=""HIGH""    itemLabel=""High""/>
    <f:selectItem itemValue=""MEDIUM""  itemLabel=""Medium""/>
    <f:selectItem itemValue=""LOW""     itemLabel=""Level""/>
  </h:selectOneMenu>

  <h:commandButton action=""#{testBean.action}"" value=""Go""/>


Clicking the ""Go"" button will result in the validation error: ""Level: 'Unknown' must be convertible to an enum.""

If the value of the select item is null, MyFaces won't render the value attribute of the option and so the browser will submit the label as its value:


  <select id=""levelForm:level"" name=""levelForm:level"" size=""1"">	
    <option selected=""selected"">Unknown</option>	
    <option value=""HIGH"">High</option>	
    <option value=""MEDIUM"">Medium</option>	
    <option value=""LOW"">Level</option>
  </select>


Mojarra instead renders an empty value attribute in this situation:


  <option value="""" selected=""selected"">Unknown</option>


I've created a patch fixing this issue against the current trunk of myfaces-shared and attached it to this ticket.

You can see the sample application reproducing this issue here:

http://github.com/chkal/myfaces-tests/tree/menu-null-value

And download it here:

http://github.com/chkal/myfaces-tests/archives/menu-null-value
",MYFACES-2927
"We have two bugs:

- node.innerHTML = """" throw an exception on IE8 and compatibility mode is used
- The node is not removed correctly on IE6. 

There is a code that catch the exception on _Dom._removeChildNodes() method, but on _Dom. _removeNode we don't have it, and in some cases, it is expected to replace <tr> or <img> or other nodes when an ajax occur. In this case we need to force node removal using removeChild() method to make sure it works well on this case. When nodes like div, this bug is not present.",MYFACES-2926
"When trying to insert from page included in template, insertion fail.
Works well in Mojarra 2.0.2.
Attached sample war.

[index.xhtml]

<ui:composition template=""template.xhtml"">
        <ui:define name=""insertion"">Inserted OK</ui:define>
</ui:composition>

[template.xhtml]

<h:body>
        <ui:include src=""insertion.xhtml"" />
</h:body>

[insertion.xhtml]

<ui:composition>
        <ui:insert name=""insertion"">Insertion Failed</ui:insert>
</ui:composition>
",MYFACES-2925
"It is possible to cause a duplicate id exception doing the following steps:

- Render one page (let's call mypage.xhtml) with a component that has a binding to a request scope managed bean
- Click the button

mypage.xhtml
....
<x:component binding=""#{bean.component}/>
    <f:facet name=""header"">
        /*.... some components here with non generated id ....*/
    </f:facet name=""header"">
</x:component>
<h:commandButton action=""#{bean.someMethod}"">
....
bean

public String someMethod()
{
    return ""mypage"";
}

That example should work without problem. The problem is raised by an optimization done in myfaces:

UIInstructionHandler

            if (mctx.isRefreshingTransientBuild())
            {
                c = ComponentSupport.findChildByTagId(parent, id);
                /*......*/

If we are not refreshing the current view, it does not have sense to try to find a component that will not be found, right?

The spec is clear about the effect of the previous example:

JSF 2.0 section 7.4.2 : ""...A rule match always causes a new view to be created, losing the state of the old view. This includes clearing out the view map.....""

but if you have component bindings on the page, all components inside the component with the binding will preserve the state. There is one simple solution from the user point of view (and this is what everyone usually does in this case):

public String someMethod()
{
    return null;
}

no rule match means no navigation, the view state is preserved and finally no duplicate id exception. 

If we disable the optimization code, the code will work, but there is still one problem with the spec.

",MYFACES-2924
"We are close to rolling a 2.0.2 release we should give the scripts another round of testing and fix the appearing bugs
also we now should finally increase the impl number according to the spec.
",MYFACES-2923
"Based on http://markmail.org/message/vmvt5u2nq3v6g2yy there is still a room for performance improvement in this area:

1) cache annotations for converters, validators and behaviours
2) process each type only once per view 




",MYFACES-2922
"Currently we do not set a path on the cookies created by FlashImpl which causes problems if the VDL-files are located in different folders, because each cookie is only assigned for its folder and not for the whole context.

Setting the path to externalContext.getRequestContextPath() solves this problem, because it sets each cookie for the whole webapp.

See the thread on the mailing list: http://www.mail-archive.com/dev@myfaces.apache.org/msg48859.html",MYFACES-2921
"From JavaDoc UISelectOne/UISelectMany validateValue:

"" ... Before comparing each option, coerce the option value type to the type of this component's value following the Expression Language coercion rules ...""

More here:
http://markmail.org/message/mfhyyiogaz73yfr4

",MYFACES-2920
"Patch content
----------------------

1- ResourceAnnotationLifecycleProvider : It does not check super class for annotations. It must examine super classes. This is specificed in Java EE 6 specification, EE 5.2.5 Annotations and Injections.

2- TomcatAnnotationLifecycleProvider : isAvailable Method must catch ""Throwable"" and ignore them. Otherwise, it throws error/s that are not catched and calling code is not able to process other lifecycle providers.

3- StartupServletContextListener : Early initiliazation of lifecycle provider. Otherwise, it is not possible to use META-INF/services providers.

4- pom.xml : Adding Tomcat 7 libs.

5- Tomcat7AnnotationLifecycleProvider : Tomcat 7 based LifeCycleProvider implementation.",MYFACES-2919
"The optimization done for Resource instances does not take into account that it is possible to call methods like setResourceName after is created, making a TCK test fail because the Resource instance is cached.

The solution is cache ResourceMeta related instance instead.",MYFACES-2918
"in Messages_es.properties, key:
javax.faces.convert.DateTimeConverter.CONVERSION_detail
change:
 ""{1}"": El valor espefificado no es una fecha/hora válida.
for
 ""{1}"": El valor especificado no es una fecha/hora válida.
",MYFACES-2917
"1. Create a managed bean ,defind an int field
package coreservlets;

import javax.faces.bean.*;

@ManagedBean
public class SpanishColorMapper extends ColorMapper {
    private int age;
  public SpanishColorMapper() {
    super(""Spanish"", ""rojo"", ""anaranjado"", ""amarillo"",
          ""verde"", ""negro"", ""blanco"");
  }
  public int calYear(int x) {
      return age + x;
  }
  public int getAge() {
      return age;
  }
  public void setAge(int x) {
      age = x;
  }
}

2.Direclty call calYear method in xhtml like:
<td>#{spanishColorMapper.calYear(5)}</td>
but  it's reported that :
java.lang.NoSuchMethodException: coreservlets.SpanishColorMapper.calYear(java.lang.Long)

Caused by:
java.lang.NoSuchMethodException - coreservlets.SpanishColorMapper.calYear(java.lang.Long)

Seems number is set as Long by default , not type as managedbean",MYFACES-2916
"As asked by Leonardo I open this issue in relation to issue https://javaserverfaces.dev.java.net/issues/show_bug.cgi?id=1805 on mojarra to check if MyFaces can do the same. For full description see issue above, short description below:

Assigning a UIComponent attribute with EL expression disables the default value handling that some attribute feature (e.g. rendered==null is the same as rendered==true). Since EL expression never evaluates to null an expression like rendered=""#{bean.rendered} with bean.rendered=null will evaluate to False, since for the rendered attribute the expected type for the ValueExpression is Boolean. 
The proposed change would be to use Object as expected type to allow null evaluation from EL and convert to the really expected type later in TagValueExpression. For details see original issue 1805 on mojarra.",MYFACES-2915
"We have a small 2.0reva spec violation by introducing a mojarra behavior.
Mojarra appends always the issuing element in execute (not sure yet if it is also added if none is passed)
The spec clearly states that if @none is passed in execute absolutely nothing is added to the execute list:
Since 2.0 reva is a fairly new spec, I can savely assume this is the expected behavior.

If the keyword @none is present, do not create and send the post data argument javax.faces.partial.execute.
So in reality we have to check for none and do not create anything here",MYFACES-2914
"We have two small bugs that prevent params work correctly on ajax case when jsf.chain is rendered. In theory, ClientBehaviorContext.Parameter should contains the values without quotes and all parameter names and values should be qouted, but on HtmlAjaxBehaviorRenderer, so the code escaping it could handle correctly.",MYFACES-2913
"Method based JNDI env. injections not worked correctly. Patch is attached. See
Java EE 6 specification section, EE. 5.2.5 Annotations and Injections. Patch is
provided that solves problem.",MYFACES-2912
"The MANIFEST.MF file of the org.apache.myfaces.core.api bundle/jar contains the entry:

Require-Bundle: org.apache.myfaces.core.impl;bundle-version=""2.0.1"" 

So the API bundle requires the IMPL bundle to work. This is not needed and prevents scenarios where the e.g. two IMPL bundles just reference the same API bundle.
The easiest solution is just to remove the entry.

Frank",MYFACES-2911
"Myfaces are too strict and always assume submitted value as String. Comparing with Mojarra and Trinidad:

1)org.apache.myfaces.shared.renderkit.RendererUtils.getStringValue(FacesContext, UIComponent):

myfaces: IllegalArgumentException (""Submitted value of type String expected"")
mojarra, trinidad: call EditableValueHolder.getSubmittedValue().toString() in this situation


2) org.apache.myfaces.shared_impl.renderkit.RendererUtils.getConvertedUIOutputValue(FacesContext, UIOutput, Object)
myfaces: IllegalArgumentException(""Submitted value of type String expected"")
mojarra: CastClassExpection if sumbittedValue is not String
trinidad: class submittedValue.toString in this situation

toString() solution will handle all situations and will allow submitted values other type than String 
",MYFACES-2910
"Archetype plugin 2.0.x is a new generation that adds a new archetype descriptor (stored in archetype-metadata.xml file): it's more flexible, has more features, but the basis is absolutely the same.

NOTE that after this change mvn archetype:generate has to be used instead of mvn archetype:create to create a project from an archetype.",MYFACES-2909
"Looks like when MYFACES-2854 was committed, there were two issues it caused where we break spec compliance.  Both are around behavior that ""If the component ID of componentResource matches the the ID of a resource that has allready been added, remove the old resource.""

The first is that it looks like the ""else if (componentId != null)"" statement is in the wrong place.  
If a UIComponent is added with the same ID as an existing component, we'll never get to this check since we'll  be false on the isInView() check.  
This will cause duplicate ID exceptions to be thrown if multiple objects with the same ID are added.  
This is easily resolved by moving the else if to kick in whenever isInView() is false.

The second issue, and the more important since this is breaking a TCK test, is that since we were only comparing to the parent's ID to the location prefix, we weren't handling the case where the same object gets added a second time after updating the target.  
This can be resolved by changing 

            if (componentResource.getParent() != null &&
                componentResource.getParent().getId() != null &&
                componentResource.getParent().getId().startsWith(JAVAX_FACES_LOCATION_PREFIX)) ...
to
            if (componentResource.getParent() != null &&
                componentResource.getParent().getId() != null &&
                componentResource.getParent().getId().equals(JAVAX_FACES_LOCATION_PREFIX + target))

I'll attach a patch for review while I wait for our CTS team to try the change out.  I probably wont' be able to commit until after the US Labor Day holiday since I'm away Friday. ",MYFACES-2908
"Checking some ajax stuff, it was found AjaxBehavior uses a map that is not serialized on the state.

I think it is better to use a variant _DeltaStateHelper class and handle ValueExpression in a similar way as UIComponentBase does, because that class was tested using many junit tests and to make easier synchronize that code.",MYFACES-2907
"Using 2.0.2-SNAPSHOT and Trinidad trunk (2.0.0.3-SNAPSHOT) I do get NPE in the ResolverBuilderBase class.

However, there was an overhaul in MYFACES-2873",MYFACES-2906
"See thread for this

http://markmail.org/message/cco2pdvuzlecs6da",MYFACES-2905
"Checking some stuff in tomahawk, I found that when a fragment starts with <tr> or some tag that should be used inside <table> are trimmed when are replaced on an ajax request.",MYFACES-2904
"When trying to handle an exception and write the output to the writer, if the cause and the message of an exception are null a NullPointerException is thrown (ErrorPageWriter,379).

Checking if the ex.getMessage() is not null will fix this problem.",MYFACES-2903
"We have had one line of code coming from the YUI library, while from an ASF standpoint the code was clear, there was a wish from the IBM people involved in the project to remove it otherwise they needed legal clearance.
This issue will cover the commit, which was one line in the iFrame handling for the ajax fileupload which was introduced post 2.0.1.
",MYFACES-2902
"I think it is worth to do some small changes on oamSubmit.js and create a param called org.apache.myfaces.RENDER_FORM_SUBMIT_SCRIPT_INLINE by default false, to enable previous behavior (render it inline), and if jsf.js has been loaded before, prevent load it.",MYFACES-2901
"Checking some stuff with javascript, it was notice there is no goal to indicate that all resources there should be compressed and moved to other location. All compressed files must be on the target directory and that is not very flexible.

This goal is required to allow compression of javascript files, like it is required for TOMAHAWK-1542",MYFACES-2900
"The code we have on resource api is very useful. It should be on shared, to make easier implement custom ResourceHandler classes.

For example, in tomahawk the class CAPTCHAResourceHandlerWrapper requires to handle the mapping for the current request.

But there are classes that are myfaces specific, like InternalClassLoaderResourceLoader (used to show sources on development time), ResourceHandlerImpl or DefaultResourceHandlerSupport.",MYFACES-2899
On DefaultRestoreViewSupport we still use a copy of FacesServletMapping.,MYFACES-2898
"from spec 7.4.2 Default NavigationHandler Algorithm
... 
""If none of the above steps found a matching <navigation-case>, if ProjectStage is not Production  render a message in the page that explains that there was no match for this outcome.""

",MYFACES-2897
"When PartialViewContextImpl#processPartial(PhaseId phaseId) is executed, executeIds/renderIds/renderAll of wrapping PartialViewContext are ignored: this.getRenderIds() etc are called instead of calling _facesContext.getPartialViewContext().getExecuteIds() like is done for PartialResponseWriter. ",MYFACES-2896
"When there are no faces messages generated, h:messages component does not render no HTML tags, so it cannot be updated by ajax.

To reproduce:

				<h:messages id=""messages"" />


				<h:commandButton value=""Invoke listener by type"" action=""#{bean.generateMessage}"">
					<f:ajax render=""messages"" /> 
				</h:commandButton>

No messages will appear. As a workaround messages component can be wrapped into h:panelGroup that's id will be specified in 'render':

			<h:panelGroup id=""messages"">
				<h:messages />
			</h:panelGroup>


",MYFACES-2895
"For the following code:

    <managed-bean eager=""true"">
        <managed-bean-name>eagerBean</managed-bean-name>
        <managed-bean-class>demo.EagerBean</managed-bean-class>
        <managed-bean-scope>application</managed-bean-scope>
    </managed-bean>


package demo;

public class EagerBean {

    public EagerBean() {
        System.out.println(""EagerBean.EagerBean()"");
    }
    
}

bean is not being initialized at application startup.",MYFACES-2894
"Currently myfaces-builder-plugin uses qdox version 1.9.1, however this version is confused by a code like the following, ending in a parse error and thus a build failure:

private <T> ConfigParameter(T defaultValue, Class<T> expectedType, String... expectedConfigValues)

Updating qdox to the latest version (1.12) removes this problem.
",MYFACES-2893
"11.1.3 Application Configuration Parameters:
If the javax.faces.INTERPRET_EMPTY_STRING_SUBMITTED_VALUES_AS_NULL context parameter value is
true (ignoring case), and UIInput.getSubmittedValue() returns a zero-length String call
UIInput.setSubmittedValue(null) and continue processing using null as the current submitted value

Currently UIInput.validate applies it to every type of submittedValue, not only for String. If I use custom non-String submmited value with toString().length()=0  UIInput.validate turns it into null.


",MYFACES-2892
"The loop
while (uri.startsWith(prefix) || uri.startsWith(""//"")) ...
cannot end when prefix is empty string (which should be valid value).",MYFACES-2891
"If you have h:commandButtons that have f:params with identical names but different values, we render oamSubmit code to supply the correct value upon submit.  However, the submitted field is no longer the button's client ID but ""clientID"" + ""_idcl"".  The button renderer's decoder needs to look for that field as well to handle this situation.  It looks to me as though commandLink's renderer was updated to handle this situation, but not commandButton's.",MYFACES-2890
"I've been doing some profiling and I see pretty much activity in FlashELResolver.castAndIntern() and ImplicitObjectResolver.castAndIntern().
When I replace the ""return s.intern()"" lines by  ""return s"", both methods have (of course) much better performance.

But I'm pretty sure someone put them there with a reason, like memory footprint.
However, I don't see any difference in memory footprint.

Any ideas? Do we want to keep the intern() calls?",MYFACES-2889
"When implementing my own TagHandlerDelegateFactory that wraps ComponentHandler classes (this is necessary to handle custom behaviors attachments) I encountered two problems:

1) StackOverflowError because TagHandlerDelegateFactory factory is called again in the constructor of ComponentHandler, in order to initialize ""helper"" field, however I don't need it for delegation
2) Composite components are broken because implementation is checking for marker interfaces that are shadowed by wrappers",MYFACES-2888
"See test project attached. Clicking link leads to:


20.08.2010 13:58:41 org.apache.myfaces.renderkit.ErrorPageWriter handleThrowable
SEVERE: An exception occurred
javax.faces.FacesException: java.lang.RuntimeException: java.lang.IllegalAccessException: Class javax.faces.component.UIComponentBase can not access a member of class javax.faces.component.behavior._DeltaList with modifiers ""public""
	at org.apache.myfaces.shared_impl.context.ExceptionHandlerImpl.wrap(ExceptionHandlerImpl.java:241)
	at org.apache.myfaces.shared_impl.context.ExceptionHandlerImpl.handle(ExceptionHandlerImpl.java:156)
	at org.apache.myfaces.lifecycle.LifecycleImpl.executePhase(LifecycleImpl.java:191)
	at org.apache.myfaces.lifecycle.LifecycleImpl.execute(LifecycleImpl.java:118)
	at javax.faces.webapp.FacesServlet.service(FacesServlet.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:128)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:293)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:849)
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:583)
	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:454)
	at java.lang.Thread.run(Thread.java:619)
Caused by: java.lang.RuntimeException: java.lang.IllegalAccessException: Class javax.faces.component.UIComponentBase can not access a member of class javax.faces.component.behavior._DeltaList with modifiers ""public""
	at javax.faces.component.UIComponentBase.restoreAttachedState(UIComponentBase.java:1607)
	at javax.faces.component.behavior.BehaviorBase.restoreState(BehaviorBase.java:126)
	at javax.faces.component.UIComponentBase.restoreAttachedState(UIComponentBase.java:1615)
	at javax.faces.component._DeltaList.restoreState(_DeltaList.java:251)
	at javax.faces.component.UIComponentBase.restoreAttachedState(UIComponentBase.java:1615)
	at javax.faces.component.UIComponentBase.restoreFullBehaviorsMap(UIComponentBase.java:1790)
	at javax.faces.component.UIComponentBase.restoreState(UIComponentBase.java:1742)
	at javax.faces.component.UIComponentBase.processRestoreState(UIComponentBase.java:1385)
	at javax.faces.component.UIComponentBase.processRestoreState(UIComponentBase.java:1428)
	at javax.faces.component.UIComponentBase.processRestoreState(UIComponentBase.java:1428)
	at javax.faces.component.UIComponentBase.processRestoreState(UIComponentBase.java:1428)
	at javax.faces.component.UIViewRoot.processRestoreState(UIViewRoot.java:680)
	at org.apache.myfaces.application.jsp.JspStateManagerImpl.restoreView(JspStateManagerImpl.java:418)
	at org.apache.myfaces.shared_impl.view.ViewDeclarationLanguageBase.restoreView(ViewDeclarationLanguageBase.java:106)
	at org.apache.myfaces.view.facelets.FaceletViewDeclarationLanguage.restoreView(FaceletViewDeclarationLanguage.java:1277)
	at org.apache.myfaces.application.ViewHandlerImpl.restoreView(ViewHandlerImpl.java:278)
	at org.apache.myfaces.lifecycle.RestoreViewExecutor.execute(RestoreViewExecutor.java:123)
	at org.apache.myfaces.lifecycle.LifecycleImpl.executePhase(LifecycleImpl.java:171)
	... 14 more
Caused by: java.lang.IllegalAccessException: Class javax.faces.component.UIComponentBase can not access a member of class javax.faces.component.behavior._DeltaList with modifiers ""public""
	at sun.reflect.Reflection.ensureMemberAccess(Reflection.java:65)
	at java.lang.Class.newInstance0(Class.java:349)
	at java.lang.Class.newInstance(Class.java:308)
	at javax.faces.component.UIComponentBase.restoreAttachedState(UIComponentBase.java:1598)
	... 31 more
",MYFACES-2887
"UIData should push and pop row component in/from EL when brodcasting is performed.
Currently this is omitted and when for example ActionEvent from a UICommand in UIData is delivered, CURRENT_COMPONENT is UIData but obviously it should be UICommand.

",MYFACES-2886
We need to update some plugin versions and remove cobertura plugin from myfaces core to make it work with nexus. It is necessary to update parent pom to 9-SNAPSHOT,MYFACES-2885
"After switching to 2.0.1, getting following exceptions while accessing JSF page

Aug 17, 2010 4:41:41 PM org.apache.myfaces.renderkit.ErrorPageWriter handleThrowable
SEVERE: An exception occurred
javax.faces.application.ViewExpiredException: /counter.jsfNo saved view state could be found for the view identifier: /counter.jsf
	at org.apache.myfaces.lifecycle.RestoreViewExecutor.execute(RestoreViewExecutor.java:128)
	at org.apache.myfaces.lifecycle.LifecycleImpl.executePhase(LifecycleImpl.java:171)
	at org.apache.myfaces.lifecycle.LifecycleImpl.execute(LifecycleImpl.java:118)
	at javax.faces.webapp.FacesServlet.service(FacesServlet.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:303)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:243)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:201)

Code is
------------
<html xmlns=""http://www.w3.org/1999/xhtml"" xmlns:h=""http://java.sun.com/jsf/html"">
<h:head>
	<title>JSF2 Ajax with OpenWebBeans Demo</title>
</h:head>
<h:body>
	
	<h3>JSF2 Ajax Demo :: Click <b>Count</b> button to inrease your count</h3>

	<h:form id=""form"">
		
		<h:outputScript name=""jsf.js"" library=""javax.faces"" target=""body""></h:outputScript>
			
		<div>
			<h:commandButton id=""button1"" value=""Count..."" actionListener=""#{helloBean.processAction}""
			    onclick=""jsf.ajax.request(this,event, {execute:'form:button1',render:'form:status'});return false;"">
			</h:commandButton>
		
		</div>
		
		<div>		
			<h:outputText value=""Counter Number : "" />
			<h:outputText value=""#{helloBean.count}"" id=""status"" />
		</div>
	</h:form>

</h:body>
</html>

Full source code is here!
http://siwpas.googlecode.com/svn/trunk/samples/hellojsf2/",MYFACES-2884
"This cummulative commit will have following improvements and issues fixed:

a) Reduction of code footprint, we have removed unused methods from dom.js, _Runtime.js has another round of additional mapped names to reduce the footprint there as well, in places where the code shrinker cannot cover it

b) Introduction of the no_portlet_env setting for the viewstate update so that in that case a cross form rendering is not used (note this breaks mojarra compatibility in cross form submit cases, but the spec is broken there anyway)

c) Speed improvements: internal dom node recycling, we have a place holder in various parts of the system we recycle that one now for speed improvements.

d) Reduction of dead calls: We have historically grown several code parts which went through dead methods, we reduce the footprint there as well and increase the speed by elimination of those.

e) IE leakage entirely removed: sIEve now shows zero leakage more or less (hard to tell) ram is not increasing in my testcases to a degree which could indicated a mem leak.

f) Reduction of global config calls in the ajax response object in favor of loading
the impl class per response once 
",MYFACES-2883
"Spec 3.4.2.6 Event Broadcasting:

During event broadcasting, a listener processing an event may:
...
--  Queue one or more additional events, from the same source component or a different one, for processing during the  current lifecycle phase.
...

Current UIViewRoot creates list of events only at the beggining of processing and doesn't check if listener adds a new event. 
Probably UIViewRoot should iterate over events in a infinite loop instead of iterator and check after if a new events appear.

",MYFACES-2882
"Use simple xhtml with: 

<h:form id=""form1"">
            <h:commandButton value=""Partial"">
               <f:ajax execute=""@this"" render=""@this"" />
            </h:commandButton>
</h:fom>

</h:form>
  <h:form id=""form2"">
  <h:commandButton value=""Full"" />
</h:form>

then:
1) click ""Partial"" button 20x or more
2) click ""Full"" button
-> ViewExpiredException appears. If you click ""Partial"" 19 times or less ViewExpiredException does not appear. 

20 is default for NUMBER_OF_VIEW_IN_SESSION - it you set this param to 1 you reproduce this problem with two clicks. Maybe there is more simple test case for reproducing this issue but I didn't find it yet. 

This bug is present in 2.0.1 already and is related to server state saving:
myfaces 2.0.1:

PSS + server: failed
PSS + client: ok
FSS + server:  failed
FSS + client: ok

myfaces 2.0.2-SNAPSHOT:

PSS + server: failed
PSS + client: ok
FSS + server:  failed
FSS + client: ok


Very likely this causes MYFACES-2877 too. 
",MYFACES-2881
"ResourceHandlerImpl.deriveResourceMeta recomputes version info on every access to resource. In production is this very inefficient and costs pretty much  - especially part with getBundle operation;  MissingResourceException in catched million times in 10 minutes if running my tests.

",MYFACES-2880
org.apache.myfaces.application.ApplicationImpl.internalCreateConverter(Class<?>) should cache information about constructor and other ones. Stress test detected that this part of code catches NoSuchMethodException too many times (million times in 10 minutes with my tests!),MYFACES-2879
"In my local dialog test a sIEve showed 12000 delta nodes after 500 runs while Mojarras is on 5000, the goal of the fix is to get the deltas for the example down to zero and to reduce mem leaking to a big degree.
We have to fix this by the introduction of finalisation code in the affected classes on IE only!!!
The root cause of this is a non working garbage collection in IE because it relies on reference counting alone and refuses to persist on references into com objects.
",MYFACES-2878
"Following process restores wrong state :

<h:form id=""form1"">
            <h:commandButton value=""Partial"">
                <f:setPropertyActionListener target=""#{component.disabled}"" value=""#{true}"" />
                <f:ajax execute=""@this"" render=""@this"" />
            </h:commandButton>
</h:form>

<h:form id=""form2"">
            <h:commandButton value=""Full"" />
</h:form>

1) click button ""Partial""
2) myfaces save component.disabled as true and re-render button as disabled
3) click button ""Full""
4) myfaces render whole view but button has disabled=""false""! I did some quick debugging and it seems that UIComponent.restoreState(FacesContext, Object) in second request obtains state array with disabled=""false""

This happens with partial and server state saving and with myfaces 2.0.1 and trunk but not with current Mojarra. 
",MYFACES-2877
"In Windows Mobile (WM) 6.1 platform, <f:ajax> is converted into a full-page submit instead of a PPR. The reason is unlike Webkit based mobile-browsers, WM 6.1 or Blackberry (BB) 4.7 offers only a limited JavaScript-DOM support, so we need to optimize MyFaces's Ajax mechanism to work around the limitations of mobile browsers. I used the sample code below for testing.

Facelets code:
<h:commandButton value=""PPR"">
  <f:ajax event=""action"" render=""second""/>
</h:commandButton>
<h:outputText value=""#{item.date.seconds}"" id=""second""/>

Item.Java:
import java.util.Date;

public class Item {
  Date date;

  public void setDate(Date date) {
    this.date = date;
  }

  public Date getDate() {
    return new Date();
  }
}

faces-config:
<managed-bean>
  <managed-bean-name>item</managed-bean-name>
  <managed-bean-class>Item</managed-bean-class>
  <managed-bean-scope>request</managed-bean-scope>
</managed-bean>

Also, in the case of  BB 4.7 , <f:ajax> can successfully send a PPR, but PPR response is ignored. 
",MYFACES-2876
"org.apache.myfaces.view.facelets.FaceletViewDeclarationLanguage.retargetMethodExpressions calls facesContext.getELContext() but should use FaceletContext instead to preserve EL variable and function mapping. Consider this example:

<ui:param
        name=""localBean""
        value=""#{very.long.path.to.a.bean.in.el}"" />
<a:niceCompositeComponent customMethod=""#{localBean.method}"" >

 will not work but

customMethod=""#{very.long.path.to.a.bean.in.el.method} will. 

This can be easily fixed by using ELContext elContext = (ELContext) context.getAttributes().get(FaceletContext.FACELET_CONTEXT_KEY); 

instead of facesContext.getELContext().


",MYFACES-2875
"MyFaces implements the required JSP writebehind support via a mechanism that involves pushing a special responsewrapper which implements an internal API  in its ViewHandler prior to dispatch and then recognizing this response in the (view) tag handlers so it knows to call the internal API to flush the pre-view content.  Problem is MyFaces core implements this function as a ServletResponseWrapper.  This prevents writing an equivalent PortletResponseWrapper for use in the portlet bridge case as a response can't be both a ServletResponseWrapper and a PortletResponseWrapper.

Minimum solution is to do what Myfaces 2.0 core does which is to define an interface defining the internal APIs and then have the tag handlers check that the response object implements the interface.  MyFaces 2.0 does this via an instanceof check which is okay -- but by doing so requires the portlet developer configure an appropriate PortletResponseWrapper for use by the bridge (the bridge can't have dependencies on any particular Faces impl).  Best solution is to do what Mojarra does which is to use reflection to see if the response object implements the needed method.  In this way the Bridge can support a wrapped response with the extra methods without any explicit dependencies on the Faces impl -- and we avoid any work by the portlet developer to enable write behind support in the portlet environment.",MYFACES-2874
"When using CDI or Spring or any other framework/lib that provides a custom ELResolver there can be performance problems, because the custom ELResolvers from the faces-config are plugged in pretty early in the resolver chain.

For CDI this means that for lots of trivial ELExpressions (like Array or Map value lookups) the CDI-ELResolver gets called and this resolver is not very performant, because it has to go through all Objects which are handled by CDI to find the fitting one. And in the most cases it won't find a fitting object, because the requested value is not handled by CDI.

JSF currently only allows to sort the ELResolvers from different faces-config files, but not to change the order of predefined ELResolvers (like e.g. MapELResolver). Thus talking with Mark Struberg and Gerhard Petracek we came up with a Comparator<ELResolver> solution for this problem.

The user can define a Comparator<ELResolver> via a web.xml config param and this comparator will be used to sort the ELResolvers before they are applied (but of course, only once). In addition we provide 3 default implementations: one to put every ELResolver from the faces-config to the front, one to put them to the back and one optimized for OpenWebBeans.

This solution gives you many improvements:
 - you can tune your application by a customized order of ELResolvers
 - you don't need MyFaces implementation classes, but only a simple Comparator
 - if you switch to Mojarra or a earlier version of MyFaces, the ordering just won't work, but the behavior of the ELResolvers is the same


The context-parameter will look like this (for the OWB-optimized resolver):

<context-param>
        <param-name>org.apache.myfaces.EL_RESOLVER_COMPARATOR</param-name>
        <param-value>org.apache.myfaces.el.unified.OpenWebBeansELResolverComparator</param-value>
</context-param>",MYFACES-2873
"Various small issues:
constructor calling in inherited objects called the constructor of the super class automatically
various null setters for breaking ie6 mem leaks (still some there though)
fix for the usecase when the issuing element is deattached by a replacement and a viewstate has to be assigned
to its parent form",MYFACES-2872
"Almost all class file JavaDocs now contain SVN keywords. These are redundant and after a simple poll on the mailinglist, the conclusion is to remove them from the files.

Reference back to the original thread: http://markmail.org/thread/tfwvqms4xko3uq2k

Still need to decide how to get rid of this stuff. I think a massive find-replace works fine, but there is always a slight risk of big merge conflicts.",MYFACES-2871
"JBoss jsf deployer needs a custom class that extends StartupServletContextListener to add additional processing before initialize.

The problem we have is the original StartupServletContextListener is registered on myfaces-core.tld, so it ends being called ""twice"".

The solution is do a simple reorganization of the code, so _facesInitializer is only set on the first one, then we use FACES_INIT_DONE param to comunicate to the other listener that has been already initialized. Then, only process contextDestroyed if _faceslnitializer was set.",MYFACES-2870
"I have an ajaxified h:selectBooleanCheckbox like this:

<h:selectBooleanCheckbox valueChangeListener=""#{controller.change}"">
    <f:ajax render=""textBox""/>
</h:selectBooleanCheckbox>

The value change listener toggles a boolean flag and the component with the id ""textBox"" is re-rendered. This works fine with FF, Safari and Chrome but not with IE8. The resaon for this is that the default onchange event is not working correctly in IE8. In IE8 onchange is not triggered before the component looses the focus. So I have to click the component and then again outside the component to hav the ajax request sent.

A workaround for this is to set the event to click manually:

<h:selectBooleanCheckbox valueChangeListener=""#{controller.change}"">
    <f:ajax render=""textBox"" event=""click""/>
</h:selectBooleanCheckbox>

The question now is, should we change the default event for HtmlSelectBooleanCheckbox from change to click (or more precisely the mapping of valueChange from change to click)? I quickly scanned the spec but I found nothing helpful.

Mojarra seems to render an onclick attribute by default. But what is kind of funny - with event=""click"" on f:ajax it stops working...",MYFACES-2869
"One of the fixes last week broke the @form parameter handling
this will be fixed with the upcoming commit
",MYFACES-2868
"To reuse the macros, we need to migrate to Velocity 1.6.",MYFACES-2867
"Instead of inline stuff, we should use Velocity macros.",MYFACES-2866
"My application is configured this way:

 * server-side state saving
 * disabled view state serialization
 * custom Spring scope for a view scope as described in Cagatay's blog  
 (http://cagataycivici.wordpress.com/2010/02/17/port-jsf-2-0s-viewscope-to-spring-3-0/) 

If the ErrorPageWriter creates an error page and a non-serializable bean is in the view scope, the ErrorPageWriter fails with the following exception: 

java.io.NotSerializableException: <one.of.my.beans>
   at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1156)
   at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:326)
   at java.util.HashMap.writeObject(HashMap.java:1001)
   at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
   at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
   at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
   at java.lang.reflect.Method.invoke(Method.java:597)
   at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:945)
   at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1461)
   at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1392)
   at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1150)
   at java.io.ObjectOutputStream.writeArray(ObjectOutputStream.java:1338)
   at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1146)
   at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:326)
   at org.apache.myfaces.shared_impl.util.StateUtils.getAsByteArray(StateUtils.java:273)
   at org.apache.myfaces.renderkit.ErrorPageWriter._writeComponent(ErrorPageWriter.java:642)
   at org.apache.myfaces.renderkit.ErrorPageWriter.debugHtml(ErrorPageWriter.java:283)
   at org.apache.myfaces.renderkit.ErrorPageWriter.debugHtml(ErrorPageWriter.java:250)
   at org.apache.myfaces.renderkit.ErrorPageWriter.handleThrowable(ErrorPageWriter.java:417)
   at org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:274)
   [...]

This exception completely masks the primary exception that caused the ErrorPageWriter to jump in. This makes it very difficult to find the root cause of the problem.

The current workaround is to disable the MyFaces error handler by setting org.apache.myfaces.ERROR_HANDLING to 'false'.  ",MYFACES-2865
"We've seen in our testing significant improvements in performance by caching the results of getResource() and getResourcePaths() calls.  Adding this caching has led to about a 30% increase in throughput on an older JSP application, and a doubling of throughput on JSF2/facelets applications that utilize templating and composite components.  This testing was all done on WAS so gains could be different on other servers depending on the behavior of their servlet containers.

In the patch I'm attaching, it currently sets that the default for the caching is enabled if the project stage is production and I've defaulted the cache size to 500 entries.  I've created two context params that allow for overriding the size and/or disabling the cache outright.  

There might be a few cases where this will need to be disabled.  Most prominently would be anyone who adds or removes files to a production environment.    This could cause problems for an application that generates dynamic content on disk instead of in memory, although I don't know if that is common enough that we'd want to turn it off by default given the gains that the majority of users would see.

Please review the patch and let me know if there should be any tweaks or if anyone feels strongly one way or the other about whether it should be enabled or disabled by default. I'll plan on committing Monday based on any consensus.",MYFACES-2864
"On jsf 1.2 and earlier, it was only necessary one point for integrate an application container, an that was LifecycleProvider2, to handle @PostConstruct and @PreDestroy annotations.

But on jsf 2.0, many stuff has been introduced that requires provide spi interfaces, so application containers could integrate better.

One problem is how to handle jsf libraries outside WEB-INF/lib directory, or how to customize some algorithms that requires knowledge of the container protocols.

It is also known protocols like ""jar:"" to cause problems, when you try to scan files, because it is necessary to open a jar file and scan all entries to find just one file (see MYFACES-2583 and MYFACES-2833 for details).

I think we should introduce two new packages called org.apache.myfaces.spi and org.apache.myfaces.spi.impl to deal with this stuff.

Based on the class names found on com.sun.faces.spi package, we should provide the following points:

- Handling of @PostConstruct and @PreDestroy (done in LifecycleProvider2)
- Annotation scanning: containers could have this code duplicated or a framework to deal with stuff like that, so it should be a possibility to override/extend.
- faces-config.xml and facelet-taglib.xml additions: It should be possible to add resource files to be included in the process.
- Serialization (partially done on SerialFactory interface) : Jboss provide its own serialization solution.

At this time it is not very clear how this interfaces should looks like. I'll provide a proposal for this stuff, but it will take some time, because it is necessary to think carefully each interface.",MYFACES-2863
"Profiler marks as hot spot method ClassUtils.classForName(fqcn) which is called from Application.createComponent(FacesContext,Resource)  during  restore view phase.

The reason is that in tested view are composite components and for each usage of them CompositeComponentResourceTagHandler
calls Application.createComponent(FacesContext,Resource) during VDL.buildView. Invocation of ClassUtils.classForName calls loadClass method on ClassLoader (Tomcat's WebappClassLoader.findResourceInternal in my case) and that is an expensive operation.


Something or maybe whole result of Application.createComponent should be cached in production mode. I did a simple cache attept and it saves ~15 ms in my test case with 6 composite components.




",MYFACES-2862
"Commons-discovery has a dependency to commons-logging. That cause a transitive dependency to myfaces-impl. To prevent this dependency, we need to move that code into our codebase and refactor it so it uses jul instead.",MYFACES-2861
"Looking integration of myfaces with JBoss AS6, it was notice myfaces does not have a way to override the annotation configurator.

Ri has a class called AnnotationProvider with this methods:

public AnnotationProvider(ServletContext sc) 

abstract public Map<?> getAnnotatedClasses(Set<URL> urls)

the documentation says it is possible to override using this type of constructor.

public AnnotationProvider(ServletContext sc, AnnotationProvider parent)

We should provide something similar (let's call it AnnotationScanner because its objective is scan for annotations).",MYFACES-2860
"In my application processing the ajax response for a ajax request changes the order of the elements. I have an html input element with siblings in a div that is replaced with a script and the new input element in the ajax response. The problem is, that the new input element is inserted after the siblings of the original element thus reversing the order of the elements

I think the problem is in the replaceElements function in _Dom.js. There, oldNode.nextSibling always returns null.

I created a patch that solves this issue, but I am not sure if there are any side effects. Master of Ajax (Werner) please have a look.",MYFACES-2859
"We have had several functions rendered inline for ages, namely appendHiddenInput oamSubmit, the autoscroll stuff etc...
I personally think the rendering of those functions as inline scripts is pointless, blows up the browsers tremendously and
prevents that the affected scripts can be browser cached.
A quick look at the code revealed that there is basically nothing which would prevent to externalize the scripts. My main problem is where to we handle the auto append code.
My personal guess is we probably simply should add it as a resource definitions to the commandLink, Button etc.. renderers, any ideas regarding this?

",MYFACES-2858
"We are using a PhaseListener in the render response phase to change the summary message of a FacesMessage

{code}
public void beforePhase(PhaseEvent phaseEvent) {
   ...
  Iterator componentMessages = facesContext.getMessages(clientId);

   while (componentMessages.hasNext()) {
     FacesMessage message = (FacesMessage)componentMessages.next();
     StringBuilder builder = new StringBuilder();
     builder.append(label);
     builder.append(message.getSummary());
     message.setSummary(builder.toString());
  }
}
{code}

The problem is that since MyFaces 1.1.8 a ParametrizableFacesMessage is used for required messages. While doing a getSummary() the _evaluatedSummary is evaluated once, so effectively you can not change the _evaluatedSummary after one call to getSummary().

My questions:
1. Is this desired behaviour?
2. In MyFaces 1.1.7 a FacesMessage was used instead of a ParametrizableFacesMessage, is there a configurable way to runtime use a FacesMessage instead of a ParametrizableFacesMessage?
3. I suppose another workaround would be to add a label argument to each component which will be evaluated by the ParametrizableFacesMessage, is there any documentation how this functionality is intended to work?",MYFACES-2857
"I checked the algorithm and I found in some situations, checkResourceExists could be called more times than necessary. handleSuffixMapping check urls against checkResourceExists, so there is no need to call it again from calculateAndCheckViewId, and in the default case if a wrong resource request is sent, .xhtml case is checked twice.",MYFACES-2856
" <h:panelGroup id=""bla"">

                       <h:inputText id=""inputbla"" value=""#{myBean2.searchTerm}"" />

                       <h:commandLink value=""Press me for more action"" action=""#{myBean2.doSearch}"">
                           <f:ajax execute=""bla"" render=""content""/>
                       </h:commandLink>
                   </h:panelGroup>

causes following output in mojarra

form2	form2
form2:inputbla	
javax.faces.ViewState	6697453697014869722:-1090088301633916042
javax.faces.behavior.even...	action
javax.faces.partial.ajax	true
javax.faces.partial.event	click
javax.faces.partial.execu...	form2:j_idt8 form2:bla
javax.faces.partial.rende...	form2:content
javax.faces.source	form2:j_idt8


in myfaces
form2:inputbla	
form2_SUBMIT	1
javax.faces.ViewState	EmWJgKYkJoTEWDCzpUwZQR3Ek94rGnxK1V6NEZgO6yDgPANeOc1wplJjDYezu2cx9aQ7ZSKNPyGY L8P9y5DwH2codFvGPjklD04wuxG4XXTPutNww3pdzIsMkw0=
javax.faces.behavior.even...	action
javax.faces.partial.ajax	true
javax.faces.partial.event	click
javax.faces.partial.execu...	form2:bla
javax.faces.partial.rende...	form2:content
javax.faces.source	form2:j_id1980473354_760ba132


as it seems mojarra also passes the id/name of the issuing element into execute per default, I have to check the spec if this is correct

",MYFACES-2855
"Consider custom renderer with @ResourceDependencies (and many @ResourceDependency here). If a view has 500 UIComponent with this custom renderer, ApplicationImpl._handleAnnotations process the same set of ResourceDependecies again and again.

With my test scenario, VDL.buildView takes therefore  750ms. After small modification in ApplicationImpl _handleAnnotations it takes only 70 ms. 

The modification can be like:

Class<?> inspectedClass = inspected.getClass();
     
// Process annotation only if this is the first creation of component(renderer,validator, converter) of particular type in this request/response
        if (! context.getAttributes().containsKey(inspectedClass.getName())) { 

        _handleListenerForAnnotations(context, inspected, inspectedClass, component, isProduction);

        _handleResourceDependencyAnnotations(context, inspectedClass, component, isProduction);

    // Remeber here that this class and it's dependencies are in viewRoot.componentResources 
            context.getAttributes().put(inspectedClass.getName(), Boolean.TRUE);
        }
;


But I'm not sure what specification says about this processing.
",MYFACES-2854
"The current build system does not enable full compression on jsf.js. I enabled it in our plugin infrastructure together with a newer yui build and some codechanges on the jsf.js impls side and I got down to 59Kbyte (74 before), adding the iframe stuff increased the filesize to 61 kbyte.
I will commit all my code tomorrow so that we get a smaller filesize on our final jsf.js and I also will enable the iframe transport
for the production environment, the slight size  increase of 2kbyte is bearable given that we already have gained 14kbyte.
",MYFACES-2853
"With html 5 a new possibility for fileuploads is going to be released, which is xhr level2 and FormObject, we cannot switch it on currently due to bugs in the impl, but nevertheless the code preparations I did can already be committed and switched on once everything works as expected over the browser versions.
",MYFACES-2852
Checking some stuff I notice all ajax request are sended twice. I can't see cleary why this is happening. Someone who can help?,MYFACES-2851
The saved state of UIInput needs to be cleaned. The default values should not be saved.,MYFACES-2850
"The new auto eval detection code adds a script element dynamically upon page load and then hopes that it is parsed, if not a manual eval is triggered, now we used document.body || window as point for the onload trigger, this fails on firefox which in reality is the only browser currently which still does auto eval. A window only handler has to be performed.
",MYFACES-2849
"The fact that an AJAX request was triggered clearly shows, that jsf.js is already available to the browser. Including it again in the response triggers another HTTP GET for jsf.js with time and traffic penalty.",MYFACES-2848
"ajax form parameter collection erroneously submits nameless inputs by their id.

This form:

<h:form id=""testForm"" >
	<h:panelGroup id=""testGroup"">
    	<h:inputText id=""myTest"" value=""#{myBean.test}"">
			<f:ajax render=""testGroup"" />
    	</h:inputText>
    	<script type=""text/javascript"">
    		var node = document.getElementById(""testForm:myTest"");
    		node.name = null;
    		var newNode = document.createElement(""input"");
    		newNode.name = node.id;
    		node.parentNode.appendChild(newNode);
    	</script>
   	</h:panelGroup>
</h:form>

submits testForm:myTest two times, here's the POST body after filling x in the second field, then y in the firtst field, then triggering AJAX by leaving the first field:

testForm%3AmyTest=y&testForm%3AmyTest=x&testForm_SUBMIT=1&javax.faces.ViewState=oz6Aoi2KHAqmJJI7fOyCSJE3roA7LBpW2w%2FkX5zlIRqf8mwbQAPsaxhQH2d3lDSWBhNgY03GIEFjk%2Fln4A3MZ57dY6dKv3pXaAtvN4X1Hc6GTpwA&javax.faces.behavior.event=valueChange&javax.faces.partial.event=change&javax.faces.source=testForm%3AmyTest&javax.faces.partial.ajax=true&javax.faces.partial.execute=testForm%3AmyTest&javax.faces.partial.render=testForm%3AtestGroup",MYFACES-2847
"While most of the performance now is spend on send and dom replaceElement without too much possibilities of further improvements on the client side there, we still have speed optimization potential. Currently about 5-8% of the execution time is spent on evaling anonymous functions and within the exists function.
We probably can reduce both calls to a big degree by eliminating exists in favor of undefined checks where it makes sense (mostly in the module binding part)
and by trying to reduce generally the calls into anonymous functions (which comes also with the elimination of exists if called outside of _Runtime for instance in _Lang which delegates _Runtime.

Note there is a 5% speed difference between dev and production due to the _ExtLang object which is only present in dev which is just an AOP wrapper around _Lang which adds the logging functions missing for prod.
",MYFACES-2846
"This bug does not affect the current functionality but nevetheless is a bug. The current inheritance code in Runtime.js has a faulty callSuper construct, this construct causes a self recursion at the second stage if that one also calls a callSuper.

We have to keep track of the calling history within callSuper and that if possible without sacrificing the performance too much if at all.
the idea is to store the last super position for every call super on the current method name and then restoring it after the call, this should not impact performance too much because only a map storage is performed.",MYFACES-2845
"I did some tests to check if all code we have for render client event properties is ok. I found two small bugs:

1. h:body must render its id if a client behavior is attached.
2. h:button onclick does not handle client behavior stuff.

",MYFACES-2844
"This is the continuation of issue MYFACES-2753. The alternate issue on mojarra is here:

https://javaserverfaces.dev.java.net/issues/show_bug.cgi?id=1684

The example that shows the problem is this:

Top-level page (test.xhtml):
===========================
<ui:composition template=""inner_1.xhtml"" >
  <ui:define name=""test"">
    <h:outputText value = ""Defined in the Top Page""/>
  </ui:define>
</ui:composition>

First-level template (inner_1.xhtml):
====================================
<ui:composition template=""inner_2.xhtml""> 
    <ui:define name=""test"">
      <h:panelGroup>
        <ui:insert name =""test""/>
        <br/>
        <span>Defined in the first-level template</span>
      </h:panelGroup>
    </ui:define>
</ui:composition>

Second-level template (inner_2.xhtml):
======================================
<ui:composition>
  <html>
    <body>
      <ui:insert name=""test""/>
    </body>
  </html>
</ui:composition>

According to the reporter, this test should chain the resolution like ui:decorate does, but in the discussion of MYFACES-2753 it was described that the original authors intention is ui:composition works as is. In fact, there is a way to write the previous example using <ui:composition><ui:decorate> to make it work as expected.

Anyway, I'll let this one open to keep it into account when we propose a template client api.",MYFACES-2843
"We ran into some issues with the current Flash implementation in MyFaces CODI some days ago and thus I started to bugfix and refactor it.

Overall the current FlashImpl has some bugs that are really only a reason of missing documentation about the FlashScope. Thus I worked very hard to find out the right way to go, and I think my refactorings really paid off, because now every possible scenario works for us (also verified with Mojarra). Furthermore the code is now much better readable :)

Things I've changed:
 - renamed previousMap to executeMap and currentMap to renderMap: I know these are only names, but the new ones are in the style of the JSF lifecylce's execute and render portion and thus IMO a bit easier to understand
 - refactored token handling (also concerning the POST-REDIRECT-GET pattern, which had some bugs)
 - refactored redirect handling
 - refactored FacesMessage handling
 - major cleanup on the overall code of FlashImpl (more private helper methods, more documentation, type-safety)
 - and last but not least: lots of test cases which cover nearly every possible scenario

For a better understanding of how things should work in the FlashImpl, I created an image which shows how the FlashScope works for Users and internally.",MYFACES-2842
"the current version of jsf.js does not support fileupload capabilities due to deficits in the servlet spec which will be lifted by 3.0. I am currently working on prototypes which will be the base for the jsf 2.1 ajax fileupload capabilities. 
Under this issue my code will be committed which is relevant to the core (it will not be exposed for now, but the commit is vital to keep the codebase for jsf 2.1.

",MYFACES-2841
"We can use a copied version of the Enumeration from getAttributeNames() here, because directly using it might cause a ConcurrentModificationException  when performing remove(). Note that we can do this since the Enumeration from getAttributeNames() will contain exactly the attribute names from the time getAttributeNames() was called and it will not be updated if attributes are removed or added.",MYFACES-2840
"looking at shouldValidateEmptyFields() I see this code:

...
       ExternalContext extCtx = context.getExternalContext();
       String validateEmptyFields = (String)
extCtx.getInitParameter(VALIDATE_EMPTY_FIELDS_PARAM_NAME);
       if (validateEmptyFields == null)
       {
           validateEmptyFields = (String)
extCtx.getApplicationMap().get(VALIDATE_EMPTY_FIELDS_PARAM_NAME);
       }
....

=> Should be cached on application_map instead of always parsing the web.xml (getInitParam())-
Actually I don't see a put to stored it on the applcaitonMap;

Inside of the validate() I see similar code:
String contextParam =
context.getExternalContext().getInitParameter(EMPTY_VALUES_AS_NULL_PARAM_NAME);

=> not cached

Similar in the _ExternalSpecifications clazz, no cache maintained here",MYFACES-2839
"defining a taglib.xml in src/META-INF with a source tag (*.xhtml) and using it in a test page gives an exception when calling the page.

javax.faces.FacesException: java.lang.NoSuchMethodError: org.apache.myfaces.view.facelets.AbstractFaceletContext.popClient(Lorg/apache/myfaces/view/facelets/TemplateClient;)V
	at org.apache.myfaces.shared_impl.context.ExceptionHandlerImpl.wrap(ExceptionHandlerImpl.java:241)
	at org.apache.myfaces.shared_impl.context.ExceptionHandlerImpl.handle(ExceptionHandlerImpl.java:156)
	at org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:258)
	at javax.faces.webapp.FacesServlet.service(FacesServlet.java:191)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:128)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:293)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:849)
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:583)
	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:454)
	at java.lang.Thread.run(Thread.java:619)
Caused by: java.lang.NoSuchMethodError: org.apache.myfaces.view.facelets.AbstractFaceletContext.popClient(Lorg/apache/myfaces/view/facelets/TemplateClient;)V
	at org.apache.myfaces.view.facelets.tag.UserTagHandler.apply(UserTagHandler.java:123)
	at javax.faces.view.facelets.DelegatingMetaTagHandler.applyNextHandler(DelegatingMetaTagHandler.java:59)
	at org.apache.myfaces.view.facelets.tag.jsf.ComponentTagHandlerDelegate.apply(ComponentTagHandlerDelegate.java:263)
	at javax.faces.view.facelets.DelegatingMetaTagHandler.apply(DelegatingMetaTagHandler.java:54)
	at javax.faces.view.facelets.CompositeFaceletHandler.apply(CompositeFaceletHandler.java:51)
	at org.apache.myfaces.view.facelets.compiler.NamespaceHandler.apply(NamespaceHandler.java:57)
	at javax.faces.view.facelets.CompositeFaceletHandler.apply(CompositeFaceletHandler.java:51)
	at org.apache.myfaces.view.facelets.compiler.EncodingHandler.apply(EncodingHandler.java:45)
	at org.apache.myfaces.view.facelets.impl.DefaultFacelet.apply(DefaultFacelet.java:143)
	at org.apache.myfaces.view.facelets.FaceletViewDeclarationLanguage.buildView(FaceletViewDeclarationLanguage.java:310)
	at org.apache.myfaces.lifecycle.RenderResponseExecutor.execute(RenderResponseExecutor.java:66)
	at org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:239)
	... 13 more
",MYFACES-2838
"The spec for whatever reason enforces two new inner functions in their jsdoc descriptors of jsf.js:

<inner>    	
isAutoExec()
<inner>   	
replaceNode(node, newNode)
Replace one node with another.

We have to add them as well, both functions already are implemented in the _Lang.js and _Dom.js submodules
so we just have to expose them since both are just inner functions which are not exposed outside the question arises
to me why it is specced at all. Both functions make some sense in the way mojarra is structured but not at all in the way myfaces is, 
unless the spec moves away from providing them only as inner functions and exposes them over the utils part of the spec.
",MYFACES-2837
"Hi,

When the default response writer writes a script, it includes CDATA tags around the body. If the script is being written inside another CDATA section for some reason (Primefaces does this in its partial response), then invalid XML is created.

I attach patch for the fix to be reviewed, before I commit something not quite right again and we can discuss. Basically, a simple boolean is used to check if a CDATA is already open or not.",MYFACES-2836
"Hence, the body of this methods should be empty.

This is highlighted by a problem with Primefaces, where Mojarra works without problems and Myfaces not, because it adds nested CDATA sections, hence breaking the custom partial response XML created by Primefaces.",MYFACES-2835
"In myfaces-impl there is some test cases that works with myfaces-impl internals. It could be good to publish them on maven repo, so we can add them as dependency in other projects. The most useful class is org.apache.myfaces.view.facelets.FaceletTestCase. In this way we can create test cases that takes .xhtml files directly and construct component tree directly, saving a lot of time on testing.

The idea is, in the future if this stuff is useful for other projects, to put it in a separate module, but for now I think do it in this way will work fine.

Right now, myfaces-api tests jar is published on maven repo too.",MYFACES-2834
"# This patch file was generated by NetBeans IDE
# Following Index: paths are relative to: /mnt/work/home/m1k0/Projekty/opensource/repos/asf/myfaces/core/branches/2_0_1/impl/src/main/java/org/apache/myfaces/view/facelets/util
# This patch can be applied using context Tools: Patch action on respective folder.
# It uses platform neutral UTF-8 encoding and \n newlines.
# Above lines and this line are ignored by the patching process.
Index: Classpath.java
--- Classpath.java Base (BASE)
+++ Classpath.java Locally Modified (Based On LOCAL)
@@ -26,6 +26,7 @@
 import java.net.URLConnection;
 import java.net.URLDecoder;
 import java.util.Enumeration;
+import java.util.HashSet;
 import java.util.LinkedHashSet;
 import java.util.Set;
 import java.util.jar.JarEntry;
@@ -43,6 +44,9 @@
  */
 public final class Classpath
 {
+    // m1k0 - zabezpieczenie przed pętlą
+    static private Set history = new HashSet();
+
     private Classpath()
     {
     }
@@ -71,6 +75,14 @@
         {
             URL url = urls.nextElement();
             URLConnection conn = url.openConnection();
+            // m1k0 - zabezpieczenie przed pętlą
+                String key = url.toString();
+                if (history.contains(key)) {
+                    System.out.println(""url:"" + url+"" <<<<<<<<<<<<<<<<<<<<<< "");
+                    continue;
+                }
+                history.add(key);
+            System.out.println("">>>>>>>>>>>>>>>>>>>>> url:"" + url);
             conn.setUseCaches(false);
             conn.setDefaultUseCaches(false);
 



This patch showing, that many times Classpath searching in the same place.

After paching, all log was proccessed by grep and wc


m1k0@laptok ~/Tymczasowy $ grep '>>>>' classloader-build.log | wc -l
72
m1k0@laptok ~/Tymczasowy $ grep '<<<<' classloader-build.log | wc -l
7200


In geronimo enviroment I have x 1000 times! This causes waiting 10 minuts for every deploy with myFaces :(
",MYFACES-2833
"There are two potential places that MyFaces can leak classloaders when applications are undeployed/redeployed or restarted when used with some component libraries (e.g. Facelets 1.1.x).  

The first is due to a known leak in commons-beanutils (https://issues.apache.org/jira/browse/BEANUTILS-156). This is easily resolved by moving up to the most recent beanutils release.  Will update the dependency in the pom.xml.

The second is due to the EnvironmentCache in commons-discovery.  In our LifecycleProviderFactory class, we currently execute DiscoverSingleton.find(), which under the covers puts an entry into the EnvironmentCache map.  In some cases this map is preventing the classloader from being released. This can be resolved by calling DiscoverSingleton.release() when the servlet context is destroyed to make sure the cache gets cleared when an application is stopping.",MYFACES-2832
"In PPR with Primefaces a neested CDATA section is rendered for components with script sections. I attached a patch for the HtmlResponseWriterImpl in myfaces-shared which avoid the double rendering of the CDATA section.
Primefaces uses startCDATA and endCDATA of ResponseWriter for it's cdata section. I've overridden this two methods to memorise if a cdata section is open. 

If a cdata section is open it's not opened a second one. I added this check to the writeScriptContent() method because there occurse the problem with Primefaces.

Please review the patch because I'm not sure if there are any site effects.

Thanks,

Regards Marcus",MYFACES-2831
"EL-2.2 defines a new method
Object invoke(ELContext context, Object base, Object method, Class<?>[] paramTypes, Object[] params)
for ELResolvers which by default returns null;

This doesn't get honoured in our EL Wrappers like e.g. 

BeanValidator._ValueReferenceResolver

and possibly also in other wrappers. 

This leads to throwing MethodNotFound Exceptions because we do not delegate the invoke invocation to the wrapped ELResolver.",MYFACES-2830
"Our facelets compiler currently invokes the BeanELResolver with param type EMPTY_CLASS_ARRAY (Class[0]). 
This is actually wrong, since 2.2.9 of the JSR-245 EL spec defines:

http://jcp.org/aboutJava/communityprocess/mrel/jsr245/index.html

2.2.9 invoke(ELContext, Object, Object, Class[], Object[])
paramTypes - An array of Class objects identifying the method's formal parameter types, in declared
order. Use an empty array if the method has no parameters. Can be null, in which case the method's
formal parameter types are assumed to be unknown.

So for an empty Class[] there is NO method guess available. Suns el-impl seems a bit more lenient than other EL implementations though.",MYFACES-2829
"If you use something like this

action=""#{cc.attrs.method(cc.attrs.param)}""

inside a composite component, you will get an unclear ELException, saying ""Method method not found"", because the ValueExpression which retrieves the MethodExpression from the composite component attribute map does not support params (of course). Thus a better exception message is clearly needed in this case.",MYFACES-2828
"Somehow I did get a Long into my component. This leads to the following Exception:

java.lang.ClassCastException: java.lang.Long cannot be cast to java.lang.String
	at javax.faces.validator.BeanValidator.validate(BeanValidator.java:145)
	at javax.faces.component._ComponentUtils.callValidators(_ComponentUtils.java:173)
	at javax.faces.component.UIInput.validateValue(UIInput.java:425)
	at javax.faces.component.UIInput.validate(UIInput.java:537)
	at javax.faces.component.UIInput.processValidators(UIInput.java:240)
	at javax.faces.component.UIData.process(UIData.java:1043)
",MYFACES-2827
"When I write a composite component like this one:
<html xmlns=""http://www.w3.org/1999/xhtml""
      xmlns:f=""http://java.sun.com/jsf/core""
      xmlns:h=""http://java.sun.com/jsf/html""
      xmlns:p=""http://www.parleys.com/jsf/taglib""
      xmlns:composite=""http://java.sun.com/jsf/composite"">
<composite:interface>
    <composite:attribute name=""navigateToPage"" type=""java.lang.String""/>
</composite:interface>
<composite:implementation>
    <h:commandLink id=""asdsadsdadasdas""
                   action=""#{testBean.gotoPage(cc.attrs.navigateToPage)}""
                   value=""MyFaces Test"">
        <composite:insertChildren/>
    </h:commandLink>
</composite:implementation>
</html>

And I use it in my page like this:
<parleys:navigationLink2 navigateToPage=""channels""/>

I get the following NPE:

[#|2010-07-18T15:27:08.227+0200|SEVERE|glassfish3.0.1|org.apache.myfaces.renderkit.ErrorPageWriter|_ThreadID=27;_ThreadName=Thread-1;|An exception occurred
javax.faces.FacesException: java.lang.NullPointerException
	at org.apache.myfaces.shared_impl.context.ExceptionHandlerImpl.wrap(ExceptionHandlerImpl.java:241)
	at org.apache.myfaces.shared_impl.context.ExceptionHandlerImpl.handle(ExceptionHandlerImpl.java:156)
	at org.apache.myfaces.lifecycle.LifecycleImpl.executePhase(LifecycleImpl.java:191)
	at org.apache.myfaces.lifecycle.LifecycleImpl.execute(LifecycleImpl.java:118)
	at javax.faces.webapp.FacesServlet.service(FacesServlet.java:189)
	at org.apache.catalina.core.StandardWrapper.service(StandardWrapper.java:1523)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:279)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:188)
	at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:641)
	at com.sun.enterprise.web.WebPipeline.invoke(WebPipeline.java:97)
	at com.sun.enterprise.web.PESessionLockingStandardPipeline.invoke(PESessionLockingStandardPipeline.java:85)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:185)
	at org.apache.catalina.connector.CoyoteAdapter.doService(CoyoteAdapter.java:325)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:226)
	at com.sun.enterprise.v3.services.impl.ContainerMapper.service(ContainerMapper.java:165)
	at com.sun.grizzly.http.ProcessorTask.invokeAdapter(ProcessorTask.java:791)
	at com.sun.grizzly.http.ProcessorTask.doProcess(ProcessorTask.java:693)
	at com.sun.grizzly.http.ProcessorTask.process(ProcessorTask.java:954)
	at com.sun.grizzly.http.DefaultProtocolFilter.execute(DefaultProtocolFilter.java:170)
	at com.sun.grizzly.DefaultProtocolChain.executeProtocolFilter(DefaultProtocolChain.java:135)
	at com.sun.grizzly.DefaultProtocolChain.execute(DefaultProtocolChain.java:102)
	at com.sun.grizzly.DefaultProtocolChain.execute(DefaultProtocolChain.java:88)
	at com.sun.grizzly.http.HttpProtocolChain.execute(HttpProtocolChain.java:76)
	at com.sun.grizzly.ProtocolChainContextTask.doCall(ProtocolChainContextTask.java:53)
	at com.sun.grizzly.SelectionKeyContextTask.call(SelectionKeyContextTask.java:57)
	at com.sun.grizzly.ContextTask.run(ContextTask.java:69)
	at com.sun.grizzly.util.AbstractThreadPool$Worker.doWork(AbstractThreadPool.java:330)
	at com.sun.grizzly.util.AbstractThreadPool$Worker.run(AbstractThreadPool.java:309)
	at java.lang.Thread.run(Thread.java:619)
Caused by: java.lang.NullPointerException
	at org.apache.myfaces.view.facelets.el.ValueExpressionMethodExpression.getExpressionString(ValueExpressionMethodExpression.java:70)
	at org.apache.myfaces.view.facelets.el.TagMethodExpression.getExpressionString(TagMethodExpression.java:101)
	at javax.faces.component._MethodExpressionToMethodBinding.getExpressionString(_MethodExpressionToMethodBinding.java:60)
	at org.apache.myfaces.application.ActionListenerImpl.processAction(ActionListenerImpl.java:97)
	at javax.faces.component.UICommand.broadcast(UICommand.java:120)
	at javax.faces.component.UIViewRoot._broadcastAll(UIViewRoot.java:889)
	at javax.faces.component.UIViewRoot.broadcastEvents(UIViewRoot.java:238)
	at javax.faces.component.UIViewRoot._process(UIViewRoot.java:1201)
	at javax.faces.component.UIViewRoot.processApplication(UIViewRoot.java:627)
	at org.apache.myfaces.lifecycle.InvokeApplicationExecutor.execute(InvokeApplicationExecutor.java:34)
	at org.apache.myfaces.lifecycle.LifecycleImpl.executePhase(LifecycleImpl.java:171)
	... 26 more

I am using Glassfish 3.0.1, with the Sun UEL implementation. It works when I disable MyFaces and use Mojarra.",MYFACES-2826
"From the spec rev A, section 3.6.2.1:

- The ""name"" attributes of the <composite:interface/ > element is exposed using the corresponding method on the composite component BeanDescriptor. If ProjectStage is Development, The ""displayName"", ""shortDescription"", ""expert"", ""hidden"", and ""preferred"" attributes of the <composite:interface/ > element are exposed using the corresponding methods on the composite component BeanDescriptor. Any additional attributes on <composite:interface/ > are exposed as attributes accessible from the getValue() and attributeNames() methods on BeanDescriptor (inherited from FeatureDescriptor). The return type from getValue() must be a javax.el.ValueExpression for such attributes.

- Any attributes declared by the composite component author using <composite:attribute/ > elements must be exposed in the array of PropertyDescriptors returned from getPropertyDescriptors() on the composite component BeanInfo.
For each such attribute, for any String or boolean valued JavaBeans properties on the interface PropertyDescriptor (and its superinterfaces) that are also given as attributes on a <composite:attribute/ > element, those properties must be exposed as properties on the PropertyDescriptor for that markup element. Any additional attributes on <composite:attribute/ > are exposed as attributes accessible from the getValue() and attributeNames() methods on PropertyDescriptor. The return type from getValue() must be a ValueExpression.

Although not explicitly mentioned in the spec, this also affects <composite:facet>, because this tag also creates a java.beans descriptor and this tag also has the above mentioned development attributes. A black box test of Mojarra confirmed this fact.",MYFACES-2825
"UILeaf components are stateless. They have no children and no facets. Therefore, the invokeOnComponent and visitTree methods should not go through all the children and facets. Moreover, they do not have any callback invocations through these methods or through a system event. The invokeOnComponent and visitTree methods should be overridden accordingly.",MYFACES-2824
"When rendering a simple request, MyFaces ends up calling Request.getAttributeNames() 1000+ times. This causes performance degredation in cases when it is not trivial for the container to produce the names. This is the case for example with Tomcat when there is an SSL connector: reading the attribute names requires tomcat to check if there are peer certificates.

I will attach a screenshot from a profiling session where a substantial portion of the server processing went into org.apache.myfaces.context.servlet.RequestMap.getAttributeNames(). This screenshot shows a backtrace from one JSSE accessor called by getAttributeNames() up to the faces components where the calls are initiated from.",MYFACES-2823
"When tomcat is shutdown, the following exception can be seen:

Jul 14, 2010 9:33:59 PM org.apache.catalina.core.StandardContext listenerStop
SEVERE: Exception sending context destroyed event to listener instance of class org.apache.myfaces.webapp.StartupServletContextListener
java.lang.IllegalStateException: No Factories configured for this Application. This happens if the faces-initialization does not work at all - make sure that you properly include all configuration settings necessary for a basic faces application and that all the necessary libs are included. Also check the logging output of your web application and your container for any exceptions!
If you did that and find nothing, the mistake might be due to the fact that you use some special web-containers which do not support registering context-listeners via TLD files and a context listener is not setup in your web.xml.
A typical config looks like this;
<listener>
  <listener-class>org.apache.myfaces.webapp.StartupServletContextListener</listener-class>
</listener>

	at javax.faces.FactoryFinder.getFactory(FactoryFinder.java:172)
	at org.apache.myfaces.context.servlet.FacesContextImplBase.getApplication(FacesContextImplBase.java:131)
	at org.apache.myfaces.webapp.AbstractFacesInitializer._dispatchApplicationEvent(AbstractFacesInitializer.java:189)
	at org.apache.myfaces.webapp.AbstractFacesInitializer.destroyFaces(AbstractFacesInitializer.java:197)
	at org.apache.myfaces.webapp.StartupServletContextListener.contextDestroyed(StartupServletContextListener.java:137)
	at org.apache.catalina.core.StandardContext.listenerStop(StandardContext.java:3882)
	at org.apache.catalina.core.StandardContext.stop(StandardContext.java:4516)
	at org.apache.catalina.core.ContainerBase.removeChild(ContainerBase.java:924)
	at org.apache.catalina.startup.HostConfig.undeployApps(HostConfig.java:1189)
	at org.apache.catalina.startup.HostConfig.stop(HostConfig.java:1160)
	at org.apache.catalina.startup.HostConfig.lifecycleEvent(HostConfig.java:313)
	at org.apache.catalina.util.LifecycleSupport.fireLifecycleEvent(LifecycleSupport.java:117)
	at org.apache.catalina.core.ContainerBase.stop(ContainerBase.java:1086)
	at org.apache.catalina.core.ContainerBase.stop(ContainerBase.java:1098)
	at org.apache.catalina.core.StandardEngine.stop(StandardEngine.java:448)
	at org.apache.catalina.core.StandardService.stop(StandardService.java:584)
	at org.apache.catalina.core.StandardServer.stop(StandardServer.java:744)
	at org.apache.catalina.startup.Catalina.stop(Catalina.java:628)
	at org.apache.catalina.startup.Catalina.start(Catalina.java:603)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:592)
	at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:288)
	at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:413)

This happens when myfaces api and impl are set on server lib instead WEB-INF/lib. A simple var that destroy only when the server has been initialized is enough.",MYFACES-2822
"The current codebase of our jsf.js code encodes the form values before being enqueued, causing a race condition under queuing conditions, because then viewStates are sent to the server which are the ones representing the state at enqueuing. In reality the encoding should happen at a later stage namely shortly before issuing the request.

I am going to fix that.
",MYFACES-2821
"The auto eval detection via appending a script element does not entirely work out how we do it, the issue is that mozilla seems to auto eval the appended value after finishing the current function setting it, hence the first time a automatically false is given back.
I am going to move the auto eval code over to an onLoad handler. This is a minor issue anyway, only the first ppr is affected if not executed properly.",MYFACES-2820
"Seems like our recent performance improvement by moving from ContextualRanges to innerHTML caused a race condition on Webkit based browsers, it works on fox and opera though, I am going to reintroduce the contextualRange code for webkit based browsers via a user agent check.",MYFACES-2819
"Sometimes it is useful to create a MyfacesConfig object and put it on application map when testing. Right now there is no constructor defined, but it could be good to initialize automatically with the default values. It does not have any side effects.",MYFACES-2818
,MYFACES-2817
"h:button currently does not support the disabled attribute, because it is not listed in the attributes of h:button in the VDL docs. However it is mentioned in the description of h:button in the VDL docs: ""If the ""disabled"" attribute is specified, do not render the ""onclick"" element and assign the ""disabled"" attribute a value of true.""

Furthermore h:link also supports this attribute.",MYFACES-2816
Both outcome parameters indicate that view params should be included.,MYFACES-2815
"Spec rev A added a hidden attribute to some composite tags in the VDL docs. The attribute refers to the ""hidden"" property of java.beans.FeatureDescriptor.

The affected tags are:

composite:actionSource
composite:attribute
composite:editableValueHolder
composite:facet
composite:interface
composite:valueHolder",MYFACES-2814
,MYFACES-2813
"I have a partial response that contains invalid syntax because CDATA
sections are nested. For example, in my app this code is generated in
the partial response:

<?xml version=""1.0""
encoding=""UTF-8""?><partialResponse><components><component><id>editorForm</id><output><![CDATA[<form
id=""editorForm"" name=""editorForm"" method=""post""
action=""/editor/curate/publication.jsf?conversationContext=2""
enctype=""application/x-www-form-urlencoded""><span
id=""growl""></span><script type=""text/javascript"">//<![CDATA[
jQuery.gritter.add({title:'Publication saved',text:'AC:
EBI-2637354',image:'/editor/primefaces_resource/2.0.3-SNAPSHOT/primefaces/growl/assets/info.png?conversationContext=2',sticky:false});

//]]></script>


...

I use Primefaces, which is generating the script section inside the
partial response (in this case, the growl renderer). MyFaces wraps the
script content in a CDATA section. However, because the output section
itself has the CDATA this is provoking the problem. The agent thinks
that the first CDATA is closed when it reachs the end of the nested
CDATA, creating an invalid response.",MYFACES-2812
"We worked on this issue a while ago yet I got another error report in - Bruno Aranda is reporting:

Hi,

I have a partial response that contains invalid syntax because CDATA
sections are nested. For example, in my app this code is generated in
the partial response:

<?xml version=""1.0""
encoding=""UTF-8""?><partialResponse><components><component><id>editorForm</id><output><![CDATA[<form
id=""editorForm"" name=""editorForm"" method=""post""
action=""/editor/curate/publication.jsf?conversationContext=2""
enctype=""application/x-www-form-urlencoded""><span
id=""growl""></span><script type=""text/javascript"">//<![CDATA[
jQuery.gritter.add({title:'Publication saved',text:'AC:
EBI-2637354',image:'/editor/primefaces_resource/2.0.3-SNAPSHOT/primefaces/growl/assets/info.png?conversationContext=2',sticky:false});

//]]></script> 
",MYFACES-2811
"Following came in from Markus Büttner from the users list:

<h:form id=""myForm"">
<h:selectOneMenu id=""selectMenu"" value=""#{myBean.menuValue}""
valueChangeListener=""#{myBean.menuValueChangedListener}"">
<f:selectItem itemValue=""true"" itemLabel=""Yes""/>
<f:selectItem itemValue=""false"" itemLabel=""No""/>
<f:ajax event=""change"" render=""output""/>
</h:selectOneMenu>
<h:outputText id=""output"" value=""#{myBean.menuValue}""/>
<h:commandButton action=""action""/>
</h:form> 


Switching from no to yes works, but switching from yes to no causes the
following error messages in browser (firefox) and no request is send to
server:

clientError-TypeError-MyFaces ERROR:Affected Class:
myfaces._impl.xhrCore._AjaxUtils
Affected Method: encodeSubmittableFields
Error name: TypeError
Error message: subBuf is undefined
Error description: undefined
Error number: undefined
Error line number: 3380
- Note, this message is only sent, because project stage is development
and no other error listeners are registered.

The message in IE8:

lientError-TypeError-MyFaces ERROR:Affected Class:
myfaces._impl.xhrCore._AjaxUtils
Affected Method: encodeSubmittableFields
Error name: TypeError
Error message: 'undefined' ist Null oder kein Object
Error description: 'undefined' ist Null oder kein Object
Error number: -2146823281
Error line number: undefined
- Note, this message is only sent, because project stage is development
and no other error listeners are registered.

I tried to use boolean, String an enum Types for Value. But always the
same error. 


This is probably also the same bug Bruno Aranda has reported:

I think a bug was introduced in the revision 960856 last 6th of July,
in the _AjaxUtils class. A variable is initialized inside a loop, but
is accessed outside. If the loop contains no values, the variable will
be left undefined. This is the code, lines 196-207:

if (element.options[u].selected) {
                            var subBuf = [];
                            var elementOption = element.options[u];
                            subBuf.push(encodeURIComponent(name));
                            subBuf.push(""="");
                            if (elementOption.getAttribute(""value"") != null) {

subBuf.push(encodeURIComponent(elementOption.value));
                            } else {

subBuf.push(encodeURIComponent(elementOption.text));
                            }

                        }  strBuf.push(subBuf.join(""""));

subBuf is accessed outside the loop, but initialized inside. If there
are no ""options selected"", subBuf will throw an 'undefined' javascript
exception. I guess that subBuf should be initialized outside the loop?

",MYFACES-2810
"Hello I found following erratic behavior: if I have following forms

http://www.pastebin.org/390005 under the name pprNavCase1 and the subsequent form:
http://www.pastebin.org/390009 under the name pprNavCase2 we get following results:
Navigation from page1 to page2 returns a rerender viewroot. Which is absolutely correct
A subsequent navigation from page2 to page1 returns in the content of page2 to be redrawn, which is incorrect.
In Mojarra the code switches from page1 to page2 and returns back to page1.
This is an absolute showstopper because it indicates an error in the navigation somewhere, ppr navigation is not an unusual usecase.


",MYFACES-2809
see topic,MYFACES-2808
"This is a small enhancement to the solution done in MYFACES-2624

That one forces to compare every tag with <body>. I think it is better just do it once when the facelet is built. That means move the comparison:

if (HTML.BODY_ELEM.equalsIgnoreCase(.....

to TextUnit. In that way, the comparison is only done once per page, not one per each tag in each page.",MYFACES-2807
"There is some code (mostly checked the facelets part yet) which is not aware of Multi-ClassLoader scenarios like one has in J2EE environments where MyFaces is installed inside the containers SharedClassLoader.

An example: if you look at MetaRulesetImpl, you will see 
private final static WeakHashMap<String, MetadataTarget> _metadata = new WeakHashMap<String, MetadataTarget>();

Assuming that myfaces-impl.jar gets shared between multiple WebApps, this is utterly evil since this map only exists once for all WebApps.

I found this issue because I got weird ClassCastExceptions in my project which contains 2 WAR files in an EAR and those WAR files both contains primefaces.jar. 

I first hit a page from webapp1 which loads Watermark.class via webapp1 WebAppClassLoader.
If you access a page from webapp2 after that and this also uses p:watermark, it will find the cached method for Watermark, but this still is the class loaded via the webapp1 ClassLoader. So on evaluating the EL it creates a ClassCastException because WaterMark loaded via ClassLoader of webapp1 !=  WaterMark loaded via ClassLoader of webapp2.",MYFACES-2806
"Right now we have a ConcurrentHashMap for ApplicationImpl _defaultValidatorsIds, but we are using a _cachedDefaultValidatorsIds too. In this case, it is better to use a synchronized block when default validators are added, but use a double-checked locking using volatile on the cache. Not use a synchronized block causes that getDefaultValidatorInfo() could return not all validators, but note that posibility is unlikely.",MYFACES-2805
"Checking how _firstRequestProcessed works, I notice we can do some enhancements LifecycleImpl and LifecycleFactoryImpl. In both classes, we use synchronized blocks to access common methods, but that is not really necessary, we can do other alternatives like ConcurrentHashMap and CopyOnWriteArrayList and they will be more effective.

Note LifecycleImpl instance is shared by multiple threads at the same time, so it must be thread safe. If we have variables that changes inside it, we must ensure visibility adding ""final"" and ""volatile"" modifiers too when necessary.",MYFACES-2804
"We need iframe support for multipart form request (aka fileupload handling), we also might have to deliver different transport mechanisms outside of the existing one - Already working on it.
",MYFACES-2803
Another state saving improvement is to remove the attached object handlers from the component attributes map. Instead a map that holds the attached object handlers indexed by the component reference will be created in CompositeComponentResourceTagHandler.,MYFACES-2802
"I started to solve this issue on MYFACES-2779, but definitively it deserves to have a separate issue.

HtmlResponseWriterImpl needs to deal with <script> and <style> tags properly on both html and xhtml. There is a very old issue (MYFACES-1353) that suggest a review now donated trinidad code for xhtml.

After checking the ResponseWriter implementations of trinidad, and do some test on ri about, the following points should be taken into account before solve this issue:

- When jsp is used, part of the page is rendered by it and the other part are renderer by jsf using the ResponseWriter implementation. That means if there is a <script> on a page, no xml comment wraps the content. But the things are different in facelets, because the jsf ResponseWriter implementation is used to render everything. So, if facelets founds a <script> or <style>, it call ResponseWriter.startElement and ResponseWriter.endElement and all related methods.

- When facelets is used, we first parse .xhtml files with a SAX parser. That means invalid xml markup makes facelets fail. For example:

<script type=""text/javascript"">
  alert(""<EM>This won't work<\/EM>"");
</script>

  Since <script> and <style> content is PCDATA on the dtd, the SAX parser does not make distinction and parse the code inside <script> as if the content was more xhtml.

- The following notation is valid for text/html responses:

<style type=""text/css"">
.x23 { background:red; }
</style>

<style type=""text/css"">
<![CDATA[
.x24 { background:red; }
]]>
</style>

<style type=""text/css"">
/* <![CDATA[ */
.x25 { background:red; }
/* ]]> */
</style>

<script type=""text/javascript"">
/* <![CDATA[ */
  alert(""<EM>This work 1</EM>"");
/* ]]> */
</script>

<script type=""text/javascript"">
//<![CDATA[
  alert(""<EM>This work 2</EM>"");
//]]>
</script>

<script type=""text/javascript"">
<!--
  alert(""<EM>This work 3</EM>"");
//-->
</script>

<script type=""text/javascript"">
  alert(""This work 4"");
</script>

 - This syntax is not valid in xhtml:

<script type=""text/javascript"">
<!--
  alert(""<EM>This won't work in xhtml</EM>"");
//-->
</script>

   In this case, using //<![CDATA[ or /*<![CDATA[*/ is preferred

 - This syntax pass the SAX parser but fails later if text/html content type is used and IE.

<script type=""text/javascript"">
<![CDATA[
  /* Only valid if it is used Xhtml as XML */
  alert(""<EM>This work on firefox</EM>"");
]]>
</script>

- ""<!--"" and ""//-->"" could be added as wrapper for <script> content when text/html is used.

- ""//<![CDATA["" and ""//]]>"" must be added as a wrapper for <script> and <style> (without ""//"") content and xhtml is used. The reason is in html, <script> and <style> content are considered cdata, but in xhtml it is pcdata by the dtd, but in fact, the intention is, content inside these tags should not be parsed by the web client. Mojarra append this blocks automatically, and I think it is fine to do this too.

- The set used to prevent include content inside tags that should be empty should only be used in text/html reponses. In xhtml this is not required.

- Trinidad HtmlResponseWriter has a fast solution to check for empty html elements. We should include it on myfaces.
",MYFACES-2801
Tthe <redirect> element of a <navigation-case> has an attribute called include-view-params. This attribute is currently not picked up due to a wrong configuration of DigesterFacesConfigUnmarshallerImpl. Furthermore its default value should be false instead of true.,MYFACES-2800
"Only issuer form and render target forms currently are updated, execute forms should be as well. 

This entire update mess again is caused by portlets constraints
theoretically all forms within the document should be updated with their viewstates on server side state saving, we cannot do that due to 
having also to be able to run in portlets
, we need a reliable portlet detection to fix this issue properly.
(Burgreport on the jsf side is filed)

",MYFACES-2799
"First I thought the validation tags like e.g. <f:validateRequired /> or <f:validateLength /> aren't working. But during debugging I found out that the respective validation classes are called if at least one char is inserted.

At the myfaces homepage (http://myfaces.apache.org/core20/myfaces-impl/webconfig.html) I've found that the default is ""auto"".

I think it would be better to set the default to ""true"" because one would expect to get an exception if he leaves a required field blank which isn't the case if it's set to ""auto"".",MYFACES-2798
"I ran the performance testing again against the scripts and found following out, for ie we use innerHTML with some fixes
for the rest contextual ranges, this works, but contextual range creation is way slower than using innerHTML, neither is W3C standard, but at least innerHTML is supported over all browsers (with some bugs in older  ie versions where it stems from), but innerHTML will be part of the HTML5 spec, since I solved all ie6 related innerhtml problems for our usecase I guess it is save to move over to innerHTML, we are talking about a differentce of 42 miliseconds on firefox 3.6 between the two methods.

Mojarra still is faster (but fails to run my performance test on chrome, while our scripts work), 
this is partially caused by MyFaces constantly sending oamSubmit for a form refresh (we should move that code finally out into an external resource), but also partially on the javascript side, one reason for the performance bottleneck was the usage
of contextualRanges which are half as fast as innerHTML.

Another issue is our oo layer, eval is calls way too often globalEval, introducing a namespace index should resolve this. 

On dom level the heaviest operation is the replaceElements probably by some inlining for the 95% simple cases we can resolve that one to mojarra levels.

Last but not least our exectScript also can be performance improved by simply concatenating all scripts and then doing a single eval.


",MYFACES-2797
"I throw exception from my EL method and handling exceptions with my custom exception handler.

//Exception class
public class MyException extends RuntimeException{
}

//Bean action method
//Using from #{bean.log} in a page
public String log(){
   if(ok){
      throw new MyException();
  }
}

I write custom exception handler with wrapped semantic.
public class MyExceptionHandler extends ExceptionHandlerWrapper{
         public void handle(){
                        .....................
			ExceptionQueuedEvent event = i.next();
			ExceptionQueuedEventContext context = (ExceptionQueuedEventContext) event
					.getSource();
			Throwable t = context.getException();
                        Throeable cause = getRootCause(t);  --> But it does not give MyException, it gives ELEvaluationException!!!!
                 ...............
          }
}

Probiem is that http://svn.apache.org/repos/asf/myfaces/shared/trunk/core/src/main/java/org/apache/myfaces/shared/context/ExceptionHandlerImpl.java  # getRootCause compare classes with equals(), but must use isAssignableFrom().
            
           //Current Implementation
           if (!clazz.equals(FacesException.class) && !clazz.equals(ELException.class))
            {
                return t;
            }
            
           //I think it must be
          if(!FacesException.isAssignableFrom(clazz) && !ELException.isAssignableFrom(clazz)){
             return t;
         }

",MYFACES-2796
"The auto eval detection currently works over user agents, this is not ideal because for every browser release it has to be rechecked. Now that firefox has turned off auto eval, it probably is a good idea to move to a dom based detection to fix that as well.

",MYFACES-2795
"We have some direct comparisons with toLowerCase in the dom routines, those need replacements by the Lang.js function equalsIgnoreCase.

",MYFACES-2794
"
In some cases it is useful to directly pass the form element as the ""source"" parameter for   jsf.ajax.request(source, |event|, { |OPTIONS| });

The following modification to _Dom.js provides this feature:

    fuzzyFormDetection : function(elem) {

...
        //before going into the more complicated stuff we try the simple approach
        if (!_Lang.isString(elem)) {
            if (_Lang.equalsIgnoreCase(elem.tagName, ""form""))  {
                return elem;
            }
            return this.getParent(elem, ""form"");
        }

",MYFACES-2793
"I have a bean 

@ManagedBean(name=""blog"")
@SessionScoped
public class Blog {

	private String content;
	
	private static AtomicInteger id = new AtomicInteger(0);
	
	private String idm;

	public String addBlog(){
		this.idm = Integer.toString(id.incrementAndGet());
		return ""view?faces-redirect=true&amp;includeViewParams=true"";
	}
}

This is result view
<h:body>
	
	<f:view>
		<f:metadata>
			<f:viewParam name=""id"" value=""#{blog.idm}""></f:viewParam>
		</f:metadata>
	</f:view>
	
	<h:outputText value=""#{blog.content}""></h:outputText>
	
</h:body>

This works! Changed to following and adding faces-config.xml
	public String addBlog(){
		this.idm = Integer.toString(id.incrementAndGet());
		return ""ok"";
	}

    <navigation-rule>
    	
    	<navigation-case>
    		<from-action>#{blog.addBlog}</from-action>
    		<from-outcome>ok</from-outcome>
    		<to-view-id>/view.xhtml</to-view-id>
    		<redirect include-view-params=""true""/>
    	</navigation-case>
    	
    </navigation-rule>

Not working! 

What can be the problem? (I think doing some wrong actions!)
",MYFACES-2792
"    	<navigation-case>
    		<from-action>#{blog.addBlog}</from-action>
    		<if>#{true}</if>
    		<to-view-id>/view.xhtml</to-view-id>
    		<redirect>
    			<view-param>
    				<name>id</name>
    				<value>#{blog.idm}</value>
    			</view-param>
    		</redirect>
    	</navigation-case>

@ManagedBean(name=""blog"")
@SessionScoped
public class Blog {

	private String content;
	
	private static AtomicInteger id = new AtomicInteger(0);
	
	private String idm;
	
	public static AtomicInteger getId() {
		return id;
	}

	public static void setId(AtomicInteger id) {
		Blog.id = id;
	}

	public String getIdm() {
		return idm;
	}

	public void setIdm(String idm) {
		this.idm = idm;
	}

	public String addBlog(){
		this.idm = Integer.toString(id.incrementAndGet());
                return null;
	}

	public String getContent() {
		
		return content;
	}

	public void setContent(String content) {
		this.content = content;
	}
}

Produces http://localhost:8080/session_1_blog/view.jsf?id=%23{blog.idm}",MYFACES-2791
"Currently myfaces-parent contains an own <distributionManagement> section. Since we derive from apache-parent-7, this is not necessary anymore. We should remove it to leverage the common release functionality (ASF Nexus for staging, etc).

We should also upgrade the used plugin versions to the latest available versions if possible.",MYFACES-2790
The ASF considers poms and similar files as 'sources'. This means they must contain a valid Apache Software License header.,MYFACES-2789
getClientId was replaced with getContainerClientId but method setRowIndex was not fit to this changes and so saving and restoring of row states doesn't work!,MYFACES-2788
"Some time ago there was an issue with Trinidad that was caused by a wrapper which added some functionality to the standard implementation (MYFACES-2641). The problem was that the standard implementation (of ViewHandler in this case) used other public methods internally via this.method() instead of invoking them on the wrapper. Thus the wrapper was circumvented which led to loss of the additionaly functionality.

I now finally took a look at all those affected classes and found some similar issues, which could cause problems in wrapped environments. One of them is in ViewHandlerImpl when getting the ViewDeclarationLanguage via this.getViewDeclarationLanguage(). This should be done by facesContext.getApplication().getViewHandler().getViewDeclarationLanguage().",MYFACES-2787
"Now that the the spec for 2.1 is starting we have to fixup our foundation work in the areas of pps, timeout, delay and queue control. We have had that code since the beginning due to having it inherited from j4fry but it never got a serious testing and fixup, I am currently fixing that code up, so that way get a discussion and prototyping base for jsf 2.1 from it.
",MYFACES-2786
"Some major code clean up on the initialization of MyFaces:

- The solution for startup and shutdown FacesContext implementations (MYFACES-2730) introduced some duplicate code on StartupFacesContextImpl and FacesContextImpl. This can be solved by providing a base implementation class (like the one in for StartupExternalContext). This will make maintaining the two FacesContext implementation very easy, because there are no duplicate methods (except for getViewRoot() on StartupFacesContextImpl).
- JUnit tests are needed to verify the behavior of StartupServletContextListener and MyFacesServlet and to check if the FacesContext is available on startup and shutdown
- AbstractFacesInitializer should provide a static method to get the right FacesInitializer impl instead of having several duplicate methods in StartupServletContextListener and MyFacesServlet that do nothing but getting the right impl and invoking some method on it.
- AbstractFacesInitializer.dispatchInitDestroyEvent should use the application object from the StartupFacesContextImpl and not directly from the factory
- AbstractFacesInitializer.getLifecycleId() is unused because of MYFACES-2730
- initStartupFacesContext() and initShutdownFacesContext() should set the field startup correctly (true or false) and should not create the UIViewRoot directly (it should be created in StartupFacesContextImpl at first access)
- minor javadoc copy and paste error on FacesInitializer",MYFACES-2785
"When I write a composite component like the following:

<?xml version=""1.0"" encoding=""UTF-8""?>
<ui:composition ...>
        <div>
            <h2>Spaces</h2>
            <ul>
                <ui:repeat value=""#{spacesBean.spaces}"" var=""space"">
                    <li>
                        <parleys:spaceLink space=""#{space}"" renderThumbnail=""true"" renderLabel=""true""/>
                    </li>
                </ui:repeat>
            </ul>
        </div>
</ui:composition>

I get a NPE on line 1101 in ApplicationImpl, because there is no component metadata. Of course I made a mistake here, but a NPE isn't very helpful. :)

There is a ""SEVERE: Cannot found composite bean descriptor UIComponent.BEANINFO_KEY"" in the logs, but it's swallowed by a huge stack trace.

I suggest to throw a descriptive exception instead of logging the message.",MYFACES-2784
"Since we now have the Startup-FacesContext, we can get rid of the ""hack"" in AbstractFacesInitializer that installs the DebugPhaseListener the very first time, because this will now happen in FacesConfigurator.configureLifecycle().",MYFACES-2783
"Fortunately the fix is simple, we can just copy the template used to generate it and put it on src/main/resources/META-INF and do the check for null using velocity. Anyway, a fix should be made on myfaces builder plugin",MYFACES-2782
"While I was testing the new head functionality I recognized an error which has not influenced browsers but influences my parsing routines (which rely on valid xhtml/xml markup for the head processing)

<h:head>
    <script type=""text/javascript""><!--
    var myCounterVar = Math.floor(Math.random() * 11)
    //--></script>
</h:head>

renders on the browser 

<script type=""text/javascript""><!--
<!--
    var myCounterVar = Math.floor(Math.random() * 11)
    //-->
//--></script

As you can see <!-- becomes <!--<!--
and //--> becomes //--> //-->
while this is fine for a javascript processor it is not for a parser which has to rely on valid markup.

",MYFACES-2781
"Several fixes to enhance startup memory footprint and runtime performance taking advantage of ProjectStage.

-lazy loading of validators, converters, behaviors,components - can have a substantial impact on startup footprint in applications with multiple or very large widget libraries.

Turn off some updating of resources for ProjectStage=Production by default (can always override using javax.faces.FACELETS_REFRESH_PERIOD)
-change default facelets refresh interval to -1 when projectStage is production.  This by itself gains a 60% improvement in throughput.
-disable reloading of web.xml and faces-config after the first load.  

-store a map to cache Class to listenerFor and resourceDependency annotations when in production.  
",MYFACES-2780
"Hello Everyone some changes in the latest codebase cause a bogus render all response:
Here is the output I am getting:

http://www.pastebin.org/368077

as you can see the development stage is rendered before the html definition, any proper html parsing on such an output has to fail.

",MYFACES-2779
"The way the xml errors are handled is not standardized every browser rolls its own handling, mozilla has changed the way it handles the xml parsing errors slightly, I  have to readjust so that it works again.
Also additionally to that I am going to make the development stage configurable from the config items if no default one is given.
",MYFACES-2778
"In order to reduce the saved state, the ErrorPageWriter.VISITED_FACET_COUNT should not be included in the component attributes map, as this is only an intermediate parameter used in the current request.",MYFACES-2777
"When using ajax requests on ViewScoped Beans always old ViewState (ViewState of last normal page rendering) is restored. It looks like component javax.faces.ViewState is not updated in html dom tree by ajax.

Issue create to post on user list: http://markmail.org/message/jnm6jilnb3p2b5s3
",MYFACES-2776
"If second parameter - the componentResource:

UIViewRoot.addComponentResource(FacesContext context, UIComponent componentResource)

has null id then StackOverflowError occurs:

Caused by: java.lang.StackOverflowError
	at java.lang.ThreadLocal.get(ThreadLocal.java:124)
	at javax.faces.context.FacesContext.getCurrentInstance(FacesContext.java:71)
	at javax.faces.component.UIComponentBase.getFacesContext(UIComponentBase.java:1057)
	at javax.faces.component.UIComponentBase.setParent(UIComponentBase.java:174)
	at javax.faces.component._ComponentChildrenList.childRemoved(_ComponentChildrenList.java:123)
	at javax.faces.component._ComponentChildrenList.remove(_ComponentChildrenList.java:147)
	at javax.faces.component._ComponentChildrenList.removeChildrenFromParent(_ComponentChildrenList.java:136)
	at javax.faces.component._ComponentChildrenList.add(_ComponentChildrenList.java:76)
	at javax.faces.component._ComponentChildrenList.add(_ComponentChildrenList.java:30)
	at javax.faces.component.UIViewRoot.addComponentResource(UIViewRoot.java:188)
	at org.apache.myfaces.renderkit.html.HtmlStylesheetRenderer.processEvent(HtmlStylesheetRenderer.java:86)
	at javax.faces.component.UIComponent$EventListenerWrapper.processEvent(UIComponent.java:1098)
	at javax.faces.event.SystemEvent.processListener(SystemEvent.java:43)
	at org.apache.myfaces.application.ApplicationImpl._traverseListenerList(ApplicationImpl.java:1955)
	at org.apache.myfaces.application.ApplicationImpl.publishEvent(ApplicationImpl.java:504)
	at javax.faces.component.UIComponentBase._publishPostAddToViewEvent(UIComponentBase.java:201)
	at javax.faces.component.UIComponentBase.setParent(UIComponentBase.java:186)
	at javax.faces.component._ComponentChildrenList.updateParent(_ComponentChildrenList.java:128)
	at javax.faces.component._ComponentChildrenList.add(_ComponentChildrenList.java:79)
	at javax.faces.component._ComponentChildrenList.add(_ComponentChildrenList.java:30)
	at javax.faces.component.UIViewRoot.addComponentResource(UIViewRoot.java:188)
	at org.apache.myfaces.renderkit.html.HtmlStylesheetRenderer.processEvent(HtmlStylesheetRenderer.java:86)
	at javax.faces.component.UIComponent$EventListenerWrapper.processEvent(UIComponent.java:1098)
....


This probably does not happen  if componentResource is created from a facelet but only if it created from java code (a listener in my case)",MYFACES-2775
The ComponentSupport.MARK_DELETED attribute is used only inside one request. It doesn't need to be saved in the state. It should be removed from the attributes of the component. Instead a list of components marked for deletion should be included in the FaceletContext.,MYFACES-2774
"I did some profiling on our scripts today, and found two hotspots in the script include sections both for dev and for deployment project stage.

For dev the jsf-uncompressed.js was constantly loaded if embedded in ppr (and to the worse
the subsequent dynamic loads were triggered as well), the same issue except for the subsequent reloads
also persists for production.

I also added some forEach fallbacks for arrays on browsers which already have Array.prototype.forEach implemented.
This is a minor improvement but helps with readability.

The changes will be committed tomorrow.
",MYFACES-2773
"Our javascripts have logging facilities which route to output consoles if present (firebug, firebug lite chromium or an embedded div as fallback if present)
currently we do not have a tracing info and due to the structure of the non intrusiveness a log entry cannot be traced directly from the firebug console for instance to its origin, also
we do not have logging level control on code level only on console level if present.

The patch will add a trace if tracing functionaltiy is present, and also will introduce log switches and trace switches.

Note, the logging only is present for dev mode not for production mode, to keep the code size lean.
",MYFACES-2772
"Some of the last changes broke the  
  results = Dom.findByStyleClass(Dom.byId(""level1""), ""level2"", true);
   UnitTest.assertTrue(""three elements found due to deep scan being neglegted"", results.length > 2);
 
for IE8 the function is not used currently in the code but it needs to be fixed, probably an escaping issue related to the recent escaping bug fixed in the codebase.
",MYFACES-2771
Include in the <ui:debug> information about the saved state.,MYFACES-2770
"In PROJECT_STAGE=Development it would be useful to force browse not cache resources like .css or .js. The most annyoing during web development is clearing cache somewhere in Preferences ->  Advanced  ->  Cache -> Clear Cache in browsers which don't have Clear Cache plugin like Firefox does.

",MYFACES-2769
"The internal myfaces parameters have been broken by the refactoring:
            <h:commandButton id = ""button1"" value = ""Increment left"" action = ""#{count.increment}"" onclick = ""jsf.ajax.request(this, event, {render: 'out1', execute: 'out1 button1', 
                                 myfaces:{errorlevel:'ERROR', pps:true, queuesize:1}}); return false;"" />
fails while
            <h:commandButton id = ""button1"" value = ""Increment left"" action = ""#{count.increment}"" onclick = ""jsf.ajax.request(this, event, {render: 'out1', execute: 'out1 button1'}); return false;"" />

This is not a showstopper since queue control and pps are not part of jsf 2.0 but are preparation code for
2.1 so I can live with not having them currently enabled. The fixup either will go into 2.0.1 or 2.0.2.

",MYFACES-2768
"_AjaxRequest.js line 96 and next add an extra ampersand in request , for example: javax.faces.ViewState=yz...%3D%3D&&javax.faces.source=formId

It has no impact but Tomcat complains: 

21.6.2010 20:09:26 org.apache.tomcat.util.http.Parameters processParameters
WARNING: Parameters: Invalid chunk '' ignored.",MYFACES-2767
"The new StartupFacesContextImpl from https://issues.apache.org/jira/browse/MYFACES-2730 should be checked in ApplicationImpl in methods
- org.apache.myfaces.application.ApplicationImpl.isFirstRequestProcessed()
- org.apache.myfaces.application.ApplicationImpl.addELResolver(ELResolver)
",MYFACES-2766
see topic,MYFACES-2765
"During  profiling I noticed that org.apache.myfaces.view.facelets.impl.DefaultFaceletFactory.getFacelet(URL) takes some time even in PROJECT_STAGE=Production. Problem is in DefaultFaceletFactory.needsToBeRefreshed(DefaultFacelet) - it returns true (sometimes) even in production. It can be easily solved with javax.faces.FACELETS_REFRESH_PERIOD=-1 but considering PROJECT_STAGE value in this situation is more user friedly.
",MYFACES-2764
See headline,MYFACES-2763
"Is seems that handling of http://www.mail-archive.com/jsr-314-open@jcp.org/msg00043.html (https://javaserverfaces-spec-public.dev.java.net/issues/show_bug.cgi?id=790) is broken in current trunk. This example:

        <h:form id=""form1"">
        </h:form>
        
        <h:form id=""form2"">
            <h:commandButton value=""AJAX Submit"">
                <f:ajax render=""@all"" />
                <f:setPropertyActionListener value=""#{true}"" target=""#{viewScope.test}"" />
            </h:commandButton>
        </h:form>

        <h:outputText value=""#{viewScope.test}"" />

should produce output ""true"" with all clicks but it works only at first. Firebug shows that all javax.faces.ViewState elements are removed after first response. If I comment out first h:form it works as expected.

Because this example works fine with 2.0.0 I think it a regression.
",MYFACES-2762
"This construct should lead to complete ajax re-render of whole view (works with mojarra):

partialViewContext.setRenderAll(true);

but it seems that myfaces don't read property renderAll during rendering at all. Probably org.apache.myfaces.context.servlet.PartialViewContextImpl.processPartialRendering(UIViewRoot, PhaseId) should respect this property somehow. Note: there is a possible workaround:

partialViewContext.getRenderIds().add(javax.faces.context.PartialResponseWriter.RENDER_ALL_MARKER);

",MYFACES-2761
"In tomahawk there exists a test that check jsp tld and that one was able to detect this two inconsistencies. The first one is not problem, because f:viewParam really does not exists in jsp, it is a error in the javadoc, but the jsp tld requires it, but the second one could cause an exception.",MYFACES-2760
There are currently some unnecessary init methods and contructor attributes (ReleaseableExternalContext) on FacesContextImpl. ,MYFACES-2759
"When in Develepment stage DebugPhaseListener collects useful information about component tree. But there is a problem with construction like this (example is from a real application based on ADF API) :

<h:dataTable value=""#{queryModel.currentDescriptor.conjunctionCriterion.criterionList}"" var=""node"">
<h:column>
        <h:selectOneMenu rendered=""#{node.attributeCriterion and node.removable}"" value=""#{node.operator}"">
          <f:selectItems value=""#{node.operators}"" />
        </h:selectOneMenu>
      </h:column>
</h:dataTable>

please note that selectOneMenu is rendered only if node is AttributeCriterion because only AttributeCriterion class has property ""operator"". But DebugPhaseListener tries to get value for every row in DataTable even it is not rendered - it leads in this case to exception:

javax.el.PropertyNotFoundException: The class 'com.company....ConjunctionCriterion' does not have the property 'operator'
",MYFACES-2758
"Some frameworks call FacesContext.getCurrentInstance()  during web application startup (JBoss WELD for example).

Myfaces should provide a ""mock"" FacesContext during application startup (as mojarra does).",MYFACES-2757
"Doing some stuff on tomahawk, I saw a typo error. The property inheritedTag is used in tomahawk for jsf 1.1 and it is used on very special cases, when it is necessary to override the default code added on a jsp tag. Since in tomahawk for jsf 1.1 we use doclets that code fall ""out of the radar"". The solution is use the same name as in the doclets.

With this commit I also added some attributes for @JSFJspProperty.",MYFACES-2756
"With the new javascript, we now wrapper calls into jsf.ajax.request with a function call.  So for example this:

<h:commandButton id=""incrementButton"" value=""Increment""
                       onclick=""jsf.ajax.request(this, event, { execute: this.id, render: 'counter' }); return false;""
                       actionListener=""#{counter.increment}"" />

would be rendered as this:
<input id=""incrementButton"" name=""incrementButton"" type=""submit"" value=""Increment""
onclick=""var cf = function(){jsf.ajax.request(this, event, { execute: this.id, render: 'counter' }); return false;};var oamSF = function(){};return (cf()==false)? false : oamSF();"" />


The problem is that we've broken the reference to this.id as it is undefined at the function's scope. This works fine in both the 2.0.0 release as well as Mojarra.
",MYFACES-2755
"As currently implemented, MyFaces can attempt to create a new session after the response has been committed.  This is due to calling saveSerializedView on the JspStateManagerImpl even in cases where writeState was never called (e.g. a JSP outcome target with no form tags).  This can lead to either an IllegalStateException being thrown or else extra sessions being created which wait until the session timeout is reached to be destroyed and thus can lead to a potential memory leak.  Which behavior is seen depends on the appserver being used and whether it reuses session cookies for the same client.  

JSPStateManagerImpl will be updated to set a FacesContext attribute on writeState to indicate that the state should be written by saveSerializedView.  

On 2.0, FlashImpl also needs to be updated as well to not create a new session during the remove children operation.  Currently we are creating a new session just to create a new map and then clear it. ",MYFACES-2754
"Following example does not produce any output:

OuterClient.xhtml
<ui:decorate
    template=""/templates/OuterTemplate.xhtml""
    xmlns:ui=""http://java.sun.com/jsf/facelets"">
    <ui:define name=""content"">
        <ui:include src=""InnerClient.xhtml"" />
    </ui:define>
</ui:decorate>

OuterTemplate.xhtml:
<!DOCTYPE HTML PUBLIC ""-//W3C//DTD HTML 4.01 Transitional//EN""
""http://www.w3.org/TR/html4/loose.dtd"">
<html
    xmlns=""http://www.w3.org/1999/xhtml""
    xmlns:ui=""http://java.sun.com/jsf/facelets""
    xmlns:f=""http://java.sun.com/jsf/core""
    xmlns:h=""http://java.sun.com/jsf/html"">
<f:view>
    <h:head>
        <title>title</title>
    </h:head>
    <h:body>
        <ui:insert name=""content"" />
    </h:body>
</f:view>
</html>

InnerClient.xhtml:
<ui:composition
    template=""/templates/InnerTemplate.xhtml""
    xmlns=""http://www.w3.org/1999/xhtml""
    xmlns:ui=""http://java.sun.com/jsf/facelets"">
    <ui:define name=""content"">
        Do you see me?
    </ui:define>
</ui:composition>

InnerTemplate.xhtml:
<f:subview
    xmlns:ui=""http://java.sun.com/jsf/facelets""
    xmlns:f=""http://java.sun.com/jsf/core"">
    <ui:insert name=""content"" />
</f:subview>


But if OutterClient.xhtml looks like:
<ui:decorate
    template=""/templates/OuterTemplate.xhtml""
    xmlns:ui=""http://java.sun.com/jsf/facelets"">
    <ui:define name=""content"">
        <ui:composition template=""/templates/InnerTemplate.xhtml"">
            <ui:define name=""content"">
                Do you see me?
            </ui:define>
        </ui:composition>
    </ui:define>
</ui:decorate>

it outputs ""Do you see me?"" which is expected result in both cases. I think first case should work too - or am I missing something?",MYFACES-2753
"see error log below:

...
Downloading: http://repository.apache.org/snapshots/org/apache/myfaces/buildtool
s/checkstyle-rules/2-SNAPSHOT/checkstyle-rules-2-SNAPSHOT.pom
Downloading: http://repository.apache.org/snapshots/org/apache/myfaces/buildtool
s/checkstyle-rules/2-SNAPSHOT/checkstyle-rules-2-SNAPSHOT.jar
[INFO] ------------------------------------------------------------------------
[ERROR] BUILD ERROR
[INFO] ------------------------------------------------------------------------
[INFO] Failed to resolve artifact.

Missing:
----------
1) org.apache.myfaces.buildtools:checkstyle-rules:jar:2-SNAPSHOT

  Try downloading the file manually from the project website.

  Then, install it using the command:
      mvn install:install-file -DgroupId=org.apache.myfaces.buildtools -Dartifac
tId=checkstyle-rules -Dversion=2-SNAPSHOT -Dpackaging=jar -Dfile=/path/to/file

  Alternatively, if you host your own repository you can deploy the file there:

      mvn deploy:deploy-file -DgroupId=org.apache.myfaces.buildtools -DartifactI
d=checkstyle-rules -Dversion=2-SNAPSHOT -Dpackaging=jar -Dfile=/path/to/file -Du
rl=[url] -DrepositoryId=[id]

  Path to dependency:
        1) org.apache.maven.plugins:maven-checkstyle-plugin:maven-plugin:2.2
        2) org.apache.myfaces.buildtools:checkstyle-rules:jar:2-SNAPSHOT

----------
1 required artifact is missing.

for artifact:
  org.apache.maven.plugins:maven-checkstyle-plugin:maven-plugin:2.2

from the specified remote repositories:
  apache.snapshots (http://repository.apache.org/snapshots),
  central (http://repo1.maven.org/maven2),
  java.net (http://download.java.net/maven/2),
  Codehaus Snapshots (http://snapshots.repository.codehaus.org/)",MYFACES-2752
"specifying the escape attribute on the outputLabel has no effect.  The renderer always does an encoding of the value.

Only verified with version 1.2.8.  (1.1 and/or 2.0) could have the same problem.",MYFACES-2751
"See: https://javaserverfaces-spec-public.dev.java.net/issues/show_bug.cgi?id=806

It was fixed for 2.0 Rev a. After reading it the conclusion is it is enough important to be included in 2.0.1 release.

By Andy Schwartz:

Short summary of the problem for those who don't want to read through the gory details:

The specification is currently a bit too specific about when PostRestoreStateEvents should be delivered.  The only requirement should be that these events are delivered after the view has been restored, but before we move out of the restore view phase.  For example, a reasonable implementation would be to deliver these events in the Lifecycle implementation, after the state manager has returned the restored view.  However, the spec does not currently allow this - eg. the spec requires that UIViewRoot.processRestoreState() delivers these events.

Of course, UIViewRoot.processRestoreState isn't always called (only used for full state saving), which means that implementations end up having to duplicate this logic elsewhere, such as in whatever state manager is used for partial state saving.  This has further fallout for custom state managers - ie. custom state managers that do not call processRestoreState() must duplicate the event delivery logic yet again.

This is much more complicated than necessary.  My recommendation is that we simplify the requirements such that implementations are free to deal with PostRestoreStateEvent delivery in a saner way.  For example, implementations should be able to deliver these events once at the end of the restore view phase (and not be required to implement this logic in UIViewRoot.processRestoreState()).

I suspect that this small spec change will lead to simpler code in Mojarra (definitely) and MyFaces (probably, though I haven't looked at the code).
",MYFACES-2750
"Both myfaces and mojarra only encrypt the state. What is missing is add a message authentication code (MAC) to the encryption to prevent padding oracle attack. The objective is detect if the received view state has been modified and do not process it, throwing ViewExpiredException.

The problem can be solved if users change to server side state saving, because on the view state only a identifier is sent and no changes on the component tree could be done with this configuration.

The proposed solution was add this new web-config params:

org.apache.myfaces.MAC_ALGORITHM : Indicate the algorithm used to calculate the Message Authentication Code that is added to the view state.

org.apache.myfaces.MAC_SECRET : Define the initialization code that are used to initialize the secret key used on the Message Authentication Code algorithm.

org.apache.myfaces.MAC_SECRET.CACHE : If is set to ""false"", the secret key used for MAC algorithm is not cached. This is used when the returned SecretKey for mac algorithm is not thread safe. 

It was unified security configuration in all branches to works the same. That means, it was included in 1.1.x the property org.apache.myfaces.USE_ENCRYPTION.

Now, if an error occur when the state is encrypted/decrypted, a ViewExpiredException is thrown, but the real exception is logged, to hide information that could be useful to non developers.",MYFACES-2749
"When attempting to run some simple ajax  tests using htmlunit, we're seeing some NPEs when running in the default (IE) client mode.  As before with MYFACES-2745 this looks like its a bug in htmlunit, however these test cases had been passing on the MyFaces 2.0.0 release so something that is going on with the new javascript must be triggering the bug.  I've validated in IE8, Firefox 3.6 and Chrome that this is being rendered properly in a live browser session as well as that it works if you initialize the htmlunit with new WebClient(BrowserVersion.FIREFOX_3).

Here's a simple example of a failing case.  Its just executes an increment action on a counter var and uses f:ajax to re-render an outputText field. 
    <h:form id=""form1"" prependId=""false"">
        <h:outputText id=""out1"" value=""#{incrementdecrement.value}""/>
        <br/>
        <h:commandButton id=""button1"" value=""Count"" action=""#{incrementdecrement.increment}"" >
            <f:ajax render=""out1"" disabled=""false""  />
        </h:commandButton>
        <br/>
    </h:form>

After doing some debugging, htmlunit doesn't seem to be handling the partial page update.  Instead of updating the span value for ""out1"", it is actually removing it from the idMap for the page.  So if you try to validate the value of ""out1"" has been incremented, you'll get an NPE since the element is no longer on the idMap.

        WebClient webClient = new WebClient();       
        HtmlPage page = (HtmlPage) webClient.getPage (""http://localhost:8080/JSF20AJAXTag/DisabledFalse.jsf"");
        String buttonId = ""button1"";
        doClick(page,buttonId);
       
        Assert.assertEquals( ""1"", page.getElementById (""out1"").getTextContent());

The NPE is coming from trying to execute getTextContent() when page.getElementById(""out1"") is returning null.",MYFACES-2748
"2.0.1 introduce a auto attachment of jsf.js in the body if jsf.ajax.request is somewhere in an onEvent handler and no h:head is present.

The problem is the scripts are imported without defer into the body. While this is perfectly viable and works on any decent browser, it causes problems on IE6 under certain conditions (aka open subtags beneath body) which is highly senstive to this while having open tags.

There are several ways to fix this, 

first defer the script loading via defer, this is Microsofts recommended way to load scripts within the body tag in ie6
secondly, I have to evaluate if I simply change the debug eval code just for ie6 to global eval it might fix the issue,
third, simply do not auto include jsf.js at all, but just issue a warning that jsf.js should be included under development mode, so that manual includes do not trigger this issue.
",MYFACES-2747
"Subdivide the functionality in HtmlTextRendererBase, HtmlTextareaRendererBase and HtmlSecretRendererBase classes of myfaces-shared into better extendable parts.

So, subclasses of these can extend these bases, rather than copying them.",MYFACES-2746
"The javascript changes from 5/25 have caused a regression when using htmlunit against even the simplest JSF page as long as it loads the jsf.js script.  

The exception occurs simply executing getPage() on the webClient.
        WebClient webClient = new WebClient();
        HtmlPage page = webClient.getPage(""http://localhost:8080/JSF20AJAXTag/DisabledFalse.jsf"");


It can be recreated by a page with nothing but this form in the body:
 <h:form id=""form1"" prependId=""false"">
        <h:outputText id=""out1"" value=""This is broken""/>
        <h:outputScript name=""jsf.js"" library=""javax.faces"" target=""head"" />
    </h:form>

Attached is the exception trace from a run this morning which includes Werner's changes from MYFACES-2742 this morning so we are up to date in our sandbox. 
======= EXCEPTION START ========
EcmaError: lineNumber=[51] column=[0] lineSource=[<no source>] name=[TypeError] sourceName=[http://localhost:8080/JSF20AJAXTag/javax.faces.resource/jsf.js.jsf?ln=javax.faces] message=[TypeError: Cannot set property ""_mfProto"" of null to ""null"" (http://localhost:8080/JSF20AJAXTag/javax.faces.resource/jsf.js.jsf?ln=javax.faces#51)]
com.gargoylesoftware.htmlunit.ScriptException: TypeError: Cannot set property ""_mfProto"" of null to ""null"" (http://localhost:8080/JSF20AJAXTag/javax.faces.resource/jsf.js.jsf?ln=javax.faces#51)
	at com.gargoylesoftware.htmlunit.javascript.JavaScriptEngine$HtmlUnitContextAction.run(JavaScriptEngine.java:527)
	at net.sourceforge.htmlunit.corejs.javascript.Context.call(Context.java:537)
	at net.sourceforge.htmlunit.corejs.javascript.ContextFactory.call(ContextFactory.java:538)
	at com.gargoylesoftware.htmlunit.javascript.JavaScriptEngine.execute(JavaScriptEngine.java:425)
	at com.gargoylesoftware.htmlunit.html.HtmlPage.loadExternalJavaScriptFile(HtmlPage.java:980)
	at com.gargoylesoftware.htmlunit.html.HtmlScript.executeScriptIfNeeded(HtmlScript.java:353)
	at com.gargoylesoftware.htmlunit.html.HtmlScript$1.execute(HtmlScript.java:215)
	at com.gargoylesoftware.htmlunit.html.HtmlScript.onAllChildrenAddedToPage(HtmlScript.java:235)
	at com.gargoylesoftware.htmlunit.html.HTMLParser$HtmlUnitDOMBuilder.endElement(HTMLParser.java:718)
	at org.apache.xerces.parsers.AbstractSAXParser.endElement(Unknown Source)
	at com.gargoylesoftware.htmlunit.html.HTMLParser$HtmlUnitDOMBuilder.endElement(HTMLParser.java:676)
	at org.cyberneko.html.HTMLTagBalancer.callEndElement(HTMLTagBalancer.java:1136)
	at org.cyberneko.html.HTMLTagBalancer.endElement(HTMLTagBalancer.java:1038)
	at org.cyberneko.html.filters.DefaultFilter.endElement(DefaultFilter.java:206)
	at org.cyberneko.html.filters.NamespaceBinder.endElement(NamespaceBinder.java:329)
	at org.cyberneko.html.HTMLScanner$ContentScanner.scanEndElement(HTMLScanner.java:2999)
	at org.cyberneko.html.HTMLScanner$ContentScanner.scan(HTMLScanner.java:1991)
	at org.cyberneko.html.HTMLScanner.scanDocument(HTMLScanner.java:895)
	at org.cyberneko.html.HTMLConfiguration.parse(HTMLConfiguration.java:499)
	at org.cyberneko.html.HTMLConfiguration.parse(HTMLConfiguration.java:452)
	at org.apache.xerces.parsers.XMLParser.parse(Unknown Source)
	at com.gargoylesoftware.htmlunit.html.HTMLParser$HtmlUnitDOMBuilder.parse(HTMLParser.java:896)
	at com.gargoylesoftware.htmlunit.html.HTMLParser.parse(HTMLParser.java:350)
	at com.gargoylesoftware.htmlunit.html.HTMLParser.parseHtml(HTMLParser.java:304)
	at com.gargoylesoftware.htmlunit.DefaultPageCreator.createHtmlPage(DefaultPageCreator.java:134)
	at com.gargoylesoftware.htmlunit.DefaultPageCreator.createPage(DefaultPageCreator.java:101)
	at com.gargoylesoftware.htmlunit.WebClient.loadWebResponseInto(WebClient.java:420)
	at com.gargoylesoftware.htmlunit.WebClient.getPage(WebClient.java:303)
	at com.gargoylesoftware.htmlunit.WebClient.getPage(WebClient.java:360)
	at com.gargoylesoftware.htmlunit.WebClient.getPage(WebClient.java:345)
	at com.ibm.mike.TestJS.homePage(TestJS.java:19)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:48)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:37)
	at java.lang.reflect.Method.invoke(Method.java:600)
	at junit.framework.TestCase.runTest(TestCase.java:154)
	at junit.framework.TestCase.runBare(TestCase.java:127)
	at junit.framework.TestResult$1.protect(TestResult.java:106)
	at junit.framework.TestResult.runProtected(TestResult.java:124)
	at junit.framework.TestResult.run(TestResult.java:109)
	at junit.framework.TestCase.run(TestCase.java:118)
	at org.eclipse.jdt.internal.junit.runner.junit3.JUnit3TestReference.run(JUnit3TestReference.java:130)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
Caused by: net.sourceforge.htmlunit.corejs.javascript.EcmaError: TypeError: Cannot set property ""_mfProto"" of null to ""null"" (http://localhost:8080/JSF20AJAXTag/javax.faces.resource/jsf.js.jsf?ln=javax.faces#51)
	at net.sourceforge.htmlunit.corejs.javascript.ScriptRuntime.constructError(ScriptRuntime.java:3753)
	at net.sourceforge.htmlunit.corejs.javascript.ScriptRuntime.constructError(ScriptRuntime.java:3731)
	at net.sourceforge.htmlunit.corejs.javascript.ScriptRuntime.typeError(ScriptRuntime.java:3759)
	at net.sourceforge.htmlunit.corejs.javascript.ScriptRuntime.typeError3(ScriptRuntime.java:3785)
	at net.sourceforge.htmlunit.corejs.javascript.ScriptRuntime.undefWriteError(ScriptRuntime.java:3807)
	at net.sourceforge.htmlunit.corejs.javascript.ScriptRuntime.setObjectElem(ScriptRuntime.java:1578)
	at net.sourceforge.htmlunit.corejs.javascript.Interpreter.interpretLoop(Interpreter.java:1450)
	at net.sourceforge.htmlunit.corejs.javascript.Interpreter.interpret(Interpreter.java:845)
	at net.sourceforge.htmlunit.corejs.javascript.InterpretedFunction.call(InterpretedFunction.java:164)
	at net.sourceforge.htmlunit.corejs.javascript.ContextFactory.doTopCall(ContextFactory.java:429)
	at com.gargoylesoftware.htmlunit.javascript.HtmlUnitContextFactory.doTopCall(HtmlUnitContextFactory.java:264)
	at net.sourceforge.htmlunit.corejs.javascript.ScriptRuntime.doTopCall(ScriptRuntime.java:3157)
	at net.sourceforge.htmlunit.corejs.javascript.InterpretedFunction.exec(InterpretedFunction.java:175)
	at com.gargoylesoftware.htmlunit.javascript.JavaScriptEngine$3.doRun(JavaScriptEngine.java:416)
	at com.gargoylesoftware.htmlunit.javascript.JavaScriptEngine$HtmlUnitContextAction.run(JavaScriptEngine.java:521)
	... 46 more
Enclosed exception: 
net.sourceforge.htmlunit.corejs.javascript.EcmaError: TypeError: Cannot set property ""_mfProto"" of null to ""null"" (http://localhost:8080/JSF20AJAXTag/javax.faces.resource/jsf.js.jsf?ln=javax.faces#51)
	at net.sourceforge.htmlunit.corejs.javascript.ScriptRuntime.constructError(ScriptRuntime.java:3753)
	at net.sourceforge.htmlunit.corejs.javascript.ScriptRuntime.constructError(ScriptRuntime.java:3731)
	at net.sourceforge.htmlunit.corejs.javascript.ScriptRuntime.typeError(ScriptRuntime.java:3759)
	at net.sourceforge.htmlunit.corejs.javascript.ScriptRuntime.typeError3(ScriptRuntime.java:3785)
	at net.sourceforge.htmlunit.corejs.javascript.ScriptRuntime.undefWriteError(ScriptRuntime.java:3807)
	at net.sourceforge.htmlunit.corejs.javascript.ScriptRuntime.setObjectElem(ScriptRuntime.java:1578)
	at net.sourceforge.htmlunit.corejs.javascript.Interpreter.interpretLoop(Interpreter.java:1450)
	at script(http://localhost:8080/JSF20AJAXTag/javax.faces.resource/jsf.js.jsf?ln=javax.faces:51)
	at script(http://localhost:8080/JSF20AJAXTag/javax.faces.resource/jsf.js.jsf?ln=javax.faces:48)
	at script(http://localhost:8080/JSF20AJAXTag/javax.faces.resource/jsf.js.jsf?ln=javax.faces:65)
	at net.sourceforge.htmlunit.corejs.javascript.Interpreter.interpret(Interpreter.java:845)
	at net.sourceforge.htmlunit.corejs.javascript.InterpretedFunction.call(InterpretedFunction.java:164)
	at net.sourceforge.htmlunit.corejs.javascript.ContextFactory.doTopCall(ContextFactory.java:429)
	at com.gargoylesoftware.htmlunit.javascript.HtmlUnitContextFactory.doTopCall(HtmlUnitContextFactory.java:264)
	at net.sourceforge.htmlunit.corejs.javascript.ScriptRuntime.doTopCall(ScriptRuntime.java:3157)
	at net.sourceforge.htmlunit.corejs.javascript.InterpretedFunction.exec(InterpretedFunction.java:175)
	at com.gargoylesoftware.htmlunit.javascript.JavaScriptEngine$3.doRun(JavaScriptEngine.java:416)
	at com.gargoylesoftware.htmlunit.javascript.JavaScriptEngine$HtmlUnitContextAction.run(JavaScriptEngine.java:521)
	at net.sourceforge.htmlunit.corejs.javascript.Context.call(Context.java:537)
	at net.sourceforge.htmlunit.corejs.javascript.ContextFactory.call(ContextFactory.java:538)
	at com.gargoylesoftware.htmlunit.javascript.JavaScriptEngine.execute(JavaScriptEngine.java:425)
	at com.gargoylesoftware.htmlunit.html.HtmlPage.loadExternalJavaScriptFile(HtmlPage.java:980)
	at com.gargoylesoftware.htmlunit.html.HtmlScript.executeScriptIfNeeded(HtmlScript.java:353)
	at com.gargoylesoftware.htmlunit.html.HtmlScript$1.execute(HtmlScript.java:215)
	at com.gargoylesoftware.htmlunit.html.HtmlScript.onAllChildrenAddedToPage(HtmlScript.java:235)
	at com.gargoylesoftware.htmlunit.html.HTMLParser$HtmlUnitDOMBuilder.endElement(HTMLParser.java:718)
	at org.apache.xerces.parsers.AbstractSAXParser.endElement(Unknown Source)
	at com.gargoylesoftware.htmlunit.html.HTMLParser$HtmlUnitDOMBuilder.endElement(HTMLParser.java:676)
	at org.cyberneko.html.HTMLTagBalancer.callEndElement(HTMLTagBalancer.java:1136)
	at org.cyberneko.html.HTMLTagBalancer.endElement(HTMLTagBalancer.java:1038)
	at org.cyberneko.html.filters.DefaultFilter.endElement(DefaultFilter.java:206)
	at org.cyberneko.html.filters.NamespaceBinder.endElement(NamespaceBinder.java:329)
	at org.cyberneko.html.HTMLScanner$ContentScanner.scanEndElement(HTMLScanner.java:2999)
	at org.cyberneko.html.HTMLScanner$ContentScanner.scan(HTMLScanner.java:1991)
	at org.cyberneko.html.HTMLScanner.scanDocument(HTMLScanner.java:895)
	at org.cyberneko.html.HTMLConfiguration.parse(HTMLConfiguration.java:499)
	at org.cyberneko.html.HTMLConfiguration.parse(HTMLConfiguration.java:452)
	at org.apache.xerces.parsers.XMLParser.parse(Unknown Source)
	at com.gargoylesoftware.htmlunit.html.HTMLParser$HtmlUnitDOMBuilder.parse(HTMLParser.java:896)
	at com.gargoylesoftware.htmlunit.html.HTMLParser.parse(HTMLParser.java:350)
	at com.gargoylesoftware.htmlunit.html.HTMLParser.parseHtml(HTMLParser.java:304)
	at com.gargoylesoftware.htmlunit.DefaultPageCreator.createHtmlPage(DefaultPageCreator.java:134)
	at com.gargoylesoftware.htmlunit.DefaultPageCreator.createPage(DefaultPageCreator.java:101)
	at com.gargoylesoftware.htmlunit.WebClient.loadWebResponseInto(WebClient.java:420)
	at com.gargoylesoftware.htmlunit.WebClient.getPage(WebClient.java:303)
	at com.gargoylesoftware.htmlunit.WebClient.getPage(WebClient.java:360)
	at com.gargoylesoftware.htmlunit.WebClient.getPage(WebClient.java:345)
	at com.ibm.mike.TestJS.homePage(TestJS.java:19)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:48)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:37)
	at java.lang.reflect.Method.invoke(Method.java:600)
	at junit.framework.TestCase.runTest(TestCase.java:154)
	at junit.framework.TestCase.runBare(TestCase.java:127)
	at junit.framework.TestResult$1.protect(TestResult.java:106)
	at junit.framework.TestResult.runProtected(TestResult.java:124)
	at junit.framework.TestResult.run(TestResult.java:109)
	at junit.framework.TestCase.run(TestCase.java:118)
	at org.eclipse.jdt.internal.junit.runner.junit3.JUnit3TestReference.run(JUnit3TestReference.java:130)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
======= EXCEPTION END ========

",MYFACES-2745
"from: [jsr-314-open] Ajax inside a DataTable

Cagatay Civici

I've faced with an issue in our app I'd like to share when trying to update the datatable itself from a command element located inside a column. Case is to select a row, execute logic and update the datatable. Basic code:

<h:dataTable id=""cars"" var=""car"" value=""#{tableBean.carsSmall}"">
<h:column>
<f:facet name=""header"">
Model
</f:facet>
<h:outputText value=""#{car.model}"" />
</h:column>

<h:column>
<f:facet name=""header"">
Action
</f:facet>
<h:commandButton value=""Some Action"" actionListener=""#{tableBean.handleRowAction(car)}"">
<f:ajax render=""cars"" />
</h:commandButton>
</h:column>
</h:dataTable>

As datatable has a rowIndex >= 0 during rendering of commandButton f:ajax defines the component id to render as cars:{rowIndex} where I should expect ""cars"" only. This is due to UIData.getClientId implementation as UIData
adds rowIndex for unique row ids. This causes an issue with a nested f:ajax case.

Martin Marinschek

We should never include the row-index in the client-id of the table
itself. For this, we need to revise the client-id generation
algorithm.

Without actually having tried it, I think that it is easy to do so, as
we have a UIComponentBase.getContainerClientId() to create the
client-id of the children - when this method is called, we append the
row-index, if getClientId() itself is called, we don´t. 

",MYFACES-2744
"Actually we have the following methods to render behaviorized attributes on HtmlRendererUtils:

    public static boolean renderBehaviorizedAttribute(
            FacesContext facesContext, ResponseWriter writer,
            UIComponent component, Map<String, List<ClientBehavior>> clientBehaviors, String eventName, String componentProperty, 
            String htmlAttrName) throws IOException

    public static void renderBehaviorizedEventHandlers(
            FacesContext facesContext, ResponseWriter writer, UIComponent uiComponent,
            Map<String, List<ClientBehavior>> clientBehaviors) throws IOException

    public static void renderBehaviorizedEventHandlersWithoutOnclick(
            FacesContext facesContext, ResponseWriter writer, UIComponent uiComponent,
            Map<String, List<ClientBehavior>> clientBehaviors) throws IOException

    public static void renderBehaviorizedFieldEventHandlers(
            FacesContext facesContext, ResponseWriter writer, UIComponent uiComponent,
            Map<String, List<ClientBehavior>> clientBehaviors) throws IOException

    public static void renderBehaviorizedFieldEventHandlersWithoutOnchange(
            FacesContext facesContext, ResponseWriter writer, UIComponent uiComponent,
            Map<String, List<ClientBehavior>> clientBehaviors) throws IOException

    public static void renderBehaviorizedFieldEventHandlersWithoutOnchangeAndOnselect(
            FacesContext facesContext, ResponseWriter writer, UIComponent uiComponent,
            Map<String, List<ClientBehavior>> clientBehaviors) throws IOException

    public static boolean renderBehaviorizedOnchangeEventHandler(
            FacesContext facesContext, ResponseWriter writer, UIComponent uiComponent,
            Map<String, List<ClientBehavior>> clientBehaviors) throws IOException

The problem can be seen when we tried to enhance tomahawk, rendering behaviorized attributes (TOMAHAWK-1474). We are starting to have a lot of methods everywhere that does not fall in the base case but do some ""hack"" to make some attribute work. So, we start to have duplicate code everywhere.

We need to think in a more simple, better documented api for render behaviorized attributes. I don't like to change method signatures of existing methods but I think we need to do it in this case.
",MYFACES-2743
"Request parameter ""javax.faces.behavior.event"" has undefined value if we submit button by ajax. The server side code isn't able to recognise that the button is submitted.

If we have xhtml like this:

<h:form prependId=""false"">
     <h:commandButton id=""buttonId"">
          <f:ajax />
     </h:commandButton>
</h:form>

the commandButton is rendered to this html output

<input type=""submit""
    onclick=""jsf.util.chain(document.getElementById('buttonId'), event,'jsf.ajax.request(\'buttonId\',event,{\'javax.faces.behavior.event\':\'action\'})'); return false;""
    name=""buttonId""
    id=""buttonId"">

When we submit the commandButton, javascript is performed and post parameters contain ""undefined"" value for key ""javax.faces.behavior.event"". I think that problem is in _Runtime.js in method exists. The method has two arguments root which is an array and subNms. In our case root contains
execute :  '@this', render : '@this', javax.faces.behavior.event : 'action' and subNms is ""javax.faces.behavior.event"". Next part of code tries to split subNms by dots. These parts are looked up in the root but the root contains whole key ""javax.faces.behavior.event"". The method returns false and the request parameter ""javax.faces.behavior.event"" stays undefined. ",MYFACES-2742
"h:link with bad outcome (not found) render value twice and does not end correctly.

The solution is use an attribute to indicate how we should close this tag (using ""a"" or ""span"")",MYFACES-2741
"On vdl.retargetMethodExpression, it is done something like this to ""retarget"" methodExpressions:

                if (CompositeComponentELUtils.isCompositeComponentExpression(attributeExpressionString))
                {
                    methodExpression = new ValueExpressionMethodExpression(attributeNameValueExpression);
                }

This strategy causes problems when complex EL expressions are resolved.

I think it is better to ""unwrap"" the original expression, trying to find LocationValueExpression wrappers and ""rewrap"" the method expression to be created with a LocationMethodExpression. In this way, complex EL expressions are resolved correctly.

I did some tests and it works well. Minor fixes were included with this patch too.",MYFACES-2740
"From the related spec issue (#817 - https://javaserverfaces-spec-public.dev.java.net/issues/show_bug.cgi?id=817):

In every standard by-type converter in the JSF spec, except for the
EnumConverter, the following code is present in getAsString():

if (value instanceof String)
{
   return (String) value;
}

Thus allowing String values to be used directly as the String representation of
the type. This allows e.g. the following scenario for an Integer property in the
managed bean to work, although ""1234"" beeing a String and not an Integer:

<h:selectOneRadio value=""#{myBean.inputInt}"">
   <f:selectItem itemValue=""1234"" />
</h:selectOneRadio>

However the spec javadoc of the EnumConverter does not include this scenario and
thus EnumConverter.getAsString() throws a ConverterException when providing a
String value. This means that the following scenario won't work, although it
should on my opinion (note that this currently does work with Mojarra because of
an implementation issue - see [1] for details):

<h:selectOneRadio value=""#{myBean.inputEnum}"">
   <f:selectItem itemValue=""EnumConstant1"" />
</h:selectOneRadio>

EnumConstant1 beeing a valid constant in the enum type referenced by
#{myBean.inputEnum}. The only way to make this work right now is to use a
ValueExpression that resolves to the needed enum constant, so something like this:

<h:selectOneRadio value=""#{myBean.inputEnum}"">
   <f:selectItem itemValue=""#{myBean.propertyThatResolvesToEnumConstant1}"" />
</h:selectOneRadio>

This is not very straight forward IMHO, thus I think EnumConverter.getAsString()
should pass through String-values just as every other standard by-type converter
does.

See also the discussion on the MyFaces user mailing list about this [2].

[1] https://javaserverfaces.dev.java.net/issues/show_bug.cgi?id=1694
[2] http://www.mail-archive.com/users@myfaces.apache.org/msg55742.html",MYFACES-2739
,MYFACES-2738
"Right now, the implementation of UIComponentBase.getFacesContext() is this:

    @Override
    protected FacesContext getFacesContext()
    {
         return FacesContext.getCurrentInstance();
    }

I think it is possible to create a variable like this:

    private transient FacesContext _facesContext;

and change the current implementation to:

    void setCachedFacesContext(FacesContext facesContext)
    {
        _facesContext = facesContext;
    }

    @Override
    protected FacesContext getFacesContext()
    {
        if (_facesContext == null)
        {
            return FacesContext.getCurrentInstance();
        }
        else
        {
            return _facesContext;
        }
    }

Then we do this on methods like processXXX, encodeXXX (not on encodeAll), visitTree and invokeOnComponent:

    @Override
    public void processDecodes(FacesContext context)
    {
        try
        {
            setCachedFacesContext(context);
 
             /*...... do what is required ........*/

        }
        finally
        {

            popComponentFromEL(context);
            
            setCachedFacesContext(null);
        }

In few words, set and release temporally the variable while those operations are executed. This change will reduce the amount of calls to FacesContext.getCurrentInstance() without side effects, because we are caching only on safe places and enclosing everything in a try finally block.

If no objections I'll commit this code soon.",MYFACES-2737
"Currently UIDebug.encodeBegin() always adds a CDATA section for the JavaScript of <ui:debug />. This is no problem when using the standard MyFaces PartialResponseWriterImpl, because in MYFACES-2585 Werner made sure that those CDATA sections will be removed. However it is a problem when using PrimeFaces, so it is the best way to not render the CDATA section on a partial request.

See also the discussion on the mailing list: http://www.mail-archive.com/users@myfaces.apache.org/msg55700.html",MYFACES-2736
"Some smaller changes, the structural delegation pattern is now a first class pattern like inheritance and singleton in the runtime.js to make it easier to write delegations without additional delegation code.
Also inheritance now works on objects by picking their original class.
Additionally to that to keep the code size lean I am going to move the logging out into a debugging _Lang.js (_ExtLang.js) which is a plug in replacement for _Lang.js, this again should save a few bytes because for now we do not log in the core but only in the unit tests.

",MYFACES-2735
"In my examples I have a phase listener that outputs all request parameters. I accidentially did this before restore view and got some strange behaviour. With MyFaces 2.0, reading the request parameters before the restore view phase kills german umlauts. This happens because the character encoding is calculated and set in the request at the beginning of restore view but after the before phase listeners are executed.

As this is not happening with Mojarra, I set a breakpoint in ServletRequest.setCharacterEncoding and saw that they are setting this somewhere at the beginning of the lifecycle.

I quickly checked the spec but the only thing I found regarding the character encoding was at the beginning of restore view (which is done correctly in MyFaces). But I wonder if it should not be set earlier as, like in my case, an earlier access to the request parameters kills umlauts. This might also be necessary for extensions doing something with request parameters in a before restore view listener.
",MYFACES-2734
"There are a lot of different scenarios possible with <f:validateBean /> (nested, wrapping, different validation groups, disabled/enabled, BeanValidator set as default validator,...) and we currently do not test any of this. Since I implemented most of the handling of <f:validateBean /> myself, I wrote 13 test cases which verify the behavior in (hopefully) every possible scenario.",MYFACES-2733
"While writing some tests for <f:validateBean> I found out that currently the MetaRuleset of ValidatorTagHandlerDelegate does only ignore binding, but not disabled and for. Thus the following log message:

SCHWERWIEGEND: /testValidateBean.xhtml at line 24 and column 66 disabled=""#{validateBeanDisabled}"" Unhandled by MetaTagHandler for type javax.faces.validator.BeanValidator

The solution is very easy: ValidatorTagHandlerDelegate should also ignore disabled and for, because these attributes are (implicitly) handled by ValidatorHandler (implicitly, because the super classes of it handle the attributes).",MYFACES-2732
"...though it still should be possible to add it manually.

For example:

<h:inputText>
     <f:validateBean disabled=""true""/>
     <f:validateBean />
</h:inputText>

This should add the BeanValidator, because ""<f:validateBean disabled=""true""/>"" adds the BeanValidator's ID to an exclusion list on <h:inputText />, thus <h:inputText /> will not get the BeanValidator installed as a default validator, however ""<f:validateBean />"" installs it manually and this should still be possible.",MYFACES-2731
"If custom ResourceHandler calls FacesContext.getCurrentInstance() in constructor to read init parameters, null value is returned. This affects latest MyFaces 2.0.0-SNAPSHOT. Mojarra 2.0 provides InitFacesContext in this case.",MYFACES-2730
"There was lots of code which was not optimized we can apply some optimization patterns to reduce the final codesize
for instance for map entried vars we can use if(bla) instead of an undefined or null check except for numerical values.
Also we can reduce some of the overly long variable names.

",MYFACES-2729
StateManagementStrategy should lookup ViewDeclarationLanguage on restoreView (does not assume possible wrapping). We pass it through a constructor param but there could be a case where it is necessary to wrapp the current vdl instance.,MYFACES-2728
"When the current view needs to be refreshed and pss is used, h:outputScript / h:outputStylesheet instances are added twice:

1.  When the view is built.
2. When the view is refreshed.

The second pass, the relocation listener is triggered by a PostAddToViewEvent activated when the created duplicate component is attached to the tree. The effect is the component is relocated, but the parent of the component is not updated, because the first call that triggers the event has precedence. So, we have one component pointed from two different locations. The first time I thought make component resource containers transient solve the problem, but this case makes clear the need to fix it.

The solution for this one is help ComponentTagHandlerDelegate to find the component at the relocated position. To do that, the plan is introduce an interface called RelocatableResourceHandler with a method called findChildByTagId, so for these components we can check the viewRoot for instances of this class.",MYFACES-2727
"The link is declared by

<h:commandLink id=""select"" action=""#{locationListManagedBean.associate}"" styleClass=""detailLink"" title=""#{messages['associate']}"">
		<t:div />
		<f:param name=""locationSelectedBean"" value=""#{location.bean}"" />
</h:commandLink>



The associated generated HTML code is valid but the \ character is not escaped :

<a href=""#"" 
onclick=""return oamSubmitForm('xnetForm','xnetForm:_idJsp30:tablelocation:2:select',null,[['locationSelectedBean','com.michelin.wrh.bo.LocationBean CAR/T1[]5%Car\m+es|']]);"" 
id=""xnetForm:_idJsp30:tablelocation:2:select"" title=""Associer"" class=""detailLink"">
<div></div>
</a>

The associated javascript method does not manage special characters !


The locationSelectedBean param retrieved from 
context.getExternalContext().getRequestParameterMap().get(""locationSelectedBean"");
has lost the ""\"" character


We can fix the issue by overwritting the {{org.apache.myfaces.shared_impl.renderkit.html.HtmlLinkRendererBase}} class and modify the following method :

 private StringBuffer addChildParameters(UIComponent component, UIComponent nestingForm)
    {
        StringBuffer params = new StringBuffer();
        params.append(""["");
        Iterator it = getChildren(component).iterator();
        do
        {
            if(!it.hasNext())
                break;
            UIComponent child = (UIComponent)it.next();
            if(child instanceof UIParameter)
            {
                String name = ((UIParameter)child).getName();
                if(name == null)
                    throw new IllegalArgumentException(""Unnamed parameter value not allowed within command link."");
                addHiddenCommandParameter(FacesContext.getCurrentInstance(), nestingForm, name);
                Object value = ((UIParameter)child).getValue();

                //FIX
                // We need to escape \ characters in generated javascript code
//                String strParamValue = value == null ? """" : value.toString();
                String strParamValue = value == null ? """" : value.toString().replace(""\\"", ""\\\\"");
                //ENDFIX
                
                if(params.length() > 1)
                    params.append("","");
                params.append(""['"");
                params.append(name);
                params.append(""','"");
                params.append(strParamValue);
                params.append(""']"");
            }
        } while(true);
        params.append(""]"");
        return params;
    }
",MYFACES-2726
,MYFACES-2725
"Currently HtmlRendererUtils.getOutcomeTargetLinkHref() only adds navigation case parameters if navigationCase.isIncludeViewParams() is true, however the rendering of view parameters must not have an impact on the navigation case parameters. A black box test of Mojarra confirmed this behavior.

This means that the following code will get a href of ""test.jsf?c=d&a=b""

<h:link value=""outcome link"" includeViewParams=""false"" outcome=""test.xhtml?c=d&a=b"" />",MYFACES-2724
"Some enhancements to the container initializer:

-changes will now ensure that if there is a conflict with any of the three mappings, the others will still be added.  
-added a check for alternate faces-config files defined by javax.faces.CONFIG_FILES context param",MYFACES-2723
"As it is currently implemented, javax.faces.validator.BeanValidator when initializing validation groups in postSetValidationGroups() can hit a CNFE.  We should check the context classloader first and then use the BeanValidator.class as a fallback. ",MYFACES-2722
"Cleanup the entire queue and xhr part so that we do not have to rely on singletons
and have an implementation specific free transport object itself, which can be plugged and
replaced for different transports.

This step is vital due to the upcoming iFrame and websocket transports.

Also the PPS part needs some cleanup, it has functionality in which is covered in a more optimized way
by our _Dom.js file (so we get an auto speedup by moving there)
",MYFACES-2721
"When page has some url parameter(s) after server-side validation error or by
default navigation JSF navigates to the page with the same viewId but without
url parameters.

IMHO the problem is the POST method submits the form to viewId's url only
instead of using url with the parameters as original url has.

This issue makes problems with bookmarking such views with params after handling
some action(minor problem) and generating proper response after action handling
based on this parameters(major problem) .

P.S. Also this issue has another side effect. When handling some action the url
parameters are unavailable.

P.P.S. The issue existed in Mojarra. The same Mojarra's issue can be found here https://javaserverfaces.dev.java.net/issues/show_bug.cgi?id=1653
And jsf forum discussion here:  http://forums.sun.com/thread.jspa?threadID=5438231",MYFACES-2720
"Looks like MyFaces ignores the url parameters within the outcome string.

F.g. 
	public String doIt(){
		
		return ""test2.xhtml?cur=33&faces-redirect=true"";
	}

Will redirect to test2.xhtml but without the cur=33 parameter. 

I successfully use this practice in Mojarra as only way to keep the url parameters after executing some action and using the PRG pattern now supported by JSF 2.0",MYFACES-2719
"h:commandButton does not take into account params when type=""button""",MYFACES-2718
"If you have two pages using <f:ajax>, both of the pages need jsf.js and furthermore it should be rendered in <h:head>. If you navigate from the first page to the second one via an action method and you do not use <c:if> or <c:forEach> on the first page, everything works fine (jsf.js is rendered in the head of the second page). However if you use <c:if> or <c:forEach> on the first page, FaceletViewDeclarationLanguage.setFilledView() will never be called and thus STANDARD_JSF_AJAX_LIBRARY_LOADED will not be removed from the FacesContext's attribute map and this means that jsf.js will NOT be rendered in the head of the second page, because the VDL thinks it has already been rendered.

However it is not a complete loss of functionality since MYFACES-2687 introduced code to render jsf.js inline, but it still is a bug.",MYFACES-2717
"The current codebase is in need of improvement, the refactoring will do following
a) Introduce a core runtime module which adds normal namespace handling, prototype based inheritance dojo style
and other core routines which are shared over all classes

b) Refactor the DomUtils and LangUtils and reassign the functions
c) Fix various bugs in the utils classes
d) Add better functions on some dom parts wherever it makes sense to cleanup the homegrown mess
e) Fix issue https://issues.apache.org/jira/browse/MYFACES-2715
 on the javascript side

",MYFACES-2716
"<h:commandLink/>
will output
<a hre=""#"" onclick=""om...""/>
not id by default.
I think it will cause ajax problem.

suggestion:
in HtmlLinkRendererBase.java
should use  HtmlRendererUtils.writeIdAndName(writer, component, facesContext);(or other stuff can add id attribute)
instead of 
HtmlRendererUtils.writeIdIfNecessary(writer, component, facesContext);

",MYFACES-2715
"Reading some blogs about jsf 2.0, I notice mojarra include an uncompressed jsf.js file and use it when development mode is used. It is difficult to debug myfaces javascript for users and I think it is worth to do it too.",MYFACES-2714
"UIRepeat.broadcast() has to push the component of the IndexedEvent target to the stack before the actual event is broadcasted on the component and remove it afterwards. This is needed because the current component (and its composite component parent) can be needed while the event is broadcasted (e.g. by LocationMethodExpression.invoke()). See also UIViewRoot._broadcastAll() for this behavior.

See also the discussion from the mailing list: http://markmail.org/message/wapxw76hwyi44jba?q=list:org.apache.myfaces.users",MYFACES-2713
"Since there is no release of codehaus javascript-maven-plugin, and we don't know when it could be one, it becomes necessary to copy the code and include it into myfaces-javascript-plugin (which has original trinidad compressor).

Fortunately, the code at codehaus is licensed with ASL  v 2.0, so we can use it without problem. In this case, we are only interested in import yuicompressor.",MYFACES-2712
"In the method Application.createComponent(FacesContext,Resource), it does not take into account that Application.createComponent(String) scan for annotations and register listeners attached to the component. At the end of the method, we have a code that scan again for annotations, duplicate them.

It was also found another bug. If it is used a wrapper for Application object, the method calls createComponent(String) directly. It should retrieve the Application instance from FacesContext and call the one of that instance, to ensure proper wrapping",MYFACES-2711
"From jsr-314-open list:

The javadoc of UIComponent.processRestoreState() says this:

""....Perform the component tree processing required by the Restore View  phase of the request processing lifecycle for all facets of this component, all children of this component, and this component itself, as follows.

    * Call the restoreState() method of this component.
    * Call pushComponentToEL(javax.faces.context.FacesContext, javax.faces.component.UIComponent).
    * Call the processRestoreState() method of all facets and children of this UIComponent in the order determined by a call to getFacetsAndChildren(). After returning from the processRestoreState() method on a child or facet, call popComponentFromEL(javax.faces.context.FacesContext)...""

The javadoc of UIComponent.processSaveState() says this:

"".....Perform the component tree processing required by the state saving portion of the Render Response phase of the request processing lifecycle for all facets of this component, all children of this component, and this component itself, as follows.

    * consult the transient property of this component. If true, just return null.
    * Call pushComponentToEL(javax.faces.context.FacesContext, javax.faces.component.UIComponent).
    * Call the processSaveState() method of all facets and children of this UIComponent in the order determined by a call to getFacetsAndChildren(), skipping children and facets that are transient. Ensure that popComponentFromEL(javax.faces.context.FacesContext) is called correctly after each child or facet.
    * Call the saveState() method of this component.
    * Encapsulate the child state and your state into a Serializable Object and return it.....""

The question is: Doesn't suppose that when you call UIComponent.getCurrentComponent() inside UIComponent.restoreState(), it returns the ""current component""?. There is one case when we need to do this call and is on the wrapper used by UIComponent.subscribeToEvent(). The javadoc of this method says this:

""....Install the listener instance referenced by argument componentListener as a listener for events of type eventClass originating from this specific instance of UIComponent. The default implementation creates an inner SystemEventListener  instance that wraps argument componentListener as the listener  argument. This inner class must call through to the argument componentListener in its implementation of SystemEventListener.processEvent(javax.faces.event.SystemEvent)  and its implementation of SystemEventListener.isListenerForSource(java.lang.Object)  must return true if the instance class of this UIComponent is assignable from the argument to isListenerForSource....""

Both myfaces and mojarra has the wrapper described by the javadoc, and that one is responsible to save/restore the system event listeners attached. To restore the ""component"" reference required, both implementations call UIComponent.getCurrentComponent() and both call processEvent but for the parent!.

It is obviously a bug (I don't see a valid reason why do the algorithm described), if you look other methods like processDecodes, you see the right pattern:

    *  If the rendered property of this UIComponent  is false, skip further processing.
    * Call pushComponentToEL(javax.faces.context.FacesContext, javax.faces.component.UIComponent).
    * Call the processDecodes() method of all facets and children of this UIComponent, in the order determined by a call to getFacetsAndChildren().
    * Call the decode() method of this component.
    * Call popComponentFromEL(javax.faces.context.FacesContext) from inside of a finally block, just before returning.
    * If a RuntimeException is thrown during decode processing, call FacesContext.renderResponse() and re-throw the exception.

I'll change myfaces algorithm to look like processDecodes(). But anyway, it is necessary to do the proper change on mojarra and on spec javadoc.

The spec issue is this:

http://javaserverfaces-spec-public.dev.java.net/issues/show_bug.cgi?id=792
",MYFACES-2710
"I review some code on myfaces builder plugin, and I saw it is possible to fix velocity loggin to use maven plugin.",MYFACES-2709
"The setAttributes response handling on the body throws accidentally an error
this happened due to wrongly placed catch blocks
",MYFACES-2708
"http://blogs.perl.org/users/clinton_gormley/2010/02/forcing-ie-to-accept-script-tags-in-innerhtml.html

enough said!

Fix is in the works, will be committed after testing on ie6 and 7 on monday.

",MYFACES-2707
"The webkit based browsers get one eval too late. The reason simply is that the code for the manual eval of embedded javascript has a bug by fetching the old element as eval part.
Firefox and IE is not affected by the bug (Firefox does auto Eval and IE touches other codeparts with their replacement code)

Fixup is in the works will be committed on monday after testing. ",MYFACES-2706
"ClassCastException in HtmlAjaxBehaviorRenderer
",MYFACES-2705
"When we have an <h:commandButton> with a nested <f:param>, the <f:param> is rendered as a hidden input with the given name and value.  This works fine except in the case where two different <h:commandButton> widgets each have an <f:param> with the same name.  The result is two hidden inputs with the same name but different values, and one of the values will win out.",MYFACES-2704
"actually they should now say JSF-2.0 in the pom.xml

We should also upgrade the shared site to http://myfaces.apache.org/shared20",MYFACES-2703
"Finally we have the documentation and one example that describes how this undocumented tag works. (Thanks to David Geary and Alexander Smirnov)

The tag attributes are this:

1) ""event"", type String. this is the name of target component event for
which behavior object will be attached.
2) ""name"", type String - the name of composite component behavior.
3) ""default"", type boolean, defines default composite component event,
same as the ""action"" is default for commandLink. There should be only
one default behavior per composite, exception will be thrown.
4) ""targets"" - the same as for all other <composite:... > tags.

I'm doing a full review of Behavior api before implement this one, and it seems this tag requires some workarounds to be done on vdl.retargetAttachedObjects. Instead using ""for"" as target, this one use a combination of ""event"" and ""name"", so at first view we need to try what happen when nested composite components are used.",MYFACES-2702
"We have an error in our implementation here, it used to work but due to the j4fry codebase integration it was moved into the currently queued request object, which is not entirely correct, this function has to work outside of any jsf.ajax.request
",MYFACES-2701
"following usecase fails
<h:form id=""a"">
<h:commandButton action=""#{TestBean.action}"" value=""submit""/>
</h:form>

<h:form>
<input type=""button"" value=""ajax ReRender"" onclick=""jsf.ajax.request(this,event,{execute:'@form',render:'a', onevent:function(data){alert(travelObjectString(data))}})""/>
</h:form>

this is a generic problem of both implementations I will investigate the problem and check if there is a way to get this up and running. The problem stems from the fact that javascript dialog frameworks manipulate the dom tree because position fixed does not work so they rely on dom shifting, which also means you have to embed a form into the dialog which when the dialog itself is ajaxed failes due to having the viewState not set properly.
",MYFACES-2700
"Checking the new Behavior api (for implement cc:clientBehavior), I note that the javadoc of UIComponent.broadcast says this:

""....Broadcast the specified FacesEvent to all registered event listeners who have expressed an interest in events of this type. Listeners are called in the order in which they were added.

If the event is an instance of BehaviorEvent and the current component is the source of the event call BehaviorEvent.getBehavior() to get the Behavior for the event. If the behavior implements ClientBehavior, call Behavior.broadcast(javax.faces.event.BehaviorEvent)}.....""

The wrong line is:

"".....If the behavior implements ClientBehavior, call Behavior.broadcast.....""

So, if a user try to create a custom Behavior, the method broadcast() will be useless, and custom behaviors will not catch events. I think it is a bug on the javadoc, so I'll correct it on myfaces.
",MYFACES-2699
"It is necessary to do the following enhancements to myfaces-builder-plugin and myfaces-builder-plugin annotations:

- Add @JSFBehavior annotation and all related code (documentation, fix all templates,....)
- Add @JSFFaceletTag ""behaviorClass"" attribute, so tag handlers could inherit properties from behaviors.
- Add @JSFProperty and @JSFJspAttribute ""faceletsOnly"" attribute, because there are components with properties only available on facelets and no custom tag handler (see custom converter and validator ""disabled"" and ""for"" property like javax.faces.validator.DoubleRangeValidator)
- Add and update some templates.
- Small doc fixes

Some changes are big, so we need to commit all changes at once on multiple branches. ",MYFACES-2698
"BeanValidation class is annotated with @FacesVallidator annotation, and it should not be.

We know that by default BeanValidation should be added to the Application object only if the param javax.faces.validator.DISABLE_DEFAULT_BEAN_VALIDATOR is set to false. So, there is no reason to use @FacesValidator, let the scanner find it and then check the property. It is better keep things simple and simplify the code on FacesConfigurator.",MYFACES-2697
"Since JSF 2.0 the Location the component is created from is stored in the component's attribute map. This information should be included in the debug page and also in exceptions, which refer a component.",MYFACES-2696
Currently there are some problems with wrong values on varStatus and incorrect saved and restored scope values (with keys specified in var and varStatus).,MYFACES-2695
...otherwise VisitContext.createVisitContext(facesContext) won't work.,MYFACES-2694
"While working on the extended debug support, I noticed that ui:repeat only visits its children once whereas it should visit them once for every value in the DataModel (somehow like UIData.visitTree()). A black box test of mojarra confirmed my thoughts.",MYFACES-2693
"Checking some stuff related to how to target scripts to <form>, the documentation of javax.faces.Form renderer says this:

""....Obtain the UIViewRoot view identifier and use it to obtain an action URL by calling ViewHandler.getActionURL. Use the action URL to obtain an encoded action URL by calling ExternalContext.encodeActionURL. Obtain an encoded partial action URL by calling ExternalContext.encodePartialActionURL using action URL as the argument. Compare the result from ExternalContext.encodePartialActionURL  with the value from ExternalContext.encodeActionURL(). If they are different, render a hidden field with the name javax.faces.encodedURL  and the value of this hidden field as the value from ExternalContext.encodePartialActionURL....""",MYFACES-2692
"Doing some stuff related to TOMAHAWK-1494, I notice that we don't have utility methods when a custom library bundle is required to be scanned after the application bundle but before the default javax.faces.Messages bundle.

So I reviewed all message api stuff we have in myfaces core, shared and tomahawk, from 1.1.x to 2.0.x, and I finally did some enhancements on all branches. This change should be done in all branches at the same time, including core and tomahawk.

It was also implemented the idea done in TOMAHAWK-1494, related to deffer the evaluation of expressions and cache them in variables. Also, I notice it is possible when it is used MessageFormat to pass non String values and there is special commands to handle them when they are integer, double, etc. Actually we assume every argument is String because all message keys used does not use this feature, but it is possible for users to do that, so we need to fix the code to allow that.",MYFACES-2691
"When using <ui:debug> on a facelet page the user can get debug info with ctrl+shift+d. This debug info is created by UIDebug.debugRequest() in FaceletVDL.createView().

UIDebug.debugRequest() calls FacesContext.responseComplete() if the request was a debug request and the information was written to the response writer. However we currently do not check that right after the call to UIDebug.debugRequest() and thus we continue with the whole RestoreView phase before we stop processing in LifecycleImpl (where FacesContext.getResponseComplete() is checked).

If we check response complete right after the call to UIDebug.debugRequest(), we can skip any further processing and thus be a lot faster here. The only thing we have to care about is that FaceletVDL.createView() will return null and thus we need some null checks (but this should happen anyway, I guess).",MYFACES-2690
"We need to identify components that are composite ones to prevent add them in facelets taglib xml file and we need to deal with properties that could contain partialStateHolder instances. Right now the template for components use stateHolder property with the semantic of partialStateHolder, but we should preserve a clear semantic.",MYFACES-2689
"because 'javax.view.id' will not be find in request.getParametersMap, the restore phase executor will stop execute.

source code:
package org.apache.myfaces.lifecycle;
.........
class RestoreViewExecutor implements PhaseExecutor
..........
  public boolean execute(FacesContext facesContext){
..................

         if (!errorPageRequest && restoreViewSupport.isPostback(facesContext)){
................
          }
...............
  }

restoreViewSupport.isPostback(facesContext) will call facesContext.getExternalContext().getRequestParameterMap().get(ResponseStateManager.VIEW_STATE_PARAM)

but  request.parameterMap is empty because of  using 'multipart/form-data'.

 restoreViewSupport.isPostback(facesContext) will return false,

then FacesContext.renderResponse() is called. the whole phasing process is stopped.



suggestion:

should wrap request.parameterMap from the first place.



",MYFACES-2688
"When attaching a ClientBehavior ( != <f:ajax>) to e.g. a <h:commandButton>, jsf.util.chain() is implicitly used by the <h:commandButton> when rendering the ClientBehavior.

However if no <f:ajax> stuff is on the current page or jsf.js is not included manually by <h:outputScript library=""javax.faces"" name=""jsf.js"" />, we will get a JavaScript error saying ""jsf is not defined"", because jsf.util.chain() is used, but jsf.js is not there!",MYFACES-2687
"Prerequisites:

My Application contains three libraries (WEB-INF/lib) where version exceeds integer boundaries:
spring-modules-cache-1.0-rc1-20060714150240.jar
spring-modules-jbpm31-0.1-20060714150320.jar
spring-modules-jcr-1.0-dev-20060714150325.jar

MANIFEST.MF (of the first one) looks like as follows:

Manifest-Version: 1.0
Ant-Version: Apache Ant 1.6.5
Created-By: 1.5.0_07-b03 (Sun Microsystems Inc.)
Implementation-Vendor: springframework.org
Implementation-Title: ${project.title}
Implementation-Version: 1.0-rc1-20060714150240

SCENARIO: If the MyFaces is being initialized on application startup, it parses meta-inf information from MANIFEST.MF of all jars in classpath. And the following exception is thrown:

SEVERE: An error occured while initializing MyFaces: java.lang.NumberFormatException: For input string: ""20060714150240""
javax.faces.FacesException: java.lang.NumberFormatException: For input string: ""20060714150240""
	at org.apache.myfaces.config.FacesConfigurator.logMetaInf(FacesConfigurator.java:653)
	at org.apache.myfaces.config.FacesConfigurator.configure(FacesConfigurator.java:510)
	at org.apache.myfaces.webapp.AbstractFacesInitializer.buildConfiguration(AbstractFacesInitializer.java:243)
	at org.apache.myfaces.webapp.Jsp21FacesInitializer.initContainerIntegration(Jsp21FacesInitializer.java:73)
	at org.apache.myfaces.webapp.AbstractFacesInitializer.initFaces(AbstractFacesInitializer.java:113)
	at org.apache.myfaces.webapp.StartupServletContextListener.initFaces(StartupServletContextListener.java:186)
	at org.apache.myfaces.webapp.StartupServletContextListener.contextInitialized(StartupServletContextListener.java:159)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:3972)
	at org.apache.catalina.core.StandardContext.start(StandardContext.java:4467)
	at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:791)
	at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:771)
	at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:546)
	at org.apache.catalina.startup.HostConfig.deployDescriptor(HostConfig.java:637)
	at org.apache.catalina.startup.HostConfig.deployDescriptors(HostConfig.java:563)
	at org.apache.catalina.startup.HostConfig.deployApps(HostConfig.java:498)
	at org.apache.catalina.startup.HostConfig.start(HostConfig.java:1277)
	at org.apache.catalina.startup.HostConfig.lifecycleEvent(HostConfig.java:321)
	at org.apache.catalina.util.LifecycleSupport.fireLifecycleEvent(LifecycleSupport.java:119)
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1053)
	at org.apache.catalina.core.StandardHost.start(StandardHost.java:785)
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1045)
	at org.apache.catalina.core.StandardEngine.start(StandardEngine.java:443)
	at org.apache.catalina.core.StandardService.start(StandardService.java:519)
	at org.apache.catalina.core.StandardServer.start(StandardServer.java:710)
	at org.apache.catalina.startup.Catalina.start(Catalina.java:581)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:289)
	at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:414)
Caused by: java.lang.NumberFormatException: For input string: ""20060714150240""
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:48)
	at java.lang.Integer.parseInt(Integer.java:461)
	at java.lang.Integer.valueOf(Integer.java:554)
	at org.apache.myfaces.config.FacesConfigurator$Version.<init>(FacesConfigurator.java:2492)
	at org.apache.myfaces.config.FacesConfigurator.logMetaInf(FacesConfigurator.java:592)
	... 30 more



",MYFACES-2686
"Looking some jsf 2.0 code, I notice the current algorithm of  UIData.invokeOnComponent cannot handle the case when the target is a UIColumn instance and no rowIndex is on clientId. Is that ok?

Checking the new visit tree api, UIData.visitTree cleary says:

""....If this component has children, for each UIColumn child:

Call VisitContext.invokeVisitCallback(javax.faces.component.UIComponent, javax.faces.component.visit.VisitCallback) on that UIColumn instance. If such a call returns true, terminate visiting and return true from this method.

If the child UIColumn has facets, call UIComponent.visitTree(javax.faces.component.visit.VisitContext, javax.faces.component.visit.VisitCallback) on each one.....""

I think we should do something like this:

                for (Iterator<UIComponent> itChildren = this.getChildren().iterator();
                        !returnValue && itChildren.hasNext();)
                {
                    UIComponent child = itChildren.next();
                    if (child instanceof UIColumn && clientId.equals(child.getClientId()))
                    {
                        try {
                            callback.invokeContextCallback(context, child);
                        } catch (Exception e) {
                            throw new FacesException(e);
                        }
                        returnValue = true;
                    }
                    // process the child's facets
                    for (Iterator<UIComponent> itChildFacets = child.getFacets().values().iterator();
                            !returnValue && itChildFacets.hasNext();)
                    {
                        //recursive call to find the component
                        returnValue = itChildFacets.next().invokeOnComponent(context, clientId, callback);
                    }
                }

We can commit this one because this is really a defect-fix, not an incomplicant feature.
",MYFACES-2685
"UIComponentBase.saveAttachedState needs a null check when a List object is saved. Elements that implements StateHolder and are transient just return null, so if we save a list like facesListeners, we end adding null values to the List.",MYFACES-2684
"At the end of DefaultFaceletsStateManagementStrategy.restoreView we do this call:

view.visitTree(VisitContext.createVisitContext(context), new RestoreStateCallback());

This one propagates PostRestoreStateEvent, that triggers set binding property on all beans (see UIComponent.processEvent).

An possible use case in jsf 1.1 and jsf 1.2 is add additional components to the tree on that event. Long time ago, that was an implementation detail but now it was standarized. Right now with pss disabled everything works fine but with pss enabled that use case does not work.

The reason why this is not working is we use a listener attached to PostAddToViewEvent / PreRemoveFromViewEvent to keep track of programatically added / removed components. Since RestoreViewExecutor disable event processing on restore view, PostAddPreRemoveFromViewListener just don't receive the events and all added components are just skipped.

This does not happen with pss disabled because we don't rely there of some kind of Listener to keep track of changes on component tree, we just save the whole tree and that's it.

A similar problem we have on the same method (see vdl.buildView):

                // TODO: Why is necessary enable event processing?
                // ANS: On RestoreViewExecutor, setProcessingEvents is called first to false
                // and then to true when postback. Since we need listeners registered to PostAddToViewEvent
                // event to be handled, we should enable it again. We are waiting a response from EG about
                // the behavior of those listeners, because for partial state saving we need this listeners
                // be called from here and relocate components properly, but for now we have to let this code as is.
                try 
                {
                    context.setProcessingEvents (true);
                    vdl.buildView (context, view);

I think it is better to enable it in this case",MYFACES-2683
"ResourceHandler wrappers that does not implement handleResourceRequest not work correctly, because this method is calling createResource of ResourceHandlerImpl",MYFACES-2682
We have a duplicate rule that cause every ResourceHandler to be loaded twice. ,MYFACES-2681
"Discussing some extval stuff, it was found myfaces always try to retrieve the renderkit factory to get the current renderkit, ignoring the method FacesContext.getRenderKit().

FacesContext implementation cache a renderkit factory instance and on that place we could cache the current renderkit too. Doing some tests with extval on mojarra we discover that it creates very few instances (between 2 to 4) and myfaces creates many of them, because extval renderkit create wrappers over and over and myfaces does not cache them.

In theory, the renderkit instance used is per view, so in a single request it is expected this instance changes by most twice. I think we should commit this change on all branches (1.1.x, 1.2.x and 2.0.x).",MYFACES-2680
FacesCompositeELResolver uses Scope.class.getName(). I think it is better to use a public constant on a field.,MYFACES-2679
"Depending on how navigation cases are ordered, we may select an incorrect navigation case.",MYFACES-2678
"CompositeComponentAttributesMapWrapper contains some parts that rely on cc.getAttributes().get() returning a ValueExpression, but this is not possible anymore because of the changes from MYFACES-2633.",MYFACES-2677
"now that we have the tree-visiting in place, we can do both:

- first write out the component-tree master, with only expressions in place (see MYFACES-2667)
- second we write out the tree how it is really evaluated by the components, with the real component values

the more debugging information, the better!",MYFACES-2676
"The code committed in MYFACES-2633 causes Bean-Validation to stop working on composite components, because the BeanValidator can't access the actual ValueExpression anymore, because it is not on the component's attribute map.

In MYFACES-2622 I committed code that handled CompositeComponentExpressionHolder correctly on the BeanValidator. After this commit BeanValidation worked well for composite components. Last week I stumbled upon this again and noticed it was not working anymore. As mentioned before, the code committed in MYFACES-2633 causes this problem.",MYFACES-2675
"in web.xml have the following ctx param:

<context-param>
    <param-name>org.apache.myfaces.annotation.SCAN_PACKAGES</param-name>
    <param-value>net.wessendorf</param-value>
</context-param>

but if this package does not exist, you'll notice this:
Caused by: java.lang.ClassNotFoundException: No resource for net/wessendorf
	at org.apache.myfaces.config.annotation._PackageInfo.getClasses(_PackageInfo.java:102)
	at org.apache.myfaces.config.annotation.AnnotationConfigurator.packageClasses(AnnotationConfigurator.java:332)
	at org.apache.myfaces.config.annotation.AnnotationConfigurator.configure(AnnotationConfigurator.java:186)
	... 17 more

",MYFACES-2674
"The new ClassloaderUtils class in shared is missing some java2 security checks when getting the context classloader.  

Will also resolve an additional area where we've seen java2 security problems in the past with the annotation lifecycle providers with this issue.

Will refactor the ClassUtils.getContextClassloader method to call into the ClassloaderUtils method of the same name to avoid dual code maintenance.  leaving the original method in ClassUtils in place however in case any other projects utilize it.  ",MYFACES-2673
"Actually we have a code on UIComponentBase.wrapBehaviorsMap() that each time it is called it returns a Collections.unmodifiableMap(_behaviorsMap). I think we can use a transient variable here to hold the resulting instance, and each time it is called return it. Collections.unmodifiableMap is just a wrapper of the real one, so we can cache it safely here. UIComponentBase.getClientBehaviors could be called many times for the same component when it is rendered. I think it is worth to do it.",MYFACES-2672
"The change to CompositeComponentRule committed by MYFACES-2633 actually does break the ezcomp RI sample.  Specifically, in the spinner example it is causing the last value submitted to not be updated when you click the reload button.  It has reverted to the same behavior that was fixed by MYFACES-2340.  

I did some playing around, and it seems that both adding the ValueExpression directly to the map AND calling instance.setValueExpression() seems to resolve both cases.  
      ((UIComponent) instance).getAttributes().put(_name, _attr.getValueExpression(ctx, _type));  //right now this first line is commented out
       ((UIComponent) instance).setValueExpression(_name, _attr.getValueExpression(ctx, _type));

As far as I can tell, I haven't seen any repercussions to leaving both calls in place, but it feels like there should be a more elegant solution.   I'll leave this open for discussion for a few days in case someone has another idea for a resolution before I check in the change.   

In the meantime, I'll do some additional testing to make sure there aren't any side affects of making both calls.  ",MYFACES-2671
"We have the following algorithm to remove components programatically on PSS:

                List<String> clientIdsRemoved = getClientIdsRemoved(view);
                
                if (clientIdsRemoved != null)
                {
                    for (String clientId : clientIdsRemoved)
                    {
                        view.invokeOnComponent(context, clientId, new ContextCallback()
                            {
                                public void invokeContextCallback(FacesContext context,
                                        UIComponent target)
                                {
                                    if (target.getParent() != null)
                                    {
                                        target.getParent().getChildren().remove(target);
                                    }
                                }
                            });
                    }
                }

It is possible have a child on a facet, so that code will not work on that case. The code must take into account that scenario and if no child is removed, try to locate and remove from facets map",MYFACES-2670
"Checking some stuff related to PSS, I found we are building a regular expression to check if a clientId contains a row id or not without take into account UINamingContainer.getSeparatorChar method.",MYFACES-2669
"Calling startElement() currently resets _isScript in HtmlResponseWriterImpl, thus the rendering of any component inside a script section (which most likely calls startElement()) does not work correclty, because the information that we currently are inside a script gets lost and thus the comment-end is not written at the end of the script.

Normally we would not think of rendering a component inside a script section, but PrimeFaces does it in its DataTable with columnFilter and I guess it is totally ok to do that.

Here is the related thread from the mailing list: http://www.junlu.com/list/43/621770.html",MYFACES-2668
"When using <ui:debug /> on a page, it creates a String version of the current component tree to show it in the debug output window (opens by hitting ctrl + shift + D in the browser).

While creating this component tree, ui:debug wants to display every property of every component in the tree using the class' PropertyDescriptors. However there are some problems with this solution related to components that publish values in the RequestMap while the real tree is processed (rendered) like e.g. ui:repeat or h:dataTable (mostly those with a ""var"" attribute). Every child component of such a component, which refers to this value, will cause EL operations with invalid parameters (null or empty String) when its getters are called. See the related thread on the mailing list to this problem: http://www.mail-archive.com/users@myfaces.apache.org/msg55485.html

In addition, properties with values of Collection, Map or Iterator are not included in the debug output, only those with ""real"" values (like true, false, 1234) are included. Also I don't think that it makes much sence to include all real values in the debug component tree, because what should we display for components that render their children a couple of times like h:dataTable? ...and depend on values of their parent which are published somewhere else?

To visualize the problem a bit more, see the following facelet page:

<ui:repeat var=""master"" value=""#{myBean.masterList}"">
    <h:dataTable var=""detail"" value=""#{myBean.getDetailList(master)}"">
        <h:column>
            <h:outputText value=""#{detail}"" />
        </h:column>
    </h:dataTable>
</ui:repeat>

The debug output for this one looks something like this:

    <UIRepeat id=""j_id2114509110_7e08d943"" inView=""true"" offset=""0"" rendered=""true"" size=""-1"" step=""1"" transient=""false"" var=""master"">

        <HtmlDataTable border=""-2147483648"" first=""0"" id=""j_id2114509110_7e08d9b9"" inView=""true"" rendered=""true"" rowIndex=""-1"" rows=""0"" transient=""false"" var=""detail"">

            <UIColumn id=""j_id2114509110_7e08d99f"" inView=""true"" rendered=""true"" transient=""false"">

                <HtmlOutputText escape=""true"" id=""j_id2114509110_7e08d9f5"" inView=""true"" rendered=""true"" transient=""false""/>

            </UIColumn>

        </HtmlDataTable>

    </UIRepeat>

I personally think that it would be much better not to evaluate the ValueExpressions, but to include the properties with the expression String in the component tree, like you see here:

    <UIRepeat id=""j_id2114509110_7e08d943"" inView=""true"" offset=""0"" rendered=""true"" size=""-1"" step=""1"" transient=""false"" value=""#{myBean.masterList}"" var=""master"">

        <HtmlDataTable border=""-2147483648"" first=""0"" id=""j_id2114509110_7e08d9b9"" inView=""true"" rendered=""true"" rowIndex=""-1"" rows=""0"" transient=""false"" value=""#{myBean.getDetailList(master)}"" var=""detail"">

            <UIColumn id=""j_id2114509110_7e08d99f"" inView=""true"" rendered=""true"" transient=""false"">

                <HtmlOutputText escape=""true"" id=""j_id2114509110_7e08d9f5"" inView=""true"" rendered=""true"" transient=""false"" value=""#{detail}""/>

            </UIColumn>

        </HtmlDataTable>

    </UIRepeat>

This will solve the problem the user has experienced and will also create a much better debug output.",MYFACES-2667
"Running ""pprDemos.jspx"" page and triggering any ajax action, we see a full-page-refresh
(tested with TRUNK of MyFaces2)

Check out Trinidad trunk and change the pom.xml to take myfaces => 2.0.1-SNAPSHOT instead of the beta-3

go to trinidad-examples/trinidad-demo and trigger ""mvn clean jetty:run -PjettyConfig""

Now point a browser to this URL:

http://localhost:8080/trinidad-demo/faces/demos/pprDemos.jspx",MYFACES-2666
"Attached demo project shows ViewHandler wrapper based on JSF 1.2 that prevents JSP pages rendering in back-compatibility mode. View structure is just not being built, because calls to VDL doesn't happen. Mojarra works (activate ""jsfri"" Maven profile to check).",MYFACES-2665
"According to the javadoc for FacesContext.getViewRoot():

It is valid to call this method during application startup or shutdown. If called during application startup or shutdown, this method returns a new UIViewRoot with its locale set to Locale.getDefault().",MYFACES-2664
"When I have a null value in an <f:param value=""#{expr.that.evaluates.to.null}"" /> tag, I get the following NPE when rendering:

java.lang.NullPointerException
	at org.apache.myfaces.shared_impl.renderkit.html.HtmlRendererUtils.getOutcomeTargetLinkHref(HtmlRendererUtils.java:1883)
	at org.apache.myfaces.shared_impl.renderkit.html.HtmlLinkRendererBase.renderOutcomeLinkStart(HtmlLinkRendererBase.java:742)
	at org.apache.myfaces.shared_impl.renderkit.html.HtmlLinkRendererBase.encodeBegin(HtmlLinkRendererBase.java:123)
	at javax.faces.component.UIComponentBase.encodeBegin(UIComponentBase.java:430)
	at javax.faces.component.UIComponent.encodeAll(UIComponent.java:605)
	at javax.faces.component.UIComponent.encodeAll(UIComponent.java:614)
	at javax.faces.component.UIComponent.encodeAll(UIComponent.java:614)
	at org.apache.myfaces.view.facelets.FaceletViewDeclarationLanguage.renderView(FaceletViewDeclarationLanguage.java:1117)
	at org.apache.myfaces.application.ViewHandlerImpl.renderView(ViewHandlerImpl.java:231)
	at org.apache.myfaces.lifecycle.RenderResponseExecutor.execute(RenderResponseExecutor.java:122)
	at org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:207)
	at org.apache.myfaces.extensions.scripting.jsf.dynamicdecorators.implemetations.LifefcycleProxy.render(LifefcycleProxy.java:74)
	at javax.faces.webapp.FacesServlet.service(FacesServlet.java:191)
	at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:502)

I don't know what the spec says or what Mojarra does, but I think we should at least do better than a NPE, for example appending an empty string to the parameter list...

Any ideas?",MYFACES-2663
"We use the following PhaseListener to setup view handler: http://anonsvn.jboss.org/repos/richfaces/branches/community/3.3.X/framework/impl/src/main/java/org/ajax4jsf/event/InitPhaseListener.java.
When it's called on RESTORE_VIEW phase of the very first request, IllegalStateException is thrown.",MYFACES-2662
"Doing some tests between myfaces core and orchestra I found that when h:link is rendered, the conversationContext param is rendered multiple times. It has two reasons:

1. It is called ExternalContext.encodeResourceURL from the rendered, but before it was called ViewHandler.getBookmarkableURL (on HtmlRendererUtils.getOutcomeTargetLinkHref). We need to remove the call to encodeResourceURL, because it is not necessary.
2. ExternalContext.encodeBookmarkableURL call _httpServletResponse.encodeURL and it should not. The reason is ViewHandler.getBookmarkableURL do this task calling ExternalContext.encodeActionURL.

I think this one has enough importance to be included in 2.0.0 release, so I'll regenerate all artifacts to include this one. Note this effect is only detected when myfaces core and orchestra are used together, because orchestra override HttpServletResponse.encodeURL to add his conversationContext param.",MYFACES-2661
"It seems we forget to redirect some base classes to its counterparts in api, because some of them are not used directly by facelets code. Really it is just one or two missing lines but we need to get this done before release. 

I did a full review of every facelet class and it was found that:

org.apache.myfaces.view.facelets.tag.jsf.core.AttributeHandler

does not implements the interface:

javax.faces.view.facelets.AttributeHandler

And it should be.",MYFACES-2660
"in IMPL we have this interface:
https://svn.apache.org/repos/asf/myfaces/core/trunk/impl/src/main/java/org/apache/myfaces/view/facelets/tag/TagDecorator.java

However it has been promoted to be an API:
https://svn.apache.org/repos/asf/myfaces/core/trunk/api/src/main/java/javax/faces/view/facelets/TagDecorator.java

the IMPL one is used in these classes:

core/impl/src/main/java/org/apache/myfaces/view/facelets/FaceletViewHandler.java
core/impl/src/main/java/org/apache/myfaces/view/facelets/FaceletViewDeclarationLanguage.java
core/impl/src/main/java/org/apache/myfaces/view/facelets/compiler/CompilationManager.java
core/impl/src/main/java/org/apache/myfaces/view/facelets/compiler/Compiler.java
core/impl/src/main/java/org/apache/myfaces/view/facelets/tag/jsf/html/HtmlDecorator.java
core/impl/src/main/java/org/apache/myfaces/view/facelets/tag/CompositeTagDecorator.java

and this ""dependency"" leeds to problems like:


SEVERE: Error Loading decorator: oracle.adfinternal.view.faces.facelets.rich.AdfTagDecorator
java.lang.ClassCastException: oracle.adfinternal.view.faces.facelets.rich.AdfTagDecorator cannot be cast to org.apache.myfaces.view.facelets.tag.TagDecorator
	at org.apache.myfaces.view.facelets.FaceletViewDeclarationLanguage.loadDecorators(FaceletViewDeclarationLanguage.java:1645)
	at org.apache.myfaces.view.facelets.FaceletViewDeclarationLanguage.createCompiler(FaceletViewDeclarationLanguage.java:1286)
	at org.apache.myfaces.view.facelets.FaceletViewDeclarationLanguage.initialize(FaceletViewDeclarationLanguage.java:1617)
	at org.apache.myfaces.view.facelets.FaceletViewDeclarationLanguage.<init>(FaceletViewDeclarationLanguage.java:238)
	at org.apache.myfaces.view.facelets.FaceletViewDeclarationLanguageStrategy.<init>(FaceletViewDeclarationLanguageStrategy.java:52)
	at org.apache.myfaces.view.ViewDeclarationLanguageFactoryImpl.initialize(ViewDeclarationLanguageFactoryImpl.java:106)
	at org.apache.myfaces.view.ViewDeclarationLanguageFactoryImpl.getViewDeclarationLanguage(ViewDeclarationLanguageFactoryImpl.java:79)
	at org.apache.myfaces.trinidadinternal.application.ViewDeclarationLanguageFactoryImpl.getViewDeclarationLanguage(ViewDeclarationLanguageFactoryImpl.java:77)
	at org.apache.myfaces.application.ViewHandlerImpl.getViewDeclarationLanguage(ViewHandlerImpl.java:136)",MYFACES-2659
"when running on JSP(X) and using (by accident) some ""facelets only tags"", like ""outputScript"", you get (correctly) an error.


However the error is ugly and (on first hand) not really meaningful:

SEVERE: An exception occurred
javax.faces.FacesException: org.apache.jasper.JasperException: PWC6143: No tag ""outputScript"" defined in tag library associated with uri ""http://java.sun.com/jsf/html""
	at org.apache.myfaces.shared_impl.context.ExceptionHandlerImpl.wrap(ExceptionHandlerImpl.java:241)
	at org.apache.myfaces.shared_impl.context.ExceptionHandlerImpl.handle(ExceptionHandlerImpl.java:156)
	at org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:222)
	at javax.faces.webapp.FacesServlet.service(FacesServlet.java:191)
	at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:511)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1166)
	at org.apache.myfaces.trinidadinternal.webapp.TrinidadFilterImpl._doFilterImpl(TrinidadFilterImpl.java:247)
	at org.apache.myfaces.trinidadinternal.webapp.TrinidadFilterImpl.doFilter(TrinidadFilterImpl.java:157)
	at org.apache.myfaces.trinidad.webapp.TrinidadFilter.doFilter(TrinidadFilter.java:92)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1157)
	at org.apache.myfaces.trinidaddemo.webapp.RedirectFilter.doFilter(RedirectFilter.java:97)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1157)
	at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:388)
	at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)
	at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:182)
	at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:765)
	at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:418)
	at org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:230)
	at org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)
	at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)
	at org.mortbay.jetty.Server.handle(Server.java:326)
	at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:536)
	at org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:915)
	at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:539)
	at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:212)
	at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:405)
	at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:409)
	at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:582)
Caused by: org.apache.jasper.JasperException: PWC6143: No tag ""outputScript"" defined in tag library associated with uri ""http://java.sun.com/jsf/html""
	at org.apache.jasper.compiler.DefaultErrorHandler.jspError(DefaultErrorHandler.java:89)
	at org.apache.jasper.compiler.ErrorDispatcher.dispatch(ErrorDispatcher.java:375)
	at org.apache.jasper.compiler.ErrorDispatcher.jspError(ErrorDispatcher.java:210)
	at org.apache.jasper.compiler.JspDocumentParser.parse(JspDocumentParser.java:260)
	at org.apache.jasper.compiler.ParserController.doParse(ParserController.java:224)
	at org.apache.jasper.compiler.ParserController.parse(ParserController.java:140)
	at org.apache.jasper.compiler.Compiler.generateJava(Compiler.java:199)
	at org.apache.jasper.compiler.Compiler.compile(Compiler.java:435)
	at org.apache.jasper.JspCompilationContext.compile(JspCompilationContext.java:608)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:360)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:486)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:380)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:820)
	at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:511)
	at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:390)
	at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)
	at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:182)
	at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:765)
	at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:418)
	at org.mortbay.jetty.servlet.Dispatcher.forward(Dispatcher.java:327)
	at org.mortbay.jetty.servlet.Dispatcher.forward(Dispatcher.java:126)
	at org.apache.myfaces.context.servlet.ServletExternalContextImpl.dispatch(ServletExternalContextImpl.java:438)
	at javax.faces.context.ExternalContextWrapper.dispatch(ExternalContextWrapper.java:68)
	at javax.faces.context.ExternalContextWrapper.dispatch(ExternalContextWrapper.java:68)
	at org.apache.myfaces.trinidadinternal.context.FacesContextFactoryImpl$OverrideDispatch.dispatch(FacesContextFactoryImpl.java:271)
	at org.apache.myfaces.view.jsp.JspViewDeclarationLanguage.buildView(JspViewDeclarationLanguage.java:101)
	at org.apache.myfaces.lifecycle.RenderResponseExecutor.execute(RenderResponseExecutor.java:103)
	at org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:207)
	... 25 more
Caused by: org.xml.sax.SAXException: PWC6143: No tag ""outputScript"" defined in tag library associated with uri ""http://java.sun.com/jsf/html""
	at org.apache.jasper.compiler.JspDocumentParser.parseCustomAction(JspDocumentParser.java:1199)
	at org.apache.jasper.compiler.JspDocumentParser.startElement(JspDocumentParser.java:445)
	at com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.startElement(AbstractSAXParser.java:501)
	at com.sun.org.apache.xerces.internal.parsers.AbstractXMLDocumentParser.emptyElement(AbstractXMLDocumentParser.java:179)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.scanStartElement(XMLNSDocumentScannerImpl.java:377)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:2747)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:648)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.next(XMLNSDocumentScannerImpl.java:140)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:510)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:807)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:737)
	at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:107)
	at com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.parse(AbstractSAXParser.java:1205)
	at com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser.parse(SAXParserImpl.java:522)
	at javax.xml.parsers.SAXParser.parse(SAXParser.java:395)
	at org.apache.jasper.compiler.JspDocumentParser.parse(JspDocumentParser.java:219)
	... 49 more
",MYFACES-2658
"Currently we do StringUtils.replace(userEventCode, '\'', ""\\'""); for escaping purposes, but this breaks when apostrophes in JavaScript code are already escaped, because they get double-escaped.",MYFACES-2657
"Checking some stuff, I found myfaces code are not using UINamingContainer.getSeparatorChar, and we should do it.",MYFACES-2656
"There are a couple of MockXXX classes in MyFaces core trunk and MyFaces shared 4.0.x. The right place to put them is MyFaces Test, so they should be moved.",MYFACES-2655
"run the demo (like via Jetty):

Go to ""http://localhost:8080/trinidad-demo/faces/demos/pprDemos.jspx""

on any ""ajax"" action/click, I get these two alert() boxes:
* ""TypeError: this._ajaxOldDomElements is null""
* ""malformedXML--""

Same stuff works with Mojarra 2.0.2",MYFACES-2654
" It was notice when myfaces core 2.0.0-beta-3 was deployed, implee6 code was not added. We need to do some other stuff with that pom like allow use this command:

mvn clean install site -Pgenerate-site -Pgenerate-tlddoc

mvn clean install -Pgenerate-tlddoc -Pgenerate-assembly

to generate proper artifacts, and generate an specific facelets-tlddoc.jar file.",MYFACES-2653
"When it was released myfaces master pom v7, some dependencies were updated, specially maven site plugin and maven surefire report.

Use the newer versions usually causes a lot of problems, specifically with myfaces-impl. It is very important before update this dependencies check if everything runs fine, because it is common have this kind of problems and it takes a lot of time and effort find and solve them.

That's the reason why update to latest maven version is not a good idea (I'm still using 2.0.10 at april 2010). It seems we have to wait a little bit more time to see this kind of problems solved.

The solution is update myfaces core pom.xml to use the older versions instead.

        <plugin>
          <artifactId>maven-site-plugin</artifactId>
          <version>2.0-beta-6</version>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.3.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-report-plugin</artifactId>
          <version>2.3.1</version>
        </plugin>",MYFACES-2652
"If a page has no h:head and contains a f:ajax we omit the jsf.js script resource

example:

<!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Transitional//EN""
        ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"">
<html xmlns=""http://www.w3.org/1999/xhtml""
      xmlns:f=""http://java.sun.com/jsf/core""
      xmlns:h=""http://java.sun.com/jsf/html""
      xmlns:ui=""http://java.sun.com/jsf/facelets"">
	<h:body>
		<h:form id=""myForm"">
	    	<h:inputText id=""myTest1"" value=""#{myBean.test}"">
				<f:ajax render=""myTest2"" />
	    	</h:inputText>
			<h:inputText value=""#{myBean.test}"" id=""myTest2"" />
		</h:form>
	</h:body>
</html>",MYFACES-2651
"combining onchange=""alert('test') and <f:ajax render=""myTest2"" /> creates ""missing ) after argument list"" when onchagne is triggered

example:

<!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Transitional//EN""
        ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"">
<html xmlns=""http://www.w3.org/1999/xhtml""
      xmlns:f=""http://java.sun.com/jsf/core""
      xmlns:h=""http://java.sun.com/jsf/html""
      xmlns:ui=""http://java.sun.com/jsf/facelets"">
	<h:head></h:head>
	<h:body>
		<h:form id=""myForm"">
	    	<h:inputText id=""myTest1"" value=""#{myBean.test}"" onchange=""alert('test')"">
				<f:ajax render=""myTest2"" />
	    	</h:inputText>
			<h:inputText value=""#{myBean.test}"" id=""myTest2"" />
		</h:form>
	</h:body>
</html>",MYFACES-2650
"If an ajaxified input has got onchange="""" defined and a script triggers input.onchange() we get an error: ""event must be defined or null""

example:

<!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Transitional//EN""
        ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"">
<html xmlns=""http://www.w3.org/1999/xhtml""
      xmlns:f=""http://java.sun.com/jsf/core""
      xmlns:h=""http://java.sun.com/jsf/html""
      xmlns:ui=""http://java.sun.com/jsf/facelets"">
	<h:head></h:head>
	<h:body>
		<h:form id=""myForm"">
	    		<h:inputText id=""myTest1"" value=""#{myBean.test}"" onchange="""">
				<f:ajax render=""myTest2"" />
	    		</h:inputText>
			<h:inputText value=""#{myBean.test}"" id=""myTest2"" />
			<script type=""text/javascript"">
				//<![CDATA[
					document.getElementById(""myForm:myTest1"").onchange();
				//]]>
			</script>
		</h:form>
	</h:body>
</html>",MYFACES-2649
"This class is not needed anymore, because of the changes applied in MYFACES-2396.",MYFACES-2648
"MyFacesContainerInitializer.isDelegatedFacesServlet does not check for a null class name, which can happen when a JSP is mapped to a servlet.",MYFACES-2647
"We should have a unit test that covers the new createComp() function:

=> createComponent(FacesContext context, Resource componentResource)",MYFACES-2646
"UIViewParameter calls setSubmittedValue() in encodeAll() to store the current value of the view parameter in the state as the submitted value (this helps UIViewParameter to restore its value on a postback). UIViewParameter.encodeAll() itself is called by UIViewRoot.encodeEnd() for every UIViewParameter in the view.

If the current request is an ajax-request, the view state is currently already generated in UIViewRoot.encodeChildren() (before UIViewRoot.encodeEnd()). At this time the submitted value for every UIViewParameter is null, because its encodeAll()-method was not called yet.

Later, when UIViewRoot.encodeEnd() is called, UIViewParameter.encodeAll() is called and it sets the submitted value correctly, but due to the fact that the state has already been generated, these changes are dropped.

This causes the value of every UIViewParameter to be set to null in the next request, which will most likely end in validation problems with the required validator.

The related thread to this issue from the mailing list can be found at: http://www.junlu.com/list/43/611590.html",MYFACES-2645
,MYFACES-2644
,MYFACES-2643
"jsf.ajax.request(this, event,{render:'clientids'}) , the 'clientids' have to give the full client id. this is bad when i dont want to give h:form or other name container  a specific id on the page side.

please fix it.

there should be a fuzzy search for closest component. but I think PartialViewContextImpl is not design for this, it will take some time to refactoring the java codes. I will change the jsf.js to work around this thing.

Mark.

",MYFACES-2642
"When the current VDL is FaceletViewDeclarationLanguage, the ViewMetadata impl for facelets (FaceletViewMetadata) is used to create the view the following way in RestoreViewExecutor:

viewRoot = metadata.createMetadataView(facesContext);

The method createMetadataView() then directly invokes createView() in the surrounding class (FaceletViewDeclarationLanguage) to create the view. This works for most cases, because normally when using FaceletViewMetadata as the ViewMetadata impl, FaceletViewDeclarationLanguage will be the VDL and the default ViewHandler implementation only redirects the call to createView() to the right VDL.

However in Trinidad's AJAX branch (jsf2_ajax.3) another ViewHandler implementation is used (org.apache.myfaces.trinidadinternal.application.ViewHandlerImpl), which does some work before calling createView() on the right VDL. This work is storing the last modified date of the accessed file to discover any modifications of it.

If we now not call createView() on Trinidad's ViewHandler impl but directly on the FaceletVDL, this work will not happen and the last modified date will not be available for the next request. So the next request, which will be a postback to this view, has no last modified information about the requested view and thus it will throw a ViewExpiredException like this one:

javax.faces.application.ViewExpiredException: /index.jspxNo saved view
state could be found for the view identifier: /index.jspx
       at org.apache.myfaces.lifecycle.RestoreViewExecutor.execute(RestoreViewExecutor.java:114)
       at org.apache.myfaces.lifecycle.LifecycleImpl.executePhase(LifecycleImpl.java:138)
       at org.apache.myfaces.lifecycle.LifecycleImpl.execute(LifecycleImpl.java:88)
       at javax.faces.webapp.FacesServlet.service(FacesServlet.java:189)
       at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:511)
       at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1166)
       at org.apache.myfaces.trinidadinternal.webapp.TrinidadFilterImpl._doFilterImpl(TrinidadFilterImpl.java:247)
       at org.apache.myfaces.trinidadinternal.webapp.TrinidadFilterImpl.doFilter(TrinidadFilterImpl.java:157)
       at org.apache.myfaces.trinidad.webapp.TrinidadFilter.doFilter(TrinidadFilter.java:92)
       at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1157)
       at org.apache.myfaces.trinidaddemo.webapp.RedirectFilter.doFilter(RedirectFilter.java:97)
       at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1157)
       at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:388)
       at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)
       at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:182)
       at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:765)
       at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:418)
       at org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:230)
       at org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)
       at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)
       at org.mortbay.jetty.Server.handle(Server.java:326)
       at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:536)
       at org.mortbay.jetty.HttpConnection$RequestHandler.content(HttpConnection.java:930)
       at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:747)
       at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:218)
       at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:405)
       at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:409)
       at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:582)

The related thread to this issue from the mailing list can be found here: http://www.mail-archive.com/dev@myfaces.apache.org/msg44985.html
",MYFACES-2641
"after ajax submit, jsf.js will re-render some element depending on jsf.ajax.request({render:"" some elements ""});
but this js code will cause some problem.

jsf.js:

myfaces._impl._util._Utils.replaceHtmlItem = function (request, context, itemIdToReplace, newTag, form) {
......
                    var fragment = range.createContextualFragment(newTag);
                    evalNode = item.parentNode.replaceChild(fragment, item)
.....
}

sometime fragment will has more than one childNodes, or the childNode not has clientId, but the childNode of childNode has clientId.

this will cause html unstable.

Please fix it.


this is my suggestion:

myfaces._impl._util._Utils.replaceHtmlItem = function (request, context, itemIdToReplace, newTag, form) {

           .............
              Orginal:
                    var fragment = range.createContextualFragment(newTag);
                    evalNode = item.parentNode.replaceChild(fragment, item)

              fix:
                    var fragment = range.createContextualFragment(newTag);
                    var replaceItem = myfaces._impl._util._Utils.findHtmlItemFromFragment(fragment, itemIdToReplace);
                    if(replaceItem == null)replaceItem = fragment;
                    evalNode = item.parentNode.replaceChild(replaceItem, item)
       ..................
}




    myfaces._impl._util._Utils.findHtmlItemFromFragment = function(fragment, itemId){
    	if(fragment.childNodes == null)
    		return null;
    	for(var i = 0; i < fragment.childNodes.length ; i++ ){
    		var c = fragment.childNodes[i];
    		if(c.id == itemId)
    			return c;
    	}
    	for(var i = 0; i < fragment.childNodes.length ; i++ ){
    		var c = fragment.childNodes[i];
    		var item = myfaces._impl._util._Utils.findHtmlItemFromFragment(c, itemId);
    		if(item != null)
    			return item;
    	}
    	return null;
    };




",MYFACES-2640
"It was confirmed the default behavior for partial state saving should work in auto mode, that means, the view is refreshed before build if contains c:if or similar tags. Note by default, component state of components inside c:if are not preserved between request, but this can be enabled using org.apache.myfaces.REFRESH_TRANSIENT_BUILD_ON_PSS_PRESERVE_STATE=true.",MYFACES-2639
"From a discussion of jsr-314-open mailing list:

Actually the event publishing conditions of PostAddToViewEvent/PreRemoveFromViewEvent are not very clear. These conditions depends if partial state saving is used or not and if facelets updates the view or  not. The problem is this fact is not very intuitive, so for write code correctly the user needs to be aware of that, in other words this should be documented somewhere. Also, there are some technical questions that could be of interest on this mailing list and myfaces dev list too.

In theory, PostAddToViewEvent is used in this cases:

- h:outputScript and h:outputStylesheet renderers uses it to relocate component resources to UIViewRoot facet ""head"" or ""body"" target (h:outputStylesheet by default to ""head""). Note ""head"" and ""body"" facets are transient.
- cc:insertChildren and cc:insertFacet, to relocate components to some place inside cc:implementation. The reason why we do that through a listener attached to PostAddToViewEvent is we need to take into account the case of nested composite components using cc:insertFacet/cc:insertChildren. Note when the component tree is built the first time, PostAddToViewEvent is propagated from root to nodes.
- When Partial State Saving is enabled, it is necessary to attach a listener to PostAddToViewEvent/PreRemoveFromViewEvent, so if some user add/remove a component, we can keep track of those changes and save/restore the component tree properly, in other words, support component addition or removal programatically.

Now, the instants of time where PostAddToViewEvent is published are:

- With Partial State Saving enabled

   * When the view is build at first time.
   * In a postback when the view is build but before the state of the component is restored.

- With Partial State Saving disabled

   * When the view is build at first time.
   * In a postback when the view is ""refreshed"", because all component nodes are detached and attached to the tree. In other words, on render response phase, vdl.buildView is called and in this case facelets algorithm add all transient components (usually all html markup not saved), and to do that, it detach and attach all components to be in right order. This also has some other implications, like c:if tag depends on this to work correctly.

A developer that is not aware of this fact could think that PostAddToViewEvent is called when the view is build.

This is true with PSS is enabled, but is not true when PSS is disabled. On this topic:

[jsr-314-open] add component resources depending on the owner component state

It was described why PostAddToViewEvent cannot be used in that case. But let's change a litte bit the problem. We have a custom component that creates some other on PostAddToViewEvent and add it as a children. It should work but in fact it only works when PSS is enabled, with PSS disabled that code will cause a duplicate id exception. Of course, the developer can solve it with some effort but the point is we are not consider the element of least surprise.

But this fact this is only the tip of the iceberg. In mojarra (this was already fixed on myfaces), components relocated by cc:insertChildren or cc:insertFacet does not have state when PSS is disabled, because when the view is ""refreshed"" the components are created again, but facelets algorithm remove all components with no bound to a facelet tag handler, and then the listeners attached to PostAddToViewEvent relocates the new ones, so this effect is not notice at first view.

Do you remember PostAddToViewEvent propagation ordering is important by cc:insertChildren/cc:insertFacet? well, with PSS disabled, the ordering now is from nodes to root, because all nodes are detached and attached from nodes to root, so in myfaces we did something like this (I removed some non relevant code to be more clear):

        try
        {
            if (refreshTransientBuild)
            {
                context.setProcessingEvents(false);
            }
            // populate UIViewRoot
            _getFacelet(renderedViewId).apply(context, view);
        }
        finally
        {
            if (refreshTransientBuild)
            {
                context.setProcessingEvents(true);
               
                    // When the facelet is applied, all components are removed and added from view,
                    // but the difference resides in the ordering. Since the view is
                    // being refreshed, if we don't do this manually, some tags like
                    // cc:insertChildren or cc:insertFacet will not work correctly, because
                    // we expect PostAddToViewEvent will be propagated from parent to child, and
                    // facelets refreshing algorithm do the opposite.
                    FaceletViewDeclarationLanguage._publishPreRemoveFromViewEvent(context, view);
                    FaceletViewDeclarationLanguage._publishPostAddToViewEvent(context, view);
            }
       }

In few words, disable event processing, and fire PostAddToViewEvent and PreRemoveFromViewEvent in the expected order to build the tree correctly. If we don't do this, h:outputScript and h:outputStylesheet will not work correctly (remember that UIViewRoot ""head"" and ""body"" facets are transient, so if these components are relocated, are in fact transient too). Also, care must be taken to prevent the listener of programatic component addition/removal register components on this time.

The conclusion based on this reasoning, it is clear the need of new event that be specific for relocate components (keep it simple for christ sake!). This event should be propagated for all components in the tree after the view is build from root to nodes. It could be good to have some clearification about the real intention of PostAddToViewEvent/PreRemoveFromViewEvent. Really, better names for those events are PostAddToComponentTreeEvent/PreRemoveFromComponentTreeEvent.

I'll attach a proposal to fix this one soon.",MYFACES-2638
"I am using multiple forms. the second form can submit  correctly first time, but when you submit again, the ajax cant work. 
you can try following code, first time the form f1 can reRend out1, but then form f1 cant submit any more.


test.jspx:

	<h:head>
	</h:head>
	<h:body>
		<h:outputScript name=""jsf.js"" library=""javax.faces"" target=""head""/>
 		
		<h:form id=""f0"">
		</h:form>		

		<h:form id=""f1"">
			<h:inputText value=""#{TestBean.value}""/>
			<h:outputText id=""out1"" value=""#{TestBean.value}""/>
			<h:commandButton value=""click me"" onclick=""jsf.ajax.request(this,event,{execute:'@form', render:'@form'});return false;""></h:commandButton>
		</h:form>
</h:body>


The reason i find is that:
during the first time submit and ajax rendering, the form will lose <input type=""hidden"" id=""javax.faces.ViewState""/> childnode. Then the following submit will not work.
the code in jsf.js causes this problem:
jsf.js:
myfaces._impl.xhrCore._AjaxResponse.prototype.processUpdate = function (request, context, node) {
        if (node.getAttribute(""id"") == ""javax.faces.ViewState"") {
            sourceForm = document.forms.length > 0 ? document.forms[0] : null;
....
}

"" sourceForm = document.forms.length > 0 ? document.forms[0] : null; "" is wrong!
when there is multiple forms, it will always find the first one.

Please change this, thx.

",MYFACES-2637
,MYFACES-2636
"An application builder for MyFaces should allow to bootstrap MyFaces applications easily.

The core should be very pluggable to allow add-ons for different frameworks.
We should use CDI (e.g. OWB) as dependency injection framework (so it's possible to use e.g. the nice event system).

It should be possible to generate:

#1 The project (minimal version of:)
 - Maven config

#2 Config
 - JSF (MyFaces-Core and Mojarra)
 - MyFaces component libs
 - CDI

#3 (Simple) Use-Case
 - JSF
 - 1 component lib
 - CDI (OWB)
 - MyFaces Extensions (ExtVal (bean-validation module), CODI)

The generated application should >not< depend on the application builder.
For the beginning users of the application builder should be able to use very simple commands to generate the required (minimal) config and very simple applications based on the mentioned frameworks.",MYFACES-2635
"JSF 2.0 introduced a partial state saving option: state of the page will not completely, but only partially state-saved.

This partial state saving reduces the page-state memory to around 20% of the value under the JSF 1.2 full state saving option, as preliminary measurements show - this is a relevant reduction.

However, I believe we can reduce this number even more, if we carefully take a look on what really needs to be saved and how.

This project would need to provide:

1) a setup to measure the numbers and provide comparisons
2) measurements of the current state
3) several steps which lead to a reduction of the state

Further research topics could be:

- partial state-saving in tables - currently, this is not implemented at all
- if no c:if, c:forEach, or ui:include is present on the page, we could get rid of the second application of the template before rendering automatically.

best regards,

Martin",MYFACES-2634
"Implementing a custom composite component class with some properties in the old way (getter/setter), so there is no attribute map on the middle, I found a bug when I try to set them. The stack trace is this:

javax.faces.FacesException: java.lang.IllegalArgumentException: argument type mismatch
	at org.apache.myfaces.context.ExceptionHandlerImpl.wrap(ExceptionHandlerImpl.java:241)
	at org.apache.myfaces.context.ExceptionHandlerImpl.handle(ExceptionHandlerImpl.java:156)
	at org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:222)
	at javax.faces.webapp.FacesServlet.service(FacesServlet.java:191)
	at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:502)
	at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:389)
	at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)
	at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181)
	at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:765)
	at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:417)
	at org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:230)
	at org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)
	at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)
	at org.mortbay.jetty.Server.handle(Server.java:324)
	at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:535)
	at org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:865)
	at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:539)
	at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:212)
	at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:404)
	at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:409)
	at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:520)
Caused by: java.lang.IllegalArgumentException: argument type mismatch
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at javax.faces.component._ComponentAttributesMap.setComponentProperty(_ComponentAttributesMap.java:450)
	at javax.faces.component._ComponentAttributesMap.put(_ComponentAttributesMap.java:345)
	at javax.faces.component._ComponentAttributesMap.put(_ComponentAttributesMap.java:58)
	at org.apache.myfaces.view.facelets.tag.composite.CompositeComponentRule$ValueExpressionMetadata.applyMetadata(CompositeComponentRule.java:83)
	at org.apache.myfaces.view.facelets.tag.MetadataImpl.applyMetadata(MetadataImpl.java:45)
	at org.apache.myfaces.view.facelets.tag.composite.CompositeComponentResourceTagHandler.setAttributes(CompositeComponentResourceTagHandler.java:269)
	at org.apache.myfaces.view.facelets.tag.jsf.ComponentTagHandlerDelegate.apply(ComponentTagHandlerDelegate.java:200)
	at javax.faces.view.facelets.DelegatingMetaTagHandler.apply(DelegatingMetaTagHandler.java:54)
	at javax.faces.view.facelets.CompositeFaceletHandler.apply(CompositeFaceletHandler.java:51)
	at javax.faces.view.facelets.DelegatingMetaTagHandler.applyNextHandler(DelegatingMetaTagHandler.java:59)
	at org.apache.myfaces.view.facelets.tag.jsf.ComponentTagHandlerDelegate.apply(ComponentTagHandlerDelegate.java:255)
	at javax.faces.view.facelets.DelegatingMetaTagHandler.apply(DelegatingMetaTagHandler.java:54)
	at javax.faces.view.facelets.CompositeFaceletHandler.apply(CompositeFaceletHandler.java:51)
	at javax.faces.view.facelets.DelegatingMetaTagHandler.applyNextHandler(DelegatingMetaTagHandler.java:59)
	at org.apache.myfaces.view.facelets.tag.jsf.ComponentTagHandlerDelegate.apply(ComponentTagHandlerDelegate.java:255)
	at javax.faces.view.facelets.DelegatingMetaTagHandler.apply(DelegatingMetaTagHandler.java:54)
	at javax.faces.view.facelets.CompositeFaceletHandler.apply(CompositeFaceletHandler.java:51)
	at org.apache.myfaces.view.facelets.compiler.NamespaceHandler.apply(NamespaceHandler.java:57)
	at javax.faces.view.facelets.CompositeFaceletHandler.apply(CompositeFaceletHandler.java:51)
	at org.apache.myfaces.view.facelets.compiler.EncodingHandler.apply(EncodingHandler.java:45)
	at org.apache.myfaces.view.facelets.impl.DefaultFacelet.apply(DefaultFacelet.java:114)
	at org.apache.myfaces.view.facelets.FaceletViewDeclarationLanguage.buildView(FaceletViewDeclarationLanguage.java:298)
	at org.apache.myfaces.lifecycle.RenderResponseExecutor.execute(RenderResponseExecutor.java:88)
	at org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:207)

The line that cause the problem is this (class CompositeComponentRule):

        public void applyMetadata(FaceletContext ctx, Object instance)
        {
            // Call setValueExpression to set ValueExpression instances
            // cause problems later because when getAttributes().get() is called
            // it is evaluated. put the ValueExpression directly on the map
            // prevents it and does not cause any side effects.
            // Maybe we should call setValueExpression when the getter and 
            // setter exists on the component class.
            ((UIComponent) instance).getAttributes().put(_name, _attr.getValueExpression(ctx, _type));
            //((UIComponent) instance).setValueExpression(_name, _attr.getValueExpression(ctx, _type));
            //((UIComponent) instance).setValueExpression(_name, 
            //        ctx.getFacesContext().getApplication().
            //        getExpressionFactory().createValueExpression(
            //                _attr.getValueExpression(ctx, _type), ValueExpression.class));
        }

This code comes from MYFACES-2340. The used one in normal components is this:

            ((UIComponent) instance).setValueExpression(_name, _attr.getValueExpression(ctx, _type));

The curious thing about it is that if we restore the code to the old way everything works fine. This code was changed trying to solve MYFACES-2340, but this example also works with the previous fix. 

I did some tests and no problems were detected.",MYFACES-2633
"running into this document: http://diveintohtml5.org/forms.html

I started playing with some of the new widgets in my Chromium browser (I wasn't aware that spinbox/sliders are part of HTML5).

What about trying to find someone for a GSoC project, to add a (raw) HTML 5 renderkit? Bernd and I talked about a potential renderkit last time we saw each other, but now there is actually some (raw) support on it inside of some browsers...

Why not introducing an <hx:***> namespace that could contain stuff as the following: -<hx:inputRangeSlider> -<hx:inputColor> -<hx:whatEverNewWidgetIsPartOfHTML5 />

And/or some more functional stuff, like drag-and-drop: -<fx:dragAndDrop...> (could be done as a behavior)

etc. ",MYFACES-2632
"should add 
javax.faces.validator.DoubleRangeValidator.NOT_IN_RANGE = 该值不在允许的 {0} 至 {1} 包围内.

javax.faces.validator.LongRangeValidator.NOT_IN_RANGE = 该值不在允许的 {0} 至 {1} 包围内.

to 
javax.faces.Messages.zh.properties",MYFACES-2631
"when using <h:body onload=""alert('onload');"" ></h:body> will display <body onload=""alert('onload');"" onload=""alert('onload');"" > </body>.

its seems that org.apache.myfaces.shared_impl.renderkit.html.HTML.ONUNLOAD_ATTR == 'onload' makes this issue.",MYFACES-2630
"I am the main coder on the Gracelets project (http://gracelets.sourceforge.net/) and have recently began integration of Groovy with JSF 2.0. In order for Gracelets to harness the already existing Facelets libraries it needs access to the TagLibrary class and the actual libraries loaded by the JSF 2.0 implementation. Since that library is not part of the JSF 2.0 public API, I have to write an extension for each different JSF 2.0 implementation in order to load them. I have been able to successfully integrate with the SUN RI with minimal code. However, in MyFaces Core implementation this code appears on line 135 of the org.apache.myfaces.view.facelets.tag.jsf.ComponentTagHandlerDelegate:

AbstractFaceletContext actx = (AbstractFaceletContext) ctx;

Gracelets has its own FaceletContext (which is part of the public API) in order to mimimize integration between different JSF 2.0 implementations. Since in MyFaces this is forced to be a particular sub class here, it breaks portability. Is there anyway this can be avoided?",MYFACES-2629
"In facelets 1.1.14, I can load page from classpath via ResourceSolver, 
by in myfaces 2.0.0-beta-3, I cant do this, because 'DefaultRestoreViewSupport.checkResourceExists' method check the resource exists using 'servletContext.getResource(path);', should do some delegate.",MYFACES-2628
"Currently the pom files of api, impl and shared are a big mess (formatting, ""wrong"" dependency settings, ...). This should be cleaned up.",MYFACES-2627
Application.createResource does not trip extension from resource name when try to resolve composite component class automatically,MYFACES-2626
There is a missing check for null on TagLibraryConfig.TagLibraryImpl.containsTagHandler.,MYFACES-2625
"If ProjectStage is Development and there is no h:messages component on the current view we should automatically add h:messages to the component tree, because many users often forget about adding this useful (debug) component and wonder why their actions are never called.

This is also an official JSF 2.0 spec requirement, however I couldn't find it in the spec-pdf or in the javadoc, but in the spec issue tracker [1] and on several blogs like Ryan Lubke's Blog [2]. Furthermore Mojarra also does it.

[1] https://javaserverfaces-spec-public.dev.java.net/issues/show_bug.cgi?id=314
[2] http://blogs.sun.com/rlubke/entry/jsf_2_0_new_feature2",MYFACES-2624
"Currently those two dependencies are defined messy. First they are defined in myfaces-core-project as optional which makes no sence since this project is just the super-project for api and impl and optional dependencies are not transitive. So this has to be removed here.

Furthermore the definitions of validation-api and el-api in the pom of myfaces-api are not completely correct. They should have a scope of compile (default) and should have set optional to true instead of just provided or provided+optional (which is by the way not allowed).

After this issue has been resolved el-api 2.2 will be available on the whole myfaces-api project, however keep in mind that you are only allowed to use the new methods (like getValueReference()) if you checked if the el-api 2.2 is really available first (via ExternalSpecifications). Otherwise you will end up in ClassNotFoundExceptions at runtime when el-api 2.2 is not available in the target system.",MYFACES-2623
"While working on MYFACES-2621 I found out that the current mechanism to get the base object and the property for el-api 2.1 breaks for composite components, because it does not handle base objects which implement CompositeComponentExpressionHolder correctly.",MYFACES-2622
"When using the new Unified EL 2.2, BeanValidation does not work, because _BeanValidatorUELUtils.getUELValueReferenceWrapper() always returns null.

See also the related thread on the mailing list: http://www.mail-archive.com/users@myfaces.apache.org/msg55250.html",MYFACES-2621
"Hi,

I'm using myfaces 2.0 beta 2 and currently I'm using a <h:dataTable> on my pages and everything is fine.
For some reasons (sorting etc.) I want to use the <t:dataTable> (from Tomahawk 1.1.9).

Now, when I click on a link inside the table, I get the following exception:

java.lang.NullPointerException
	at javax.faces.component.UIComponentBase.getRenderer(UIComponentBase.java:1038)
	at org.apache.myfaces.component.html.ext.HtmlDataTableHack.getClientId(HtmlDataTableHack.java:111)
	at org.apache.myfaces.component.html.ext.AbstractHtmlDataTable.getClientId(AbstractHtmlDataTable.java:135)
	at org.apache.myfaces.component.html.ext.HtmlDataTableHack.setRowIndex(HtmlDataTableHack.java:275)
	at org.apache.myfaces.component.html.ext.AbstractHtmlDataTable.setRowIndex(AbstractHtmlDataTable.java:276)
	at javax.faces.component.UIData.visitTree(UIData.java:1257)
	at javax.faces.component.UIComponent.visitTree(UIComponent.java:764)
	at javax.faces.component.UIComponent.visitTree(UIComponent.java:764)
	at javax.faces.component.UIViewRoot.processRestoreState(UIViewRoot.java:643)
	at org.springframework.faces.webflow.FlowViewStateManager.restoreComponentState(FlowViewStateManager.java:77)
	at org.springframework.faces.webflow.FlowViewStateManager.restoreView(FlowViewStateManager.java:159)
	at org.apache.myfaces.shared_impl.view.ViewDeclarationLanguageBase.restoreView(ViewDeclarationLanguageBase.java:106)
	at org.apache.myfaces.application.ViewHandlerImpl.restoreView(ViewHandlerImpl.java:240)
	at com.sun.facelets.FaceletViewHandler.restoreView(FaceletViewHandler.java:316)
	at org.springframework.faces.webflow.FlowViewHandler.restoreFlowView(FlowViewHandler.java:128)
	at org.springframework.faces.webflow.FlowViewHandler.restoreView(FlowViewHandler.java:75)
	at org.springframework.faces.webflow.JsfViewFactory.getView(JsfViewFactory.java:93)
	at org.springframework.webflow.engine.ViewState.resume(ViewState.java:193)
	at org.springframework.webflow.engine.Flow.resume(Flow.java:545)
	at org.springframework.webflow.engine.impl.FlowExecutionImpl.resume(FlowExecutionImpl.java:259)
	at org.springframework.webflow.executor.FlowExecutorImpl.resumeExecution(FlowExecutorImpl.java:163)
	at org.springframework.webflow.mvc.servlet.FlowHandlerAdapter.handle(FlowHandlerAdapter.java:183)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:771)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:716)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:647)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:563)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:710)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:803)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.myfaces.webapp.filter.ExtensionsFilter.doFilter(ExtensionsFilter.java:341)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:343)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:109)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:355)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:97)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:355)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:78)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:355)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:355)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:35)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:355)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:177)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:355)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:188)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:355)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:355)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:79)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:355)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:149)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:237)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:167)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at main.util.RendererFilter.doFilter(RendererFilter.java:103)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:175)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:128)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:263)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:844)
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:584)
	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:447)
	at java.lang.Thread.run(Unknown Source)

Is this the ""fault"" of myfaces or tomahawk? Is it possible to check, if the viewId is null, and - if so - create a new one?",MYFACES-2620
"From the spec javadoc of UIInput: ""If the validation fails, the implementation must call FacesContext.validationFailed()"".

Currently only UIViewParameter calls FacesContext.validationFailed().",MYFACES-2619
"Take a look at HtmlRendererUtils.decodeUIInput(): There we do a check for paramMap.containsKey(clientId) and if this returns false (meaning that there is no submitted value for the given component in the request parameter map) we add a warning message to the log.

I think we should get rid of this warning, because as a reason of AJAX it is on my opinion normal to not submit all values of a form in every request. Furthermore it has no impact on the lifecycle, because if the submitted value is null it just isn't processed any further.

See also the related thread on the mailing list: http://www.mail-archive.com/users@myfaces.apache.org/msg55238.html",MYFACES-2618
"running into this document: http://diveintohtml5.org/forms.html

I started playing with some of the new widgets in my Chromium browser (I wasn't aware that spinbox/sliders are part of HTML5).

What about trying to find someone for a GSoC project, to add a (raw) HTML 5 renderkit? Bernd and I talked about a potential renderkit last time we saw each other, but now there is actually some (raw) support on it inside of some browsers...

Why not introducing an <hx:***> namespace that could contain stuff as the following: -<hx:inputRangeSlider> -<hx:inputColor> -<hx:whatEverNewWidgetIsPartOfHTML5 />

And/or some more functional stuff, like drag-and-drop: -<fx:dragAndDrop...> (could be done as a behavior)

etc. ",MYFACES-2617
"In short, this topic is an attempt to add full state to components inside UIData. I'll do a brief resume, so people can understand this one easily.

UIData uses the same component instances to render multiple rows. Suppose this example:

<h:dataTable id=""cities"" var=""city"" value=""#{country.cities}"">
    <h:column>
        <h:outputText value=""#{city}""  />
    </h:column>
</h:dataTable>

In the component tree it is created this hierarchy:

HtmlDatatable
  UIColumn
    HtmlOutputText
   
If we have 10 cities, the same component is used over and over to render all 10 cities. The reason to do that in this way is keep state as small as possible.

Now let's suppose something like this:

<h:dataTable id=""cities"" var=""city"" value=""#{country.cities}"">
    <h:column>
        <h:inputText value=""#{city}""  />
    </h:column>
</h:dataTable>

It was changed the output component for an input one. If this table is in a form and the values are submitted, the same component is used to apply request values, validate and apply them to the model (update process). To make this possible, UIData class has some code to preserve this values between phases (using EditableValueHolder interface), so when each phase is processed, all rows are traversed and you get the expected behavior.

Now suppose something more complex: We have a code that use invokeOnComponent to change the style of my inputText. In theory, only one row should change. But in fact, all rows are rendered with the same color. Why? because we use the same component to render all rows, and we don't preserve the children component state between rows.

There is a lot of issues, questions, and side effects related to this issue, but just to put some of them here:

TOMAHAWK-1062 InputTextArea doesn't work properly inside facet DetailStamp
TOMAHAWK-96 Data table Scroller not working the dataTable which was actually contained in other DataTable
https://javaserverfaces-spec-public.dev.java.net/issues/show_bug.cgi?id=153 Problems with UIData state saving

Also, it is well know that one reason why people uses c:forEach in facelets, is because this one create ""full"" components per each row. It is very easy to find articles on internet.

Now, with jsf 2.0 we have partial state saving, so we have a chance to fix this one once and for all. I tried fix this one per months (maybe years!), but talking with Martin Marinschek on JSFDays, some ideas came out and finally it was found a possibility to fix this one using the existing api and with little changes on the spec.

The proposal is this:

1. Do not call UIComponent.markInitialState() on ComponentTagHandlerDelegate, as ComponentHandler javadoc says, instead call it after PostAddToViewEvent are published on vdl.buildView(). We need to call it from root to nodes, so the parent component is marked first. I know the place where this call comes is from trinidad tag handler, but this call needs to be fixed in a more predictable way.
2. Use an attribute on facesContext to identify when the VDL is marking the initial state (in myfaces there is already an attribute called ""org.apache.myfaces.MARK_INITIAL_STATE""). This is necessary to indicate UIData instances that it is time to save the full state of all component children,
3. Allow UIData to hold a map where the key are client ids and the value are the deltas of all components per row. This map should be saved and restored.
4. Change UIData.setRowIndex() to restore and save the component state.

I'll attach a patch on this issue with the algorithm proposed (because it is based on myfaces codebase). It was tested and it works. But note it is necessary to fix the javadoc for UIData.markInitialState(), ComponentHandler and maybe vdl.buildView(), so the intention is propose this change for jsf 2.0 rev A. Note this works only with PSS enabled because without it we don't have a place to notify UIData instances that it is necessary to get the full state. Also, note this patch preserve backward compatibility, because the old way to store/save is applied after the full state is restored.

Really, I have the strong temptation to apply some similar code on myfaces UIRepeat component (because this class is private), but I prefer first ask to EG.",MYFACES-2616
"While working on MYFACES-2614 I ran into the problem that, if a conversion fails, the error page is displayed with the related ConverterException. This should not happen, instead a FacesMessage describing the conversion error should be added to the FacesContext.

See section 2.2.3 Process Validations (or also section 2.2.2. Apply Request Values for components with immediate set to true) of the JSF 2.0 spec: ""Conversions and Validations that failed will have caused messages to be enqueued via calls to addMessage()..."".",MYFACES-2615
"Hi, 

I have an enum that has overridden the toString method. 
It seems the EnumConverter uses toString to convert an enum to a string (and Enum.valueOf(..) to find it back). However, since my toString is overriden, the value it returns is not valid input for the Enum.valueOf(..) function and the converter raises an exception. 

A better approach is to use .name() as string representation of an Enum. ",MYFACES-2614
"In a environment without javax.validation api, if bean validation is used,  a ClassNotFoundException is thrown because ExternalSpecifications has an import from javax.validation api. The solution is create another class that has this only import, so ExternalSpecifications could be loaded on the classpath without the presence of javax.validation api.",MYFACES-2613
"The current code is half broken, it allowed only the registration of one loader extension
and the first code was ignored ...
Fixing that currently",MYFACES-2612
"Currently UIComponentBase.getFacetsAndChildren() accesses the component's facets and children directly over the properties _facetMap and _childrenList. This is a problem when a component does not use those fields for its children or facets. One example is the PartialViewRoot of PrimeFaces.

See also the thread on the mailing list: http://www.mail-archive.com/users@myfaces.apache.org/msg55175.html",MYFACES-2611
"The h:link component is not being rendered correctly when disabled. Only the span tags are rendered, but not the value.",MYFACES-2610
It appears that the PreRenderViewEvent event is not mapped in the NamedEventManager. Thanks to Leonardo for pointing that out!,MYFACES-2609
This shorcut is missing and it should be on NamedEventManager.,MYFACES-2608
"The class CompositeFunctionMapper gets two FunctionMappers in the constructor which it uses to resolve EL functions in its method resolveFunction(). Currently the first FunctionMapper is always NamespaceHandler and the second one is the one from the ELContext, which is null at all times. I think this is also a problem, but at first I want to get rid of this ugly NPE.",MYFACES-2607
"javax.crypto.BadPaddingException is thrown after some time (a few minutes) while restoring the state on Google App Engine.
Some discussion on https://issues.apache.org/jira/browse/MYFACES-2559.
",MYFACES-2606
"running Trinidad 2.x (trunk) with the MyFaces2 trunk, gives me this error:

(you don't see that with the ""older"" beta-2 release...


java.lang.LinkageError: loader constraint violation: loader (instance of org/mortbay/jetty/webapp/WebAppClassLoader) previously initiated loading for a different type with name ""javax/el/ExpressionFactory""
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClassCond(ClassLoader.java:632)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:616)
	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:141)
	at java.net.URLClassLoader.defineClass(URLClassLoader.java:283)
	at java.net.URLClassLoader.access$000(URLClassLoader.java:58)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:197)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:190)
	at org.mortbay.jetty.webapp.WebAppClassLoader.loadClass(WebAppClassLoader.java:392)
	at org.mortbay.jetty.webapp.WebAppClassLoader.loadClass(WebAppClassLoader.java:363)
	at org.apache.myfaces.trinidadinternal.config.LazyValueExpression._createValueExpressionFromApplication(LazyValueExpression.java:182)
	at org.apache.myfaces.trinidadinternal.config.LazyValueExpression.createValueExpression(LazyValueExpression.java:56)
	at org.apache.myfaces.trinidadinternal.skin.SkinUtils._createTranslationSourceValueExpression(SkinUtils.java:649)
	at org.apache.myfaces.trinidadinternal.skin.SkinUtils._addSkinToFactory(SkinUtils.java:612)
	at org.apache.myfaces.trinidadinternal.skin.SkinUtils._registerSkinExtensionsAndAdditions(SkinUtils.java:411)
	at org.apache.myfaces.trinidadinternal.skin.SkinUtils.registerSkinExtensions(SkinUtils.java:131)
	at org.apache.myfaces.trinidadinternal.config.GlobalConfiguratorImpl.init(GlobalConfiguratorImpl.java:409)
	at org.apache.myfaces.trinidadinternal.config.GlobalConfiguratorImpl.beginRequest(GlobalConfiguratorImpl.java:208)
	at org.apache.myfaces.trinidadinternal.config.GlobalConfiguratorImpl.getExternalContext(GlobalConfiguratorImpl.java:331)
	at org.apache.myfaces.trinidadinternal.context.FacesContextFactoryImpl$CacheRenderKit.<init>(FacesContextFactoryImpl.java:90)
	at org.apache.myfaces.trinidadinternal.context.FacesContextFactoryImpl.getFacesContext(FacesContextFactoryImpl.java:68)
	at org.apache.myfaces.webapp.AbstractFacesInitializer.dispatchInitDestroyEvent(AbstractFacesInitializer.java:195)
	at org.apache.myfaces.webapp.AbstractFacesInitializer.initFaces(AbstractFacesInitializer.java:124)
	at org.apache.myfaces.webapp.StartupServletContextListener.initFaces(StartupServletContextListener.java:182)
	at org.apache.myfaces.webapp.StartupServletContextListener.contextInitialized(StartupServletContextListener.java:155)
	at org.mortbay.jetty.handler.ContextHandler.startContext(ContextHandler.java:548)
	at org.mortbay.jetty.servlet.Context.startContext(Context.java:136)
	at org.mortbay.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1250)
	at org.mortbay.jetty.handler.ContextHandler.doStart(ContextHandler.java:517)
	at org.mortbay.jetty.webapp.WebAppContext.doStart(WebAppContext.java:467)
	at org.mortbay.jetty.plugin.Jetty6PluginWebAppContext.doStart(Jetty6PluginWebAppContext.java:115)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)
	at org.mortbay.jetty.handler.HandlerCollection.doStart(HandlerCollection.java:152)
	at org.mortbay.jetty.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:156)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)
	at org.mortbay.jetty.handler.HandlerCollection.doStart(HandlerCollection.java:152)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)
	at org.mortbay.jetty.handler.HandlerWrapper.doStart(HandlerWrapper.java:130)
	at org.mortbay.jetty.Server.doStart(Server.java:224)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)
	at org.mortbay.jetty.plugin.Jetty6PluginServer.start(Jetty6PluginServer.java:132)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:441)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:383)
	at org.mortbay.jetty.plugin.AbstractJettyRunMojo.execute(AbstractJettyRunMojo.java:210)
	at org.mortbay.jetty.plugin.Jetty6RunMojo.execute(Jetty6RunMojo.java:184)
	at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:490)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:694)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeStandaloneGoal(DefaultLifecycleExecutor.java:569)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:539)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:387)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:348)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:180)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:328)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:138)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:362)
	at org.apache.maven.cli.compat.CompatibleMain.main(CompatibleMain.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
	at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
	at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
",MYFACES-2605
"The web-facesconfig_2_0.xsd schema that is shipping with the latest binaries (myfaces-core-2.0.0-beta-2) is not compliant with the final JSF 2.0 spec.

I have noted the following issues:
          - Missing namespace for faces-configType behavior element
          - Missing ""eager"" attribute for faces-config-managed-beanType
          - Missing ""include-view-params"" attribute for faces-config-redirectType
          - Missing faces-config-redirect-viewParamType type
          - Missing ""if"" element in faces-config-navigation-caseType
          - Missing faces-config-ifType type
          - Incorrect element name for behavior-extensionType in faces-config-behaviorType: was ""extension""; should be ""behavior-extension""

I believe there are also several minor issues with schema listed in the final JSR-314 spec:
     Missing id attribute on:
          - faces-config-orderingType
          - faces-config-absoluteOrderingType
          - faces-config-behaviorType
          - faces-config-client-behavior-rendererType

I am new to JIRA and this is my first submitted bug.   I hope to attach my ""repaired"" schema to this issue.",MYFACES-2603
"Convertor properties which don't have default-value defined in faces-config.xml file are currently nullified.  We set some default values of properties in Converter constructor, but code in ApplicationImpl.setConverterProperties will set this properties to null if there is no default-value in faces-config.xml",MYFACES-2602
"When starting MyFaces with the appropriate configurations in GlassFish's sun-web.xml, everything functions properly except for this ugly Exception at startup:

SCHWERWIEGEND: Cannot find private field _firstInstance from ExternalContext 
java.lang.NoSuchFieldException: _firstInstance
	at java.lang.Class.getDeclaredField(Class.java:1882)
	at org.apache.myfaces.context.FacesContextFactoryImpl.<init>(FacesContextFactoryImpl.java:81)

This is caused because MyFaces provides this field in its implementation of javax.faces.context.ExternalContext, but Mojarra does not. And althought we set the right configuration parameters for using MyFaces, GlassFish wants to use Mojarra's version of this class when accessing the field via reflection.

The solution to this is very easy. We just have to store _firstInstance in a package private class with a specific name (_MyFacesExternalContextHelper) so we won't run into any classloading problems.",MYFACES-2601
"I just tried an example which used @PostConstruct, but the method was never called. Something seems to have been changed here.",MYFACES-2600
"This one is a bit special. I remove the triggering element from the DOM, afterwards I trigger it's onchange method. Works with Mojarra, but MyFaces insists, that the triggering element must exist in the DOM, though this isn't necessary from the spec.

		<h:form id=""testForm"">
	 		<h:inputText id=""test"" value=""#{myBean.test}"" >
				<f:ajax render=""test2""/>
	    	</h:inputText>
			<h:inputText id=""test2"" value=""#{myBean.test}"" />
		    <script type=""text/javascript"">
				//<![CDATA[
	    		var myTest = document.getElementById(""testForm:test"");
	    		var test_onchange = myTest.onchange;
	    		myTest.parentNode.removeChild(myTest);
	    		test_onchange();
				//]]>
			</script>
		</h:form>",MYFACES-2599
"You see the fancy missing id warning when using f:viewParam:

10.03.2010 13:35:36 javax.faces.component.UIComponentBase getClientId
WARNUNG: WARNING: Component j_id12 just got an automatic id, because there was no id assigned yet. If this component was created dynamically (i.e. not by a JSP tag) you should assign it an explicit static id or assign it the id you get from the createUniqueId from the current UIViewRoot component right after creation! Path to Component: {Component-Path : [Class: javax.faces.component.UIViewRoot,ViewId: /viewparam.xhtml][Class: javax.faces.component.UIPanel,Id: javax_faces_metadata][Class: javax.faces.component.UIViewParameter,Id: j_id12]}",MYFACES-2598
"Currently we have historically grown 2 different classes which are responsible for Class loading one being the ReflectUtil class which originates out of the Facelets Codebase the other one being our own homegrown ClassUtils.
Both have their advantages and disadvantages, we probably should unify both classes under shared ClassUtils in the long run (post 2.0)
",MYFACES-2597
"Our facelets code does not use the ClassUtils.forName from our shared class hierarchy
instead it reverts to its own ReflectUtils forName, which however has also array and primitive resolution (which our code does not have yet)
It breaks some plugins that way in the facelets part due to not running into our loader plugin mechanism.
",MYFACES-2596
"Following facelets taglib code is correct according to the spec

 <tag>
        <tag-name>tagHandlertest</tag-name>
        <component>
            <component-type>myComponentType</component-type>
            <renderer-type>myRendererType</renderer-type>
            <handler-class>org.apache.myfaces.javaloader.componentTest.MyComponentTag</handler-class>
        </component>
    </tag>

but yet it fails:
Caused by: org.xml.sax.SAXException: Error Handling [file:/Users/werpu2/Desktop/development/workspace/extensions-scripting3/examples/myfaces20-example/target/myfaces20-example-1.0-SNAPSHOT/WEB-INF/facelets/groovy-taglib.xml@69,102] <handler-class>

According to the spec: Appendix A - 1.2 the <handler-class> can exist under both the <tag> attribute and the <component> attribute the component -> handler-class has been added in jsf 2.0. I assume we run some old code here which has yet to implement this.
 ",MYFACES-2595
"Simple tests (code pasted below) outputs following results: 

1) JSP: switchs colums at every click with no problem

2) Facelets with javax.faces.PARTIAL_STATE_SAVING=false - no visual switch

3) Facelets with javax.faces.PARTIAL_STATE_SAVING=true switchs colums at every click with no problem

Common code from test.jspx and test.xhtml
... jsp: or facelets stuff  here ...
    <h:form id=""form"">
       <h:commandButton value=""Switch columns"">
        <f:actionListener binding=""#{testBean}"" />
      </h:commandButton>

      <h:dataTable id=""table"">
        <h:column>
          <f:facet name=""header"">
            <h:outputText value=""firstName"" />
          </f:facet>
        </h:column>
        <h:column>
          <f:facet name=""header"">
            <h:outputText value=""surname"" />
          </f:facet>
        </h:column>
      </h:dataTable>
     </h:form>

@ManagedBean
@RequestScoped
public class TestBean implements ActionListener {
        public void processAction(ActionEvent event) throws AbortProcessingException {
                FacesContext context  = FacesContext.getCurrentInstance();
                UIComponent table = context.getViewRoot().findComponent(""form:table"");
                UIComponent column1 = table.getChildren().get(0);
                UIComponent column2 = table.getChildren().get(1);
                table.getChildren().clear();
                table.getChildren().add(column2);
                table.getChildren().add(column1);
        }
}",MYFACES-2594
"This one doesn't pull the script with MyFaces 2.0:

		<style type=""text/css"">
			@import ""test.css""
		</style>

No problem with Mojarra here.",MYFACES-2593
Otherwise the latest non null value would be overwritten if the parameter is absent in a request.,MYFACES-2592
"Currently the method buildBehaviorChain() only checks the ClientBehaviors for the first eventName for the Hint SUBMITTING. However, the AjaxBehavior occurs as a ClientBehavior of the second eventName (""action"") and thus it is not processed correctly.

See the discussion on the dev mailing list for details: http://www.mail-archive.com/dev@myfaces.apache.org/msg44223.html",MYFACES-2591
"JSF implementations should treat the following framework components as JEE
components, and pass them through the default WebInjectionProvider.inject()
method part of any instantiation process. E.g: Whether or not the framework is
instantiating the object for it's use, or the user is asking the framework for a
new instance.

The benefit: This means that any container provided injection points would
automatically be available in the following artifacts:

    * ManagedBean
    * PhaseListener
    * SystemEventListener
    * Converter
    * Validator
    * ... more?

For extension writers:

Support for native container-injection for all artifacts defined in
section 11.4.6 of the JSR-314 spec.

■ ActionListener
■ ApplicationFactory
■ FacesContextFactory
■ LifecycleFactory
■ NavigationHandler
■ PropertyResolver
■ RenderKit
■ RenderKitFactory
■ ResourceHandler
■ StateManager
■ VariableResolver
■ ViewHandler

There is a related SPEC issue, Mojarra enhancement, and GlassFish bug also involved in getting this
standardized across the board:

https://javaserverfaces-spec-public.dev.java.net/issues/show_bug.cgi?id=763
https://glassfish.dev.java.net/issues/show_bug.cgi?id=11655
https://javaserverfaces.dev.java.net/issues/show_bug.cgi?id=1578",MYFACES-2590
"The pprResponseWriter.delete(""id"") resolves to

<changes><delete id=""id""></delete>

the </changes> is missing, I will issue a fix on monday when I commit my work on the PartialResponseWriterImpl, including the unit test which triggered this error.
",MYFACES-2589
"The JavaScript function oamClearHiddenInput generate an error when using IE8. The error says ""illegal argument"" in the line ""form.removeChild(hInput);"".

You can see a description of this problem at http://groups.google.com/group/alt.comp.lang.javascript/browse_thread/thread/2380af22f06b05a6/475ae9c43505c581.

I'll try to submit a patch for that :)",MYFACES-2588
"We missed a minor detail of the spec 
the html of the spec defines a specversion and implversion
we did not cover that",MYFACES-2587
"First the new element is inserted, then the scripts are run, then the old element is removed. This is wrong, see this example:

	    	<h:inputText value=""#{myBean.test}"">
				<f:ajax render=""test"" />
	    	</h:inputText>
	    	<h:panelGroup id=""test"">
			    <script type=""text/javascript"">
					alert(""running"");
				</script>
		    	<h:inputText value=""#{myBean.test}"" />
	    	</h:panelGroup>

Correct order would be: First the new element is inserted, then the old element is removed, then the scripts are run.
",MYFACES-2586
"This doesn't work:

	    	<h:inputText value=""#{numberBean.myNumber}"">
				<f:ajax render=""test"" />
	    	</h:inputText>
	    	<h:panelGroup id=""test"">
			    <script type=""text/javascript"">
			    	//<![CDATA[
					alert(""running"");
					//]]>
				</script>
		    	<h:inputText value=""#{numberBean.myNumber}"" />
	    	</h:panelGroup>

But this works fine:
	    	<h:inputText value=""#{numberBean.myNumber}"">
				<f:ajax render=""test"" />
	    	</h:inputText>
	    	<h:panelGroup id=""test"">
			    <script type=""text/javascript"">
					alert(""running"");
				</script>
		    	<h:inputText value=""#{numberBean.myNumber}"" />
	    	</h:panelGroup>
",MYFACES-2585
"There is a bug in our workflow regarding the h:outputScript which prevents an error message to be shown if the target is not present although being set.

Following behavior, make a html page with normal <head and <body tags, not <h:head, or h:body
now set the outputScript target to head, and see that nothing happens no error message nothing.
A black box test against mojarra revealed that mojarra places a FacesMessage error in the message displaying
that the target could not be found.

The problem lies within our own lifecycle here, following happens, we have a component event listener on our outputScript 
which registers itself als componentResource under the target.

Now if head or body renders it gets the resources registered  for the target head or body and renders them.
But the problem now is, if there is no dedicated h:head or h:body the resources will never get called and hence nohting happens.

I personally see two solutions to the problem, one being a head or body check on the outputScript side, but this is inperformant.
The better idea probably would be simply to also use event mechanisms on the head and body to save a marker somewhere (request maybe) which then later can be checked on the outputScript component side, and if the corresponding marker to target is not present we simply add an error...
",MYFACES-2584
"This code:
		<h:form id=""myForm"">
	    	<h:inputText value=""#{myBean.test}"">
				<f:ajax render=""#{myBean.bindingMyTest.clientId}"" event=""keyup""/> 
	    	</h:inputText>
	    	<h:inputText id=""myText"" value=""#{myBean.test}"" binding=""#{myBean.bindingMyTest}"" />
		</h:form>

produces java.lang.ClassCastException: java.lang.String cannot be cast to java.util.Collection

while this works:
		<h:form id=""myForm"">
	    	<h:inputText value=""#{myBean.test}"">
				<f:ajax render=""myForm:myText"" event=""keyup""/> 
	    	</h:inputText>
	    	<h:inputText id=""myText"" value=""#{myBean.test}""/>
		</h:form>

On Mojarra both work fine. My guess is here's some problem with the special lifecycle of bindings properties.",MYFACES-2583
"Currently, we have 3 identical ""ExternalSpecifications"" classes, in 3 separate packages.

They are getting more complex and the duplication becomes cumbersome.

A solution might be to enhance the StartupServletContextListener class to let it publish those container flags into the ServletContext, so the other classes can easily reuse them.

See Jakob's comment on MYFACES-2565",MYFACES-2582
"when using prefix mapping (e.g. /faces/*), according to the new algorithm for JSF 2.0 we need to treat multiple iterations of /faces (/faces/faces, /faces/faces/faces) the same when calculating the view ID.  Right now we fail to do this if we have a double slash in the URL.
",MYFACES-2581
"The OSGi manifest for api module is missing imports for javax.validation packages needed primarily by the BeanValidator.java,
",MYFACES-2580
"This would be a really cool new feature, because we could use the new Servlet API to add the entries for Faces Servlet dynamically at startup and so the user does not have to configure it anymore in web.xml.",MYFACES-2579
"See https://facelets.dev.java.net/issues/show_bug.cgi?id=357 for details

Comparing UIData with UIRepeat, we should save using getLocalValue but restore calling setValue",MYFACES-2578
"https://javaserverfaces.dev.java.net/issues/show_bug.cgi?id=1498
",MYFACES-2577
"The static final fields in the _ExternalSpecifications have recently been refactored into methods. But unfortunately, this has broken thread safety, possibly leading to strange errors (like NPE).

I think the only solution with the current implementation is to make the methods synchronized. Volatile is not enough AFAICS...",MYFACES-2576
,MYFACES-2575
"This causes a ClassCastException in ApplicationImpl, because there the code wants to cast to a ValueExpression, but the value in the attribute map is of type String. So we have to put the ValueExpression instead of the resolved value in the attribute map in InterfaceHandler.",MYFACES-2574
"
http://code.google.com/p/prettyfaces/issues/detail?id=28

Section 11.4.6 of the JSF spec states that when delegating NavigationHandler, it should accept (as a constructor parameter) the parent NavigationHandler to be decorated. This is no longer working in MyFaces 2.0.0-x.

SEVERE: com.ocpsoft.pretty.faces.application.PrettyNavigationHandler
java.lang.InstantiationException: com.ocpsoft.pretty.faces.application.PrettyNavigationHandler
    at java.lang.Class.newInstance0(Class.java:340)
    at java.lang.Class.newInstance(Class.java:308)
    at org.apache.myfaces.shared_impl.util.ClassUtils.newInstance(ClassUtils.java:343)
    at org.apache.myfaces.config.FacesConfigurator.getApplicationObject(FacesConfigurator.java:2094)
    at org.apache.myfaces.config.FacesConfigurator.configureApplication(FacesConfigurator.java:1871)
    at org.apache.myfaces.config.FacesConfigurator.configure(FacesConfigurator.java:515)
    at org.apache.myfaces.webapp.AbstractFacesInitializer.buildConfiguration(AbstractFacesInitializer.java:203)
    at org.apache.myfaces.webapp.Jsp21FacesInitializer.initContainerIntegration(Jsp21FacesInitializer.java:73)
    at org.apache.myfaces.webapp.AbstractFacesInitializer.initFaces(AbstractFacesInitializer.java:99)
    at org.apache.myfaces.webapp.StartupServletContextListener.contextInitialized(StartupServletContextListener.java:155)
    at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:645)
    at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:189)
    at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:978)
    at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:586)
    at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:349)
    at org.mortbay.jetty.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:102)
    at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:55)
    at org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:165)
    at org.eclipse.jetty.server.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:162)
    at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:55)
    at org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:165)
    at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:55)
    at org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:92)
    at org.eclipse.jetty.server.Server.doStart(Server.java:228)
    at org.mortbay.jetty.plugin.JettyServer.doStart(JettyServer.java:69)
    at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:55)
    at org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:433)
    at org.mortbay.jetty.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:377)
    at org.mortbay.jetty.plugin.JettyRunWarMojo.execute(JettyRunWarMojo.java:68)
    at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:490)
    at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:694)
    at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeStandaloneGoal(DefaultLifecycleExecutor.java:569)
    at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:539)
    at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:387)
    at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:348)
    at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:180)
    at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:328)
    at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:138)
    at org.apache.maven.cli.MavenCli.main(MavenCli.java:362)
    at org.apache.maven.cli.compat.CompatibleMain.main(CompatibleMain.java:60)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
    at java.lang.reflect.Method.invoke(Method.java:597)
    at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
    at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
    at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
    at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
Feb 22, 2010 11:15:56 PM org.apache.myfaces.webapp.AbstractFacesInitializer initFaces
SEVERE: An error occured while initializing MyFaces: java.lang.InstantiationException: com.ocpsoft.pretty.faces.application.PrettyNavigationHandler
javax.faces.FacesException: java.lang.InstantiationException: com.ocpsoft.pretty.faces.application.PrettyNavigationHandler
    at org.apache.myfaces.shared_impl.util.ClassUtils.newInstance(ClassUtils.java:353)
    at org.apache.myfaces.config.FacesConfigurator.getApplicationObject(FacesConfigurator.java:2094)
    at org.apache.myfaces.config.FacesConfigurator.configureApplication(FacesConfigurator.java:1871)
    at org.apache.myfaces.config.FacesConfigurator.configure(FacesConfigurator.java:515)
    at org.apache.myfaces.webapp.AbstractFacesInitializer.buildConfiguration(AbstractFacesInitializer.java:203)
    at org.apache.myfaces.webapp.Jsp21FacesInitializer.initContainerIntegration(Jsp21FacesInitializer.java:73)
    at org.apache.myfaces.webapp.AbstractFacesInitializer.initFaces(AbstractFacesInitializer.java:99)
    at org.apache.myfaces.webapp.StartupServletContextListener.contextInitialized(StartupServletContextListener.java:155)
    at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:645)
    at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:189)
    at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:978)
    at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:586)
    at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:349)
    at org.mortbay.jetty.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:102)
    at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:55)
    at org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:165)
    at org.eclipse.jetty.server.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:162)
    at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:55)
    at org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:165)
    at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:55)
    at org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:92)
    at org.eclipse.jetty.server.Server.doStart(Server.java:228)
    at org.mortbay.jetty.plugin.JettyServer.doStart(JettyServer.java:69)
    at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:55)
    at org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:433)
    at org.mortbay.jetty.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:377)
    at org.mortbay.jetty.plugin.JettyRunWarMojo.execute(JettyRunWarMojo.java:68)
    at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:490)
    at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:694)
    at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeStandaloneGoal(DefaultLifecycleExecutor.java:569)
    at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:539)
    at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:387)
    at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:348)
    at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:180)
    at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:328)
    at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:138)
    at org.apache.maven.cli.MavenCli.main(MavenCli.java:362)
    at org.apache.maven.cli.compat.CompatibleMain.main(CompatibleMain.java:60)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
    at java.lang.reflect.Method.invoke(Method.java:597)
    at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
    at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
    at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
    at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
Caused by: java.lang.InstantiationException: com.ocpsoft.pretty.faces.application.PrettyNavigationHandler
    at java.lang.Class.newInstance0(Class.java:340)
    at java.lang.Class.newInstance(Class.java:308)
    at org.apache.myfaces.shared_impl.util.ClassUtils.newInstance(ClassUtils.java:343)
    ... 45 more
",MYFACES-2573
"If the FacesContext that was created during startup and/or shutdown is not released, then the ExternalContext object could be reused.  On some appservers this could cause problems if they are performing any additional initialization in their servlet context impl.  This at the case in WebSphere, but could also apply to other appservers which add internal extensions to the servletContext in their implementation classes. ",MYFACES-2572
"This applies for:

- f:convert* tags
- f:converter
- f:validate* tags
- f:validator
- f:actionListener

because no processing of the tag is possible in the case the tag is nested in a composite component and no for attribute is present.",MYFACES-2571
,MYFACES-2570
,MYFACES-2569
"From jsr-314-open list it was made clear that facets created to hold resources (see UIViewRoot._getComponentResources) are transient, because all component resources does not change its inner state between requests. We should do the same too.",MYFACES-2568
"This is an extremely trivial issue, but can be confusing for a user, especially someone new to MyFaces, who doesn't have Tomahawk installed.  

We shouldn't be outputting the message the Tomahawk is starting on either MyFaces or the Sun RI  respectively if Tomahawk itself is not actually available.  

This technically affects prior releases as well, but I'm not sure we want to back port changes in logging after this many releases of the 1.x streams so I don't plan on changing them at this point.  ",MYFACES-2567
"I'm developing a JSF application using MyFaces 1.1.7 under JBoss 3.2.6 and JDK 1.4. Everything was OK (had deployed it several times) untill I added the following code to the page:

<h:outputLink value=""secondPage.jsf"" target=""_blank"">
    <h:outputText value=""Click here"" />
    <f:param name=""myParam"" value=""#{bean.myParam}"" />
</h:outputLink>

This is resulting in the following exception:

java.lang.NoClassDefFoundError: java/lang/StringBuilder
    at org.apache.myfaces.shared_impl.renderkit.html.util.HTMLEncoder.encodeURIAtributte(HTMLEncoder.java:355)
    at org.apache.myfaces.shared_impl.renderkit.html.HtmlResponseWriterImpl.writeURIAttribute(HtmlResponseWriterImpl.java:393)
    at org.apache.myfaces.shared_impl.renderkit.html.HtmlLinkRendererBase.renderOutputLinkStart(HtmlLinkRendererBase.java:461)
    at org.apache.myfaces.shared_impl.renderkit.html.HtmlLinkRendererBase.encodeBegin(HtmlLinkRendererBase.java:93)

I downloaded the source code of HTMLEncoder.java from myfaces-impl-1.1.7.jar and confirmed that it's using a StringBuilder object within encodeURIAtributte method.

The question is: isn't myfaces 1.1.7 supposed to be compatible with JDK 1.4?

Thank in advance,
Rafael",MYFACES-2566
"Currently the BeanValidator has the following code:

if (_ExternalSpecifications.isUnifiedELAvailable())
{
   //TODO: Implement when Unified EL for Java EE6 is available.
   throw new FacesException(""Unified EL for Java EE6 support is not yet implemented"");
}

I'm using EL-2.2 in MyFaces-2.0.0-SNAPSHOT and now switched from using facelets-1.1.15.B1 to the built-in facelets-2.

After that I get this rather unfunny Exception in the code above.

I tried to remove this condition in BeanValidator and so far all works well. Afaik the new EL-2.1 interface should be backward compatible to the EL of JSF-2.1, isn't?",MYFACES-2565
"According to section 10.1.2 of the spec:

The sole determinant to backwards compatibility lies in the answer to the question, ""is there any Java
code in the application, or in libraries used by the application, that extends from or depends on any class in package
com.sun.facelets and/or its sub-packages?""
...
If the answer to this question is ""no"", Facelets in JSF 2.0 is backwards compatible with pre-JSF 2.0 Facelets and such
an application must not continue to bundle the Facelets jar file along with the application, and must not continue to set
the Facelets configuration parameters.

This implies that simply removing the pre-2.0 facelets bundle should allow the app to run properly again in a 2.0 runtime.  

The problem is that right now we're doing a check against the version in the faces-config in addition to checking for the context param and the availability of the com/sun/facelets classes.  We should only be doing the latter, as the version in the faces-config should only be used for schema validation.",MYFACES-2564
"<tr:commandButton.....> a click generates this:

SEVERE: An exception occurred
javax.faces.FacesException: java.lang.NullPointerException
	at org.apache.myfaces.context.ExceptionHandlerImpl.wrap(ExceptionHandlerImpl.java:241)
	at org.apache.myfaces.context.ExceptionHandlerImpl.handle(ExceptionHandlerImpl.java:156)
	at org.apache.myfaces.lifecycle.LifecycleImpl.executePhase(LifecycleImpl.java:157)
	at org.apache.myfaces.lifecycle.LifecycleImpl.execute(LifecycleImpl.java:88)
	at javax.faces.webapp.FacesServlet.service(FacesServlet.java:189)
	at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:502)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1157)
	at org.apache.myfaces.trinidadinternal.webapp.TrinidadFilterImpl._doFilterImpl(TrinidadFilterImpl.java:247)
	at org.apache.myfaces.trinidadinternal.webapp.TrinidadFilterImpl.doFilter(TrinidadFilterImpl.java:157)
	at org.apache.myfaces.trinidad.webapp.TrinidadFilter.doFilter(TrinidadFilter.java:92)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1148)
	at org.apache.myfaces.trinidaddemo.webapp.RedirectFilter.doFilter(RedirectFilter.java:97)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1148)
	at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:387)
	at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)
	at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181)
	at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:765)
	at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:417)
	at org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:230)
	at org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)
	at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)
	at org.mortbay.jetty.Server.handle(Server.java:324)
	at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:535)
	at org.mortbay.jetty.HttpConnection$RequestHandler.content(HttpConnection.java:880)
	at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:747)
	at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:218)
	at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:404)
	at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:409)
	at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:520)
Caused by: java.lang.NullPointerException
	at org.apache.myfaces.application.ViewHandlerImpl.getViewParameterList(ViewHandlerImpl.java:297)
	at org.apache.myfaces.application.ViewHandlerImpl.getRedirectURL(ViewHandlerImpl.java:119)
	at javax.faces.application.ViewHandlerWrapper.getRedirectURL(ViewHandlerWrapper.java:121)
	at org.apache.myfaces.application.NavigationHandlerImpl.handleNavigation(NavigationHandlerImpl.java:92)
	at org.apache.myfaces.trinidadinternal.application.NavigationHandlerImpl.handleNavigation(NavigationHandlerImpl.java:49)
	at org.apache.myfaces.application.ActionListenerImpl.processAction(ActionListenerImpl.java:125)
	at org.apache.myfaces.trinidad.component.UIXCommand.broadcast(UIXCommand.java:190)
	at javax.faces.component.UIViewRoot._broadcastAll(UIViewRoot.java:878)
	at javax.faces.component.UIViewRoot.broadcastEvents(UIViewRoot.java:234)
	at javax.faces.component.UIViewRoot._process(UIViewRoot.java:1190)
	at javax.faces.component.UIViewRoot.processApplication(UIViewRoot.java:611)
	at org.apache.myfaces.lifecycle.InvokeApplicationExecutor.execute(InvokeApplicationExecutor.java:35)
	at org.apache.myfaces.lifecycle.LifecycleImpl.executePhase(LifecycleImpl.java:138)
	... 26 more
",MYFACES-2563
"Invoking this page:
https://svn.apache.org/repos/asf/myfaces/trinidad/trunk/trinidad-examples/trinidad-demo/src/main/webapp/componentDemos.jspx

with Trinidad 1.2.14 (JSF 1.2 lib) with MyFAces 2.0 (trunk) gives me this exception:

2010-02-18 09:21:35.895::WARN:  /trinidad-demo/faces/componentDemos.jspx
javax.el.PropertyNotFoundException: The class 'javax.faces.component.UIViewRoot' does not have the property 'example'.
	at javax.el.BeanELResolver.getBeanProperty(BeanELResolver.java:579)
	at javax.el.BeanELResolver.getValue(BeanELResolver.java:281)
	at javax.el.CompositeELResolver.getValue(CompositeELResolver.java:175)
	at org.apache.myfaces.el.unified.resolver.FacesCompositeELResolver.getValue(FacesCompositeELResolver.java:140)
	at com.sun.el.parser.AstValue.getValue(AstValue.java:138)
	at com.sun.el.ValueExpressionImpl.getValue(ValueExpressionImpl.java:206)
	at org.apache.myfaces.trinidad.bean.FacesBeanImpl.getProperty(FacesBeanImpl.java:66)
	at org.apache.myfaces.trinidad.component.UIXComponentBase.getBooleanProperty(UIXComponentBase.java:1275)
	at org.apache.myfaces.trinidad.component.UIXComponentBase.isRendered(UIXComponentBase.java:485)
	at org.apache.myfaces.trinidadinternal.renderkit.core.xhtml.PanelGroupLayoutRenderer._encodeChildren(PanelGroupLayoutRenderer.java:142)
	at org.apache.myfaces.trinidadinternal.renderkit.core.xhtml.PanelGroupLayoutRenderer.encodeAll(PanelGroupLayoutRenderer.java:106)
	at org.apache.myfaces.trinidad.render.CoreRenderer.encodeEnd(CoreRenderer.java:379)
	at org.apache.myfaces.trinidad.component.UIXComponentBase.encodeEnd(UIXComponentBase.java:833)
	at org.apache.myfaces.trinidad.render.CoreRenderer.encodeChild(CoreRenderer.java:459)
	at org.apache.myfaces.trinidadinternal.renderkit.core.xhtml.TreeRenderer._renderStampBasedOnAccessibilty(TreeRenderer.java:1144)
	at org.apache.myfaces.trinidadinternal.renderkit.core.xhtml.TreeRenderer.renderStampCell(TreeRenderer.java:943)
	at org.apache.myfaces.trinidadinternal.renderkit.core.xhtml.TreeRenderer._renderNode(TreeRenderer.java:804)
	at org.apache.myfaces.trinidadinternal.renderkit.core.xhtml.TreeRenderer._renderContent(TreeRenderer.java:189)
	at org.apache.myfaces.trinidadinternal.renderkit.core.xhtml.TreeRenderer.encodeAll(TreeRenderer.java:135)
	at org.apache.myfaces.trinidad.render.CoreRenderer.encodeEnd(CoreRenderer.java:379)
	at org.apache.myfaces.trinidad.component.UIXComponentBase.encodeEnd(UIXComponentBase.java:833)
	at org.apache.myfaces.trinidad.component.UIXCollection.encodeEnd(UIXCollection.java:591)
	at org.apache.myfaces.trinidad.render.CoreRenderer.encodeChild(CoreRenderer.java:459)
	at org.apache.myfaces.trinidad.render.CoreRenderer.encodeAllChildren(CoreRenderer.java:476)
	at org.apache.myfaces.trinidadinternal.renderkit.core.xhtml.PanelHeaderRenderer.encodeAll(PanelHeaderRenderer.java:133)
	at org.apache.myfaces.trinidad.render.CoreRenderer.encodeEnd(CoreRenderer.java:379)
	at org.apache.myfaces.trinidad.component.UIXComponentBase.encodeEnd(UIXComponentBase.java:833)
	at org.apache.myfaces.trinidad.render.CoreRenderer.encodeChild(CoreRenderer.java:459)
	at org.apache.myfaces.trinidad.render.CoreRenderer.encodeAllChildren(CoreRenderer.java:476)
	at org.apache.myfaces.trinidadinternal.renderkit.core.xhtml.PanelHeaderRenderer.encodeAll(PanelHeaderRenderer.java:133)
	at org.apache.myfaces.trinidad.render.CoreRenderer.encodeEnd(CoreRenderer.java:379)
	at org.apache.myfaces.trinidad.component.UIXComponentBase.encodeEnd(UIXComponentBase.java:833)
	at org.apache.myfaces.trinidadinternal.uinode.UIComponentUINode._renderComponent(UIComponentUINode.java:337)
	at org.apache.myfaces.trinidadinternal.uinode.UIComponentUINode.render(UIComponentUINode.java:279)
	at org.apache.myfaces.trinidadinternal.uinode.UIComponentUINode.render(UIComponentUINode.java:256)
	at org.apache.myfaces.trinidadinternal.ui.composite.ContextPoppingUINode$ContextPoppingRenderer.render(ContextPoppingUINode.java:240)
	at org.apache.myfaces.trinidadinternal.ui.BaseUINode.render(BaseUINode.java:358)
	at org.apache.myfaces.trinidadinternal.ui.BaseUINode.render(BaseUINode.java:313)
	at org.apache.myfaces.trinidadinternal.ui.BaseRenderer.renderChild(BaseRenderer.java:425)
	at org.apache.myfaces.trinidadinternal.ui.BaseRenderer.renderIndexedChild(BaseRenderer.java:343)
	at org.apache.myfaces.trinidadinternal.ui.BaseRenderer.renderIndexedChild(BaseRenderer.java:235)
	at org.apache.myfaces.trinidadinternal.ui.BaseRenderer.renderContent(BaseRenderer.java:142)
	at org.apache.myfaces.trinidadinternal.ui.BaseRenderer.render(BaseRenderer.java:93)
	at org.apache.myfaces.trinidadinternal.ui.laf.base.xhtml.XhtmlLafRenderer.render(XhtmlLafRenderer.java:85)
	at org.apache.myfaces.trinidadinternal.ui.BaseUINode.render(BaseUINode.java:358)
	at org.apache.myfaces.trinidadinternal.ui.BaseUINode.render(BaseUINode.java:313)
	at org.apache.myfaces.trinidadinternal.ui.BaseRenderer.renderChild(BaseRenderer.java:425)
	at org.apache.myfaces.trinidadinternal.ui.BaseRenderer.renderIndexedChild(BaseRenderer.java:343)
	at org.apache.myfaces.trinidadinternal.ui.BaseRenderer.renderIndexedChild(BaseRenderer.java:235)
	at org.apache.myfaces.trinidadinternal.ui.BaseRenderer.renderContent(BaseRenderer.java:142)
	at org.apache.myfaces.trinidadinternal.ui.BaseRenderer.render(BaseRenderer.java:93)
	at org.apache.myfaces.trinidadinternal.ui.laf.base.xhtml.XhtmlLafRenderer.render(XhtmlLafRenderer.java:85)
	at org.apache.myfaces.trinidadinternal.ui.BaseUINode.render(BaseUINode.java:358)
	at org.apache.myfaces.trinidadinternal.ui.BaseUINode.render(BaseUINode.java:313)
	at org.apache.myfaces.trinidadinternal.ui.BaseRenderer.renderChild(BaseRenderer.java:425)
	at org.apache.myfaces.trinidadinternal.ui.BaseRenderer.renderIndexedChild(BaseRenderer.java:343)
	at org.apache.myfaces.trinidadinternal.ui.BaseRenderer.renderIndexedChild(BaseRenderer.java:235)
	at org.apache.myfaces.trinidadinternal.ui.BaseRenderer.renderContent(BaseRenderer.java:142)
	at org.apache.myfaces.trinidadinternal.ui.laf.base.xhtml.BorderLayoutRenderer.renderIndexedChildren(BorderLayoutRenderer.java:56)
	at org.apache.myfaces.trinidadinternal.ui.laf.base.xhtml.BorderLayoutRenderer.renderContent(BorderLayoutRenderer.java:86)
	at org.apache.myfaces.trinidadinternal.ui.BaseRenderer.render(BaseRenderer.java:93)
	at org.apache.myfaces.trinidadinternal.ui.laf.base.xhtml.XhtmlLafRenderer.render(XhtmlLafRenderer.java:85)
	at org.apache.myfaces.trinidadinternal.ui.BaseUINode.render(BaseUINode.java:358)
	at org.apache.myfaces.trinidadinternal.ui.BaseUINode.render(BaseUINode.java:313)
	at org.apache.myfaces.trinidadinternal.ui.BaseRenderer.renderChild(BaseRenderer.java:425)
	at org.apache.myfaces.trinidadinternal.ui.BaseRenderer.renderIndexedChild(BaseRenderer.java:343)
	at org.apache.myfaces.trinidadinternal.ui.BaseRenderer.renderIndexedChild(BaseRenderer.java:235)
	at org.apache.myfaces.trinidadinternal.ui.BaseRenderer.renderContent(BaseRenderer.java:142)
	at org.apache.myfaces.trinidadinternal.ui.BaseRenderer.render(BaseRenderer.java:93)
	at org.apache.myfaces.trinidadinternal.ui.laf.base.xhtml.XhtmlLafRenderer.render(XhtmlLafRenderer.java:85)
	at org.apache.myfaces.trinidadinternal.ui.BaseUINode.render(BaseUINode.java:358)
	at org.apache.myfaces.trinidadinternal.ui.BaseUINode.render(BaseUINode.java:313)
	at org.apache.myfaces.trinidadinternal.ui.composite.UINodeRenderer.renderWithNode(UINodeRenderer.java:104)
	at org.apache.myfaces.trinidadinternal.ui.composite.UINodeRenderer.render(UINodeRenderer.java:50)
	at org.apache.myfaces.trinidadinternal.uinode.UIXComponentUINode.renderInternal(UIXComponentUINode.java:192)
	at org.apache.myfaces.trinidadinternal.uinode.UINodeRendererBase.encodeEnd(UINodeRendererBase.java:70)
	at org.apache.myfaces.trinidad.component.UIXComponentBase.encodeEnd(UIXComponentBase.java:833)
	at org.apache.myfaces.trinidad.render.RenderUtils.encodeRecursive(RenderUtils.java:70)
	at org.apache.myfaces.trinidad.render.CoreRenderer.encodeChild(CoreRenderer.java:454)
	at org.apache.myfaces.trinidad.render.CoreRenderer.encodeAllChildren(CoreRenderer.java:476)
	at org.apache.myfaces.trinidadinternal.renderkit.core.xhtml.PanelPartialRootRenderer.renderContent(PanelPartialRootRenderer.java:69)
	at org.apache.myfaces.trinidadinternal.renderkit.core.xhtml.BodyRenderer.renderContent(BodyRenderer.java:142)
	at org.apache.myfaces.trinidadinternal.renderkit.core.xhtml.PanelPartialRootRenderer.encodeAll(PanelPartialRootRenderer.java:151)
	at org.apache.myfaces.trinidadinternal.renderkit.core.xhtml.BodyRenderer.encodeAll(BodyRenderer.java:78)
	at org.apache.myfaces.trinidad.render.CoreRenderer.delegateRenderer(CoreRenderer.java:490)
	at org.apache.myfaces.trinidadinternal.renderkit.core.xhtml.DocumentRenderer.encodeAll(DocumentRenderer.java:80)
	at org.apache.myfaces.trinidad.render.CoreRenderer.encodeEnd(CoreRenderer.java:379)
	at org.apache.myfaces.trinidad.component.UIXComponentBase.encodeEnd(UIXComponentBase.java:833)
	at org.apache.myfaces.trinidad.component.UIXComponentBase.__encodeRecursive(UIXComponentBase.java:1583)
	at org.apache.myfaces.trinidad.component.UIXComponentBase.encodeAll(UIXComponentBase.java:853)
	at javax.faces.component.UIComponent.encodeAll(UIComponent.java:608)
	at org.apache.myfaces.shared_impl.view.JspViewDeclarationLanguageBase.actuallyRenderView(JspViewDeclarationLanguageBase.java:202)
	at org.apache.myfaces.shared_impl.view.JspViewDeclarationLanguageBase.renderView(JspViewDeclarationLanguageBase.java:132)
	at org.apache.myfaces.application.ViewHandlerImpl.renderView(ViewHandlerImpl.java:231)
	at javax.faces.application.ViewHandlerWrapper.renderView(ViewHandlerWrapper.java:59)
	at org.apache.myfaces.trinidadinternal.application.ViewHandlerImpl.renderView(ViewHandlerImpl.java:193)
	at org.apache.myfaces.lifecycle.RenderResponseExecutor.execute(RenderResponseExecutor.java:107)
	at org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:201)
	at javax.faces.webapp.FacesServlet.service(FacesServlet.java:191)
	at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:502)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1157)
	at org.apache.myfaces.trinidadinternal.webapp.TrinidadFilterImpl._doFilterImpl(TrinidadFilterImpl.java:247)
	at org.apache.myfaces.trinidadinternal.webapp.TrinidadFilterImpl.doFilter(TrinidadFilterImpl.java:157)
	at org.apache.myfaces.trinidad.webapp.TrinidadFilter.doFilter(TrinidadFilter.java:92)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1148)
	at org.apache.myfaces.trinidaddemo.webapp.RedirectFilter.doFilter(RedirectFilter.java:97)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1148)
	at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:387)
	at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)
	at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181)
	at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:765)
	at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:417)
	at org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:230)
	at org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)
	at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)
	at org.mortbay.jetty.Server.handle(Server.java:324)
	at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:535)
	at org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:865)
	at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:539)
	at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:212)
	at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:404)
	at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:409)
	at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:520)

",MYFACES-2562
"If you use another composite component in your composite component's implementation you will get a StackOverflowError.

javax.faces.FacesException: java.lang.StackOverflowError
	at org.apache.myfaces.context.ExceptionHandlerImpl.wrap(ExceptionHandlerImpl.java:241)
	at org.apache.myfaces.context.ExceptionHandlerImpl.handle(ExceptionHandlerImpl.java:156)
	at org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:216)
	at javax.faces.webapp.FacesServlet.service(FacesServlet.java:191)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:128)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:293)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:849)
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:583)
	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:454)
	at java.lang.Thread.run(Thread.java:637)
Caused by: java.lang.StackOverflowError
	at java.util.ArrayList.toArray(ArrayList.java:306)
	at java.util.logging.Logger.getHandlers(Logger.java:1200)
	at java.util.logging.LogManager$RootLogger.getHandlers(LogManager.java:1019)
	at java.util.logging.Logger.log(Logger.java:454)
	at java.util.logging.Logger.doLog(Logger.java:480)
	at java.util.logging.Logger.logp(Logger.java:680)
	at org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:167)
	at org.apache.juli.logging.DirectJDKLog.error(DirectJDKLog.java:135)
	at org.apache.catalina.connector.Request.setAttribute(Request.java:1448)
	at org.apache.catalina.connector.RequestFacade.setAttribute(RequestFacade.java:503)
	at org.apache.myfaces.context.servlet.RequestMap.setAttribute(RequestMap.java:53)
	at org.apache.myfaces.util.AbstractAttributeMap.put(AbstractAttributeMap.java:113)
	at org.apache.myfaces.util.AbstractAttributeMap.put(AbstractAttributeMap.java:1)
	at org.apache.myfaces.el.unified.resolver.FacesCompositeELResolver.setScope(FacesCompositeELResolver.java:191)
	at org.apache.myfaces.el.unified.resolver.FacesCompositeELResolver.getValue(FacesCompositeELResolver.java:139)
	at org.apache.el.parser.AstIdentifier.getValue(AstIdentifier.java:61)
	at org.apache.el.parser.AstValue.getValue(AstValue.java:107)
	at org.apache.el.ValueExpressionImpl.getValue(ValueExpressionImpl.java:186)
	at org.apache.myfaces.view.facelets.el.TagValueExpression.getValue(TagValueExpression.java:84)
	at org.apache.myfaces.el.unified.resolver.CompositeComponentELResolver$CompositeComponentAttributesMapWrapper.get(CompositeComponentELResolver.java:245)
	at javax.el.MapELResolver.getValue(MapELResolver.java:51)
	at javax.el.CompositeELResolver.getValue(CompositeELResolver.java:54)
	at org.apache.myfaces.el.unified.resolver.FacesCompositeELResolver.getValue(FacesCompositeELResolver.java:140)
	at org.apache.el.parser.AstValue.getValue(AstValue.java:118)
	at org.apache.el.ValueExpressionImpl.getValue(ValueExpressionImpl.java:186)
	at org.apache.myfaces.view.facelets.el.TagValueExpression.getValue(TagValueExpression.java:84)
	at org.apache.myfaces.el.unified.resolver.CompositeComponentELResolver$CompositeComponentAttributesMapWrapper.get(CompositeComponentELResolver.java:245)
	at javax.el.MapELResolver.getValue(MapELResolver.java:51)
	at javax.el.CompositeELResolver.getValue(CompositeELResolver.java:54)
	at org.apache.myfaces.el.unified.resolver.FacesCompositeELResolver.getValue(FacesCompositeELResolver.java:140)
	at org.apache.el.parser.AstValue.getValue(AstValue.java:118)
	at org.apache.el.ValueExpressionImpl.getValue(ValueExpressionImpl.java:186)
	at org.apache.myfaces.view.facelets.el.TagValueExpression.getValue(TagValueExpression.java:84)
	at org.apache.myfaces.el.unified.resolver.CompositeComponentELResolver$CompositeComponentAttributesMapWrapper.get(CompositeComponentELResolver.java:245)
	at javax.el.MapELResolver.getValue(MapELResolver.java:51)
	at javax.el.CompositeELResolver.getValue(CompositeELResolver.java:54)
	at org.apache.myfaces.el.unified.resolver.FacesCompositeELResolver.getValue(FacesCompositeELResolver.java:140)
	at org.apache.el.parser.AstValue.getValue(AstValue.java:118)
	at org.apache.el.ValueExpressionImpl.getValue(ValueExpressionImpl.java:186)
	at org.apache.myfaces.view.facelets.el.TagValueExpression.getValue(TagValueExpression.java:84)
	at org.apache.myfaces.el.unified.resolver.CompositeComponentELResolver$CompositeComponentAttributesMapWrapper.get(CompositeComponentELResolver.java:245)
	at javax.el.MapELResolver.getValue(MapELResolver.java:51)
	at javax.el.CompositeELResolver.getValue(CompositeELResolver.java:54)
	at org.apache.myfaces.el.unified.resolver.FacesCompositeELResolver.getValue(FacesCompositeELResolver.java:140)
	at org.apache.el.parser.AstValue.getValue(AstValue.java:118)
......
......",MYFACES-2561
"On Jsp2.0 environment using Myfaces 2.0 beta, users should provide the
ExpressionFactory implementation.
And if Jasper EL Impl or Sun's RI is available on the classpath, they are
automatically set.
However, impl class name of RI may be wrong.
Until revision 761982, it was ""com.sun.el.ExpressionFactoryImpl"", which is
correct class name.
Then it became ""com.sun.facelets.el.ExpressionFactoryImpl"", that I couldn't
find anywhere (spec, facelets.dev.java.net, etc. )

Is this change correct?

You can see the code on Jsp20FacesInitializer#EL_RI_EXPRESSION_FACTORY_IMPL.

It is still ""com.sun.el.ExpressionFactoryImpl"" on Myfaces 1.2.8.

It is not big deal, I can override it with a context parameter; but running
Myfaces out-of-the-box is important :)
",MYFACES-2560
Google App Engine Support for Myfaces 2,MYFACES-2559
"If you have a <composite:attribute> with name  action, actionListener, validator or valueChangeListener the attribute method-signature does not need to be provided, because it is already know by the system. Furthermore you are not able to specify the right method-signature for actionListener and valueChangeListener since they now can receive one parameter or also zero parameters (see MYFACES-2541 for details).",MYFACES-2558
"When an AbortProcessingException happens (e.g. by a MethodNotFoundException in MethodExpressionActionListener.processAction()), the processing is stopped, but the Exception is not handled by the ExceptionHandler. Thus nothing happens and you don't get an error message. Very confusing!",MYFACES-2557
Testing the actionListener attribute on a composite component I noticed that the invocation does not work. Debugging the error I found out that MethodExpressionActionListener.processAction() gets a MethodNotFoundException because the wrong ActionEvent class is used when creating the MethodExpression in FaceletViewDeclarationLanguage.retargetMethodExpressions().,MYFACES-2556
org.apache.myfaces.config.annotation.LifecycleProvider context parameter is ignored.,MYFACES-2555
"See this thread:

http://markmail.org/message/p3wjlge73qhdkhse

looks like the ""official"" online version of the XSD is outdated. Not sure when (and what RI/SPEC bug?) they added the things.
At least we don't have the ""method-signature"" in our version.",MYFACES-2554
There are currently problems when <composite:attribute> refers to a MethodExpression.,MYFACES-2553
"if you have a facelets composite component with an attribute ""test"" that points to a property in a managed bean (e.g. #{myBean.property}) which is currently null and you refer to that attribute in the implementation via #{cc.attrs.test} you can get the current value (null) or set a new value but you cannot get the type of the property (e.g. String[]). However if the property in the managed bean is non-null you can get the type.

For example:

<cc:interface name=""mycomponent"">
    <cc:attribute name=""test"" required=""true""/>
</cc:interface>
<cc:implementation>
    <h:selectManyListbox value=""#{cc.attrs.test}"">
        <f:selectItems value=""#{some select items}""/>
    </h:selectManyListbox>
</cc:implementation>

--> calling #{cc.attrs.test}.getType() will fail if #{cc.attrs.test} resolves to null, but will work if #{cc.attrs.test} resolves to some valid value.

This currently results in a NullPointerException in _SharedRendererUtils.getConvertedUISelectManyValue().",MYFACES-2552
"Pages starting like this:

<!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Transitional//EN""
        ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"">
<html xmlns=""http://www.w3.org/1999/xhtml""
      xmlns:h=""http://java.sun.com/jsf/html""
      xmlns:f=""http://java.sun.com/jsf/core""
      xmlns:ui=""http://java.sun.com/jsf/facelets"">
<f:view contentType=""text/html; charset=iso-8859-1""/>

are not rendered. If we remove charset=iso-8859-1, it works again.",MYFACES-2551
"The AnnotationConfigurator.configure() code attempts to obtain the myfaces impl jar (by looking up META-INF/standard-faces-config.xml resource) and scans it for certain annotations.

This does not work in OSGi environment because of two issues: 1) the getMyfacesImplJarFile() uses context class loader to lookup the resource which most likely will return null, and 2) even if that method successfully looked up that resource, it won't be able to get a JarFile out it. That's because the url returned from resource lookup in OSGi environment can't be considered as a url to a jar file.

However, now I'm wondering if the annotation scanning of myfaces impl jar is needed at all. None of the classes within the jar have any of the annotations that the code is looking for... 
",MYFACES-2550
A ValueChangeListener method can now also take no arguments (see javadoc for MethodExpressionValueChangeListener for details),MYFACES-2549
"MyFaces uses context class loader to lookup META-INF resources. This works fine in a regular Java environment but breaks in OSGi. One easy solution for this would be to first ask the CCL for the resource and if none is found ask the surrounding class class loader for that resource (assuming the resource we are looking for lives in the same jar as the class loading it), i.e.:

URL foo = getContextClassLoader().getResource(""META-INF/foo"");
if (foo == null) {
  foo = getClass().getClassLoader().getResource(""META-INF/foo"");
}

There are a few places in MyFaces code that would need to be updated to use this fallback approach. For example in IncludeHandler.java and ErrorPageWriter.java.

I also noticed that for some reason the myfaces-dev-debug.xml and myfaces-dev-error.xml live in the api module. They seem to be only used the impl module so they shouldn't really be needed in the api module. 

",MYFACES-2548
"Reported in MYFACES-2537 by Martin Koci:

Current implementation does not solve this situation:
2) JSF 2.0 library named cz_markoc_faces
1) JSF 1.2 library (without name - it is the OpenWebBeans JSF integration)

My library is feeded 2x and OWB never - but I think this is caused with badly written if-condition, please see MYFACES-2537-FacesConfigurator.patch for details. ",MYFACES-2547
"<h:selectOneMenu>
        <f:selectItems value=""#{model.selectItemsWithNonStringValue}"" />
</h:selectOneMenu>

if SelectItem.getValue() returns other type than String and there is no converter for that type, myfaces throw exception: java.lang.IllegalArgumentException: Value is no String
at org.apache.myfaces.shared_impl.renderkit.RendererUtils.getConvertedStringValue(RendererUtils.java:633)
	at org.apache.myfaces.shared_impl.renderkit.RendererUtils.getConvertedStringValue(RendererUtils.java:652)
	at org.apache.myfaces.shared_impl.renderkit.html.HtmlRendererUtils.renderSelectOptions(HtmlRendererUtils.java:538)


RI does not throw a exception but with quietness outputs toString() as <option> value.",MYFACES-2546
"Copied from the mail from Ed Burns:

PROPOSAL

This will *not* go in the spec, but I propose that existing JSF
implementation coordinate and implement the following behavior.

We introduce a System Property

faces.PROJECT_STAGE

 Rationale for using this name: the context-param for this property is
 ""javax.faces.PROJECT_STAGE"".  I chose not to use the ""javax."" prefix
 because doing so would be in poor taste.  The ""javax.""  prefix is
 intended for things in the specification proper.

 The valid values of this property are exactly as specified in section
 11.1.3.  If the System Property is not one of the valid values, the
 other sources for a value for this property are consulted.

 The implementation will interpret this property as an override for all
 other ways of setting the Application.getProjectStage() property.

In addition to the preceding proposal, the implementation will print out
a very prominent log message such as:

********************************************************************
*** WARNING: JavaServer Faces is running in DEVELOPMENT mode.    ***
***                                         ^^^^^^^^^^^          ***
*** Do NOT deploy to your live server(s) without changing this.  ***
*** See Application#getProjectStage() for more information.      ***
********************************************************************",MYFACES-2545
"javax.faces.component.UIViewRoot.encodeBegin(FacesContext) contains:

if (!skipPhase) {
   super.encodeBegin(context);
}

but skipPhase = context.getRenderResponse() || context.getResponseComplete() - it
makes sense for all phases except render response phase itself. That condition
probably should be:

if (!context.getResponseComplete()) {
            super.encodeBegin(context);
}",MYFACES-2544
"Facelets taglibs defined according to the spec 10.3.2 are not recognized.

This page uses a test taglib (see attachment):

<!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Transitional//EN""
        ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"">
<html xmlns=""http://www.w3.org/1999/xhtml""
      xmlns:f=""http://java.sun.com/jsf/core""
      xmlns:h=""http://java.sun.com/jsf/html""
      xmlns:ui=""http://java.sun.com/jsf/facelets""
      xmlns:test=""http://j4fry.org/test"">
	<body>
		<test:button />
	</body>
</html>

but test:button is not resolved...",MYFACES-2543
"if  <f:selectItems  value=""#{aNonExistentModel}"" /> resolves in runtime to null a expection is throw. But having no SelectItem(s) is legal and this state should not breaks view processing/rendering.  JSF RI  handles this situation without a exception.

",MYFACES-2542
With JSF 2.0 is possible to have actionListener method without ActionEvent param: https://javaserverfaces.dev.java.net/nonav/docs/2.0/javadocs/javax/faces/event/MethodExpressionActionListener.html#MethodExpressionActionListener,MYFACES-2541
Facelets server state saving does not work:  StateManager.saveView in not called during ViewDeclarationLanguage.renderView in case of server state saving. Please  see attached patch for details.,MYFACES-2540
"nesting setPropertyActionListener like this:

<html xmlns=""http://www.w3.org/1999/xhtml""
      xmlns:f=""http://java.sun.com/jsf/core""
      xmlns:h=""http://java.sun.com/jsf/html""
      xmlns:test=""http://j4fry.org/test""
      xmlns:ui=""http://java.sun.com/jsf/facelets"">   
	<body>
		<h:form>
			<test:button value=""test"">
				<f:setPropertyActionListener value=""test"" target=""#{myBean.test}"" />
			</test:button>
			#{myBean.test}
		</h:form>
	</body>
</html>

produces this error:

<f:setPropertyActionListener> Parent is not composite component or of type ActionSource, type is: javax.faces.component.html.HtmlForm@366ef7ba

When using this taglib.xml and tag from doc-root/META-INF:

<!DOCTYPE facelet-taglib PUBLIC
  ""-//Sun Microsystems, Inc.//DTD Facelet Taglib 1.0//EN""
  ""http://java.sun.com/dtd/facelet-taglib_1_0.dtd"">
<facelet-taglib>
	<namespace>http://j4fry.org/test</namespace>
	<tag>
		<tag-name>button</tag-name>
		<source>button.xhtml</source>
	</tag>
</facelet-taglib>

<html xmlns=""http://www.w3.org/1999/xhtml""
      xmlns:f=""http://java.sun.com/jsf/core""
      xmlns:h=""http://java.sun.com/jsf/html""
      xmlns:ui=""http://java.sun.com/jsf/facelets"">
      <ui:composition>   
		<h:commandButton value=""test"">
			<ui:insert />
		</h:commandButton>
      </ui:composition> 
</html>",MYFACES-2539
"Martin Koci From dev list:

""...during  profiling YourKitProfiler always marks
org.apache.myfaces.resource.ClassLoaderResourceLoader.getLibraryVersion(String) as hotspot - that method always takes 30--50% CPU time per one request/response. Is it a known problem? I will provide more information later....""

Answer from Leonardo:

""....Yes, that one is a big problem. There is no way to ""traverse"" a jar file without iterating over all entries to get the library version and resource version. That means the current algorithm do that all times a resource is rendered. This is really bad.

I remember someone commented that on jsr-314-open at jcp.org mailing list, and checking the latest ri code (2.0.2-b10), library and resource version feature was removed. It seems a decision was taken there.

Checking more, the topic describing this is:

[jsr-314-open] Need guidance: invalid assumptions in design of resource versioning feature

We should change our algorithm too to prevent this performance problem.....""

This one is critical to be solved before release beta 2, because it cause a really seriour performance problem.
",MYFACES-2538
"Curtiss Howard put this comment on dev list

FacesConfigurator.sortRelativeOrderingList() is failing on a rather
simple case:

A after B
B before C
C before A

The expected faces-config ordering is B-C-A, but instead
sortRelativeOrderingList() is detecting a circularity.

The algorithm proposed fails because it is not able to process the nodes in the correct order (the algorithm assign a weight equal to all nodes, so it fails when try to order them in a psedo ""postorder"" form).

It is faster and better try another algorithm. The current one works in all tests done at this moment but this case makes it fail without any possible workaround.",MYFACES-2537
"With JSF 2.0 attributes converterId resp. validatorId (tags f:converter resp. f:validator) aren't required. See:
https://javaserverfaces.dev.java.net/nonav/docs/2.0/pdldocs/facelets/f/converter.html
https://javaserverfaces.dev.java.net/nonav/docs/2.0/pdldocs/facelets/f/validator.html


",MYFACES-2536
"view params are not currently being handled properly due to an ordering issue in DigesterFacesConfigUnmarshallerImpl.  We were calling addSetNext and addCallMethod on ""faces-config/navigation-rule/navigation-case/redirect/view-param"" prior to addObjectCreate.  addObjectCreate needs to be called first.  ",MYFACES-2535
"Old behavior must be preserved, otherwise some components like t:tree2 will not work correctly. This fix the other problem in TOMAHAWK-1486",MYFACES-2534
"There are components that are added/removed on render response time that needs to be saved. I we call before render response, the result is this components are not saved on the tree and cause some components like t:tree not work correctly.

It seems this was changed when we move the code from facelets, but the original implementation of FaceletViewHandler shows the place where this call should be done, so I'll just restore the code as originally was.",MYFACES-2533
see TOMAHAWK-1484 for details,MYFACES-2532
"JSF 2.0 specify new name/library attributes for h:graphicImage, h:outputStylesheet and h:outputScript. But current JSF RI implementation supports name/library even on h:commandButton (and maybe others - h:button for example ?). That is very useful feature which allows complex EL like:

 <h:commandButton name=""#{resourceBean.fileName}.#{extensions.extension}"" library=""#{otherBean.libraryName}/foo/bar/#{randomLibraryName}"".

Supporting this hidden feature enables easy migration from RI to myfaces too.


",MYFACES-2531
"The code dealing with this was removed, but could be custom component instances extending from ActionSource instead ActionSource2, so to keep them compatible it is better to rollback the previous code (without the check el stuff).",MYFACES-2530
"use of view-param in faces-config causes a NoSuchMethodExcepion for addViewParam

I think the error occurs because of config in DigesterFacesConfigUnmarshallerImpl.java at the following lines:

digester.addObjectCreate(""faces-config/navigation-rule/navigation-case/redirect"", Redirect.class);
digester.addSetNext(""faces-config/navigation-rule/navigation-case/redirect"", ""setRedirect"");
digester.addSetNext(""faces-config/navigation-rule/navigation-case/redirect/view-param"", ""addViewParam"");
digester.addCallMethod(""faces-config/navigation-rule/navigation-case/redirect/include-view-params"", ""setIncludeViewParams"", 0);
digester.addObjectCreate(""faces-config/navigation-rule/navigation-case/redirect/view-param"", ViewParam.class);
digester.addSetNext(""faces-config/navigation-rule/navigation-case/redirect/view-param"", ""addViewParam"");

In my opionen the first ""addViewParam"" line should be deleted.

It should looks like this:

digester.addObjectCreate(""faces-config/navigation-rule/navigation-case/redirect"", Redirect.class);
digester.addSetNext(""faces-config/navigation-rule/navigation-case/redirect"", ""setRedirect"");
digester.addCallMethod(""faces-config/navigation-rule/navigation-case/redirect/include-view-params"", ""setIncludeViewParams"", 0);
digester.addObjectCreate(""faces-config/navigation-rule/navigation-case/redirect/view-param"", ViewParam.class);
digester.addSetNext(""faces-config/navigation-rule/navigation-case/redirect/view-param"", ""addViewParam"");
",MYFACES-2529
"Setting the validation groups of a bean validator like <f:validateBean validationGroups=""#{bean.groups}""/> is not always working correctly with PSS. Property bean.groups returns null or the class name of a validation group in my example based on the value of a boolean checkbox:

<h:selectBooleanCheckbox value=""#{bean.prop1}""
    valueChangeListener=""#{bean.prop1Changed}""
    immediate=""true"" onclick=""this.form.submit()""/>
<h:inputText value=""#{bean.prop2}"" rendered=""#{bean.prop1}"">
  <f:validateBean validationGroups=""#{bean.groups}""/>
</h:inputText>

If I check the boolean checkbox the form is submitted and rendered again with the additional input field. The problem now is that the validation groups are set correctly on building the view during the second traversal of the lifecycle before restoring the state. But on restoring the validator this value is overwritten with the old value from the state and my validation group is gone again.

As the BeanValidator is a PartialStateHolder this can be avoided by only saving and restoring the state if the initial state was not marked.
",MYFACES-2528
"Spec. ""11.4.6 Delegating Implementation Support"" - ""The runtime must support the decorator design pattern .. for .. RenderKit"". This is especially true for HTML_BASIC, following example should work:

faces-config.xml
<render-kit>
    <render-kit-class>com.foo.render.RenderKitImpl</render-kit-class>
    <render-kit-id>HTML_BASIC</render-kit-id>
</render-kit>

RenderKitImpl:
class RenderKitImpl extends RenderKit implements FacesWrapper<RenderKit> {
  public RenderKitImpl(RenderKit wrapped) {
    super();
    this.wrapped = wrapped;
  }
  // method delegation here ...
}",MYFACES-2527
"Currently DefaultResourceResolver in myfaces implements a interface ResourceResolver from o.a.m.v.f.i  (probably copy from old facelts 1.x). 
JSF 2.0 introduce javax.faces.view.facelets.ResourceResolver as base class for all ResourceResolvers. Specification ""11.1.3 Application Configuration Parameters"" describes it.

Make ResourceResolver from o.a.m.v.f.i deprecated (or delete it) and modify facelts stuff for using javax.faces ResourceResolver + add support for decorator pattern.

",MYFACES-2526
"Right now both api and impl modules claim to export javax.faces package. That's a problem in OSGi environment and actually causes classloading problems. The impl module exports javax.faces package since it contains resource bundles for javax.faces package. Moving the resource bundles to the api module does resolve the OSGi problem and I saw no failures when building the code. I'm building https://svn.apache.org/repos/asf/myfaces/core/trunk.


",MYFACES-2525
"Currently ExternalSpecifications is using public static final fields to hold the information if something is available or not (e.g. bean validation). However, this is problematic for automated testing, because the value can not be adapted for the test case (not even with reflection).",MYFACES-2524
"This most basic page:

<!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Transitional//EN""
       ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"">
<html xmlns=""http://www.w3.org/1999/xhtml""
     xmlns:h=""http://java.sun.com/jsf/html""
     xmlns:f=""http://java.sun.com/jsf/core""
     xmlns:ui=""http://java.sun.com/jsf/facelets"">
<body>
	<h:form>
		<h:commandButton value=""test"">
		</h:commandButton>
   </h:form>
</body>
</html>

yields a security exception:

java.security.NoSuchAlgorithmException: Cannot find any provider supporting DES/ECB/PKCS5Padding

when creating a minimal project that only contains the files from 2.0.0-beta. I'll attach a war to demonstrate
the bug.",MYFACES-2523
"As it seems f:event uses a wrong (probably old) attribute name:
<f:event name=""postAddToView""
             listener=""#{javatestbean.validate}""/> works
but in reality according to the spec section 3.4.3.4 it should be 

<f:event type=""postAddToView""
             listener=""#{javatestbean.validate}""/>

and that one causes a classNotFound error
",MYFACES-2522
"running the Trinidad demo (clientBehavior demo), I see this exception:

javax.faces.view.facelets.TagException: /demos/clientBehaviorHolder.xhtmlat line 59 and column 82 <trd:invokeFunctionBehavior> Parent not composite component or an instance of ClientBehaviorHolder: javax.faces.component.UIViewRoot@19f5e3f
	at org.apache.myfaces.view.facelets.tag.jsf.BehaviorTagHandlerDelegate.apply(BehaviorTagHandlerDelegate.java:85)
	at javax.faces.view.facelets.DelegatingMetaTagHandler.apply(DelegatingMetaTagHandler.java:54)
	at javax.faces.view.facelets.CompositeFaceletHandler.apply(CompositeFaceletHandler.java:51)
	at org.apache.myfaces.view.facelets.tag.ui.CompositionHandler.apply(CompositionHandler.java:150)
	at org.apache.myfaces.view.facelets.compiler.NamespaceHandler.apply(NamespaceHandler.java:57)
	at org.apache.myfaces.view.facelets.compiler.EncodingHandler.apply(EncodingHandler.java:45)
	at org.apache.myfaces.view.facelets.impl.DefaultFacelet.apply(DefaultFacelet.java:103)
	at org.apache.myfaces.view.facelets.FaceletViewDeclarationLanguage.buildView(FaceletViewDeclarationLanguage.java:271)
	at org.apache.myfaces.lifecycle.RenderResponseExecutor.execute(RenderResponseExecutor.java:88)
	at org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:201)
	at javax.faces.webapp.FacesServlet.service(FacesServlet.java:191)
	at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:511)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1166)
	at org.apache.myfaces.trinidadinternal.webapp.TrinidadFilterImpl._doFilterImpl(TrinidadFilterImpl.java:247)
	at org.apache.myfaces.trinidadinternal.webapp.TrinidadFilterImpl.doFilter(TrinidadFilterImpl.java:157)
	at org.apache.myfaces.trinidad.webapp.TrinidadFilter.doFilter(TrinidadFilter.java:92)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1157)
	at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:388)
	at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)
	at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:182)
	at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:765)
	at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:418)
	at org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:230)
	at org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)
	at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)
	at org.mortbay.jetty.Server.handle(Server.java:326)
	at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:536)
	at org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:915)
	at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:539)
	at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:212)
	at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:405)
	at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:409)
	at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:582)

",MYFACES-2521
"SEVERE: 
java.lang.UnsupportedOperationException: This request class is an empty placeholder
	at org.apache.myfaces.application._SystemEventServletRequest$1.invoke(_SystemEventServletRequest.java:56)
	at $Proxy0.getContentType(Unknown Source)
	at javax.servlet.ServletRequestWrapper.getContentType(ServletRequestWrapper.java:145)
	at org.apache.myfaces.context.servlet.ServletExternalContextImpl.getRequestContentType(ServletExternalContextImpl.java:322)
	at org.apache.myfaces.trinidad.util.ExternalContextUtils.getContentType(ExternalContextUtils.java:341)
	at org.apache.myfaces.trinidadinternal.share.util.MultipartFormHandler.isMultipartRequest(MultipartFormHandler.java:57)
	at org.apache.myfaces.trinidadinternal.config.upload.FileUploadConfiguratorImpl.beginRequest(FileUploadConfiguratorImpl.java:109)
	at org.apache.myfaces.trinidadinternal.config.GlobalConfiguratorImpl._startConfiguratorServiceRequest(GlobalConfiguratorImpl.java:532)
	at org.apache.myfaces.trinidadinternal.config.GlobalConfiguratorImpl.beginRequest(GlobalConfiguratorImpl.java:211)
	at org.apache.myfaces.trinidadinternal.config.GlobalConfiguratorImpl.getExternalContext(GlobalConfiguratorImpl.java:327)
	at org.apache.myfaces.trinidadinternal.context.FacesContextFactoryImpl$CacheRenderKit.<init>(FacesContextFactoryImpl.java:90)
	at org.apache.myfaces.trinidadinternal.context.FacesContextFactoryImpl.getFacesContext(FacesContextFactoryImpl.java:68)
	at org.apache.myfaces.webapp.AbstractFacesInitializer.dispatchInitDestroyEvent(AbstractFacesInitializer.java:140)
	at org.apache.myfaces.webapp.AbstractFacesInitializer.initFaces(AbstractFacesInitializer.java:109)
	at org.apache.myfaces.webapp.StartupServletContextListener.contextInitialized(StartupServletContextListener.java:155)
	at org.mortbay.jetty.handler.ContextHandler.startContext(ContextHandler.java:548)
	at org.mortbay.jetty.servlet.Context.startContext(Context.java:136)
	at org.mortbay.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1250)
	at org.mortbay.jetty.handler.ContextHandler.doStart(ContextHandler.java:517)
	at org.mortbay.jetty.webapp.WebAppContext.doStart(WebAppContext.java:467)
	at org.mortbay.jetty.plugin.Jetty6PluginWebAppContext.doStart(Jetty6PluginWebAppContext.java:115)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)
	at org.mortbay.jetty.handler.HandlerCollection.doStart(HandlerCollection.java:152)
	at org.mortbay.jetty.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:156)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)
	at org.mortbay.jetty.handler.HandlerCollection.doStart(HandlerCollection.java:152)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)
	at org.mortbay.jetty.handler.HandlerWrapper.doStart(HandlerWrapper.java:130)
	at org.mortbay.jetty.Server.doStart(Server.java:224)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)
	at org.mortbay.jetty.plugin.Jetty6PluginServer.start(Jetty6PluginServer.java:132)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:441)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:383)
	at org.mortbay.jetty.plugin.AbstractJettyRunMojo.execute(AbstractJettyRunMojo.java:210)
	at org.mortbay.jetty.plugin.Jetty6RunMojo.execute(Jetty6RunMojo.java:184)
	at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:490)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:694)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeStandaloneGoal(DefaultLifecycleExecutor.java:569)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:539)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:387)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:348)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:180)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:328)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:138)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:362)
	at org.apache.maven.cli.compat.CompatibleMain.main(CompatibleMain.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
	at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
	at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
Jan 29, 2010 11:38:07 AM org.apache.myfaces.webapp.AbstractFacesInitializer initFaces
SEVERE: An error occured while initializing MyFaces: This request class is an empty placeholder
java.lang.UnsupportedOperationException: This request class is an empty placeholder
	at org.apache.myfaces.application._SystemEventServletRequest$1.invoke(_SystemEventServletRequest.java:56)
	at $Proxy0.getHeader(Unknown Source)
	at javax.servlet.http.HttpServletRequestWrapper.getHeader(HttpServletRequestWrapper.java:91)
	at org.apache.myfaces.trinidadinternal.context.external.ServletRequestHeaderMap.getAttribute(ServletRequestHeaderMap.java:42)
	at org.apache.myfaces.trinidadinternal.context.external.ServletRequestHeaderMap.getAttribute(ServletRequestHeaderMap.java:30)
	at org.apache.myfaces.trinidadinternal.context.external.AbstractAttributeMap.get(AbstractAttributeMap.java:73)
	at org.apache.myfaces.trinidadinternal.renderkit.core.CoreRenderKit.isAjaxRequest(CoreRenderKit.java:148)
	at org.apache.myfaces.trinidadinternal.renderkit.core.CoreRenderKit.isPartialRequest(CoreRenderKit.java:163)
	at org.apache.myfaces.trinidadinternal.config.xmlHttp.XmlHttpConfigurator.getExternalContext(XmlHttpConfigurator.java:61)
	at org.apache.myfaces.trinidadinternal.config.GlobalConfiguratorImpl.getExternalContext(GlobalConfiguratorImpl.java:351)
	at org.apache.myfaces.trinidadinternal.context.FacesContextFactoryImpl$CacheRenderKit.<init>(FacesContextFactoryImpl.java:90)
	at org.apache.myfaces.trinidadinternal.context.FacesContextFactoryImpl.getFacesContext(FacesContextFactoryImpl.java:68)
	at org.apache.myfaces.webapp.AbstractFacesInitializer.dispatchInitDestroyEvent(AbstractFacesInitializer.java:140)
	at org.apache.myfaces.webapp.AbstractFacesInitializer.initFaces(AbstractFacesInitializer.java:109)
	at org.apache.myfaces.webapp.StartupServletContextListener.contextInitialized(StartupServletContextListener.java:155)
	at org.mortbay.jetty.handler.ContextHandler.startContext(ContextHandler.java:548)
	at org.mortbay.jetty.servlet.Context.startContext(Context.java:136)
	at org.mortbay.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1250)
	at org.mortbay.jetty.handler.ContextHandler.doStart(ContextHandler.java:517)
	at org.mortbay.jetty.webapp.WebAppContext.doStart(WebAppContext.java:467)
	at org.mortbay.jetty.plugin.Jetty6PluginWebAppContext.doStart(Jetty6PluginWebAppContext.java:115)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)
	at org.mortbay.jetty.handler.HandlerCollection.doStart(HandlerCollection.java:152)
	at org.mortbay.jetty.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:156)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)
	at org.mortbay.jetty.handler.HandlerCollection.doStart(HandlerCollection.java:152)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)
	at org.mortbay.jetty.handler.HandlerWrapper.doStart(HandlerWrapper.java:130)
	at org.mortbay.jetty.Server.doStart(Server.java:224)
	at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)
	at org.mortbay.jetty.plugin.Jetty6PluginServer.start(Jetty6PluginServer.java:132)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:441)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:383)
	at org.mortbay.jetty.plugin.AbstractJettyRunMojo.execute(AbstractJettyRunMojo.java:210)
	at org.mortbay.jetty.plugin.Jetty6RunMojo.execute(Jetty6RunMojo.java:184)
	at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:490)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:694)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeStandaloneGoal(DefaultLifecycleExecutor.java:569)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:539)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:387)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:348)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:180)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:328)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:138)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:362)
	at org.apache.maven.cli.compat.CompatibleMain.main(CompatibleMain.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
	at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
	at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
",MYFACES-2520
f:event should not be applied if the parent is instance of UIViewRoot and we are refreshing the component tree.,MYFACES-2519
"If you are running MyFaces 2.0 in an environment that does not provide bean validation, the BeanValidator should not be installed as a default validator.",MYFACES-2518
"The flash does not work for GET requests. With the two page fragments below the value of the flash is never displayed on navigating between them.

page1.xhtml:

<c:set target=""#{flash}"" property=""name"" value=""Michi (from 1)""/>
<h:outputText value=""#{flash.name}""/>
<h:link outcome=""page2"" value=""to page2""/>

page2.xhtml:

<c:set target=""#{flash}"" property=""name"" value=""Michi (from 2)""/>
<h:outputText value=""#{flash.name}""/>
<h:link outcome=""page1"" value=""to page1""/>

I had a look at FlashImpl and what I did not quite understand was the check for isPostback() in doPrePhaseActions(). It is ovious that with this check the ""old"" flash will not be passed over if the request is not a postback. When I remove the check everything works as I would expect it.

What do you guys think, is this a bug or did I miss something?

Thanks to Ingo Hofmann for making me aware of this behavior.
",MYFACES-2517
f:event currently only supports the UIViewRoot as a child for the PreRenderViewEvent,MYFACES-2516
I created an archetype for a MyFaces 2.0 hello world app.,MYFACES-2515
,MYFACES-2514
Update JSP examples from test-webapp 1.2 to facelets and merge the examples with the MyFaces 2.0 examples project.,MYFACES-2513
Currently nextHandler.apply() is not invoked if the validator is disabled and it has no (or just an empty) validatorId or if the validator is enabled and it has no or empty validationGroups.,MYFACES-2512
"If javax.faces.validator.DISABLE_DEFAULT_BEAN_VALIDATOR is set to true, the BeanValidator is not installed automatically on all input components. This already works fine.

However, the BeanValidator can still be added manually via <f:validateBean />, which is not handled correctly at the moment.",MYFACES-2511
"According to the spec, the submitted value for UISelectOne components must be set to the empty string if there is no entry in the request parameter map. Though this change is already covered in MYFACES-2356, some cleanup work remains to be done.

Previously the submitted value was set to RendererUtils.NOTHING in this case. As this is no longer needed, it should be removed completely.",MYFACES-2510
"We currently don't process @ListenerFor and @ListenerFor annotations on non-component types.

This is specified in the spec for global system events, see:
http://java.sun.com/javaee/javaserverfaces/2.0/docs/api/index.html?javax/faces/event/ListenerFor.html

It would be nice to have it in the beta.",MYFACES-2509
This issue will be used to fix problems identified by CTS testing.,MYFACES-2508
"The commandLink's ""onClick"" attribute will be rendered as onclick=""jsf.util.chain(...)"" what requires the variable ""jsf"" which is defined in jsf.js. However, the renderer does not load the appropriate file so that the onClick action will be ignored (or end up as a JavaScript error) if - for instance - no Ajax component is present on the same page. 

Find the example below to reproduce this issue (click on command link will not have any effects):

<?xml version=""1.0"" encoding=""ISO-8859-1"" ?>
<!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Transitional//EN""
        ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"">
<html xmlns=""http://www.w3.org/1999/xhtml""
 xmlns:h=""http://java.sun.com/jsf/html""
 xmlns:f=""http://java.sun.com/jsf/core""
 >
<h:head>
</h:head>
<h:body>

    <h:form id=""mainForm"">
        <h:panelGrid id=""grid"" columns=""2"">
            <h:commandLink value=""Click me!"" onclick=""confirm('Hello World')"" action=""update"">
            </h:commandLink>
        </h:panelGrid>
    </h:form>
</h:body>
</html>
",MYFACES-2507
"If a managed bean is annotated with @ManagedBean and there is no scope annotation, we are not doing as the spec says, which is to use a default of request scoping.",MYFACES-2506
"Finally it was found a case where it is necessary to take into account the particular structure of a composite component.

f:event could be inside next to composite:implementation, and we require this tag be just applied once.",MYFACES-2505
Support for Google App Engine for MyFaces 1.2 and 2.0.,MYFACES-2504
"It seems ri is able to use no arg method as a listener attribute for f:event tag, according to a discussion on jsr-314-open mailing list. (TOPIC: [jsr-314-open] Method signatures for event handlers). See this issue:

https://javaserverfaces-spec-public.dev.java.net/issues/show_bug.cgi?id=731

 If that is true, myfaces should do the same.",MYFACES-2503
"When partial state saving is not used, component state is lost for composite component childs of facets relocated by composite:insertChildren or composite:insertFacet

To understand why this is happening, it is necessary to understand how facelets works in context and how composite:insertChildren and composite:insertFacet works, so I'll do a resume for it.

In jsf 1.2, a facelet is applied in two cases:

1. When a page is request for first time, the whole component tree is build.
2. On a postback to update transient components like facelets UIInstruction.

To see it in context, suppose a simple app that ask for a name an it print it on another component on the same page:

<h:form>
  Name: <h:inputText value=""{bean.name}/>
  Previous Name: <h:outputtext value=""{bean.name}/>
  <h:commandButton value=""submit"" action=""submitToThisSamePage""/>
</h:form>

That is what happened when facelets + jsf 1.2 is used:

 First Request:

 - There is a call to FaceletViewHandler.buildView from FaceletViewHandler.renderView that cause the UIViewRoot instance to be filled for first time calling to f.apply().
 - The view is rendered.
 - Save the state for all non transient components found on the view. This include save the tree structure too, so it can be reconstructed later.

 Postback (The user send his name and do a submit):

 - Restore the tree structure and component state for all saved components.
 - All lifecycle phases continues until before renderView
 - On FaceletViewHandler.renderView there is a call to buildView, and this one causes all transient components like facelets UIInstruction to be added to the tree. ComponentHandler first try to detect if the component is on the view before create it, and if that is true do not create it, instead it takes this instance and continue apply the taghandles and it remove and add it from tree, to give the chance to other transient components to be created and added correctly.
 - The view is rendered.
 - Save the state for all non transient components found on the view. This include save the tree structure too, so it can be reconstructed later.

In jsf 2.0 it happens something similar. ViewDeclarationLanguage and TagHandlerDelegate abstract classes were created, so some code was ""relocated"". To be clear, the algorithm in jsf 2.0 without partial state saving is this:

 First Request:

 - There is a call to ViewDeclarationLanguage.buildView from RenderResponseExecutor.execute that cause the UIViewRoot instance to be filled for first time calling to f.apply().
 - The view is rendered.
 - Save the state for all non transient components found on the view. This include save the tree structure too, so it can be reconstructed later.

 Postback (The user send his name and do a submit):

 - Restore the tree structure and component state for all saved components.
 - All lifecycle phases continues until before renderView
 - On RenderResponseExecutor.execute there is a call to buildView, and this one causes all transient components like facelets UIInstructions to be added to the tree. ComponentHandler first try to detect if the component is on the view before create it, and if that is true do not create it, instead it takes this instance and continue apply the taghandles and it remove and add it from tree, to give the chance to other transient components to be created and added correctly.
 - The view is rendered.
 - Save the state for all non transient components found on the view. This include save the tree structure too, so it can be reconstructed later.

The algorithm in jsf 2.0 with partial state saving is different:
 
 First Request:

 - There is a call to ViewDeclarationLanguage.buildView from RenderResponseExecutor.execute that cause the UIViewRoot instance to be filled for first time calling to f.apply().
 - The view is rendered.
 - Save the state for all non transient components found on the view that has delta or was added after build. This does not include the structure, because all state is just saved on a big Map<String,Object> where the keys are the clientId for each component.

 Postback (The user send his name and do a submit):

 - StateManagementStrategy.restoreView calls ViewDeclarationLanguage.buildView passing an empty UIViewRoot to be filled for first time calling to f.apply().
 - Restore the component state for all saved components. Note the tree structure now is already provided.
 - All lifecycle phases continues until before renderView
 - On RenderResponseExecutor.execute there is a call to buildView, but this time, since the view is already filled, nothing happens. It just return.
 - The view is rendered.
 - Save the state for all non transient components found on the view that has delta or was added after build. This does not include the structure, because all state is just saved on a big Map<String,Object> where the keys are the clientId for each component.

Really from a point of view, partial state saving integrates a param called FaceletViewHandler.buildBeforeRestore with other ideas found on Trinidad.

Now suppose this scenario:

  Component impl:

<composite:interface>
</composite:interface>
<composite:implementation>
    <h:outputText value="" Hello "" />
    <p> 
    <composite:insertChildren/>
    </p> 
    <h:outputText value="" Bye "" />
</composite:implementation>

  Snippet on page:

    <testComposite:simpleInsertChildren id=""sic"">
      Mr. 
      <h:inputText id=""name"" value=""John "" />
      Smith
    </testComposite:simpleInsertChildren>

composite:insertChildren and composite:insertFacet uses a listener attached to PostAddToViewEvent to relocate the components. So, when the listener is called the body of testComposite:simpleInsertChildren looks like this:

    <h:outputText value="" Hello "" />
    <p> 
      Mr. 
      <h:inputText id=""name"" value=""John "" />
      Smith
    </p> 
    <h:outputText value="" Bye "" />

The reason why we do that on a listener is described on MYFACES-2317. In few words, we need the relocation occur from root to branches to allow nesting on composite components.

Now the big question: Why the state is lost for child or facet components using composite:insertChildren or composite:insertFacet?

When the component tree is updated (call to buildView on render response phase and postback), since the components inside the composite component were moved to some location ""inside"" the composite component, the current algorithm is unable to detect this condition, so the components are created again. The reason why there is no duplicate components in the view is facelets has an algoritm to mark and delete component instances that are not traversed (this is the real magic behind c:if tag). Then facelets detach and attach all components while traversing, triggering PostAddToViewEvent and our relocation listener is activated again (before do this the components on the location were deleted). 

Why this does not happens when partial state saving is used? In this case there is no ""update"" call. buildView just return because the view is already filled.
 In this case, c:if will not work as in jsf 1.2 if it depends on a value that changes on invoke application phase (MYFACES-2483).

In this case we have two options:

1. Do some algorithm that helps facelets to ""jump"" to the correct location where the component was relocated. Then on the listener, relocate the components created (UIInstructions instances) based on the component order saved on first time.
  
  Advantages: Keep things simple and only has to deal with the components that were moved in relocation.
  Disadvantages : c:if will not work correctly inside a composite component that uses composite:insertChildren or composite:insertFacet.

2. Let facelets create the components and then on the listener ""unify the tree"", adding the new components and remove the ones that shouldn't be there.

  Advantages: c:if will work correctly on all situations.
  Disadvantages: The algorithm necessary has to traverse the tree for all children and facets looking for added components.

I tried both solutions and finally I think solution 1 is the option to do. Obviously, things like this:

    <testComposite:simpleInsertChildren id=""sic"">
      Mr. 
         <c:if test=""#{helloWorldIfBean.toogle}"">
             <p>Pepito</p>
             <h:outputText value=""Perez""/>
         </c:if>
      Smith
    </testComposite:simpleInsertChildren>

will not work correctly, but if you put this one like this:

    <testComposite:simpleInsertChildren id=""sic"">
     
      Mr. 
         <h:panelGroup>
           <c:if test=""#{helloWorldIfBean.toogle}"">
             <p>Pepito</p>
             <h:outputText value=""Perez""/>
           </c:if>
         </h:panelGroup>
      Smith
    </testComposite:simpleInsertChildren>

It will.

If no objections I'll commit the solution 1 soon.",MYFACES-2502
"scenario:

<f:validateBean validationGroups=""group1"">
    <h:inputText>
        <f:validateBean />
    </h:inputText>
    <h:inputText>
        <f:validateBean validationGroups=""group2"" />
   </h:inputText>
</f:validateBean>

In this scenario the first h:inputText gets a bean validator with validationGroup group1 and the second h:inputText _should_ get a bean validator with the validationGroup group2. Currently the second h:inputText gets a bean validator with both validationGroups (group1,group2).",MYFACES-2501
"MyFaces suffers from the problem described here:

https://javaserverfaces.dev.java.net/issues/show_bug.cgi?id=1515

Apologies for the Mojarra reference. :-)

In the MyFaces case, the problem exists in two places:

1. org.apache.myfaces.view.facelets.FaceletViewDeclarationLanguage

In particular, in renderView(), we do:

            ResponseWriter origWriter = createResponseWriter(context);

            StateWriter stateWriter = new StateWriter(origWriter, 1024);  <-------- Here
            try
            {
                ResponseWriter writer = origWriter.cloneWithWriter(stateWriter);

Instead of wrapping the StateWriter around the ResponseWriter (and then cloning that ResponseWriter with itself), we should be wrapping the StateWriter around the Writer returned by ExternalContext.getResponseOutputWriter().

2.  org.apache.myfaces.view.facelets.FaceletViewHandler

Again, in renderView, we've got:

            ResponseWriter origWriter = this.createResponseWriter(context);
            // QUESTION: should we use bufferSize? Or, since the
            // StateWriter usually only needs a small bit at the end,
            // should we always use a much smaller size?
            stateWriter = new StateWriter(origWriter, this.bufferSize != -1 ? this.bufferSize : 1024);

            ResponseWriter writer = origWriter.cloneWithWriter(stateWriter);

So the same issue exists here.

FWIW, not sure whether FaceletViewHandler is still used - perhaps this is now obsolete?


",MYFACES-2500
"In the following scenario the bean validator should not be applied for the h:inputText.

<h:inputText value=""#{bean.text2}"">
    <f:validateBean disabled=""true"" />
</h:inputText>


",MYFACES-2499
"MyFaces does not tolerate well having the bean validation API on the classpath when there is no JSR 303 impl in place.  As it stands currently, we will fail rendering any page that includes validation, whether or not it includes JSR 303 validation.  We should fail more gracefully with a warning during the first attempt at initialization by the static method in org.apache.myfaces.ExternalSpecifications. 

There is already some code commented out which essentially does this check.  It appears it was only commented out due to the validation api not being on the myfaces impl classpath.  I'll use this bug to uncomment that code and to update the pom to include a dependency on the bean validation api as in the myfaces api.  ",MYFACES-2498
"Similar issue as seen in 1.1.6 and 1.2.6.

1.) set property javax.faces.INTERPRET_EMPTY_STRING_SUBMITTED_VALUES_AS_NULL = true.

2.) Have an input field with required=""true"".

3.) User enters empty string.

4.) After submitted the form, the input field shows its previous value (is not empty, as entered before and expected).",MYFACES-2497
"Sometimes a TagHandler needs to know if it has children or not (e.g. f:validateBean), but there is no standardized way to determine it.",MYFACES-2496
On testing the new myfaces builder plugin I saw that current12/test-webapp still uses version 1.2.8-SNAPSHOT of myfaces. I guess this should be 1.2.9-SNAPSHOT.,MYFACES-2495
"When the tree is built and a component that is on that tree is removed and added, when a postback occur it is not restored, because the algorithm are not detecting this case. 

The easiest solution is wrap all saved branches on a class like AttachedFullStateWrapper, so when we restore, we can cast to check if we restore only the component or the full branch instead.",MYFACES-2494
"This does not have any side effects but originally, FaceletViewHandler used this line on renderView method:

            // build view - but not if we're in ""buildBeforeRestore""
            // land and we've already got a populated view. Note
            // that this optimizations breaks if there's a ""c:if"" in
            // the page that toggles as a result of request processing -
            // should that be handled? Or
            // is this optimization simply so minor that it should just
            // be trimmed altogether?
            if (!this.buildBeforeRestore || viewToRender.getChildren().isEmpty())
            {
                this.buildView(context, viewToRender);
            }

Since we need to solve MYFACES-2483 Find a way to allow c:if work with partial state saving enabled, we need a way to detect when a view is ""updated"", and check if UIViewRoot has children is ideal. 

",MYFACES-2493
Update existing Mock classes in myfaces-test20 (MyFaces test framework) to JSF 2.0 API and write Mock classes for new 2.0 classes from core project.,MYFACES-2492
"When a error is thrown, the component tree is printed but not the properties. Sometimes, this information is necessary to debug and must be provided.",MYFACES-2491
"This is a snippet of the erroneous Facelet:

                    <h:form>
                        <dl>
...
                            <dd><h:outputText id=""challenge"" value=""#{component.attributes.challenge}"">
                                <f:event type=""javax.faces.event.PreRenderComponentEvent"" listener=""#{loginBean.generateChallenge}"" />
                            </h:outputText></dd>
...
                        </dl>
                    </h:form>

The problem occurs during postback, when the following Exception is thrown:

javax.servlet.ServletException: Could not restore StateHolder of type org.apache.myfaces.view.facelets.tag.jsf.core.EventHandler$Listener (missing no-args constructor?)
	at javax.faces.webapp.FacesServlet._handleStandardRequest(FacesServlet.java:483)
	at javax.faces.webapp.FacesServlet.service(FacesServlet.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:128)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:286)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:845)
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:583)
	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:447)
	at java.lang.Thread.run(Thread.java:619)
Caused by: java.lang.RuntimeException: Could not restore StateHolder of type org.apache.myfaces.view.facelets.tag.jsf.core.EventHandler$Listener (missing no-args constructor?)
	at javax.faces.component.UIComponentBase.restoreAttachedState(UIComponentBase.java:1479)
	at javax.faces.component.UIComponent$EventListenerWrapper.restoreState(UIComponent.java:1120)
	at javax.faces.component._DeltaList.restoreState(_DeltaList.java:300)
	at javax.faces.component.UIComponentBase.restoreDeltaSystemEventListenerClassMap(UIComponentBase.java:1770)
	at javax.faces.component.UIComponentBase.restoreState(UIComponentBase.java:1611)
	at javax.faces.component.UIOutput.restoreState(UIOutput.java:213)
	at org.apache.myfaces.view.facelets.DefaultFaceletsStateManagementStrategy.restoreStateFromMap(DefaultFaceletsStateManagementStrategy.java:379)
	at org.apache.myfaces.view.facelets.DefaultFaceletsStateManagementStrategy.restoreStateFromMap(DefaultFaceletsStateManagementStrategy.java:393)
	at org.apache.myfaces.view.facelets.DefaultFaceletsStateManagementStrategy.restoreStateFromMap(DefaultFaceletsStateManagementStrategy.java:393)
	at org.apache.myfaces.view.facelets.DefaultFaceletsStateManagementStrategy.restoreView(DefaultFaceletsStateManagementStrategy.java:181)
	at org.apache.myfaces.application.jsp.JspStateManagerImpl.restoreView(JspStateManagerImpl.java:388)
	at org.apache.myfaces.view.ViewDeclarationLanguageBase.restoreView(ViewDeclarationLanguageBase.java:106)
	at org.apache.myfaces.view.facelets.FaceletViewDeclarationLanguage.restoreView(FaceletViewDeclarationLanguage.java:927)
	at org.apache.myfaces.application.ViewHandlerImpl.restoreView(ViewHandlerImpl.java:231)
	at javax.faces.application.ViewHandlerWrapper.restoreView(ViewHandlerWrapper.java:80)
	at org.apache.myfaces.lifecycle.RestoreViewExecutor.execute(RestoreViewExecutor.java:106)
	at org.apache.myfaces.lifecycle.LifecycleImpl.executePhase(LifecycleImpl.java:129)
	at org.apache.myfaces.lifecycle.LifecycleImpl.execute(LifecycleImpl.java:85)
	at javax.faces.webapp.FacesServlet._handleStandardRequest(FacesServlet.java:448)
	... 13 more
Caused by: java.lang.InstantiationException: org.apache.myfaces.view.facelets.tag.jsf.core.EventHandler$Listener
	at java.lang.Class.newInstance0(Class.java:340)
	at java.lang.Class.newInstance(Class.java:308)
	at javax.faces.component.UIComponentBase.restoreAttachedState(UIComponentBase.java:1475)
	... 31 more

According to the FacesListener spec, every implementation must provide a no-args constructor:
https://javaserverfaces.dev.java.net/nonav/docs/2.0/javadocs/javax/faces/event/FacesListener.html",MYFACES-2490
"The whole viewId calculation process is a big mess. There is DefaultRestoreViewSupport with calculateViewId and deriveViewId and there is DefaultViewHandlerSupport with calculateViewId and calculateAndCheckViewId.

Furthermore each viewId gets calculated twice (e.g. first from test.jsf to test.xhtml and then from test.xhtml to test.xhtml, which is not necessary).",MYFACES-2489
"If a SystemEventHandler, which is subscribed to PreRenderViewEvent, changes the current UIViewRoot, the algorithm (vdl.buildView() and publish PreRenderViewEvent) has to be performed again (for the new view) before rendering. Furthermore, such a listener could set responseComplete to true.",MYFACES-2488
"The current implementation of DeltaList just set to null transient objects but do not remove it from list.

This causes some problems when this list is traverse, because in other parts of the code there are no check for null values.

Unfortunately, this makes the current strategy to deal with deltas fail without any fix, so a new more simple strategy was implemented. The idea is call clearInitialState on all code that modify the list. Then, only use partial state saving on a list with non transient components (because its presence cause the list structurally changes later) or added/removed objects after the call to markInitialState.",MYFACES-2487
"Because of the fact that only ServletContextListener.contextDestroyed() is invoked on a container shutdown/restart, the correct destruction of ManagedBeans in session, view and request scope is not ensured.",MYFACES-2485
"from the JavaDoc:
> public final void pushComponentToEL(FacesContext context, UIComponent component) 
> component - the component to push to the EL. If component is null the UIComponent  instance that this call was invoked upon will be pushed to the EL.

This is e.g. used in the ajax4jsf UIDataAdaptor of RichFaces-3.3.3",MYFACES-2484
"This one is difficult to solve but I still think it is possible.

It was explored trying to solve MYFACES-2428, and it seems ri is trying to do something about it too on:

https://javaserverfaces.dev.java.net/issues/show_bug.cgi?id=1408

and

https://javaserverfaces.dev.java.net/issues/show_bug.cgi?id=1313

One strategy to solve this one is this:

1. Mark the parent component containing c:if to not save it partially.
2. Do not execute c:if on postback and partial state saving enabled.

In theory, the parent component should be restored fully from saved state.

Note that things like:

<c:if>....
   <p>Some markup</p>
<c:if>

is just invalid. It is expected that c:if only contains components with state.",MYFACES-2483
Werner asked me to fix a small issue in the Ajax JS Impl: new Error() should be used instead of new Exception().,MYFACES-2482
"According to the spec (14.4.1) the event data payload for the callback functions passed to addOnEvent and addOnError should contain the property status with the name of the event/error. In MyFaces this property is named ""name"".

I talked to Werner and he thinks that the name ""name"" was used in an old version of the spec.",MYFACES-2481
"I created a simple custom behavior, that requires (more ships :-) ) a simple JS file. On the RI (run-time testing) it works. Not so on myfaces2 trunk

My class:
package net.wessendorf;

import java.util.EnumSet;
import java.util.Set;

import javax.faces.application.ResourceDependencies;
import javax.faces.application.ResourceDependency;
import javax.faces.component.behavior.ClientBehaviorBase;
import javax.faces.component.behavior.ClientBehaviorContext;
import javax.faces.component.behavior.ClientBehaviorHint;
import javax.faces.component.behavior.FacesBehavior;

@FacesBehavior(""net.wessendorf.Confirm"")
@ResourceDependencies({
  @ResourceDependency(name=""tester.js"", library=""wessi"", target=""head"")
})
public class TestConfirmBehavior extends ClientBehaviorBase
{

  @Override
  public String getScript(ClientBehaviorContext behaviorContext)
  {
    return ""return confirm('Really')"";
  }
  
  @Override
  public Set<ClientBehaviorHint> getHints() {
      return EnumSet.of(ClientBehaviorHint.SUBMITTING);
  }
}


taglib.xml file:
<facelet-taglib xmlns=""http://java.sun.com/xml/ns/javaee""
   xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
   xsi:schemaLocation=""http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-facelettaglibrary_2_0.xsd""
   version=""2.0"">

  <namespace>http://wessendorf.net/behavior</namespace>   
  <tag>
    <tag-name>confirm</tag-name>
    <behavior>
      <behavior-id>net.wessendorf.Confirm</behavior-id>
    </behavior>
  </tag>
</facelet-taglib>

tester.js file:
test = function()
{
  alert('HALLO JSF2');
}",MYFACES-2480
"Attaching a simple behavior to a h:commandbutton makes the form to no longer submit it.

Java:

package net.wessendorf;

import javax.faces.component.behavior.ClientBehaviorBase;
import javax.faces.component.behavior.ClientBehaviorContext;
import javax.faces.component.behavior.FacesBehavior;

@FacesBehavior(""net.wessendorf.Confirm"")
public class ConfirmBehavior extends ClientBehaviorBase
{

  @Override
  public String getScript(ClientBehaviorContext behaviorContext)
  {
    return ""return confirm('Really')"";
  }

}

taglib.xml:
<facelet-taglib xmlns=""http://java.sun.com/xml/ns/javaee""
   xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
   xsi:schemaLocation=""http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-facelettaglibrary_2_0.xsd""
   version=""2.0"">

  <namespace>http://wessendorf.net/behavior</namespace>   
  <tag>
    <tag-name>confirm</tag-name>
    <behavior>
      <behavior-id>net.wessendorf.Confirm</behavior-id>
    </behavior>
  </tag>
</facelet-taglib> 

XHTML file:
      <h:commandButton value=""click me"">
        <wessi:confirm />
      </h:commandButton>


",MYFACES-2479
"Hi running Myfaces Revision 897280 sometimes swallows the following exception

please note that I'm running with facelets-1.1.15B1 on jetty-6.1.22 and have server side state saving turned on.

javax.faces.FacesException: javax.crypto.BadPaddingException: Given final block not properly padded
	at org.apache.myfaces.context.ExceptionHandlerImpl.wrap(ExceptionHandlerImpl.java:241)
	at org.apache.myfaces.context.ExceptionHandlerImpl.handle(ExceptionHandlerImpl.java:156)
	at org.apache.myfaces.lifecycle.LifecycleImpl.executePhase(LifecycleImpl.java:157)
	at org.apache.myfaces.lifecycle.LifecycleImpl.execute(LifecycleImpl.java:88)
	at javax.faces.webapp.FacesServlet.service(FacesServlet.java:189)
	at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:511)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1166)
	at org.ajax4jsf.webapp.BaseXMLFilter.doXmlFilter(BaseXMLFilter.java:178)
	at org.ajax4jsf.webapp.BaseFilter.handleRequest(BaseFilter.java:290)
	at org.ajax4jsf.webapp.BaseFilter.processUploadsAndHandleRequest(BaseFilter.java:388)
	at org.ajax4jsf.webapp.BaseFilter.doFilter(BaseFilter.java:515)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1157)
	at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:388)
	at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)
	at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:182)
	at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:765)
	at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:418)
	at org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:230)
	at org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)
	at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)
	at org.mortbay.jetty.Server.handle(Server.java:326)
	at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:542)
	at org.mortbay.jetty.HttpConnection$RequestHandler.content(HttpConnection.java:938)
	at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:755)
	at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:218)
	at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:404)
	at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:409)
	at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:582)
Caused by: javax.crypto.BadPaddingException: Given final block not properly padded
	at com.sun.crypto.provider.SunJCE_f.b(DashoA13*..)
	at com.sun.crypto.provider.SunJCE_f.b(DashoA13*..)
	at com.sun.crypto.provider.DESCipher.engineDoFinal(DashoA13*..)
	at javax.crypto.Cipher.doFinal(DashoA13*..)
	at org.apache.myfaces.shared_impl.util.StateUtils.symmetric(StateUtils.java:471)
	at org.apache.myfaces.shared_impl.util.StateUtils.symmetric(StateUtils.java:513)
	at org.apache.myfaces.shared_impl.util.StateUtils.decrypt(StateUtils.java:313)
	at org.apache.myfaces.shared_impl.util.StateUtils.reconstruct(StateUtils.java:262)
	at org.apache.myfaces.renderkit.html.HtmlResponseStateManager.getSavedState(HtmlResponseStateManager.java:213)
	at org.apache.myfaces.renderkit.html.HtmlResponseStateManager.getState(HtmlResponseStateManager.java:160)
	at org.apache.myfaces.application.jsp.JspStateManagerImpl.restoreView(JspStateManagerImpl.java:406)
	at javax.faces.application.StateManagerWrapper.restoreView(StateManagerWrapper.java:86)
	at org.apache.myfaces.shared_impl.view.ViewDeclarationLanguageBase.restoreView(ViewDeclarationLanguageBase.java:106)
	at org.apache.myfaces.application.ViewHandlerImpl.restoreView(ViewHandlerImpl.java:234)
	at javax.faces.application.ViewHandlerWrapper.restoreView(ViewHandlerWrapper.java:83)
	at com.sun.facelets.FaceletViewHandler.restoreView(FaceletViewHandler.java:316)
	at org.ajax4jsf.application.ViewHandlerWrapper.restoreView(ViewHandlerWrapper.java:107)
	at org.apache.myfaces.lifecycle.RestoreViewExecutor.execute(RestoreViewExecutor.java:109)
	at org.apache.myfaces.lifecycle.LifecycleImpl.executePhase(LifecycleImpl.java:138)
",MYFACES-2478
"There are some minor problems with command links and buttons having an ajax behavior. 

1) Both of them have to check in decode() if the request is a partial or behavioral submit to queue the action event for thos requests.
2) If a command link has a behavior with ClientBehaviorHint.SUBMITTING then the ""normal"" submit code should not be rendered.
3) For command link ""normal"" submit code was not escaped correctly before chaining.
",MYFACES-2477
"Keyword @this is not resolved correctly for the render attribute of an ajax request. Should be replaced with the actual id before submitting the request. In the js code it actually is replaced but the resulting string is not used.

Current code is:
  renderString = renderString.replace(this._OPT_IDENT_FORM, sourceForm.id);
  renderString = renderString.replace(this._OPT_IDENT_THIS, element.id);
  passThroughArguments[myfaces._impl.core._jsfImpl._PROP_RENDER] = JSF2Utils.arrayToString(passThroughArguments.render, ' ');

but imho should be:
  renderString = renderString.replace(this._OPT_IDENT_FORM, sourceForm.id);
  renderString = renderString.replace(this._OPT_IDENT_THIS, element.id);
  passThroughArguments[myfaces._impl.core._jsfImpl._PROP_RENDER] = renderString;

",MYFACES-2476
"I am currently trying to get f:ajax running inside a composite component. So I  would say it is necessary to include the facets (use getFacetsAndChildren() instead of getChildren()) in UIComponent.visitTree().

The problem with this solution is, that there is a potential conflict with UIData.visitTree() (also see MYFACES-2137). The result is that facets of columns are visited twice. I noticed this because UIDataTest.testVisitTree() fails unless the line expecting the column facet is in the code twice.

I tried the same example with Mojarra anwith the same result: the column facet is visited twice.",MYFACES-2475
"I updated NavigationHandlerImpl.handleNavigation according to the navigation handler algorithm described in section 7.4.2 in the spec. The current implementation causes some troubles with navigation cases that are redirects (for instance by specifying ""?faces-redirect=true"" in the action attribute. It seems that the redirect url was not calculated correctly.",MYFACES-2474
"I had some troubles with system event listeners added by the following tag handlers:

org.apache.myfaces.view.facelets.tag.composite.InsertChildrenHandler
org.apache.myfaces.view.facelets.tag.composite.InsertFacetHandler
org.apache.myfaces.view.facelets.tag.jsf.core.EventHandler

As they are no StateHolders, are not serializable and do not have a no-argument constructor, they cause troubles with state management. The simplest solution would be to make them serializable but I think it should also be possible to make them transient as the view is rebuilt anyway on every request. This would generate no state but I'm not 100% sure if there are any side effects by making the listeners transient (it works for me and I can't think of any currently).",MYFACES-2473
Missing return keyword in UIComponent.EventListenerWrapper.initialStateMarked().,MYFACES-2472
"This markup:
<h:commandLink value=""Click me"">
  <f:ajax onevent=""callback"" />
</h:commandLink>

generates a JS error:
missing ) after argument list
jsf.util.chain(document.getElementById('...d656309279_1ee968b8','j_id1670484283_385

The generated HTML for the JS looks like:
onclick=""jsf.util.chain(document.getElementById('j_id1670484283_38509b28'), event,'jsf.ajax.request(\'j_id1670484283_38509b28\',event,{onevent:callback,\'javax.faces.behavior.event\':\'action\'})', 'return oamSubmitForm('j_id656309279_1ee968b8','j_id1670484283_38509b28');');""

",MYFACES-2471
"When having a very simple page, like this:

<!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Transitional//EN""
        ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"">
<html xmlns=""http://www.w3.org/1999/xhtml""
      xmlns:f=""http://java.sun.com/jsf/core""
      xmlns:h=""http://java.sun.com/jsf/html""
      xmlns:ui=""http://java.sun.com/jsf/facelets"">

<h:head id=""kopf"">
<h:outputStylesheet id=""cssDude"" name=""matze.css"" />
<h:outputScript id=""jsDude"" name=""jsf.js"" library=""javax.faces"" />
</h:head>
<h:body id=""body"">

<h:form prependId=""false"">

  <h:inputText value=""#{sessionScope['hackSimple']}"" id=""tipper"">
    <f:ajax event=""keyup"" render=""output1"" />
  </h:inputText>
       
  <p><h:outputText id=""output1"" value=""#{sessionScope['hackSimple']}"" /></p>

</h:form>
</h:body>
</html>


You are getting an IllegalStateException:
java.lang.IllegalStateException: Client-id : cssDude is duplicated in the faces tree. Component : cssDude, path: {Component-Path : [Class: javax.faces.component.UIViewRoot,ViewId: /s_ajax.xhtml][Class: javax.faces.component.html.HtmlHead,Id: kopf][Class: javax.faces.component.UIOutput,Id: cssDude]}
	at org.apache.myfaces.application.jsp.JspStateManagerImpl.checkForDuplicateIds(JspStateManagerImpl.java:515)
	at org.apache.myfaces.application.jsp.JspStateManagerImpl.checkForDuplicateIds(JspStateManagerImpl.java:530)
	at org.apache.myfaces.application.jsp.JspStateManagerImpl.checkForDuplicateIds(JspStateManagerImpl.java:530)
	at org.apache.myfaces.application.jsp.JspStateManagerImpl.saveSerializedView(JspStateManagerImpl.java:468)
	at javax.faces.application.StateManager.saveView(StateManager.java:114)
	at org.apache.myfaces.application.jsp.JspStateManagerImpl.saveView(JspStateManagerImpl.java:460)
	at org.apache.myfaces.view.facelets.FaceletViewDeclarationLanguage.renderView(FaceletViewDeclarationLanguage.java:862)
	at org.apache.myfaces.application.ViewHandlerImpl.renderView(ViewHandlerImpl.java:222)
	at javax.faces.application.ViewHandlerWrapper.renderView(ViewHandlerWrapper.java:59)
	at org.apache.myfaces.lifecycle.RenderResponseExecutor.execute(RenderResponseExecutor.java:73)
	at org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:201)
",MYFACES-2470
"when you have an invalid outcome, like:

<h:link outcome=""foo"">Blah</link>, but  there is no foo.xhtml, we see an NPE

java.lang.NullPointerException
	at org.apache.myfaces.shared_impl.renderkit.html.HtmlRendererUtils.getOutcomeTargetLinkHref(HtmlRendererUtils.java:1815)
	at org.apache.myfaces.shared_impl.renderkit.html.HtmlLinkRendererBase.renderOutcomeLinkStart(HtmlLinkRendererBase.java:742)
	at org.apache.myfaces.shared_impl.renderkit.html.HtmlLinkRendererBase.encodeBegin(HtmlLinkRendererBase.java:121)
	at javax.faces.component.UIComponentBase.encodeBegin(UIComponentBase.java:430)


",MYFACES-2469
"The JSF-2 spec defines the <view-handler> tag to enable alternate VDLs via faces-config.xml.

Since there is almost no component library out there which works with the built-in facelets-2 VDL, this is a showstopper for a lot scenarios:

The way I need to use it (tried running RichFaces-3.3.3, Trinidad and PrimeFaces-2.0.CR1) :

in web.xml:
<context-param>
   <param-name>javax.faces.DISABLE_FACELET_JSF_VIEWHANDLER</param-name>
   <param-value>true</param-value>
</context-param>

and in faces-config.xml:
<application>
   <view-handler>com.sun.facelets.FaceletViewHandler</view-handler>
</application>

",MYFACES-2468
"In both MyFaces and the R.I., the JSP ViewDeclarationLanguage extracts and casts the request and response to their native HttpServlet equivalents.  This does not work in a portlet environment because the objects on the ExternalContext are PortletRequest and Response objects.  As such, the Portlet Bridge needs to provide custom functionality for the buildView method.

If some of the MyFaces VDL Classes were relocated to shared (and were enhanced on only cast where necessary), both the Portlet Bridge and MyFaces could share their JSP VDL Strategies, allowing each to simply implement their own buildView functionality.",MYFACES-2467
"java.lang.NullPointerException
	at javax.faces.component.UIComponentBase.restoreDeltaSystemEventListenerClassMap(UIComponentBase.java:1770)
	at javax.faces.component.UIComponentBase.restoreState(UIComponentBase.java:1611)
	at javax.faces.component.UIViewRoot.restoreState(UIViewRoot.java:1161)
	at org.apache.myfaces.view.facelets.DefaultFaceletsStateManagementStrategy.restoreStateFromMap(DefaultFaceletsStateManagementStrategy.java:379)
	at org.apache.myfaces.view.facelets.DefaultFaceletsStateManagementStrategy.restoreView(DefaultFaceletsStateManagementStrategy.java:181)
	at org.apache.myfaces.application.jsp.JspStateManagerImpl.restoreView(JspStateManagerImpl.java:388)
	at org.apache.myfaces.view.ViewDeclarationLanguageBase.restoreView(ViewDeclarationLanguageBase.java:106)
	at org.apache.myfaces.view.facelets.FaceletViewDeclarationLanguage.restoreView(FaceletViewDeclarationLanguage.java:972)
	at org.apache.myfaces.application.ViewHandlerImpl.restoreView(ViewHandlerImpl.java:231)
	at org.apache.myfaces.lifecycle.RestoreViewExecutor.execute(RestoreViewExecutor.java:106)
	at org.apache.myfaces.lifecycle.LifecycleImpl.executePhase(LifecycleImpl.java:129)
	at org.apache.myfaces.lifecycle.LifecycleImpl.execute(LifecycleImpl.java:85)
	at javax.faces.webapp.FacesServlet._handleStandardRequest(FacesServlet.java:453)
	... 13 more

In this scenario savedObject is an instance of _AttachedDeltaWrapper, but _systemEventListenerClassMap is empty and so it returns null for get(entry.getKey()). Thus a NullPointerException is thrown in the following line (UIComponentBase.java:1770).",MYFACES-2466
"...otherwise the properties of PreJsf2ExceptionHandlerImpl (handled, unhandled, handledAndThrown) will be shared by all requests of all users.",MYFACES-2465
"After do some tests, it was detected RI 2.0.1 uses other strategy to do that. Instead using an ELExpression to retrieve the project stage when jsf.js is send, uses a combination of javascript and rewrite request path to send this value. If the application is not on Production stage the url written by the script looks like this:

<script type=""text/javascript"" src=""/test-webapp/javax.faces.resource/jsf.js.jsf?ln=javax.faces&stage=Development"">

note ""ln"" is written on ResourceImpl.getRequestPath(), so I suppose stage is set there too. 

The problem is the javascript part. I don't know how to retrieve it with some javascript algorithm in getProjectStage. Note this param is written on the attribute src, and no ajax request should be triggered for retrieve this value.

Right now, the solution committed MYFACES-2460 just deal with this file like any other css file that could contain EL Expressions (these expressions are ""application scope"", in other words, its value is the same all time in the application life).

Suggestions are welcome.",MYFACES-2464
"Since nothing seems to be happening with MYFACES-1723, I'm raising this major bug against the JSF 1.2 specification.

Summary: MyFaces 1.2.3 does not support <f:param name=""id"" /> under Microsoft Internet Explorer, which violates the JSF 1.2 specification;
cf. section 4.1.11 UIParameter and section 9.4.8 <f:param> the 'name' attribute of <f:param> is a String with no specific exceptions for a name of ""id"".

Some additional details: with myfaces-api-1.2.2.jar and myfaces-impl-1.2.2.jar, using <f:param name=""id"" /> works;
with myfaces-api-1.2.3.jar and myfaces-impl-1.2.3.jar using <f:param name=""id"" /> fails, e.g. an

  <h:commandLink actionListener=""#{myController.selectId}"">
    <f:param name=""id"" value=""123"" />
  </h:commandLink>

when submitted does not pass the param to selectId(), that is: the value in

  public void selectId(ActionEvent event)
  {
     final String value = FacesContext.getCurrentInstance().getExternalContext().getRequestParameterMap().get(""id"");
  }

remains null.",MYFACES-2463
"While implementing the new ErrorPageWriter on myfaces-impl, I checked all cases in which error or debug output is generated.

Testing <ui:debug /> I found out that no debug information is displayed. The debug window just displays the current view.",MYFACES-2462
"Spec section »6.2 ExceptionHandler« describes some cases which must not be handled by the ExceptionHandler. One of them is:

- The case when a MissingResourceException is thrown during the processing of the <f:loadBundle /> tag.

However, mojarra currently does handle this Exception with its ExceptionHandler and the spec does not describe what to do with the MissingResourceException.",MYFACES-2461
"Actually, we have two methods in ResourceImpl with TODO'S:

ResourceImpl.getResponseHeaders()
ResourceImpl.userAgentNeedsUpdate()

This two were let without implementation, because it was not clear how it should behave. If EL Expressions were allowed, to allow add cache headers the value returned must be 

""application scope"", but nothing on the spec says something about that.

This issue should be solved before start TOMAHAWK-1472 Add Support for new Resource API in tomahawk 2.0 module, because we need to define if a ResourceHandlerWrapper is required to provide some features and how it should behave.

There was some discussion on jsr-314-open@jcp.org around this two topic under the subject:

  [jsr-314-open] Evaluating EL in resource files

Fortunately, it seems some conclusion arise from this discussion, but there are not details about it, so we are forced to make a black box test on the latest release (2.0.1) to 

know what happened and decide what should we do on our side.

Doing some test with ri and firebug, these were the results:

RI
    GET teststyle.css.jsf
    Header Request:
    
        Host    localhost:8080
        User-Agent  Mozilla/5.0 (Windows; U; Windows NT 5.1; es-ES; rv:1.9.1.5) Gecko/20091102 Firefox/3.5.5 (.NET CLR 3.5.30729)
        Accept  text/css,*/*;q=0.1
        Accept-Language es-es,es;q=0.8,en-us;q=0.5,en;q=0.3
        Accept-Encoding gzip,deflate
        Accept-Charset  ISO-8859-1,utf-8;q=0.7,*;q=0.7
        Keep-Alive  300
        Connection  keep-alive
        Referer http://localhost:8080/test-webapp/resourceHeaders.jsf
        Cookie  JSESSIONID=1pkha2z8zhgvu
        If-Modified-Since   Fri, 11 Dec 2009 21:34:07 GMT
        If-None-Match   W/""153-1260567247625""
    
    Header Response:
    
        X-Powered-By    JSF/2.0
        Content-Type    text/css
        Expires Fri, 11 Dec 2009 22:00:33 GMT
        Etag    W/""153-1260567247625""
        Last-Modified   Fri, 11 Dec 2009 21:34:07 GMT
        Content-Length  121
        Server  Jetty(6.1.16)

RI 
    GET testjs.js.jsf
    Header Request:

        Host    localhost:8080
        User-Agent  Mozilla/5.0 (Windows; U; Windows NT 5.1; es-ES; rv:1.9.1.5) Gecko/20091102 Firefox/3.5.5 (.NET CLR 3.5.30729)
        Accept  */*
        Accept-Language es-es,es;q=0.8,en-us;q=0.5,en;q=0.3
        Accept-Encoding gzip,deflate
        Accept-Charset  ISO-8859-1,utf-8;q=0.7,*;q=0.7
        Keep-Alive  300
        Connection  keep-alive
        Referer http://localhost:8080/test-webapp/resourceHeaders.jsf
        Cookie  JSESSIONID=1pkha2z8zhgvu
        If-Modified-Since   Fri, 11 Dec 2009 21:34:13 GMT
        If-None-Match   W/""102-1260567253406""
    
    Header Response:
    
        X-Powered-By    JSF/2.0
        Expires Fri, 11 Dec 2009 22:00:33 GMT
        Content-Type    application/x-javascript
        Etag    W/""102-1260567253406""
        Last-Modified   Fri, 11 Dec 2009 21:34:13 GMT
        Content-Length  102
        Server  Jetty(6.1.16)

RI
    GET button.gif.jsf
    Header Request:

        Host    localhost:8080
        User-Agent  Mozilla/5.0 (Windows; U; Windows NT 5.1; es-ES; rv:1.9.1.5) Gecko/20091102 Firefox/3.5.5 (.NET CLR 3.5.30729)
        Accept  image/png,image/*;q=0.8,*/*;q=0.5
        Accept-Language es-es,es;q=0.8,en-us;q=0.5,en;q=0.3
        Accept-Encoding gzip,deflate
        Accept-Charset  ISO-8859-1,utf-8;q=0.7,*;q=0.7
        Keep-Alive  300
        Connection  keep-alive
        Referer http://localhost:8080/test-webapp/resourceHeaders.jsf
        Cookie  JSESSIONID=1pkha2z8zhgvu
        If-Modified-Since   Wed, 02 Dec 2009 04:52:45 GMT
        If-None-Match   W/""61-1259729565078""

    Header Response:

        X-Powered-By    JSF/2.0
        Content-Type    image/gif
        Expires Fri, 11 Dec 2009 22:07:47 GMT
        Etag    W/""61-1259729565078""
        Last-Modified   Wed, 02 Dec 2009 04:52:45 GMT
        Content-Length  61
        Server  Jetty(6.1.16)

MYFACES

    GET testjs.js.jsf
    Header Request:

        Host    localhost:8080
        User-Agent  Mozilla/5.0 (Windows; U; Windows NT 5.1; es-ES; rv:1.9.1.5) Gecko/20091102 Firefox/3.5.5 (.NET CLR 3.5.30729)
        Accept  text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
        Accept-Language es-es,es;q=0.8,en-us;q=0.5,en;q=0.3
        Accept-Encoding gzip,deflate
        Accept-Charset  ISO-8859-1,utf-8;q=0.7,*;q=0.7
        Keep-Alive  300
        Connection  keep-alive
        Cookie  JSESSIONID=1pkha2z8zhgvu

    Header Response:

        Content-Type    application/x-javascript
        Content-Length  72
        Server  Jetty(6.1.16)

Also, a 304 Not Modified response was returned by the server for all resources.

It was tested too if EL expressions are allowed on javascript or css files, but now it is only allowed on css files. 

The problem with ProjectStage in jsf javascript api was solved adding a param called ""stage"" on the rendered javascript url. If we are on Production stage, no param is written, 

but if we are on other stage, the javascript code must extract it in some way from its base url.

Since cache headers are present when request for resources, EL Expressions has application scope.

Note all three component libraries: Tobago, Trinidad and Tomahawk add cache headers, so we need to review what we do on all three:

Tomahawk:

    MyFacesResourceLoader read and set the following headers:
    
        If-Modified-Since (read)
        Last-Modified (set)
        Expires (set one week later)
        Cache-Control (set max-age=43200 or 12 hours)
    
        It also has an algorithm to correct contentType.
    
    StreamingResourceLoader set the following headers:
    
        pragma (set no-cache)
        Cache-control (no-cache, must-revalidate)
        
    CAPTCHARenderer does not set renderers.

    In theory, for jsf 2.0 we can replace MyfacesResourceLoader with the default impl and use a ResourceHandlerWrapper for StreamingResourceLoader and CAPTCHARenderer instead.

Trinidad:

   ResourceServlet has a method _setHeaders that set the following:

Last-Modified (Depends if is file or jar)
Cache-Control (set Public)
Expires (set to one year later)

Tobago:
   
   When no cache is required it sets:

      response.setHeader(""Cache-Control"", ""no-cache,no-store,max-age=0,must-revalidate"");
      response.setHeader(""Pragma"", ""no-cache"");
      response.setDateHeader(""Expires"", 0);
      response.setDateHeader(""max-age"", 0);

   Otherwise on ResourceServlet

      response.setHeader(""Cache-Control"", ""max-age="" + expires);
      response.setDateHeader(""Expires"", new Date().getTime() + (expires * 1000));

We have to keep into account css files have application scope for define cache headers.

That's all info required and pointers to code we can use for add cache headers on myfaces. 
",MYFACES-2460
"Since ExceptionHandlerImpl changed, this class also has to be changed. Furthermore, the features described in spec section 6.2.2 and the spec javadoc of PreJsf2ExceptionHandlerFactory are not implemented so far.",MYFACES-2459
"There are a couple minor AJAX-related bugs:

* h:commandButton needs to append ""return false;"" for onclick when a behavior chain is present.
* if <f:ajax> disabled=true, the AJAX call is still emitted.
* Possible issue with <f:ajax> execute=""multiple ids"".  Seems the javax.faces.partial.execute request param may differ from Sun RI.
* Unable to restore StateHolder when listener is specified for <f:ajax>.
* <f:ajax> onevent not being handled.
* <f:ajax> onerror not being handled.
* <f:ajax> render=""@all"" not working correctly.
* <f:ajax> render=""@form"" not working correctly.
* <f:ajax> render=""@this"" not working correctly.
",MYFACES-2458
"escape property maps to UISelectItem.itemEscaped property, so we need to create a TagHandler that ""alias"" this property. It works in jsp but not on facelets

Note this fix makes fails one TCK test, but the expected behavior is this, so we need to request exclude that test from TCK.",MYFACES-2457
"Actually there is no way to know which interfaces implements a component based on myfaces-metadata.xml.

Here we have the following cases:

1. Non abstract class. All interfaces should be included.
2. Template base class with interfaces used to create properties (like _HtmlCommandButton). This interfaces could be ignored.
3. Abstract class used to generate real implementing class. There could be interfaces used to create properties, but since the real class extends from this class all interfaces should be implemented.

This issue could be related in some way to MYFACES-2455.",MYFACES-2456
"Actually we use something like this:

@JSFComponent
(name = ""h:commandButton"",
clazz = ""javax.faces.component.html.HtmlCommandButton"",template=true,
tagClass = ""org.apache.myfaces.taglib.html.HtmlCommandButtonTag"",
defaultRendererType = ""javax.faces.Button"",
implementz = ""javax.faces.component.behavior.ClientBehaviorHolder"",
defaultEventName = ""action""
)

Look the part that says implementz. In this way we notice if the component is implementing ClientBehaviorHolder interface and the method:

java.util.Collection<String> getEventNames()

is override properly in a similar way saveState and restoreState methods are generated in 1.2 or earlier. 

Note that in myfaces core we don't have a hierarchy of components that implements ClientBehaviorHolder, so we have to deal in this method properly. The typical case looks like this:

    static private final java.util.Collection<String> CLIENT_EVENTS_LIST = 
        java.util.Collections.unmodifiableCollection(
            java.util.Arrays.asList(
             ""change""
            , ""select""
            , ""click""
            , ""dblclick""
            , ""keydown""
            , ""keypress""
            , ""keyup""
            , ""mousedown""
            , ""mousemove""
            , ""mouseout""
            , ""mouseover""
            , ""mouseup""
            , ""blur""
            , ""focus""
            , ""action""
        ));

    public java.util.Collection<String> getEventNames()
    {
        return CLIENT_EVENTS_LIST;
    }

If the child component adds one behavior, a new Collection<String> should be generated and the method should be override again.

There is another problem related, the method:

public String getDefaultEventName()

is override if defaultEventName is set.

In myfaces-builder-plugin we also have a small bug (or todo) with defaultEventName. This attribute is merged for all child components, so in the velocity template that generates component classes, this method is override many times as ""levels"" in the hierarchy from the component that defines this method. We have to keep track if the current component define this property or not.
",MYFACES-2455
"see spec section »6.2.3 Default Error Page« for details.

This includes the following tasks:

- <ui:include src=""javax.faces.error.xhtml"" /> should include the standard error page (created by _ErrorPageWriter in MyFaces) in any facelet error page defined in web.xml
- <error-page> entries in web.xml should take priority over MyFaces' default error page (currently you have to disable it via org.apache.myfaces.ERROR_HANDLING first)
- UIInput should create an UpdateModelException and publish it, if an exception occurs in updateModel()
- The error page should also include the view and the flash scope attributes",MYFACES-2454
"On facelets f:view is no longer needed, but it still can be used to set the locale or to register the beforePhase and the afterPhase MethodExpressions on UIViewRoot.

So the following code has to work on facelets: 

<f:view beforePhase=""#{myBean.beforePhase}"" afterPhase=""#{myBean.afterPhase}"" />  

At the moment, <f:view> is just ignored by facelets.",MYFACES-2453
"JSF 1.2
Facelets 1.1.14
AJAX4JSF [richfaces-ui-3.3.2.SR1]
State Saving : Server

Myfaces implementation doesn't provide support for the compatibility RestoreView  according to JSF1.1 where if viewroot is null, it will be created again instead of throw ViewExpiredException. Sun JSF RI provides a compatibility mode using parameter com.sun.faces.enableRestoreView11Compatibility in the web.xml and then if configured it will be consulted while taking decision to create the view again or throw the ViewExpired exception.
Due to this after moving to JSF 1.2 it keep on throwing VewExpiredException if couldn't be found in the session map, when state saving method is server.
Please refer to the code in class com.sun.faces.lifecycle.RestoreViewPhase#execute method
-------------------------------------------------------------------------------------------------------
public void execute(FacesContext facesContext) throws FacesException {
:
                    boolean isPostBack = (facesContext.isPostback() && !isErrorPage(facesContext));
  196           if (isPostBack) {
  197               facesContext.setProcessingEvents(false);
  198               // try to restore the view
  199               viewRoot = viewHandler.restoreView(facesContext, viewId);
  200               if (viewRoot == null) {
  201                   if (is11CompatEnabled(facesContext)) {
  202                       // 1.1 -> create a new view and flag that the response should
  203                       //        be immediately rendered
  204                       if (LOGGER.isLoggable(Level.FINE)) {
  205                           LOGGER.fine(""Postback: recreating a view for "" + viewId);
  206                       }
  207                       viewRoot = viewHandler.createView(facesContext, viewId);
  208                       facesContext.renderResponse();
  209   
  210                   } else {
  211                       Object[] params = {viewId};
  212                       throw new ViewExpiredException(
  213                             MessageUtils.getExceptionMessageString(
  214                                   MessageUtils.RESTORE_VIEW_ERROR_MESSAGE_ID,
  215                                   params),
  216                             viewId);
  217                   }
  218               }
  219   
  220               facesContext.setViewRoot(viewRoot);
  221               facesContext.setProcessingEvents(true);
  222               if (LOGGER.isLoggable(Level.FINE)) {
  223                   LOGGER.fine(""Postback: restored view for "" + viewId);
  224               }
  225           }
-------------------------------------------------------------------------------------------------------------------------------------
Similar support should be provided by Mayfaces also. With sate saving as server, the state saving/restoring is not very reliable and throw VEE many a times. RichFaces also uses the parameter com.sun.faces.enableRestoreView11Compatibility to run its test suite.

This is really a blocking issue until the problem of state saving at server is not fully solved and made reliable. 
",MYFACES-2452
Add @JSFWebConfigParam annotation to new parameters in JSF 2.0,MYFACES-2451
"ViewHandler.deriveViewId must check is viewId really exists.

Actually, we are using this method on RestoreViewExecutor to retrieve a valid vdl instance. But it seems the intention of this method is be called from NavigationHandlerImpl.

The effect of do not check is that if there is a commandButton or link with an action=""someString"" and this string does not point to any page and someString.jsp/someString.xhtml does not exists (derived from preemptive navigation), a 404 response happens, and the normal case has been always execute a postback.

Note that if we call it from RestoreViewExecutor and we check for file, TCK will fail because some tests create dummy views. The solution is add a proper method in RestoreViewSupport to deal with this fact (do the same as deriveViewId, but do not check).",MYFACES-2450
This happens when orchestra for jsf 2.0 is used,MYFACES-2449
Wrappers created in 1.2 version should wrap new methods added in 2.0,MYFACES-2448
See spec 12.3 PhaseListener for details.,MYFACES-2447
"While performing a lot of ExceptionHandler related tests on mojarra, I found out that MyFaces' ExceptionHandlerImpl behaves differently in some cases.",MYFACES-2446
"A NPE is thrown on rendering outcome target links that have no parameters set.

Reason is that HtmlRendererUtils.getOutcomeTargetLinkHref only creates parameters map if an actual parameter exists but this map is always accessed in further processing.",MYFACES-2445
"I implemented new features for c:set as defined in the pdl doc. I am not sure what to do with the value attribute. On the one hand it is not required but then in the two cases stated it is needed again...

Anyway added most of the new functionality I guess.",MYFACES-2444
"org.apache.myfaces.shared_impl.webapp.webxml.WebXmlParser parse Unable to parse web.xml
java.net.ConnectException: A remote host did not respond within the timeout period.

this im getting when i deploy my webapplication on AIX,WAS7 box",MYFACES-2443
"Hello,

We detect a problem when using MyFaces 1.2.2 within an OSGi container. The problem occurs when MyFaces tryies to initialize the default JspFactory from the Jsp21FacesInitializer class. It seems that the code which poses problem is the following:

 if (jspFactory == null) {
            // TODO: this Class.forName will be removed when Tomcat fixes a bug
            // also, we should then be able to remove jasper.jar from the deployment
            try {
                Class.forName(""org.apache.jasper.compiler.JspRuntimeContext"");
            } catch (ClassNotFoundException e) {
                ; // ignore
            } catch (Exception ex) {
                log.debug(""An unexpected exception occured ""
                        + ""while loading the JspRuntimeContext."", ex);
            }

            jspFactory = JspFactory.getDefaultFactory();
        }

As a matter of fact, the getDefaultFactory method returns null in this context...

If we force MyFaces to use the Jsp20FacesInitializer class from the ContainerUtils class as following:

public class ContainerUtils

{

    /**

     * Determines whether we're running in a Servlet 2.5/JSP 2.1 environment.

     * 

     * @return <code>true</code> if we're running in a JSP 2.1 environment,

     *         <code>false</code> otherwise

     */

    public static boolean isJsp21()

    {

        /*try 

        {

            // simply check if the class JspApplicationContext is available

            Class.forName(""javax.servlet.jsp.JspApplicationContext"");

            return true;

        } 

        catch (ClassNotFoundException ex) 

        {

            ; // expected exception in a JSP 2.0 (or less) environment

        }*/

        

        return false;

    }


    (...)
}

the problem doesn't occur and MyFaces can be used.

Regards,
Thierry",MYFACES-2442
"Using context parameter ""org.apache.myfaces.ERROR_HANDLER"", you can override default
error handling functionality. In my case, handling ViewExpiredException's is particularly useful,
but otherwise the default is fine.

I couldn't do the obvious, because the default error handler is hidden:

    public void handleException(FacesContext fc, Exception ex) throws ServletException, IOException
    {
        if (ex instanceof ViewExpiredException)
        {
            // redirect
        }
        else
        {
            _ErrorPageWriter.handleException(fc, ex);
        }
    }

Could the default error handler be exposed and perhaps renamed to something like ""DefaultErrorPageWriter""?
",MYFACES-2441
"Hi,

im getting the following exception when im deplying one of my webapplication and run the server

org.apache.myfaces.shared_impl.webapp.webxml.WebXmlParser parse Unable to parse web.xml
java.net.ConnectException: A remote host did not respond within the timeout period.

thanks",MYFACES-2440
"The current implementation of FacesContext.getMessages() doe not take into account the addition order, and the spec javadoc is clear on this field.",MYFACES-2439
"One test that comes from tck does not allow to put a HTML.NBSP_ENTITY before start label text for a select one radio. It is known that do not render this stuff could cause a checkbox be rendered too close to the text (see TOMAHAWK-1395), but note here we are taking about a radio button. Anyway, we have to replace render this text with a space in order to pass a tck test.",MYFACES-2438
columnClasses must not be rendered if colums > columnClasses,MYFACES-2437
BeanValidator does not validate if value is null. As a result it is not possible to check @NotNull.,MYFACES-2436
"MIchael Kurz tested Mojarra and found out that <f:facet> now can have more than one child. If so, the children will automaticall be put in a UIPanel to serve facet requirements.

However, this improvement is not mentioned in the spec, filed spec issue: https://javaserverfaces-spec-public.dev.java.net/issues/show_bug.cgi?id=677",MYFACES-2435
"Currently the _SystemEventServletRequest and _SystemEventServletResponse classes implement ServletRequest and ServletResponse directly.   There are several new methods that must be implemented in the servlet 3.0 updates of those interfaces.  

This can be resolved by changing them to extend ServletRequestWrapper and ServletResponseWrapper instead of implementing directly.  ",MYFACES-2434
"In MyFaces 1.2.8 in org.apache.myfaces.shared_impl.renderkit.html.HtmlRendererUtils.prepareScript() 2 errors slipped into the script functions oamClearHiddenInput and oamSetHiddenInput:

While trying to implement the workaround for document.forms[formname] not finding any form after partial page rendering and replacement of HTML  DOM fragments including HTML forms (because of a bug (?) in Firefox) a test has been added:

var form = document.forms[formname]; 
if ( typeof form == 'undefined')
{
    form = document.getElementById(formName);
}

But in oamClearHiddenInput and oamSetHiddenInput the function parameter is named 'formname' instead of 'formName' (only in oamSubmitForm is it named 'formName'). 
That's why 

document.getElementById(formName)

does not work in both functions.

By the way: You probably fixed this due to the bug 2256 which I issued. 
Except for those two copy&paste erros it works and I want to thank you for the fix.
Maybe one should not use 

document.forms[formname]

and the test

if ( typeof form == 'undefined')

at all and just use 

var form = document.getElementById(formname) 

in order to keep the code simple.
But I do not know if you think this approach is to slow or maybe it does not work in all browsers.
",MYFACES-2433
InsertChildrenHandler.RelocateAllChildrenListener throws IndexOutOfBoundsException for composite components with composite:insertChildren tag. The reason for this is that the listener is initialized with the wrong index. Should be parent.getChildCount() instead of parentCompositeComponent.getChildCount() to insert child components at the correct position when the listener is called.,MYFACES-2432
"I have troubles with the serialization of the state in the session. Every time the state should be stored the following exception is thrown in DefaultFaceletsStateManagementHelper.serializeView(): java.io.NotSerializableException: javax.faces.component.UIPanel. This seems to happen on all pages of my app.

This has some nasty side effects like the death of the view scope for instance. Setting org.apache.myfaces.SERIALIZE_STATE_IN_SESSION in the web.xml resolves this issue but this is not so easy to find out... Anyway, something seems to be wrong here.

",MYFACES-2431
If the image url of a command button contains a value expression which resolves to a resource url (via implicit object resource) the url is not rendered correctly. In this case the context path is rendered twice.,MYFACES-2430
Creating resources gets property with key javax.faces.resource.localePrefix for locale aware resources in ResouceHandlerImpl. If this property does not exist (which is possible) a MissingResourceException is thrown but not catched. This leads to non working resource loading.,MYFACES-2429
"The id generation strategy is critical to allow partial state saving works correctly, because all component state is saved on a map, and the clientId is the primary key for it.

Actually, we just pass the facelet generated id for each tag as a seed for UniqueIdVendor.createUniqueId(FacesContext context, java.lang.String seed), This id cause an exception in htmlunit version 2.4 or lower (in 2.5 this was fixed).

The objective of UniqueIdVendor interface is reduce the variation when ids are generated. The ideal case is that for any facelet page the generated ids assigned to components should remain the same no matter if the model changes by some reason.

The problem starts when it is used <c:forEach> or <c:if> tags, because its behavior depends on the ""model"" state in a point of the time. The id generated by facelets is depends on the facelet ""alias"" page name, a counter id from CompilationManager.

We need to do multiple tests for worst case scenarios, and try to define an strategy to reduce the variability of ids, providing proper ""seeds"" for it. 

Suggestions are welcome",MYFACES-2428
"When a EL expression starting with ""#{cc."" is resolved during broadcast for events, null is returned because the method UIViewRoot._broadcastAll only set the current component and not take into account the composite parent",MYFACES-2427
"UISelectItem itemEscaped should return true as default, because for SelectItem escape property is true as default",MYFACES-2426
"This functions must check for null or not valid values and correct it before call the real ones. Also, it is necessary to fix escapeXML function.",MYFACES-2425
"c namespace changed from

http://java.sun.com/jstl/core

to

http://java.sun.com/jsp/jstl/core

The solution is change only one constant but this ones is enough important to be included in the alpha release",MYFACES-2424
"On the javadoc of h:dataTable, it says:

""....Column Groups

      If the UIData component has a ""colgroups"" facet, render its contents. Consistent with the rules of facets in general, this facet must have only one child. In general, this will be a panel group component that will contain colgroup and col elements per the HTML Table specification. Use of column grouping can improve accessibility. This facet must be rendered before the table header and footer..........""

Since it is not marked with green or orange, we just skip it, but it is a new feature.",MYFACES-2423
We still use the package name org.apache.shale.test and since this code is no myfaces land we should change it.,MYFACES-2422
"The class FacesConfigurator which configures the JSF factories does this in the wrong order. There is no way of using the default FacesContextFactoryImpl of myfaces if you've got another implementation of the FacesContextFactory on the classpath. The FacesConfigurator configures the factories from standard-faces-config.xml first which enables the default factory implementations.After that, the classpath is consulted and all factory implementations found will be added to the FactoryFinder. Any found implementation that is already registered in the FactoryFinder will be rejected and based on the last added prinicple of returning factories, this will lead to that the default myfaces factories will never be returned even if I specify that I want the default implementation in my faces-config.xml.

The problem I'm having is that we use the SUN portlet bridge which is added to our classpath and the factories defined by the portletbridge will be used for all faces requests.

I've would like to be able to override which factory implementation to be used.

Regards,
Hampus",MYFACES-2421
"When running jsf-cardemo from jsf ri 1.1 with myfaces 1.1.7 on tomcat and click the image of the page, myfaces will throw an exception. The detail is as follows:

The error message:

An exception occurred processing JSP page /storeFront.jsp at line 96 93: styleClass=""storeFrontCar""> 94: 95: <!-- Jalopy --> 96: <h:graphicImage binding=""#{carstore.models.Jalopy.components.imageSmall}"" /> 97: <h:outputText styleClass=""subtitlebig"" 98: value=""#{carstore.models.Jalopy.attributes.title}"" /> 99: <h:outputText Stacktrace:

Caused by:
java.lang.IllegalArgumentException - Component javax.faces.component.UIGraphic is no javax.faces.component.html.HtmlGraphicImage

The stack trace:

javax.faces.FacesException: An exception occurred processing JSP page /storeFront.jsp at line 96

93:                           styleClass=""storeFrontCar"">
94: 
95:                 <!-- Jalopy -->
96:                 <h:graphicImage binding=""#{carstore.models.Jalopy.components.imageSmall}"" />
97:                 <h:outputText styleClass=""subtitlebig""
98:                   value=""#{carstore.models.Jalopy.attributes.title}"" />
99:                 <h:outputText 


Stacktrace:
	at org.apache.myfaces.context.servlet.ServletExternalContextImpl.dispatch(ServletExternalContextImpl.java:432)
	at org.apache.myfaces.application.jsp.JspViewHandlerImpl.renderView(JspViewHandlerImpl.java:255)
	at org.apache.myfaces.lifecycle.RenderResponseExecutor.execute(RenderResponseExecutor.java:41)
	at org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:146)
	at javax.faces.webapp.FacesServlet.service(FacesServlet.java:147)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:228)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:175)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:433)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:128)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:104)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:216)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:844)
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:634)
	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:445)
	at java.lang.Thread.run(Thread.java:619)
Caused by: org.apache.jasper.JasperException: An exception occurred processing JSP page /storeFront.jsp at line 96

93:                           styleClass=""storeFrontCar"">
94: 
95:                 <!-- Jalopy -->
96:                 <h:graphicImage binding=""#{carstore.models.Jalopy.components.imageSmall}"" />
97:                 <h:outputText styleClass=""subtitlebig""
98:                   value=""#{carstore.models.Jalopy.attributes.title}"" />
99:                 <h:outputText 


Stacktrace:
	at org.apache.jasper.servlet.JspServletWrapper.handleJspException(JspServletWrapper.java:515)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:426)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:320)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:266)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:803)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:687)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:469)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:403)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:301)
	at org.apache.myfaces.context.servlet.ServletExternalContextImpl.dispatch(ServletExternalContextImpl.java:426)
	... 17 more
Caused by: java.lang.IllegalArgumentException: Component javax.faces.component.UIGraphic is no javax.faces.component.html.HtmlGraphicImage
	at org.apache.myfaces.taglib.html.HtmlGraphicImageTag.setProperties(HtmlGraphicImageTag.java:215)
	at javax.faces.webapp.UIComponentTag.findComponent(UIComponentTag.java:777)
	at javax.faces.webapp.UIComponentTag.doStartTag(UIComponentTag.java:472)
	at org.apache.jsp.storeFront_jsp._jspx_meth_h_005fgraphicImage_005f1(storeFront_jsp.java:459)
	at org.apache.jsp.storeFront_jsp._jspx_meth_h_005fpanelGrid_005f1(storeFront_jsp.java:387)
	at org.apache.jsp.storeFront_jsp._jspx_meth_h_005fpanelGrid_005f0(storeFront_jsp.java:326)
	at org.apache.jsp.storeFront_jsp._jspx_meth_h_005fform_005f0(storeFront_jsp.java:238)
	at org.apache.jsp.storeFront_jsp._jspx_meth_f_005fview_005f0(storeFront_jsp.java:185)
	at org.apache.jsp.storeFront_jsp._jspService(storeFront_jsp.java:112)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:803)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:384)
	... 27 more

Please help about it.
",MYFACES-2420
,MYFACES-2419
,MYFACES-2418
"In jsf 1.2 this is not possible, but now it is.",MYFACES-2417
,MYFACES-2416
EnumConverter should only conver to String valid enum values,MYFACES-2415
"ResourceHandlerImpl should scan first with locale prefix and then without it. Also, we should do the same as MessageUtils to get the locale prefix to be consistent.",MYFACES-2414
"@ResourceDependency annotations should be scanned when Application.createConverter(String) and Application.createValidator(String) is called

Right now there are called on UIOutput.setConverter and UIOutput.setValidator.",MYFACES-2413
"Testing f:ajax I ran into the following warning:

WARNUNG: Resource referenced by resourceName jsf.js and libraryName javax.faces not found in call to ResourceHandler.createResource. It will be silenty ignored.

So there is no javascript for f:ajax and thus it does not work.",MYFACES-2412
"It is necessary to do the following tasks:

1. Remove @Deprecate annotations because it breaks tck signature test.
2. Add missing exceptions
3. Replace Class<?> with Class

",MYFACES-2411
"Testing the mojarra bean-validation sample on Glassfish v3 prelude and JBoss 6.0.0.M1, I ran into the following exception:

javax.servlet.ServletException: /placeOrder.xhtmlat line 49 and column 109 <f:validateBean> Parent not composite component or an instance of EditableValueHolder: javax.faces.component.html.HtmlForm@494c491b

f:validateBean is used as a container of EditableValueHolders in the sample, the following code shoes where the error occurs:

<h:form>
    <f:validateBean validationGroups=""beanvalidation.groups.Personal , beanvalidation.groups.Order"">
        <ui:include src=""/WEB-INF/fragments/form.xhtml""/>
    </f:validateBean>
</h:form>

where <ui:include src=""/WEB-INF/fragments/form.xhtml""/> includes a form of some <h:inputText> (--> EditableValueHolder) components.

However, f:validateBean is also used inside of some of the <h:inputText> components and works well at this point.",MYFACES-2410
"Testing the mojarra bean-validation sample, I found out that c:choose does not work correctly, because it renders every possible option.

For example: The following facelet code will result in ""when_false when_true otherwise"", but should result in ""when_true"".

<c:choose>
        <c:when test=""#{false}"">
            when_false
        </c:when>
        <c:when test=""#{true}"">
            when_true
        </c:when>
        <c:otherwise>
            otherwise
        </c:otherwise>
</c:choose>",MYFACES-2409
,MYFACES-2408
"The following methods:

set(int index, UIComponent value)
add(int index, UIComponent value)
addAll(int index, Collection<? extends UIComponent> c)

are not handled correctly. Suppose the case one component is already on the list and it is added again using add(int index, UIComponent value). If the component is after the index the effect is the component is not changed from place, because _ComponentChildrenList.updateParent(UIComponent) do two things: remove from children collection and set parent.

We need to ensure the following from _ComponentChildrenList

- Implement all methods from List (or make sure every method works as expected).
- Implement Serializable interface. (done)
- If a null value is added throw NullPointerException (done in checkValue(Object))
- If it is added a value not implementing UIComponent throws ClassCastException (done in checkValue(Object))

In theory, before add or set we should remove, but only after this one is added we should call setParent() to trigger PostAddToViewEvent and PreRemoveFromViewEvent.

Also, it could be good to create several junit tests.",MYFACES-2407
"Create a view with viewId is null should be possible. This is required to run the TCK tests. Note that myfaces is doing things right checking for null on this case, but since we must pass the TCK to make a release, we don't have choice.",MYFACES-2406
"The f:ajax renderer is not applying spaces between multiple IDs specified in the ""render"" and ""execute"" attributes.",MYFACES-2405
"Right now, JspViewDeclarationLanguageStrategy check if the current viewId contains the specified suffixes. This is correct but by default jsp mode should be choosen. This is required to make TCK tests works. ",MYFACES-2404
"Checking the manifest.mf of ri and other information related to supported environment, it seems that now jsf 2.0 is jdk 1.5 compatible, so we have to change all 1.6 code inside myfaces core.",MYFACES-2403
"Conditional navigation was not being handled correctly in that null was being immediately returned if the first navigation case did not match.  Instead, we should have been continuing to loop through the remaining navigation cases to find a match.",MYFACES-2402
"Trying to run this command from base myfaces core directory:

mvn clean deploy -DperformRelease=true -DaltDeploymentRepository=myfaces-local-staging::default::scp://localhost/home/lu4242/stage/repo128 -Psign-artifacts -Dpassphrase=??? 

Throws this when start to build impl module:

[INFO] Trace                                                                   
org.apache.maven.lifecycle.LifecycleExecutionException: Unable to load metadata
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:584)                                                
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLifecycle(DefaultLifecycleExecutor.java:500)                                    
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:479)                                                 
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:331)                                
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:292)                                         
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:142)                                                     
        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:336)      
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:129)        
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:301)               
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)         
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)                                                                      
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)                                                              
        at java.lang.reflect.Method.invoke(Method.java:592)                    
        at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315) 
        at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)         
        at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)                                                                              
        at org.codehaus.classworlds.Launcher.main(Launcher.java:375)           
Caused by: org.apache.maven.plugin.MojoExecutionException: Unable to load metadata                                                                            
        at org.apache.myfaces.buildtools.maven2.plugin.builder.IOUtils.readModel(IOUtils.java:371)                                                            
        at org.apache.myfaces.buildtools.maven2.plugin.builder.IOUtils.getModelsFromArtifacts(IOUtils.java:282)                                               
        at org.apache.myfaces.buildtools.maven2.plugin.builder.BuildMetaDataMojo.execute(BuildMetaDataMojo.java:276)                                          
        at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:453)                                                            
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:559)                                                
        ... 16 more                                                            
Caused by: java.util.zip.ZipException: oversubscribed dynamic bit lengths tree 
        at java.util.zip.InflaterInputStream.read(InflaterInputStream.java:140)
        at java.io.FilterInputStream.read(FilterInputStream.java:111)
        at sun.nio.cs.StreamDecoder$CharsetSD.readBytes(StreamDecoder.java:411)
        at sun.nio.cs.StreamDecoder$CharsetSD.implRead(StreamDecoder.java:453)
        at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:183)
        at java.io.InputStreamReader.read(InputStreamReader.java:167)
        at com.icl.saxon.aelfred.XmlParser.readDataChunk(XmlParser.java:4292)
        at com.icl.saxon.aelfred.XmlParser.readCh(XmlParser.java:3402)
        at com.icl.saxon.aelfred.XmlParser.tryRead(XmlParser.java:4159)
        at com.icl.saxon.aelfred.XmlParser.tryEncodingDecl(XmlParser.java:3739)
        at com.icl.saxon.aelfred.XmlParser.pushURL(XmlParser.java:3603)
        at com.icl.saxon.aelfred.XmlParser.doParse(XmlParser.java:159)
        at com.icl.saxon.aelfred.SAXDriver.parse(SAXDriver.java:320)
        at org.apache.commons.digester.Digester.parse(Digester.java:1785)
        at org.apache.myfaces.buildtools.maven2.plugin.builder.IOUtils.readModel(IOUtils.java:364)
        ... 20 more

The problem is not blocking, because it is possible to do this:

cd impl
mvn clean deploy -DperformRelease=true -DaltDeploymentRepository=myfaces-local-staging::default::scp://localhost/home/lu4242/stage/repo128 -Psign-artifacts -Dpassphrase=??? 

and continue the deploy. This has never happened on earlier releases, and suggest a problem outside myfaces builder plugin, but anyway it is better to let this one here as reference.
",MYFACES-2401
"myfaces-builder-plugin build-metadata goal depends on build-helper-maven-plugin add-source goal to set the directories to be used when build metadata. This fails with some newer maven versions that does not ensure goal execution order. The idea is add a new param called sourceDirectories that if set, use the selected directories to scan for .java files and extract annotation or doclet information.",MYFACES-2400
"Testing the mojarra-example ""custom-tag"", I ran into the following Exception:

06.11.2009 12:29:18 org.apache.myfaces.el.unified.resolver.ManagedBeanResolver putInScope
SCHWERWIEGEND: Managed bean 'data' has illegal scope: view

The managed bean ""data"" is annotated with @ViewScoped, but the ManagedBeanResolver does not know this scope.",MYFACES-2399
"no spaces in html-output of f:ajax with render and execute attributes with more than one target

jsf.ajax.request('form:last',event,{render:'form:nameform:firstname','javax.faces.behavior.event':'valueChange'})
instead of
jsf.ajax.request('form:last',event,{render:'form:name form:firstname','javax.faces.behavior.event':'valueChange'})
",MYFACES-2398
"Testing the mojarra 2.0.1 sample ""custom-tag"", I got the following Exception:

javax.faces.FacesException: Component with id:out count eventcount not found

The problem is, that the example uses f:ajax to render 3 components in the following way:

<f:ajax event=""keyup"" render=""out count eventcount"" listener=""#{data.update}""/>

MyFaces does not check, if the value of render is a space delimited list of clientIds and so it wants to find the component with clientId: ""out count eventcount"", which, of course, does not exist.",MYFACES-2397
"Testing the mojarra 2.0.1 sample ""custom-bean-scope"", MyFaces does NOT behave like Mojarra.
The problem is that MyFaces does not propagate a PreDestroyCustomScopeEvent correctly. The following code is from the mojarra sample and shows how the event is published:

public void notifyDestroy() {

            // notify interested parties that this scope is being
            // destroyed
            ScopeContext scopeContext = new ScopeContext(SCOPE_NAME, this);
            application.publishEvent(FacesContext.getCurrentInstance(), PreDestroyCustomScopeEvent.class, scopeContext);

}

However, the @PreDestroy method of the Bean, which is stored in the scope, is not invoked.
",MYFACES-2396
"Running two portlets in the same portal page, using JSF and the MyFaces Portlet Bridge (which is the RI for JSR-301, the JSF Portlet Bridge)  yelds the error bellow for the second portlet:

19:31:39,704 ERROR [portletcontainer] exception returned by processAction() or render() methods
javax.portlet.PortletException: doBridgeDispatch failed:  error from Bridge in executing the request
     at javax.portlet.faces.GenericFacesPortlet.doBridgeDispatch(GenericFacesPortlet.java:504)
     at javax.portlet.faces.GenericFacesPortlet.doRenderDispatchInternal(GenericFacesPortlet.java:456)
     at javax.portlet.faces.GenericFacesPortlet.doView(GenericFacesPortlet.java:231)
     at javax.portlet.GenericPortlet.doDispatch(GenericPortlet.java:354)
     at javax.portlet.faces.GenericFacesPortlet.doDispatch(GenericFacesPortlet.java:202)
     at javax.portlet.GenericPortlet.render(GenericPortlet.java:259)
     at org.exoplatform.services.portletcontainer.plugins.pc.aop.PortletMethodCommand.render(PortletMethod Command.java:62)
    at org.exoplatform.services.portletcontainer.plugins.pc.aop.BaseCommandUnit.execute(BaseCommandUnit.java:46)
...
 Caused by: javax.portlet.faces.BridgeException: java.lang.ClassCastException: org.apache.myfaces.renderkit.RenderKitFactoryImpl
     at org.apache.myfaces.portlet.faces.bridge.BridgeImpl.doFacesRender(BridgeImpl.java:654)
     at org.apache.myfaces.portlet.faces.bridge.BridgeImpl.doFacesRequest(BridgeImpl.java:544)
     at javax.portlet.faces.GenericFacesPortlet.doBridgeDispatch(GenericFacesPortlet.java:501)
     ... 63 more
Caused by: java.lang.ClassCastException: org.apache.myfaces.renderkit.RenderKitFactoryImpl
     at org.apache.myfaces.shared_impl.renderkit.RendererUtils.getResponseStateManager(RendererUtils.java: 1158)
     at org.apache.myfaces.lifecycle.DefaultRestoreViewSupport.isPostback(DefaultRestoreViewSupport.java:127)
     at org.apache.myfaces.lifecycle.RestoreViewExecutor.execute(RestoreViewExecutor.java:80)
     at org.apache.myfaces.lifecycle.LifecycleImpl.executePhase(LifecycleImpl.java:103)
     at org.apache.myfaces.lifecycle.LifecycleImpl.execute(LifecycleImpl.java:76)
     at org.apache.myfaces.portlet.faces.bridge.BridgeImpl.doFacesRender(BridgeImpl.java:640)
     ... 65 more


This exception allways happen with the second portlet on the page, whichever it is. I tried with many portlets, but so you can reproduce the problem I'm attaching the wars for two very simple portlets.

I'm filling this under MyFaces Core instead of Portlet Bridge because the same applications, if deployed to use Mojarra (included in JBoss AS 4.2) and the same portelt bridge jars, work fine.",MYFACES-2395
"need to add a call to context.getViewRoot().addComponentResource passing in the context, component and target in cases where the target is set.  ",MYFACES-2394
"two problems that need to be resolved.  

FIrst is that ResourceResolver when handling resource['library:resourceName'], was passing the parsed arguments in backwards to ResourceHandler.createResource.  It should have been name, library, but we were passing library,name.

Second problem is that we were prepending the context root twice due to multiple calls to getResource when the value attribute was a resource EL expression.  First during the createResource call from ResourceResolver, and then again in the image renderer.  Added a check for ResourceHandler.RESOURCE_IDENTIFIER constant prior to calling getResourceURL so we don't add it twice in the EL case. ",MYFACES-2393
"Child components added dynamically at end appears as first child when rendered. Here is a highly simplified case of the problem (source included):

The custom component 'repeat' will simply iterate through its children and renders them. 

Usage:

<netx:repeat binding=""#{testBean.htmlRepeat}"">
		 <h:outputText value=""Child-1""/>
		 <h:outputText value=""Child-2""/>
</netx:repeat>


Below is how the component renders:

[begin - Child-1Child-2 - end] 


BackingBean:

The repeat component is bounded to a backing bean like so:

public class TestBean {

		 private HtmlRepeat htmlRepeat;

		 public HtmlRepeat getHtmlRepeat() {
		 		 return null;
		 }

		 public void setHtmlRepeat(HtmlRepeat htmlRepeat) {
		 		 this.htmlRepeat = htmlRepeat;
		 }

		 // -- action method
		 public String formSubmitted() {
		 		 System.out.println(""formSubmitted()"");

		 		 Application application = FacesContext.getCurrentInstance().getApplication();

                                 // Create a new child and add it to the parent
		 		 HtmlOutputText child = (HtmlOutputText) application.createComponent(HtmlOutputText.COMPONENT_TYPE);

		 		 child.setValue(""Child-3"");
		 		 htmlRepeat.getChildren().add(child);
		 		 
		 		 return null;
		 }
}

and the form is submitted using <h:commandButton value=""Submit"" action=""#{testBean.formSubmitted}""/>

The formSubmitted() method simply adds a child to htmlRepeat using htmlRepeat.getChildren().add(child). Note that the child is added as the last
child to the children list. But when the response is rendered, the newly added child appears at the beginning.

Expected Output:
		 [begin - Child-1Child-2Child-3 - end] 

Actual Output:
		 [begin - Child-3Child-1Child-2 - end] 

Attachments:

1. jsf-repeat.jar - Deployable JSF component packaged as jar (contains .java
files, faces-config.xml and facelet taglib).

		 Download >> http://keerthi.linux.googlepages.com/jsf-repeat.jar

2. TestRepeat.xhtml - Facelet view using the <netx:repeat/> custom component

		 Download >> http://keerthi.linux.googlepages.com/TestRepeat.xhtml (Use Save
target as, otherwise you will get only a blank page)

Note: Tested on myfaces1.2.6/Tomcat 6.20/Facelets .14 & .15",MYFACES-2392
"When loading resources from a jar on the classpath, some resources aren't being loaded properly due to incorrectly assigned versions.  This is occurring due to not checking against the REGEX pattern that the version matches what is expected by the spec.  

",MYFACES-2391
"the graphic image tag doesn't currently handle the library attribute necessary to fully support the new resource handling mechanism in JSF 2.0.  

While making the change, I also noticed that HtmlScriptRenderer and HtmlStylesheetRenderer should be updated to use the JSFAttr.NAME_ATTR constant instead of hardcoding ""name"".   Also will create a JSFAttr.LIBRARY_ATTR constant and update HtmlImageRendererBase and the above mentioned renderer classes to utilize this as well.  ",MYFACES-2390
"current version needs some clean ups. Also it is NOT clear if the current behavior is really 100% compliant to the SPEC, as it doesn't say much. Same is true for the JavaDocs.
Filed this SPEC/JSF API bug:
https://javaserverfaces.dev.java.net/issues/show_bug.cgi?id=1384",MYFACES-2389
"On placing a link on a Dialog to download a file, gives javascript error ""Form undefined"".
Find Sample generated Js below:

oamSubmitForm('downloadDialog-f','downloadDialog-f:downloadBulkData',null,[['Uri','ExportedData.zip']]);

On analyzing further, in methods, oamSubmitForm() and oamSetHiddenInput() it can't find the form.
I modified ""Get form logic"" from:

var form = document.forms[formName]; 

   to

var form = document.getElementById(formName);

and it now works. We are currently using this workaround. But a neat solution in the jar would be more preferable. ",MYFACES-2388
"When attaching a ValueChangeListener to a component in a JSF 2.0 application with partial state saving enabled, the state of the component is not being restored properly.  On a second, third, etc postback, the before value is always reverting to the original value, either the components value field or null if the value field is not set.  

I've discussed with Leonardo on the mailing list and he has volunteered to investigate (Thanks Leonardo).   Will attach a simple testcase war to reproduce.  ",MYFACES-2387
"Matthias pointed me to a TCK issue in the Bean Validation related classes (BeanValidator, UIInput).

I've created some public static final booleans, used to determine @startup whether Bean Validation and Unified EL are available.

The reason to declare them as public was because they are shared between the ""javax.faces.component"" and ""javax.faces.bean"" packages, but it will probably cause TCK failures.

Solution: Refactor the environment related ""constants"" to a package-private class that exists in all necessary packages. This class might delegate the plumbing to the IMPL to prevent code duplication.

See the issue on the mailing list:
http://www.nabble.com/-JSF-2.0--JSR-303-support-in-MyFaces-2.0-td25969477.html",MYFACES-2386
"There is a behavior issues with ""INTERPRET_EMPTY_STRING_SUBMITTED_VALUES_AS_NULL"" setting.

See here:
https://javaserverfaces.dev.java.net/issues/show_bug.cgi?id=1375",MYFACES-2385
"AnnotationConfigurator doesn't identify classes annotated with @FacesBehavior as worthy of being scanned.  Also, AbstractTagLibrary uses the wrong constructor for BehaviorHandler classes.",MYFACES-2384
"In jsf 2.0, it was added a way to wrap previous ExternalContext versions, so when new methods are called, the default ones provided by the implementation are called instead.

This problem is also found when it is wrapped jsf 1.1 ExternalContext implementations and they run on myfaces 1.2. This is very rare, but there are some rare cases like weblogic native portlet impl.

The idea is do something very similar to FacesContext way to deal with getELContext: use a private ThreadLocal variable to hold the default instance for the current request. Then, FacesContextFactoryImpl set this variable.
",MYFACES-2383
" On weblogic portal using faces-adapter, the id set and the retrieved one for <netuix:namingContainer> is different. The reason is  this custom solution for integrate jsf changes the id of the parent component to allow the same native portlet to be allocated multiple times in the same page.

Add one additional check after create a component of this kind does not harm and there are no restriction about this on the spec. Really, the expected behavior is that the id set on UIComponent.setId is the same one as UIComponent.getId, but in this case is clear why this is not expected.",MYFACES-2382
" ""Core JSF-2.0"" in the section ""MyFaces Projects"" in the left column links to the page
http://myfaces.apache.org/core20/index.html
which does not exist. 
",MYFACES-2381
"Testing the helloworld portlet archetype on liferay for many, many hours, I have seen a problem with the way it is resolved the view id

In this configuration, the current algorithm resolves the view id using 

javax.servlet.include.path_info

and

javax.servlet.include.servlet_path

But in portlet case, this values should not be taken into account. Instead, we have to check if this is a portlet request or not (it seems javax.portlet.faces.PORTLET_LIFECYCLE_PHASE is used to check if is a portlet request or not) and call:

org.apache.myfaces.portlet.faces.context.PortletExternalContextImpl.getRequestPathInfo() or getRequestContextPath() when necessary.

",MYFACES-2380
,MYFACES-2379
,MYFACES-2378
"Actually we don't have a page with information about config params used on web.xml. It is not useful to maintain this in a separate page, because code continuously evolves and add new params or details.

In theory, these param are tied to a model id, so myfaces-api has ones, myfaces-impl has others ....... If we have this included on myfaces-metadata.xml, it is very easy to create a file with all this information when site generation is triggered.",MYFACES-2377
,MYFACES-2376
"See jsf 2.0 spec section 5.3

It seems we need to parse the string returned from managedBean.getManagedBeanScope(), but fortunately this problem is already solved in facelets (see TagAttributeImpl and org.apache.myfaces.view.facelets.el.ELText)",MYFACES-2375
"Note that on jsf 1.2 this is not true. The problem with this one is how call UIViewRoot beforePhaseListener before PhaseId.RESTORE_VIEW, because in theory we need to ""restore it"" before call it. Maybe the solution is call it from the place where the state is restored (JspStateManagerImpl).",MYFACES-2374
"With trinidad-faces-plugin it is possible to add event documentation for components. For example, h:commandButton component could handle ActionEvent, h:inputText component handle ValueChangeEvent. In the generated tlddoc, it renders a table like this:

Type                                        	Phases                               	Description
javax.faces.event.ActionEvent 	Invoke Application
                                                        Apply Request Values 	Event delivered when the ""action"" of the component has 
                                                                                                        been invoked; for example, by clicking on a button. 
                                                                                                        The action may result in page navigation.

One option is add a @JSFEvent annotation, but it seems better add a @JSFListener annotation and use it like this (for example in UICommand):

    /**
      * The event handled by this Listener is delivered when the ""action"" of the component has 
      *  been invoked; for example, by clicking on a button. 
      * The action may result in page navigation.
      **/
    @JSFListener(event=""javax.faces.event.ActionEvent"", 
                               phases=""Invoke Application, Apply Request Values"")
    public ActionListener[] getActionListeners()
    {
        return (ActionListener[]) getFacesListeners(ActionListener.class);
    }

Note this annotation has only documentation purposes, so it does not trigger side effects on code templates.

Suggestions are welcome",MYFACES-2373
"Copied from jsf-spec facelets javadoc.

If the component being rendered by this renderer has any UIParameter children, each one of them must be rendered using the renderer for component-family: ""javax.faces.Input"" and renderer-type: ""javax.faces.Hidden"". For discussion, this is called the hiddenRenderer. A component with component-type ""javax.faces.Input"" must be created for local use in rendering each UIParameter child. The ""id"" property of the temporary component must be set to the ""name"" of the UIParameter. The ""value"" property of the temporary component must be set to the ""value"" of the UIParameter. For each UIParameter child, the hiddenRenderer must have its encodeBegin(), encodeChildren(), and encodeEnd() methods called, in order, passing the temporary component as the second argument.",MYFACES-2372
"The problem occurs when the user wants to access to a .jsp page that includes a <f:subview> tag.

It seems to be a bug on UIComponentClassicTagBase.getViewComponentIds(). It was fixed on 2.0.x branch but not on 1.2.x in this way:

before:

    private Map<String,Object> getViewComponentIds()
    {
        Map<String, Object> requestMap = _facesContext.getExternalContext().getRequestMap();
        Map<String, Object> viewComponentIds;

        if (_parent == null)
        {
            // top level _componentInstance
            viewComponentIds = new HashMap<String,Object>();
            requestMap.put(VIEW_IDS, viewComponentIds);
        }
        else
        {
            viewComponentIds = (Map<String, Object>) requestMap.get(VIEW_IDS);
        }

        return viewComponentIds;
    }

After:

    private Map<String, Object> getViewComponentIds()
    {
        Map<String, Object> requestMap = _facesContext.getExternalContext().getRequestMap();
        Map<String, Object> viewComponentIds;

        if (_parent == null)
        {
            // top level _componentInstance
            viewComponentIds = new HashMap<String, Object>();
            requestMap.put(VIEW_IDS, viewComponentIds);
        }
        else
        {
            viewComponentIds = (Map<String, Object>)requestMap.get(VIEW_IDS);
            
            // Check if null, this can happen if someone programatically tries to do an include of a 
            // JSP fragment. This code will prevent NullPointerException from happening in such cases.
            if (viewComponentIds == null)
            {
                viewComponentIds = new HashMap<String, Object>();
                requestMap.put(VIEW_IDS, viewComponentIds);
            }
        }

        return viewComponentIds;
    }",MYFACES-2371
"A bug that was originally reported to the RichFaces project here (includes simple test case)...

https://jira.jboss.org/jira/browse/RF-7700

...was identifed by the RichFaces team as being caused by failure to process <h:column> header/footer facets in 'invokeOnComponent'. The RichFaces team reported this to the Mojarra guys...

https://javaserverfaces.dev.java.net/issues/show_bug.cgi?id=1308

...who fixed it in their implementation (as of 1.2_14)

I then put together a MyFaces version of the same test case (attached as suggestionMyFaces.zip)...

https://jira.jboss.org/jira/browse/RF-7700

...and it appears MyFaces (as of 1.2.7) has the same bug?
",MYFACES-2370
I am having a strange problem in our deployment environment. Whenever I run any jsf page created using Apache Trinidad 1.2.12 it generates the css file fine in Weblogic 10 temp directory but for some reason it doesn't load that css file in the webpage. When I do a view source of the rendered page in firefox and click on the URL it gives me 404 error (even though the css exists). When I deploy this application in tomcat 6 it works fine and loads the css fine and I can see css by clicking view source as well. Can somebody help me out. thanks. ,MYFACES-2369
"In few words, the new render response phase requires:

- Publish PreRenderViewEvent
- call vdl.buildView() (and remove this call from FaceletsViewDeclarationLanguage.renderResponse)
- deal with org.apache.myfaces.context.servlet.ResponseSwitch (on/off when f:view)",MYFACES-2368
,MYFACES-2367
See jsf 2.0 spec section 2.2.1 for details,MYFACES-2366
See jsf 2.0 spec section 2.2.1 ,MYFACES-2365
This one normalize the hack used to make t:aliasBean work. We have to make sure the algorithm is called from proper locations.,MYFACES-2364
"See jsf 2.0 spec section 13.3.7

""....Implementations must ensure that an ExceptionHandler suitable for writing exceptions to the partial response is installed if the current request required an Ajax response (PartialViewContext.isAjaxRequest() returns true)...""

"".... Implementations may choose to include a specialized ExceptionHandler for Ajax that extends from javax.faces.context.ExceptionHandlerWrapper, and have the javax.faces.context.ExceptionHandlerFactory implementation install it if the environment requires it .....""",MYFACES-2363
"The code that register default validators on UIInput is invalid and should be moved to other place. Since f:validateBean is a facelet specific tag, we can move safely this code to ComponentTagHandlerDelegate

See discussion here:

http://markmail.org/message/ykjmdu6ehdqpxyq7?q=[jsf+2.0]+bean+validation+api+will+not+be+available+on+jsp+apps%3F",MYFACES-2362
"Section 3.4.3.1 of the spec states the component system events and their classes, while some component system events work
following have yet to get a dispatching code within the codebase

InitialStateEvent
PostRestoreStateEvent
PostValidateEvent
PreDestroyViewMapEvent
PreRenderViewEvent
PreValidateEvent
",MYFACES-2361
"the version of JSTL escapeXML function in facelets currently only escapes '<', but not '>'.  Since '>' can be interpreted as XML markup, and to be consistent with the JSP JSTL implementation,  it should be escaped as well.  ",MYFACES-2360
"The events triggered on component level should also dispatch global system events just like their siblings directly inherited from SystemEvent, a faces-config entry like

        <system-event-listener>
             <system-event-listener-class>mypackage.MyListener</system-event-listener-class>
            <system-event-class>javax.faces.event.PreRenderComponentEvent</system-event-class>
         </system-event-listener>

currently does not do anything
",MYFACES-2359
"JSF 2.0 defines basic system events to be dispatched for various stages of the application component and scope startup and shutdown. The main issue now is although most (not all) system events were defined, adding a custom one caused an internal error.
We are dealing with several issues here, first the registration code in FacesConfigurator for System Events does not work out, secondly the dispatch code is not yet in place in various parts",MYFACES-2358
The problem occurs due to the list of supported locales specified in the standard faces config.  This list does not appear to serve any purpose to the runtime that I can see and no objections have been raised to removing it on the mailing list (see my email 9/15/09) so I'll go ahead and check in the change.  ,MYFACES-2357
"If you have a <h:selectOneRadio> component with some SelectItems and you select an item, submit it and an validation error occurs, HtmlRadioRendererBase calls org.apache.myfaces.shared_impl.renderkit.RendererUtils.getConvertedStringValue() with the submitted value, which is not converted an therefore already the string version of the SelectItem. So the provided converter tries to convert the string version to the string version, which can end in strange behaviour.",MYFACES-2356
"If an exception is thrown by a listener attached to the render response phase,  the exception handler is unable to redirect to the error handler page as with other lifecycle phases.

The reason for this is that the render response execution has already flushed the response buffer, marking the response as committed. This can be resolved for before phase listeners by simply not rendering the response.  For after phase listeners we may have to be content with logging the exception.  I'll go ahead and check in the fix for before phase listeners and leave the issue open for now until a resolution can be reached for after phase listeners (or if its better to just leave it as is in that case).  ",MYFACES-2355
,MYFACES-2354
,MYFACES-2353
,MYFACES-2352
"The behavior context implementation is still missing, behavior aware implementations of components however have to provide it.
",MYFACES-2351
"All components in javax.faces.component package implements ClientBehaviorHolder, and has properties used to render javascript.

Right now, f:ajax tag handler implementation attach AjaxBehavior instances, but it is responsibility of the renderer to retrieve it and render it properly.

This part is necessary to make f:ajax tag handler work (because this part shows the results!)

There are two properties that needs special attention, because it collision with properties:

clientEvent                property                                  html javascript            in
-------------------------------------------------------------------------------------------------------------
valueChange            valueChangeListener         onchange                   UIInput
action                         actionExpression                 onclick                        UICommand

The interfaces _ChangeSelectProperties, _EventProperties, _FocusBlurProperties define javascript properties. Also, the class _HtmlBody has onload and onunload.

We need to change all renderers to deal with this, taking into account the previous information.

Also, it is necessary to add a call to Behavior.broadcast in UIComponentBase.broadcast, as described on its javadoc",MYFACES-2350
,MYFACES-2349
"The eval in the javascript codebase does not work in a unified way across browsers, the main issue mostly is that eval itself and window.eval does not work in a clean way across browser platforms, but <eval> itself expects to be executed in a global scope.

The fix is to unify all window evals and evals so that they are executed in a global manner and this for the internal scripts points towards window instead of leaving it to the eval.

",MYFACES-2348
"There was no delta state saving in our existing ajax behavior and the renderer has not been implemented
",MYFACES-2347
"Ext-scripting requires certain changes in the myfaces infrastructure. Mainly a startup listener, while JSF2 has some infrastructure in place for the JSF intialisation process the entire listener infrastructure has to trigger before JSF initialisation and after JSF deinitialisation on servlet context level, JSF does not provide in 2.0 the needed events (at least not for startup)

So for now I will add the listener infrastructure.

Also we have a centralized hook for the classloading  in MyFaces this one will get an extension to plug in different loader mechanisms which do not have to replace the context classloaders. That way we can add new loaders programmatically without having to touch the problematic context classloaders which is a no go in web containers!
",MYFACES-2346
"See section 2.5.5 of the spec.

Some parts where already done, but other code do not, so we have to review and put in context all code.",MYFACES-2345
"We got an heads-up from Ed Burns - JSF sepc lead - on the PostAddToViewNonPDLEvent  class.

<ed_burns>
The class javax.faces.event.PostAddToViewNonPDLEvent was left in the API
but should have been removed.  It was used in an earlier design for
partial state saving.

I'll be filing a JCP Maintenance Release to remove this class, but I
wanted to let you know that it will be removed.

This change is already mentioned in the ""proposed changes"" section of
the ChangeLog [1].


Ed

[1] http://wiki.java.net/bin/view/Projects/Jsf2MR1ChangeLog
</ed_burns>",MYFACES-2344
"The method createConverter says this

    protected Converter createConverter() throws JspException
    {
        if (_converterId != null && _converterId.isLiteralText())
        {
            this.createClassicConverter();
        }
        if (_converterIdString != null){
            this.createClassicConverter();
        }
        
        return new DelegateConverter(_converterId, _binding,
                _converterIdString);
    }

There are two missing return statements. This causes DelegateConverter is always used, and it should be used only when converterId is not literal or binding property is set:

<f:converter binding=""#{mybean}""/>
<f:converter converterId=""#{'anyid'}"" binding=""#{mybean}""/>

The code should be like this:

    protected Converter createConverter() throws JspException
    {
        if (_converterId != null && _converterId.isLiteralText())
        {
            return this.createClassicConverter();
        }
        if (_converterIdString != null){
            return this.createClassicConverter();
        }
        
        return new DelegateConverter(_converterId, _binding,
                _converterIdString);
    }

The effect of this behavior is that a custom converter for t:inputCalendar that extends from HtmlCalendarRenderer.DateConverter cannot be set when using myfaces core 1.2.7. 

",MYFACES-2343
"The following fields added on jsf 2.0 should be included in saveState/restoreState (adding partial support)

UIViewRoot._viewScope
UIComponent._systemEventListenerClassMap
UIComponentBase._behaviorsMap

I'll check UIComponent hierarchy again for another fields that needs to be included on saveState/restoreState methods.",MYFACES-2342
Facelet tag lib parser (in TagLibraryConfig) should deal with <behavior> section.,MYFACES-2341
"Get the ""basic-ezcomp"" Mojarra 2.0 sample working.  This sample makes extensive use of composite components.",MYFACES-2340
"If someone uses an incorrect renderkit-ID, the MyFAces implementation fails kinda silent.

See a thread here:
http://www.mail-archive.com/dev@myfaces.apache.org/msg40301.html",MYFACES-2339
"String.isEmpty() is used here:

https://svn.apache.org/viewvc/myfaces/core/branches/1.2.x/api/src/main/java/javax/faces/application/ViewHandler.java?r1=792658&r2=796378&diff_format=h",MYFACES-2338
,MYFACES-2337
"<f:loadBundle var=""msgs"" basename=""messages""/>
...
<h:outputText escape=""false"" value=""#{msgs.indexNavHelpP1}""/>

where messages_cs.properties contains 
indexNavHelpP1=Stru\u010dn\u00fd n\u00e1hled cesty zobraz\u00edte kliknut\u00edm na polo\u017eku seznamu v prav\u00e9m prav\u00e9m panelu nebo kliknut\u00edm na ikonu v map\u011b.

The massages is written to resulting page with escaped characters by the initial request, but when I reload page, characters are un-escaped.

In sun jsf-1.1_02-b08 implementation the message is un-escaped every time (even by the first request).  You can doublecheck this isssue by visiting
http://www.geotrips.eu/   (Sun RI) vs.
http://www.geotrips.eu/root-jsf-myfaces/  (myfaces-core-1.1.7)
switch to Čeština (czech lang right in main menu) and check the javascript popup with localized text Nápověda (Help - right in the main menu).


Thanks 
 Jan",MYFACES-2336
forgot to add the version,MYFACES-2335
,MYFACES-2334
"Additions to the shared part and to the ServletContextListener are done to allow the hot plugging of custom classloading into myfaces.
This is done to allow the pluggability of scripting engines without having to add a custom classloader to our system. Classloaders are inherently problematic in server environments.

Theoretically anything can be plugged in, but for now we use it only to allow the pluggability of a groovy classloader.
",MYFACES-2333
"The myfaces core 1.2 trunk build process fails, the reason is an obsolete java.net address in the repository sections of the pom.xml changing this address to the address which currently is in use in other submodules fixes it.",MYFACES-2332
,MYFACES-2331
"Get the Mojarra ""basic-ajax"" sample app working.  This app tests UI templating and AJAX.",MYFACES-2330
"The Facelet taglib 2.0 schema isn't yet available.  When it is, integrate it into MyFaces, including parser support.",MYFACES-2329
"Whether we need isRendered() call in encodeBegin & encodeEnd methods in UIComponantBase class.?

Since we already have the isRendered() method call in UIComponant class which calls the above methods. Because the method present in all these methods, it called multiple times for a UIComponant
",MYFACES-2328
"Testing code inside facelets is ASL 2.0, so we can add it to myfaces core. This will help us to keep facelets code inside myfaces core 2.0 more stable and prevent introduce bugs",MYFACES-2327
"Jim Driscoll from sun pointed me towards an inconsistency with the specs, it is not allowed to add fields to the jsf.js namespace even
private ones. 

Also following minor issues will be fixed:

a) The opacity feature for ie will be made compliant to the html spec, this should not break any behavior
but adds convenience

b) javax.faces.ViewBody must be handled from the setAttributes section as well
",MYFACES-2326
,MYFACES-2325
,MYFACES-2324
,MYFACES-2323
This tag handler is only used on facelets mode,MYFACES-2322
,MYFACES-2321
,MYFACES-2320
,MYFACES-2319
,MYFACES-2318
,MYFACES-2317
,MYFACES-2316
,MYFACES-2315
,MYFACES-2314
,MYFACES-2313
,MYFACES-2312
,MYFACES-2311
This issue contains all changes or subtasks needed to be done. This include related tag handlers and code in other places.,MYFACES-2310
New attributes where added to f:selectItems tag.,MYFACES-2309
"@Target annotation should be changed to:

@Target(value={
        ElementType.TYPE,
        ElementType.METHOD,
        ElementType.LOCAL_VARIABLE,
        ElementType.FIELD,
        ElementType.CONSTRUCTOR})

It is very rare to use this annotation, but I have found one ugly case on MYFACES-2307 Generate HtmlHead and HtmlBody.",MYFACES-2308
"
h:head and h:body has backing component classes in javax.faces.component.html package. 

The strange stuff about it is that there is no tag class for them, so it should not appear on jsp javadoc. We need to add a check on tld velocity template that add to there components/converters/validators that has a name and a tagClass.",MYFACES-2307
"There is an strange behavior on borlands application server, IIOP protocol and IE
First jsf request has no requestHeaderMap and will produce error:
   ContentTypeList does not contain a supported content type image/gif

see:
org.apache.myfaces.renderkit.html.HtmlRenderKitImpl.createResponseWriter()
..
selectedContentType = HtmlRendererUtils.selectContentType(contentTypeListString);
..
will produce an exception in selectContentType()


Patch like this and the default character encoding will be set and everything works fine
..
        try {
            selectedContentType = HtmlRendererUtils.selectContentType(contentTypeListString);
        } catch (Exception ex) {
            log.warn(ex);
        }
..
",MYFACES-2306
"I've recently switched from JSF 1.1 to JSF 1.2 and am running into some apparent differences in the implementation of the convertDateTime component.

Here is the code snipit from the jsp:

<t:inputText binding=""#{reportMgrBean.timeUpStartDateInput}"" size=""10"" maxlength=""10""
immediate=""true"" value=""#{reportMgrBean.timeUpStartDate}"" title=""yyyy-MM-dd""
forceId=""true"" id=""timeUpStartDateInput"">
<f:convertDateTime type=""date"" pattern=""yyyy-MM-dd""/>
</t:inputText>

<t:inputText binding=""#{reportMgrBean.timeUpStartTimeInput}"" size=""8"" maxlength=""8""
immediate=""true"" value=""#{reportMgrBean.timeUpStartTime}"" title=""HH:mm:ss""
forceId=""true"" id=""timeUpStartTimeInput"">
<f:convertDateTime type=""time"" pattern=""HH:mm:ss""/>
</t:inputText>

I have the appropriate backing bean ReportMgrBean with the associated HtmlInputText binding objects.
When I submit the page, I see different values for the date and time depending on which JSF version I'm using.

When the page loads the date and time fields are set in the bean using the same java.util.Date instance as follows:


Calendar c = Calendar.getInstance( TimeZone.getTimeZone( ""GMT"" ) );

startDateInput.setValue( c.getTime() );
startTimeInput.setValue( c.getTime() );


Under MyFaces 1.1.4, Java 1.4, tomahawk 1.1.3 and assuming the date was 12:20:32 on Aug 4th 2009, I get:

date = '2009-08-04 00:00:00'
time= '1970-01-01 12:20:32'

So if I combine the two values when the page is submitted, I end up with '2009-08-04 12:20:32', which is the correct submit date/time.

Under MyFaces 1.2.6, Java 1.5, tomahawk12-1.1.8, and assuming the same date/time values are set, I get:

date= '2009-08-04 12:20:32'
time= '1970-01-01 12:20:32'

So for some reason the converter on the ""date"" part is no longer zero-ing out the time fields, but the ""time"" converter IS zero-ing out the date fields. 
",MYFACES-2305
"Right now, myfaces core 2.0 branch cannot generate custom taglibdoc for facelets. This makes difficult to know what it is implemented, what not and keep track of facelets status.

In 1.2 or lower, jsp tags could have facelets tag handlers, but in 2.0, it is possible to have tags with no jsp counterpart (for example composite component stuff), so we need a way to maintain a javadoc for that.

This requires add new annotations like @JSFFaceletTag, @JSFFaceletAttribute and maybe new goals or procedures to generate it.

Suggestions are welcome.",MYFACES-2304
"Hi found that myfaces and jsf-impl does not work nicely:

org.apache.jetspeed.container.JetspeedPortletContextImpl cannot be cast to javax.servlet.ServletContext 

What I don't understand is why myfaces need of jsf-faces...

How can I make this to work? Is there any patch available?

Thank you in advance.

Here is complete exception:


------------------
GRAVE: JetspeedContainerServlet: Error rendering portlet ""crmportal-pa::crm-customer-list"": java.lang.ClassCastException: org.apache.jetspeed.container.JetspeedPortletContextImpl cannot be cast to javax.servlet.ServletContext
java.lang.ClassCastException: org.apache.jetspeed.container.JetspeedPortletContextImpl cannot be cast to javax.servlet.ServletContext
	at com.sun.faces.context.FacesContextFactoryImpl.getFacesContext(FacesContextFactoryImpl.java:98)
	at org.apache.myfaces.portlet.MyFacesGenericPortlet.facesContext(MyFacesGenericPortlet.java:347)
	at org.apache.myfaces.portlet.MyFacesGenericPortlet.nonFacesRequest(MyFacesGenericPortlet.java:322)
	at org.apache.myfaces.portlet.MyFacesGenericPortlet.nonFacesRequest(MyFacesGenericPortlet.java:301)
	at org.apache.myfaces.portlet.MyFacesGenericPortlet.facesRender(MyFacesGenericPortlet.java:383)
	at org.apache.myfaces.portlet.MyFacesGenericPortlet.doView(MyFacesGenericPortlet.java:269)
	at javax.portlet.GenericPortlet.doDispatch(GenericPortlet.java:348)
	at javax.portlet.GenericPortlet.render(GenericPortlet.java:253)
	at org.apache.jetspeed.portlet.PortletObjectProxy.proxyRender(PortletObjectProxy.java:244)
	at org.apache.jetspeed.portlet.PortletObjectProxy.invoke(PortletObjectProxy.java:159)
	at $Proxy33.render(Unknown Source)
	at org.apache.jetspeed.factory.JetspeedPortletInstance.render(JetspeedPortletInstance.java:110)
	at org.apache.jetspeed.container.services.JetspeedFilterChain.doFilter(JetspeedFilterChain.java:142)
	at org.apache.jetspeed.container.services.JetspeedFilterChain.processFilter(JetspeedFilterChain.java:92)
	at org.apache.jetspeed.container.services.JetspeedFilterManager.processFilter(JetspeedFilterManager.java:112)
	at org.apache.jetspeed.container.JetspeedContainerServlet.doGet(JetspeedContainerServlet.java:272)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:617)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:646)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:551)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:488)
	at org.apache.jetspeed.container.invoker.ServletPortletInvoker.invoke(ServletPortletInvoker.java:165)
	at org.apache.jetspeed.container.invoker.JetspeedPortletInvokerService.render(JetspeedPortletInvokerService.java:127)
	at org.apache.pluto.container.impl.PortletContainerImpl.doRender(PortletContainerImpl.java:157)
	at org.apache.jetspeed.container.JetspeedPortletContainerWrapper.doRender(JetspeedPortletContainerWrapper.java:69)
	at org.apache.jetspeed.aggregator.impl.RenderingJobImpl.execute(RenderingJobImpl.java:183)
	at org.apache.jetspeed.aggregator.impl.PortletRendererImpl.renderNow(PortletRendererImpl.java:160)
	at org.apache.jetspeed.aggregator.impl.PortletRendererImpl.renderNow(PortletRendererImpl.java:138)
	at org.apache.jetspeed.aggregator.impl.PageAggregatorImpl.aggregateAndRender(PageAggregatorImpl.java:108)
	at org.apache.jetspeed.aggregator.impl.PageAggregatorImpl.aggregateAndRender(PageAggregatorImpl.java:103)
	at org.apache.jetspeed.aggregator.impl.PageAggregatorImpl.build(PageAggregatorImpl.java:77)
	at org.apache.jetspeed.aggregator.AggregatorValve.invoke(AggregatorValve.java:46)
	at org.apache.jetspeed.pipeline.JetspeedPipeline$Invocation.invokeNext(JetspeedPipeline.java:167)
	at org.apache.jetspeed.aggregator.HeaderAggregatorValve.invoke(HeaderAggregatorValve.java:53)
	at org.apache.jetspeed.pipeline.JetspeedPipeline$Invocation.invokeNext(JetspeedPipeline.java:167)
	at org.apache.jetspeed.decoration.DecorationValve.invoke(DecorationValve.java:137)
	at org.apache.jetspeed.pipeline.JetspeedPipeline$Invocation.invokeNext(JetspeedPipeline.java:167)
	at org.apache.jetspeed.resource.ResourceValveImpl.invoke(ResourceValveImpl.java:84)
	at org.apache.jetspeed.pipeline.JetspeedPipeline$Invocation.invokeNext(JetspeedPipeline.java:167)
	at org.apache.jetspeed.pipeline.valve.impl.ActionValveImpl.invoke(ActionValveImpl.java:139)
	at org.apache.jetspeed.pipeline.JetspeedPipeline$Invocation.invokeNext(JetspeedPipeline.java:167)
	at org.apache.jetspeed.container.ContainerValve.invoke(ContainerValve.java:88)
	at org.apache.jetspeed.pipeline.JetspeedPipeline$Invocation.invokeNext(JetspeedPipeline.java:167)
	at org.apache.jetspeed.container.PageHistoryValve.invoke(PageHistoryValve.java:108)
	at org.apache.jetspeed.pipeline.JetspeedPipeline$Invocation.invokeNext(JetspeedPipeline.java:167)
	at org.apache.jetspeed.profiler.impl.RefreshUserHomepageValveImpl.invoke(RefreshUserHomepageValveImpl.java:110)
	at org.apache.jetspeed.pipeline.JetspeedPipeline$Invocation.invokeNext(JetspeedPipeline.java:167)
	at org.apache.jetspeed.profiler.impl.ProfilerValveImpl.invoke(ProfilerValveImpl.java:251)
	at org.apache.jetspeed.pipeline.JetspeedPipeline$Invocation.invokeNext(JetspeedPipeline.java:167)
	at org.apache.jetspeed.security.impl.LoginValidationValveImpl.invoke(LoginValidationValveImpl.java:158)
	at org.apache.jetspeed.pipeline.JetspeedPipeline$Invocation.invokeNext(JetspeedPipeline.java:167)
	at org.apache.jetspeed.security.impl.PasswordCredentialValveImpl.invoke(PasswordCredentialValveImpl.java:151)
	at org.apache.jetspeed.pipeline.JetspeedPipeline$Invocation.invokeNext(JetspeedPipeline.java:167)
	at org.apache.jetspeed.localization.impl.LocalizationValveImpl.invoke(LocalizationValveImpl.java:170)
	at org.apache.jetspeed.pipeline.JetspeedPipeline$Invocation.invokeNext(JetspeedPipeline.java:167)
	at org.apache.jetspeed.security.impl.AbstractSecurityValve$1.run(AbstractSecurityValve.java:138)
	at java.security.AccessController.doPrivileged(Native Method)
	at javax.security.auth.Subject.doAsPrivileged(Subject.java:474)
	at org.apache.jetspeed.security.JSSubject.doAsPrivileged(JSSubject.java:179)
	at org.apache.jetspeed.security.impl.AbstractSecurityValve.invoke(AbstractSecurityValve.java:132)
	at org.apache.jetspeed.pipeline.JetspeedPipeline$Invocation.invokeNext(JetspeedPipeline.java:167)
	at org.apache.jetspeed.container.url.impl.PortalURLValveImpl.invoke(PortalURLValveImpl.java:67)
	at org.apache.jetspeed.pipeline.JetspeedPipeline$Invocation.invokeNext(JetspeedPipeline.java:167)
	at org.apache.jetspeed.capabilities.impl.CapabilityValveImpl.invoke(CapabilityValveImpl.java:127)
	at org.apache.jetspeed.pipeline.JetspeedPipeline$Invocation.invokeNext(JetspeedPipeline.java:167)
	at org.apache.jetspeed.pipeline.JetspeedPipeline.invoke(JetspeedPipeline.java:146)
	at org.apache.jetspeed.engine.JetspeedEngine.service(JetspeedEngine.java:225)
	at org.apache.jetspeed.engine.JetspeedServlet.doGet(JetspeedServlet.java:300)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:617)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.jetspeed.engine.servlet.XXSUrlAttackFilter.doFilter(XXSUrlAttackFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:433)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:128)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:293)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:849)
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:583)
	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:454)
	at java.lang.Thread.run(Thread.java:636)
",MYFACES-2303
"As a first attempt in getting the Facelets code work, I will try to get the ""Guess number 2.0"" app working.  This app tests resources and custom Facelets taglibs, so this should be a good way to tie together and fix all the code that's gone in so far.",MYFACES-2302
"The javax.faces.Bean Validator is a ""default"" Validator.

The concept of default Validators, however, is not supported in the MyFaces Builder Plugin.

I think it will be useful to add support for default Validators to the builder plugin.",MYFACES-2301
"""binding"" property on facelets tag handlers should be retrieved from javax.faces.view.facelets.DelegatingMetaTagHandler

Originally, tag handlers dealing with binding property hold it as a private var and deal with it.",MYFACES-2300
"
javax.faces.view.AttachedObjectHandler interface was introduced to  allow object relocation, so attached objects (for example converters, validators, behaviors) can be put on any place in the facelets abstract syntax tree.

This implies move all code related to the instantiation of this object to this method and call it from apply() method.
",MYFACES-2299
Apply algorithm described on javax.faces.view.facelets.ComponentHandler in implementation class org.apache.myfaces.view.facelets.tag.jsf.ComponentTagHandlerDelegate,MYFACES-2298
"Add TagHandlerDelegateFactory implementation and refactor all tag handler hierarchy, deprecating old component, converter and validator tag handler.",MYFACES-2297
"Some bugs in the annotation code causes my test program to fail.
- Some bytecode scanning bugs
- Annotations not retention = RUNTIME
- Annotations to scan are org/myfaces, not javax/faces

Already created a fix for the listed issues.",MYFACES-2296
"It could be good to add a maven profile (usually activated by -PjettyConfig) to all myfaces archetypes that activate trace logging on myfaces packages and log to a file. In this way, users can see logging information just typing mvn -PjettyConfig jetty:run, making easier debug errors. ",MYFACES-2295
Make sure the API classes are in sync with the final 2.0 spec.,MYFACES-2294
"ui:composition, ui:define and ui:insert tag handlers has some code removed from original facelet code. It seems some methods of FaceletContext are not referenced by the spec, so there are considered implementation details. So, org.apache.myfaces.view.facelets.impl.DefaultFaceletContext does not have it and the references to this methods (and semantic) is lost. This is very bad practice, because it could introduce bugs to existing code.

If no objections I'll restore previous code from original facelets code to make this tags work again (there is no reason reported to jira or mailing list about why this code was removed).",MYFACES-2293
"For JSF 2.0, Navigationhandler implementations should be extending ConfigurableNavigationhandler instead of Navigationhandler.",MYFACES-2292
This change needs some enhancements to myfaces builder plugin to mark clientEvent properties.,MYFACES-2291
"The provided patch will add OSGi information to bundle manifest. A bundle activator class makes the MyFaces framework aware that it is running in a bundle environment. A bundle classloader is used to load classes and resources from the bundle classpath. The patch doesn't require any new runtime dependencies and doesn't affect class loading in a non-OSGi environment. Though, small modifications to classloading were needed. This was mainly replacing Thread.currentThread.getContextClassLoader() with ClassUtils methods.

To run MyFaces in an OSGi environment both bundles (myfaces-api and myfaces-impl) have to be started in the OSGi container. Additionally, the myfaces-impl bundle has to be made available to myfaces-api. Use a fragment bundle with myfaces-api as Fragment-Host and myfaces-impl as Required-Bundle.",MYFACES-2290
"This method is not part of FacesContext API 1.2.

INFO] Compilation failure
/Users/felix/dev/myfaces12/core/impl/src/main/java/org/apache/myfaces/lifecycle/LifecycleImpl.java:[134,24] cannot find symbol
symbol  : method setCurrentPhaseId(javax.faces.event.PhaseId)
location: class javax.faces.context.FacesContext
",MYFACES-2289
"Implement BeanValidator class, corresponding tags/configs and logic related to Bean Validation.",MYFACES-2288
trying some very basic impl testing with 1.1/1.2 apps.  will use this issue for checking in related fixes.  ,MYFACES-2287
Complete TODOs for javax.faces.view.facelets classes.,MYFACES-2286
Add ExternalContextFactory implementation and use it by FacesContext implementation,MYFACES-2285
,MYFACES-2284
,MYFACES-2283
,MYFACES-2282
,MYFACES-2281
,MYFACES-2280
,MYFACES-2279
,MYFACES-2278
,MYFACES-2277
,MYFACES-2276
,MYFACES-2275
,MYFACES-2274
,MYFACES-2273
,MYFACES-2272
,MYFACES-2271
"Add FacesContext param to Application.publishEvent, because according to latest javadoc its signature was changed. All calls",MYFACES-2270
Add support for registering client behavior renderers via @FacesBehaviorRenderer and <client-behavior-renderer>.,MYFACES-2268
,MYFACES-2267
"Implement Flash object and EL resolver using as base code:

- Trinidad pageFlowScope.
- Tomahawk sandbox redirect tracker.
- Orchestra code that create conversational scope.",MYFACES-2266
"Debugging flash scope enhancement in jsf 2.0, the method org.apache.myfaces.lifecycle.LifecycleImpl.render() does not call FacesContext.setCurrentPhaseId and it should be.

This fix should be committed on 1.2.x and possible on 1.1.x. I'll fix this issue on 2.0.x branch within flash scope enhancements.",MYFACES-2265
Add support for behavior registration in faces-config.xml and via @FacesBehavior.,MYFACES-2264
Create the composite component EL resolver from section 5.6.2.2 of the spec.,MYFACES-2263
create link and button renderer implementations for outcome target to support bookmarkable URLs,MYFACES-2262
"The  JspStateManagerImpl class should never compile with these lines 
while (_keys.remove(key)) ;
            _keys.add(key); // from here every other line is unreachable
in protected static class SerializedViewCollection class
The block of code after this line will never execute

",MYFACES-2261
"The problem here is that the old code with document.documentElement.innerHtml respectively
the replaceElement does not work out neither on head nor on body.
This issue will receive a fixup immediately!
",MYFACES-2260
Implement use of getStateHelper and partial state saving on all components and the required code on facelets (StateManagerStrategy and invoke of markInitialState on related ComponentTagHandler).,MYFACES-2259
"Add support for JSF 2 conditional navigation (i.e., <if>).",MYFACES-2258
"remove duplicate call of runScripts
add call of loadScripts to trigger external scripts",MYFACES-2257
"In 

function oamSetHiddenInput(formname, name, value) 

the test

if(typeof form.elements[name]!='undefined' && form.elements[name].nodeName=='INPUT')

does not cover <input> elements where nodeName is 'input' (that is: lower case characters instead of upper case 'INPUT').
This results in the following error:
If the form already contains an input element with the specified name, but nodeName=='input', the test fails and a new input element with the same name is added to the form.
If the form is submitted, the HTTP request will contain 2 values for the parameter referenced by 'name':
one is the value of the unchanged <INPUT> field, the other is the value of the newly created <input> field.
Most UIComponents do not check if there is more than one value for a parameter. 
Probably they will just interpret the first value - which might be the 'wrong' value of the <INPUT> field instead of the 'valid' value of the <input> field.

How I achieved this situation:
Even though MyFaces typically renders input fields with lower case characters (XHTML), when a page is rendered by Firefox, the nodeName of input elements seems to be the upper case variant. I wonder why.
Now, we use RichFaces' a4j:poll in order to perform periodical partial page updates.
The updated part of the page may contain locically equivalent input fields, but in lower case.
The JavaScript behind a4j:poll uses the W3C DOM method replaceChild() in order to update page fragments.
This method replaces the original <INPUT> fields by <input> fields.
Of course, it doesn't matter how <input> elements become part of a page. 
In oamSetHiddenInput() <input> should be treated like <INPUT>.",MYFACES-2256
create  UIOutcome class required for bookmarkable URLs.,MYFACES-2255
Finish any remaining work for ExceptionHandler/ExceptionHandlerFactory impls and integrate ExceptionHandler use in the rest of the codebase.,MYFACES-2254
Finish the remaining work around system event listeners (e.g declaring component and application-scoped listeners in faces-config.xml). ,MYFACES-2253
"I have a problem how myfaces-1.2.6 generates ids for components. I have migrated from myfaces-1.1.5 to myfaces-1.2.6. I have a following scenario:
I need to include few jsp fragments on main page:
main page main.jsp:
<%@ taglib uri=""http://java.sun.com/jsf/html"" prefix=""h""%>
<%@ taglib uri=""http://java.sun.com/jsf/core"" prefix=""f""%>

<f:view>
	<f:subview id=""subview1"">
		<jsp:include page=""include.jsp""/>
	</f:subview>
	
	<f:subview id=""subview2"">
		<jsp:include page=""include.jsp""/>
	</f:subview>
</f:view>

included page include.jsp :
<%@ taglib uri=""http://java.sun.com/jsf/html"" prefix=""h""%>
<%@ taglib uri=""http://java.sun.com/jsf/core"" prefix=""f""%>

<f:subview id=""subview_inner"">
	<h:outputText id=""text"" value=""some text""></h:outputText>
</f:subview>

my generated html code :
<span id=""subview1:subview_inner:text"">some text</span><span id=""subview2:subview_inner:textj_id_1"">some text</span>

in myfaces -1.1.5 it generates:
<span id=""subview1:subview_inner:text"">some text</span><span id=""subview2:subview_inner:textj"">some text</span>

so id text   has been changed by framework to textj_id_1 - this is serious problem to me

also when i don't use jsp:include and have only on page like this:
<f:view>
	<f:subview id=""subview1"">
		<f:subview id=""subview_inner"">
			<h:outputText id=""text"" value=""some text""></h:outputText>
		</f:subview>
	</f:subview>

	<f:subview id=""subview2"">
		<f:subview id=""subview_inner"">
			<h:outputText id=""text"" value=""some text""></h:outputText>
		</f:subview>
	</f:subview>
</f:view>

generated output is ok
<span id=""subview1:subview_inner:text"">some text</span><span id=""subview2:subview_inner:text"">some text</span>

please can you explain if this is a bug and why myfaces decide that all components ids in my second  fragment must be changed?

",MYFACES-2252
"When I am using an EL expression value in ""f:attribute"" under ""h:inputText"" I can't get the value of the attribute using:
uiComponent.getAttributes().get(...)

According to the docs of f:attribute:
""When the value is an EL expression, this tag has the same effect as calling component.setValueBinding. A call to method component.getAttributes().get(name) will then cause that expression to be evaluated and the result of the expression is returned, not the original EL expression string.""

When I change the ""h:inputText"" to ""t:inputText"" (xmlns:t=""http://myfaces.apache.org/tomahawk"") it works just fine.",MYFACES-2251
,MYFACES-2250
"Implement the visitTree method in UIComponent
",MYFACES-2249
implement the getCompositeComponentParent in UIComponent,MYFACES-2248
implement the isCompositeComponent method,MYFACES-2247
Implement the isVisitable method in UIComponent,MYFACES-2246
"Finish the pending todos in UIComponent (See subtasks)
",MYFACES-2245
"- IE 8 sees XML Header as first sibling ...
- (itemIdToReplace instanceof Node) is NOT compatible with IE8
",MYFACES-2244
"I think there is some violation in the jsf specification about what happens in the intial request
The jsf specification clearly states
""If the request is a non-postback, call ViewHandler.createView(), passing the FacesContext instance for the current request and the derived view identifier.""
However if I issued two get request (ex http://example.com/test/test?id=1 , http://example.com/test/test?id=2 ) the view is restored in the second request.
This has the bad effect in f:attribute tag (ex <f:attribute name=""id"" type=""#{param.id}"" />), I will alaways get the id attribute equal to 1, however it should be 2.
Your help is much appreciated

",MYFACES-2243
Due to several small bugs in the codebase the evaluation of embedded scripts did not trigger in safari,MYFACES-2242
,MYFACES-2241
"path for source jsf.js must be
    <include>**/api/jsf.js</include>
not
    <include>**./api/jsf.js</include>

correct folder for jsf.js is
/META-INF/resources/javax.faces/jsf.js
not
/META-INF/resources/javax/faces/ajax/jsf.js

",MYFACES-2240
"After the save button is pressed a method in the backing bean is called (getUser_bos()) to fill the selectManyCheckbox, first time only one time. But every time you press save and have selected something it becomes more. So if you have a lot of select options and a lot selected, you get an enormous amount of calls to getUser_bos(), this costs precious time.

This is to time consuming for my project, so I had to go back to 1.2.2, but in that version I have another bug that is irritating my project (and is solved in 1.2.3).

Has anybody a sollution or is this reported before (I didn't find it).

The code:
<pre>
<?xml version=""1.0"" encoding=""UTF-8"" ?>
<!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Transitional//EN"" ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"">
<html xmlns=""http://www.w3.org/1999/xhtml""
	xmlns:f=""http://java.sun.com/jsf/core""
	xmlns:h=""http://java.sun.com/jsf/html"">
<body>
	<h:form>
		<h:commandButton id=""_save"" action=""#{bobyUser.save}"" value=""Save"" rendered=""true"" />

		<h:selectManyCheckbox value=""#{bobyUser.user_bos}"" id=""_bo""
			layout=""pageDirection"" style=""width: 400px; "">
			<f:selectItems value=""#{bobyUser.availableBos}"" />
		</h:selectManyCheckbox>
	</h:form>
</body>
</html>
</pre>

<pre>
package com.bla.webapp.action;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;

import javax.faces.model.SelectItem;

/**
 * @author mr
 * 
 */
public class BObyUser implements Serializable {
	private List<String> user_bos = new ArrayList<String>();

	public Collection<SelectItem> getAvailableBos() {
		System.out.println(""getAvailableBos"");

		List<SelectItem> result = new ArrayList<SelectItem>();
		for (long id = 0; id < 10; id++) {
			String cid = """" + id;
			result.add(new SelectItem(cid, ""test"" + id));
		}
		System.out.println(""getUsers returns a list with size=: ""
				+ result.size());
		return result;

	}

	public String save() {
		System.out.println(""save"");
		return ""success"";
	}

	public List<String> getUser_bos() {
		System.out.println(""getUser_bos"");
		user_bos.clear();
		for (long id = 0; id < 10; id++) {
			user_bos.add(id + """");
		}
		System.out.println(""getUser_bos: num bos: "" + user_bos.size());
		return user_bos;
	}

	public void setUser_bos(final List<String> user_bos) {
		System.out.println(""setUser_bos: "" + user_bos);
		this.user_bos = user_bos;
	}
}
</pre>",MYFACES-2239
"To enable MyFaces AJAX Javascript to run inside Mojarra we need to offer an extension point myfaces.ajax.request() that triggers the MyFaces Javascript while jsf.ajax.request continues to call Mojarras Javascript. Later, when we offer t:ajax, this can call myfaces.ajax.request and bring the MyFaces Javascript with it.",MYFACES-2238
"Hi,

I'm looking into performance issues regarding CPU consumption in our faces-portlet app. I'm trying to avoid serialization of the view and state with the web.xml params org.apache.myfaces.COMPRESS_STATE_IN_SESSION, org.apache.myfaces.SERIALIZE_STATE_IN_SESSION and org.apache.myfaces.USE_ENCRYPTION.

These params works fine except for HtmlResponseStateManager.writeViewStateField which always serializes the savedState, ignoring the org.apache.myfaces.SERIALIZE_STATE_IN_SESSION param.

Is this intentional or is this a bug?

Regards,
Hampus",MYFACES-2237
"
The example that requires is f:convertDateTime.

timeZone could be assigned to TimeZone instances, but do not to String instances. The tag class has the code to convert the value and assign it as a TimeZone instance on the converter, but the tld is generated in this way (without change the template):

      <attribute>
         <description><![CDATA[The time zone to use instead of GMT (the default timezone). When
this value is a value-binding to a TimeZone instance, that
timezone is used. Otherwise this value is treated as a String
containing a timezone id, ie as the ID parameter of method
java.util.TimeZone.getTimeZone(String).]]></description>
         <name>timeZone</name>
         <deferred-value>
             <type>java.util.TimeZone</type>
         </deferred-value>
      </attribute>

The same problem is with locale:

      <attribute>
         <description><![CDATA[The name of the locale to be used, instead of the default.]]></description>
         <name>locale</name>
         <deferred-value>
             <type>java.util.Locale</type>
         </deferred-value>
      </attribute>

Right now, the solution is fix the template to include a ""hack"" for these two properties, but we need a more general solution to this issue.",MYFACES-2236
"currently jsf's standard ProjectStage is a bit poor, it does not provide support for
system props... In order to make that happen we (myfaces) could provide
an extension for that...

Wo that we could support something like:

projectStage = System.getProperty(""org.apache.myfaces.PROJECT_STAGE"")

Ordering would be:
-jndi
-web.xml
-sys-props

the current order is JNDI, followed by web.xml",MYFACES-2235
"On myfaces impl there exists an interface called DelegatedFacesServlet. If someone wants to create an alternative FacesServlet, it should implements DelegatedFacesServlet, so myfaces can recognize it and handle its facesMappings correctly. 

It is better to use a param like org.apache.myfaces.DELEGATE_FACES_SERVLET, so it is possible prevent add myfaces-impl as a compile reference.",MYFACES-2234
"javax.faces.application.Application should check for default ApplicationImpl on methods added on 1.2 to enhance compatibility with existing jsf 1.1 apps as RI

The javadoc says that should thrown UnsupportedOperationException, but curiously, ri or mojarra try to get the default ApplicationImpl instance and if it is not found, the mentioned exception is thrown.

This behavior comes in handy when you have jsf 1.1 libraries that wraps Application object, but does not implement such methods. If ri do it, there is no reason why myfaces shouldn't do it.

",MYFACES-2233
"Stack trace:

java.lang.NullPointerException
	at org.apache.myfaces.application.ApplicationImpl.internalGetRuntimeConfig(ApplicationImpl.java:150)
	at org.apache.myfaces.application.ApplicationImpl.(ApplicationImpl.java:130)
	at org.apache.myfaces.application.ApplicationFactoryImpl.createAndLogNewApplication(ApplicationFactoryImpl.java:52)
	at org.apache.myfaces.application.ApplicationFactoryImpl.(ApplicationFactoryImpl.java:48)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at java.lang.Class.newInstance0(Class.java:355)
	at java.lang.Class.newInstance(Class.java:308)
	at javax.faces.FactoryFinder.newFactoryInstance(FactoryFinder.java:170)
	at javax.faces.FactoryFinder.getFactory(FactoryFinder.java:136)
	at org.apache.myfaces.context.servlet.FacesContextImpl.(FacesContextImpl.java:95)
	at org.apache.myfaces.context.servlet.FacesContextImpl.(FacesContextImpl.java:88)
	at org.apache.myfaces.context.FacesContextFactoryImpl.getFacesContext(FacesContextFactoryImpl.java:63)

The solution is change constructor to this:

    private FacesContextImpl(final ReleaseableExternalContext externalContext)
    {
        _externalContext = externalContext;
        FacesContext.setCurrentInstance(this);  //protected method, therefore must be called from here
        _application = ((ApplicationFactory)FactoryFinder.getFactory(FactoryFinder.APPLICATION_FACTORY))
                .getApplication();
        _renderKitFactory = (RenderKitFactory) FactoryFinder.getFactory(FactoryFinder.RENDER_KIT_FACTORY);
    }",MYFACES-2232
Handle the TODOs for JSPViewDeclarationLanguage,MYFACES-2231
Handle the TODOs for FaceletViewDeclarationLanguage,MYFACES-2230
JSF 2.0 changes the algorithm for calculating viewId.  DefaultViewHandlerSupport needs to be updated to use this new algorithm.  ,MYFACES-2229
,MYFACES-2228
The latest spec adds the startCDATA() and endCDATA() methods to ResponseWriter/ResponseWriterWrapper.,MYFACES-2227
"Add support for remaining 2.0 faces-config.xml elements:

faces-config/application/default-validators
faces-config/application/default-validators/validator-id
faces-config/application/partial-traversal
faces-config/application/system-event-listener
faces-config/application/system-event-listener/source-class
faces-config/application/system-event-listener/system-event-class
faces-config/application/system-event-listener/system-event-listener-class
faces-config/behavior
faces-config/behavior/attribute
faces-config/behavior/attribute/attribute-class
faces-config/behavior/attribute/attribute-extension
faces-config/behavior/attribute/attribute-name
faces-config/behavior/attribute/default-value
faces-config/behavior/attribute/description
faces-config/behavior/attribute/display-name
faces-config/behavior/attribute/icon
faces-config/behavior/attribute/suggested-value
faces-config/behavior/behavior-class
faces-config/behavior/behavior-extension
faces-config/behavior/behavior-id
faces-config/behavior/description
faces-config/behavior/display-name
faces-config/behavior/icon
faces-config/behavior/property
faces-config/behavior/property/default-value
faces-config/behavior/property/description
faces-config/behavior/property/display-name
faces-config/behavior/property/icon
faces-config/behavior/property/property-class
faces-config/behavior/property/property-extension
faces-config/behavior/property/property-name
faces-config/behavior/property/suggested-value
faces-config/factory/view-declaration-language-factory
faces-config/render-kit/renderer/client-behavior-renderer
",MYFACES-2226
"The following stack overflow is thrown when the component tree is manipulated (resource + annotation + event api).

It seems on the last javadoc, new methods where added:

UIComponent.isInView    (maybe another synonym to this method is isInComponentTree)
UIComponent.setInView(boolean isInView)

and new description added:

UIComponent.setParent(UIComponent parent)

so the solution proposed by the change in UIComponent.getChildren is insuficient.

javax.servlet.ServletException: java.lang.StackOverflowError
	at org.apache.jasper.runtime.PageContextImpl.doHandlePageException(PageContextImpl.java:939)
	at org.apache.jasper.runtime.PageContextImpl.handlePageException(PageContextImpl.java:871)
	at org.apache.jsp.helloWorld1_jsp._jspService(org.apache.jsp.helloWorld1_jsp:106)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:109)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:820)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:389)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:486)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:380)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:820)
	at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:502)
	at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:389)
	at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)
	at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181)
	at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:765)
	at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:417)
	at org.mortbay.jetty.servlet.Dispatcher.forward(Dispatcher.java:334)
	at org.mortbay.jetty.servlet.Dispatcher.forward(Dispatcher.java:126)
	at org.apache.myfaces.context.servlet.ServletExternalContextImpl.dispatch(ServletExternalContextImpl.java:434)
	at org.apache.myfaces.application.jsp.JspViewHandlerImpl.buildView(JspViewHandlerImpl.java:492)
	at org.apache.myfaces.application.jsp.JspViewHandlerImpl.renderView(JspViewHandlerImpl.java:343)
	at org.apache.myfaces.lifecycle.RenderResponseExecutor.execute(RenderResponseExecutor.java:45)
	at org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:167)
	at javax.faces.webapp.FacesServlet._handleStandardRequest(FacesServlet.java:428)
	at javax.faces.webapp.FacesServlet.service(FacesServlet.java:182)
	at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:502)
	at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:389)
	at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)
	at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181)
	at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:765)
	at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:417)
	at org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:230)
	at org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)
	at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)
	at org.mortbay.jetty.Server.handle(Server.java:324)
	at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:535)
	at org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:865)
	at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:539)
	at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:212)
	at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:404)
	at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:409)
	at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:520)
Caused by: java.lang.StackOverflowError
	at java.lang.reflect.Constructor.copy(Constructor.java:133)
	at java.lang.reflect.ReflectAccess.copyConstructor(ReflectAccess.java:126)
	at sun.reflect.ReflectionFactory.copyConstructor(ReflectionFactory.java:296)
	at java.lang.Class.copyConstructors(Class.java:2757)
	at java.lang.Class.getConstructors(Class.java:1459)
	at org.apache.myfaces.application.ApplicationImpl._createEvent(ApplicationImpl.java:1484)
	at org.apache.myfaces.application.ApplicationImpl._traverseListenerList(ApplicationImpl.java:1701)
	at org.apache.myfaces.application.ApplicationImpl.publishEvent(ApplicationImpl.java:459)
	at org.apache.myfaces.application.ApplicationImpl.publishEvent(ApplicationImpl.java:481)
	at javax.faces.component._ComponentChildrenList.childAdded(_ComponentChildrenList.java:133)
	at javax.faces.component._ComponentChildrenList.add(_ComponentChildrenList.java:82)
	at javax.faces.component._ComponentChildrenList.add(_ComponentChildrenList.java:1)
	at javax.faces.component.UIViewRoot.addComponentResource(UIViewRoot.java:161)
	at org.apache.myfaces.renderkit.html.HtmlStylesheetRenderer.processEvent(HtmlStylesheetRenderer.java:65)
	at javax.faces.component.UIComponent$EventListenerWrapper.processEvent(UIComponent.java:919)
	at javax.faces.event.SystemEvent.processListener(SystemEvent.java:43)
	at org.apache.myfaces.application.ApplicationImpl._traverseListenerList(ApplicationImpl.java:1709)
	at org.apache.myfaces.application.ApplicationImpl.publishEvent(ApplicationImpl.java:459)
	at org.apache.myfaces.application.ApplicationImpl.publishEvent(ApplicationImpl.java:481)
	at javax.faces.component._ComponentChildrenList.childAdded(_ComponentChildrenList.java:133)
	at javax.faces.component._ComponentChildrenList.add(_ComponentChildrenList.java:82)
	at javax.faces.component._ComponentChildrenList.add(_ComponentChildrenList.java:1)
	at javax.faces.component.UIViewRoot.addComponentResource(UIViewRoot.java:161)
	at org.apache.myfaces.renderkit.html.HtmlStylesheetRenderer.processEvent(HtmlStylesheetRenderer.java:65)
	at javax.faces.component.UIComponent$EventListenerWrapper.processEvent(UIComponent.java:919)
	at javax.faces.event.SystemEvent.processListener(SystemEvent.java:43)
	at org.apache.myfaces.application.ApplicationImpl._traverseListenerList(ApplicationImpl.java:1709)
	at org.apache.myfaces.application.ApplicationImpl.publishEvent(ApplicationImpl.java:459)
	at org.apache.myfaces.application.ApplicationImpl.publishEvent(ApplicationImpl.java:481)
	at javax.faces.component._ComponentChildrenList.childAdded(_ComponentChildrenList.java:133)
	at javax.faces.component._ComponentChildrenList.add(_ComponentChildrenList.java:82)
	at javax.faces.component._ComponentChildrenList.add(_ComponentChildrenList.java:1)
	at javax.faces.component.UIViewRoot.addComponentResource(UIViewRoot.java:161)
	at org.apache.myfaces.renderkit.html.HtmlStylesheetRenderer.processEvent(HtmlStylesheetRenderer.java:65)
	at javax.faces.component.UIComponent$EventListenerWrapper.processEvent(UIComponent.java:919)
	at javax.faces.event.SystemEvent.processListener(SystemEvent.java:43)
	at org.apache.myfaces.application.ApplicationImpl._traverseListenerList(ApplicationImpl.java:1709)
	at org.apache.myfaces.application.ApplicationImpl.publishEvent(ApplicationImpl.java:459)
	at org.apache.myfaces.application.ApplicationImpl.publishEvent(ApplicationImpl.java:481)
	at javax.faces.component._ComponentChildrenList.childAdded(_ComponentChildrenList.java:133)
	at javax.faces.component._ComponentChildrenList.add(_ComponentChildrenList.java:82)
	at javax.faces.component._ComponentChildrenList.add(_ComponentChildrenList.java:1)
	at javax.faces.component.UIViewRoot.addComponentResource(UIViewRoot.java:161)
	at org.apache.myfaces.renderkit.html.HtmlStylesheetRenderer.processEvent(HtmlStylesheetRenderer.java:65)
	at javax.faces.component.UIComponent$EventListenerWrapper.processEvent(UIComponent.java:919)
	at javax.faces.event.SystemEvent.processListener(SystemEvent.java:43)
	at org.apache.myfaces.application.ApplicationImpl._traverseListenerList(ApplicationImpl.java:1709)
	at org.apache.myfaces.application.ApplicationImpl.publishEvent(ApplicationImpl.java:459)
	at org.apache.myfaces.application.ApplicationImpl.publishEvent(ApplicationImpl.java:481)
	at javax.faces.component._ComponentChildrenList.childAdded(_ComponentChildrenList.java:133)
	at javax.faces.component._ComponentChildrenList.add(_ComponentChildrenList.java:82)
	at javax.faces.component._ComponentChildrenList.add(_ComponentChildrenList.java:1)
	at javax.faces.component.UIViewRoot.addComponentResource(UIViewRoot.java:161)
	at org.apache.myfaces.renderkit.html.HtmlStylesheetRenderer.processEvent(HtmlStylesheetRenderer.java:65)
	at javax.faces.component.UIComponent$EventListenerWrapper.processEvent(UIComponent.java:919)
	at javax.faces.event.SystemEvent.processListener(SystemEvent.java:43)
	at org.apache.myfaces.application.ApplicationImpl._traverseListenerList(ApplicationImpl.java:1709)
	at org.apache.myfaces.application.ApplicationImpl.publishEvent(ApplicationImpl.java:459)
	at org.apache.myfaces.application.ApplicationImpl.publishEvent(ApplicationImpl.java:481)
	at javax.faces.component._ComponentChildrenList.childAdded(_ComponentChildrenList.java:133)
	at javax.faces.component._ComponentChildrenList.add(_ComponentChildrenList.java:82)
	at javax.faces.component._ComponentChildrenList.add(_ComponentChildrenList.java:1)
	at javax.faces.component.UIViewRoot.addComponentResource(UIViewRoot.java:161)
	at org.apache.myfaces.renderkit.html.HtmlStylesheetRenderer.processEvent(HtmlStylesheetRenderer.java:65)
	at javax.faces.component.UIComponent$EventListenerWrapper.processEvent(UIComponent.java:919)
	at javax.faces.event.SystemEvent.processListener(SystemEvent.java:43)
	at org.apache.myfaces.application.ApplicationImpl._traverseListenerList(ApplicationImpl.java:1709)
	at org.apache.myfaces.application.ApplicationImpl.publishEvent(ApplicationImpl.java:459)
	at org.apache.myfaces.application.ApplicationImpl.publishEvent(ApplicationImpl.java:481)
	at javax.faces.component._ComponentChildrenList.childAdded(_ComponentChildrenList.java:133)
	at javax.faces.component._ComponentChildrenList.add(_ComponentChildrenList.java:82)
	at javax.faces.component._ComponentChildrenList.add(_ComponentChildrenList.java:1)
	at javax.faces.component.UIViewRoot.addComponentResource(UIViewRoot.java:161)
	at org.apache.myfaces.renderkit.html.HtmlStylesheetRenderer.processEvent(HtmlStylesheetRenderer.java:65)
	at javax.faces.component.UIComponent$EventListenerWrapper.processEvent(UIComponent.java:919)
	at javax.faces.event.SystemEvent.processListener(SystemEvent.java:43)
	at org.apache.myfaces.application.ApplicationImpl._traverseListenerList(ApplicationImpl.java:1709)
	at org.apache.myfaces.application.ApplicationImpl.publishEvent(ApplicationImpl.java:459)
	at org.apache.myfaces.application.ApplicationImpl.publishEvent(ApplicationImpl.java:481)
	at javax.faces.component._ComponentChildrenList.childAdded(_ComponentChildrenList.java:133)
	at javax.faces.component._ComponentChildrenList.add(_ComponentChildrenList.java:82)
	at javax.faces.component._ComponentChildrenList.add(_ComponentChildrenList.java:1)
	at javax.faces.component.UIViewRoot.addComponentResource(UIViewRoot.java:161)
	at org.apache.myfaces.renderkit.html.HtmlStylesheetRenderer.processEvent(HtmlStylesheetRenderer.java:65)
	at javax.faces.component.UIComponent$EventListenerWrapper.processEvent(UIComponent.java:919)
	at javax.faces.event.SystemEvent.processListener(SystemEvent.java:43)
	at org.apache.myfaces.application.ApplicationImpl._traverseListenerList(ApplicationImpl.java:1709)
	at org.apache.myfaces.application.ApplicationImpl.publishEvent(ApplicationImpl.java:459)
	at org.apache.myfaces.application.ApplicationImpl.publishEvent(ApplicationImpl.java:481)
	at javax.faces.component._ComponentChildrenList.childAdded(_ComponentChildrenList.java:133)
	at javax.faces.component._ComponentChildrenList.add(_ComponentChildrenList.java:82)
	at javax.faces.component._ComponentChildrenList.add(_ComponentChildrenList.java:1)
	at javax.faces.component.UIViewRoot.addComponentResource(UIViewRoot.java:161)
	at org.apache.myfaces.renderkit.html.HtmlStylesheetRenderer.processEvent(HtmlStylesheetRenderer.java:65)
	at javax.faces.component.UIComponent$EventListenerWrapper.processEvent(UIComponent.java:919)
	at javax.faces.event.SystemEvent.processListener(SystemEvent.java:43)
	at org.apache.myfaces.application.ApplicationImpl._traverseListenerList(ApplicationImpl.java:1709)
	at org.apache.myfaces.application.ApplicationImpl.publishEvent(ApplicationImpl.java:459)
	at org.apache.myfaces.application.ApplicationImpl.publishEvent(ApplicationImpl.java:481)
	at javax.faces.component._ComponentChildrenList.childAdded(_ComponentChildrenList.java:133)
	at javax.faces.component._ComponentChildrenList.add(_ComponentChildrenList.java:82)
	at javax.faces.component._ComponentChildrenList.add(_ComponentChildrenList.java:1)
	at javax.faces.component.UIViewRoot.addComponentResource(UIViewRoot.java:161)
	at org.apache.myfaces.renderkit.html.HtmlStylesheetRenderer.processEvent(HtmlStylesheetRenderer.java:65)
	at javax.faces.component.UIComponent$EventListenerWrapper.processEvent(UIComponent.java:919)
	at javax.faces.event.SystemEvent.processListener(SystemEvent.java:43)
	at org.apache.myfaces.application.ApplicationImpl._traverseListenerList(ApplicationImpl.java:1709)
	at org.apache.myfaces.application.ApplicationImpl.publishEvent(ApplicationImpl.java:459)
	at org.apache.myfaces.application.ApplicationImpl.publishEvent(ApplicationImpl.java:481)
	at javax.faces.component._ComponentChildrenList.childAdded(_ComponentChildrenList.java:133)
	at javax.faces.component._ComponentChildrenList.add(_ComponentChildrenList.java:82)
	at javax.faces.component._ComponentChildrenList.add(_ComponentChildrenList.java:1)
	at javax.faces.component.UIViewRoot.addComponentResource(UIViewRoot.java:161)
	at org.apache.myfaces.renderkit.html.HtmlStylesheetRenderer.processEvent(HtmlStylesheetRenderer.java:65)
	at javax.faces.component.UIComponent$EventListenerWrapper.processEvent(UIComponent.java:919)
	at javax.faces.event.SystemEvent.processListener(SystemEvent.java:43)
	at org.apache.myfaces.application.ApplicationImpl._traverseListenerList(ApplicationImpl.java:1709)
	at org.apache.myfaces.application.ApplicationImpl.publishEvent(ApplicationImpl.java:459)
	at org.apache.myfaces.application.ApplicationImpl.publishEvent(ApplicationImpl.java:481)
	at javax.faces.component._ComponentChildrenList.childAdded(_ComponentChildrenList.java:133)
	at javax.faces.component._ComponentChildrenList.add(_ComponentChildrenList.java:82)
	at javax.faces.component._ComponentChildrenList.add(_ComponentChildrenList.java:1)
	at javax.faces.component.UIViewRoot.addComponentResource(UIViewRoot.java:161)
	at org.apache.myfaces.renderkit.html.HtmlStylesheetRenderer.processEvent(HtmlStylesheetRenderer.java:65)
	at javax.faces.component.UIComponent$EventListenerWrapper.processEvent(UIComponent.java:919)
	at javax.faces.event.SystemEvent.processListener(SystemEvent.java:43)
	at org.apache.myfaces.application.ApplicationImpl._traverseListenerList(ApplicationImpl.java:1709)
	at org.apache.myfaces.application.ApplicationImpl.publishEvent(ApplicationImpl.java:459)
	at org.apache.myfaces.application.ApplicationImpl.publishEvent(ApplicationImpl.java:481)
	at javax.faces.component._ComponentChildrenList.childAdded(_ComponentChildrenList.java:133)
	at javax.faces.component._ComponentChildrenList.add(_ComponentChildrenList.java:82)
	at javax.faces.component._ComponentChildrenList.add(_ComponentChildrenList.java:1)
	at javax.faces.component.UIViewRoot.addComponentResource(UIViewRoot.java:161)
	at org.apache.myfaces.renderkit.html.HtmlStylesheetRenderer.processEvent(HtmlStylesheetRenderer.java:65)
	at javax.faces.component.UIComponent$EventListenerWrapper.processEvent(UIComponent.java:919)
	at javax.faces.event.SystemEvent.processListener(SystemEvent.java:43)
	at org.apache.myfaces.application.ApplicationImpl._traverseListenerList(ApplicationImpl.java:1709)
	at org.apache.myfaces.application.ApplicationImpl.publishEvent(ApplicationImpl.java:459)
	at org.apache.myfaces.application.ApplicationImpl.publishEvent(ApplicationImpl.java:481)
	at javax.faces.component._ComponentChildrenList.childAdded(_ComponentChildrenList.java:133)
	at javax.faces.component._ComponentChildrenList.add(_ComponentChildrenList.java:82)
	at javax.faces.component._ComponentChildrenList.add(_ComponentChildrenList.java:1)
	at javax.faces.component.UIViewRoot.addComponentResource(UIViewRoot.java:161)
	at org.apache.myfaces.renderkit.html.HtmlStylesheetRenderer.processEvent(HtmlStylesheetRenderer.java:65)
	at javax.faces.component.UIComponent$EventListenerWrapper.processEvent(UIComponent.java:919)
	at javax.faces.event.SystemEvent.processListener(SystemEvent.java:43)
	at org.apache.myfaces.application.ApplicationImpl._traverseListenerList(ApplicationImpl.java:1709)
	at org.apache.myfaces.application.ApplicationImpl.publishEvent(ApplicationImpl.java:459)
	at org.apache.myfaces.application.ApplicationImpl.publishEvent(ApplicationImpl.java:481)
	at javax.faces.component._ComponentChildrenList.childAdded(_ComponentChildrenList.java:133)
	at javax.faces.component._ComponentChildrenList.add(_ComponentChildrenList.java:82)
	at javax.faces.component._ComponentChildrenList.add(_ComponentChildrenList.java:1)
	at javax.faces.component.UIViewRoot.addComponentResource(UIViewRoot.java:161)
",MYFACES-2225
"Testing to convert an illegal formatted value (with comma instead of a decimal point) with BigDecimalConverter produces a detail message with an example value (... also with a comma ...) of: 4815,16",MYFACES-2224
"The spec is being updated on our request. The replacement of javax.faces.ViewState when processing an AJAX response is now based on name, not on id.  Update our Javascript according to this.

https://javaserverfaces-spec-public.dev.java.net/issues/show_bug.cgi?id=552 ",MYFACES-2223
"Now the value of ViewHandler.DEFAULT_SUFFIX is "".xhtml .jsp""

All code that depends on this constant should be changed to deal with it (including org.apache.myfaces.view.facelets parts).

It should change:

org.apache.myfaces.application.DefaultViewHandlerSupport
org.apache.myfaces.view.facelets.FaceletViewHandler (getDefaultSuffix method)

",MYFACES-2222
Added remaining impls for UIViewParameter methods.,MYFACES-2221
"FacesConfigurator should scan application config resources(files on META-INF/) ending with .faces-config.xml, as described on point 11.4.2 of jsf spec draft 2.0. 

Note that org.apache.myfaces.view.facelets.util.Classpath class has already an algorithm to scan resources with some prefix and suffix, so we can use it to do this feature too.",MYFACES-2220
Handle ViewHandler TODOs for MyFaces 2.0 based on the proposed final draft spec.  ,MYFACES-2219
"We receive the following error:

24 Abr 2009 11:11:43,895 ERROR StackTrace:

java.lang.NullPointerException: context must not be null
at org.apache.myfaces.el.VariableResolverImpl.resolveVariable(VariableResolverImpl.java:47)
at org.apache.myfaces.el.convert.VariableResolverToELResolver.getValue(VariableResolverToELResolver.java:93)
at javax.el.CompositeELResolver.getValue(CompositeELResolver.java:143)
at org.apache.myfaces.el.unified.resolver.FacesCompositeELResolver.access$301(FacesCompositeELResolver.java:46)
at org.apache.myfaces.el.unified.resolver.FacesCompositeELResolver$4.invoke(FacesCompositeELResolver.java:108)
at org.apache.myfaces.el.unified.resolver.FacesCompositeELResolver.invoke(FacesCompositeELResolver.java:148)
at org.apache.myfaces.el.unified.resolver.FacesCompositeELResolver.getValue(FacesCompositeELResolver.java:104)
at com.sun.el.parser.AstIdentifier.getValue(AstIdentifier.java:68)
at com.sun.el.parser.AstNot.getValue(AstNot.java:46)
at com.sun.el.ValueExpressionImpl.getValue(ValueExpressionImpl.java:192)
at javax.faces.component._ComponentUtils.getExpressionValue(_ComponentUtils.java:233)
at javax.faces.component.UIComponentBase.getExpressionValue(UIComponentBase.java:1155)
at javax.faces.component.UIComponentBase.isRendered(UIComponentBase.java:1225)
at javax.faces.component.UIComponentBase.processDecodes(UIComponentBase.java:685)
at javax.faces.component.UIComponentBase.processDecodes(UIComponentBase.java:688)
at org.ajax4jsf.component.AjaxViewRoot.processPhase(AjaxViewRoot.java:238)
at org.ajax4jsf.component.AjaxViewRoot.processDecodes(AjaxViewRoot.java:409)
at org.apache.myfaces.lifecycle.LifecycleImpl.executePhase(LifecycleImpl.java:103)
at org.apache.myfaces.lifecycle.LifecycleImpl.execute(LifecycleImpl.java:76)
at pt.ptinovacao.components.aeolus.web.servlet.AeolusFacesServlet.service(AeolusFacesServlet.java:148)
at br.com.vivo.vivo360.ui.servlet.Vivo360FacesServlet.service(Vivo360FacesServlet.java:82)
at weblogic.servlet.internal.StubSecurityHelper$ServletServiceAction.run(StubSecurityHelper.java:226)
at weblogic.servlet.internal.StubSecurityHelper.invokeServlet(StubSecurityHelper.java:124)
at weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:283)
at weblogic.servlet.internal.TailFilter.doFilter(TailFilter.java:26)
at weblogic.servlet.internal.FilterChainImpl.doFilter(FilterChainImpl.java:42)
at br.com.vivo.vivo360.ui.servlet.SessionExpiredFilter.doFilter(SessionExpiredFilter.java:51)
at weblogic.servlet.internal.FilterChainImpl.doFilter(FilterChainImpl.java:42)
at br.com.vivo.vivo360.ui.servlet.ErrorFilter.doFilter(ErrorFilter.java:63)
at weblogic.servlet.internal.FilterChainImpl.doFilter(FilterChainImpl.java:42)
at org.apache.myfaces.webapp.filter.ExtensionsFilter.doFilter(ExtensionsFilter.java:147)
at weblogic.servlet.internal.FilterChainImpl.doFilter(FilterChainImpl.java:42)
at org.ajax4jsf.webapp.BaseXMLFilter.doXmlFilter(BaseXMLFilter.java:178)
at org.ajax4jsf.webapp.BaseFilter.handleRequest(BaseFilter.java:290)
at org.ajax4jsf.webapp.BaseFilter.processUploadsAndHandleRequest(BaseFilter.java:390)
at org.ajax4jsf.webapp.BaseFilter.doFilter(BaseFilter.java:517)
at weblogic.servlet.internal.FilterChainImpl.doFilter(FilterChainImpl.java:42)
at weblogic.servlet.internal.RequestEventsFilter.doFilter(RequestEventsFilter.java:26)
at weblogic.servlet.internal.FilterChainImpl.doFilter(FilterChainImpl.java:42)
at weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.run(WebAppServletContext.java:3393)
at weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:321)
at weblogic.security.service.SecurityManager.runAs(Unknown Source)
at weblogic.servlet.internal.WebAppServletContext.securedExecute(WebAppServletContext.java:2140)
at weblogic.servlet.internal.WebAppServletContext.execute(WebAppServletContext.java:2046)
at weblogic.servlet.internal.ServletRequestImpl.run(ServletRequestImpl.java:1366)
at weblogic.work.ExecuteThread.execute(ExecuteThread.java:200)
at weblogic.work.ExecuteThread.run(ExecuteThread.java:172)



24 Abr 2009 11:16:09,158 ERROR StackTrace:

java.lang.NullPointerException: context must not be null
at org.apache.myfaces.el.VariableResolverImpl.resolveVariable(VariableResolverImpl.java:47)
at org.apache.myfaces.el.convert.VariableResolverToELResolver.getValue(VariableResolverToELResolver.java:93)
at javax.el.CompositeELResolver.getValue(CompositeELResolver.java:143)
at org.apache.myfaces.el.unified.resolver.FacesCompositeELResolver.access$301(FacesCompositeELResolver.java:46)
at org.apache.myfaces.el.unified.resolver.FacesCompositeELResolver$4.invoke(FacesCompositeELResolver.java:108)
at org.apache.myfaces.el.unified.resolver.FacesCompositeELResolver.invoke(FacesCompositeELResolver.java:148)
at org.apache.myfaces.el.unified.resolver.FacesCompositeELResolver.getValue(FacesCompositeELResolver.java:104)
at com.sun.el.parser.AstIdentifier.getValue(AstIdentifier.java:68)
at com.sun.el.parser.AstNot.getValue(AstNot.java:46)
at com.sun.el.ValueExpressionImpl.getValue(ValueExpressionImpl.java:192)
at javax.faces.component._ComponentUtils.getExpressionValue(_ComponentUtils.java:233)
at javax.faces.component.UIComponentBase.getExpressionValue(UIComponentBase.java:1155)
at javax.faces.component.UIComponentBase.isRendered(UIComponentBase.java:1225)
at javax.faces.component.UIComponentBase.processDecodes(UIComponentBase.java:685)
at javax.faces.component.UIComponentBase.processDecodes(UIComponentBase.java:688)
at org.ajax4jsf.component.AjaxViewRoot.processPhase(AjaxViewRoot.java:238)
at org.ajax4jsf.component.AjaxViewRoot.processDecodes(AjaxViewRoot.java:409)
at org.apache.myfaces.lifecycle.LifecycleImpl.executePhase(LifecycleImpl.java:103)
at org.apache.myfaces.lifecycle.LifecycleImpl.execute(LifecycleImpl.java:76)
at pt.ptinovacao.components.aeolus.web.servlet.AeolusFacesServlet.service(AeolusFacesServlet.java:148)
at br.com.vivo.vivo360.ui.servlet.Vivo360FacesServlet.service(Vivo360FacesServlet.java:82)
at weblogic.servlet.internal.StubSecurityHelper$ServletServiceAction.run(StubSecurityHelper.java:226)
at weblogic.servlet.internal.StubSecurityHelper.invokeServlet(StubSecurityHelper.java:124)
at weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:283)
at weblogic.servlet.internal.TailFilter.doFilter(TailFilter.java:26)
at weblogic.servlet.internal.FilterChainImpl.doFilter(FilterChainImpl.java:42)
at br.com.vivo.vivo360.ui.servlet.SessionExpiredFilter.doFilter(SessionExpiredFilter.java:51)
at weblogic.servlet.internal.FilterChainImpl.doFilter(FilterChainImpl.java:42)
at br.com.vivo.vivo360.ui.servlet.ErrorFilter.doFilter(ErrorFilter.java:63)
at weblogic.servlet.internal.FilterChainImpl.doFilter(FilterChainImpl.java:42)
at org.apache.myfaces.webapp.filter.ExtensionsFilter.doFilter(ExtensionsFilter.java:147)
at weblogic.servlet.internal.FilterChainImpl.doFilter(FilterChainImpl.java:42)
at org.ajax4jsf.webapp.BaseXMLFilter.doXmlFilter(BaseXMLFilter.java:178)
at org.ajax4jsf.webapp.BaseFilter.handleRequest(BaseFilter.java:290)
at org.ajax4jsf.webapp.BaseFilter.processUploadsAndHandleRequest(BaseFilter.java:390)
at org.ajax4jsf.webapp.BaseFilter.doFilter(BaseFilter.java:517)
at weblogic.servlet.internal.FilterChainImpl.doFilter(FilterChainImpl.java:42)
at weblogic.servlet.internal.RequestEventsFilter.doFilter(RequestEventsFilter.java:26)
at weblogic.servlet.internal.FilterChainImpl.doFilter(FilterChainImpl.java:42)
at weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.run(WebAppServletContext.java:3393)
at weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:321)
at weblogic.security.service.SecurityManager.runAs(Unknown Source)
at weblogic.servlet.internal.WebAppServletContext.securedExecute(WebAppServletContext.java:2140)
at weblogic.servlet.internal.WebAppServletContext.execute(WebAppServletContext.java:2046)
at weblogic.servlet.internal.ServletRequestImpl.run(ServletRequestImpl.java:1366)
at weblogic.work.ExecuteThread.execute(ExecuteThread.java:200)
at weblogic.work.ExecuteThread.run(ExecuteThread.java:172)

After occurs the error the server do not answer JSF requests. If we try a JSP page the server works fine. 

If we wait the server kill all sessions by timeout, after that the server start to answer JSF request and come back to work normally.

It follows below the sources of filters and servlets that we use in the project:

******************************
--> Web.xml
******************************

<?xml version=""1.0""?>
	<!--
		Licensed to the Apache Software Foundation (ASF) under one or more
		contributor license agreements. See the NOTICE file distributed with
		this work for additional information regarding copyright ownership.
		The ASF licenses this file to you under the Apache License, Version
		2.0 (the ""License""); you may not use this file except in compliance
		with the License. You may obtain a copy of the License at

		http://www.apache.org/licenses/LICENSE-2.0 Unless required by
		applicable law or agreed to in writing, software distributed under the
		License is distributed on an ""AS IS"" BASIS, WITHOUT WARRANTIES OR
		CONDITIONS OF ANY KIND, either express or implied. See the License for
		the specific language governing permissions and limitations under the
		License.
	-->
<web-app version=""2.5"" xmlns=""http://java.sun.com/xml/ns/javaee""
	xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
	xsi:schemaLocation=""http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"">
	<display-name>vivo360</display-name>
	<context-param>
		<param-name>javax.faces.STATE_SAVING_METHOD</param-name>
		<param-value>server</param-value>
	</context-param>
	<context-param>
		<param-name>javax.faces.CONFIG_FILES</param-name>
		<param-value>/WEB-INF/faces-config.xml,
			/WEB-INF/migracaocdma-faces-config.xml,
			/WEB-INF/migracaogsm-faces-config.xml,
			/WEB-INF/habilitacao-faces-config.xml,
			/WEB-INF/trocarplano-faces-config.xml,
			/WEB-INF/trocaraparelhocdmapre-faces-config.xml,
			/WEB-INF/menu-faces-config.xml,
			/WEB-INF/venderprodutosavulsos-faces-config.xml,
			/WEB-INF/trocarchip-faces-config.xml,
			/WEB-INF/trocarNumero-faces-config.xml,
			/WEB-INF/consultaHistoricoDetalheInteracao-faces-config.xml,
			/WEB-INF/trocarNumero-faces-config.xml,
			/WEB-INF/manterdadoslinha-faces-config.xml,
			/WEB-INF/atualizacaomodeloaparelho-faces-config.xml,
			/WEB-INF/consultaextratodetalhado-faces-config.xml,
			/WEB-INF/desbloqueiolinha-faces-config.xml,
			/WEB-INF/consultaPuk-faces-config.xml,
			/WEB-INF/consultarSenhasRecarga-faces-config.xml,
			/WEB-INF/trocararearegistro-faces-config.xml,
			/WEB-INF/desprogramarlinha-faces-config.xml,
			/WEB-INF/historicorecarga-faces-config.xml,
			/WEB-INF/desbloquearsimlock-faces-config.xml,
			/WEB-INF/bloquearaparelholinha-faces-config.xml,
			/WEB-INF/sincronizar-linha-faces-config.xml,
			/WEB-INF/consultaNotaFiscalRecarga-faces-config.xml,
			/WEB-INF/reuso-faces-config.xml
			</param-value>
	</context-param>
	<context-param>
		<description>
			If true, rendered HTML code will be formatted, so
			that it is ""human readable"". i.e. additional line 
			separators and whitespace will be written, that do
			not influence the HTML code. Default: ""true""
		</description>
		<param-name>org.apache.myfaces.PRETTY_HTML</param-name>
		<param-value>false</param-value>
	</context-param>
	<context-param>
		<param-name>org.apache.myfaces.USE_ENCRYPTION</param-name>
		<param-value>false</param-value>
	</context-param>
	<context-param>
		<description>
			Validate managed beans, navigation rules and
			ensure that forms are not nested.
		</description>
		<param-name>org.apache.myfaces.VALIDATE</param-name>
		<param-value>false</param-value>
	</context-param>

	<context-param>
		<param-name>org.apache.myfaces.COMPRESS_STATE_IN_SESSION</param-name>
		<param-value>false</param-value>
	</context-param>
	<context-param>
		<param-name>org.apache.myfaces.SERIALIZE_STATE_IN_SESSION</param-name>
		<param-value>false</param-value>
	</context-param>
	<context-param>
		<param-name>org.apache.myfaces.NUMBER_OF_VIEWS_IN_SESSION</param-name>
		<param-value>60</param-value>
	</context-param>
	<context-param>
		<param-name>org.apache.myfaces.NUMBER_OF_LOGICAL_VIEWS</param-name>
		<param-value>20</param-value>
	</context-param>
	<context-param>
		<param-name>org.richfaces.SKIN</param-name>
		<param-value>DEFAULT</param-value>
	</context-param>
	
	<!-- Configurações do Spring -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:/spring/nfo-application-context.xml</param-value>
	</context-param>
	<context-param>
		<param-name>org.apache.myfaces.ERROR_HANDLING</param-name>
		<param-value>false</param-value>
	</context-param>

	<filter>
		<filter-name>ajax4jsf</filter-name>
		<filter-class>org.ajax4jsf.webapp.TidyFilter</filter-class>
		<init-param>
			<param-name>forceparser</param-name>
			<param-value>false</param-value>
		</init-param>
	</filter>

	<filter>
		<filter-name>MyFacesExtensionsFilter</filter-name>
		<filter-class>org.apache.myfaces.webapp.filter.ExtensionsFilter</filter-class>
	</filter>
	<filter>
		<filter-name>ErrorFilter</filter-name>
		<filter-class>br.com.vivo.vivo360.ui.servlet.ErrorFilter</filter-class>
		<init-param>
			<param-name>errorPage</param-name>
			<param-value>/jsp/erro/Erro.jsf</param-value>
		</init-param>
	</filter>
	<filter>
		<filter-name>SessionExpiredFilter</filter-name>
		<filter-class>br.com.vivo.vivo360.ui.servlet.SessionExpiredFilter</filter-class>
		<init-param>
			<param-name>sessionExpiredPage</param-name>
			<param-value>/jsp/inicio/Autenticacao.jsf</param-value>
		</init-param>
	</filter>
	<filter>
		<filter-name>Cache Resource</filter-name>
		<filter-class>br.com.vivo.vivo360.ui.servlet.CacheResourceFilter</filter-class>
		<init-param>
			<param-name>hourToExpire</param-name>
			<param-value>8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>Cache Resource</filter-name>
		<url-pattern>*.js</url-pattern>
		<url-pattern>*.gif</url-pattern>
		<url-pattern>*.css</url-pattern>
		<url-pattern>*.jpg</url-pattern>
		<url-pattern>*.xcss</url-pattern>
		<dispatcher>REQUEST</dispatcher>
		<dispatcher>FORWARD</dispatcher>
		<dispatcher>INCLUDE</dispatcher>
	</filter-mapping>


	<filter-mapping>
		<filter-name>ajax4jsf</filter-name>
		<servlet-name>Faces Servlet</servlet-name>
		<dispatcher>REQUEST</dispatcher>
		<dispatcher>FORWARD</dispatcher>
		<dispatcher>INCLUDE</dispatcher>
	</filter-mapping>
	<filter-mapping>
		<filter-name>MyFacesExtensionsFilter</filter-name>
		<servlet-name>Faces Servlet</servlet-name>
		<dispatcher>REQUEST</dispatcher>
		<dispatcher>FORWARD</dispatcher>
		<dispatcher>INCLUDE</dispatcher>
	</filter-mapping>
	<filter-mapping>
		<filter-name>ErrorFilter</filter-name>
		<servlet-name>Faces Servlet</servlet-name>
		<dispatcher>REQUEST</dispatcher>
		<dispatcher>FORWARD</dispatcher>
		<dispatcher>INCLUDE</dispatcher>
	</filter-mapping>
	<filter-mapping>
		<filter-name>SessionExpiredFilter</filter-name>
		<servlet-name>Faces Servlet</servlet-name>
		<dispatcher>REQUEST</dispatcher>
		<dispatcher>FORWARD</dispatcher>
		<dispatcher>INCLUDE</dispatcher>
	</filter-mapping>

	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<listener>
		<listener-class>
			org.springframework.web.context.request.RequestContextListener</listener-class>
	</listener>
	<listener>
		<listener-class>
			br.com.vivo.vivo360.ui.listener.Vivo360SessionListener</listener-class>
	</listener>
	<!-- Faces Servlet -->
	<servlet>
		<servlet-name>Faces Servlet</servlet-name>
		<servlet-class>br.com.vivo.vivo360.ui.servlet.Vivo360FacesServlet</servlet-class>
		<init-param>
			<param-name>errorPage</param-name>
			<param-value>/jsp/erro/Erro.jsf</param-value>
		</init-param>
		<init-param>
			<param-name>authenticationPage</param-name>
			<param-value>/jsp/inicio/Autenticacao.jsf</param-value>
		</init-param>
		<init-param>
			<param-name>changePasswordPage</param-name>
			<param-value>/jsp/inicio/TrocarSenha.jsf</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<!-- Faces Servlet Mapping -->
	<servlet-mapping>
		<servlet-name>Faces Servlet</servlet-name>
		<url-pattern>*.jsf</url-pattern>
	</servlet-mapping>
	<session-config>
		<session-timeout>10</session-timeout>
	</session-config>
	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>
	<login-config>
		<auth-method>BASIC</auth-method>
	</login-config>

</web-app>

*******************************
--> AeolusFacesServlet
*******************************

/**
 * Projeto: VIVO360
 * CustomServlet.java
 * Descrição: Servlet que substitui o Servlet Padrão do Faces.
 *
 *@author     <a href=""mailto:sdcs-d-gargaro@ptinovacao.pt"">Diego S Gargaro</a>
 *@created    Jun 17, 2008
 *@version    $Id: AeolusFacesServlet.java,v 1.10 2009/04/16 13:00:02 xsdc743 Exp $
 */
package pt.ptinovacao.components.aeolus.web.servlet;

import java.io.IOException;

import javax.faces.FactoryFinder;
import javax.faces.webapp.FacesServlet;
import javax.servlet.ServletConfig;
import javax.servlet.ServletException;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.log4j.Logger;
import org.apache.myfaces.shared_impl.webapp.webxml.DelegatedFacesServlet;

import pt.ptinovacao.components.aeolus.web.session.AeolusSessionManager;

/**
 * @author Diego S Gargaro
 */
public class AeolusFacesServlet extends HttpServlet implements
		DelegatedFacesServlet {

	/**
     * Objeto que contém as propriedades do log4j para criar o log.
     */
    private static final Logger LOGGER = Logger.getLogger(AeolusFacesServlet.class);
	
	/**
	 * Serial.
	 */
	private static final long serialVersionUID = 1L;

	/**
	 * Nome do parâmetro a ser buscado no web.xml que conterá o valor da página
	 * de autenticação.
	 */
	private static final String INIT_PARAM_AUTHENTICATION_PAGE = ""authenticationPage"";

	/**
	 * Nome do parâmetro a ser buscado no web.xml que conterá o valor da página
	 * de troca de senha.
	 */
	private static final String INIT_PARAM_CHANGE_PASSWORD_PAGE = ""changePasswordPage"";



	/**
	 * Servlet do Faces.
	 */
	private FacesServlet delegate;

	/**
	 * URL da página de autenticação à partir do contextPath.
	 */
	private String authenticationPage;

	/**
	 * URL da página de troca de senha à partir do contextPath.
	 */
	private String changePasswordPage;

	/**
	 * {@inheritDoc}
	 */
	public void init(final ServletConfig servletConfig) throws ServletException {
		delegate = new FacesServlet();

		// ******** Necessário à partir da versão 1.2 do MyFaces ********
		// -------- Configura manualmente cada factory ------------------
		FactoryFinder.setFactory(FactoryFinder.FACES_CONTEXT_FACTORY,
				""org.apache.myfaces.context.FacesContextFactoryImpl"");
		FactoryFinder.setFactory(FactoryFinder.LIFECYCLE_FACTORY,
				""org.apache.myfaces.lifecycle.LifecycleFactoryImpl"");
		FactoryFinder.setFactory(FactoryFinder.APPLICATION_FACTORY,
				""org.apache.myfaces.application.ApplicationFactoryImpl"");
		FactoryFinder.setFactory(FactoryFinder.RENDER_KIT_FACTORY,
				""org.apache.myfaces.renderkit.RenderKitFactoryImpl"");
		// **************************************************************

		delegate.init(servletConfig);

		authenticationPage = servletConfig
				.getInitParameter(INIT_PARAM_AUTHENTICATION_PAGE);

		if (authenticationPage == null) {
			throw new ServletException(""must set '""
					+ INIT_PARAM_AUTHENTICATION_PAGE
					+ ""' parameter in AeolusFacesServlet"");
		}

		changePasswordPage = servletConfig
				.getInitParameter(INIT_PARAM_CHANGE_PASSWORD_PAGE);

		if (changePasswordPage == null) {
			throw new ServletException(""must set '""
					+ INIT_PARAM_CHANGE_PASSWORD_PAGE
					+ ""' parameter in AeolusFacesServlet"");
		}

	}

	/**
	 * {@inheritDoc}
	 */
	public void destroy() {
	    if (LOGGER.isDebugEnabled()) {
            LOGGER.debug("" Fim do servlet do MyFaces. Nome da instância: "" + delegate.getServletConfig().getServletName()
            		+ "", Configuração do Servlet: "" + delegate.getServletInfo());
	    }
		delegate.destroy();
	}

	/**
	 * {@inheritDoc}
	 */
	public ServletConfig getServletConfig() {
		return delegate.getServletConfig();
	}

	/**
	 * {@inheritDoc}
	 */
	public String getServletInfo() {
		return delegate.getServletInfo();
	}

	/**
	 * {@inheritDoc}
	 */
	public void service(final ServletRequest request,
			final ServletResponse response) throws ServletException,
			IOException {

		if (isUserLogged((HttpServletRequest) request,
				(HttpServletResponse) response)) {
			delegate.service(request, response);
		} else {
				redirectToAuthenticationPage((HttpServletRequest) request,
						(HttpServletResponse) response);
		}
	}

	/**
	 * Checa se o usuario está logado.
	 * 
	 * @param request
	 *            Objeto HttpServletRequest.
	 * @param response
	 *            Objeto HttpServletResponse.
	 * @throws IOException
	 *             IOException.
	 * @return True caso o usuário esteja autenticado ou seja a pagina de login
	 *         ou troca de senha.
	 */
	protected boolean isUserLogged(final HttpServletRequest request,
			final HttpServletResponse response) throws IOException {
		// Verifica se o contexto é nulo e se nao são as paginas de login e
		// troca de senha
		if (!(request.getServletPath().equals(authenticationPage) || request
				.getServletPath().equals(changePasswordPage))
				&& AeolusSessionManager.getInstance().getDefaultAeolusSession(
						request.getSession(true)).getAeolusUserContext() == null) {
		    if (LOGGER.isDebugEnabled()) {
		        LOGGER.debug("" Sessão vazia. "" + request.getRequestedSessionId());
		    }
			return false;
		}
		
		if (AeolusSessionManager.getInstance().getDefaultAeolusSession(
				request.getSession(true)).getAeolusUserContext() != null) {
		    if (LOGGER.isDebugEnabled()) {
    			LOGGER.debug("" ID da Sessão = "" + request.getRequestedSessionId()
    					+ ""Dados do Usuário: "" + AeolusSessionManager.getInstance().getDefaultAeolusSession(
    							request.getSession(true)).getAeolusUserContext().getUserName());
		    }
		} else {
		    if (LOGGER.isDebugEnabled()) {
		        LOGGER.debug("" ID da Sessão = "" + request.getRequestedSessionId());
		    }
		}
		return true;
	}

	/**
	 * Direciona o sistema para a tela de autenticação.
	 * 
	 * @param request
	 *            Objeto HttpServletRequest.
	 * @param response
	 *            Objeto HttpServletResponse.
	 * @throws IOException
	 *             IOException.
	 */
	protected void redirectToAuthenticationPage(
			final HttpServletRequest request, final HttpServletResponse response)
			throws IOException {
		if (!"""".equals(authenticationPage)) {
			response.sendRedirect(request.getContextPath() + authenticationPage);
		}
	}

}

************************************
--> Vivo360FacesServlet
***********************************

/**
 * Projeto: VIVO360
 * Vivo360FacesServlet.java
 * Descrição: Servlet para o projeto Vivo360 que estende o AeolusFacesServlet.
 *
 *@author     <a href=""mailto:sdcs-d-gargaro@ptinovacao.pt"">Diego S Gargaro</a>
 *@created    14/08/2008
 *@version    $Id: Vivo360FacesServlet.java,v 1.14 2009/04/17 17:09:02 xsdc743 Exp $
 */
package br.com.vivo.vivo360.ui.servlet;

import java.io.IOException;

import javax.servlet.ServletConfig;
import javax.servlet.ServletException;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.ajax4jsf.context.AjaxContext;
import org.apache.log4j.Level;

import pt.ptinovacao.components.aeolus.web.servlet.AeolusFacesServlet;
import pt.ptinovacao.components.aeolus.web.session.AeolusSession;
import br.com.vivo.vivo360.commons.exception.Vivo360ApplicationException;
import br.com.vivo.vivo360.commons.util.ErrorUtils;
import br.com.vivo.vivo360.commons.util.LogUtils;
import br.com.vivo.vivo360.commons.util.context.ContextUtils;
import br.com.vivo.vivo360.util.constant.error.infra.ConstantsTratamentoErro;

/**
 * @author Diego S Gargaro
 *
 */
public class Vivo360FacesServlet extends AeolusFacesServlet {

    /**
     * Serial.
     */
    private static final long serialVersionUID = 1L;

    /**
     * Nome do parâmetro a ser buscado no web.xml que conterá o valor da página
     * de erro.
     */
    private static final String INIT_PARAM_ERROR_PAGE = ""errorPage"";

    /**
     * URL da página de erro à partir do contextPath.
     */
    private String errorPage;

    /**
     * {@inheritDoc}
    */
    @Override
    public void init(
            final ServletConfig servletConfig)
        throws ServletException {

        super.init(servletConfig);
        errorPage = servletConfig.getInitParameter(INIT_PARAM_ERROR_PAGE);
        if (errorPage == null) {
            throw new ServletException(""É necessário configurar o parâmetro '"" + INIT_PARAM_ERROR_PAGE
                    + ""' no Vivo360FacesServlet"");
        }
    }

    /**
     * {@inheritDoc}
    */
    @Override
    public void service(
            final ServletRequest request,
            final ServletResponse response)
        throws ServletException, IOException {
        AeolusSession aeolusSession = (AeolusSession) ((HttpServletRequest) request).getSession().getAttribute(
                ""pt.ptinovacao.components.aeolus.web.session.defaultSessionName"");
        try {
            this.configNoCacheRespone((HttpServletResponse) response);
            super.service(request, response);

            //Remove o identificador de quando o sistema está posicionado na tela de erro.
            if (((HttpServletRequest) request).getSession().getAttribute(ConstantsTratamentoErro.KEY_IS_ERROR_PAGE) != null) {
                //Se for a request do redirect para a tela de erro.
                if ((Boolean) ((HttpServletRequest) request).getSession().getAttribute(ConstantsTratamentoErro.KEY_IS_ERROR_PAGE)) {
                    Boolean isErrorPage = Boolean.FALSE;
                    ((HttpServletRequest) request).getSession().setAttribute(ConstantsTratamentoErro.KEY_IS_ERROR_PAGE,
                            isErrorPage);
                } else {
                    ((HttpServletRequest) request).getSession().removeAttribute(ConstantsTratamentoErro.KEY_IS_ERROR_PAGE);
                }
            }

        } catch (ServletException servletException) {
            Boolean isAjax = false;
            if ((AjaxContext) request.getAttribute(AjaxContext.AJAX_CONTEXT_KEY) != null) {
                isAjax = ((AjaxContext) request.getAttribute(AjaxContext.AJAX_CONTEXT_KEY)).isAjaxRequest();
            }

            this.logError(servletException.getRootCause(), (HttpServletRequest) request);

            if (isAjax) {
                throw servletException;
            } else {
                //Verifica se o sistema já está posicionado na tela de erro.
                if (isUserLogged((HttpServletRequest) request, (HttpServletResponse) response)
                        && ((HttpServletRequest) request).getSession().getAttribute(ConstantsTratamentoErro.KEY_IS_ERROR_PAGE) == null) {
                    //Se não estiver, manda para a tela de erro.
                    ((HttpServletRequest) request).getSession().setAttribute(ConstantsTratamentoErro.KEY_IS_ERROR_PAGE, true);
                    //Verifica se o erro foi tratado.
                    if (request.getAttribute(ConstantsTratamentoErro.ERRO_TRATADO_KEY) == null) {
                        //Se não foi, inclui esse erro no tratamento de erros.
                        ErrorUtils.getInstance().addCommonError((HttpServletRequest) request, servletException.getRootCause(),
                                ConstantsTratamentoErro.ERRO_COMMON_DEFAULT_KEY);
                    }
                    redirectToErrorPage((HttpServletRequest) request, (HttpServletResponse) response);
                } else {
                    //Se estiver, não trata a exceção.
                    ((HttpServletRequest) request).getSession().removeAttribute(ConstantsTratamentoErro.KEY_IS_ERROR_PAGE);
                    throw servletException;
                }
            }
        }
    }

    /**
     * Direciona o sistema para a tela de erro.
     * @param request Objeto HttpServletRequest.
     * @param response Objeto HttpServletResponse.
     * @throws IOException IOException.
     */
    protected void redirectToErrorPage(
            final HttpServletRequest request,
            final HttpServletResponse response)
        throws IOException {
        if (!"""".equals(errorPage)) {
            response.sendRedirect(request.getContextPath() + errorPage);
        }
    }

    private void configNoCacheRespone(
            HttpServletResponse response) {
        response.setHeader(""Cache-Control"", ""no-cache"");
        response.setHeader(""Pragma"", ""no-cache"");
        response.setDateHeader(""Expires"", -1);
    }

    private void logError(
            final Throwable throwable,
            final HttpServletRequest request) {
        
        Throwable causeThrowable = buscaVivo360Exception(throwable);
        
        if (!(causeThrowable instanceof Vivo360ApplicationException)) {
            causeThrowable = throwable;
        }

        boolean doLog = true;
        if (causeThrowable instanceof Vivo360ApplicationException) {
            if (((Vivo360ApplicationException) causeThrowable).getErroInfoBean() != null) {
                doLog = !((Vivo360ApplicationException) causeThrowable).getErroInfoBean().isLogged();
            }
        }

        if (doLog) {
            StringBuilder stringBuilder = new StringBuilder(""Ocorreu um erro na camada de apresentação, segue detalhes:"");
            stringBuilder.append(LogUtils.getInstance().getDetalheCabecalhoUsuario(request));
            stringBuilder.append(LogUtils.getInstance().getDetalheDaException(causeThrowable));
            LogUtils.getInstance().logMessage(stringBuilder.toString(), Level.ERROR);
            LogUtils.getInstance().logThrowable(causeThrowable);
        }
    }
    
    private Throwable buscaVivo360Exception(final Throwable throwable) {
        if (throwable instanceof Vivo360ApplicationException) {
            return throwable;
        }
        if (throwable.getCause() != null) {
            return buscaVivo360Exception(throwable.getCause());
        }
        return throwable;
    }
}

This problem is critical because this occurs in production.
",MYFACES-2218
"In our implementation of the reponse dealing with html dom changes, embedded javascripts are only triggered in certain environments.
This is caused by a performance optimization utilizing auto eval which is present in certain browsers
(currently only Firefox and Opera)
A fallback for ie is present, but the same fallback has to be applied to Webkit based browsers (Safar, Chrome, KHTML)...
Which for now do not have this behavior present!


",MYFACES-2217
"Have a look at the following stack trace when a custom ActionListener throws an unhandled exception:

com.myproject.validation.ValidationException
 	at com.myproject.controller.MyController.validate(MyController.java:50)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.el.parser.AstValue.invoke(AstValue.java:172)
	at org.apache.el.MethodExpressionImpl.invoke(MethodExpressionImpl.java:276)
	at org.apache.jasper.el.JspMethodExpression.invoke(JspMethodExpression.java:68)
	at javax.faces.event.MethodExpressionActionListener.processAction(MethodExpressionActionListener.java:49)
	at javax.faces.event.ActionEvent.processListener(ActionEvent.java:51)
	at javax.faces.component.UIComponentBase.broadcast(UIComponentBase.java:554)
	at javax.faces.component.UICommand.broadcast(UICommand.java:124)
	at javax.faces.component.UIViewRoot._broadcastForPhase(UIViewRoot.java:369)
	at javax.faces.component.UIViewRoot.process(UIViewRoot.java:264)
	at javax.faces.component.UIViewRoot.processApplication(UIViewRoot.java:153)
	at org.apache.myfaces.lifecycle.InvokeApplicationExecutor.execute(InvokeApplicationExecutor.java:32)
	at org.apache.myfaces.lifecycle.LifecycleImpl.executePhase(LifecycleImpl.java:103)
	at org.apache.myfaces.lifecycle.LifecycleImpl.execute(LifecycleImpl.java:76)
	at org.apache.myfaces.custom.ppr.PPRLifecycleWrapper.execute(PPRLifecycleWrapper.java:68)
	at javax.faces.webapp.FacesServlet.service(FacesServlet.java:151)

In MethodExpressionActionListener.processAction(ActionEvent), any exception is wrapped into an AbortProcessingException:

    public void processAction(ActionEvent actionEvent) throws AbortProcessingException {
        try {
            Object[] params = new Object[]{actionEvent};
            methodExpression.invoke(elContext(), params);
        } catch (Exception e) {
            throw new AbortProcessingException(e);
        }
    }

Deeper down in the stack trace, any AbortProcessingException is silently ignored in method UIViewRoot.__broadcastForPhase(PhaseId phaseId) : 

    private void _broadcastForPhase(PhaseId phaseId) {
        ...
                try
                {
                    source.broadcast(event);
                }
                catch (AbortProcessingException e)
                {
                    // abort event processing
                    // Page 3-30 of JSF 1.1 spec: ""Throw an
                    // AbortProcessingException, to tell the JSF implementation
                    // that no further broadcast of this event, or any further
                    // events, should take place.""
                    abort = true;
                    break;
                }
        ...
    }

Mojarra logs the exception at least (twice, in fact). But IMHO unhandled exceptions should make it to the top-level to be handled by custom error handlers or phase listeners. The spec is not explicit about unhandled exceptions in ActionListeners. Sec 3.4.7 (""Event broadcasting"") simply states:

During event broadcasting, a listener processing an event may:
* Examine or modify the state of any component in the component tree.
* Add or remove components from the component tree.
* Add messages to be returned to the user, by calling addMessage on the
FacesContext instance for the current request.
* Queue one or more additional events, from the same source component or a different one,
for processing during the current lifecycle phase.
* Throw an AbortProcessingException, to tell the JSF implementation that no
further broadcast of this event, or any further events, should take place.
* Call renderResponse() on the FacesContext instance for the current request.[...]
* Call responseComplete() on the FacesContext instance for the current request.[...]

The best solution, IMHO, would be that MyFaces stores the unhandled exception in its internal queued exception list (request param ""org.apache.myfaces.errorHandling.exceptionList"") so that it won't get lost and can be inspected by custom code later.

",MYFACES-2216
"Handle outstanding TODOs for Renderkit in the 2.0 api/impl.
Validate the spec compliance of all methods.
Handle work in related classes as necessary.",MYFACES-2215
"With MYFACES-1685 the possiblity to set a custom error handler has been introduced with the following init parameters:

  org.apache.myfaces.ERROR_HANDLING = true (default)
  org.apache.myfaces.ERROR_HANDLER = <class name>

Alas, the current implementation of FacesServlet has a small but fatal bug, which makes using a custom error handler completely unusable:

In the private method handleQueuedExceptions(FacesContext) in lines 203-204 it says:

  Method m = clazz.getMethod(""handleExceptionList"", new Class[]{FacesContext.class,Exception.class});
  m.invoke(errorHandler, new Object[]{facesContext, li});

This code finds a method with signature handleExceptionList(FacesContext,Exception), but invokes it with (FacesContext,List) parameter instances. This leads to an exception: IllegalArgumentException: argument type mismatch

The correct code would be:

  Method m = clazz.getMethod(""handleExceptionList"", new Class[]{FacesContext.class,List.class});
  m.invoke(errorHandler, new Object[]{facesContext, li});

Because of this bug it is impossible to create a custom error handler for exceptions collected in the update model phase. I am unable to see a workaround.
",MYFACES-2214
Add double include prevention everywhere,MYFACES-2213
,MYFACES-2212
,MYFACES-2211
,MYFACES-2210
,MYFACES-2209
"Code cleanup and infrastructural improvements outside of pending bugs and spec features
",MYFACES-2208
"The code is feature complete but additional cleanup might be performed
",MYFACES-2207
"Implement javax.faces.view.ViewMetadata and associated methods (i.e., ViewDeclarationLanguage.getViewMetadata()).",MYFACES-2206
"Need to update several methods in UIviewRoot to be consistent with the latest spec draft.  In particular, need to modify the process* methods to check against isPartialRequest() and !isExecuteAll() instead of isAjaxRequest().  Will clean up any other inconsistencies with the spec I find while I'm in there.  ",MYFACES-2205
Get the existing code to replace the entire page to run and enhance it to use contextualRange/adjacentHTML instead of innerHTML,MYFACES-2204
"To reproduce the problem, try setting the following in web.xml

    <context-param>
        <param-name>org.apache.myfaces.CONFIG_REFRESH_PERIOD</param-name>
        <param-value>2</param-value>
    </context-param>

The code that reads the xml parameter seems to have an obvious typo error 

See org.apache.myfaces.shared_impl.config.MyfacesConfig.java -> line # 299
Offending line:
return Long.parseLong(paramName);

Param Name will always be a String :-)

Please change to the following to fix the problem
return Long.parseLong(strValue);

Thank you,
Radhesh",MYFACES-2203
"This example:

  @JSFProperty
  public abstract String[] getPartialTargets();

The expected class name to be added on myfaces-metadata.xml is java.lang.String[] and not java.lang.String.",MYFACES-2202
"Under heavy load, (generated by HP LoadRunner), a threading issue appears involving EL-resolvers. 
If one jar file has defined a faces-config.xml with several variable and property resolvers and another jar has defined it´s own el-resolver in its faces-config, the ELContext somehow looses the defined variable and property resolvers defined in the first jar.

I can't really say more about it because I haven't taken a look at the MyFaces source code but I could resolve the issue by adding the other jars variable and property resolvers to the second jars el-resolver (CompositeELResolver).

Regards,
Hampus Wingren",MYFACES-2201
"Call jsf.ajax.sendError/jsf.ajax.sendEvent
Also change _Exception to use sendError instead of displaying an alert box",MYFACES-2200
"I have following in my JSP
<h:inputText id=""bigDecimal"" value=""#{myHandler.bigDecimal}"" size=""11"" maxlength=""50""   converter=""CustomBigDecimalConverter""/>

I have following in my CustomBigDecimalConverter. Which is returning null if you leave input text empty.
	public Object getAsObject(FacesContext arg0, UIComponent arg1, String arg2)throws ConverterException{
		try {
			if(arg2 != null){
				String localS = arg2.toString().trim();
				if(StringUtils.isNotBlank(localS)){
					BigDecimal bigDecimal = new BigDecimal(localS);
					return bigDecimal;
				}
			}
			return null;
		} catch (Exception e) {
			FacesMessage msg = new FacesMessage();
			msg.setSummary(""Please enter a valid Amount. Alphabet and negative value is not allowed."");	
			throw new ConverterException(msg);
		}
	}
Following I have in my Phase Listener. I am calling this code on before and after.
	private void myTesting(PhaseEvent phaseEvent) {
		try{
			MyHandler MyHandler= (MyHandler) FacesUtils.getManagedBean(""MyHandler"");
			if(MyHandler!= null){
				System.out.println(""My Handler : ""+MyHandler);
				if(MyHandler.getBigDecimal() != null){
					System.out.println(""BigDecimal : ""+MyHandler.getBigDecimal());	
				}
			}
		}catch (Exception e) {
			e.printStackTrace();
		}
	}

Following is my Out put of Phase Listener
BEFORE PHASE : RESTORE_VIEW(1)
My Handler : xxx.MyHandler@126078f
AFTER PHASE : RESTORE_VIEW(1)
My Handler : xxx.MyHandler@126078f
BEFORE PHASE : APPLY_REQUEST_VALUES(2)
My Handler : xxx.MyHandler@126078f
AFTER PHASE : APPLY_REQUEST_VALUES(2)
My Handler : xxx.MyHandler@126078f
BEFORE PHASE : PROCESS_VALIDATIONS(3)
My Handler : xxx.MyHandler@126078f
AFTER PHASE : PROCESS_VALIDATIONS(3)
My Handler : xxx.MyHandler@126078f
BEFORE PHASE : UPDATE_MODEL_VALUES(4)
My Handler : xxx.MyHandler@126078f
AFTER PHASE : UPDATE_MODEL_VALUES(4)
My Handler : xxx.MyHandler@126078f
BigDecimal : 0
BEFORE PHASE : INVOKE_APPLICATION(5)
My Handler : xxx.MyHandler@126078f
BigDecimal : 0
AFTER PHASE : INVOKE_APPLICATION(5)
My Handler : xxx.MyHandler@126078f
BigDecimal : 0
BEFORE PHASE : RENDER_RESPONSE(6)
My Handler : xxx.MyHandler@126078f
BigDecimal : 0
AFTER PHASE : RENDER_RESPONSE(6)
My Handler : xxx.MyHandler@126078f
BigDecimal : 0

If we see in above log, I can see BigDecimal's value was null until BEFORE PHASE : UPDATE_MODEL_VALUES(4). It became ""0"" on and after AFTER PHASE : UPDATE_MODEL_VALUES(4). 
I am facing this problem in MyFaces 1.2. Earlier I was using same code with MyFaces 1.1 and it was/is running fine. So I thought I should let you know.
Please let me know if I am doing something wrong here as I am really newbie. Please let me know if I can help in anything with this issue.",MYFACES-2199
"handle remaining todos in FacesContext and FacesContextImpl. 

Includes cleaning up of FacesContext TODO: IMPLEMENENT IMPL markers that have already been handled in the impl.",MYFACES-2198
implement inAfterPhase() and inBeforePhase() as well as setting static values for keys.  ,MYFACES-2197
"The generated error messages contains a leading component id. This is not standard comform.
See Spec. 2.5.2.4

MyFaces message: 
javax.faces.component.UIInput.CONVERSION = {0}: Conversion error occurred.

Standard:
javax.faces.component.UIInput.CONVERSION -- Conversion error occurred
",MYFACES-2196
this typo was introduced with repackagung and affect teh comlete xhrcore package. I'm creating this task to add a patch.,MYFACES-2195
"In 13.3.2 the spec says: >>All Ajax requests must be put into a client side request queue before they are sent to the server to ensure Ajax requests are processed in the order they are sent.<<

So, if you trigger a queue of n Ajax requests each of them would include the same ViewState that was collected at the time when the request was queued. But with each response the view state will have changed, making the former collected view state obsolete! With javax.faces.STATE_SAVING_METHOD==server the old view state may even be gone if the queue size exceeds the number of view states stored in the session.",MYFACES-2194
Rule #1 never mess around with native Class types,MYFACES-2193
"We try to route calls wherever possible through the standard apis instead of relying on our internal code!
External APIs are only allowed to call their subsequent adapter implementation objects, while even the deepest adapter is allowed to call the API itself! ",MYFACES-2192
"We opted to put our specialized parameters which can adjust the engine on the fly on a per request call into the options list. The Spec already has specialized options which were remapped and reprocessed before going into the request, so it is probably one extension point we can use for our own specialized options.
The other one is a central configuration datastructure which can be defined on a page per page base! ",MYFACES-2191
the context is sent down to every event handler,MYFACES-2190
"implement addBehavior, createBehavior and getBehaviorIds.  ",MYFACES-2189
,MYFACES-2188
Methods for encodeBookmarkableURL and encodeRedirectURL need to be added to both the API and IMPL classes for ExternalContext.,MYFACES-2187
"In migration from Myfaces 1.1.5 to Myfaces 1.2.6.

On one of my jsp i am using <jsp:include> and after running the application i was getting component ids appended with ""pc"" then i have modified ""UIComponentClassicTagBase.java"" class by commenting some code as shown below -

private String createNextId(String componentId)
    {
        Integer currentCounter = (Integer) getFacesContext().getExternalContext().getRequestMap().get(componentId);
        int iCurrentCounter = 1;
        if (currentCounter != null)
        {
            iCurrentCounter = currentCounter.intValue();
            iCurrentCounter++;
        }
        getFacesContext().getExternalContext().getRequestMap().put(componentId, new Integer(iCurrentCounter));
        // if (isIncludedOrForwarded())  // Commented these lines
        // {
           // componentId = componentId + ""pc"" + iCurrentCounter;
        // }
        // else
        // {
            componentId = componentId + UNIQUE_ID_PREFIX + iCurrentCounter;            
        // }
        return componentId;
    }

But now ids are getting appended with j_id_1. Is there any fix available for this issue because its kind of show stopper in my work.",MYFACES-2186
"The latest spec defines one utility method on the javascript side
jsf.util.chain

",MYFACES-2185
,MYFACES-2184
JSF 2.0 requires Facelets integration. Since I'm going to deal with this whole thing I'm creating this ticket to keep track of it.,MYFACES-2183
,MYFACES-2182
,MYFACES-2181
,MYFACES-2180
,MYFACES-2179
,MYFACES-2178
"A always get an exception like this when I bind a VE avaluating to a TimeZone pattern (GMT+1) to the timeZone property of the convertDateTime converter:
 java.lang.IllegalArgumentException: Cannot convert GMT+1 of type class java.lang.String to class java.util.TimeZone

This worked for MyFaces 1.1 and since we are currently migrating this breaks our code.

I believe the root cause for this problem is the definition of the convertDateTimeTag in the myfaces tld, which will never allow VE with return types other than java.util.TimeZone to be bound:

<attribute>

         <description><![CDATA[The time zone to use instead of GMT (the default timezone). When
this value is a value-binding to a TimeZone instance, that
timezone is used. Otherwise this value is treated as a String
containing a timezone id, ie as the ID parameter of method
java.util.TimeZone.getTimeZone(String).]]></description>

         <name>timeZone</name>

         <deferred-value>

             <type>java.util.TimeZone</type>

         </deferred-value>

      </attribute>",MYFACES-2177
"We need a better split between api and impl, a refactoring of the api code into an impl class is needed, this way
the entire impl will become pluggable in the long run for other frameworks to be able to plug their own impls into the core!
",MYFACES-2176
"Loading a page initially is working fine, but if loading the same page from either by clicking on a link on the page or returning back from another page. will give the following error.
com.sun.facelets.FaceletViewHandler handleRenderException
SEVERE: Error Rendering View[<<pagepath>>]

java.lang.IllegalStateException: Client-id: <<autogenerated id>>.",MYFACES-2175
"Here's the proposal for MyFaces 2.0 extensions to the JSR 314 AJAX API:

proposed API (all additional attribute are optional, so spec conformant requests are still supportet):
jsf.ajax.request(this, event, {execute: (componentIds), render: (componentIds), myfaces: {pps: (true/false), queuesize: (int), errorlevel: (warning/error/fatal)})

And here is what the additional attributes are meant to do:
pps:
If set to true, the PPS (partial page submit) feature becomes active. Only the elements numbered in attribute execute will become submitted.

queuesize:
The desired size of the request queue. For most applications it makes sense to set this to 1. Default is unlimited.

errorlevel:
Will bring up an alert box displaying Javascript errors. This is very helpful for debugging purposes. Possible level values are: warning, error, fatal, none. default is 'none'.
",MYFACES-2174
"I'll attach a set of Javascripts to this issue to be tucked into MyFaces 2.0 to make up it's AJAX components. It's the modified J4Fry JSF AJAX and it's tested to replace RI 2.0's AJAX scripts.

This is what we still need to do: 

- translate comments
Currently many comments are german

- repackage (j4fry -> javax)
Currently we've put the classes into package org.j4fry.script, probably org.apache.myfaces.script would be a good choice. Also, the AJAX API is implemented according to the spec with
<h:outputScript name=""ajax.js"" library=""javax.faces"" target=""head""/> and javax.faces.Ajax.ajaxRequest, but the RI 2.0.0.9 I tested uses
<h:outputScript name=""jsf.js"" library=""javax.faces"" target=""head""/> and jsf.ajax.request, so this might be the way the final spec will put it, when it's final.

- support multiple execute parameters
Currently only one component can be triggered for action execution. This is a little hard to test at this time, because the RI 2.0.0.9 doesn't react to the execute parameter at all - even when using the RI's own javascripts.

- set default queue size to unlimited
Default queue size ist currently set to 1, because for most applications this is the better choice. As soon as we've made the queue size configurable (see separate mail for API exensio nproposal) we'll need to set the default to unlimited as specified in the specs.

- define maven build to form one single script
Werner is already working on this: The comply with the specs resource handling the entire AJAX scripts must come in one single javscript file called jsf.js. As this is an ugly beast to handle with over 1000 lines we prefer having one file per Javascript class. The maven build should then compile the 8 scripts we currently have into one.

- implement additional attributes
The J4Fry scripts support a lot of parameters that aren't part of the spec. They are vital for a good AJAX experience, so we would like to extend the API beyond the spec on these. ",MYFACES-2173
"The spec only allows one jsf.js file for all jsf related javascript includes, we have to map all external and internal apis to this file via the maven build process and also compression has to be added to reduce the file size to the possible minimum.
The maven javascript plugin allows both mechanisms via its compress and compile directives,
we have to add this to our maven build process to be in line with the spec!
",MYFACES-2172
"
See section 11.4.7 of the spec. Since this issue does not have any code related to jsf api, it is safe to work in it.

",MYFACES-2171
"
The attribute serialuidtag is available on myfaces- builder-plugin doclets but not on annotations for @JSFValidator and @JSFConverter. The ideal is that the plugin generates it but right now the plugin does not have way to decide when generate one file or not, so it just generate all files each time it runs.

Also the attribute clazz is not available on @JSFValidator, so we need to define in to make the goal make-validators work using annotations.",MYFACES-2170
"
force parameter does not work on make-components, make-tags, make-converter-tags and make-validator-tags goals of myfaces-builder-plugin

If force == true and some file fails to generate, log and continue",MYFACES-2169
"
Add documentation for myfaces-builder-plugin, to make easier users to use it",MYFACES-2168
This issue also happens in MyFaces Core JSF 1.1. Could you fix it in Core JSF 1.1 as well.,MYFACES-2167
"Some ajax file in jsf 2.0 contains this line:

#{facesContext.application.projectStage}

Suggesting that some type of resources should handle ValueExpressions. We need a simple wrapper that do that as mojarra 2.0 does.",MYFACES-2166
"after starting tomcat, we will get a error when i visit a faces page. we can fix this issue by restarting tomcat. so i think it's concurrent issue.
java.lang.NullPointerException
	at org.apache.myfaces.application.jsp.JspViewHandlerImpl.getServletMapping(JspViewHandlerImpl.java:388)
	at org.apache.myfaces.application.jsp.JspViewHandlerImpl.renderView(JspViewHandlerImpl.java:222)
	at org.ajax4jsf.application.ViewHandlerWrapper.renderView(ViewHandlerWrapper.java:108)
	at org.ajax4jsf.application.AjaxViewHandler.renderView(AjaxViewHandler.java:216)
	at org.apache.shale.validator.faces.ValidatorViewHandler.renderView(ValidatorViewHandler.java:130)
	at org.ajax4jsf.application.ViewHandlerWrapper.renderView(ViewHandlerWrapper.java:108)
	at org.ajax4jsf.application.AjaxViewHandler.renderView(AjaxViewHandler.java:216)
	at org.apache.myfaces.lifecycle.RenderResponseExecutor.execute(RenderResponseExecutor.java:41)
	at org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:146)
	at javax.faces.webapp.FacesServlet.service(FacesServlet.java:147)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at cn.com.brilliance.begen.webapp.servlet.BeGenFilter.doFilter(BeGenFilter.java:56)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.ajax4jsf.webapp.BaseXMLFilter.doXmlFilter(BaseXMLFilter.java:141)
	at org.ajax4jsf.webapp.BaseFilter.doFilter(BaseFilter.java:281)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:630)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:436)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:374)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:302)
	at cn.com.brilliance.begen.webapp.servlet.LoginServlet.doPost(LoginServlet.java:91)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:637)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.orm.hibernate3.support.OpenSessionInViewFilter.doFilterInternal(OpenSessionInViewFilter.java:198)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:128)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:286)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:845)
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:583)
	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:447)
	at java.lang.Thread.run(Thread.java:619)
",MYFACES-2165
,MYFACES-2164
Add RequiredValidator as described on the latest jsf 2.0 javadoc available,MYFACES-2163
"A.t.m. the default RenderKit is """", but it should be ""HTML_BASIC"".",MYFACES-2162
"Issue was seen and fixed in Myfaces 1.1.6 already- but seems to still exist in 1.2.6 

UIOutput currently has the following code:

     public Object getValue()
     {
         if (_value != null) return _value;
         ValueBinding vb = getValueBinding(""value"");
         return vb != null ? (Object)vb.getValue(getFacesContext()) : null;
     }

UIInput has the following code:

     public void setValue(Object value)
     {
         setLocalValueSet(true);
         super.setValue(value);
     }

My problem (pseudo code):

1) user enters an empty string in an input-component: """"
2) conversion and validation phase: """" --> setValue(null);
isLocalValueSet = true; setSubmittedValue(null);
3) validation fails in some component on the page --> update model
phase is skipped
4) renderer calls getValue(); --> getValue() evaluates the
value-binding, as the local-value is 'null', and I get the
default-value of the bean shown again

proposed solution:

UIInput overwrites getValue of UIOutput:

     public Object getValue()
     {
         if (isLocalValueSet()) return _value;
         ValueBinding vb = getValueBinding(""value"");
         return vb != null ? (Object)vb.getValue(getFacesContext()) : null;
     }
",MYFACES-2161
"I can provide an example. If I change in my pom file

		<dependency>
			<groupId>org.apache.myfaces.core</groupId>
			<artifactId>myfaces-impl</artifactId>
			<version>1.1.5</version>
			<scope>runtime</scope>
		</dependency>

to 

		<dependency>
			<groupId>org.apache.myfaces.core</groupId>
			<artifactId>myfaces-impl</artifactId>
			<version>1.1.6</version>
			<scope>runtime</scope>
		</dependency>

it doesn't work anymore. I only change the version from 1.1.5 to 1.1.6 and the commandButton doesn't work anymore. It should navigate to an other page but it doesn't work anymore.
",MYFACES-2160
There are some bugs present on qdox 1.6.3 that affects myfaces-builder-plugin. There exists a new version of qdox (1.9) so we can update this dependency and solve this problems.,MYFACES-2159
"Trinidad has a tag called tr:componentRef.  

Its implementation:

org.apache.myfaces.trinidadinternal.taglib.ComponentRefTag

inherits from:

org.apache.myfaces.trinidadinternal.taglib.UIXComponentRefTag

which it is tied to UIXComponentRef

In tomahawk, the strategy is create an abstract tag class that can be include before the generated tag class. But this case could be also valid. The solution is when the tree is flattened, inspect tags and if some tag inherit from a component tag class, convert component properties to attributes and inject on tag meta.

",MYFACES-2158
"
Trinidad has a small hierarchy of converters (some part on api and some other on impl). On myfaces builder plugin, the intention was to allow converters inherit properties, but on tomahawk there is no example, so it was never tested until now.
",MYFACES-2157
"we did some profiling in our project and found out that HtmlRenderKitImpl creates some amount of transient object garbage when getRenderer is called:

Self   8005   0,00   7,92           0     2894448   
J:org/apache/myfaces/renderkit/html/HtmlRenderKitImpl.getRenderer(Ljava/lang/String;Ljava/lang/String;)Ljavax/faces/render/Renderer;
   Child  24015   0,00   4,69           0     1714064   
J:java/lang/StringBuffer.append(Ljava/lang/String;)Ljava/lang/StringBuffer;

The above values were recorded with just 2 request to a page with many components - 2.8MB of transient objects were created by 8005 calls to getRenderer.
I assume that this is due to the ""keying"" currenlty implemented which always creates a concatinated string. I guess using a Map<String, Map<String, Renderer>> doubleMap could improve the performance here since string creation for keying would not be nessary.

Might also touch 1.2 and 2.0.",MYFACES-2156
HtmlLinkRenderer did not recognize ankers (#) and encoded them wrong if there were f:params used (-> url#anker?paramname=paramvalue instead of url?paramname=paramvalue#anker),MYFACES-2155
"Tobias Bräuer reported the following issue:

Hello,
There is a problem with mobile internet explorer version 6.12 and
myfaces. The browser sends a ""Accept:
application/vnd.wap.mms-message;*/*"". We solved that problem by adding
the following code in the class
org.apache.myfaces.shared_impl.renderkit.html.HtmlRendererUtils at
line 1619. If used with tomahawk, the same fix is needed there.

I have no idea how your community process works, but feel free to add
the code to your repository.

               if (contentTypeListString == null) {
                       FacesContext context = FacesContext.getCurrentInstance();
                       if (context != null) {
                               contentTypeListString = (String) context.getExternalContext()
                                               .getRequestHeaderMap().get(""Accept"");
                               // There is a windows mobile IE client (6.12) sending
                               // ""application/vnd.wap.mms-message;*/*""
                               // This is a workaround ...
                               if (contentTypeListString
                                               .startsWith(""application/vnd.wap.mms-message;*/*"")) {
                                       contentTypeListString = ""*/*"";
                               }
                       }

                       if (contentTypeListString == null) {
                               if (log.isDebugEnabled())
                                       log
                                                       .debug(""No content type list given, creating
HtmlResponseWriterImpl with default content type."");

                               contentTypeListString = HTML_CONTENT_TYPE;
                       }
               }



Cheers,

Tobias Bräuer
",MYFACES-2154
"When the first requests to .jspx (facelets) pages, after starting the web application, are concurrent an exception occurs in WebXml.java.
It is a little hard to reproduce but I strongly feel that this is a concurrency issue. The stack trace below shows two threads requesting a .jspx page within 20 milliseconds.

[2/18/09 7:52:33:058 GMT+01:00] 0000002c viewhandler   E Error Rendering View[/bundles/applications/jsf/applicationValidations.jspx]
                                 java.lang.ArrayIndexOutOfBoundsException
	at java.util.ArrayList.ensureCapacity(ArrayList.java:196)
	at java.util.ArrayList.add(ArrayList.java:377)
	at org.apache.myfaces.shared_impl.webapp.webxml.WebXml.getFacesServletMappings(WebXml.java:130)
	at org.apache.myfaces.application.jsp.JspViewHandlerImpl.getServletMapping(JspViewHandlerImpl.java:347)
	at org.apache.myfaces.application.jsp.JspViewHandlerImpl.getViewIdPath(JspViewHandlerImpl.java:294)
	at org.apache.myfaces.application.jsp.JspViewHandlerImpl.getActionURL(JspViewHandlerImpl.java:158)
	at com.sun.facelets.FaceletViewHandler.getActionURL(FaceletViewHandler.java:786)

[2/18/09 7:52:33:071 GMT+01:00] 0000002f viewhandler   E Error Rendering View[/bundles/synonym/jsf/resolvesynonym.jspx]
                                 java.lang.NullPointerException
	at org.apache.myfaces.application.jsp.JspViewHandlerImpl.getServletMapping(JspViewHandlerImpl.java:374)
	at org.apache.myfaces.application.jsp.JspViewHandlerImpl.getViewIdPath(JspViewHandlerImpl.java:294)
	at org.apache.myfaces.application.jsp.JspViewHandlerImpl.getActionURL(JspViewHandlerImpl.java:158)
	at com.sun.facelets.FaceletViewHandler.getActionURL(FaceletViewHandler.java:786)

Every .jspx file requested after this results in the same NPE as the last thread of the stack trace above. Restaring the application usually fixes the problem.",MYFACES-2153
"HtmlSelectOneRadio throws IllegalArgumentException with message ""Value is no String"". While debugging I can see that the value is no String but rather a org.apache.myfaces.shared_impl.renderkit.RenderUtils$1 object which seems really strange because I only send SelectItems to the control.

It has been working on and off for some time but now, it shows up regulary.

",MYFACES-2152
"Some changes added in jsf 2.0 spec make some test using shale-test mock objects fail.

The temporal solution is remove this test dependency and move some shale-test code to myfaces api test jar. Then, when we have a shale-test lib for jsf 2.0, remove this files and add the dependency again",MYFACES-2151
"Hi,

i tried to use more than one property file for l10n (defined in the <application><message-bundle>..) but that didn't work. Even if it's not part of the official JSF 1.2 spec, it would be very cool if myfaces could provide support for multiple l10n property files. You need this if you are writing a central library for many modules providing jsf layouts and functionality. The modules currently have to define translations for library specific contents (for example the login page which is provided by the lib). It would be better if the modules only have to provide module specific translations in their module_lang_<locale>.properties - but this needs the support for splitting up the translation files.

Felix",MYFACES-2150
"When undeploying application that uses myfaces:

WARNING: Input stream has been finalized or forced closed without being explicitly closed; stream instantiation reported in following stack trace
java.lang.Throwable
	at com.sun.enterprise.loader.EJBClassLoader$SentinelInputStream.<init>(EJBClassLoader.java:1166)
	at com.sun.enterprise.loader.EJBClassLoader$InternalJarURLConnection.getInputStream(EJBClassLoader.java:1259)
	at org.apache.myfaces.config.FacesConfigurator.openStreamWithoutCache(FacesConfigurator.java:486)
	at org.apache.myfaces.config.FacesConfigurator.feedClassloaderConfigurations(FacesConfigurator.java:511)
	at org.apache.myfaces.config.FacesConfigurator.configure(FacesConfigurator.java:258)
	at org.apache.myfaces.webapp.AbstractFacesInitializer.buildConfiguration(AbstractFacesInitializer.java:131)
	at org.apache.myfaces.webapp.Jsp20FacesInitializer.initContainerIntegration(Jsp20FacesInitializer.java:116)
	at org.apache.myfaces.webapp.AbstractFacesInitializer.initFaces(AbstractFacesInitializer.java:83)
	at org.apache.myfaces.webapp.StartupServletContextListener.contextInitialized(StartupServletContextListener.java:72)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4632)
	at org.apache.catalina.core.StandardContext.start(StandardContext.java:5312)
	at com.sun.enterprise.web.WebModule.start(WebModule.java:353)
	at com.sun.enterprise.web.LifecycleStarter.doRun(LifecycleStarter.java:58)
	at com.sun.appserv.management.util.misc.RunnableBase.runSync(RunnableBase.java:304)
	at com.sun.appserv.management.util.misc.RunnableBase._submit(RunnableBase.java:176)
	at com.sun.appserv.management.util.misc.RunnableBase.submit(RunnableBase.java:192)
	at com.sun.enterprise.web.VirtualServer.startChildren(VirtualServer.java:1742)
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1247)
	at org.apache.catalina.core.StandardHost.start(StandardHost.java:971)
	at com.sun.enterprise.web.LifecycleStarter.doRun(LifecycleStarter.java:58)
	at com.sun.appserv.management.util.misc.RunnableBase.runSync(RunnableBase.java:304)
	at com.sun.appserv.management.util.misc.RunnableBase._submit(RunnableBase.java:176)
	at com.sun.appserv.management.util.misc.RunnableBase.submit(RunnableBase.java:192)
	at com.sun.enterprise.web.EmbeddedWebContainer$WebEngine.startChildren(EmbeddedWebContainer.java:477)
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1247)
	at org.apache.catalina.core.StandardEngine.start(StandardEngine.java:549)
	at org.apache.catalina.startup.Embedded.start(Embedded.java:952)
	at com.sun.enterprise.web.WebContainer.start(WebContainer.java:872)
	at com.sun.enterprise.web.PEWebContainer.startInstance(PEWebContainer.java:791)
	at com.sun.enterprise.web.PEWebContainerLifecycle.onStartup(PEWebContainerLifecycle.java:89)
	at com.sun.enterprise.server.ApplicationServer.onStartup(ApplicationServer.java:446)
	at com.sun.enterprise.server.ondemand.OnDemandServer.onStartup(OnDemandServer.java:134)
	at com.sun.enterprise.server.PEMain.run(PEMain.java:409)
	at com.sun.enterprise.server.PEMain.main(PEMain.java:336)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at com.sun.enterprise.server.PELaunch.main(PELaunch.java:415)
",MYFACES-2149
"Create an alternative transport layer independend from the Trinidad codebase, because the current RI only implements a small subset of what Trinidad has to offer, this can be a chance to get a small easy maintainable codebase for the future!
",MYFACES-2148
"This error occurs when rendering an arbitrary page.

It is caused by the Class.getConstructor(Class) not being aware of subclasses.

SystemEvent has a constructor with one parameter of type Object, but different subclasses have different constructors.

Caused by: java.lang.NoSuchMethodException: javax.faces.event.AfterAddToParentEvent.<init>(java.lang.Object)
	at java.lang.Class.getConstructor0(Class.java:2706)
	at java.lang.Class.getConstructor(Class.java:1657)
	at org.apache.myfaces.application.ApplicationImpl._createEvent(ApplicationImpl.java:1292)
	at org.apache.myfaces.application.ApplicationImpl._traverseListenerList(ApplicationImpl.java:1484)
	at org.apache.myfaces.application.ApplicationImpl.publishEvent(ApplicationImpl.java:437)
	at org.apache.myfaces.application.ApplicationImpl.publishEvent(ApplicationImpl.java:459)
	at org.apache.myfaces.lifecycle.RestoreViewExecutor.execute(RestoreViewExecutor.java:118)
	at org.apache.myfaces.lifecycle.LifecycleImpl.executePhase(LifecycleImpl.java:121)
	at org.apache.myfaces.lifecycle.LifecycleImpl.execute(LifecycleImpl.java:80)
	at javax.faces.webapp.FacesServlet._handleStandardRequest(FacesServlet.java:423)
",MYFACES-2147
"UIViewRoot.encodeBegin() is missing a code path.
Because of this, the UIViewRoot instance is not added to the current component stack.
This causes an exception in UIComponent.popComponentFromEL(), because pop is being called on an empty stack.",MYFACES-2146
"The latest RI has an ajax event notification subsystem added, I assume this is part of an unreleased spec, I will add this to the implementation
in a generic way!
",MYFACES-2145
"There is a small error in DigesterFacesConfigDispenserImpl.feed() method. 

In the for-loop responsible for storing the render kits, when no render kit id was specified in the file being parsed (i.e. renderKit.getId() is null), we default the render kit id to ""HTML_BASIC"". Later we store the render kit in a map (renderKits), with key being the render kit id. However, the code erroneously uses null as the key, instead of  ""HTML_BASIC"". This, of course, breaks FacesConfigurator.configureRenderKits() once it tries to add a render kit with a 'null' id.

I suspect that the reason for this bug going unnoticed until now is that the 'null' key will only be used if the FIRST <render-kit> found on the class path does not specify an explicit id. All subsequent <render-kit> declarations are merged into the element with the correct key (HTML_BASIC), which is why it works as long as the first <render-kit> has an id. 

I'm uploading a patch with a fix for this bug.",MYFACES-2144
"URIComponentUtils.java, line 69 decodes '+' to ' '.

this is NOT equivalent to ECMA's decodeURIComponent function.

paste the following into your browser address bar for proof:

    javascript:document.write(decodeURIComponent('a+b'));",MYFACES-2143
"While running the latest myfaces2 source code with a test JSP page, I've encountered the following error.
java.lang.ClassCastException: org.apache.myfaces.context.servlet.ResponseSwitch cannot be cast to javax.servlet.http.HttpServletResponse
	at org.apache.myfaces.application.jsp.JspViewHandlerImpl.buildView(JspViewHandlerImpl.java:487)
	at org.apache.myfaces.application.jsp.JspViewHandlerImpl.renderView(JspViewHandlerImpl.java:343)
	at org.apache.myfaces.lifecycle.RenderResponseExecutor.execute(RenderResponseExecutor.java:45)
	at org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:167)
	at javax.faces.webapp.FacesServlet._handleStandardRequest(FacesServlet.java:428)
	at javax.faces.webapp.FacesServlet.service(FacesServlet.java:182)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
etc......

As far as I can see, this is a bug, since there is an explicit cast to HttpServletResponse and the given parameter is of type ResponseSwitch, which is not a HttpServletResponse.

It looks like a recent change...",MYFACES-2142
"When changing the config in web.xml from

      <param-name>org.apache.myfaces.SERIALIZE_STATE_IN_SESSION</param-name>
      <param-value>false</param-value>

to

      <param-name>org.apache.myfaces.SERIALIZE_STATE_IN_SESSION</param-name>
      <param-value>true</param-value>

my pages don't get rendered properly any more. One exception is:

[2009-01-26 20:14:25,968] [http-8080-2] [ERROR] javax.faces.webapp._ErrorPageWriter - An exception occurred
javax.faces.FacesException: java.io.NotSerializableException: org.apache.myfaces.custom.date.HtmlInputDate

Hint: 
My java-class is inheriting from another class in which an attribute is existing of type org.apache.myfaces.custom.date.HtmlInputDate",MYFACES-2141
"JSF 2.0 specifies the use of the following annotations for Managed Bean configuration:
- ManagedBean
- ManagedBeans
- ManagedProperty
- RequestScoped
- SessionScoped
- ViewScoped
- ApplicationScoped
- NoneScoped

The annotations are already there, it now needs processing logic.
I'm on it.",MYFACES-2140
"MyFaces breaks compatibility with Sun RI as the styleClass attribute is not rendered for h:messages.
The styleClass attribute should be applied to the <ul> element (or the <table> element if in table layout).",MYFACES-2139
"Issue MYFACES-1764 change the HtmlTableRendererBase class so that it always renders <tr><td> elements, even if the table is empty.  This causes some output that is hard to style correctly when the table include header facets on columns.

It would be nice if the inserted <td> element set colspan so that the empty entry covers the entire table.  It would also be good if it were easy to subclass the renderer in order to provide specific behaviour when the table is empty.",MYFACES-2138
"The Tree Visiting, part of jsf2.0, was already added to Trinidad 1.2.x to improve things. 
We just need to add the api/impl from that patch, to this project.

see TRINIDAD-1368 for more.",MYFACES-2137
"The currently selected items can be stored in a Collection.

Store the result of each conversion in a data structure, called targetForConvertedValues for discussion.",MYFACES-2136
"
The list of changes is this:

javax.faces.component.UICommand.getAction():                anno 0
java.lang.Deprecated()
javax.faces.component.UICommand.getActionListener():        anno 0
java.lang.Deprecated()
javax.faces.component.UICommand.setAction(javax.faces.el.MethodBinding):
anno 0 java.lang.Deprecated()
javax.faces.component.UICommand.setActionListener(javax.faces.el.MethodBinding):anno
0 java.lang.Deprecated()
javax.faces.component.UIInput.getValueChangeListener():     anno 0
java.lang.Deprecated()
javax.faces.component.UIInput.getValueChangeListener():     anno 0
java.lang.Deprecated()
javax.faces.component.UIInput.getValueChangeListener():     anno 0
java.lang.Deprecated()
javax.faces.component.UIInput.getValueChangeListener():     anno 0
java.lang.Deprecated()
javax.faces.component.UIInput.setValidator(javax.faces.el.MethodBinding):
anno 0 java.lang.Deprecated()
javax.faces.component.UIInput.setValidator(javax.faces.el.MethodBinding):
anno 0 java.lang.Deprecated()
javax.faces.component.UIInput.setValidator(javax.faces.el.MethodBinding):
anno 0 java.lang.Deprecated()
javax.faces.component.UIInput.setValidator(javax.faces.el.MethodBinding):
anno 0 java.lang.Deprecated()
javax.faces.component.UIInput.setValueChangeListener(javax.faces.el.MethodBinding):
anno 0 java.lang.Deprecated()
javax.faces.component.UIInput.setValueChangeListener(javax.faces.el.MethodBinding):
anno 0 java.lang.Deprecated()
javax.faces.component.UIInput.setValueChangeListener(javax.faces.el.MethodBinding):
anno 0 java.lang.Deprecated()
javax.faces.component.UIInput.setValueChangeListener(javax.faces.el.MethodBinding):
anno 0 java.lang.Deprecated()

",MYFACES-2135
"When the context param org.apache.myfaces.CONFIG_REFRESH_PERIOD is != 0 (which seems to be the default) the second page request causes a 
javax.faces.FacesException: Undefined component type javax.faces.ViewRoot Exception.

In FacesConfigurator.class method void update()  the method purgeConfiguration() is called. This method throws an NoSuchMethodException. In the catch block for this Exception there is a return; - so the configure(); below isn't called. 

It looks like RenderKitFactory and / or CoreRenderKitFactory (trinidad) doesn't implement the purgeRenderKit method which is called by reflection from the purgeConfiguration() method - so the Exception rises up.

Setting the context param org.apache.myfaces.CONFIG_REFRESH_PERIOD to 0 works because the purgeConfiguration() is never called then.

Regards from Felix @itemis Bonn

",MYFACES-2134
,MYFACES-2133
"I just wanted to raise your attention about a weird thing that can happen in MyFaces and took me a few hours to understand. I am not quite sure this is a bug, but it certainly can create an undesired behavior:
It seems like there is a new mechanism that allows ""auto reloading"" of JSF configuration files.
This mechanism involves dates checking to make sure if file should be reloaded.
Anyway, there can be a case, in which, files are being deployed in a server that has different GMT. This will cause web app files to have ""future"" date. This issue will cause the configuration files to never be loaded and I believe that JSF part responsible for loading the files will be ""stuck"" in a loop causing the whole web application not to load.",MYFACES-2132
"In org.apache.myfaces.context.servlet.FacesContextImpl, there is an import to import sun.misc.Regexp.

The error in my IDE:
Access restriction: The type Regexp is not accessible due to restriction on required library D:\dev\Java\jdk1.6.0_10\jre\lib\rt.jar

It is not used, however, so removing it should be no problem.",MYFACES-2131
"Migration from jsf1.1 to 1.2:

I have a subview which is included by a main-page:

Mainpage:
			<t:aliasBean alias=""#{aliasPersonListBean}"" value=""#{managerPersonsBean}"">
				<jsp:include page=""/jsp/app/contact/include/personslist.jsp""/>
			</t:aliasBean>

The included page:
...
<f:subview id=""personslistSubview""> 
	<f:loadBundle basename=""lang.app.company"" var=""bundle""/>
...	


References to the bundle with ""#{bundle.xxxxx} are not resolved.

This has been working with the old myfaces version.",MYFACES-2130
"For doodle.com, we use several handlers that have application scope.

Our understanding is that handlers with application scope are singletons.

However, we have observed that sometimes, an application-scope handler is instanced more than once.",MYFACES-2129
"Any type of page inclusion seems to lead to duplicated component id and thus fails with MyFaces 1.2.  E.g. something like this (with appropriate taglibs):

outer.jsp:
<f:view>
  <jsp:include page=""inner.jsp""/>
</f:view>

inner.jsp:
<h:inputText value=""foo""/>

gives me error:
java.lang.IllegalStateException - Client-id : j_id_id0 is duplicated in the faces tree. Component

Both the outer view and the inner inputText are assigned the same ""id0"" as jspId.  However, documentation on setJspId on page http://java.sun.com/javaee/5/docs/api/javax/faces/webapp/UIComponentClassicTagBase.html#setJspId(java.lang.String), to which MyFaces sources refer, notes that:

IMPLEMENTATION NOTE: This method will detect where we are in an include and assign a unique ID for each include in a particular 'logical page'. This allows us to avoid possible duplicate ID situations for included pages that have components without explicit IDs.

This is not true for MyFaces, which renders code reusal (which jsp inclusion facilitates) impossible for this case.  Or at least I don't see how to include pages without causing errors.
",MYFACES-2127
"When response writer outputs script nodes for encoding another then UTF-8 it encodes all symbols greater than 0x80. That makes component behavior dependent on what mode: HTML or XHTML is used by application developer.

This issue is clone of https://issues.apache.org/jira/browse/MYFACES-218 that has been closed as ""Won't fix"" because reporter provided client-side workaround, but this workaround isn't acceptable for me. ",MYFACES-2126
Self explaining,MYFACES-2125
,MYFACES-2124
"Add missing classes and interfaces:

FaceletContext
FaceletException
FaceletHandler",MYFACES-2123
"Create simple test mockups to cover the simple testcases Selenium less...
",MYFACES-2122
"Integrate a javascript testing framework (probably jsunit)
to cover the core apis
",MYFACES-2121
"Create and implement the partial response as described in 
13.4.3 Sending The Response to The Client 

of the EDR2

The partial response writer must give back xml and must split the javascripts out of the html
the client side then must eval the javascripts separately after rendering the html content!

",MYFACES-2120
"Create and implement the partial response as described in 
13.4.3 Sending The Response to The Client 

of the EDR2
",MYFACES-2119
As described in 13.4.2 Partial View Render of the EDR2,MYFACES-2118
"As described in 13.4.1 Partial View Execute 
 of the EDR2
",MYFACES-2117
Add a partial view lifecycle as described in 13.4 Partial View Traversal of the EDR2,MYFACES-2116
"Create and implement javax.faces.Ajax.getProjectStage()
as described in 
13.3.4 Determining An Application's Project Stage  of the EDR2
",MYFACES-2115
"Create and implement the ajax response functions:

javax.faces.ajax.ajaxResponse

Section 13.3.2.5 Request Callback Function Specifics of the EDR2
and 
Section 
13.3.3 Processing The Ajax Response of the EDR2",MYFACES-2114
"Implement the request queuing for the ajax communications layer as described in
13.3.2.4 Ajax Request Queueing",MYFACES-2113
"Create the javascript API for sending ajax requests 
javax.faces.Ajax.ajaxRequest(ELEMENT, |event|, { |OPTIONS| });
as described in 13.3.2
",MYFACES-2112
"Collect and Encode viewstate for an entire form on the javascript side as described in 13.3.1.1 of the EDR2

var viewState = javax.faces.Ajax.viewState(form); 
",MYFACES-2111
"Make the core class and the implementation of the viewstate method on the javascript side of things
as described in section 13.3.1 of the EDR2
",MYFACES-2110
"The javascript part of JSF2 needs a registration and namespacing mechanism as described
 in 13.2 of the ÉDR2 docs!
",MYFACES-2109
,MYFACES-2108
,MYFACES-2107
"This change also includes update on myfaces impl FacesConfigurator, to scan for Discovery and Exception Handler Factories ",MYFACES-2106
"Class: javax.faces.application.Application
Method: UIComponent createComponent(final String componentType)",MYFACES-2105
"Class: javax.faces.application.Application
Method: UIComponent createComponent(javax.el.ValueExpression componentExpression, FacesContext context, String componentType, String rendererType)",MYFACES-2104
"Class: javax.faces.application.Application
Method: UIComponent createComponent(FacesContext context, String componentType, String rendererType)",MYFACES-2103
"Class: javax.faces.application.Application  
Method: public UIComponent createComponent(FacesContext context,Resource componentResource) ",MYFACES-2102
Javadoc update for method Object getFactory(String factoryName) of FactoryFinder class,MYFACES-2101
"When trying to upgrade to MyFaces 1.2.5 from 1.1.5 I get several instances of 'overridden method is final' compilation errors for custom subclass of ApplicationImpl.  E.g. I override createConverter() method to post-apply custom setters to results of super.createConverter().

Are there any good reasons these methods are now final?  Because if this is not fixed (i.e. reverted to previous non-final methods) I will have to reimplement the whole Application class, which sure sucks a lot.",MYFACES-2100
"RendererUtils.getConvertedUIOutputValue() throws an IllegalArgumentException because it does not recognize RendererUtils.NOTHING (see stacktrace below).

Problem is the following code, taken from RendererUtils.getConvertedUIOutputValue():

public static Object getConvertedUIOutputValue(FacesContext facesContext,
                                                   UIOutput output,
                                                   Object submittedValue)
        throws ConverterException {
if (submittedValue != null && !(submittedValue instanceof String)) {
            if (RendererUtils.NOTHING.equals(submittedValue)) {
                return null;
            }
            throw new IllegalArgumentException(""Submitted value of type String for component : "" +
                getPathToComponent(output) + ""expected"");
}

Problem: In my case ""submittedValue"" *is* an instance of RendererUtils.NOTHING. However, this is not recognized by the above code because it was serialized. 
As one can see at the declaration of RendererUtils.NOTHING, it is intentionally Serializable. Unfortunately the detection of the value works only for not-serialized values.
Possible solution: Implement RendererUtils.NOTHING.equals() to recognize serialized versions of RendererUtils.NOTHING.

Application Background (Further explanation of the context):
During ""apply request values"" the component gets RendererUtils.NOTHING assigned as ""submittedValue"". Usually the submitted value is resetted in the ""process validations"" phase. But in this case ""process validations"" is never executed because FacesContext.renderResponse() is called earlier. So, the submitted value (= RendererUtils.NOTHING) remains in the component, gets serialized. On the next round trip the component doesnt receive a ""process decodes"" because it is disabled, but ""process validations"" is called on the component, which fails with the attached stack trace.

---------
Stacktrace:
java.lang.IllegalArgumentException: Submitted value of type String for component : {.....} expected
	org.apache.myfaces.shared_impl.renderkit.RendererUtils.getConvertedUIOutputValue(RendererUtils.java:591)
	org.apache.myfaces.shared_impl.renderkit.html.HtmlMenuRendererBase.getConvertedValue(HtmlMenuRendererBase.java:126)
	javax.faces.component.UIInput.getConvertedValue(UIInput.java:396)
	javax.faces.component.UIInput.validate(UIInput.java:350)
	javax.faces.component.UIInput.processValidators(UIInput.java:184)
	javax.faces.component.UIComponentBase.processValidators(UIComponentBase.java:627)
	javax.faces.component.UIComponentBase.processValidators(UIComponentBase.java:627)
	javax.faces.component.UIComponentBase.processValidators(UIComponentBase.java:627)
	javax.faces.component.UIComponentBase.processValidators(UIComponentBase.java:627)
	javax.faces.component.UIComponentBase.processValidators(UIComponentBase.java:627)
	javax.faces.component.UIComponentBase.processValidators(UIComponentBase.java:627)
	javax.faces.component.UIComponentBase.processValidators(UIComponentBase.java:627)
	javax.faces.component.UIComponentBase.processValidators(UIComponentBase.java:627)
	javax.faces.component.UIForm.processValidators(UIForm.java:73)
	javax.faces.component.UIComponentBase.processValidators(UIComponentBase.java:627)
	javax.faces.component.UIViewRoot.processValidators(UIViewRoot.java:149)
	org.apache.myfaces.lifecycle.ProcessValidationsExecutor.execute(ProcessValidationsExecutor.java:32)
	org.apache.myfaces.lifecycle.LifecycleImpl.executePhase(LifecycleImpl.java:95)
	org.apache.myfaces.lifecycle.LifecycleImpl.execute(LifecycleImpl.java:70)
	javax.faces.webapp.FacesServlet.service(FacesServlet.java:139)",MYFACES-2099
"The JSF 2.0 spec specifies one new Validator: the RegexValidator which validates a string value against a java.util.regex Regular Expression.

A.t.m. it doesn't exist yet.",MYFACES-2098
"The spec specifies a class RenderKitWrapper, a wrapper for RenderKit.",MYFACES-2097
"According to the spec, DataModel and its subclasses must be generic.",MYFACES-2096
"JSF 2.0 specifies 5 annotations that can be used to configure a managed bean scope:
- ApplicationScoped
- SessionScoped
- ViewScoped
- RequestScoped
- NoneScoped

A.t.m. those annotations are missing.",MYFACES-2095
"JSF 2.0 EDR2 specifies some new event types, like InitialStateEvent.",MYFACES-2094
"JSF 2.0 EDR2 specifies some new event types, like ExceptionEvent.",MYFACES-2093
"The ApplicationPreDestroyEvent class specifies a method: getApplication().

A.t.m. this method is missing.",MYFACES-2092
"The ApplicationPostConstructEvent class specifies a method: getApplication().

A.t.m. this method is missing.",MYFACES-2091
"JSF 2.0 EDR2 specifies some new event types, like AfterRestoreStateEvent.",MYFACES-2090
"According to the JSF 2.0 spec, ResponseWriterWrapper should implement FacesWrapper<ResponseWriter>.",MYFACES-2089
"The spec specifies the ExceptionHandler class, which is the central point of error handling in a JSF implementation.
It also specifies two accompanying files: ExceptionHandlerFactory and ExceptionHandlerWrapper.",MYFACES-2088
Many JSF 2.0 classes must implement FacesWrapper. StateManager is one of those classes.,MYFACES-2087
"The spec specifies a new class: Discoveryhandler, and two accompanying files: DiscoveryHandlerWrapper and DiscoveryHandlerFactory",MYFACES-2086
"The spec specifies a class ApplicationWrapper, a wrapper for Application.",MYFACES-2085
"I am trying to show a custom message ofr Long Range validation in an input text

<h:inputText id=""dos"" validatorMessage=""#{text.test}"">
	<f:validateLongRange minimum=""1"" maximum=""10"" />
</h:inputText>

, where text is the variable representing a bundle loaded with f:loadBundle

When I use <t:messages   /> to show errors, it shows the default message (paginador:dos: Validation Error: Specified attribute is not between the expected values of 1 and 10.), instead of the custom one.

The same happens when I write the property javax.faces.validator.NOT_IN_RANGE in the bundle. Custom message is ignored

Anyway, it work ok when I use a literal instead of a property inside a bundle:

<h:inputText id=""dos"" validatorMessage=""test message"">
	<f:validateLongRange minimum=""1"" maximum=""10"" />
</h:inputText>

With this code, ""test message"" is shown as validation error.",MYFACES-2084
"Several fields and methods are currently put in FacesContext, but should (according to the JSF 2.0 spec) be placed inside another class: PartialViewContext.

They are:
    public static final String NO_PARTIAL_PHASE_CLIENT_IDS = ""none"";
    public static final String PARTIAL_EXECUTE_PARAM_NAME = ""javax.faces.partial.execute"";
    public static final String PARTIAL_RENDER_PARAM_NAME = ""javax.faces.partial.render"";

    public List<String> getExecutePhaseClientIds()
    public ResponseWriter getPartialResponseWriter()
    public List<String> getRenderPhaseClientIds()
    public void setExecutePhaseClientIds(List<String> executePhaseClientIds)
    public void setRenderAll(boolean renderAll)
    public void setRenderPhaseClientIds(List<String> renderPhaseClientIds)
    public boolean isAjaxRequest()
    public boolean isExecuteNone()
    public boolean isPostback()
    public boolean isRenderAll()
    public boolean isRenderNone()

",MYFACES-2083
"Checking the javadoc of jsf ri 1.2 mr 1 tld, On all html components and some core components that extends from UIComponent but HtmlColumn, request time is set to true, so the value in its tld for id in rtexprvalue is true.

This problem can be seen because facelets assume this behavior, so when using html component on facelets, you can set the id the first request using a EL Expression (it is calculated only once).

The solution is set the default value of id for rtexprvalue to true",MYFACES-2082
Create tag ui:repeat for Facelets,MYFACES-2081
Create tag ui:param for Facelets,MYFACES-2080
Create tag ui:insert for Facelets,MYFACES-2079
Create tag ui:include for Facelets,MYFACES-2078
Create tag ui:fragment for Facelets,MYFACES-2077
Create tag ui:define for Facelets,MYFACES-2076
Create tag ui:decorate for Facelets,MYFACES-2075
Create tag ui:debug for Facelets,MYFACES-2074
Create tag ui:composition for Facelets,MYFACES-2073
Create tag ui:component for Facelets,MYFACES-2072
Create tag fn:trim() for Facelets,MYFACES-2071
Create tag fn:toUpperCase()  for Facelets,MYFACES-2070
Create tag fn:toLowerCase()  for Facelets,MYFACES-2069
Create tag fn:substringBefore() for Facelets,MYFACES-2068
Create tag fn:substringAfter() for Facelets,MYFACES-2067
Create tag fn:substring() for Facelets,MYFACES-2066
Create tag fn:startsWith() for Facelets,MYFACES-2065
Create tag fn:split() for Facelets,MYFACES-2064
Create tag fn:replace() for Facelets,MYFACES-2063
Create tag fn:length() for Facelets,MYFACES-2062
Create tag fn:join() for Facelets,MYFACES-2061
Create tag fn:indexOf() for Facelets,MYFACES-2060
Create tag fn:escapeXml() for Facelets,MYFACES-2059
Create tag fn:endsWith() for Facelets,MYFACES-2058
Create tag fn:containsIgnoreCase() for Facelets,MYFACES-2057
Create tag fn:contains() for Facelets,MYFACES-2056
Create tag composite:valueHolder for Facelets,MYFACES-2055
Create tag composite:interface for Facelets,MYFACES-2054
Create tag composite:insertFacet for Facelets,MYFACES-2053
Create tag composite:insertChildren for Facelets,MYFACES-2052
Create tag composite:implementation for Facelets,MYFACES-2051
Create tag composite:facet  for Facelets,MYFACES-2050
Create tag composite:editableValueHolder for Facelets,MYFACES-2049
Create tag composite:attribute for Facelets,MYFACES-2048
Create tag composite:actionSource for Facelets,MYFACES-2047
Create tag c:when for Facelets,MYFACES-2046
Create tag c:set for Facelets,MYFACES-2045
Create tag c:otherwise for Facelets,MYFACES-2044
Create tag c:if  for Facelets,MYFACES-2043
Create tag c:forEach  for Facelets,MYFACES-2042
Create tag c:choose for Facelets,MYFACES-2041
Create tag c:catch for Facelets,MYFACES-2040
"on all public methods except getCurrentInstance the IllegalStateException  has to be thrown if the object itself already is released
",MYFACES-2039
"The tag <h:commandButton value=""click""  type=""button"" />   creates the following HTML code:

<input id=""paginador:j_id_jsp_1411489580_33"" name=""paginador:j_id_jsp_1411489580_33"" type=""submit"" value=""click"" />

The type of the html input should be ""button"" instead of ""submit"".

It works OK with type=""reset""

Happens the same when using the Tomahawk Library commandButton
",MYFACES-2038
"On myfaces core 1.2.5, there was detected an unwanted addition of myfaces shared 3.0.5 as transitive dependency. This was introduced without notice on MYFACES-1976.

The ideal is activate add-shared-dependency profile when the version of this library is snapshot, but unfortunately there is no way to activate it (see http://jira.codehaus.org/browse/MNG-3826). Existing problems on maven 2.0.x architecture makes impossible do it. For now the solution is trigger it manually using the property -Ddev=true.",MYFACES-2037
,MYFACES-2036
"http://myfaces.apache.org/tomahawk/source-repository.html incorrectly gives the online svn repository link as follows:

http://svn.apache.org/viewcvs.cgi/myfaces/tomahawk/trunk/tomahawk-site

I'm guessing it should be:

http://svn.apache.org/viewcvs.cgi/myfaces/tomahawk/trunk",MYFACES-2035
"On the spec there are some few references to <faces-lifecycle-listener> tag on faces-config.xml version 2.0. Unfortunately on early draft 2 there are very few explanations, so we have to wait until next draft.",MYFACES-2034
"Description says it all. We have download pages on all the sub projects, and another ""global"" download page for everything again. It's redundant and a pain to maintain.",MYFACES-2033
see jsf 2.0 spec section 11.1.3,MYFACES-2032
"From infrastructure:

Hi,

 the apache.org infrastucture team is worried about the increase
 in size of '/www/www.apache.org/dist/' ; it doubled in a year.
 Also, the size of '/dist/' matters to our mirrors and mirroring
 resources.

 I have looked at

   http://www.apache.org/dist/myfaces/

 and if I'm not misstaken, I see a lot of old releases.

 Please see the ASF policy regarding mirrored releases in '/dist/' :

   http://www.apache.org/dev/mirrors.html

 Directory '/dist/' should contain only reasonably 'current releases' ;
 for instance the ones you point to in

   http://myfaces.apache.org/download.html

 and maybe some previous releases.

 Note that all releases are automatically archived in

   http://archive.apache.org/dist/

 and that you can easily refer to previous releases in
 a 'README.html' in

   http://www.apache.org/dist/myfaces/

 Currently the size of '/dist/myfaces/' is 1944 Mb.

 Thanks for the fix, regards,

 Henk Penning
",MYFACES-2031
Add default implementations for HTML_BASIC renderkit,MYFACES-2030
,MYFACES-2029
See section 5.2.6.4 of the spec,MYFACES-2028
"Reading the documentation of UIComponent.pushComponentToEL it says:

""....This method and popComponentFromEL() form the basis for the contract that enables the EL Expression ""#{component}"" to resolve to the ""current"" component that is being processed in the lifecycle.....""

This value is saved on the new FacesContext attributes map (call to getAttributes()) by the key UIComponent.CURRENT_COMPONENT. This value is set and get from pushComponentToEL and popComponentToEL and appears on section 5.6.2 of the spec.

I'll create a new class called org.apache.myfaces.el.unified.resolver.implicitobject.ComponentImplicitObject to do that.

It is strange that on UIComponent there exists a key to UIComponent.CURRENT_COMPOSITE_COMPONENT , but there is no mention on spec and javadoc related. I suppose that it should exists something like #{compositeComponent}, but for now I just keep an eye if on the next early draft",MYFACES-2027
"When opening a myFaces Webapp with Konqueror (KDE 3.5.4 RHEL 5) the application throws a NullPointerException:

java.lang.NullPointerException
        at org.apache.myfaces.trinidadinternal.style.cache.FileSystemStyleCache$Key.hashCode(FileSystemStyleCache.java:1131)
        at java.util.Hashtable.get(Hashtable.java:336)
        at org.apache.myfaces.trinidadinternal.style.cache.FileSystemStyleCache._getEntry(FileSystemStyleCache.java:447)
        at org.apache.myfaces.trinidadinternal.style.cache.FileSystemStyleCache._getEntry(FileSystemStyleCache.java:415)
        at org.apache.myfaces.trinidadinternal.style.cache.FileSystemStyleCache.getStyleSheetURI(FileSystemStyleCache.java:160)
        at org.apache.myfaces.trinidadinternal.renderkit.core.xhtml.StyleSheetRenderer.encodeAll(StyleSheetRenderer.java:91)
        at org.apache.myfaces.trinidad.render.CoreRenderer.delegateRenderer(CoreRenderer.java:335)
        at org.apache.myfaces.trinidadinternal.renderkit.core.xhtml.HeadRenderer.encodeBegin(HeadRenderer.java:87)
        at org.apache.myfaces.trinidad.render.CoreRenderer.delegateRendererBegin(CoreRenderer.java:356)
        at org.apache.myfaces.trinidadinternal.renderkit.core.xhtml.DocumentRenderer.encodeAll(DocumentRenderer.java:74)
        at org.apache.myfaces.trinidad.render.CoreRenderer.encodeEnd(CoreRenderer.java:224)
        at org.apache.myfaces.trinidad.component.UIXComponentBase.encodeEnd(UIXComponentBase.java:763)
        at org.apache.myfaces.trinidad.component.UIXComponentBase.__encodeRecursive(UIXComponentBase.java:1351)
        at org.apache.myfaces.trinidad.component.UIXComponentBase.encodeAll(UIXComponentBase.java:783)
        at javax.faces.component.UIComponent.encodeAll(UIComponent.java:246)
        at com.sun.facelets.FaceletViewHandler.renderView(FaceletViewHandler.java:578)
        at javax.faces.application.ViewHandlerWrapper.renderView(ViewHandlerWrapper.java:45)
        at org.apache.myfaces.trinidadinternal.application.ViewHandlerImpl.renderView(ViewHandlerImpl.java:176)
        at org.apache.myfaces.lifecycle.RenderResponseExecutor.execute(RenderResponseExecutor.java:41)
        at org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:140)
        at javax.faces.webapp.FacesServlet.service(FacesServlet.java:152)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
        at org.apache.myfaces.trinidadinternal.webapp.TrinidadFilterImpl._invokeDoFilter(TrinidadFilterImpl.java:238)
        at org.apache.myfaces.trinidadinternal.webapp.TrinidadFilterImpl._doFilterImpl(TrinidadFilterImpl.java:195)
        at org.apache.myfaces.trinidadinternal.webapp.TrinidadFilterImpl.doFilter(TrinidadFilterImpl.java:138)
        at org.apache.myfaces.trinidad.webapp.TrinidadFilter.doFilter(TrinidadFilter.java:92)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
        at com.satellic.etcng.cas.tariff.utils.utility.ViewExpirationFilter.doFilter(ViewExpirationFilter.java:58)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:175)
        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:128)
        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:286)
        at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:844)
        at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:583)
        at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:447)
        at java.lang.Thread.run(Thread.java:595)

When using Firefox with a Konqueror user agent that happens, too. Changing the user agent to something senseless like "">'>(Mc Login from da o0o black nationz o0o)'>"" it doesn't crash.

I think that there mustn't be exceptions like this when the browser / user agent is not supported. in case of doubt a message like ""your browser is not supported"" would be better than showing this exception.

Felix
",MYFACES-2026
"Generated myfaces-metadata.xml on myfaces-impl on linux does not have information annotated on impl

On windows systems (compiling with jdk 1.6) this does not happen.",MYFACES-2025
"javax.servlet.ServletException: Servlet.init() for servlet faces threw exception
	org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:105)
	org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:148)
	org.apache.coyote.http11.Http11AprProcessor.process(Http11AprProcessor.java:833)
	org.apache.coyote.http11.Http11AprProtocol$Http11ConnectionHandler.process(Http11AprProtocol.java:639)
	org.apache.tomcat.util.net.AprEndpoint$Worker.run(AprEndpoint.java:1285)
	java.lang.Thread.run(Thread.java:595)

root cause

java.lang.IllegalArgumentException: Class org.apache.portals.bridges.jsf.FacesContextFactoryImpl is no javax.faces.context.FacesContextFactory
	javax.faces.FactoryFinder.newFactoryInstance(FactoryFinder.java:132)
	javax.faces.FactoryFinder.getFactory(FactoryFinder.java:107)
	javax.faces.webapp.FacesServlet.init(FacesServlet.java:88)
	org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:105)
	org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:148)
	org.apache.coyote.http11.Http11AprProcessor.process(Http11AprProcessor.java:833)
	org.apache.coyote.http11.Http11AprProtocol$Http11ConnectionHandler.process(Http11AprProtocol.java:639)
	org.apache.tomcat.util.net.AprEndpoint$Worker.run(AprEndpoint.java:1285)
	java.lang.Thread.run(Thread.java:595)
",MYFACES-2024
"The 1.1 implementation of HtmlFormRendererBase called the methods:

protected String getActionUrl(FacesContext facesContext, UIForm form)
protected String getMethod(FacesContext facesContext, UIForm form)
protected String getAcceptCharset(FacesContext facesContext, UIForm form )

These useful methods (particularly getActionUrl in my case) are defined but ignored in 1.2.",MYFACES-2023
"As of JSF 2.0, the specification says:

The saveState() method of UIForm must call setSubmitted(false) before calling super.saveState() as an extra precaution to ensure the submitted state is not persisted across requests.",MYFACES-2022
JSF 2.0 begins to address error handling in the spec. The first materialization of this is a more precise FacesServlet behavior that needs to be implemented.,MYFACES-2021
"Implement default behavior for

public Iterator<String> getComponentFamilies() 

and

public Iterator<String> getRendererTypes(String componentFamily)",MYFACES-2020
"As of JSF 2.0, DataModel implements Iterable and therefore requires an iterator method.",MYFACES-2019
"JSF 2.0 requires support of @ResourceDependency and @ResourceDependencies when a Converter is set on a ValueHolder or a Validator is added to an EditableValueHolder. The support should be added to the base implementation of those classes, UIOutput and UIInput.",MYFACES-2018
Changes involving push/pop component to/from EL and composite components.,MYFACES-2017
"After the child component has been added to the view, if the following condition is not met:

      FacesContext.isPostback() returns true and FacesContext.getCurrentPhaseId() returns PhaseId.RESTORE_VIEW

Application.publishEvent(java.lang.Class, java.lang.Object) must be called, passing AfterAddToParentEvent.class as the first argument and the newly added component as the second argument.",MYFACES-2016
Implement the new logic for various UIViewRoot lifecycle methods like process* and encode*,MYFACES-2015
"Implement ResponseStateManager.getViewState(FacesContext, Object)",MYFACES-2014
"This bug does not happen on standalone war projects but in .ear projects which contain a war project using MyFaces.

JSP code like this:
[...]
<%@taglib prefix=""h"" uri=""http://java.sun.com/jsf/html""%>
[...]
<h:dataTable...>
  <f:facet name=""caption"">
    <h:outputText value=""this is the caption""/>
  </f:facet>
  <h:column>
    <f:facet name=""header"">
      <h:outputText value=""this is a header""/>
    </f:facet>
    [...]
  </h:column>
  [...]
</h:dataTable>

Renders the caption facet twice:
  <table><caption/><thead/><caption/><tbody/></table>

There must be only one <caption> element; firefox and safari gracefully ignore the second caption, but in Internet Explorer and Opera, the caption appears twice.

The following link includes a sample netbeans application and a list of the libraries used.

http://rapidshare.com/files/154981138/dblcaption.tar.gz.html",MYFACES-2013
Commented on the javax.faces.application classes,MYFACES-2012
"We have just upgraded from 1.1.6 to 1.2.4 and come across an issue that looks similar to MYFACES-1804 in effect but looks to have a slightly different cause.

The issue occurs when you first click on a download/popup link and then go to click another link on the same page.  
This calls oamSubmitForm which at the end calls oamClearHiddenInput which removes the hidden field from the dom.

Now when you go and click on another link on the original page it calls oamSubmitForm.  This first calls clearFormHiddenParams_formname which tries to get the hidden field and set the value to empty, but because it has already been removed from the dom the field null and an exception occurs.

My workaround was to override oamSetHiddenInput and oamClearHiddenInput to instead of removing/adding the hidden field from the dom, was to (dis)enabled it instead.  Alternatively clearFormHiddenParams_form could check to see if the hidden field exists before trying to set the value on it.

Note this error happens in IE7 and not in Firefox 3

",MYFACES-2011
"In class: javax.faces.application.Application
Apply comment in the methods",MYFACES-2010
"As noted many times, there is no native integration of Spring Security tags inside a JSF webapp. I've seen a few approaches, but they're mostly custom JSF-Spring-Security components. In our current project we needed to use Spring Security tags functionality inside any JSF component (custom or not). We ended reaching MyFaces' own Security Context (http://wiki.apache.org/myfaces/SecurityContext), which default implementation is J2EE based.

We've extended it with a custom Spring Security implementation, hence this development, which is now publicly available, as we think it may be useful for the community. The basic idea is that Spring's Security Context is going to be available via EL, i.e. you can:

<h:outputText rendered=""#{securityContext.ifAllGranted['ROLE_ADMIN,ROLE_USER']}"">how how how</h:outputText>

Some notes:

- The zip is bundled as a maven 2 project, so 'mvn clean install' and add the jar as a dependency

- It is a Java 5, Spring 2.5.5, Spring Security 2.0.3, MyFaces 1.1.6 project, this were customer requirements. Although, all of these should be easily changed, only messing with dependencies is required O:-) (it should *should* not affect the build, but we've not checked).

- As it is MyFaces 1.1.x based, it extends Spring's DelegatingVariableResolver. Same as former statement, it *could* be easily changed, only changing the extended class and the usual dependency changes. Again, we've not checked (but hey, should be an *easy* change O:-)). 

- Default behaviour of the new Resolver is to check if the requested operation corresponds to a security operation, if not, runs parent behaviour.

- IMPORTANT: the security operations available via EL are noted in here: http://wiki.apache.org/myfaces/SecurityContext . Anyone willing to make available any other operation via EL should extend his own http://svn.apache.org/viewvc/myfaces/tomahawk/trunk/sandbox/core/src/main/java/org/apache/myfaces/custom/security/SecurityContextPropertyResolver.java?view=markup implementation and change his faces-config accordingly.

- There are several classes which have been taken from tomahawk's 1.1.6 sandbox, in order to make dependencies management a bit easier. This is noted at class-javadoc level.

- In jsf-example-webapp module just 'mvn jetty:run' to run the example webapp. There is a dummy security applicationContext, with users and passwords hardcoded in it (this is only a dumb demo) inside resources folder. Serious applications will likely have a more complex configuration.

Configuration:
1st.- Make your JSF application Spring Security Aware (http://static.springframework.org/spring-security/site/reference/html/ns-config.html#ns-getting-started)
2nd.- Make your JSF application Spring aware (http://static.springframework.org/spring/docs/2.5.x/reference/web-integration.html#jsf). This implementation assumes JSF 1.1 integration (http://static.springframework.org/spring/docs/2.5.x/reference/web-integration.html#jsf-delegatingvariableresolver). JSF 1.2 will require code modification, as noted above.
3nd.- In your faces-config.xml set:

  <faces-config>
    <application>
      <variable-resolver>org.apache.myfaces.custom.security.MyFacesSecurityContextSpringDelegatingVariableResolver</variable-resolver>
      <property-resolver>org.apache.myfaces.custom.security.SecurityContextPropertyResolver</property-resolver>
      <!-- ... -->

and that's all.

cheers,
juan pablo",MYFACES-2009
"In a constructor of ServletExternalContextImpl.java, if character encoding is looked up from Content-Type header, it is not set on request character encoding.

This bug exists in MyFaces Core 1.1.6 and also in SVN trunk for 1.1.
This bug does not exists in 1.2.x. (The logic is moved to calculateCharacterEncoding method, and fixed there.)

Current Code:
----------------------------------------
if (characterEncoding == null) {
    HttpSession session = httpServletRequest.getSession(false);

    if (session != null) {
        characterEncoding = (String) session.getAttribute(ViewHandler.CHARACTER_ENCODING_KEY);
    }

    if (characterEncoding != null) {
        setCharacterEncodingMethod.invoke(servletRequest, new Object[]{characterEncoding});
    }
}
----------------------------------------
Should be fixed to:
----------------------------------------
if (characterEncoding == null) {
    HttpSession session = httpServletRequest.getSession(false);

    if (session != null) {
        characterEncoding = (String) session.getAttribute(ViewHandler.CHARACTER_ENCODING_KEY);
    }
}
if (characterEncoding != null) {
    setCharacterEncodingMethod.invoke(servletRequest, new Object[]{characterEncoding});
}
----------------------------------------
",MYFACES-2008
"This patch fixes the following situation:
 - A converter is bound in faces-config.xml to an interface type (ex. EnumCoded). 
 - There is an enum class that implements EnumCoded, like this:

public enum PickListActionType implements EnumCoded { ..... etc... }

 - There is a converter called a GenericEnumTypeConverter, which knows how to deal with these and is declared like this:
 <converter> 
    <converter-for-class>EnumCoded</converter-for-class> 
    <converter-class>GenericEnumTypeConverter</converter-class> 
 </converter>

 - Right now the converter picked by MyFaces is EnumConverter instead of my GenericEnumTypeConverter, b/c the fact that my target class is an enum takes precedence over the fact that it implements EnumCoded interface. This is incorrect.

This patch fixes the problem.",MYFACES-2007
"Have a project using MyFaces 1.1.5 and Tomahawk 1.1.7. When MyFaces 1.1.5 is upgraded to 1.1.6 classcast exceptions are thrown when elements such as HtmlInputText try to access getTabIndex through an EL expression that returns an ""int"". Though the spec states that the EL expression should return a string, this was not a problem in the previous version. If tag attributes are more strict in the latest release, it would help to have stated so in the release notes.",MYFACES-2006
"org.apache.myfaces.el.unified.resolver.GuiceResolver does not work properly
it creates new instance of managedBean class, and injects needed features in it,  but parameters from form remain in previous bean (created by default ManagedBeanResolver)

And now execution path of resolvers is unclear - because every managedBean will be created for 3 or 4 times per request.",MYFACES-2005
"In class: javax.faces.context.FacesContext
Implement: public List<String> getRenderPhaseClientIds()",MYFACES-2004
"In class: javax.faces.context.FacesContext
Implement: public ResponseWriter getPartialResponseWriter()",MYFACES-2003
"Implement ""Restore View"" phase changes, not including the full tree building if Facelets is the current PDL.",MYFACES-2002
"I get the following exception:

    Property space references object in a scope with shorter lifetime than the target scope none

for a managed bean with scope 'none'.  It sets a property to a bean in request scope.  However, request scope lifetime should not be viewed as 'shorter' than 'none'.  This is observed on 1.1.5, but quick check suggests that relevant source code part is the same in SVN trunk.

As I see, check in isInValidScope() is incorrect for cases when targetScope is null or 'none'.  In this case it should always return true regardless of valueScope.
",MYFACES-2001
The accept content type of text/* is not in the list of supported types.,MYFACES-2000
"The problem with the current org.apache.myfaces.el.unified.resolver.GuiceResolver is that it doesn't take into account the managed-bean-scope from the ManagedBean configuration. Typically you end up with multiple instances of the managed bean (a new one every time the resolver is called) -- ie, same as a managed-bean-scope of ""none"".

Note, there is some code in the resolver like this:
    if (ectx == null || 
            ectx.getRequestMap().containsKey(property) || 
            ectx.getSessionMap().containsKey(property) ||
            ectx.getApplicationMap().containsKey(property) ) 
            return null;
This works if there is _already_ a request, session or application scope attribute with the given name, but if not, the managed bean is not added to the scope. You can see that the overriden ""getValue"" method from the ManagedBeanResolver was actually responsible for putting any new object into the scope via the ""putInScope"" method.

The simplest way to fix this in the code seems to be to make the ManagedBeanResolver.putInScope method ""protected"" (rather than private), and then call it from the GuiceResolver.getValue method whenever a new value is obtained from the injector.

Meanwhile, a work-around is to leverage the guice-servlet module and then to specify the scope in the guice module, something like this:
    bind(HelloWorldBacking.class).in(ServletScopes.REQUEST);
However, for that you have to list all your managed beans in two places (faces-config.xml as well as your guice module), and also have to add the com.google.inject.servlet.GuiceFilter filter class to your web app.



",MYFACES-1999
"In class: javax.faces.component.UIViewRoot
Implement: public List<PhaseListener> getPhaseListeners()",MYFACES-1998
"In class: javax.faces.context.FacesContext
Implement: public void setRenderPhaseClientIds(List<String> renderPhaseClientIds)",MYFACES-1997
"In class: javax.faces.context.FacesContext
Implement: public void setRenderAll(boolean renderAll)",MYFACES-1996
"In class: javax.faces.context.FacesContext
Implement: public boolean isRenderNone()",MYFACES-1995
"In class: javax.faces.context.FacesContext
Implement: public boolean isRenderAll()",MYFACES-1994
"In class: javax.faces.context.FacesContext
Implement: public boolean isExecuteNone()",MYFACES-1993
"In class: javax.faces.context.FacesContext
Implement: public boolean isAjaxRequest()",MYFACES-1992
"In class: javax.faces.context.FacesContext
Implement: public void setExecutePhaseClientIds(List<String> executePhaseClientIds)",MYFACES-1991
"In class: javax.faces.context.FacesContext
Implement: public List<String> getExecutePhaseClientIds()",MYFACES-1990
"In class: javax.faces.context.FacesContext
Implement: public void enableResponseWriting(boolean enable)",MYFACES-1989
"In class: javax.faces.component.UIComponent
Implement: public Map<String, String> getResourceBundleMap()",MYFACES-1988
"In class: javax.faces.component.UIComponent
Implement: public static UIComponent getCurrentCompositeComponent(FacesContext context)",MYFACES-1987
"In class: org.apache.myfaces.application.ApplicationImpl
Implement: public void setPageDeclarationLanguage(PageDeclarationLanguage pdl)",MYFACES-1986
"In class: org.apache.myfaces.application.ApplicationImpl
Implement: public void publishEvent(Class<? extends SystemEvent> systemEventClass, Class<?> sourceBaseType, Object source)",MYFACES-1985
"In class: org.apache.myfaces.application.ApplicationImpl
Implement: public PageDeclarationLanguage getPageDeclarationLanguage()",MYFACES-1984
"In class: org.apache.myfaces.application.ResourceHandlerImpl
Implement: public boolean libraryExists(String libraryName)",MYFACES-1983
"Due to the default value of the parameter CONFIG_REFRESH_PERIOD, each request causes to reload the web.xml and potential faces config files defined in the web.xml. These loaded files were not freed up and led to open file handles (which are limited to 1024 by default) on the system. After a while the open file handles prevents the system from creating new SocketConnections. ",MYFACES-1982
"onfocus and onblur are not rendered in outputLink.  Although, these attributes are declared in the tld for the outputLink tag.  Here's my jsf snippet:

<f:view>
  <h:outputLink value=""http://SomeURL"" onfocus=""myfunc();"" onblur=""myfunc();"" onmouseover=""myfunc();"" >
    <h:outputText value=""Click Me""/>
  </h:outputLink>    
</f:view>

And this is what gets rendered:
<a id=""_idJsp0"" name=""_idJsp0"" href=""http://SomeURL"" onmouseover=""myfunc();"">Click Me</a>",MYFACES-1981
"In class: javax.faces.webapp.pdl
Implement: public static void retargetAttachedObjects(FacesContext context, UIComponent topLevelComponent, List<AttachedObjectHandler> handlers)",MYFACES-1980
"Hi there,

Using tomcat 6.0.16 or 6.0.18 there seems to be a bug with myfaces (currently using 1.2.4, but had the bug with 1.2.2, too).

If I leave Input-Fields empty, the model is updatet with default-values (e.g. ""0"" for a Long-variable or a zero-length String for a String-variable) for the corresponding variables instead of <null>-Values. I think the bug is not located in converters.

Found some information here:

http://www.icefaces.org/JForum/posts/list/8024.page

It would be good to use tomcat 6.0.18 because in older versions there is a security issue. With tomcat 6.0.14 everythiing is allright ..

Thanks,
Martin

",MYFACES-1979
"This api inside myfaces-impl was replaced by portlet bridge project and does not work anymore on 1.2,  so it should be removed since this version has not been released yet",MYFACES-1978
This is the starting point to implement ResourceHandlerImpl related code,MYFACES-1977
"It could be good use maven profiles to unpack shared sources and add to myfaces core impl jar only when a release occur, and on snapshot version use a dependency to shared jar instead.
",MYFACES-1976
"HtmlResponseStateManager.getSavedState() does not seem to handle the request attribute ""javax.faces.ViewState"" being an empty string.  That is to say, when the request attribute does not exist, a new state is created, but otherwise an attempt is made to reconstruct the view state.  In the case that the attribute is an empty string, you'll get an exception similar to the following:

javax.faces.FacesException: java.io.EOFException
	at org.apache.myfaces.shared_impl.util.StateUtils.getAsObject(StateUtils.java:350)
	at org.apache.myfaces.shared_impl.util.StateUtils.reconstruct(StateUtils.java:246)
	at org.apache.myfaces.renderkit.html.HtmlResponseStateManager.getSavedState(HtmlResponseStateManager.java:188)
	at org.apache.myfaces.renderkit.html.HtmlResponseStateManager.getTreeStructureToRestore(HtmlResponseStateManager.java:149)

This does not occur on the Sun RI implementation (i.e., it returns a new state in this case), and I think due to this being an issue that should be handled (and a trivial change to boot) that it should be fixed.",MYFACES-1975
Warning count should be reduced by supporting generic in most classes. This issue might requires multiple patches.,MYFACES-1974
"In class: org.apache.myfaces.application.ResourceHandlerImpl
Implement: public boolean isResourceRequest(FacesContext context)",MYFACES-1973
"In class: org.apache.myfaces.application.ResourceHandlerImpl
Implement: public void handleResourceRequest(FacesContext context)",MYFACES-1972
"In class: org.apache.myfaces.application.ResourceHandlerImpl
Implement: public String getRendererTypeForResourceName(String resourceName)",MYFACES-1971
"In class: org.apache.myfaces.application.ResourceHandlerImpl
Implement: public Resource createResource(String resourceName, String libraryName, String contentType)",MYFACES-1970
"In class: org.apache.myfaces.application.ResourceHandlerImpl
Implement: public Resource createResource(String resourceName, String libraryName)",MYFACES-1969
"In class: org.apache.myfaces.application.ResourceHandlerImpl
Implement: public Resource createResource(String resourceName)",MYFACES-1968
"In JspStateManagerImpl.checkForDuplicateIds:

        String id = component.getId();
        if (id != null && !ids.add(id)) {
            throw new IllegalStateException(""Client-id : "" + id +
                "" is duplicated in the faces tree. Component : "" + component.getClientId(context) + "", path: "" +
                getPathToComponent(component));
        }


The checked id is the server Id instead of clientId.

I've repeated ids in distinct naming containers and this checking is forcing me to use distinct id for each JSF component in component tree.

I don't know the purpose of this checking, but if it's to ensure distinct server ids, it will be nice if I could disable it.

If the purpose is to ensure distinct client Ids, the line

String id = component.getId();

must be 

String id = component.getClientId(context);




",MYFACES-1967
"The following jsf code snippet works in MyFaces 1.2.5-SNAPSHOT:

<%@ taglib uri=""http://java.sun.com/jsf/core"" prefix=""f"" %>
<%@ taglib uri=""http://java.sun.com/jsf/html"" prefix=""h"" %>

<html>
<body>

<f:view>
  <h:form>
    <h:panelGrid columns=""2"" rules=""groups"" title=""Facet Tag Demo"">
      <f:facet name=""header"">
        <h:outputText value=""asdf""/>
      </f:facet>
      <h:outputText value=""asdf""/>
    </h:panelGrid>

    <h:panelGrid columns=""2"" rules=""groups"" title=""Facet Tag Demo"">
      <h:facet name=""header"">
        <h:outputText value=""asdf""/>
      </h:facet>
      <h:outputText value=""asdf""/>
    </h:panelGrid>
  </h:form>
</f:view>

</body>
</html>

If you run this in MyFaces 1.2.4, you will get:
JasperException thrown.  No tag ""facet"" defined in tag library imported with prefix ""h""

The facet tag seems to have been added in myfaces_html.tld in MyFaces 1.2.5.  I think this tag should only be declared in myfaces_core.tld.",MYFACES-1966
"This bug is similar to MYFACES-1964 but happens to valueChangeListener tag.  I have this in my jsf page:

      <h:selectOneMenu value=""#{coreTc12Bean.text1}"" onchange=""submit()"">
        <f:valueChangeListener binding=""#{coreTc12Bean.valueChangeListener}""/>
        <f:selectItem itemLabel=""item1"" itemValue=""item1""/>
        <f:selectItem itemLabel=""item2"" itemValue=""item2""/>
        <f:selectItem itemLabel=""item3"" itemValue=""item3""/> 
      </h:selectOneMenu>

It will throw a javax.servlet.jsp.JspException - type attribute not set. This also happens in MyFaces 1.2.4. I've attached the test case above.

Similar to MYFACES-1964, this problem does not happen in JSF 1.2. RI.",MYFACES-1965
"In MyFaces 1.2.5-SNAPSHOT, the type attribute of actionListener has been set to a non-required attribute.  But if you have something like this in your page:

    <h:commandButton value=""This button with binding attribute"">
        <f:actionListener binding=""#{coreTc1Bean.actionListener}""/>
    </h:commandButton>

It will throw a javax.servlet.jsp.JspException - type attribute not set.  This also happens in MyFaces 1.2.4.  I've attached the test case above.

This problem does not exist in JSF RI 1.2 though.",MYFACES-1964
"When inserting a javascript source file, extra comments are added. For instance :

<script type=""text/javascript"" src=""test.js""><!-- --> </script>

A way to remove these comments would be to generate comments inside write and writeText methods in org.apache.myfaces.shared.renderkit.html.HtmlResponseWriterImpl, and not in writeElement method. In this case, if no write or writeElement is issued, the unnecessary comments are not written to the output.",MYFACES-1963
"In our current implementation of component renderers, javascript code is generated using ResponseWriter methods inside the renderer.  Although, when the embedded javascript code gets too lengthy, the renderer code can become hard to read and debug.

The proposition is to provide developers with a tool that separates javascript code from the renderer code and move it into template files.  This solution is similar to how TemplateRenderer handles HTML content.",MYFACES-1962
"When inserting a javascript code inside a page, the HtmlResponseWriter outputs :

 <script type=""text/javascript""><![CDATA[  
//javascript stuff
                //]]></script>

The correct syntax would be with a double slash in front of <![CDATA[

 <script type=""text/javascript"">//<![CDATA[  
//javascript stuff
                //]]></script>",MYFACES-1961
"
Actually the class org.apache.myfaces.application.jsp.JspStateManagerImpl.SerializedViewCollection store the old views using:

        protected Map getOldSerializedViewsMap() {
            if (_oldSerializedViews == null) {
                _oldSerializedViews = new ReferenceMap(AbstractReferenceMap.WEAK, AbstractReferenceMap.WEAK, true);
            }
            return _oldSerializedViews;
        }

Right now, this part is used when server side saving is enabled, as a second level cache. If the view is not available on _serializedViews (the map that holds the views in first place) , it tries to get it from _oldSerializedViews. If it is found use it but if not just return null.

The default should be that this behaviour is off (contrary to the current case).

It is more, there should be the possibility to use soft references instead weak references, so the user can tune this by its own needs.

The idea for solve this is create a param called org.apache.myfaces.CACHE_OLD_VIEWS_IN_SESSION_MODE with the possible values:

soft: use an ReferenceMap(AbstractReferenceMap.SOFT, AbstractReferenceMap.SOFT, true)
weak: use an ReferenceMap(AbstractReferenceMap.WEAK, AbstractReferenceMap.WEAK, true)
off, no: default, no cache is used

The changes should be applied on 1.1 and 1.2.

",MYFACES-1960
,MYFACES-1959
,MYFACES-1958
"Hello,

When a backing bean throws an Exception (HibernateException in our case), instead of being redirected to the error page declared in web.xml, we end up with the default Tomcat 500 error page.

This is due to a a ViewExpiredException that is triggered while the system attempts to perform the Restore View JSF phase for the page with view id ""/500.xhtml"".

Here is the stack trace from the Tomcat log:

at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:286)
at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:844)
at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:583)
at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:447)
at java.lang.Thread.run(Thread.java:613)
Sep 5, 2008 4:58:00 PM org.apache.catalina.core.ApplicationDispatcher invoke
SEVERE: Servlet.service() for servlet HWFacesServlet threw exception
javax.faces.application.ViewExpiredException: /500.xhtmlThe expected view was not returned for the view identifier: /500.xhtml
at org.apache.myfaces.lifecycle.RestoreViewExecutor.execute(RestoreViewExecutor.java:88)
at org.apache.myfaces.lifecycle.LifecycleImpl.executePhase(LifecycleImpl.java:103)
at org.apache.myfaces.lifecycle.LifecycleImpl.execute(LifecycleImpl.java:76)
at javax.faces.webapp.FacesServlet.service(FacesServlet.java:148)
at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:630)
at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:438)
at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:374)
at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:302)
at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:424)
at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:343)
at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:287)
at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:142)
at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:286)
at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:844)
at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:583)
at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:447)
at java.lang.Thread.run(Thread.java:613)
Sep 5, 2008 4:58:00 PM org.apache.catalina.core.StandardHostValve custom
SEVERE: Exception Processing ErrorPage[errorCode=500, location=/faces/500.xhtml]
javax.servlet.ServletException: /500.xhtmlThe expected view was not returned for the view identifier: /500.xhtml
at javax.faces.webapp._ErrorPageWriter.throwException(_ErrorPageWriter.java:401)
at javax.faces.webapp.FacesServlet.handleLifecycleException(FacesServlet.java:221)
at javax.faces.webapp.FacesServlet.service(FacesServlet.java:156)
at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:630)
at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:438)
at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:374)
at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:302)
at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:424)
at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:343)
at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:287)
at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:142)
at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:286)
at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:844)
at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:583)
at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:447)
at java.lang.Thread.run(Thread.java:613)
Caused by: javax.faces.application.ViewExpiredException: /500.xhtmlThe expected view was not returned for the view identifier: /500.xhtml
at org.apache.myfaces.lifecycle.RestoreViewExecutor.execute(RestoreViewExecutor.java:88)
at org.apache.myfaces.lifecycle.LifecycleImpl.executePhase(LifecycleImpl.java:103)
at org.apache.myfaces.lifecycle.LifecycleImpl.execute(LifecycleImpl.java:76)
at javax.faces.webapp.FacesServlet.service(FacesServlet.java:148)
... 17 more

Our web.xml is as follows:

<?xml version=""1.0"" encoding=""ISO-8859-1""?>
<web-app
    xmlns=""http://java.sun.com/xml/ns/j2ee""
    xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
    xsi:schemaLocation=""http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd""
    version=""2.4"">

  <display-name>App</display-name>

  <context-param>
    <param-name>facelets.VIEW_MAPPINGS</param-name>
    <param-value>*.xhtml</param-value>
  </context-param>

  <context-param>
    <param-name>facelets.LIBRARIES</param-name>
    <param-value>/WEB-INF/tags/kpu/kpu.taglib.xml</param-value>
  </context-param>

  <context-param>
    <param-name>facelets.DEVELOPMENT</param-name>
    <param-value>false</param-value>
  </context-param>

  <context-param>
    <param-name>facelets.REFRESH_PERIOD</param-name>
    <param-value>-1</param-value>
  </context-param>

  <context-param>
    <param-name>facelets.SKIP_COMMENTS</param-name>
    <param-value>false</param-value>
  </context-param>

  <context-param>
    <description>http://wiki.apache.org/myfaces/RedirectTracker&lt;/description>
    <param-name>org.apache.myfaces.redirectTracker.POLICY</param-name>
    <param-value>org.apache.myfaces.custom.redirectTracker.policy.FullRedirectTrackPolicy</param-value>
  </context-param>
  <context-param>
    <param-name>org.apache.myfaces.RENDER_VIEWSTATE_ID</param-name>
    <param-value>false</param-value>
  </context-param>
  <context-param>
    <param-name>org.apache.myfaces.ERROR_HANDLING</param-name>
    <param-value>false</param-value>
  </context-param>


  <listener>
    <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
  </listener>
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>

  <listener>
    <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
  </listener>


  <filter>
    <description>This filter is the Ajax4JSF</description>
    <display-name>Ajax4jsf Filter</display-name>
    <filter-name>ajax4jsf</filter-name>
    <filter-class>org.ajax4jsf.Filter</filter-class>
  </filter>


  <filter>
    <description>This is the MyFaces extension</description>
    <filter-name>extensionsFilter</filter-name>
    <filter-class>org.apache.myfaces.webapp.filter.ExtensionsFilter</filter-class>
    <init-param>
      <param-name>uploadMaxFileSize</param-name>
      <param-value>500k</param-value>
    </init-param>
    <init-param>
      <param-name>uploadThresholdSize</param-name>
      <param-value>1k</param-value>
    </init-param>
  </filter>


  <filter-mapping>
    <filter-name>extensionsFilter</filter-name>
    <url-pattern>/faces/*</url-pattern>
  </filter-mapping>

  <filter-mapping>
    <filter-name>extensionsFilter</filter-name>
    <servlet-name>HWFacesServlet</servlet-name>
  </filter-mapping>


  <filter-mapping>
    <filter-name>ajax4jsf</filter-name>
    <servlet-name>HWFacesServlet</servlet-name>
    <dispatcher>REQUEST</dispatcher>
    <dispatcher>FORWARD</dispatcher>
    <dispatcher>INCLUDE</dispatcher>
  </filter-mapping>


  <servlet>
    <servlet-name>HWFacesServlet</servlet-name>
    <servlet-class>javax.faces.webapp.FacesServlet</servlet-class>
    <load-on-startup>2</load-on-startup>
  </servlet>

  <servlet-mapping>
    <servlet-name>HWFacesServlet</servlet-name>
    <url-pattern>/faces/*</url-pattern>
  </servlet-mapping>


  <!-- Error page handling -->
  <error-page>
    <error-code>500</error-code>
    <location>/faces/500.xhtml</location>
  </error-page>

</web-app>


Here is what we found from our investigation.

When submitting a login form from page ""/login.xhtml"", our code triggers a HibernateException. This generates a 500 error.

Then, in org.apache.myfaces.lifecycle.RestoreViewExecutor#execute, when reaching the Restore View JSF phase for view id ""/500.xhtml"", restoreViewSupport.isPostback(facesContext) is true, and thus, thinking this is a postback situation (which is weird as we are moving to a different page, the error one), the system attempts to restore a viewroot using the current view state.

The problem is, there is no existing view state in the session for view id ""/500.xhtml"" -- there is only state for the page we are coming from and which triggered the HibernateException, ""/login.xhtml"" (the view state is searched / computed in org.ajax4jsf.application.AjaxStateManager#restoreView). So the viewRoot returned by viewHandler.restoreView(facesContext, viewId) is null, and a ViewExpiredException is thrown. The default Tomcat error page is then shown.

// Determine if this request is a postback or initial request
if (restoreViewSupport.isPostback(facesContext))
{
    if (log.isTraceEnabled())
        log.trace(""Request is a postback"");

    viewRoot = viewHandler.restoreView(facesContext, viewId);
    if (viewRoot == null)
    {
        throw new ViewExpiredException(""The expected view was not returned "" + ""for the view identifier: ""
                + viewId, viewId);
    }
    restoreViewSupport.processComponentBinding(facesContext, viewRoot);
}
else
{
  ...
} 

The problem may be caused by the fact that the system thinks, while moving to the error page, that a postback is underway. This does not seem correct. I would imagine the error page management would rather forward the flow to the error page. That would be an initial view, not a postback.
In any case, many thanks to anyone that can help us on this so we can get our error page to display correctly.

",MYFACES-1957
"Fixed most of the findbugs errors in the performance category and apply many pmd optimization rules
Made many of the classes final.
A method argument that is never assigned can be declared final. 
A local variable assigned only once can be declared final ",MYFACES-1956
"I am trying to run a very simple JSF application using myFaces 1.2.4 and WebLogic 10.3. The application has the following content:
web.xml:
<?xml version=""1.0"" encoding=""ISO-8859-1""?>
<web-app xmlns=""http://java.sun.com/xml/ns/javaee""
        xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
        xsi:schemaLocation=""http://java.sun.com/xml/ns/javaee
    http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd""
        version=""2.5"">
   <servlet>
      <servlet-name>Faces Servlet</servlet-name>
      <servlet-class>javax.faces.webapp.FacesServlet</servlet-class>
      <load-on-startup>1</load-on-startup>
   </servlet>  
   <servlet-mapping>
      <servlet-name>Faces Servlet</servlet-name>
      <url-pattern>*.faces</url-pattern>
   </servlet-mapping>  
   <welcome-file-list>
      <welcome-file>index.html</welcome-file>
   </welcome-file-list>
</web-app>

faces-config.xml:
<?xml version=""1.0""?>
<faces-config xmlns=""http://java.sun.com/xml/ns/javaee""
        xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
        xsi:schemaLocation=""http://java.sun.com/xml/ns/javaee 
        http://java.sun.com/xml/ns/javaee/web-facesconfig_1_2.xsd""
        version=""1.2"">
   <navigation-rule>
      <from-view-id>/index.jsp</from-view-id>
      <navigation-case>
         <from-outcome>login</from-outcome>
         <to-view-id>/welcome.jsp</to-view-id>
      </navigation-case>
   </navigation-rule>
   <managed-bean>
      <managed-bean-name>user</managed-bean-name>
      <managed-bean-class>pt.pm.richfaces.UserBean</managed-bean-class>
      <managed-bean-scope>session</managed-bean-scope>
   </managed-bean>
</faces-config>

index.html:
<html>
   <head>
      <meta http-equiv=""Refresh"" content= ""0; URL=index.faces""/>
      <title>Start Web Application</title>
   </head>
   <body>
      <p>Please wait for the web application to start...</p>
   </body>
</html>

index.jsp:
<html>
<%@ taglib uri=""http://java.sun.com/jsf/core"" prefix=""f""%>
<%@ taglib uri=""http://java.sun.com/jsf/html"" prefix=""h""%>
<f:view>
        <head>
        <title>A Simple JavaServer Faces Application</title>
        </head>
        <body>
        <h:form>
                <h3>Please enter your name and password.</h3>
                <table>
                        <tr>
                                <td>Name:</td>
                                <td><h:inputText value=""#{user.name}"" /></td>
                        </tr>
                        <tr>
                                <td>Password:</td>
                                <td><h:inputSecret value=""#{user.password}"" /></td>
                        </tr>
                </table>
                <p><h:commandButton value=""Login"" action=""login"" /></p>
        </h:form>
        </body>
</f:view>
</html>

My WEB_INF/lib contains the following jars: commons-beanutils-1.7.0, commons-codec-1.3, commons-collections-3.2, commons-digester-1.8, commons-discovery-0.4, commons-logging-1.1.1, glassfish.el_2.1.0, glassfish.jstl_1.2.0.1, myfaces-api-1.2.4, myfaces-impl-1.2.4.

Whenever I try to run my application I get the following exception:

java.lang.IllegalStateException: strict servlet API: cannot call getWriter() aft
er getOutputStream()
        at weblogic.servlet.internal.ServletResponseImpl.getWriter(ServletRespon
seImpl.java:308)
        at org.apache.myfaces.application.jsp.JspViewHandlerImpl.renderView(JspV
iewHandlerImpl.java:362)
        at org.apache.myfaces.lifecycle.RenderResponseExecutor.execute(RenderRes
ponseExecutor.java:41)
        at org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:
140)
        at javax.faces.webapp.FacesServlet.service(FacesServlet.java:155)

If instead of using myFaces I use the Sun Reference implementation everything goes well. If I deploy the application (using myFaces) in JBoss 5 it works well. So the problem seems to be related with the use of WLS 10.3 and myFaces 1.2.4.

I tried with 1.2.3 and 1.2.2 and got the issue with both. I tried with 1.2.0 and got another error:

javax.faces.FacesException: weblogic.servlet.jsp.CompilationException: Failed to compile JSP /index.jsp
index.jsp:14:22: Static attribute must be a String literal, its illegal to specify an expression.
                                <td><h:inputText value=""#{user.name}"" /></td>
",MYFACES-1955
"Message from Karel Zacek

I had problem to render <h:messages> after upgrading from myfaces-1.2.3 to myfaces-1.2.4.
After little searching i stated that default values for showDetail and showSummary attributes of <h:messages> were changed.

1.2.3 - showSummary=true showDetail=false
1.2.4 - showSummary=false showDetail=true

Strangely, UIMessage and UIMessages has different default values for both properties.",MYFACES-1954
It should be possible to use the <mcc:convertEnum>  tag in a jsf page without specifing th targetClass attribute.,MYFACES-1953
"After the release of MyFaces Core 1.2.4, we should update the archetypes to use this version instead of MyFaces Core 1.2.2.",MYFACES-1952
"The algorithm for UIInput.validate() was changed, due to this spec issue:
https://javaserverfaces-spec-public.dev.java.net/issues/show_bug.cgi?id=323

See JavaDoc on validate() for details on the change:
https://javaserverfaces-spec-public.dev.java.net/nonav/issues/showattachment.cgi/133/UIInput.html",MYFACES-1951
"ExternalContext is missing some methods

""getContextName()""

servletCtx => getServletContextName()
portletCtx => getPortletContextName()

""getContentLength()""
servletCtx => ((ServletRequest)request).getContentLength()
portletCtx = ((ActionRequest) request).getContentLength()


See also https://javaserverfaces-spec-public.dev.java.net/issues/show_bug.cgi?id=438",MYFACES-1950
"Actually, myfaces-builder-plugin is used on myfaces core 1.2 just to create component classes, but the remaining stuff is generated by myfaces-faces-plugin.

It was suggested to do this before in order to avoid introduce bugs in this process, but tomahawk core 1.2 has tested the pending tasks (tag class generation, faces-config.xml and tld generation for 1.2)

But after the creation of jsf 2.0 branch it could be good to enhance this now. The only thing that must be into account is take care of the generation of HtmlColumnTag (needs some custom code on the template used).

My plan is do this after myfaces core 1.2.4 and apply on both branches (1.2.x and 2.0.x)",MYFACES-1949
"In class: javax.faces.context.ExternalContext
Implement: public String getRequestServerName()",MYFACES-1948
"In class: javax.faces.component.UIComponent
Implement: public void subscribeToEvent(Class<? extends SystemEvent> eventClass, ComponentSystemEventListener componentListener)",MYFACES-1947
"In class: javax.faces.context.ExternalContext
Implement: public void setResponseContentType(String contentType)",MYFACES-1946
"In class: javax.faces.component.UIComponent
Implement: protected void pushComponentToEL(FacesContext context)",MYFACES-1945
"In class: javax.faces.component.UIComponent
Implement: protected void popComponentFromEL(FacesContext context)",MYFACES-1944
"In class: javax.faces.component.UIComponent
Implement: public List<SystemEventListener> getListenersForEventClass(Class<? extends SystemEvent> eventClass)",MYFACES-1943
"In class: javax.faces.context.FacesContext
Implement: public Map<Object,Object> getAttributes()",MYFACES-1942
"In class: javax.faces.context.ExternalContext
Implement: public void invalidateSession()",MYFACES-1941
"In class: javax.faces.context.ExternalContext
Implement: public OutputStream getResponseOutputStream()",MYFACES-1940
"In class: javax.faces.context.FacesContext
Implement: public PhaseId getCurrentPhaseId()",MYFACES-1939
"In class: javax.faces.context.ExternalContext
Implement: public int getRequestServerPort()",MYFACES-1938
"In class: javax.faces.context.ExternalContext
Implement: public String getRequestServerName()",MYFACES-1937
"In class: javax.faces.context.ExternalContext
Implement: public String getRequestScheme()",MYFACES-1936
"In class: javax.faces.context.FacesContext
Implement: public boolean isPostback()",MYFACES-1935
"In class: javax.faces.context.ExternalContext
Implement: public String getRealPath(String path)",MYFACES-1934
"In class: javax.faces.context.ExternalContext
Implement: public String getMimeType(String file)",MYFACES-1933
"In class: javax.faces.context.ExternalContext
Implement: public void addResponseCookie(String name, String value, Map<String,Object> properties)",MYFACES-1932
"In class: javax.faces.context.FacesContext
Implement: public void setCurrentPhaseId(PhaseId currentPhaseId)",MYFACES-1931
"In class: javax.faces.component.UIViewRoot
Implement: public void removeComponentResource(FacesContext context, UIComponent componentResource)",MYFACES-1930
"In class: javax.faces.component.UIViewRoot
Implement: public void removeComponentResource(FacesContext context, UIComponent componentResource, String target)",MYFACES-1929
"In class: javax.faces.component.UIViewRoot
Implement: public void processEvent(ComponentSystemEvent event)",MYFACES-1928
"In class: javax.faces.component.UIViewRoot
Implement: public Map<String,Object> getViewMap(boolean create)",MYFACES-1927
"In class: javax.faces.component.UIViewRoot
Implement: public Map<String,Object> getViewMap()",MYFACES-1926
"In class: javax.faces.component.UIViewRoot
Implement: public List<UIComponent> getComponentResources(FacesContext context, String target)",MYFACES-1925
"In class: javax.faces.component.UIViewRoot
Implement: public void addComponentResource(FacesContext context, UIComponent componentResource, String target)",MYFACES-1924
"In class: javax.faces.component.UIComponent
Implement: public static UIComponent getCurrentComponent()",MYFACES-1923
"In class: javax.faces.component.UIViewRoot
Implement: public void addComponentResource(FacesContext context, UIComponent componentResource)",MYFACES-1922
"In class: javax.faces.component.UIComponent
Implement: public void unsubscribeToEvent(Class<? extends SystemEvent> eventClass, ComponentSystemEventListener componentListener)",MYFACES-1921
"In class: javax.faces.application.Application
Implement: public void unsubscribeFromEvent(Class<? extends SystemEvent> systemEventClass, SystemEventListener listener)",MYFACES-1920
"In class: javax.faces.application.Application
Implement: public void unsubscribeFromEvent(Class<? extends SystemEvent> systemEventClass, Class sourceClass, SystemEventListener listener)",MYFACES-1919
"In class: javax.faces.application.Application
Implement: public void subscribeToEvent(Class<? extends SystemEvent> systemEventClass, SystemEventListener listener)",MYFACES-1918
"In class: javax.faces.application.Application
Implement: public void subscribeToEvent(Class<? extends SystemEvent> systemEventClass, Class sourceClass, SystemEventListener listener)",MYFACES-1917
"In class: javax.faces.application.Application
Implement: public void setResourceHandler(ResourceHandler resourceHandler)",MYFACES-1916
"In class: javax.faces.application.Application
Implement: public void publishEvent(Class<? extends SystemEvent> systemEventClass, SystemEventListenerHolder source)",MYFACES-1915
"In class: javax.faces.application.Application
Implement: public ProjectStage getProjectStage()",MYFACES-1914
"In class: javax.faces.application.Application
Implement: public ResourceHandler getResourceHandler()",MYFACES-1913
"In class: javax.faces.application.Application
Implement: public UIComponent createComponent(ValueExpression componentExpression, FacesContext context, String componentType, String rendererType)",MYFACES-1912
"In class: javax.faces.application.Application
Implement: public UIComponent createComponent(FacesContext context, String componentType, String rendererType)",MYFACES-1911
"In JSF 2.0, they finally improve the EditableValueHolder interface:
https://javaserverfaces-spec-public.dev.java.net/issues/show_bug.cgi?id=438

fix is pretty simple. UIInput already provides the implementation. 
Just add the method to the interface",MYFACES-1910
"Hi guys,

We met an issue in clustering our myfaces application. The stack trace is as below:

Manager [/app]: Unable to receive message through TCP channel

java.lang.ClassNotFoundException: com.convenos.cws.web.bean.workspace.TabmenuBean$$EnhancerByCGLIB$$d85c9e91

        at java.net.URLClassLoader$1.run(URLClassLoader.java:200)

        at java.security.AccessController.doPrivileged(Native Method)

        at java.net.URLClassLoader.findClass(URLClassLoader.java:188)

        at java.lang.ClassLoader.loadClass(ClassLoader.java:306)

        at java.lang.ClassLoader.loadClass(ClassLoader.java:251)

        at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:319)

        at java.lang.Class.forName0(Native Method)

        at java.lang.Class.forName(Class.java:242)

        at java.io.ObjectInputStream.resolveClass(ObjectInputStream.java:585)

        at org.apache.catalina.cluster.session.ReplicationStream.resolveClass(ReplicationStream.java:85)

        at java.io.ObjectInputStream.readNonProxyDesc(ObjectInputStream.java:1544)

        at java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1466)

        at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1699)

        at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1305)

        at java.io.ObjectInputStream.readObject(ObjectInputStream.java:348)

        at org.apache.catalina.cluster.session.DeltaRequest$AttributeInfo.readExternal(DeltaRequest.java:340)

        at org.apache.catalina.cluster.session.DeltaRequest.readExternal(DeltaRequest.java:248)

        at org.apache.catalina.cluster.session.DeltaManager.loadDeltaRequest(DeltaManager.java:726)

        at org.apache.catalina.cluster.session.DeltaManager.handleSESSION_DELTA(DeltaManager.java:1600)

        at org.apache.catalina.cluster.session.DeltaManager.messageReceived(DeltaManager.java:1550)

        at org.apache.catalina.cluster.session.DeltaManager.messageDataReceived(DeltaManager.java:1294)

        at org.apache.catalina.cluster.session.ClusterSessionListener.messageReceived(ClusterSessionListener.java:86)

        at org.apache.catalina.cluster.tcp.SimpleTcpCluster.receive(SimpleTcpCluster.java:1175)

        at org.apache.catalina.cluster.tcp.ClusterReceiverBase.messageDataReceived(ClusterReceiverBase.java:598)

        at org.apache.catalina.cluster.io.ObjectReader.execute(ObjectReader.java:108)

        at org.apache.catalina.cluster.tcp.TcpReplicationThread.drainChannel(TcpReplicationThread.java:139)

        at org.apache.catalina.cluster.tcp.TcpReplicationThread.run(TcpReplicationThread.java:70)

Is there any help on this?

Thanks in advance
Jacky
",MYFACES-1908
myfaces-archetype-jsfcomponents needs to be updated to use myfaces-builder-plugin in component authoring instead of the manual process.,MYFACES-1907
"Hi,
Latest MyFaces 1.1.6 release note doesn't contain all fixed issues. 
https://issues.apache.org/jira/secure/ReleaseNote.jspa?projectId=10600&styleName=Html&version=12312312
The issue MYFACES-1700 is missing.
https://issues.apache.org/jira/browse/MYFACES-1700?page=com.atlassian.jira.plugin.system.issuetabpanels:changehistory-tabpanel

I see in History Changes, that first of all it was fixed in 1.1.6, later on for version 1.2.1 (two live branches). Probably it is limitiation of Jira, that Fix Version is simple field (not the list), so the fix for 1.1.6 was overriden in Jira, and Release Note creator didn't find it.

",MYFACES-1906
"My test page:
<h:form enctype=""multipart/form-data"" id=""_form"">
		<jsp:include page=""menu.jsp"" />
		<t:inputFileUpload ></t:inputFileUpload>
		<h:commandButton value=""Upload""></h:commandButton>
	</h:form>

menu.jsp :

<h:panelGrid columns=""1"" id=""grid"">
	<h:selectOneMenu value=""#{bean.select}"" id=""select"">
		<f:selectItem itemValue=""none"" itemLabel=""none""/>
		<f:selectItem itemValue=""www"" itemLabel=""www""/>
	</h:selectOneMenu>
</h:panelGrid>


Firstly SelectOneMenu has '_form:select' id. After upload and page refreshed ID changed to '_form:selectj_id_1'.


",MYFACES-1905
"I have a managed bean called ""treeManager"", with a ""selectedNode"" property that is null the first time.
I have three input components: 2 inputText, and a selectOneMenu, the JSP code is this:

...
<h:outputLabel for=""nodeName"" value=""Nom""/>
<h:inputText id=""nodeName"" value=""#{treeManager.selectedNode.name}"" />

<h:outputLabel for=""nodeDescription"" value=""Descripció""/>
<h:inputText id=""nodeDescription"" value=""#{treeManager.selectedNode.description}""  />

<h:outputLabel for=""ambitType"" value=""Àmbit""/>
<h:selectOneMenu id=""ambitType"" value=""#{treeManager.selectedNode.ambit}"">
  <f:selectItem itemLabel=""Global"" itemValue=""global""/>
  <f:selectItem itemLabel=""Organisme"" itemValue=""organisme""/>
  <f:selectItem itemLabel=""Procediment"" itemValue=""procediment""/>
</h:selectOneMenu>
.... 


When I try the JSF I get this error.

|javax.faces.FacesException: Exception while calling encodeEnd on component : {Component-Path : [Class: org.ajax4jsf.component.AjaxViewRoot,ViewId: /dissenyador/estructures.jsp][Class: javax.faces.component.html.HtmlPanelGrid,Id: j_id_jsp_305935947_1]}|
| at javax.faces.component.UIComponentBase.encodeEnd(UIComponentBase.java:610)|

Caused by: ...

|Caused by: org.apache.jasper.el.JspPropertyNotFoundException: /dissenyador/estructures.jsp(60,8) '#{treeManager.selectedNode.ambit}' Target Unreachable, 'selectedNode' returned null|
| at org.apache.jasper.el.JspValueExpression.getType(JspValueExpression.java:61)|
| at org.apache.myfaces.shared_impl.renderkit._SharedRendererUtils.findUIOutputConverter(_SharedRendererUtils.java:58)|
| at org.apache.myfaces.shared_impl.renderkit.RendererUtils.findUIOutputConverter(RendererUtils.java:391)|
| at org.apache.myfaces.shared_impl.renderkit.html.HtmlRendererUtils.findUIOutputConverterFailSafe(HtmlRendererUtils.java:393)|
| at org.apache.myfaces.shared_impl.renderkit.html.HtmlRendererUtils.internalRenderSelect(HtmlRendererUtils.java:316)|
| at org.apache.myfaces.shared_impl.renderkit.html.HtmlRendererUtils.renderMenu(HtmlRendererUtils.java:288)|
| at org.apache.myfaces.shared_impl.renderkit.html.HtmlMenuRendererBase.encodeEnd(HtmlMenuRendererBase.java:57)|
| at javax.faces.component.UIComponentBase.encodeEnd(UIComponentBase.java:607)|



Comments from Simon Kitching on the mailing list:

Interesting. From the stacktrace it look like the problem is when trying 
to determine the *type* that this expression returns.

When actually asking for the value, null is simply returned if the 
intermediate object is not there.

But when asking what static type of object would be returned from the 
bound property, of course there is a real problem if the intermediate 
node is not there.

Here's the code from SharedRendererUtils.findUIOutputConverter; the 
getType call is the problem:
        Class valueType = vb.getType(facesContext);  // boom when an 
intermediate node in the EL is null
        if (valueType == null) return null;

        if (String.class.equals(valueType)) return null;    //No 
converter needed for String type
        if (Object.class.equals(valueType)) return null;    //There is 
no converter for Object class

The HtmlRendererUtils.internalRenderSelect uses
  converter = findUIOutputConverterFailSafe
 -- which obviously is not quite so ""fail safe"" :-)

I'm not quite sure what the converter is being used for during rendering 
of the select component, but I do know that the rules about converters 
and select-components are quite complex. The HTML select component must 
always render strings for its options, but JSF requires typed objects to 
be passed between the select *component* and the backing beans. So 
conversions are required to be invoked at various times.

I think a JIRA issues should definitely be filed for this. If a 
converter is optional here, then the code should catch this exception 
and not use a converter. Even if a converter is mandatory (ie an error 
should be reported if the value-type cannot be determined) then at least 
the error reporting needs to be improved. And it is definitely a myfaces 
issue, not a Geronimo one.

",MYFACES-1904
"The UIData component has a ""rows"" property of type int. When an EL expression is used, and the referenced user method returns int or Integer then all is ok.
When the user method returns long or Long, this still works with myfaces 1.1.x.
However with myfaces 1.2.x a ClassCastException occurs.

One example is the Tomahawk ""simple"" examples, where selecting the ""data scroller"" example causes an immediate exception.

The code in 1.1.x is:
        ValueBinding vb = getValueBinding(""rows"");
        Number v = vb != null ? (Number) vb.getValue(getFacesContext()) : null;
        return v != null ? v.intValue() : DEFAULT_ROWS;

The code in 1.2.x is:
    ValueExpression expression = getValueExpression(""rows"");
    if (expression != null)
    {
      return (Integer)expression.getValue(getFacesContext().getELContext());
    }
    return 0;

",MYFACES-1903
"It should be possible to use a different ExpressionFactory implementation. This feature is required
to use 3rd party EL implementations like JBoss EL. Mojarra already supports this with the
'com.sun.faces.expressionFactory' context parameter.

MyFaces Core 1.2.x already supports a context parameter 'org.apache.myfaces.EXPRESSION_FACTORY'
but it is only evaluated in a JSP 2.0 environment (see MYFACES-1693 for details).

It should be possible to use this parameter with JSP 2.1 as well. The corresponding code
should be refactored from Jsp20FacesInitializer to AbstractFacesInitializer to be usable in both
JSP 2.0 and 2.1.

Discussion on myfaces-users:

http://www.nabble.com/Replacing-expression-factory-td18867420.html
",MYFACES-1902
"The detail message of the NumberConverter provides a sample pattern which starts with a $ sign ($####,###).
The $ sign should be removed and the sample pattern message should be internationalized (load from resource bundle).",MYFACES-1901
"Since nothing seems to be happening with MYFACES-1723, I'm raising this major bug against the JSF 1.2 specification.

Summary: MyFaces 1.2.3 does not support <f:param name=""id"" /> under Microsoft Internet Explorer, which violates the JSF 1.2 specification;
cf. section 4.1.11 UIParameter and section 9.4.8 <f:param> the 'name' attribute of <f:param> is a String with no specific exceptions for a name of ""id"".

Some additional details: with myfaces-api-1.2.2.jar and myfaces-impl-1.2.2.jar, using <f:param name=""id"" /> works;
with myfaces-api-1.2.3.jar and myfaces-impl-1.2.3.jar using <f:param name=""id"" /> fails, e.g. an

  <h:commandLink actionListener=""#{myController.selectId}"">
    <f:param name=""id"" value=""123"" />
  </h:commandLink>

when submitted does not pass the param to selectId(), that is: the value in

  public void selectId(ActionEvent event)
  {
     final String value = FacesContext.getCurrentInstance().getExternalContext().getRequestParameterMap().get(""id"");
  }

remains null.",MYFACES-1900
"All the select many components doesn't support attribute ""requiredMessage"". Example SelectManyCheckbox.

<h:selectManyCheckbox value=""#{ElExpression}"" required=""true"" requiredMessage=""Value is required"">

For the above component it always shows the myfaces default error message. I had a look into UISelectMany.java seems requiredMessage is not been taken care.

Please fix the issue, if you have any specific reason for not supporting requiredMessage, do let me know.

Thanks,
Venkat",MYFACES-1899
"See the attached example.

I have an h:inputText, which is disabled depending on the value of the property fieldDisabled. This property is changed in a toggle-action method. The toggleDisableButton, which triggers this action has an immediate=true set. Therefore it is possible to disable the h:inputText, even if it is still invalid respectively has no value set.

The problem is that after clicking the toggleDisableButton the h:inputText is rendered disabled as intented. However if afterwards the form is submitted by the submit-button, then the validation and updateModel still runs for the h:inputText. Although it shouldn't for disabled components.

I am not quite sure, if this is a bug or consistent with the jsf-spec. However the same example works, if the h:inputText is dynamically rendered instead of disabled. And at least the behaviour should then be consistent, shouldn't it?
",MYFACES-1898
"The escape Attribute of a selectItem Component is not evaluated inside a selectOneRadio component.
The selectItem Component has a escape member, but the member is never used. 

To fix the problem i've done this:

HtmlRadioRendererBase.renderGroupOrItemRadio() Line ~199 :

// label element after the input
boolean componentDisabled = isDisabled(facesContext, selectOne);
boolean disabled = (componentDisabled || itemDisabled);
boolean escape = selectItem.isEscape();

HtmlRendererUtils.renderLabel(writer, selectOne, itemId,
                selectItem.getLabel(), disabled,escape);

HtmlRendererUtils.renderLabel() Line ~1352:

public static void renderLabel(ResponseWriter writer, UIComponent    
    component, String forClientId,String labelValue, boolean    
                disabled) throws IOException {
renderLabel(writer, component, forClientId, labelValue, disabled, true);
}


/**
 * Renders a label HTML element
 */
public static void renderLabel(ResponseWriter writer, UIComponent
            component, String forClientId,String labelValue,         boolean disabled, boolean escape) throws IOException {

...

if ((labelValue != null) && (labelValue.length() > 0)) {
    writer.write(HTML.NBSP_ENTITY);
    if (escape) {
        writer.writeText(labelValue, null);
    } else {
        writer.write(labelValue);
    }
}
... ",MYFACES-1897
"The FacesConfigurator does some checks on whether there are multiple versions of Tomahawk and MyFaces in the classpath. This check is incorrect, in the sense that it can, and will, log incorrect error messages.

This problem occurs when using the jar from the tomahawk-facelets project (http://code.google.com/p/tomahawk-facelets), of which I'm one of the maintainers. The current release is called tomahawk-facelets-1.1.6.2.jar, which gives the following error:

ERROR FacesConfigurator?:404 - You are using the MyFaces?-package : tomahawk in different versions; first (and probably used) version is : 1.1.6, currently encountered version is : facelets-taglib. This will cause undesired behaviour. Please clean out your class-path. The first encountered version is loaded from : file:/G:/Development/IdeaProjects/blokart/out/exploded/blokartWeb/WEB-INF/lib/tomahawk-1.1.6.jar. The currently encountered version is loaded from : jar:file:/G:/Development/IdeaProjects/blokart/out/exploded/blokartWeb/WEB-INF/lib/tomahawk-facelets-taglib.jar!/META-INF/MANIFEST.MF

However, this jar just contains taglibs and some supporting class files. So the error is logged without a valid reason.

I've looked at the code in the FacesConfigurator and have seen that the checks can be improved, e.g. using the following regular expression for getting the version number of Tomahawk: tomahawk-(\d\.\d\.\d)",MYFACES-1896
"events should be transient.
(there is no need to save events in the state)",MYFACES-1895
"see section 4.1.17.3
(it's correct in myfaces-core 1.1.x)",MYFACES-1894
"DateTimeConverter in getAsObject for
                		Object[] args = new Object[]{value,format.parse(new Date().toString()),_MessageUtils.getLabel(facesContext, uiComponent)};

throws ParseException Unparseable date: ""Thu Jul 10 11:05:21 CDT 2008"" 
The 

This is because format.parse(new Date().toString()) is an incorrect format for the DateFormat instance.  This is because there is no default SimpleDateFormat instance to format the pattern ""Thu Jul 10 11:05:21 CDT 2008""

This should be changed to use the format method for formatting Date objects as documented in both Date and DateFormat javadoc.

Please change to:

format.format(new Date())",MYFACES-1893
"As shown in this dtd:
  http://java.sun.com/dtd/web-facesconfig_1_1.dtd 

the validator element in a faces-config.xml file should support nested attribute and property elements:

<validator>
   <validator-id>xyValidtor</validator-name>
   <validator-class>com.xy.XyValidator</validator-class>
   <property>
      <property-name>length</property-name>
      <property-class>java.lang.Integer</property>
      <default-value>40</default-value>
   </property>
</validator> 

However this appears to never have been implemented in either 1.1.x or 1.2.x of core; only validator-id and validator-class are supported. Note that the equivalent feature exists for converters, and does appear to have been implemented.

See the digester rules registered in the constructor for class 
  org.apache.myfaces.config.impl.digester.DigesterFacesConfigUnmarshallerImpl

Reported by Joerg (superjoerch at gmx.de) on the myfaces user list, ",MYFACES-1892
"See the attached example.

When the block with the selectOneRadio ist shown, then hidden and then shown again a ClassCastException occurs in the Converter. The selectOneRadio has as submittedValue org.apache.myfaces.shared_impl.renderkit.RendererUtils$1, for which the conversion is done.

javax.faces.FacesException: Exception while calling encodeEnd on component : {Component-Path : [Class: org.ajax4jsf.component.AjaxViewRoot,ViewId: /WEB-INF/pages/schnellerfassung/dea/dea.xhtml][Class: javax.faces.component.html.HtmlForm,Id: form][Class: org.apache.myfaces.custom.div.Div,Id: hideableBlock][Class: javax.faces.component.html.HtmlSelectOneRadio,Id: selectOneRadio]}
	at javax.faces.component.UIComponentBase.encodeEnd(UIComponentBase.java:610)
	at org.ajax4jsf.renderkit.RendererBase.renderChild(RendererBase.java:286)
	at org.ajax4jsf.renderkit.RendererBase.renderChildren(RendererBase.java:262)
	at org.ajax4jsf.renderkit.RendererBase.renderChild(RendererBase.java:284)
	at org.ajax4jsf.renderkit.RendererBase.renderChildren(RendererBase.java:262)
	at org.ajax4jsf.renderkit.RendererBase.renderChild(RendererBase.java:284)
	at org.ajax4jsf.renderkit.AjaxChildrenRenderer.encodeAjaxComponent(AjaxChildrenRenderer.java:125)
	at org.ajax4jsf.renderkit.AjaxChildrenRenderer.encodeAjaxChildren(AjaxChildrenRenderer.java:68)
	at org.ajax4jsf.renderkit.AjaxChildrenRenderer.encodeAjaxComponent(AjaxChildrenRenderer.java:116)
	at org.ajax4jsf.renderkit.AjaxContainerRenderer.encodeAjax(AjaxContainerRenderer.java:123)
	at org.ajax4jsf.component.AjaxViewRoot.encodeAjax(AjaxViewRoot.java:673)
	at org.ajax4jsf.component.AjaxViewRoot.encodeChildren(AjaxViewRoot.java:544)
	at javax.faces.component.UIComponent.encodeAll(UIComponent.java:239)
	at com.sun.facelets.FaceletViewHandler.renderView(FaceletViewHandler.java:592)
	at org.ajax4jsf.application.ViewHandlerWrapper.renderView(ViewHandlerWrapper.java:108)
	at org.ajax4jsf.application.AjaxViewHandler.renderView(AjaxViewHandler.java:189)
	at org.springframework.faces.webflow.JsfView.render(JsfView.java:92)
	at org.springframework.webflow.engine.ViewState.render(ViewState.java:240)
	at org.springframework.webflow.engine.ViewState.resume(ViewState.java:199)
	at org.springframework.webflow.engine.Flow.resume(Flow.java:535)
	at org.springframework.webflow.engine.impl.FlowExecutionImpl.resume(FlowExecutionImpl.java:261)
	at org.springframework.webflow.executor.FlowExecutorImpl.resumeExecution(FlowExecutorImpl.java:153)
	at org.springframework.webflow.mvc.servlet.FlowHandlerAdapter.handle(FlowHandlerAdapter.java:173)
	at org.springframework.webflow.mvc.servlet.FlowController.handleRequest(FlowController.java:172)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:875)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:809)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:710)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:803)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at com.metzler.ec.web.filter.RendererFilter.doFilter(RendererFilter.java:183)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.ajax4jsf.webapp.BaseXMLFilter.doXmlFilter(BaseXMLFilter.java:154)
	at org.ajax4jsf.webapp.BaseFilter.handleRequest(BaseFilter.java:260)
	at org.ajax4jsf.webapp.BaseFilter.processUploadsAndHandleRequest(BaseFilter.java:366)
	at org.ajax4jsf.webapp.BaseFilter.doFilter(BaseFilter.java:493)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.security.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:359)
	at org.springframework.security.intercept.web.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:109)
	at org.springframework.security.intercept.web.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.springframework.security.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:371)
	at org.springframework.security.ui.ExceptionTranslationFilter.doFilterHttp(ExceptionTranslationFilter.java:101)
	at org.springframework.security.ui.SpringSecurityFilter.doFilter(SpringSecurityFilter.java:53)
	at org.springframework.security.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:371)
	at org.springframework.security.providers.anonymous.AnonymousProcessingFilter.doFilterHttp(AnonymousProcessingFilter.java:105)
	at org.springframework.security.ui.SpringSecurityFilter.doFilter(SpringSecurityFilter.java:53)
	at org.springframework.security.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:371)
	at org.springframework.security.ui.rememberme.RememberMeProcessingFilter.doFilterHttp(RememberMeProcessingFilter.java:116)
	at org.springframework.security.ui.SpringSecurityFilter.doFilter(SpringSecurityFilter.java:53)
	at org.springframework.security.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:371)
	at org.springframework.security.wrapper.SecurityContextHolderAwareRequestFilter.doFilterHttp(SecurityContextHolderAwareRequestFilter.java:91)
	at org.springframework.security.ui.SpringSecurityFilter.doFilter(SpringSecurityFilter.java:53)
	at org.springframework.security.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:371)
	at org.springframework.security.ui.AbstractProcessingFilter.doFilterHttp(AbstractProcessingFilter.java:268)
	at org.springframework.security.ui.SpringSecurityFilter.doFilter(SpringSecurityFilter.java:53)
	at org.springframework.security.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:371)
	at org.springframework.security.ui.AbstractProcessingFilter.doFilterHttp(AbstractProcessingFilter.java:268)
	at org.springframework.security.ui.SpringSecurityFilter.doFilter(SpringSecurityFilter.java:53)
	at org.springframework.security.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:371)
	at org.springframework.security.ui.logout.LogoutFilter.doFilterHttp(LogoutFilter.java:87)
	at org.springframework.security.ui.SpringSecurityFilter.doFilter(SpringSecurityFilter.java:53)
	at org.springframework.security.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:371)
	at org.springframework.security.ui.SessionFixationProtectionFilter.doFilterHttp(SessionFixationProtectionFilter.java:61)
	at org.springframework.security.ui.SpringSecurityFilter.doFilter(SpringSecurityFilter.java:53)
	at org.springframework.security.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:371)
	at org.springframework.security.context.HttpSessionContextIntegrationFilter.doFilterHttp(HttpSessionContextIntegrationFilter.java:229)
	at org.springframework.security.ui.SpringSecurityFilter.doFilter(SpringSecurityFilter.java:53)
	at org.springframework.security.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:371)
	at org.springframework.security.util.FilterChainProxy.doFilter(FilterChainProxy.java:174)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:236)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:167)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:175)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:128)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:286)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:844)
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:583)
	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:447)
	at java.lang.Thread.run(Thread.java:595)
Caused by: javax.faces.convert.ConverterException: java.lang.ClassCastException: org.apache.myfaces.shared_impl.renderkit.RendererUtils$1
	at javax.faces.convert.IntegerConverter.getAsString(IntegerConverter.java:85)
	at org.apache.myfaces.shared_impl.renderkit.RendererUtils.getConvertedStringValue(RendererUtils.java:628)
	at org.apache.myfaces.shared_impl.renderkit.html.HtmlRadioRendererBase.encodeEnd(HtmlRadioRendererBase.java:91)
	at javax.faces.component.UIComponentBase.encodeEnd(UIComponentBase.java:607)
	... 87 more
Caused by: java.lang.ClassCastException: org.apache.myfaces.shared_impl.renderkit.RendererUtils$1
	at javax.faces.convert.IntegerConverter.getAsString(IntegerConverter.java:81)
	... 90 more",MYFACES-1891
"Due to a potential bug in BigDecimal there is a bug, when you use BigDecimal
with a NumberConverter.

Like
<tr:inputText value=""#{bean.number}"" ...>
  <tr:convertNumber />
</tr:inputText>

For instance, when the entered value is ""333.111"" the actual stored value is 333.1109999999999899955582804977893829345703125

There is a mathematic explanation for that in here:
http://en.wikipedia.org/wiki/Floating_point#Accuracy_problems",MYFACES-1890
"
One possible enhancement to the error handling feature of myfaces could be the capability of redirect to a jsf page.

I have studied the issue in deep and the thing could be as described below:

1. Add this configuration to WEB-INF/web.xml

    <context-param>
        <description>
            Handle exceptions with jsf redirect page.
        </description>
        <param-name>org.apache.myfaces.ERROR_HANDLING_REDIRECT_PAGE</param-name>
        <param-value>true</param-value>
    </context-param>    

2. Define a navigation rule like this:

	<navigation-rule>
	    <from-view-id>*</from-view-id>
	    <navigation-case>
	       <from-outcome>java.lang.NullPointerException</from-outcome>
	       <to-view-id>/nullErrorPage.jsp</to-view-id>
	    </navigation-case>
	</navigation-rule>

Note that in from-outcome there is defined the class name of the error to be redirected by this page.

The first test of this feature has been successful, but there are some questions to be solved:

1. How to add error information (maybe add as a value on the request scope like exceptionList)
2. How to handle multiple errors, maybe the best is use a special outcome like org.apache.myfaces.MultipleThrowable

I'll do some test this weekend and add a possible patch of this feature.
",MYFACES-1889
"One possible enhancement to the myfaces error handling capability is catch Throwable errors when using myfaces error handling.

This should be done taking into account what the spec says about it:

- Call the execute() method of the saved Lifecycle instance, passing the
FacesContext instance for this request as a parameter. If the execute()
method throws a FacesException, re-throw it as a ServletException with
the FacesException as the root cause.
 Call the render() method of the saved Lifecycle instance, passing the
FacesContext instance for this request as a parameter. If the render() method
throws a FacesException, re-throw

The idea is catch and rethrow non Exception classes like errors (extends from Throwable or Error classes directly). If Myfaces error handling is used use it to show the error page with the info, taking into account that not all info could be available.

The idea is do this on FacesServlet:

        try {
			_lifecycle.execute(facesContext);

            if (!handleQueuedExceptions(facesContext))
            {
                _lifecycle.render(facesContext);
            }
		}
        catch (Exception e)
        {
            handleLifecycleException(facesContext, e);
        }
        catch (Throwable e)
        {
            //Handle Error and Throwable error cases (out-of-memory-errors, ....).
            handleLifecycleThrowable(facesContext, e);
        }    
        finally
        {
            facesContext.release();
        }

Please note that any change should not break old functionality.",MYFACES-1888
"When update model phase is executed, if multiple error occur when setting the values (could occur when a value is set to a EL expression), the errors should be added to the org.apache.myfaces.errorHandling.exceptionList, so the FacesServlet can manage it properly like this:

Exception while ...............message 1..........
Exception while ...............message 2..........

Caused by:
........cause 1.......
........cause 2.......

.....stackTrace 1.....
.....stackTrace 2.....

Checking the code there is some errors like this (class UIInput myfaces core 1.1.5):

    private void queueExceptionInRequest(FacesContext context, ValueBinding binding, Exception e) {
        List li = (List) context.getExternalContext().getRequestMap().get(ERROR_HANDLING_EXCEPTION_LIST);
        if(null==li) {
            li = new ArrayList();
            context.getExternalContext().getRequestMap().put(ERROR_HANDLING_EXCEPTION_LIST, li);

            li.add(new FacesException(""Exception while setting value for expression : ""+
                binding.getExpressionString()+"" of component with path : ""
                + _ComponentUtils.getPathToComponent(this),e));
        }
    }

Note the bad closing '}', it causes that previous errors be lost.

The idea is add a method to be called from FacesServlet like this:

class _ErrorPageWriter

    public static void handleExceptionList(FacesContext facesContext, List exceptionList) throws ServletException, IOException {
          ...........handle it..........
    }

if no method on custom ErrorPageWriter is defined, the old way is used (just show the first exception).
",MYFACES-1887
"The following translation is wrong: 
javax.faces.convert.DateTimeConverter.CONVERSION =  {1} : Conversion de '{0}' en Date/Heure impossible.

The {0} is surrounded by single quotes ' which makes the text to not being replaces.
Removing the quotes, solves the problem.",MYFACES-1886
"MyFaces expects a web.xml config file to be available on startup, thus context initialization fails in scenarios where the servlet container gets configured by another source. In particular this may well be the case when running MyFaces in an OSGi environment.

There should be a way to pass on any dependency to web.xml, as I managed to run my project (a JSF+Tobago+Facelets application within OSGi) with Mojarra 1.2, using extension mapping or path mapping.",MYFACES-1885
"1) Download Tomahawk examples.zip from repository (date is 08 Jan 2008) which includes example for tiles 2.
2) This tiles-example.war includes myfaces-1.6.
3) Replace myfaces1.6 libs with new one - in my case myfaces 1.2.3
4) Go to deployed application:

17:31:13,578 INFO  [BasicTilesContainer] Initializing Tiles2 container. . .
17:31:13,718 INFO  [BasicTilesContainer] Tiles2 container initialization complete.
17:31:13,718 INFO  [TilesAccess] Publishing TilesContext for context: org.apache.catalina.core.ApplicationContextFacade
17:31:14,015 ERROR [[jsp]] Servlet.service() for servlet jsp threw exception
java.lang.NoSuchMethodError: org.apache.myfaces.taglib.html.HtmlPanelGridTag.setColumns(Ljava/lang/String;)V
        at org.apache.jsp.common.navigation_jsp._jspx_meth_h_005fpanelGrid_005f0(navigation_jsp.java:121)
        at org.apache.jsp.common.navigation_jsp._jspx_meth_h_005fform_005f0(navigation_jsp.java:100)
        at org.apache.jsp.common.navigation_jsp._jspService(navigation_jsp.java:75)
        at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:803)
        at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:373)
        at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:336)
        at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:265)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:803)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
        at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:654)
        at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:557)
        at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:481)
        at org.apache.jasper.runtime.JspRuntimeLibrary.include(JspRuntimeLibrary.java:968)
        at org.apache.jasper.runtime.PageContextImpl.doInclude(PageContextImpl.java:638)
        at org.apache.jasper.runtime.PageContextImpl.include(PageContextImpl.java:632)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.apache.tiles.jsp.context.JspUtil.doInclude(JspUtil.java:87)
        at org.apache.tiles.jsp.context.JspTilesRequestContext.include(JspTilesRequestContext.java:88)
        at org.apache.tiles.jsp.context.JspTilesRequestContext.dispatch(JspTilesRequestContext.java:82)
        at org.apache.tiles.impl.BasicTilesContainer.render(BasicTilesContainer.java:465)
        at org.apache.tiles.jsp.taglib.InsertAttributeTag.render(InsertAttributeTag.java:140)
        at org.apache.tiles.jsp.taglib.InsertAttributeTag.render(InsertAttributeTag.java:117)
        at org.apache.tiles.jsp.taglib.RenderTagSupport.execute(RenderTagSupport.java:171)
        at org.apache.tiles.jsp.taglib.RoleSecurityTagSupport.doEndTag(RoleSecurityTagSupport.java:75)
        at org.apache.tiles.jsp.taglib.ContainerTagSupport.doEndTag(ContainerTagSupport.java:80)
        at org.apache.jsp.template.template_jsp._jspx_meth_tiles_005finsertAttribute_005f0(template_jsp.java:187)
        at org.apache.jsp.template.template_jsp._jspx_meth_f_005fsubview_005f0(template_jsp.java:159)
        at org.apache.jsp.template.template_jsp._jspx_meth_f_005fview_005f0(template_jsp.java:108)
        at org.apache.jsp.template.template_jsp._jspService(template_jsp.java:72)
        at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:803)
        at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:373)
        at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:336)
        at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:265)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:803)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
        at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:654)
        at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:445)
        at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:379)
        at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:292)
        at org.apache.tiles.servlet.context.ServletTilesRequestContext.forward(ServletTilesRequestContext.java:198)
        at org.apache.tiles.servlet.context.ServletTilesRequestContext.dispatch(ServletTilesRequestContext.java:185)
        at org.apache.tiles.impl.BasicTilesContainer.render(BasicTilesContainer.java:419)
        at org.apache.tiles.impl.BasicTilesContainer.render(BasicTilesContainer.java:370)
        at org.apache.myfaces.tomahawk.application.jsp.JspTilesTwoViewHandlerImpl.renderTilesView(JspTilesTwoViewHandlerImpl.java:105)
        at org.apache.myfaces.tomahawk.application.jsp.JspTilesTwoViewHandlerImpl.renderView(JspTilesTwoViewHandlerImpl.java:91)
        at org.apache.myfaces.lifecycle.RenderResponseExecutor.execute(RenderResponseExecutor.java:41)
        at org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:140)
        at javax.faces.webapp.FacesServlet.service(FacesServlet.java:152)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
        at org.apache.myfaces.webapp.filter.ExtensionsFilter.doFilter(ExtensionsFilter.java:147)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
        at org.jboss.web.tomcat.filters.ReplyHeaderFilter.doFilter(ReplyHeaderFilter.java:96)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:230)",MYFACES-1884
"
Bug introduced in FacesConfigurator Version 580395 by mmarinschek 28/Sep/07
While working on MYFACES-1689  mmarinschek introduced an action based on a check if the provided value was the default and not load this file if it was. Unfortunitly this was reusing an existing check that also check to see if log.isWarnEnbaled, so the code will behavoe materilly differently if logging is enabled.
  
see FacesConfigurator.getConfigFilesList()

WARN  FacesConfigurator - /WEB-INF/faces-config.xml has been specified in the javax.faces.CONFIG_FILES context parameter of the deployment descriptor. This will automatically be removed, if we wouldn't do this, it would be loaded twice.  See JSF spec 1.1, 10.3.2",MYFACES-1883
"Originally (myfaces-faces-plugin component generation) _validator was defined on the template but on save and restore methods was not included, causing 1.1 component that inherits from UIInput with validator=""#{someBean.validateMethod}"" never called.

This is related to TOMAHAWK-1276 validator property not fireing validator method. This is created here because it is not tomahawk related.

The solution is very simple, just save and restore propertly. Right now, UIInput is not generated, because myfaces-faces-plugin template mechanism was replaced by myfaces-faces-plugin approach. Probably we need to fix myfaces-builder-plugin templates, because its template was done following myfaces-faces-plugin code. But this will be later because it is outside the scope of this bug.",MYFACES-1882
"The latest myfaces core 1.2.4-SNAPSHOT throws this exception, because setId was disabled.

This is because javax.faces.webapp.UIComponentClassicTagBase try to set its id:

We have two options here:

1. do not set its id on UIComponentClassicTagBase
2. call super.setId and super.getId properly on UIViewRoot.

I don't know if there is side effects (a component without id? what happens when its state is saved and restored?).

Suggestions?

This is the exception

SEVERE: An exception occurred
javax.faces.FacesException: java.lang.UnsupportedOperationException
        at org.apache.myfaces.context.servlet.ServletExternalContextImpl.dispatc
h(ServletExternalContextImpl.java:344)
        at org.apache.myfaces.application.jsp.JspViewHandlerImpl.buildView(JspVi
ewHandlerImpl.java:481)
        at org.apache.myfaces.application.jsp.JspViewHandlerImpl.renderView(JspV
iewHandlerImpl.java:334)
        at org.apache.myfaces.lifecycle.RenderResponseExecutor.execute(RenderRes
ponseExecutor.java:41)
        at org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:
140)
        at javax.faces.webapp.FacesServlet.service(FacesServlet.java:152)
        at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:487
)
        at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(Servlet
Handler.java:1093)
        at org.apache.myfaces.webapp.filter.ExtensionsFilter.doFilter(Extensions
Filter.java:235)
        at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(Servlet
Handler.java:1084)
        at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:3
60)
        at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.jav
a:216)
        at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:1
81)
        at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:7
26)
        at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:405)

        at org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHand
lerCollection.java:206)
        at org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.
java:114)
        at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:1
52)
        at org.mortbay.jetty.Server.handle(Server.java:324)
        at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:50
5)
        at org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpCo
nnection.java:828)
        at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:514)
        at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:211)
        at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:380)
        at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.ja
va:395)
        at org.mortbay.thread.BoundedThreadPool$PoolThread.run(BoundedThreadPool
.java:450)
Caused by: org.apache.jasper.JasperException: java.lang.UnsupportedOperationExce
ption
        at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper
.java:402)
        at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:4
70)
        at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:364)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:820)
        at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:487
)
        at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:3
62)
        at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.jav
a:216)
        at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:1
81)
        at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:7
26)
        at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:405)

        at org.mortbay.jetty.servlet.Dispatcher.forward(Dispatcher.java:285)
        at org.mortbay.jetty.servlet.Dispatcher.forward(Dispatcher.java:126)
        at org.apache.myfaces.context.servlet.ServletExternalContextImpl.dispatc
h(ServletExternalContextImpl.java:338)
        ... 25 more
Caused by: java.lang.UnsupportedOperationException
        at javax.faces.component.UIViewRoot.setId(UIViewRoot.java:458)
        at javax.faces.webapp.UIComponentClassicTagBase.findComponent(UIComponen
tClassicTagBase.java:1029)
        at javax.faces.webapp.UIComponentClassicTagBase.doStartTag(UIComponentCl
assicTagBase.java:431)
        at org.apache.myfaces.taglib.core.ViewTag.doStartTag(ViewTag.java:103)
        at org.apache.jsp.testValidatorHidden_jsp._jspx_meth_f_view_0(org.apache
.jsp.testValidatorHidden_jsp:103)
        at org.apache.jsp.testValidatorHidden_jsp._jspService(org.apache.jsp.tes
tValidatorHidden_jsp:75)
        at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:93)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:820)
        at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper
.java:373)
        ... 37 more",MYFACES-1881
"I get a Could not find component in the following code:
					
<rich:modalPanel id=""popEditLegalEntity""    moveable=""true"" styleClass=""popup"" height=""150"" width=""600"" >
			<f:facet name=""header"">
				<h:outputText value=""Edit Entity Name"" />
			</f:facet>

			<f:facet name=""controls"">
				<h:graphicImage value=""/images/close.png"" style=""cursor:pointer""
					onclick=""Richfaces.hideModalPanel('popEditLegalEntity')"" />
			</f:facet>

			<a4j:form id=""popEntityForm""  >
                

					<t:panelGrid rowClasses=""standardTable_GenericRow"" 
						columnClasses=""standardTable_Column1,standardTable_Column2,standardTable_Column2""
						columns=""3"">
						<h:outputLabel  value=""Entity Type:"" />


						<t:selectOneRadio id=""typeSelectOne"" forceId=""true"" layout=""spread"" value=""#{legalEntityBacking.nameHistory.nameTypeCode}""  onclick=""changeEntityType(this)"" >
							<f:selectItem id=""businessSelect"" itemLabel=""Business"" itemValue=""business"" />							
							<f:selectItem id=""personSelect"" itemLabel=""Person"" itemValue=""person"" />
						</t:selectOneRadio>
                        <t:radio for=""typeSelectOne"" index=""0"" >
						    <t:outputLabel style=""visibility:hidden;"" id=""entityNameLabel"" forceId=""true"" for=""entityName"" value=""Name:"" />
							<t:inputText  style=""visibility:hidden;"" size=""40"" forceId=""true""  id=""entityName"" value=""#{legalEntityBacking.busEntityName}""  />
						</t:radio>	
	
									                        
  

						
                        <t:inputHidden id=""entityType"" forceId=""true"" value=""#{legalEntityBacking.nameHistory.nameTypeCode}""/>
                        <t:inputHidden id=""nameid"" value=""#{legalEntityBacking.nameHistory.nameId}""/>
                        <h:inputHidden id=""effectiveDate"" value=""#{legalEntityBacking.nameHistory.effectiveDate}""/>
                        <h:inputHidden id=""endDate"" value=""#{legalEntityBacking.nameHistory.endDate}""/>
    				</t:panelGrid>
				
				<t:panelGrid columns=""3"">
					<a4j:commandButton value=""Save"" reRender=""contactEdit""
					    oncomplete=""javascript:Richfaces.hideModalPanel('popEditLegalEntity')""
					    actionListener=""#{legalEntityBacking.saveEntity}""  />					
					<a4j:commandButton value=""Cancel"" onclick=""javascript:Richfaces.hideModalPanel('popEditLegalEntity')"" />
				</t:panelGrid>
				
			</a4j:form>
		</rich:modalPanel>

with the following: 

Exception while calling encodeEnd on component : {Component-Path : [Class: org.ajax4jsf.component.AjaxViewRoot,ViewId: /jsp/contacts/contacts.jsp][Class: org.ajax4jsf.component.html.Include,Id: j_id_jsp_1258494757_204][Class: org.richfaces.component.html.HtmlModalPanel,Id: popEditLegalEntity][Class: org.ajax4jsf.component.html.AjaxForm,Id: popEntityFormj_id_1][Class: org.apache.myfaces.component.html.ext.HtmlPanelGrid,Id: j_id_jsp_1450444019_4j_id_1]}

Caused by:
java.lang.IllegalStateException - Could not find component 'typeSelectOne' (calling findComponent on component 'j_id_jsp_1258494757_204:popEntityFormj_id_1:j_id_jsp_1450444019_9j_id_1')

I believe this is similiar to:
http://issues.apache.org/jira/browse/TOMAHAWK-26?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#action_12358398

although I have tried the workaround with no success. ",MYFACES-1880
"When running MyFaces 1.2 on an application server with java2 security turned on, a user can receive an AccessControlException from several locations within the code, in some cases preventing the application from working in the environment. 

There are several places in the myfaces code that should be updated to include a doPriv when java2 security is on.  Specifically in locations where the code is executing a call to Thread.currentThread().getContextClassLoader(), as well as in the JspStateManagerImpl's deserializeView() method.  

for example (in the classloader case):

if (System.getSecurityManager() != null) {
	try {
		Object cl = AccessController.doPrivileged(new PrivilegedExceptionAction() {
				public Object run() throws PrivilegedActionException {
					return Thread.currentThread().getContextClassLoader();
				}
		});
		return (ClassLoader) cl;
	} catch (PrivilegedActionException pae) {
		throw new FacesException(pae);
	}
}else{
	return Thread.currentThread().getContextClassLoader();
}

If its agreed that the change should be implemented, I'd be happy to perform the changes myself and supply a patch.  I also thought that it might make sense to, at least for the ClassLoader lookup, create a method in ClassUtils called getContextClassloader that could be called elsewhere for efficiency's sake. ",MYFACES-1879
"MyFaces instructs Digester to use the context class loader for loading element types. Unfortunately this doesn't work well in OSGi. A better solution would be to give Digester the ClassLoader for the FacesConfig type explicitly.

Rob",MYFACES-1878
"When MyFaces is processing a Servlet/JSP include, the method DefaultViewHandlerSupport.getFacesServletMapping() does not take into account the servlet path and path info that are passed as request attributes (namely, javax.servlet.include.servlet_path and javax.servlet.include.path_info). Instead, the method takes the values directly from externalContext.getRequestServletPath() and externalContext.getRequestPathInfo(), ignoring the request attributes that could overwrite them. However, these attributes are taken into account when the original view id is calculated (see DefaultRestoreViewSupport.calculateViewId()), so there seems to be a mismatch between these two behaviors.

As a result, in situations where the servlet path or path info passed as request attributes are different from their original values in the request, MyFaces may not be able to find the appropriate mapping and may also skip the suffix substitution even when it should occur (see DefaultViewHandlerSupport.calculateViewId()). But since the original view id was calculated correctly as explained above, using the attribute overwrites, but the suffix .jsf is not changed to .jsp as it should, it results in an infinite loop as MyFaces keeps calling itself instead of calling the JSP processor.

The solution is to modify DefaultViewHandlerSupport.getFacesServletMapping() to take into account the servlet path / path info request attributes just like DefaultRestoreViewSupport.calculateViewId() does.",MYFACES-1877
"The latest snapshot use Java 1.5 API  Integer.valueOf(int)
E.g. HtmlDataTable.java 

    public Object saveState(FacesContext facesContext)
    {
        Object[] values = new Object[29];
        values[0] = super.saveState(facesContext);
        values[1] = _bgcolor;
        values[2] = Integer.valueOf(_border);
",MYFACES-1876
"validateValue(FacesContext context, Object value) Method of UISelectOne item checks values against list of SelectItems
if (!_SelectItemsUtil.matchValue(value, new _SelectItemsIterator(this)))
The value is a converted value whereas the SelectItem values returned from the _SelectItemsIterator are not being converted.
Therefore the validity check does not work for anything else but String values or one must include a valuebinding in the SelectItem for every Value in the list.

In my case I have two SelectItems with values 'true' and 'false'. A booleanConverter is registered with the UISelectOne to convert Strings to Boolean and back.
The value is invalid as the comparison Boolean.equals(String) is false of course in the method call _SelectItemsUtil.matchValue:
Object itemValue = item.getValue();
if (value==itemValue || value.equals(itemValue))
",MYFACES-1875
Apply myfaces builder plugin to this project. This is necessary for make this work on tomahawk (myfaces-metadata.xml required),MYFACES-1874
"ERROR 2008-05-14 10:33:01,051 [http-8080-3] org.apache.myfaces.renderkit.html.util.ReducedHTMLParser: Malformed end tag at line 322; skipping parsing",MYFACES-1873
"broadcast() method of UIComponent should threw IllegalArgumentException if the implementation class of event argument was not supported by the component in JSF 1.1

It seems that there is no such requirement in JSF 1.2 standard, but UIInput still checks for ValueChangeEvent type and throws exception if it so not so. That enforces component developers not to call super.broadcast in UIInput-derived components",MYFACES-1871
"Implementation of DefaultViewHandlerSupport only works in Servlet environment.

In getFacesServletMapping() the calls to externalContext.getRequestServletPath() and externalContext.getRequestPathInfo() will both return NULL in a portlet environment and thus resulting in a NPE calculateFacesServletMapping().",MYFACES-1870
"
In previous releases we have to generate the src assembly manually. This should be automatic
",MYFACES-1869
"getSubmittedValue method always returns the string value of the control. The actual returned value is Object, so I am assuming it supposed to convert the value.",MYFACES-1868
"This code:
                <t:commandLink immediate=""true"" onclick=""document.getElementById('costModel').value = 'cpd';""
                               action=""#{cmp_delivery.changeCostModelAction}""
                               rendered=""#{cmp_delivery.cmpCampaign.cmpCost.sysCostModel.value != 'cpd'}"">
                  <h:graphicImage url=""images/icon/i_cpd.gif""/>
                </t:commandLink>
causes the action: changeCostModelAction not to be activated on server side.

When removing onclick event all works fine.

Same problem happens with: <t:commandLink>",MYFACES-1867
"java.lang.NullPointerException
	at org.apache.myfaces.application.jsp.JspStateManagerImpl.getServerStateId(JspStateManagerImpl.java:218)
	at org.apache.myfaces.application.jsp.JspStateManagerImpl.restoreView(JspStateManagerImpl.java:295)
	at org.apache.myfaces.application.jsp.JspViewHandlerImpl.restoreView(JspViewHandlerImpl.java:505)
	at org.apache.myfaces.tobago.application.ViewHandlerImpl.restoreView(ViewHandlerImpl.java:98)
	at org.apache.myfaces.tobago.lifecycle.RestoreViewExecutor.execute(RestoreViewExecutor.java:108)
	at org.apache.myfaces.tobago.lifecycle.TobagoLifecycle.executePhase(TobagoLifecycle.java:102)
	at org.apache.myfaces.tobago.lifecycle.TobagoLifecycle.execute(TobagoLifecycle.java:72)
	at javax.faces.webapp.FacesServlet.service(FacesServlet.java:148)
	at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:487)
	at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:362)
	at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)
	at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181)
	at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:726)
	at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:405)
	at org.mortbay.jetty.servlet.Dispatcher.forward(Dispatcher.java:285)
	at org.mortbay.jetty.servlet.Dispatcher.forward(Dispatcher.java:126)
	at org.apache.jasper.runtime.PageContextImpl.forward(PageContextImpl.java:767)
	at org.apache.jsp.index_jsp._jspService(org.apache.jsp.index_jsp:47)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:93)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:820)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:373)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:470)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:364)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:820)
	at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:487)
	at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:362)
	at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)
	at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181)
	at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:726)
	at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:405)
	at org.mortbay.jetty.servlet.Dispatcher.forward(Dispatcher.java:285)
	at org.mortbay.jetty.servlet.Dispatcher.forward(Dispatcher.java:126)
	at org.mortbay.jetty.servlet.DefaultServlet.doGet(DefaultServlet.java:463)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:707)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:820)
	at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:487)
	at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:362)
	at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)
	at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181)
	at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:726)
	at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:405)
	at org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:206)
	at org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)
	at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)
	at org.mortbay.jetty.Server.handle(Server.java:324)
	at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:505)
	at org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:828)
	at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:514)
	at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:211)
	at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:380)
	at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:395)
	at org.mortbay.thread.BoundedThreadPool$PoolThread.run(BoundedThreadPool.java:450)",MYFACES-1866
"While JSF Specification demands only XHTML Transitional to be implemented, it would be interesting to have a  XHTML 1.0 Strict based implementation of the RenderKit.",MYFACES-1865
"The actual implementation for UIComponentBase.getFacetsAndChildren() is this:

    public Iterator<UIComponent> getFacetsAndChildren()
    {
        return new _FacetsAndChildrenIterator<UIComponent>(_facetMap, _childrenList);
    }

In most cases there is no children and there is not facets defined, and the creation of this object holds references to facetMap and childrenList iterators, causing possible memory leaks.

The idea is use a similar strategy used in trinidad, avoiding the use of a list and using the compound iterator:

  public Iterator<UIComponent> getFacetsAndChildren()
  {
    // =-=AEW Is this supposed to be an immutable Iterator?
    if (_facets == null)
    {
      if (_children == null)
        return _EMPTY_UICOMPONENT_ITERATOR;

      return _children.iterator();
    }
    else
    {
      if (_children == null)
        return _facets.values().iterator();
    }

    ArrayList<UIComponent> childrenAndFacets = new ArrayList<UIComponent>();
    for(UIComponent facet : _facets.values())
    {
      childrenAndFacets.add(facet);
    }

    for(UIComponent child : _children)
    {
      childrenAndFacets.add(child);
    }

    if (childrenAndFacets.isEmpty())
      return _EMPTY_UICOMPONENT_ITERATOR;

    return childrenAndFacets.iterator();
  }

also on _FacetsAndChildrenIterator use something like this:

    public boolean hasNext()
    {
        boolean hasNext = (_facetsIterator != null && _facetsIterator.hasNext()) ||
               (_childrenIterator != null && _childrenIterator.hasNext());
        if (!hasNext)
       {
            _facetsIterator = null;
            _childrenIterator = null;
       }

        return hasNext;
    }

Before hasNext() returns false, set the references to the iterators to null, since this references no longer be used after this;

Also create a class _EmptyIterator<E> to reuse this like trinidad does.",MYFACES-1864
"It is possible to generate duplicate ids when using ""forceId=true"".
For example:
Create 2 nested databases with inner control that uses: forceId=true
<h:datatable value=""outerValues"" var=""outerValue>
  <h:column>  
     <h:datatable value=""innerValues"" var=""innerValue"">
        <h:column>
            <t:outputText id=""myId"" forceId=""true"" />
       </h:column>
     </h:column>
</h:datatable>

The created html will produce the ids: myId[0], myId[1], myId[2] and so on...
The truth is, that even in a single table loop, I was expecting to see Ids according to the regular convention: myId:0, myId:1, ...
and in this case: myId:0:0, myId:0:1, ...., ,myId:1:0, myId:1:1, ...
instead, I saw this ""array like"" convention, which is acceptable, as long as it will be something like this: myId[0][0], ...",MYFACES-1863
"Trinidad uses a ThreadLocal StringBuilder variable to concatenate the values to get the client id, like this:

        StringBuilder bld = __getSharedStringBuilder();
        bld.append(contClientId).append(NamingContainer.SEPARATOR_CHAR).append(clientId);
        clientId = bld.toString();

We should do something similar for myfaces, because it gives us a performance enhancement.",MYFACES-1862
"If there are 2 controls (or more) with the same id, one control is rendered and the other is not, there is duplicate id exception.

Exception example:
javax.servlet.jsp.JspException: Duplicated component Id: 'included1' for component: '{Component-Path : [Class: javax.faces.component.UIViewRoot,ViewId: /cmp_ads.jsp][Class: javax.faces.component.html.HtmlForm,Id: formAds][Class: org.apache.myfaces.component.html.ext.HtmlDataTable,Id: tableAds][Class: javax.faces.component.UIColumn,Id: j_id_jsp_2054236967_13][Class: org.apache.myfaces.component.html.ext.HtmlDataTable,Id: tableCreatives][Class: javax.faces.component.UIColumn,Id: j_id_jsp_2054236967_23][Class: javax.faces.component.html.HtmlPanelGroup,Id: j_id_jsp_2054236967_29][Class: org.apache.myfaces.component.html.ext.HtmlOutputText,Id: included1]}'.
	at javax.faces.webapp.UIComponentClassicTagBase.doStartTag(UIComponentClassicTagBase.java:459)
	at org.apache.jsp.cmp_005fads_jsp._jspx_meth_t_005foutputText_005f2(cmp_005fads_jsp.java:1304)
	at org.apache.jsp.cmp_005fads_jsp._jspx_meth_h_005fpanelGroup_005f1(cmp_005fads_jsp.java:1264)
	at org.apache.jsp.cmp_005fads_jsp._jspx_meth_h_005fcolumn_005f1(cmp_005fads_jsp.java:1043)
	at org.apache.jsp.cmp_005fads_jsp._jspx_meth_t_005fdataTable_005f1(cmp_005fads_jsp.java:994)
	at org.apache.jsp.cmp_005fads_jsp._jspx_meth_h_005fcolumn_005f0(cmp_005fads_jsp.java:717)
	at org.apache.jsp.cmp_005fads_jsp._jspx_meth_t_005fdataTable_005f0(cmp_005fads_jsp.java:648)
	at org.apache.jsp.cmp_005fads_jsp._jspx_meth_h_005fform_005f0(cmp_005fads_jsp.java:516)
	at org.apache.jsp.cmp_005fads_jsp._jspx_meth_f_005fview_005f0(cmp_005fads_jsp.java:264)
	at org.apache.jsp.cmp_005fads_jsp._jspService(cmp_005fads_jsp.java:139)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:803)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:393)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:320)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:266)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:803)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:654)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:445)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:379)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:292)
	at org.apache.myfaces.context.servlet.ServletExternalContextImpl.dispatch(ServletExternalContextImpl.java:338)
	at org.apache.myfaces.application.jsp.JspViewHandlerImpl.buildView(JspViewHandlerImpl.java:480)
	at org.apache.myfaces.application.jsp.JspViewHandlerImpl.renderView(JspViewHandlerImpl.java:334)
	at org.apache.myfaces.lifecycle.RenderResponseExecutor.execute(RenderResponseExecutor.java:41)
	at org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:140)
	at javax.faces.webapp.FacesServlet.service(FacesServlet.java:152)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at com.todacell.ui.view.filter.OpenSessionInViewFilter.doFilterInternal(OpenSessionInViewFilter.java:149)
	at com.todacell.ui.view.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:61)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.myfaces.webapp.filter.ExtensionsFilter.doFilter(ExtensionsFilter.java:147)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:175)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:128)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:263)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:844)
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:584)
	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:447)
	at java.lang.Thread.run(Thread.java:619)
15/04/2008 01:06:41 org.apache.catalina.core.ApplicationDispatcher invoke
SEVERE: Servlet.service() for servlet jsp threw exception
javax.servlet.jsp.JspException: Duplicated component Id: 'included1' for component: '{Component-Path : [Class: javax.faces.component.UIViewRoot,ViewId: /cmp_ads.jsp][Class: javax.faces.component.html.HtmlForm,Id: formAds][Class: org.apache.myfaces.component.html.ext.HtmlDataTable,Id: tableAds][Class: javax.faces.component.UIColumn,Id: j_id_jsp_2054236967_13][Class: org.apache.myfaces.component.html.ext.HtmlDataTable,Id: tableCreatives][Class: javax.faces.component.UIColumn,Id: j_id_jsp_2054236967_23][Class: javax.faces.component.html.HtmlPanelGroup,Id: j_id_jsp_2054236967_29][Class: org.apache.myfaces.component.html.ext.HtmlOutputText,Id: included1]}'.
	at javax.faces.webapp.UIComponentClassicTagBase.doStartTag(UIComponentClassicTagBase.java:459)
	at org.apache.jsp.cmp_005fads_jsp._jspx_meth_t_005foutputText_005f2(cmp_005fads_jsp.java:1304)
	at org.apache.jsp.cmp_005fads_jsp._jspx_meth_h_005fpanelGroup_005f1(cmp_005fads_jsp.java:1264)
	at org.apache.jsp.cmp_005fads_jsp._jspx_meth_h_005fcolumn_005f1(cmp_005fads_jsp.java:1043)
	at org.apache.jsp.cmp_005fads_jsp._jspx_meth_t_005fdataTable_005f1(cmp_005fads_jsp.java:994)
	at org.apache.jsp.cmp_005fads_jsp._jspx_meth_h_005fcolumn_005f0(cmp_005fads_jsp.java:717)
	at org.apache.jsp.cmp_005fads_jsp._jspx_meth_t_005fdataTable_005f0(cmp_005fads_jsp.java:648)
	at org.apache.jsp.cmp_005fads_jsp._jspx_meth_h_005fform_005f0(cmp_005fads_jsp.java:516)
	at org.apache.jsp.cmp_005fads_jsp._jspx_meth_f_005fview_005f0(cmp_005fads_jsp.java:264)
	at org.apache.jsp.cmp_005fads_jsp._jspService(cmp_005fads_jsp.java:139)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:803)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:393)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:320)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:266)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:803)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:654)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:445)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:379)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:292)
	at org.apache.myfaces.context.servlet.ServletExternalContextImpl.dispatch(ServletExternalContextImpl.java:338)
	at org.apache.myfaces.application.jsp.JspViewHandlerImpl.buildView(JspViewHandlerImpl.java:480)
	at org.apache.myfaces.application.jsp.JspViewHandlerImpl.renderView(JspViewHandlerImpl.java:334)
	at org.apache.myfaces.lifecycle.RenderResponseExecutor.execute(RenderResponseExecutor.java:41)
	at org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:140)
	at javax.faces.webapp.FacesServlet.service(FacesServlet.java:152)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at com.todacell.ui.view.filter.OpenSessionInViewFilter.doFilterInternal(OpenSessionInViewFilter.java:149)
	at com.todacell.ui.view.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:61)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.myfaces.webapp.filter.ExtensionsFilter.doFilter(ExtensionsFilter.java:147)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:175)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:128)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:263)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:844)
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:584)
	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:447)
	at java.lang.Thread.run(Thread.java:619)",MYFACES-1861
"I know this is probably a known issue, and it is a matter of specification, but still, I think it is an annoying issue that makes jsf impossible in the simplest cases:
Suppose there is a simple dropdown with 2 values: 1, 2. The selected value is set to: 1 (in the bean constructor or in faces-config).
Something like this:
            <h:selectOneMenu value=""#{cmp_browse.selectedPage}"" onchange=""submit();""
                             valueChangeListener=""#{cmp_browse.gotoPageAction}"">
              <f:selectItems value=""#{cmp_browse.pages}"" />
            </h:selectOneMenu>

Now, when changing the value from 1 to 2, the event will be fired. But, when changing the value from 2 to 1, no event is fired.
It is clear why event was not fired: initial value is 1, newly changed value is also 1. No event fired.
But, logically it is wrong, since I did changed the dropdown value from 2 to 1.
In plain old JSP programming, this was so easy to accomplish task (reacting to some change in dropdown and doing some action), that becomes very annoying in JSF.

I know one would say: what is the problem? change the scope of the bean to session. I don't accept this solution and generally I almost never work with session scoped beans. I don't see any reason starting to fill the user session with tons of data in order to solve simple problems (in general, I don't like to put information that is not really required in the session).",MYFACES-1860
"Optimize some parts of oamXXXX using practices described in:

http://www.devwebpro.com/devwebpro-39-20030514OptimizingJavaScriptforExecutionSpeed.html
",MYFACES-1859
"It seems like there is a general problem in resource bundle evaluation in java code.
It seems like when ever loaded page is being reloaded (post back) the resource bundle in java code is not evaluated.
I use two methods:
1) 
  public static FacesContext getFacesContext()
  {
    return FacesContext.getCurrentInstance();
  }

  private static Application getApplication()
  {
    ApplicationFactory appFactory = (ApplicationFactory) FactoryFinder.
        getFactory(FactoryFinder.APPLICATION_FACTORY);
    return appFactory.getApplication();
  }

  private static ValueBinding getValueBinding(String el)
  {
    return getApplication().createValueBinding(el);
  }

  public static Object getElValue(String el)
  {
    return getValueBinding(el).getValue(getFacesContext());
  }

then I do: getElValue(""#{bundle['some.resource.value']}"");
In this case, for example, when I want to fill dropdown with multi-laguage values and convert them to the proper data from the bundle I get this exception (Note: when comming to the page, it loads ok, it happens only on the postback call):
javax.faces.FacesException: Exception while validating component with path : {Component-Path : [Class: javax.faces.component.UIViewRoot,ViewId: /cmp_new.jsp][Class: javax.faces.component.html.HtmlForm,Id: frmNewCampaign][Class: javax.faces.component.html.HtmlInputText,Id: po]}
	at javax.faces.component.UIInput.validate(UIInput.java:346)
	at javax.faces.component.UIInput.processValidators(UIInput.java:144)
	at javax.faces.component.UIForm.processValidators(UIForm.java:74)
	at javax.faces.component.UIComponentBase.processValidators(UIComponentBase.java:658)
	at javax.faces.component.UIViewRoot.access$101(UIViewRoot.java:43)
	at javax.faces.component.UIViewRoot$2.process(UIViewRoot.java:97)
	at javax.faces.component.UIViewRoot.process(UIViewRoot.java:205)
	at javax.faces.component.UIViewRoot.processValidators(UIViewRoot.java:93)
	at org.apache.myfaces.lifecycle.ProcessValidationsExecutor.execute(ProcessValidationsExecutor.java:32)
	at org.apache.myfaces.lifecycle.LifecycleImpl.executePhase(LifecycleImpl.java:103)
	at org.apache.myfaces.lifecycle.LifecycleImpl.execute(LifecycleImpl.java:76)
	at javax.faces.webapp.FacesServlet.service(FacesServlet.java:148)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at com.todacell.ui.view.filter.OpenSessionInViewFilter.doFilterInternal(OpenSessionInViewFilter.java:149)
	at com.todacell.ui.view.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:61)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.myfaces.webapp.filter.ExtensionsFilter.doFilter(ExtensionsFilter.java:147)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:175)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:128)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:263)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:844)
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:584)
	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:447)
	at java.lang.Thread.run(Thread.java:619)
Caused by: java.lang.NullPointerException
	at com.todacell.ui.view.util.ViewUtil.collectionToSelectItemList(ViewUtil.java:89)
	at com.todacell.ui.view.util.ViewUtil.collectionToSelectItemList(ViewUtil.java:98)
	at com.todacell.ui.view.bean.campaign.CampaignNewBean.<init>(CampaignNewBean.java:43)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at java.lang.Class.newInstance0(Class.java:355)
	at java.lang.Class.newInstance(Class.java:308)
	at org.apache.myfaces.config.annotation.TomcatAnnotationLifecycleProvider.newInstance(TomcatAnnotationLifecycleProvider.java:45)
	at org.apache.myfaces.config.ManagedBeanBuilder.buildManagedBean(ManagedBeanBuilder.java:81)
	at org.apache.myfaces.el.unified.resolver.ManagedBeanResolver.createManagedBean(ManagedBeanResolver.java:196)
	at org.apache.myfaces.el.unified.resolver.ManagedBeanResolver.getValue(ManagedBeanResolver.java:162)
	at javax.el.CompositeELResolver.getValue(CompositeELResolver.java:53)
	at org.apache.myfaces.el.unified.resolver.FacesCompositeELResolver.access$301(FacesCompositeELResolver.java:46)
	at org.apache.myfaces.el.unified.resolver.FacesCompositeELResolver$4.invoke(FacesCompositeELResolver.java:108)
	at org.apache.myfaces.el.unified.resolver.FacesCompositeELResolver.invoke(FacesCompositeELResolver.java:148)
	at org.apache.myfaces.el.unified.resolver.FacesCompositeELResolver.getValue(FacesCompositeELResolver.java:104)
	at org.apache.myfaces.el.VariableResolverImpl.resolveVariable(VariableResolverImpl.java:61)
	at org.apache.myfaces.custom.redirectTracker.RedirectTrackerVariableResolver.resolveVariable(RedirectTrackerVariableResolver.java:41)
	at org.apache.myfaces.custom.security.SecurityContextVariableResolver.resolveVariable(SecurityContextVariableResolver.java:45)
	at org.apache.myfaces.el.convert.VariableResolverToELResolver.getValue(VariableResolverToELResolver.java:93)
	at javax.el.CompositeELResolver.getValue(CompositeELResolver.java:53)
	at org.apache.myfaces.el.unified.resolver.FacesCompositeELResolver.access$301(FacesCompositeELResolver.java:46)
	at org.apache.myfaces.el.unified.resolver.FacesCompositeELResolver$4.invoke(FacesCompositeELResolver.java:108)
	at org.apache.myfaces.el.unified.resolver.FacesCompositeELResolver.invoke(FacesCompositeELResolver.java:148)
	at org.apache.myfaces.el.unified.resolver.FacesCompositeELResolver.getValue(FacesCompositeELResolver.java:104)
	at org.apache.el.parser.AstIdentifier.getValue(AstIdentifier.java:45)
	at org.apache.el.parser.AstValue.getTarget(AstValue.java:42)
	at org.apache.el.parser.AstValue.getType(AstValue.java:35)
	at org.apache.el.ValueExpressionImpl.getType(ValueExpressionImpl.java:174)
	at org.apache.jasper.el.JspValueExpression.getType(JspValueExpression.java:58)
	at org.apache.myfaces.shared_impl.renderkit._SharedRendererUtils.findUIOutputConverter(_SharedRendererUtils.java:58)
	at org.apache.myfaces.shared_impl.renderkit.RendererUtils.findUIOutputConverter(RendererUtils.java:391)
	at org.apache.myfaces.shared_impl.renderkit.RendererUtils.getConvertedUIOutputValue(RendererUtils.java:743)
	at org.apache.myfaces.shared_impl.renderkit.html.HtmlTextRendererBase.getConvertedValue(HtmlTextRendererBase.java:219)
	at javax.faces.component.UIInput.getConvertedValue(UIInput.java:380)
	at javax.faces.component.UIInput.validate(UIInput.java:328)
	... 30 more
2) The second method I use:
  public static Object getElValue(String el)
  {
    return getValueBinding(el).getValue(getFacesContext());
  }
This method doesnt throw exception, but it returns an empty string.
For example, if I want to show error message from resource bundle, when posting page data, an empty error string returns.
When putting simple string with no resource bundle, page loads an error shown ok.

Note that all the jsp page has many calls to the same resource bundle, and the page itself is presented properly. Meaning the problem happens only when calling the resource from java code.",MYFACES-1858
"The page http://java.sun.com/javaee/javaserverfaces/1.2/docs/tlddocs/h/commandLink.html says this:

If an ""onclick"" attribute was specified by the user, render this JavaScript in a function, and render the user's JavaScript in a function. Render both functions in a choice function as follows:

var a=function(){#USER_FUNCTION#}; var b=function(){#JSF_FUNCTION#}; return (a()==false) ? false : b();

where #USER_FUNCTION# is the user's JavaScript and #JSF_FUNCTION# is the JavaScript rendered by JSF. The choice function should operate such that if the user's JavaScript returns true, then the rendered JavaScript will also execute.

Myfaces should do this as well.",MYFACES-1857
"The problem is here:

	function oamSubmitForm(formName, linkId, target, params)
	{		
               /*......................*/
		if((typeof target=='function') && target != null)
		{
			oldTarget=document.forms[formName].target;
			document.forms[formName].target=target;
		}

maybe we should do this instead

		if( target != null)

or maybe
         
		if(typeof target!='undefined')

I will take a look to see what is better",MYFACES-1856
"Myfaces render the hidden fields before the end of the form, which cause compatibility problems when someone does not use h:form to encapsulate a form. Mojarra or jsf ri does not, instead create the hidden fields before submit (including the hidden fields for params), submit the form an then remove the hidden fields to avoid unwanted effects. Myfaces set the hidden fields (if it is not rendered on the form creates it), submit the form and then set the values of the hidden fields to null.

 I have noted that autoscroll feature available when using tomahawk + myfaces uses oamSetHiddenInput instead render the hidden autoscroll part.

After thinking a lot (A LOT!!) about this problem, the best for solve this problem is do not render hidden fields for this case, but let the code for hidden fields (compatibility with tomahawk, since jscookmenu use this feature, this should change in a future release). Instead, for h:commandLink, set and remove the hidden fields using javascript.
",MYFACES-1855
"<f:selectItems> does not evaluates EL expressions. This, for example, makes impossible to create multi-language dynamic drop down items.
Example:
-------------
SelectItem selectItem = new SelectItem(""-1"",  ""#{bundle['dropdown.advertiser.select']}"")
This EL expression will not be evaluated.

In JSP value is evaluated:
  <h:selectOneMenu>
    <f:selectItem itemValue=""-1"" itemLabel=""#{bundle['dropdown.advertiser.select'']}"" />
  </h:selectOneMenu>",MYFACES-1854
"I just stumbled upon some weired problem. I have a rather basic myfaces
1.2.2 + facelets 1.1.3 setup. What I tried to achieve, is to NOT have
either Facelets nor MyFaces handle any of the error 500 scenarios.

Right now, in case of error 500 I have a facelets error page. ""An Error
Occured"", and collapsable trees for the components etc. You know the
drill.

So I decided to disable debugging in facelets, by switching
context-parameter facelets.DEVELOPMENT to false. This was the first moment
I got confused, because devmode was already disabled.

BUT: The error page definetly states ""Generated by Facelets"" in the lower
right corner.

I spent the last hour tracking this down. So far I have confirmed that the
FaceletsViewHandler does not trigger the generation of said errorpage. So
I searched some more, and found javax.faces.webapp._ErrorPageWriter to be
the culprit. The problem is, that it seems to be a copy of the Facelets
DevTools class. And furthermore the filename of the error-template has
been copied as well. It's

""META-INF/rsc/facelet-dev-error.xml""

on both myfaces as well as facelets. I have checked the template included
with myfaces and it is clearly different from the one included with
facelets. So my best guess right now (I have not confirmed this any
further) is, that MyFaces loads the template from facelets.jar due to some
unlucky webapp classloader situation.

Although the solution to my current problem is most likely to just disable
debugging in myfaces as well, I would like to strongly advise to change
the filename of the MyFaces error-template. This really confused me a lot.
:-)",MYFACES-1853
"The problem is shown here:

the method renderAutoScrollFunction is not called anymore, so the feature is broken.

There exists a issue MYFACES-1662 Move autoscroll feature from shared HtmlRendererUtils to Tomahawk, but for now we should restore this feature first and then move this stuff.

The javascript added on the button and link looks like this:

if(typeof window.getScrolling!='undefined'){
      oamSetHiddenInput('form','autoScroll',getScrolling());
}

oamSetHiddenInput create a input hidden through javascript, suggesting a more compatible solution than use input hidden fields rendered at encodeEnd of a form. Other task should be change input hidden fields feature using oamSetHiddenInput instead.

",MYFACES-1852
"
The hidden field _link_hidden_ was replaced with _idcl, but actually on 1.2 this field does nothing.

The better option is remove this field from rendering.",MYFACES-1851
"When using server side state saving with ""serialize state in view""=false all the saved states for the same view contains a shared reference to the component attribute map.",MYFACES-1850
"Actually, myfaces 1.2 renders a javascript on button like this:

onclick=""if(typeof window.clearFormHiddenParams_form3!='undefined'){clearFormHiddenParams_form3('form3');}

but jsf ri does nothing. Myfaces renders a hidden fields with name=""form:_idcl"" that allow submit through javascript. The default behavior should not have this. 

The suggestion is create a param

org.apache.myfaces.RENDER_CLEAR_JAVASCRIPT_FOR_BUTTON

by default false but when set to true it renders the javascript.",MYFACES-1849
"The new JSF (1.2.2) outputs a nice formatted exception message (with session variables, view and full stacktrace).
But when I get error in the page caused by JSP, I simply see a blank page (I am able to see the exception itself in the console ...)",MYFACES-1848
"Affected version: myfaces-impl-1.1.6-SNAPSHOT.jar


We have an web application which used myfaces,tomahawk and freemarker. The manin page of the application is been divided into 3 parts (Top Menu links), Tree menu (Left frame) and selected page to be displayed on the right side frame.

During the module test, we observed that myfaces is creating two serialized views. One for the left side tree2 menu jsf and the other for right side content jsf corresponding to the report item selected. Since the default number of views in the session is 20, myfaces will remove the weak referenced view if the number of views in the session exceeds the threshold. So we have done some regression on the tree menu items which had created more than 20 views. But the wierd thing is, it has removed the serialized view of the tree2 jsf in the mid of regression which was created in the initial stage and supposed to be made available in the map and to be restored when the other report menu items are selected. Due to this bug, our application is displaying the tree2 menu in the right side frame as well. We have to refresh/reload the page to get out of this issue.

When the other report items are selected, the application is trying to get the view from the serialized map but due to the bug in the code it's unable to find the view which was removed earlier and prints the message 

Exiting restoreTreeStructure - No serialized view found in server session!

Below is the suspected code snippet from JspStatemanagerImpl$SerializedViewCollection class

	while (_keys.remove(key)) ;
	_keys.add(key);

	int views = getNumberOfViewsInSession(context);
	
	while (_keys.size() > views) {
	key = _keys.remove(0);//View will be removed here


	Object oldView = _serializedViews.remove(key);
	
		if (oldView != null) {
		    getOldSerializedViewsMap().put(key, oldView);
		}
	


	}

Did anyone ever faced the same issue and managed to fix?


I hope someone out there might be able to help me out of this issue. I understand that there were some out of memory and perfomance issues in JspStatemanagerImpl of release myfaces-impl-1.1.6-SNAPSHOT which was fixed in myfaces-impl-1.2.X. But to use myfaces-impl-1.2.X, we should run the application in a server which supports JSP 2.1. We are using weblogic 9.2 which has JSP 2.0 container.

I am currently working on this issue to avoid removing the view which is to be restored later for release myfaces-impl-1.1.6-SNAPSHOT.

Let me know if further details required.
Would greatly appreciate if anyone help me out on this.
",MYFACES-1847
"
On myfaces 1.1 it is possible to  add hidden input fields to be rendered at the end of the form using

HtmlFormRendererBase.addHiddenCommandParameter(FacesContext, UIComponent, String)

On myfaces 1.2 this not work anymore. 

This function is used for some components in tomahawk

The better for now is let this work as 1.1 and then try to move this to tomahawk (another issue), maybe creating a renderkit for tomahawk and use a delegate pattern to override the renderer for h:form (myfaces and jsf ri has different renderer classes) to add the required hidden fields.",MYFACES-1846
"Given the following snippet, MyFaces should be rendering both the date and time but only renders the date.

<h:outputText value=""#{MyBean.someTime}"">
	<f:convertDateTime dateStyle=""full"" timeStyle=""full"" />
</h:outputText>

According to the spec, if type is not specified:
■ if dateStyle is set and timeStyle is not, type defaults to date
■ if timeStyle is set and dateStyle is not, type defaults to time
■ if both dateStyle and timeStyle are set, type defaults to both

The 1.2.2 implemtation always returns date.  I believe the problem is in the getType method of javax.faces.convert.DateTimeConverter.

Currently, anytime _type is null, its returning TYPE_DATE.  
        return _type != null ? _type : TYPE_DATE;

What might better comply with the spec would be to do something like this:
        if(_type == null){
    		if(_dateStyle != null && _timeStyle != null){
           		return TYPE_BOTH;
        	}else if(_timeStyle != null){
        		return TYPE_TIME;
        	}else {
        		return TYPE_DATE;
        	}    		
    	}
        return _type;

I've tested this code locally and it does fix the above behavior.  ",MYFACES-1845
"The following code

    <h:form id=""form1"" prependId=""false"">

        <t:commandButton id=""test1"" value=""Test""/>

        <h:commandButton value=""Test""/>

    </h:form>

should result clientId's for buttons without form1. now it set null:test1 and null:j_id_jsp_1599505473_4

The fix is doing this on UIComponentBase:


        if (namingContainer != null)
        {
            String containerClientId = namingContainer.getContainerClientId(context); 
            if (containerClientId != null )
            {
                _clientId = containerClientId + NamingContainer.SEPARATOR_CHAR + id;
            }
            else
            {
                _clientId = id;
            }
        }
",MYFACES-1844
"When you load a new application and some time has passed, this message appears on the log:

SEVERE: Error during configuration clean-upnull

The error description using e.printStackTrace on org.apache.myfaces.config.FacesConfigurator.update()

java.lang.reflect.InvocationTargetException
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
    at java.lang.reflect.Method.invoke(Method.java:597)
    at org.apache.myfaces.config.FacesConfigurator.purgeConfiguration(FacesConfigurator.java:237)
    at org.apache.myfaces.config.FacesConfigurator.update(FacesConfigurator.java:214)
    at org.apache.myfaces.lifecycle.LifecycleImpl.execute(LifecycleImpl.java:72)
    at javax.faces.webapp.FacesServlet.service(FacesServlet.java:148)
    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
    at org.apache.myfaces.webapp.filter.ExtensionsFilter.doFilter(ExtensionsFilter.java:147)
    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
    at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
    at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:175)
    at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:128)
    at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
    at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
    at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:286)
    at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:844)
    at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:583)
    at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:447)
    at java.lang.Thread.run(Thread.java:619)
Caused by: java.lang.IllegalStateException: The runtime config instance which is created while initialize myfaces must be set through ApplicationImpl.setInitializingRuntimeConfig
    at org.apache.myfaces.application.ApplicationImpl.internalGetRuntimeConfig(ApplicationImpl.java:134)
    at org.apache.myfaces.application.ApplicationImpl.<init>(ApplicationImpl.java:127)
    at org.apache.myfaces.application.ApplicationFactoryImpl.createAndLogNewApplication(ApplicationFactoryImpl.java:48)
    at org.apache.myfaces.application.ApplicationFactoryImpl.purgeApplication(ApplicationFactoryImpl.java:53)
    ... 23 more

Myfaces has a feature controlled by the param org.apache.myfaces.CONFIG_REFRESH_PERIOD, that update the configuration when the refresh period has been reached since las update.

This problem is caused by the behavior of this variable:

public class ApplicationImpl extends Application
{

    // recives the runtime config instance during initializing
    private final static ThreadLocal<RuntimeConfig> initializingRuntimeConfig = new ThreadLocal<RuntimeConfig>();

this is a variable local per thread, but on a web container you don't control what thread are accessing this variable. The result is when he try to refresh the configuration with a different thread, this variable is null, so the call of the constructor ApplicationImpl() fails.

The solution is instead this:

    private static RuntimeConfig internalGetRuntimeConfig()
    {
        if (initializingRuntimeConfig.get() == null)
        {
            throw new IllegalStateException(""The runtime config instance which is created while initialize myfaces ""
                    + ""must be set through ApplicationImpl.setInitializingRuntimeConfig"");
        }
        return initializingRuntimeConfig.get();
    }

do this:

    private static RuntimeConfig internalGetRuntimeConfig()
    {
        if (initializingRuntimeConfig.get() == null)
        {
            //It may happen that the current thread value
            //for initializingRuntimeConfig is not set 
            //(note that this value is final, so it just 
            //allow set only once per thread).
            //So the better for this case is try to get
            //the value using RuntimeConfig.getCurrentInstance()
            //instead throw an IllegalStateException (only fails if
            //the constructor is called before setInitializingRuntimeConfig).
            //From other point of view, AbstractFacesInitializer do 
            //the same as below, so there is not problem if
            //we do this here and this is the best place to do
            //this.
            //log.info(""initializingRuntimeConfig.get() == null, so loading from ExternalContext"");
            ApplicationImpl.setInitializingRuntimeConfig(
                    RuntimeConfig.getCurrentInstance(
                            FacesContext.getCurrentInstance()
                            .getExternalContext()));

            //throw new IllegalStateException(""The runtime config instance which is created while initialize myfaces ""
            //        + ""must be set through ApplicationImpl.setInitializingRuntimeConfig"");
        }
        return initializingRuntimeConfig.get();
    }

With this code we ensure correct initialization of this value, like in AbstractFacesInitializer
",MYFACES-1843
"When I have a commandLink element with a parameter, and double click on the link, I get different behavior in IE and Firefox.

IE submits the expected query string on the first click, but on the second click generates a query string with the parameter listed twice, both times with the correct value, in its name value pairs.

Firefox submits the expected query string on both clicks.

The culprit may be the oamSubmitForm javascript.",MYFACES-1842
"HtmlFormRenderer is the class in charge of rendering the UIForm component and all the required attibutes.
This class is in charge of rendering  for example the Form component  tinto <form id=""foo"" name=""bar"" action=/HelloWorldJSFPortletWindow?action=1&org.apache.myfaces.portlet.MyFacesGenericPortlet.VIEW_ID=%2FWEB-INF%2Fjsp%2Findex. .....> </form>

During the rendering process the form renderer uses  HtmlResponseWriterImpl.writeURIAttribute to write the ""action"" attribute of the form component.

Generally speaking the action attribute should be acquired using ""context.getApplication().getViewHandler().getActionURL(context, viewid))"" and the result  MUST be encoded using ""context.getExternalContext().encodeActionURL"" before passing the url to the ""HtmlResponseWriterImpl.writeURIAttribute(URL);"" This way the URL will be well formed and will be correctly encoded in the action attribute.

Even if the HtmlFormRendererBase for example correctly implements this process the resulting URL is encoded in the action attribute without correctly transforming ""&"" in ""&amp"". 

At this point we can argue that this bug could be generated by two different sources:

1. Not correct URL encding perfomed by javax.faces.context.FacesContext  during  context.getExternalContext().encodeActionURL[this is non related to myfaces and probably depend on the PortletResponse object implemented by the container JBOSS portal in this case]
2. Nor correct URI encoding within HtmlResponseWriterImpl.writeURIAttribute(URL) [related to myfaces]

Analyzing the source code of the latter i noticed that writeURIAttribute(URL) internally calls the HTMLEncoder.encode method to perform string encoding if the URI starts with the ""javascript"" prefix otherwise does not perform any kind of encoding.
Probably this is a bug bacause an enforcment of URI encoding rules should be provided in any case;





",MYFACES-1841
"tested with the generated archetype demo application:

page2.jsp -> helloWorld.jsp
-> request scoped beans are created twice
+ additional creation of previous events (within the demo app: the action method 'send' is used only within helloWorld.jsp - however, it gets called again)
",MYFACES-1840
This issue is about applying the new and redesigned MyFaces Maven skin provided by Adonis to MyFaces.,MYFACES-1839
"I keep getting this exception from time to time when moving between pages:

javax.faces.FacesException: javax.crypto.BadPaddingException: Given final block not properly padded
	at org.apache.myfaces.shared_impl.util.StateUtils.symmetric(StateUtils.java:373)
	at org.apache.myfaces.shared_impl.util.StateUtils.symmetric(StateUtils.java:411)
	at org.apache.myfaces.shared_impl.util.StateUtils.decrypt(StateUtils.java:291)
	at org.apache.myfaces.shared_impl.util.StateUtils.reconstruct(StateUtils.java:240)
	at org.apache.myfaces.renderkit.html.HtmlResponseStateManager.getSavedState(HtmlResponseStateManager.java:184)
	at org.apache.myfaces.renderkit.html.HtmlResponseStateManager.getState(HtmlResponseStateManager.java:136)
	at org.apache.myfaces.application.jsp.JspStateManagerImpl.restoreView(JspStateManagerImpl.java:289)
	at org.apache.myfaces.application.jsp.JspViewHandlerImpl.restoreView(JspViewHandlerImpl.java:505)
	at org.apache.myfaces.lifecycle.RestoreViewExecutor.execute(RestoreViewExecutor.java:85)
	at org.apache.myfaces.lifecycle.LifecycleImpl.executePhase(LifecycleImpl.java:103)
	at org.apache.myfaces.lifecycle.LifecycleImpl.execute(LifecycleImpl.java:76)
	at javax.faces.webapp.FacesServlet.service(FacesServlet.java:148)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at com.vdo.admin.model.persistence.OpenSessionInViewFilterIC.doFilterInternal(OpenSessionInViewFilterIC.java:155)
	at com.vdo.admin.model.persistence.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:61)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.myfaces.webapp.filter.ExtensionsFilter.doFilter(ExtensionsFilter.java:147)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:175)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:128)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:263)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:844)
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:584)
	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:447)
	at java.lang.Thread.run(Thread.java:619)
Caused by: javax.crypto.BadPaddingException: Given final block not properly padded
	at com.sun.crypto.provider.SunJCE_f.b(DashoA13*..)
	at com.sun.crypto.provider.SunJCE_f.b(DashoA13*..)
	at com.sun.crypto.provider.DESCipher.engineDoFinal(DashoA13*..)
	at javax.crypto.Cipher.doFinal(DashoA13*..)
	at org.apache.myfaces.shared_impl.util.StateUtils.symmetric(StateUtils.java:369)
	... 30 more
",MYFACES-1838
"    protected Validator createValidator() throws javax.servlet.jsp.JspException
    {
        Thread.dumpStack();
        if (_validatorIdString != null)
        {
            return this.createClassicValidator();
        }        
        if (_validatorId != null && _validatorId.isLiteralText())
        {
            return this.createClassicValidator();
        }        
        
        return new DelegateValidator(_validatorId, _binding,
                _validatorIdString);
    }",MYFACES-1837
"Using
<f:convertDateTime type=""date"" timeZone=""CET""/>
type=date is ignored and type=time is used, because of setConvertType in org.apache.myfaces.taglib.core.ConvertDateTimeTag

private void setConverterType(ELContext elContext,
                                             DateTimeConverter converter,
                                             ValueExpression value)
        {
            if (value == null) return;

            String type = (String) UIComponentELTagUtils.evaluateValueExpression(elContext, value);

            if (type == null)
            {
                type = DEFAULT_TYPE;
            }
            else
            {
                if (_dateStyle != null) {
                    type = TYPE_BOTH;
                } else {
                    type = TYPE_TIME;
                }
           }

            converter.setType(type);
        }",MYFACES-1836
MessageUtilsTest uses autoboxing,MYFACES-1835
"In core 1.2 to 1.2.2, any use of jsp:include causes the ids of components in the included file to have a random string appended to them.

This results in some ugly ids. However more significantly, the id of a component is not predictable even when an id attribute is explicitly assigned.

In addition, this breaks the tomahawk forceId feature, because although the namespace prefix is omitted the rest of the id changes making ""forceId"" useless.

The cause is class UIComponentClassicTagBase, where checkIfItIsInAnIterator() returns true if the current component is in an included or forwarded page. Later, the createUniqueId method adds a suffix to the user-specified if member isInAnIterator is true.

Unfortunately, documentation on why things are implemented as they are is lacking.

Checking for iteration is needed to support
  <c:forEach ..>
   <h:inputText id=""name""/>
  </c:forEach>

Checking for includedOrForwarded might be to allow:
    <jsp:include page=""subPage.jsp"" />
    <jsp:include page=""subPage.jsp"" />

However this is a very rare usage; support for this should not hurt everyone.

And Sun Mojarra does *not* mess with the ids like this...testing shows
that the ids of components are the same regardless of whether they are
inline or in an included file.

Maybe the ""isInIterator"" check could look to see whether the *same file* is being included twice, eg by keeping a list of the files included so far, and returning true only if the same string is encountered twice? That would allow multiple inclusions, but not mess with ids for a single inclusion.",MYFACES-1834
"In UIComponentBase.broadcast(FacesEvent event) catches all Exceptions & rethrows a FacesException
",MYFACES-1833
"there is a bug into myfaces 1.1.5 and up..... 

on a page as it:

<h:form>                                                                            
                 <h:commandLink action=""#{Action.execute}"">
                    <h:outputText value=""some""/>
                    <f:param name=""id"" value=""#{instance.id}""/>
                 </h:commandLink>
</h:form> 

using <f:param name=""id"" value=""#{instance.id}""> tag inside <h:commandLink> , I see that instance.id value has a bad encoding... if I use a word with special characters as à, è, ù, ì as instance.id for example 'modalità' , it is encoded into 'modalit&amp;#224' instead of 'modalit&agrave' . When I click on link through command link, that id cannot to be decoded and so cannot to work with the real value ofinstance.id",MYFACES-1832
"In testing I have found that t:updateActionListener works fine with MyFaces 1.1.x but is ignored with MyFaces 1.2.3-SNAPSHOT

After debugging, I found that UIComponentClassicTagBase.getCreated is always returning true. This means that UpdateActionListenerTag always thinks its parent component is already configured, so does not attach an UpdateActionListener instance to it.",MYFACES-1831
"This problem is related of MYFACES-1504, but in this case is for Myfaces 1.2",MYFACES-1830
"JBoss portal is using idenityt portlet to regster new users and edit  profiles for existing users
I added new my own JSF validator to the identty portlet which when opened throws the following exception:

java.lang.ClassCastException: com.kachanov.test004.validators.MyValidator cannot be cast to javax.faces.validator.Validator
	at org.apache.myfaces.application.ApplicationImpl.createValidator(ApplicationImpl.java:613)

The code of my validator is:

==========================================================
package com.kachanov.test004.validators;

import javax.faces.application.FacesMessage;
import javax.faces.component.UIComponent;
import javax.faces.context.FacesContext;
import javax.faces.validator.Validator;
import javax.faces.validator.ValidatorException;

public class MyValidator implements Validator {

	public void validate(FacesContext arg0, UIComponent arg1, Object arg2) throws ValidatorException {
		
		System.out.println(""testing this validator"");
	}
}

==========================================================

So please thell me how can it bee that a class that implements Validator cannot be cast to javax.faces.validator.Validator??????
Is in't it against basic design of Java languages?",MYFACES-1829
"
In myfaces 1.1, it was possible to have a method on the component like this

    public void handleBindings()
    {
        makeAliases(getFacesContext());

        RestoreStateUtils.recursivelyHandleComponentReferencesAndSetValid(getFacesContext(), this, true);

        removeAliases(getFacesContext());
    }

This is called from RestoreView state to handle the bindings properly. In myfaces 1.2, architectural changes (creation on RestoreViewSupport interface) replaced the original code with this:

    public void processComponentBinding(FacesContext facesContext, UIComponent component)
    {
        ValueExpression binding = component.getValueExpression(""binding"");
        if (binding != null)
        {
            binding.setValue(facesContext.getELContext(), component);
        }
        
        for (Iterator<UIComponent> iter = component.getFacetsAndChildren(); iter.hasNext();)
        {
            processComponentBinding(facesContext, iter.next());
        }
    }

Some changes are necessary on RestoreStateUtils.recursivelyHandleComponentReferencesAndSetValid (not set UIInput components valid = true) to make this work as 1.1 with the advantage of aliasBean component can work like 1.1.

",MYFACES-1828
"Using MessageUtils to generate FacesMessages from ResourceBundle like:

my.message.key=Your current balance is {0,number,currency}

Doesn't work out for other locales than the default one. Internally MessageUtils uses MessageFormat to do substitution. Due to wrong handling
the given Locale won't be used correctly leading to wrong currency symbols and formatting in for example t:messages.

The provided patch includes the fix, as well as two testcases to reproduce the problem.

BTW: is there any JSF-API way to have resource bundle entries read via MessageFormat?
",MYFACES-1827
"The line when occurs an error of Lenght validation says:

Validierungsfehler: Der Wert ist größer als das erlaubte Maximum von '5'

It should say:

Validierungsfehler: Die Länge des Werts ist größer als das erlaubte
Maximum von '5' Zeichen


",MYFACES-1826
"Some duplicate id are not detected in my MyFaces(1.1.5)/Facelets(1.1.12) based application.

I think there's a bug in MyFaces's detection of duplicate ids in JspStateManagerImpl.checkForDuplicateIds() : 

this code seems to be wrong :
        boolean namingContainer = component instanceof NamingContainer;
        while (it.hasNext()) {
            UIComponent kid = (UIComponent) it.next();
            if (namingContainer) {
                checkForDuplicateIds(context, kid, new HashSet());
            }
            else {
                checkForDuplicateIds(context, kid, ids);
            }
        }


It should be :
        while (it.hasNext()) {
            UIComponent kid = (UIComponent) it.next();
            boolean namingContainer = kid instanceof NamingContainer;
            if (namingContainer) {
                checkForDuplicateIds(context, kid, new HashSet());
            }
            else {
                checkForDuplicateIds(context, kid, ids);
            }
        }
",MYFACES-1825
"${version} is a deprecated maven property. It should be changed to ${pom.version} or ${project.version}.

Matches (grep style output):
./shared/shared-tomahawk/pom.xml:41:                  <version>${version}</version>
./shared/shared-orchestra/pom.xml:41:                  <version>${version}</version>
./shared/shared-impl/pom.xml:41:                  <version>${version}</version>
./core/assembly/pom.xml:43:                  <version>${version}</version>
./core/assembly/pom.xml:50:                  <version>${version}</version>
./core/assembly/pom.xml:69:                  <version>${version}</version>
./core/assembly/pom.xml:88:                  <version>${version}</version>
./core/assembly/pom.xml:94:                  <version>${version}</version>
./core/assembly/pom.xml:118:          <finalName>myfaces-core-${version}</finalName>
./core/assembly/pom.xml:144:      <version>${version}</version>
./core/assembly/pom.xml:150:      <version>${version}</version>
./tomahawk/sandbox/assembly/pom.xml:42:                                    <version>${version}</version>
./tomahawk/sandbox/assembly/pom.xml:62:                                    <version>${version}</version>
./tomahawk/sandbox/assembly/pom.xml:81:                                    <version>${version}</version>
./tomahawk/sandbox/assembly/pom.xml:98:                                    <version>${version}</version>
./tomahawk/sandbox/assembly/pom.xml:117:                    <finalName>tomahawk-sandbox-${version}</finalName>
./tomahawk/sandbox/assembly/pom.xml:155:            <version>${version}</version>
./tomahawk/sandbox/core/pom.xml:30:            <version>${version}</version>
./tomahawk/sandbox/examples/assembly/pom.xml:40:                                    <version>${version}</version>
./tomahawk/sandbox/examples/assembly/pom.xml:57:                    <finalName>tomahawk-sandbox-examples-${version}</finalName>
./tomahawk/sandbox/examples/pom.xml:45:                                            <version>${version}</version>
./tomahawk/sandbox/examples/pom.xml:281:            <version>${version}</version>
./tomahawk/assembly/pom.xml:43:                  <version>${version}</version>
./tomahawk/assembly/pom.xml:61:                  <version>${version}</version>
./tomahawk/assembly/pom.xml:79:                  <version>${version}</version>
./tomahawk/assembly/pom.xml:98:                  <version>${version}</version>
./tomahawk/assembly/pom.xml:124:          <finalName>tomahawk-${version}</finalName>
./tomahawk/assembly/pom.xml:149:      <version>${version}</version>
./tomahawk/examples/blank/pom.xml:43:                                            <version>${version}</version>
./tomahawk/examples/simple/pom.xml:43:                                            <version>${version}</version>
./tomahawk/examples/assembly/pom.xml:39:                                    <version>${version}</version>
./tomahawk/examples/assembly/pom.xml:45:                                    <version>${version}</version>
./tomahawk/examples/assembly/pom.xml:51:                                    <version>${version}</version>
./tomahawk/examples/assembly/pom.xml:57:                                    <version>${version}</version>
./tomahawk/examples/assembly/pom.xml:74:                    <finalName>tomahawk-examples-${version}</finalName>
./tomahawk/examples/tiles/pom.xml:43:                                            <version>${version}</version>
./tomahawk/examples/wap/pom.xml:43:                                            <version>${version}</version>
./tomahawk/examples/pom.xml:61:                    <version>${version}</version>
./tomahawk/sandbox15/core/pom.xml:30:            <version>${version}</version>
./tomahawk/sandbox15/core/pom.xml:37:            <version>${version}</version>
./tomahawk/sandbox15/examples/pom.xml:45:                                            <version>${version}</version>
./tomahawk/sandbox15/examples/pom.xml:190:            <version>${version}</version>
./tomahawk/sandbox15/examples/pom.xml:195:            <version>${version}</version>
",MYFACES-1823
"Facelets can be used in DEVELOPMENT mode by setting the facelets.DEVELOPMENT parameter to ""true"" (i.e., <context-param><param-name>facelets.DEVELOPMENT</param-name><param-value>true</param-value></context-param> in web.xml).

In combination with MyFaces 1.2.0 and earlier, DEVELOPMENT mode can be enabled and disabled as expected.

In combination with MyFaces 1.2.2, DEVELOPMENT mode is always enabled, independent of the facelets.DEVELOPMENT parameter being ""true"" or ""false"".",MYFACES-1822
"rendered IDs on client are not ""formName:componentName"" shaped by given IDs. It looks like ""formNamej_id_1:componentNamej_id_1"" which makes my javascripts useless... Are there known workarounds?",MYFACES-1821
"The problem is method FacesContext.getELContext. JSF1.2 added a method to this base class that was not there in JSF1.1. This makes life difficult for existing JSF1.1 code that already subclasses that class.

A default concrete implementation needs to exist, in order not to break existing JSF1.1 code, but (a) the current one gets it wrong, and (b) defining a correct one is difficult (impossible?)

(1) Stan Silvert initially defined this method like this:

// The following concrete method was added for JSF 1.2.  
// It supplies a default 
// implementation that throws UnsupportedOperationException.  
// This allows old FacesContext implementations to still work.
public ELContext getELContext() {
    throw new UnsupportedOperationException();
}

(2) Dennis Byrne changed it to its current form:

public ELContext getELContext() {
  FacesContext ctx = getCurrentInstance();

  if (ctx == null)
      throw new NullPointerException(FacesContext.class.getName());

  ELContext elctx = ctx.getELContext();

  if (elctx == null)
      throw new UnsupportedOperationException();

  return elctx;
}


However (2) assumes that custom subclasses never set themselves as the current instance, instead only ever *delegating* to the ""real"" instance.
If someone's custom subclass of FacesContext ever calls setCurrentInstance(this), then an infinite loop will occur here.

And in fact, this is just what we get:

java.lang.StackOverflowError
	at java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal.java:357)
	at java.lang.ThreadLocal$ThreadLocalMap.access$000(ThreadLocal.java:242)
	at java.lang.ThreadLocal.get(ThreadLocal.java:127)
	at javax.faces.context.FacesContext.getCurrentInstance(FacesContext.java:98)
	at javax.faces.context.FacesContext.getELContext(FacesContext.java:35)
	at javax.faces.context.FacesContext.getELContext(FacesContext.java:40)
	at javax.faces.context.FacesContext.getELContext(FacesContext.java:40)
	at javax.faces.context.FacesContext.getELContext(FacesContext.java:40)
	at javax.faces.context.FacesContext.getELContext(FacesContext.java:40)
	at javax.faces.context.FacesContext.getELContext(FacesContext.java:40)
	at javax.faces.context.FacesContext.getELContext(FacesContext.java:40)
	at javax.faces.context.FacesContext.getELContext(FacesContext.java:40)
	at javax.faces.context.FacesContext.getELContext(FacesContext.java:40)
	at javax.faces.context.FacesContext.getELContext(FacesContext.java:40)
	at javax.faces.context.FacesContext.getELContext(FacesContext.java:40)",MYFACES-1820
"On jsf 1.1, code like this (taken from tomahawk examples displayValueOnly.jsp):

bean:

public class DVOFace implements Serializable
{

    /**
     * serial id for serialisation versioning
     */
    private static final long serialVersionUID = 1L;

    private boolean attribute = true;
    
    private Map map = new HashMap(){

        /**
         * serial id for serialisation versioning
         */
        private static final long serialVersionUID = 1L;

        public Object get(Object key){
    		Object held = super.get( key );
    		if( held != null )
    			return held;
    		if( key.toString().toLowerCase().indexOf(""list"")>0 )
    			return new ArrayList();
    		
    		return null;	
    	}
    };

	public boolean isAttribute() {
		return attribute;
	}
	public void setAttribute(boolean attribute) {
		this.attribute = attribute;
	}
	public Map getMap() {
		return map;
	}
	public void setMap(Map map) {
		this.map = map;
	}
}

page:

	        <h:selectManyCheckbox id=""selectManyCheckbox"" value=""#{dvoFace.map['selectManyCheckboxList']}""
			  	<f:selectItem itemLabel=""Value 1"" itemValue=""1""/>
			  	<f:selectItem itemLabel=""Value 2"" itemValue=""2""/>
			  	<f:selectItem itemLabel=""Value 3"" itemValue=""3""/>
	        </h:selectManyCheckbox>

throws the following exception:

javax.faces.FacesException: Exception while calling encodeEnd on component : {Component-Path : [Class: javax.faces.component.UIViewRoot,ViewId: /displayValueOnly.jsp][Class: javax.faces.component.html.HtmlForm,Id: form][Class: javax.faces.component.html.HtmlPanelGrid,Id: firstGrid]}
	at javax.faces.component.UIComponentBase.encodeEnd(UIComponentBase.java:559)
	at javax.faces.component.UIComponent.encodeAll(UIComponent.java:250)
	at javax.faces.component.UIComponent.encodeAll(UIComponent.java:246)
	at javax.faces.component.UIComponent.encodeAll(UIComponent.java:246)
	at org.apache.myfaces.application.jsp.JspViewHandlerImpl.actuallyRenderView(JspViewHandlerImpl.java:423)
	at org.apache.myfaces.application.jsp.JspViewHandlerImpl.renderView(JspViewHandlerImpl.java:380)
	at org.apache.myfaces.lifecycle.RenderResponseExecutor.execute(RenderResponseExecutor.java:41)
	at org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:140)
	at javax.faces.webapp.FacesServlet.service(FacesServlet.java:152)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.myfaces.webapp.filter.ExtensionsFilter.doFilter(ExtensionsFilter.java:147)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:175)
	at org.apache.catalina.valves.RequestFilterValve.process(RequestFilterValve.java:269)
	at org.apache.catalina.valves.RemoteAddrValve.invoke(RemoteAddrValve.java:81)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:128)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:263)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:844)
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:584)
	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:447)
	at java.lang.Thread.run(Thread.java:619)
Caused by: javax.faces.FacesException: Exception while calling encodeEnd on component : {Component-Path : [Class: javax.faces.component.UIViewRoot,ViewId: /displayValueOnly.jsp][Class: javax.faces.component.html.HtmlForm,Id: form][Class: javax.faces.component.html.HtmlPanelGrid,Id: firstGrid][Class: javax.faces.component.html.HtmlSelectManyCheckbox,Id: selectManyCheckbox]}
	at javax.faces.component.UIComponentBase.encodeEnd(UIComponentBase.java:559)
	at org.apache.myfaces.shared_impl.renderkit.RendererUtils.renderChild(RendererUtils.java:515)
	at org.apache.myfaces.shared_impl.renderkit.html.HtmlGridRendererBase.renderChildren(HtmlGridRendererBase.java:231)
	at org.apache.myfaces.shared_impl.renderkit.html.HtmlGridRendererBase.encodeEnd(HtmlGridRendererBase.java:102)
	at javax.faces.component.UIComponentBase.encodeEnd(UIComponentBase.java:556)
	... 25 more
Caused by: java.lang.IllegalArgumentException: ValueBinding for UISelectMany : {Component-Path : [Class: javax.faces.component.UIViewRoot,ViewId: /displayValueOnly.jsp][Class: javax.faces.component.html.HtmlForm,Id: form][Class: javax.faces.component.html.HtmlPanelGrid,Id: firstGrid][Class: javax.faces.component.html.HtmlSelectManyCheckbox,Id: selectManyCheckbox]} must be of type List or Array
	at org.apache.myfaces.shared_impl.renderkit.RendererUtils.findUISelectManyConverter(RendererUtils.java:448)
	at org.apache.myfaces.shared_impl.renderkit.html.HtmlCheckboxRendererBase.renderCheckboxList(HtmlCheckboxRendererBase.java:100)
	at org.apache.myfaces.shared_impl.renderkit.html.HtmlCheckboxRendererBase.encodeEnd(HtmlCheckboxRendererBase.java:65)
	at javax.faces.component.UIComponentBase.encodeEnd(UIComponentBase.java:556)
	... 29 more

Since in 1.1 this works, we have to make this works on 1.2 too 

The problem is in two classes:

org.apache.myfaces.shared.renderkit.RendererUtils

and

org.apache.myfaces.shared.renderkit._SharedRendererUtils

and

javax.faces.component._SharedRendererUtils

The following code (repeated on several situations):

        ValueExpression expression = component.getValueExpression(""value"");
        if (expression == null) return null;

        Class valueType = expression.getType(facesContext.getELContext());

expression.getType(facesContext.getELContext()) does not return the real value class. The doc says this:

""........Evaluates the expression relative to the provided context, and returns the most general type that is acceptable for an object to be passed as the value parameter in a future call to the setValue(javax.el.ELContext, java.lang.Object) method.......""

In the case it returns java.lang.Object, but it should be ArrayList. So is preferred to do something like this:

            Object value = expression.getValue(facesContext.getELContext()); 
            valueType = (value != null) ? value.getClass() :
                expression.getType(facesContext.getELContext()) ;



",MYFACES-1819
"JavascriptUtils.encodeString does not properly translate a single '\' backslash char into two ""\\"" backslash characters in order to properly escape the Javascript string.  The fix should be:

public static String encodeString(String string)
    {
        if (string == null)
        {
            return """";
        }
        StringBuffer sb = null;	//create later on demand
        String app;
        char c;
        for (int i = 0; i < string.length (); ++i)
        {
            app = null;
            c = string.charAt(i);
            switch (c)
            {
                case '\\' : app = ""\\\\"";  break; // NJH - Use double backslash as output for single backslash rather than  single backslash for single backslash
                case '""' : app = ""\\\"""";  break;
                case '\'' : app = ""\\'"";  break;
                case '\n' : app = ""\\n"";  break;
                case '\r' : app = ""\\r"";  break;
            }
            if (app != null)
            {
                if (sb == null)
                {
                    sb = new StringBuffer(string.substring(0, i));
                }
                sb.append(app);
            } else {
                if (sb != null)
                {
                    sb.append(c);
                }
            }
        }

        if (sb == null)
        {
            return string;
        }
        else
        {
            return sb.toString();
        }
    }
",MYFACES-1818
"
<f:validateLength maximum=""2"" minimum=""2""/> works on jsf ri 1.2 and on myfaces 1.1.5 but not on myfaces 1.2.2

The solution is do this on LengthValidatorTag

    protected boolean isMinLTMax()
    {
        return _min <= _max;
    }
",MYFACES-1817
"I noticed today strange behavior if I change the loglevel for myfaces. Some getters of backing beans are called although the rendered attribute of a parent component is false. It is caused by class DebugUtils.traceView.
I enabled logging via following setting: log4j.logger.org.apache.myfaces=DEBUG

Sample jsp:
<t:panelGroup rendered=""#{!empty requestScope['myflag']}"">
  <t:dataTable value=""#{myController.value}"" ...
</t:panelGroup>

myController.getValue() is now called if logging is enabled although myflag is not set in request scope.

This makes debugging difficult if the app behaves different depending on loglevel settings. Data can be uninitialized if the parent should not be rendered (or it will be lazy initialized on each request if BackingBean is request scope and not saved in the request). 

Therefore I would prefer to skip all components that should not be rendered from output.

I'll provide a patch as soon as possible (I 'l try this month)",MYFACES-1816
"Hello,

I have just upgraded from jsf 1.1.5 to 1.2.2 and it seems like all the resources returns empty response when using /faces/* as servlet mapping.

During the upgrade I made no changes to web.xml. It looks like this:
  <servlet>
    <servlet-name>Faces Servlet</servlet-name>
    <servlet-class>javax.faces.webapp.FacesServlet</servlet-class>    
    <load-on-startup>30</load-on-startup>    
  </servlet>  
  <servlet-mapping>
    <servlet-name>Faces Servlet</servlet-name>
    <url-pattern>/faces/*</url-pattern>
  </servlet-mapping>

The web application loaded successfully, but all the resources (images/js/stylesheets) seems to be broken.
I copied one of the images url to try and check a request to image directly. For example:
http://localhost:8080/myapp/faces/images/logo.jpg
and I got an empty response.
When I removed the faces:
http://localhost:8080/myapp/images/logo.jpg
the image was loaded ok.

I made further investigation and changed the mapping to: *.faces and it seemed to be working fine.

Thanks,
Guy.",MYFACES-1815
"In our log file, I see stack traces like
""
SEVERE: Servlet.service() for servlet FacesServlet threw exception
java.io.UnsupportedEncodingException: charset:UTF-8
	at java.lang.StringCoding.decode(StringCoding.java:170)
	at java.lang.String.<init>(String.java:444)
	at java.lang.String.<init>(String.java:516)
	at org.apache.catalina.connector.Request.setCharacterEncoding(Request.java:1478)
	at org.apache.catalina.connector.RequestFacade.setCharacterEncoding(RequestFacade.java:307)
	at javax.servlet.ServletRequestWrapper.setCharacterEncoding(ServletRequestWrapper.java:113)
	at org.apache.myfaces.context.servlet.ServletExternalContextImpl.setRequestCharacterEncoding(ServletExternalContextImpl.java:445)
	at javax.faces.application.ViewHandler.initView(ViewHandler.java:92)
	at org.apache.myfaces.lifecycle.RestoreViewExecutor.execute(RestoreViewExecutor.java:61)
	at org.apache.myfaces.lifecycle.LifecycleImpl.executePhase(LifecycleImpl.java:95)
	at org.apache.myfaces.lifecycle.LifecycleImpl.execute(LifecycleImpl.java:70)
	at javax.faces.webapp.FacesServlet.service(FacesServlet.java:137)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:654)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:447)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:379)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:292)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:424)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:343)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:144)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:104)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:261)
	at org.apache.jk.server.JkCoyoteHandler.invoke(JkCoyoteHandler.java:190)
	at org.apache.jk.common.HandlerRequest.invoke(HandlerRequest.java:283)
	at org.apache.jk.common.ChannelSocket.invoke(ChannelSocket.java:767)
	at org.apache.jk.common.ChannelSocket.processConnection(ChannelSocket.java:697)
	at org.apache.jk.common.ChannelSocket$SocketConnection.runIt(ChannelSocket.java:889)
	at org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:686)
	at java.lang.Thread.run(Thread.java:619)
""

The culprit is the system requesting ""charset:UTF-8"" instead of ""charset=UTF-8"".  Nevertheless, it may make sense for the calculateCharacterEncoding method in the ViewHandler class to not only parse ""=""s but also "":""s.",MYFACES-1814
"""ClassUtils.getResources(FACES_CONFIG_RESOURCE, this)"" will return an iterator over all ""META-INF/faces-config.xml"" resources that were found. The search is carried out by starting at WebAppClassLoader and making an Enumeration of all resources with the given name that WebAppClassLoader and all its parents see. The jars placed into WEB-INF/lib will be seen by the WebAppClassLoader AND AppClassLoader, thus resulting in the same jars (the ones that have ""META-INF/faces-config.xml"") being placed on the list twice. 

This is fine, but things break when FacesConfigurator.feedClassloaderConfigurations() does not check for duplicate URLs and just blindly registers everything from these jars twice. 

One of the effects of this bug is that all phase listeners get registered and therefore executed twice.",MYFACES-1812
"I have the following code in a facelets composition

	<h:form onsubmit=""return submitForm()"" id=""main"" enctype=""#{(empty encoding) ? 'application/x-www-form-urlencoded' : encoding}"">

Depending on how the form is used the enctype might need to be ""multipart/form-data""

I use the composition like so:

<ui:decorate xmlns=""http://www.w3.org/1999/xhtml""
	  xmlns:t=""http://myfaces.apache.org/tomahawk""
      xmlns:ui=""http://java.sun.com/jsf/facelets""
      xmlns:h=""http://java.sun.com/jsf/html""
      xmlns:f=""http://java.sun.com/jsf/core""
       template=""#{pqfn:absoluteStyle('homeTemplate.xhtml')}"">
	<ui:param name=""encoding"" value=""multipart/form-data"" />

This worked prior to MyFaces 1.2. It doesn't work in 1.2+ Looking at HtmlForm.java :

  // Property: enctype
  private String _enctype = ""application/x-www-form-urlencoded"";

  /**
   * Gets The content type used to submit this form to the server.
   *
   * @return  the new enctype value
   */
  public String getEnctype()
  {
    if (_enctype != null)
    {
      return _enctype;
    }
    ValueExpression expression = getValueExpression(""enctype"");
    if (expression != null)
    {
      return (String)expression.getValue(getFacesContext().getELContext());
    }
    return ""application/x-www-form-urlencoded"";
  }

As enctype is initialized in it's declaration it is never null. Therefore the ValueExpression is never evaluated. This means the enctype cannot be set using an EL Expression in the page.

I'm not sure if this is a bug against HtmlForm, or the maven-faces-plugin that is generating this class.",MYFACES-1811
"Following classes in myfaces-core-1.1.5 are referencing javax/servlet/jsp/el/ELException which was introduced in JSP 2.0.
WebLogic 8.1 SP6 only supports JSP 1.2 and Servlet 2.3 and per requirements should run on the selected app server. 
See http://myfaces.apache.org/core11/index.html

Additionally, jstl-1.1.0.jar is shipped with libraries. Should be JSTL 1.0 to run on selected server.

Classes referencing javax/servlet/jsp/el/ELException: 
myfaces-core-1.1.5\src\org\apache\myfaces\shared_impl\util\ClassUtils.java
myfaces-core-1.1.5\src\org\apache\myfaces\el\ELParserHelper.java
myfaces-core-1.1.5\src\org\apache\myfaces\el\MethodBindingImpl.java
myfaces-core-1.1.5\src\org\apache\myfaces\el\ValueBindingImpl.java
",MYFACES-1810
"Hi,

If a Trinidad form is used with HtmlCommandLinks, links are rendered, but link-parameters are ignored.

Regards,
Martin Haimberger",MYFACES-1809
"I run the following view in a portlet (Liferay 4.3.5). I also have a navigation rule for the ""back"" action.
simple page:
   <%@ taglib uri=""http://java.sun.com/jsf/core"" prefix=""f"" %>
   <%@ taglib uri=""http://java.sun.com/jsf/html"" prefix=""h"" %>

   <f:view>
      <f:loadBundle basename=""Language"" var=""msgs"" />
      <h:form id=""articleForm"">
         <h:outputText value=""ARTICLE"" />
         <h:commandLink action=""back"" value=""back""/>
      </h:form>
</f:view>


In the rendered page, when I click on the link. Nothing happens. 

Debugging the code shows me that the form is not set to submitted in the restore phase. 
(org.apache.myfaces.shared_impl.renderkit.html.HtmlFormRenderBase, line 227 in version 1.1.5)

When clicking the link, the form is not submitted and the parameter articleForm_SUBMIT is not added to the request.

",MYFACES-1808
"HI,

i find out, that the forceId=""true"" attribute is not working with included subviews in MyFaces 1.2.1 SNAPSHOTS.

Is works fine with MyFaces 1.2.0.

SourceCode: login.jsp
<t:documentBody>
			<!-- Begin Header -->
			<jsp:include page=""/misc/header.jsp"" />
			<!-- End Header -->
			
			<!-- Begin HeaderMenu-->
			<jsp:include page=""/misc/headerMenu.jsp"" />
			<!-- End HeaderMenu-->
			
			<!-- Begin Content -->
			<t:div forceId=""true"" id=""content"">
				
				<jsp:include page=""/misc/loginFragment.jsp"" />
				
				<!-- Begin Links -->
				<jsp:include page=""/misc/links.jsp"" />
				<!-- End Links-->
				<t:div style=""clear: both;"">
					<f:verbatim>&nbsp;</f:verbatim>
				</t:div>
			</t:div>
			<!-- End Content -->
			
			<!-- Begin Footer -->
			<jsp:include page=""/misc/footer.jsp"" />
			<!-- End Footer -->
		</t:documentBody>

Source Code header.jsp:
<%@ taglib uri=""http://java.sun.com/jsf/core"" prefix=""f"" %>
<%@ taglib uri=""http://java.sun.com/jsf/html"" prefix=""h"" %>
<%@ taglib uri=""http://myfaces.apache.org/tomahawk"" prefix=""t"" %>
<f:subview  id=""header_view"">
	<t:div forceId=""true"" id=""header"">
		<f:verbatim><h1>CV Creator V1.0</h1>
		<h2>Free CV Creator Application</h2>
		</f:verbatim>
	</t:div>
</f:subview>


Generated HTML Code with MyFaces 1.2.0:

<html><head>
				<title>MyApplication Title</title>
			<link rel=""stylesheet"" type=""text/css"" href=""/myapplication/css/default.css"" /></head><body>
			<!-- Begin Header -->
			<div id=""header""><h1>MyApplication</h1>
		<h2>MyApplication</h2>

		</div>




			<!-- End Header -->

Generated HTML Code with MyFaces 1.2.1-SNAPSHOTS:


<html><head>
				<title>MyApplication Title</title>
			<link rel=""stylesheet"" type=""text/css"" href=""/myapplication/css/default.css"" /></head><body>
			<!-- Begin Header -->
			<div id=""headerj_id_1""><h1>MyApplication</h1>
		<h2>MyApplication</h2>

		</div>




			<!-- End Header -->

In the version 1.2.0 the ID of the div tag is ""header"" and with the SNAPSHOTS it is ""headerj_id_1"".

Regards
ETO",MYFACES-1807
"In a little bit complicated form using multiple PPR areas the datascroller attached to a datatable stopped working with InternetExplorer after the first ajax request.
MyFaces always sent the current page again.

It turned out that the code in oamSetHiddenInput is not fully compatible with InternetExplorer.

The problem is that even after adding the element to the form using javascript the check for it (typeof form.elements[name]=='undefined') still returns undefined.

After setting the id of the created element (beside of it's name) fixed this problem.",MYFACES-1805
"Situation: The user accesses a jsf page where a commandlink or commandButton starts a download, and other commandLinks or CommandButtons are present in the same form, using the internet explorer as a browser. The user e clicks on the download Button. Afterwards, the user clicks on any other button in the same form.

Observed behaviour: The previous download is started again, regardless of the action associated with the button

Expected behaviour: The action associated with the button should be executed

Analysis: The error originates in the generated javascript function oamSetHiddenInput(formname, name, value). In this function, it is checked whether the hidden input already exists, using the javascript code 
if(typeof form.elements[name]=='undefined')
This works fine in the Internet explorer as long as the hidden input was created in html. If the hidden input was created using javascript, e.g. by the code in the same function, the above condition returns true although the hidden input already exists. This results in creating a second hidden input field instead of replacing the value in the existing one. If the server only uses  the  value of the first(i.e. already existing) hidden input field, it gets the old value instead of the new one. In the end, myfaces reads the old value of the html parameter ${formName}:_idcl, and so the old action is executed instead of the new one.

Resolution: Accessing the hidden input via indices (form.elements[0], form.elements[1] ...) also works if the hidden input is created dynamically.

Note that the error does only occur if the page is not reloaded when the first button is pressed, so a special action as e.g. a download is needed to trigger the behaviour. 

I'd consider this to be a bug in IE, but as we cannot persuade all users to use a browser which is less buggy, a workaround should be implemented in myfaces. The error does not occur in Firefox.

As the implementation is in the myfaces_shared project, this affects both core and tomahawk.",MYFACES-1804
"According to the ""Web Accessibility Initiative (WAI)"" guidelines (http://www.w3.org/WAI/) for every <script> element there should also be a <noscript> element.
Although standard JSF apps won't function without Javascript, it is possibly to write accessible apps if the developer provides alternative paths (outputLinks instead of commandLinks, etc.) through the application.
Automated web accessibility check tools signal missing <noscript> elements as errors.
For most <script> elements we render in the JSF core now, it might be difficult or even impossible (eg commandLink) to automatically render alternative code that would work with scripting disabled. But anyway, we should at least render <noscript> elements that tell the user why the app does not run in his browser.
",MYFACES-1803
"The JSF 1.1 specification requires any implementation to support Java 1.3 and that's why the FacesException isn't allowed to utilize builtin exception chaining mechanisms (i.e. initCause(), etc..) as they have been introduced in Java 1.4. However, the FacesException retains it's cause by delegating to the parent's constructor (for example, ""super(cause);"" or ""super(message, cause);""). 

Although this bug is rather easy to fix, I've assigned the priority level 'Major' as it breaks the specification.",MYFACES-1802
"JSF navigation system offers 2 ways of work: Forward and redirect. The forward method is simply useless. Any decent web application must have correlation between browser url and the view that is being presented. On the other hand, when using forward it is impossible to pass parameters between pages. This makes the whole navigation system of JSF  simply useless (I never use it at all ...). Parameters between pages needed to be passed using url parameters. Needing to use session variables or any other weird solutions is simply not good since it makes the application more dependant.
If I have a page that should show some product, and the product id parameter is passed using session or any solution other than url parameter, then I totally dependant on the source from which I am directed to this page. This source of course must initialize the product id or some bean. This is very limiting (to my opinion and experience of course ...). With url parameters this problem never exists. Every page can stand for it's own and have it's own ""api"" defined by the parameters it should get in order to show the page. I can send users to this page from any source that I like, and even send this url by mail to some other users, and the page could be easily accessed with no problems.

I know this problem is simply the was JSF is designed, but I think this is the kind of problems that prevents from technologies being adopted.",MYFACES-1801
"I have been working with JSF for almost 3 years and I know this bug is simply the way JSF behaves, but still, the more I write web applications this problem is getting more and more annoying:
When a form is being submitted, the url parameters are not preserved.",MYFACES-1800
"The method javax.faces.validator.LengthValidator.getMaximum() returns Integer.MAX_VALUE if the maximum is not set. According to the JavaDoc on java.sun.com it should return 0 (""Return the maximum length to be enforced by this Validator, or 0 if the maximum has not been set."").",MYFACES-1799
"For example: With ""/myStrange.path/view.jsp"" the extension "".path/view.jsp"" will be derived.

In DefaultViewHandlerSupport a wrong regular expression is used to extract the extension.
I'll try to change this to a simple string.lastIndexOf('.') as this should do exactly what we want.
",MYFACES-1798
"The parameter org.apache.myfaces.CONFIG_REFRESH_PERIOD is never read, because the method getLongInitParameter will always throw a NumberFormatException. This happens because the parameter name is passed in to get parsed, not the value:

 ---->>>>> LINE 256 in MyfacesConfig.java

               return Long.parseLong(paramName);

<<<<<<------",MYFACES-1797
"FactoryFinder._registeredFactoryNames holds the Web application class loader as a key and thus prevents its collection when the application is undeployed.

The following patch fixes the issue (made in 1.1.5 branch):

Index: FactoryFinder.java
===================================================================
--- FactoryFinder.java  (revision 608034)
+++ FactoryFinder.java  (working copy)
@@ -40,7 +40,7 @@
     public static final String LIFECYCLE_FACTORY = ""javax.faces.lifecycle.LifecycleFactory"";
     public static final String RENDER_KIT_FACTORY = ""javax.faces.render.RenderKitFactory"";

-    private static Map _registeredFactoryNames = new HashMap();
+    private static Map _registeredFactoryNames = Collections.synchronizedMap(new HashMap());
     /**
      * Maps from classLoader to another map, the container (i.e. Tomcat) will create a class loader for
      * each web app that it controls (typically anyway) and that class loader is used as the key.
@@ -49,7 +49,7 @@
      * that are created via getFactory. The instances will be of the class specified in the setFactory method
      * for the factory name, i.e. FactoryFinder.setFactory(FactoryFinder.APPLICATION_FACTORY, MyFactory.class).
      */
-    private static Map _factories = new HashMap();
+    private static Map _factories = Collections.synchronizedMap(new HashMap());

     private static final Set VALID_FACTORY_NAMES = new HashSet();
     private static final Map ABSTRACT_FACTORY_CLASSES = new HashMap();
@@ -222,6 +222,7 @@
     {
         ClassLoader classLoader = getClassLoader();
         _factories.remove(classLoader);
+        _registeredFactoryNames.remove(classLoader);
     }

     private static void checkFactoryName(String factoryName)
",MYFACES-1796
"Cf. the MF mailing list: topics like ""Dialog issue during ADF->Trinidad migration""
I came across it using tr:inputDate but in the list topic I mentioned above, so I first thought it was a Trinidad issue, but people more knowledgeable with the JSF spec(Adam Winer) pointed out it was a MF 1.2 core issue, and that the Sun RI had also sufferend from it, yet in the RI, this bug has recently been corrected. 
The error I got was when clicking the calendar icon and expecting a cal popup. Instead I got: 
""description The requested resource (.../__ADFv__.jsp) is not available.""

As it potentially affects a lot of other components beyond this trinidad one, I marked it major as these components just don't work anymore.
E.g. MF mailing list with topic ""RE: [Trinidad] HTTP 404 (file not found) while using DialogFramework"" points that out.
--Wolf

",MYFACES-1795
"Cf. the MF mailing list: topics like ""Dialog issue during ADF->Trinidad migration""
I came across it using tr:inputDate but in the list topic I mentioned above, so I first thought it was a Trinidad issue, but people more knowledgeable with the JSF spec(Adam Winer) pointed out it was a MF 1.2 core issue, and that the Sun RI had also sufferend from it, yet in the RI, this bug has recently been corrected. 
The error I got was when clicking the calendar icon and expecting a cal popup. Instead I got: 
""description The requested resource (.../__ADFv__.jsp) is not available.""

As it potentially affects a lot of other components beyond this trinidad one, I marked it major as these components just don't work anymore.
E.g. MF mailing list with topic ""RE: [Trinidad] HTTP 404 (file not found) while using DialogFramework"" points that out.
--Wolf

",MYFACES-1794
"Cf. the MF mailing list: topics like ""Dialog issue during ADF->Trinidad migration""
I came across it using tr:inputDate but in the list topic I mentioned above, so I first thought it was a Trinidad issue, but people more knowledgeable with the JSF spec(Adam Winer) pointed out it was a MF 1.2 core issue, and that the Sun RI had also sufferend from it, yet in the RI, this bug has recently been corrected. 
The error I got was when clicking the calendar icon and expecting a cal popup. Instead I got: 
""description The requested resource (.../__ADFv__.jsp) is not available.""

As it potentially affects a lot of other components beyond this trinidad one, I marked it major as these components just don't work anymore.
E.g. MF mailing list with topic ""RE: [Trinidad] HTTP 404 (file not found) while using DialogFramework"" points that out.
--Wolf

",MYFACES-1793
"The problem with the current impementation is that you have to put the information for which view to use in the portlet context (equiv. servlet context). This is sufficient where you ship just one portlet per war, i.e. servlet context. It doesn't work when you put two portlets inside the same servlet context (to get communication between portlets working).

It would be much better to make the DefaultViewSelector see the portlet config by adding a function public void setPortletConfig(javax.portlet.PortletConfig cfg) to the interface. 

The PortletContet is accessable from the PortletConfig, thus the setPortletContext function can be deprecated.


A temporary solution to the problem is to override MyFacesGenericPortlet.init() and set the portletConfig after super.init().",MYFACES-1792
"There is a problem in JSF when more than one window are opened in an application. There are only a maximum number of NUMBER_OF_VIEWS_IN_SESSION  view states saved at one moment (when server side state saving is enabled).
If 2 windows are opened and you navigate on one of them for NUMBER_OF_VIEWS_IN_SESSION times, you will lose the other window's state. 

",MYFACES-1791
"According to the spec, the component type of the default h:column tag is supposed to be ""javax.faces.Column"", however HtmlColumnTag returns ""javax.faces.HtmlColumn"".",MYFACES-1790
"UIData do not honor first and row value binding in decode.

If rows= and first= points to a valueBinding during decode these values will not correctly taken by evaluating the valuebinding but the local literal values will be used.",MYFACES-1789
"The environments are:
 
(1)Windows2000(or window xp)
 
(2)Tomcat:6.0.14(setup by apache-tomcat-6.0.14.exe) or 5.5.25.
 
(3)Jjdk:1.5.0.14(we also test the program in jdk1.5.0,1.5.0_04,1.5.0_06)
 
When run the program trinidad-demo-1.2.4，we found it worked well in some PCs(windows xp or windows2000),but in other PCs(windows xp),there were some errors:
 
 
------------------------------------------------------------------------------
HTTP Status 500 -
type Exception report
message
description The server encountered an internal error () that prevented it from fulfilling this request.
exception
javax.servlet.ServletException: Servlet.init() for servlet faces threw exception
 org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:105)
 org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:148)
 org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:869)
 org.apache.coyote.http11.Http11BaseProtocol$Http11ConnectionHandler.processConnection(Http11BaseProtocol.java:664)
 org.apache.tomcat.util.net.PoolTcpEndpoint.processSocket(PoolTcpEndpoint.java:527)
 org.apache.tomcat.util.net.LeaderFollowerWorkerThread.runIt(LeaderFollowerWorkerThread.java:80)
 org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:684)
 java.lang.Thread.run(Unknown Source)
root cause
java.lang.IllegalStateException: No Factories configured for this Application. This happens if the faces-initialization does not work at all - make sure that you properly include all configuration settings necessary for a basic faces application and that all the necessary libs are included. Also check the logging output of your web application and your container for any exceptions!
If you did that and find nothing, the mistake might be due to the fact that you use some special web-containers which do not support registering context-listeners via TLD files and a context listener is not setup in your web.xml.
A typical config looks like this;
<listener>
  <listener-class>org.apache.myfaces.webapp.StartupServletContextListener</listener-class>
</listener>
 javax.faces.FactoryFinder.getFactory(FactoryFinder.java:90)
 javax.faces.webapp.FacesServlet.init(FacesServlet.java:88)
 org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:105)
 org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:148)
 org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:869)
 org.apache.coyote.http11.Http11BaseProtocol$Http11ConnectionHandler.processConnection(Http11BaseProtocol.java:664)
 org.apache.tomcat.util.net.PoolTcpEndpoint.processSocket(PoolTcpEndpoint.java:527)
 org.apache.tomcat.util.net.LeaderFollowerWorkerThread.runIt(LeaderFollowerWorkerThread.java:80)
 org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:684)
 java.lang.Thread.run(Unknown Source)
note The full stack trace of the root cause is available in the Apache Tomcat/6.0.14 logs.
Apache Tomcat/6.0.14 
 
 trinidad-demo-1.2.3 exists the same error,but trinidad-demo-1.0.4 runs well.
 
---------------------------------------------------------------------
We googled the errors for some days,somebodies met the errors also,but we did't found any helpful information.What's the matter?
 
",MYFACES-1788
"processColumnChildren  ignores value expressions for attributes first and rows and will process the entire dataModel regardless. 

The generated UIData should IMO be modified:

--- UIData.java.orginal Wed Dec 12 13:19:35 2007
+++ UIData.java Wed Dec 12 13:22:01 2007
@@ -586,8 +586,8 @@
      */
     private void processColumnChildren(FacesContext context, int processAction)

     {
-        int first = _first;
-        int rows = _rows;
+       int first = getFirst();
+       int rows = getRows();
         int last;
         if (rows == 0)
         {",MYFACES-1787
"According to the documentation of org.apache.myfaces.util.StateUtils ""To enable encryption, a secret must be provided. StateUtils looks first for the org.apache.myfaces.secret init param, then system properties. If a secret cannot be located, encryption is not used.""

This is the correct behaviour but in fact the isSecure() method of that class includes:

return ! ""false"".equals(ctx.getInitParameter(USE_ENCRYPTION));

This enables encryption in ALL cases except where the init parameter is PRESENT and EQUAL to ""false"". For example if it is absent, encryption is enabled. It looks as though a secret is then generated.

This causes a problem because if the web container is restarted, a new secret is generated. Existing users who then submit any view encoded with the old secret hit an exception in the restore view phase which looks like this, at least in my environment:

javax.faces.FacesException: javax.crypto.BadPaddingException: Given final block not properly padded
	at org.apache.myfaces.shared_impl.util.StateUtils.symmetric(StateUtils.java:370)
	at org.apache.myfaces.shared_impl.util.StateUtils.symmetric(StateUtils.java:408)
	at org.apache.myfaces.shared_impl.util.StateUtils.decrypt(StateUtils.java:288)
	at org.apache.myfaces.shared_impl.util.StateUtils.reconstruct(StateUtils.java:237)
	at org.apache.myfaces.renderkit.html.HtmlResponseStateManager.getTreeStructureToRestore(HtmlResponseStateManager.java:129)
	at javax.faces.render.ResponseStateManager.getState(ResponseStateManager.java:81)
	at org.apache.myfaces.application.jsp.JspStateManagerImpl.restoreView(JspStateManagerImpl.java:283)
	at org.ajax4jsf.framework.ajax.AjaxStateManager.restoreView(AjaxStateManager.java:83)
	at org.apache.myfaces.application.jsp.JspViewHandlerImpl.restoreView(JspViewHandlerImpl.java:354)
	at com.sun.facelets.FaceletViewHandler.restoreView(FaceletViewHandler.java:317)
	at org.ajax4jsf.framework.ViewHandlerWrapper.restoreView(ViewHandlerWrapper.java:116)
	at org.ajax4jsf.framework.ajax.AjaxViewHandler.restoreView(AjaxViewHandler.java:147)
	at org.jenia.faces.template.handler.ViewHandler.restoreView(ViewHandler.java:263)
	at com.sun.facelets.FaceletViewHandler.restoreView(FaceletViewHandler.java:317)
	at org.ajax4jsf.framework.ViewHandlerWrapper.restoreView(ViewHandlerWrapper.java:116)
	at org.ajax4jsf.framework.ajax.AjaxViewHandler.restoreView(AjaxViewHandler.java:147)
	at org.apache.myfaces.lifecycle.RestoreViewExecutor.execute(RestoreViewExecutor.java:85)
	at org.apache.myfaces.lifecycle.LifecycleImpl.executePhase(LifecycleImpl.java:95)
	at org.apache.myfaces.lifecycle.LifecycleImpl.execute(LifecycleImpl.java:70)
	at javax.faces.webapp.FacesServlet.service(FacesServlet.java:137)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.ajax4jsf.framework.ajax.xmlfilter.BaseXMLFilter.doXmlFilter(BaseXMLFilter.java:96)
	at org.ajax4jsf.framework.ajax.xmlfilter.BaseFilter.doFilter(BaseFilter.java:220)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.myfaces.webapp.filter.ExtensionsFilter.doFilter(ExtensionsFilter.java:147)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at net.parkplatz.rr.webframework.Doorkeeper.doFilter(Doorkeeper.java:185)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.springframework.orm.jdo.support.OpenPersistenceManagerInViewFilter.doFilterInternal(OpenPersistenceManagerInViewFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.netbeans.modules.web.monitor.server.MonitorFilter.doFilter(MonitorFilter.java:390)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:175)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:128)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:263)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:844)
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:584)
	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:447)
	at java.lang.Thread.run(Thread.java:619)
Caused by: javax.crypto.BadPaddingException: Given final block not properly padded
	at com.sun.crypto.provider.SunJCE_f.b(DashoA13*..)
	at com.sun.crypto.provider.SunJCE_f.b(DashoA13*..)
	at com.sun.crypto.provider.DESCipher.engineDoFinal(DashoA13*..)
	at javax.crypto.Cipher.doFinal(DashoA13*..)
	at org.apache.myfaces.shared_impl.util.StateUtils.symmetric(StateUtils.java:366)
	... 48 more
Caused by: javax.crypto.BadPaddingException: Given final block not properly padded
	at com.sun.crypto.provider.SunJCE_f.b(DashoA13*..)
	at com.sun.crypto.provider.SunJCE_f.b(DashoA13*..)
	at com.sun.crypto.provider.DESCipher.engineDoFinal(DashoA13*..)
	at javax.crypto.Cipher.doFinal(DashoA13*..)
	at org.apache.myfaces.shared_impl.util.StateUtils.symmetric(StateUtils.java:366)
	at org.apache.myfaces.shared_impl.util.StateUtils.symmetric(StateUtils.java:408)
	at org.apache.myfaces.shared_impl.util.StateUtils.decrypt(StateUtils.java:288)
	at org.apache.myfaces.shared_impl.util.StateUtils.reconstruct(StateUtils.java:237)
	at org.apache.myfaces.renderkit.html.HtmlResponseStateManager.getTreeStructureToRestore(HtmlResponseStateManager.java:129)
	at javax.faces.render.ResponseStateManager.getState(ResponseStateManager.java:81)
	at org.apache.myfaces.application.jsp.JspStateManagerImpl.restoreView(JspStateManagerImpl.java:283)
	at org.ajax4jsf.framework.ajax.AjaxStateManager.restoreView(AjaxStateManager.java:83)
	at org.apache.myfaces.application.jsp.JspViewHandlerImpl.restoreView(JspViewHandlerImpl.java:354)
	at com.sun.facelets.FaceletViewHandler.restoreView(FaceletViewHandler.java:317)
	at org.ajax4jsf.framework.ViewHandlerWrapper.restoreView(ViewHandlerWrapper.java:116)
	at org.ajax4jsf.framework.ajax.AjaxViewHandler.restoreView(AjaxViewHandler.java:147)
	at org.jenia.faces.template.handler.ViewHandler.restoreView(ViewHandler.java:263)
	at com.sun.facelets.FaceletViewHandler.restoreView(FaceletViewHandler.java:317)
	at org.ajax4jsf.framework.ViewHandlerWrapper.restoreView(ViewHandlerWrapper.java:116)
	at org.ajax4jsf.framework.ajax.AjaxViewHandler.restoreView(AjaxViewHandler.java:147)
	at org.apache.myfaces.lifecycle.RestoreViewExecutor.execute(RestoreViewExecutor.java:85)
	at org.apache.myfaces.lifecycle.LifecycleImpl.executePhase(LifecycleImpl.java:95)
	at org.apache.myfaces.lifecycle.LifecycleImpl.execute(LifecycleImpl.java:70)
	at javax.faces.webapp.FacesServlet.service(FacesServlet.java:137)

This was reported on the MyFaces users list using MyFaces 1.2.0 and is still present in 1.2.1-SNAPSHOT

The fix is to correct the bug in the line from org.apache.myfaces.util.StateUtils.isSecure() quoted above, so that it reads:

return ""true"".equals(ctx.getInitParameter(USE_ENCRYPTION));",MYFACES-1786
,MYFACES-1785
"Finally adding the Arabic support for MyFaces core components!
Now; 
If the browser language is ar then All the core component messages will be displayed in arabic!
Check the screenshots!
",MYFACES-1784
"The following code for a custom (compound) component causes and IndexOutOfBoundsException on submit. It renders OK.  

 package com.mycompany;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;
import javax.faces.application.Application;
import javax.faces.component.EditableValueHolder;
import javax.faces.component.UIComponent;
import javax.faces.component.UIInput;
import javax.faces.component.UISelectItems;
import javax.faces.component.html.HtmlSelectOneRadio;
import javax.faces.context.FacesContext;
import javax.faces.context.ResponseWriter;
import javax.faces.convert.BooleanConverter;
import javax.faces.model.SelectItem;
import java.io.IOException;
import java.util.Map;

public class UIBooleanFieldset extends UIInput {

	public UIBooleanFieldset() {
		setConverter(new BooleanConverter());
		setRendererType(null);

		Application application = FacesContext.getCurrentInstance().getApplication();
		HtmlSelectOneRadio htmlSelectOneRadio = (HtmlSelectOneRadio) application.createComponent(HtmlSelectOneRadio.COMPONENT_TYPE);

		htmlSelectOneRadio.setId(getId() + ""_radios"");
		ExpressionFactory ef = FacesContext.getCurrentInstance().getApplication().getExpressionFactory();
		ELContext elContext = FacesContext.getCurrentInstance().getELContext();
		ValueExpression sexValueExpression = ef.createValueExpression(elContext, ""#{persoonBean.sex}"", String.class);
		htmlSelectOneRadio.setValueExpression(""value"", sexValueExpression);
		htmlSelectOneRadio.setLayout(""pageDirection"");

		UISelectItems selectItems = (UISelectItems) application.createComponent(UISelectItems.COMPONENT_TYPE);
		ValueExpression sexItemsValueExpression = ef.createValueExpression(elContext, ""#{persoonBean.sexItems}"", SelectItem[].class);
		selectItems.setValueExpression(""value"", sexItemsValueExpression);

		htmlSelectOneRadio.getChildren().add(selectItems);
		getChildren().add(htmlSelectOneRadio);
	}


	public void encodeBegin(FacesContext context) throws IOException {
		ResponseWriter writer = context.getResponseWriter();
		String clientId = getClientId(context);

		writer.startElement(""fieldset"", this);
		writer.startElement(""legend"", this);
		writer.writeText(getAttributes().get(""legend""), this, clientId);

	}

	public void encodeEnd(FacesContext context) throws IOException {
		ResponseWriter writer = context.getResponseWriter();
		writer.endElement(""legend"");
		writer.endElement(""fieldset"");
	}

	public void decode(FacesContext context, UIComponent component) {
		EditableValueHolder fieldset = (EditableValueHolder) component;
		Map<String, String> requestMap = context.getExternalContext().getRequestParameterMap();
		String clientId = component.getClientId(context);

		try {
			int submittedValue = Integer.parseInt((String) requestMap.get(clientId));

			int newValue = 0;
			fieldset.setSubmittedValue("""" + newValue);
			fieldset.setValid(true);
		} catch (NumberFormatException ex) {
			// let the converter take care of bad input, but we still have
			// to set the submitted value, or the converter won't have
			// any input to deal with
			fieldset.setSubmittedValue((String) requestMap.get(clientId));
		}
	}

}


The exception:

ava.lang.IndexOutOfBoundsException: Index: 1, Size: 1
       at java.util.ArrayList.RangeCheck(ArrayList.java:546)
       at java.util.ArrayList.get(ArrayList.java:321)
       at javax.faces.component.UIComponentBase.processRestoreState(UIComponentBase.java:740)
       at javax.faces.component.UIComponentBase.processRestoreState(UIComponentBase.java:743)
       at javax.faces.component.UIComponentBase.processRestoreState(UIComponentBase.java:743)
       at org.apache.myfaces.application.jsp.JspStateManagerImpl.restoreView(JspStateManagerImpl.java:300)
       at org.apache.myfaces.application.jsp.JspViewHandlerImpl.restoreView(JspViewHandlerImpl.java:354)
       at org.apache.myfaces.lifecycle.RestoreViewExecutor.execute(RestoreViewExecutor.java:85)
       at org.apache.myfaces.lifecycle.LifecycleImpl.executePhase(LifecycleImpl.java:95)
       at org.apache.myfaces.lifecycle.LifecycleImpl.execute(LifecycleImpl.java:70)
       at javax.faces.webapp.FacesServlet.service(FacesServlet.java:137)
       at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:487)

I had similar problems using Sun RI jsf-impl 1.2-b19 and jsf-api 1.2_02.
",MYFACES-1783
"This test-case shows, that there is a failure inside the standard NumberConverter (MyFaces):

protected void setUp() throws Exception
{
   super.setUp();

   mock = new NumberConverter();
   mock.setLocale(Locale.FRANCE);
   FacesContext.getCurrentInstance().getViewRoot().setLocale(Locale.GERMANY);
}

public void testFranceLocale()
{
   UIInput input = new UIInput();
    mock.setType(""currency"");
    Number number = (Number)
mock.getAsObject(FacesContext.getCurrentInstance(), input, ""12 345,68
€"");
    assertNotNull(number);
}

the grouping_sep should be a nb-space...",MYFACES-1782
"Hi,

I am testing MyFaces 1.2 implementation, but I think I found an issue with required field validation.
I have a required message like this 'El campo {0} es obligatorio' in my resourceBundle with label javax.faces.component.UIInput.REQUIRED. 
In the h:inputText im tryng to substitute the {0} param with the label attribute value.
The problem is that, if I use a label reference like label=""#{bundle['login.password']}"" the {0} is subtituted by a null value.
But if I use label=""aaaaa"" or label=""#{loginForm.passwordLabel}"" it works fine. It seems that label attribute do not accept messages from resourceBundle.
Sorry for my simple english... I hope you can understand the problem.

Regards,
Ricard
",MYFACES-1781
This is due to the fact thtat the ScopeAttributeResolver (the last resolver in the chain) is not marking the property as resolved if it resolves to null.,MYFACES-1780
Add Messages_tr.properties to impl,MYFACES-1779
"see main master-issue

the fix for this is fixing Trinidad-plguins",MYFACES-1778
"see main master-issue

the fix for this is fixing Trinidad-plguins",MYFACES-1777
"<f:view locale=""sl""> on a faces portlet page throws ClassCastException, trace below:

22:14:11,203 ERROR [jsp:52] java.lang.ClassCastException: com.liferay.portlet.RenderRequestImpl cannot be cast to javax.servlet.ServletRequest
	at org.apache.myfaces.taglib.core.ViewTag.setProperties(ViewTag.java:238)
	at javax.faces.webapp.UIComponentTag.findComponent(UIComponentTag.java:539)
	at javax.faces.webapp.UIComponentTag.doStartTag(UIComponentTag.java:315)
	at org.apache.myfaces.taglib.core.ViewTag.doStartTag(ViewTag.java:73)
	at org.apache.jsp.welcome_jsp._jspService(welcome_jsp.java:138)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:97)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:802)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:332)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:314)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:264)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:802)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:252)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:672)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:574)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:499)
	at com.liferay.portlet.PortletRequestDispatcherImpl.include(PortletRequestDispatcherImpl.java:242)
	at com.liferay.portlet.PortletRequestDispatcherImpl.include(PortletRequestDispatcherImpl.java:83)
	at org.apache.myfaces.context.portlet.PortletExternalContextImpl.dispatch(PortletExternalContextImpl.java:167)
	at org.apache.myfaces.application.jsp.JspViewHandlerImpl.renderView(JspViewHandlerImpl.java:175)",MYFACES-1776
"According to http://java.sun.com/javaee/javaserverfaces/1.2/docs/tlddocs/index.html, the value attribute of the f:param tag should not be required.
But in myfaces_core.tld, it is:
# snip start
   <tag>
...
      <name>param</name>
...
      <attribute>
          <description>The value of this parameter.</description>
          <name>value</name>
          <required>true</required>
          <deferred-value/>
      </attribute>
...
    </tag>
# snip end

Note: in JSF 1.1 the value attribute was required.",MYFACES-1775
"Currently a <h:outputLink> with nested <f:param> components is rendered as
  <a href=""somepage?foo=1&bar=2"">...</a>

According to http://www.w3.org/TR/html401/ the character entity ""&amp;"" should be used instead of ""&"":
""Authors should use ""&amp;"" (ASCII decimal 38) instead of ""&"" to avoid confusion with the beginning of a character reference (entity reference open delimiter). Authors should also use ""&amp;"" in attribute values since character references are allowed within CDATA attribute values.""

Though current browsers seem to have no problem with ""&"" characters within href attributes, this issue gets serious when using XHTML. Not using the character entity ""&amp;"" instead of ""&"" leads to invalid (not well-formed) XML data!
Therefore I think we should fix this.

BTW, the RI renders the wrong ""&"" as well.
",MYFACES-1774
"At Mulesource we use the wagon plugin to copy over reports from our performance tests to a reporting directory. If I bind the wagon-maven-plugin to the toplevel pom the build fails because the w-m-p is acitvated for pom-only projects as well.

I have created a patch to the trunk version of WagonMojo that allows you to configure to ingore the missing input directory. It would be nice if the patch made it into one of the subsequent versions of the wagon-maven-plugin.",MYFACES-1773
"Hi The source code for many renderer classes say that style of button etc, can be overriden by overriding getStyle method.
I wanted to know how to do that. I was thinking it should be setStyle method and not get method?
Thanks
Raghu
/**

* Can be overwritten by derived classes to overrule the style to be used.

*/

protected String getStyle(FacesContext facesContext, UIComponent link) {

if (link instanceof HtmlCommandLink) {

return ((HtmlCommandLink) link).getStyle();

}

else {

return (String) link.getAttributes().get(HTML.STYLE_ATTR);

}

}


/**

* Can be overwritten by derived classes to overrule the style class to be used.

*/

protected String getStyleClass(FacesContext facesContext, UIComponent link) {

if (link instanceof HtmlCommandLink) {

return ((HtmlCommandLink) link).getStyleClass();

}

else {

return (String) link.getAttributes().get(HTML.STYLE_CLASS_ATTR);

}

}

",MYFACES-1772
"This is about  wrong practise of calling startElement()  and endElement() inside encodeBegin(). 
Is this a major design flaw? 
I think startElement() should be called inside encodeBegin()
and endElement() should always be called inside encodeEnd()? 
This gives people a chance to add new attributes by overriding encodeBegin() or encodeEnd().
I think the JSF spec should specify this along with saying that (javaDoc for ResponseWriter)
""ResponseWriter class does not allow to call writeAttribute() once endElement() is called"".
We are not able to add new attributes to Tomahawk/Myfaces Implementations unless we modify the source code.
Thanks
Raghu",MYFACES-1771
"
Using jsp pages I have made simple example to test if unified EL works and if I can mix jstl 1.2 tags with myfaces 1.2 components on
the same page, one of the behaviors that promotes jsf 1.2.

The test is this:

public class ListBean
{
    
    Log log = LogFactory.getLog(ListBean.class);

    public ListBean(){
        
    }
    
    public List getStringList(){
        List list = new ArrayList();        
        list.add(""A"");
        list.add(""B"");
        list.add(""C"");
        list.add(""D"");
        return list;
    }
    
    
}

page:

	<h:form id=""form"">
		<c:forEach var=""item"" items=""#{listBean.stringList}"">
                    &nbsp;<h:inputText value=""#{item}"" />
			<br>
		</c:forEach>
	</h:form>

and that's all.

On myfaces I have the following output:

&nbsp;
<input id=""form:j_id_id28"" name=""form:j_id_id28"" type=""text"" value=""A"" />

&nbsp;
	
	
&nbsp;
			
	
&nbsp;

<input id=""form:j_id_id28j_id_0"" name=""form:j_id_id28j_id_0"" type=""text"" value=""B"" />


and on the log:

Nov 18, 2007 7:06:09 PM org.apache.myfaces.config.annotation.DefaultLifecycleProviderFactory getLifecycleProvider
INFO: Using LifecycleProvider org.apache.myfaces.config.annotation.ResourceAnnotationLifecycleProvider
Nov 18, 2007 7:06:09 PM javax.faces.webapp.UIComponentClassicTagBase findComponent
WARNING: There is more than one JSF tag with an id : j_id_id28j_id_0
Nov 18, 2007 7:06:09 PM javax.faces.webapp.UIComponentClassicTagBase findComponent
WARNING: There is more than one JSF tag with an id : j_id_id28j_id_0
Nov 18, 2007 7:06:37 PM javax.faces.webapp.UIComponentClassicTagBase findComponent
WARNING: There is more than one JSF tag with an id : j_id_id28j_id_0
Nov 18, 2007 7:06:37 PM javax.faces.webapp.UIComponentClassicTagBase findComponent

if I assign a custom id for h:inputText throws an error of duplicateId

Using jsf ri 1.2_05 I have the following output:

&nbsp;
<input type=""text"" name=""form:j_id_id28"" value=""A"" />
		
&nbsp;
<input type=""text"" name=""form:j_id_id28j_id_1"" value=""B"" />

		
&nbsp;
<input type=""text"" name=""form:j_id_id28j_id_2"" value=""C"" />
		
&nbsp;
<input type=""text"" name=""form:j_id_id28j_id_3"" value=""D"" />

This is that I expected. With this code:

<c:forEach var=""item"" items=""#{listBean.stringList}"">
	&nbsp;
	<h:inputText id=""item"" value=""#{item}"" />
</c:forEach>

Render this:

&nbsp;
<input id=""form:item"" type=""text"" name=""form:item"" value=""A"" />
		
&nbsp;
<input id=""form:itemj_id_1"" type=""text"" name=""form:itemj_id_1"" value=""B"" />

		
&nbsp;
<input id=""form:itemj_id_2"" type=""text"" name=""form:itemj_id_2"" value=""C"" />
		
&nbsp;
<input id=""form:itemj_id_3"" type=""text"" name=""form:itemj_id_3"" value=""D"" />

This is correct!.

I have made a probe with tomcat 6.0.14 and do the same as jetty.
",MYFACES-1770
"
Now myfaces has the following on UIData:

  // Property: var
  private String _var;

  /**
   * Gets Defines the name of the request-scope variable that will hold the current row during iteration.  This value must be a static value.
   *
   * @return  the new var value
   */
  public String getVar()
  {
    if (_var != null)
    {
      return _var;
    }
    ValueExpression expression = getValueExpression(""var"");
    if (expression != null)
    {
      return (String)expression.getValue(getFacesContext().getELContext());
    }
    return null;
  }

  /**
   * Sets Defines the name of the request-scope variable that will hold the current row during iteration.  This value must be a static value.
   * 
   * @param var  the new var value
   */
  public void setVar(String var)
  {
    this._var = var;
  }

Because var is a static String, according to the spec it should be as is:

  // Property: var
  private String _var;

  /**
   * Gets Defines the name of the request-scope variable that will hold the current row during iteration.  This value must be a static value.
   *
   * @return  the new var value
   */
  public String getVar()
  {
      return _var;
  }

  /**
   * Sets Defines the name of the request-scope variable that will hold the current row during iteration.  This value must be a static value.
   * 
   * @param var  the new var value
   */
  public void setVar(String var)
  {
    this._var = var;
  }

HtmlDataTableTag has this:

  private ValueExpression _var;
  public void setVar(ValueExpression var)
  {
    _var = var;
  }

it should be this:

  private String _var;
  public void setVar(String var)
  {
   _var=var;
  }

The proper corrections on h.tld and others should be done.",MYFACES-1769
"I ran into some trouble with Myfaces 1.2.1-SNAPSHOT in combination with Spring Webflow and UTF-8. Even if all JSP pages have <%@ page contentType=""text/html; charset=UTF-8"" %> set, special characters like umlauts or arab characters are not displayed correctly in Tomcat 6. With Jetty it works.

I did some debugging and found out that the charcter encoding of the ExternalContext is set in the restore view phase of JSF. BUT: Spring webflow adds a phase listener that reads request parameters before restore view. When the character encoding is not set correctly at this time (what seems to be the case with tomcat) strings get messed up. The problem can be easily solved with a servlet filter or a phase listener that sets the character encoding of the ExternalContext to UTF-8 before the Spring Webflow phase listener reads the request parameters.

Nevertheless I would be interested if this is a bug and what piece of my chain is buggy. MyFaces, Webflow or Tomcat for obviously not setting the character encoding specified in the page. One thing seems to be clear: the character encoding must somehow be set before the Webflow phase listener is executed.",MYFACES-1768
"For this fregment:
------------------------
<h:messages globalOnly=""true"" styleClass=""error_message"" style=""width:0px"" layout=""table"" />

This is the HTML that is being produced:
--------------------------------------------------------
<table><tr><td><span style=""error_message"" class=""error_message"">Total % Audience should be 100% or 0%</span></td></tr></table>

Seems like style is sharing same property with styleClass.",MYFACES-1767
"
When disabled=true, h:outputLink should render this:

<span>Disabled outputLink</span>

Actually it render the same as disabled=false. 

",MYFACES-1766
"I don't know whether this error only occurs in combination with facelets, but this is what happens: the ""return value: of a h:selectOneMenu in always ""null"" in the sense that the SETTER IS NEVER CALLED (-> value stays null)
So for:
<h:selectOneMenu value=""#{testOverviewBean.compoundCodeFromMenu}"" valueChangeListener=""#{testOverviewBean.fillTestSeqNrs}"" onchange=""submit();"">
		<f:selectItem itemLabel=""Choose One"" itemValue=""choose_one""/>
		<f:selectItems value=""#{utilBean.compoundCodes}"" />
</h:selectOneMenu>

... the setCompoundCodeFromMenu() is never called, which always leads to NPEs later on.
As this is one of the few core components (""h:""), I think labelling it ""blocking"" is justiefied.

-Wolf 

",MYFACES-1765
"According to dtd (html and xhtml) a <tbody> must not be empty. it must at least have one <tr> which must at least have one <td>.
And in xhtml each <table> must have a <tbody>.
So, what should the dataTable render when there is a rowCount of 0?

Perhaps just rendering <tbody><tr><td></td></tr></tbody> is ok? Empty cells won't be rendered anyway.
But is it really ok for all browsers?

WDYT?
",MYFACES-1764
"There is an error while rendering ""id"" and ""styleClass"" attributes on ""h:messages"" component.

For example:

<h:messages id=""messagesId"" styleClass=""messagesClass"" ...

is rendered as:

<ul id=""messagesId""><li><span id=""messagesId"" style=""messagesClass"" >....</span></li><li><span id=""messagesId"" style=""messagesClass"" >

As you can see:
* in genereted html we have many tags with the same id attribute, 
* styleClass attribute is rendered as style not as class attribute.

Regards
Antoni Jakubiak",MYFACES-1762
"The specification states that managed bean methods annotated with @PostConstruct have to be called after the object is initialized and after dependency injection is performed. However, MyFaces calls those methods after the bean instance is created but before dependency injection is performed (for example, see http://www.nabble.com/myfaces-1.2.0-postConstruct-tf4760326.html ). In order to resolve this bug the LifecycleProvider interface has to be changed. Currently there's only one method responsible for creating/initializing a new bean: newInstance(). This design choice implicates that there's no possibility to seperate the steps ""creating the bean"" and ""postconstructing the bean"".",MYFACES-1761
"It seems like calling getSelectedValues method of selectBooleanCheckbox causes exception.
This is an example for a fregment of code:
---------------------------------------------------------
                            <t:selectManyCheckbox value=""#{test_scope.targetPagePhysicals}"" layout=""pageDirection"" converter=""PagePhysicalConverter"" binding=""#{test_scope.htmlSelect}"">
                              <f:selectItems value=""#{test_scope.pagePhysicals}"" />
                            </t:selectManyCheckbox>
                            <t:commandButton value=""submitTargetPages"" style=""width:100px"" immediate=""true"" onclick=""submit()"" forceId=""true"" actionListener=""#{test_scope.targetPagesSelectedAction}"" />

In the bean:
----------------
  public void targetPagesSelectedAction(ActionEvent event)
  {
    Object[] xx = htmlSelect.getSelectedValues();
    FacesContext.getCurrentInstance().renderResponse();
  }

Causes the following exception:
-------------------------------------------
javax.servlet.ServletException: Exception while invoking expression #{test_scope.targetPagesSelectedAction}
	at javax.faces.webapp.FacesServlet.service(FacesServlet.java:154)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.ajaxanywhere.AAFilter.doFilter(AAFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.myfaces.webapp.filter.ExtensionsFilter.doFilter(ExtensionsFilter.java:147)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.shale.faces.ShaleApplicationFilter.doFilter(ShaleApplicationFilter.java:285)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at com.amadesa.admin.model.persistence.OpenSessionInViewFilter.doFilterInternal(OpenSessionInViewFilter.java:149)
	at com.amadesa.admin.model.persistence.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:56)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:228)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:175)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:128)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:104)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:216)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:844)
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:634)
	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:445)
	at java.lang.Thread.run(Thread.java:619)
Caused by: javax.faces.el.EvaluationException: Exception while invoking expression #{test_scope.targetPagesSelectedAction}
	at org.apache.myfaces.el.MethodBindingImpl.invoke(MethodBindingImpl.java:156)
	at javax.faces.component.UICommand.broadcast(UICommand.java:89)
	at javax.faces.component.UIViewRoot._broadcastForPhase(UIViewRoot.java:97)
	at javax.faces.component.UIViewRoot.processDecodes(UIViewRoot.java:139)
	at org.apache.myfaces.lifecycle.ApplyRequestValuesExecutor.execute(ApplyRequestValuesExecutor.java:32)
	at org.apache.myfaces.lifecycle.LifecycleImpl.executePhase(LifecycleImpl.java:95)
	at org.apache.myfaces.lifecycle.LifecycleImpl.execute(LifecycleImpl.java:70)
	at javax.faces.webapp.FacesServlet.service(FacesServlet.java:139)
	... 25 more
Caused by: java.lang.ClassCastException: java.util.ArrayList cannot be cast to [Ljava.lang.Object;
	at javax.faces.component.UISelectMany.getSelectedValues(UISelectMany.java:48)
	at com.amadesa.admin.view.bean.test.TestScopeBean.targetPagesSelectedAction(TestScopeBean.java:166)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.myfaces.el.MethodBindingImpl.invoke(MethodBindingImpl.java:132)
	... 32 more",MYFACES-1760
"The following code:

            <h:selectOneListbox id=""si"" binding=""#{selectItemBean.component}"" 
                value=""#{selectItemBean.value}"">
                <f:selectItems value=""#{selectItemBean.list}""/>
            </h:selectOneListbox>

If the list is created as is:

    public List<SelectItem> getList()
    {
        List<SelectItem> lista = new ArrayList<SelectItem>();

        lista.add(new SelectItem(null, ""NULL 2"");
        lista.add(new SelectItem("""", ""EMPTY""));
        lista.add(new SelectItem(""1"", ""Value 1""));
        lista.add(new SelectItem(""2"", ""Value 2""));
        return lista;
    }

Render this:

<select id=""form:si"" name=""form:si"" size=""4"">	
   <option value="""" selected=""selected"">NULL 2</option>	
   <option value="""" selected=""selected"">EMPTY</option>	
   <option value=""1"">Value 1</option>	
   <option value=""2"">Value 2</option>
</select>

null and empty String values are annotated equally.

The problem is that JSF RI  assumes value="""" as null when converting the value, but myfaces assumes empty String.

The submited value is an empty String, decoded on JSF RI as null and on Myfaces as empty String. 
JSF RI does not show this item as selected but set the value
correctly to null. Myfaces sends a validation message ""Validation Error: Value is not valid"". 

To be according to the spec, the preferred behavior is that JSF RI shows, so it's necessary a correction on myfaces to be compatible.





",MYFACES-1759
"The following code makes absolute no sense without an else for the ""if(holder.isLocalValueSet())"":

            if(component instanceof EditableValueHolder) {

                EditableValueHolder holder = (EditableValueHolder) component;
                
                if(holder.isLocalValueSet()) {
                    value = holder.getLocalValue();
                }

                value = getValue(component);
            }
            else {

                value = getValue(component);
            }


Plus: the local value handling is not even implemented in the 1.2.x branch!

",MYFACES-1758
"h:commandLink cannot have onclick attribute in tld file for JSF 1.1. 

I just compared the tlds for MyFaces Core and JSF RI 1.1.

Apparently RI 1.1 doesn't support onclick, but MyFaces does.   That
seems like a bug as well.

http://myfaces.apache.org/impl/tlddoc/h/commandLink.html
http://java.sun.com/javaee/javaserverfaces/1.1_01/docs/tlddocs/h/tld-summary.html
http://java.sun.com/javaee/javaserverfaces/1.1_01/docs/api/

Ryan Lubke confirmed that the lack of onclick in the tld was intentional for JSF 1.1, and that the renderer is expected to ignore the value of HtmlCommandLink.getOnClick().

  http://mail-archives.apache.org/mod_mbox/myfaces-users/200711.mbox/browser
  http://www.nabble.com/forum/ViewPost.jtp?post=13553591&framed=y

For JSF 1.2, onclick has been added, the spec has been clarified, and the current behavior is likely correct.

",MYFACES-1757
"ExternalContext.encodeActionUrl() and encodeResourceUrl() are supposed
to throw a NullPointerException if the url passed in is null. ",MYFACES-1756
see summary,MYFACES-1755
"Myfaces fails to parse a valid web.xml file. the problem seems to be the fact that i am using an xml include in 
my web.xml. this works fine with a ""standard"" web application, not using myfaces. seems to be a problem with the path to the
included xml file.

the web.xml looks like :

<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE project [
  <!ENTITY snippet SYSTEM ""remoting_snippet.xml"">
]>
<web-app xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns=""http://java.sun.com/xml/ns/javaee"" xmlns:web=""http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"" xsi:schemaLocation=""http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"" id=""WebApp_ID"" version=""2.5"">
 ....
&snippet;
....
</web-app>

The remoting_snippet.xml contains the following content:

<servlet>
  <servlet-name>remoting</servlet-name>
  <servlet-class>
    org.springframework.web.servlet.DispatcherServlet
  </servlet-class>
  <load-on-startup>1</load-on-startup>
</servlet>
<servlet-mapping>
  <servlet-name>remoting</servlet-name>
  <url-pattern>/remoting/*</url-pattern>
</servlet-mapping>

the exception i get is the following one.

20071027-161103.153 FATAL [WebXmlParser] [main] [] Unable to parse web.xml
java.io.FileNotFoundException: \WEB-INF\remoting_snippet.xml (Das System kann den angegebenen Pfad nicht finden)
	at java.io.FileInputStream.open(Native Method)
	at java.io.FileInputStream.<init>(FileInputStream.java:106)
	at java.io.FileInputStream.<init>(FileInputStream.java:66)
	at sun.net.www.protocol.file.FileURLConnection.connect(FileURLConnection.java:70)
	at sun.net.www.protocol.file.FileURLConnection.getInputStream(FileURLConnection.java:161)
	at com.sun.org.apache.xerces.internal.impl.XMLEntityManager.setupCurrentEntity(XMLEntityManager.java:653)
	at com.sun.org.apache.xerces.internal.impl.XMLEntityManager.startEntity(XMLEntityManager.java:1316)
	at com.sun.org.apache.xerces.internal.impl.XMLEntityManager.startEntity(XMLEntityManager.java:1253)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanEntityReference(XMLDocumentFragmentScannerImpl.java:1891)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:3017)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:645)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.next(XMLNSDocumentScannerImpl.java:140)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:508)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:807)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:737)
	at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:107)
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(DOMParser.java:225)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:283)
	at org.apache.myfaces.shared_impl.webapp.webxml.WebXmlParser.parse(WebXmlParser.java:96)
	at org.apache.myfaces.shared_impl.webapp.webxml.WebXml.init(WebXml.java:200)
	at org.apache.myfaces.shared_impl.webapp.webxml.WebXml.getWebXml(WebXml.java:187)
	at org.apache.myfaces.webapp.DefaultFacesInitializer.initFaces(DefaultFacesInitializer.java:70)
	at org.apache.myfaces.webapp.StartupServletContextListener.contextInitialized(StartupServletContextListener.java:57)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:3827)
	at org.apache.catalina.core.StandardContext.start(StandardContext.java:4334)
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1045)
	at org.apache.catalina.core.StandardHost.start(StandardHost.java:719)
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1045)
	at org.apache.catalina.core.StandardEngine.start(StandardEngine.java:443)
	at org.apache.catalina.core.StandardService.start(StandardService.java:516)
	at org.apache.catalina.core.StandardServer.start(StandardServer.java:710)
	at org.apache.catalina.startup.Catalina.start(Catalina.java:566)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:288)
	at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:413)
20071027-161103.213 ERROR [DefaultFacesInitializer] [main] [] Error initializing MyFaces: java.io.FileNotFoundException: \WEB-INF\remoting_snippet.xml (Das System kann den angegebenen Pfad nicht finden)
javax.faces.FacesException: java.io.FileNotFoundException: \WEB-INF\remoting_snippet.xml (Das System kann den angegebenen Pfad nicht finden)
	at org.apache.myfaces.shared_impl.webapp.webxml.WebXmlParser.parse(WebXmlParser.java:112)
	at org.apache.myfaces.shared_impl.webapp.webxml.WebXml.init(WebXml.java:200)
	at org.apache.myfaces.shared_impl.webapp.webxml.WebXml.getWebXml(WebXml.java:187)
	at org.apache.myfaces.webapp.DefaultFacesInitializer.initFaces(DefaultFacesInitializer.java:70)
	at org.apache.myfaces.webapp.StartupServletContextListener.contextInitialized(StartupServletContextListener.java:57)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:3827)
	at org.apache.catalina.core.StandardContext.start(StandardContext.java:4334)
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1045)
	at org.apache.catalina.core.StandardHost.start(StandardHost.java:719)
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1045)
	at org.apache.catalina.core.StandardEngine.start(StandardEngine.java:443)
	at org.apache.catalina.core.StandardService.start(StandardService.java:516)
	at org.apache.catalina.core.StandardServer.start(StandardServer.java:710)
	at org.apache.catalina.startup.Catalina.start(Catalina.java:566)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:288)
	at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:413)


regards,
andy",MYFACES-1754
"Attached you will find a patch against MyFaces 1.2.1 head which will eliminate the need to buffer the output to write in the ViewState hidden field when using Server-Side-State-Saving.

With SSSS just a sequence number (previously jsf_sequence) will be written into the ViewState hidden field.
This patch changes just this, and avoid the use of the StateAwareWriter. The restore process based on the jsf_sequence already worked, just minor restructuring to get the next sequence number early.

When using Facelets, you'll also need a ViewHandler with the following content:

	public void renderView(FacesContext context, UIViewRoot uiRoot) throws IOException, FacesException
	{
		StateManager stateManager = context.getApplication().getStateManager();

		original.renderView(context, uiRoot);

		stateManager.saveView(context);
	}

	public void writeState(FacesContext context) throws IOException
	{
		StateManager stateManager = context.getApplication().getStateManager();
		if (stateManager.isSavingStateInClient(context))
		{
			original.writeState(context);
		}
		else
		{
			stateManager.writeState(context, new Object[2]);
		}
	}

This disables the Facelets own state handling and ensures we save the view after rendering.",MYFACES-1753
"Tags like the t:htmlTag fail with this NPE

Caused by: java.lang.NullPointerException
        at org.apache.myfaces.custom.htmlTag.HtmlTagRenderer.encodeBegin(HtmlTagRenderer.java:50)
        at javax.faces.component.UIComponentBase.encodeBegin(UIComponentBase.java:528)
        ... 83 more

when running with MyFaces 1.2
After applying this patch
Index: api/src/main/java/javax/faces/webapp/UIComponentTag.java
===================================================================
--- api/src/main/java/javax/faces/webapp/UIComponentTag.java    (Revision 588035)
+++ api/src/main/java/javax/faces/webapp/UIComponentTag.java    (Arbeitskopie)
@@ -143,6 +143,7 @@

         UIComponent component = context.getApplication().createComponent(componentType);
         component.setId(id);
+        setProperties(component);

         return component;

things started working for me.
",MYFACES-1752
encodeChildren is wrongly implemented - calls encodeChildren if getRendersChildren() returns true.,MYFACES-1751
"When using a custom PropertyResolver in faces-config.xml like this:

  <application>
     <property-resolver>
          org.springframework.web.jsf.MessageSourcePropertyResolver
     </property-resolver>
  </application> 

the evaluation of an expression involving the PropertyResolver fails, when the expression appears on the right hand side. E.g. the expression #{ bundle.test == 'xx' } succeeds, whereas #{ 'xx' == bundle.test } fails. In this example the property resolver is responsible for evaluating the 'test' property on the object 'bundle'.

MyFaces has an expression factory which reassembles the expressions generated from the commons-el parser. This is done by replacing the so called 'suffixes' see org.apache.myfaces.el.ELParserHelper. The bug occurs when instances of BinaryOperatorExpression are handled, because myfaces only replaces the suffix of the first operand. This is why the first example works and the second fails.

",MYFACES-1750
"Last week I did some JMeter testing, profiling and code checking on MyFaces to try increase the overall performance. Here are my suggestions for improvement:

*) _ComponentAttributesMap
I introduced a cache for maps with component attributes. This cache avoids rebuilding the map for every instance of the same component class. It is implemented using a WeakHashMap to allow the GC to remove entries that are not referenced in any instance.

*) UIComponentBase
Made a few changes in isIdValid as it is called quite often. The new id is now checked against the old id and if it is the same it is assumed as valid (avoids checking chars). Additionally I use isLetterOrDigit() and access string chars directly insted of fetching an array first.

*) ImplicitObjectResolver
I replaced List with Map to avoid iteration over lists.

*) HtmlResponseWriterImpl
Use new method of HTMLEncoder for char[]

*) HTMLEncoder
Improved performance of encode mthod and added a new one that takes a char[] und directly writes to a writer.

*) UnicodeEncoder
Replaced StringBuffer with StringBuilder.",MYFACES-1749
"In org.apache.myfaces.shared_impl.renderkit.html.HtmlFormRendererBase.encodeBegin (and maybe other classes rendering action URLs) you find the following code segment:
        String actionURL = getActionUrl(facesContext, htmlForm);
        ...
        writer.writeURIAttribute(HTML.ACTION_ATTR,
                                 facesContext.getExternalContext().encodeActionURL(actionURL),
                                 null);
and the method getActionUrl in HtmlRenderer says:
        return viewHandler.getActionURL(facesContext, viewId);

So what's wrong with it? The Method viewHandler.getActionURL returns a URL that is suitable for rendering (see the JavaDoc). This URL may not be a normal URL as in my case with a wsrp portlet rendered on the producer server where the URL look like this: wsrp_rewrite?wsrp-urlType=blockingAction&wsrp-mode=wsrp%3Aview...
If you call encodeActionURL with such a URL the method javax.portlet.PortletResponse.encodeURL(url) is called. This method checks for either an absolute URL or full path URI. As both is not the case here, I get a IllegalArgumentException.",MYFACES-1748
... extends ManagedBeanResolver.java,MYFACES-1747
"I ran into a problem with MyFaces 1.2.1-SNAPSHOT and Tomahawk 1.1.6. The problem was that for <t:commandButton id=""cancel"" value=""Cancel"" action=""#{aBean.cancel}"" /> no value was rendered and that the action was not working. With 1.2.0 it worked.

After some debugging I found out that setProperties() is not called in UICompnentTag.createComponent(). In 1.2.0 setProperties was called in UIComponentClassicTagBase.findComponent().",MYFACES-1746
"When using an EL-Expression in the 'for'-Attribute of a UIMessage or HtmlOutputPanel, the EL is always resolved to null.
 
Here is an Example:

...
<h:form>
	<h:outputLabel for=""#{testBean.test}"" />
	<h:inputText id=""#{testBean.test}"" value="""" required=""true"" />
	<h:message for=""#{testBean.test}"" />
	<h:commandButton value=""click"" />
</h:form>
...

You see that the 'for'-Attributes of the message and label as well as the 'id'-Attribute of the inputText refer to the same value which returns some valid string in my TestBean:
...
public String getTest()
{
    return ""testID"";
}
...

When rendering the page, a message will never be rendered (even no value is given but the field is required) and the label cannot be linked to the input field - there appears two error messages on the console:

Attribute 'for' of label component with id j_id1:j_id2 is not defined
Attribute 'for' of UIMessage must not be null

which means the value of the EL-Expression resolves to null I think. In other cases, it is no problem to resolve the value, e.g. in an HtmlOutputText:

<h:outputText value=""#{testBean.test}"" />

Therefor I looked into the source code of UIMessage and HtmlOutputLabel. I think I found the bug. Look at the 'getFor()'-function of UIMessage (also in HtmlOutputLabel):

  public String getFor()
  {
    if (_for != null)
    {
      return _for;
    }
    ValueExpression expression = getValueExpression(""forParam"");
    if (expression != null)
    {
      return (String)expression.getValue(getFacesContext().getELContext());
    }
    return null;
  }

I think 'forParam' is the wrong identifier for the ValueExpression ´cause in the Tag-classes, a value expression of the 'for'-Attribute is set via 

comp.setValueExpression(""for"", _for);

A fix should be to use 'forParam' as an identifier in the Tag classes or 'for' as an identifier in the component-classes to use the same identifier for the value expression in all participants

Am I right with that?

",MYFACES-1745
"If SelectOneMenu has child of another type than SelectItems or SelectItem at first place in the children list (e.g. itomahawk jsValueChangeListener), validation of combobox fails with message ""Value is not a valid option."" Value range is empty in this case because _SelectItemsIterator hasNext() method returns false if first child is not of type SelectItems or SelectItem. It should just skip such children, and should continue looking for values. Right?",MYFACES-1744
"In the French locale (fr) and possibly others, the grouping separator used by DecimalFormat is the non-breaking space character (unicode '\u00A0'). However, when a user enters a space in an HTML text field, both IE and Firefox on Windows send a normal space (unicode '\u0020'). As a result, the grouping separator is not recognized and the number is truncated: 10 000 becomes 10 after parsing.

While MyFaces is technically correct here (it just delegates to DecimalFormat), it would be nice if NumberConverter was modified to also accept normal spaces as grouping separators. One way to do this would be to simply replace all normal spaces by non-breaking ones in the input string, no matter what the locale. The only downside that I see is that this could be considered a 'hack', i.e. not a very elegant solution.",MYFACES-1743
"I improved the performance of the view state writing in MyFaces 1.2.1 quite a bit with the following 2 changes:

1) The algorithm for replacing the form state marker in JspViewHandlerImpl is much faster now (improved indexOf, buffered writing, StringBuilder)

2) The view state can now be rendered with javascript. If this feature is enabled (via context parameter ""org.apache.myfaces.VIEWSTATE_JAVASCRIPT"") the view state hidden inputs in the forms are rendered with empty value attributes. The actual viewstate is then filled in on the client with a rendered javascript function that simply iterates over all forms.",MYFACES-1742
"There is a problem with the behaviour of binding attribute from actionListeners, validators and converters.

I have this test. The objective is explore how binding attribute is doing things comparing jsf ri 1.2 and 
myfaces 1.2.1-SNAPSHOT, trying to detect bugs on myfaces :) 

bindingCLV.jsp

<%@ page session=""false"" contentType=""text/html;charset=utf-8""%>
<%@ taglib uri=""http://java.sun.com/jsf/html"" prefix=""h""%>
<%@ taglib uri=""http://java.sun.com/jsf/core"" prefix=""f""%>

<html>
<f:view beforePhase=""#{bindingCLVBean.beforePhase}"" 
    afterPhase=""#{bindingCLVBean.afterPhase}"">
	<%@include file=""inc/head.inc""%>
	<body>
	<f:loadBundle
		basename=""org.apache.myfaces.examples.resource.example_messages""
		var=""example_messages"" />
	<h1>Myfaces Examples JSF 1.2 Additions</h1>
	<h:messages></h:messages>
	<h:form id=""form"">
		<h:panelGrid id=""grid"" columns=""3"">
			<h:outputLabel value=""BigInt"" for=""bigint""></h:outputLabel>
			<h:inputText id=""bigint"" binding=""#{bindingCLVBean.input1}"" value=""#{bindingCLVBean.bigint}"">
				<f:converter converterId=""javax.faces.BigInteger"" binding=""#{bindingCLVBean.converterBigint}""/>
				<f:validator validatorId=""org.apache.myfaces.bindingCLV.DummyValidator"" 
				    binding=""#{bindingCLVBean.validatorBigint}""/>
			</h:inputText>
			<h:message for=""bigint""></h:message>
			<h:outputLabel value=""BigDecimal"" for=""bigdecimal""></h:outputLabel>
			<h:inputText id=""bigdecimal"" binding=""#{bindingCLVBean.input2}"" value=""#{bindingCLVBean.bigdecimal}"">
				<f:converter converterId=""javax.faces.BigDecimal"" binding=""#{bindingCLVBean.converterBigdecimal}""/>
				<f:validator validatorId=""org.apache.myfaces.bindingCLV.DummyValidator"" 
                    binding=""#{bindingCLVBean.validatorBigdecimal}""/>
			</h:inputText>
			<h:message for=""bigdecimal""></h:message>
		</h:panelGrid>
		<h:commandButton id=""button1"" value=""press me"" action=""#{bindingCLVBean.update}"" >
		  <f:actionListener type=""org.apache.myfaces.bindingCLV.DummyActionListener"" 
		      binding=""#{bindingCLVBean.listener}"" />
		</h:commandButton>
	</h:form>
	</body>
</f:view>
</html>

Bean:

package org.apache.myfaces.bindingCLV;

import java.math.BigDecimal;
import java.math.BigInteger;

import javax.faces.application.FacesMessage;
import javax.faces.component.html.HtmlInputText;
import javax.faces.context.FacesContext;
import javax.faces.convert.Converter;
import javax.faces.event.ActionListener;
import javax.faces.event.PhaseEvent;
import javax.faces.validator.Validator;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

public class BindingCLVBean {

	private BigInteger bigint;
	
	private BigDecimal bigdecimal;
	
	private Converter converterBigint;
	
	private Converter converterBigdecimal;
	
	private Validator validatorBigint;
	
	private Validator validatorBigdecimal;
	
	private HtmlInputText input1;
	
	private HtmlInputText input2;
	
	private ActionListener listener;
	
	Log log = LogFactory.getLog(BindingCLVBean.class);
	
	public void beforePhase(PhaseEvent phaseEvent){		
		FacesContext facesContext = FacesContext.getCurrentInstance();		
	
		facesContext.addMessage(null, new FacesMessage(""This is the message for phase before ""+phaseEvent.getPhaseId().toString()));
		facesContext.addMessage(null, new FacesMessage(""Component:""+this.getInput1()));
		facesContext.addMessage(null, new FacesMessage(""Validator:""+this.getValidatorBigdecimal()));
		facesContext.addMessage(null, new FacesMessage(""Converter:""+this.getConverterBigdecimal()));
		facesContext.addMessage(null, new FacesMessage(""ActionListener:""+this.getListener()));		
		log.info(""This is the message for phase before ""+phaseEvent.getPhaseId().toString()+"" : "");
	}
	
	public void afterPhase(PhaseEvent phaseEvent){
		FacesContext facesContext = FacesContext.getCurrentInstance();		
		
		facesContext.addMessage(null, new FacesMessage(""This is the message for phase after ""+phaseEvent.getPhaseId().toString()));
		facesContext.addMessage(null, new FacesMessage(""Component:""+this.getInput1()));
		facesContext.addMessage(null, new FacesMessage(""Validator:""+this.getValidatorBigdecimal()));
		facesContext.addMessage(null, new FacesMessage(""Converter:""+this.getConverterBigdecimal()));
		facesContext.addMessage(null, new FacesMessage(""ActionListener:""+this.getListener()));
		log.info(""This is the message for phase after ""+phaseEvent.getPhaseId().toString()+"" : "");		
	}
	
	public BigInteger getBigint() {
		return bigint;
	}

	public void setBigint(BigInteger bigint) {
		this.bigint = bigint;
	}

	public BigDecimal getBigdecimal() {
		return bigdecimal;
	}

	public void setBigdecimal(BigDecimal bigdecimal) {
		this.bigdecimal = bigdecimal;
	}

	public Converter getConverterBigint() {
		return converterBigint;
	}

	public void setConverterBigint(Converter converterBigint) {
		this.converterBigint = converterBigint;
	}

	public Converter getConverterBigdecimal() {
		return converterBigdecimal;
	}

	public void setConverterBigdecimal(Converter converterBigdecimal) {
		this.converterBigdecimal = converterBigdecimal;
	}

	public Validator getValidatorBigint() {
		return validatorBigint;
	}

	public void setValidatorBigint(Validator validatorBigint) {
		this.validatorBigint = validatorBigint;
	}

	public Validator getValidatorBigdecimal() {
		return validatorBigdecimal;
	}

	public void setValidatorBigdecimal(Validator validatorBigdecimal) {
		this.validatorBigdecimal = validatorBigdecimal;
	}
	
	public String update(){
		FacesContext context = FacesContext.getCurrentInstance();

		return ""update"";
	}

	public HtmlInputText getInput1() {
		return input1;
	}

	public void setInput1(HtmlInputText input1) {
		this.input1 = input1;
	}

	public HtmlInputText getInput2() {
		return input2;
	}

	public void setInput2(HtmlInputText input2) {
		this.input2 = input2;
	}

	public ActionListener getListener() {
		return listener;
	}

	public void setListener(ActionListener listener) {
		this.listener = listener;
	}

}


When you call the page the first time, this is the output for <h:messages> tag :

JSF RI:

    *  This is the message for phase before RENDER_RESPONSE 6
    * Component:javax.faces.component.html.HtmlInputText@164de59
    * Validator:null
    * Converter:null
    * ActionListener:null 

Myfaces:

    * This is the message for phase before RENDER_RESPONSE(6)
    * Component:javax.faces.component.html.HtmlInputText@18c5e67
    * Validator:org.apache.myfaces.bindingCLV.DummyValidator@89c116
    * Converter:javax.faces.convert.BigDecimalConverter@1e3bbd7
    * ActionListener:org.apache.myfaces.bindingCLV.DummyActionListener@4133b0

QUESTION 1: Why do I create an object that I do not use?. Myfaces is wrong, and JSF RI has the correct behaviour. 
The first time that I load a page, it's unnecesary to create those objects.

And when you press the button or submit the form:

JSF RI:

    *  This is the message for phase before APPLY_REQUEST_VALUES 2
    * Component:javax.faces.component.html.HtmlInputText@14aa2db
    * Validator:null
    * Converter:null
    * ActionListener:null
    * This is the message for phase after APPLY_REQUEST_VALUES 2
    * Component:javax.faces.component.html.HtmlInputText@14aa2db
    * Validator:null
    * Converter:null
    * ActionListener:null
    * This is the message for phase before PROCESS_VALIDATIONS 3
    * Component:javax.faces.component.html.HtmlInputText@14aa2db
    * Validator:null
    * Converter:null
    * ActionListener:null
    * This is the message for phase after PROCESS_VALIDATIONS 3
    * Component:javax.faces.component.html.HtmlInputText@14aa2db
    * Validator:org.apache.myfaces.bindingCLV.DummyValidator@10df4e2
    * Converter:javax.faces.convert.BigDecimalConverter@1485542
    * ActionListener:null
    * This is the message for phase before UPDATE_MODEL_VALUES 4
    * Component:javax.faces.component.html.HtmlInputText@14aa2db
    * Validator:org.apache.myfaces.bindingCLV.DummyValidator@10df4e2
    * Converter:javax.faces.convert.BigDecimalConverter@1485542
    * ActionListener:null
    * This is the message for phase after UPDATE_MODEL_VALUES 4
    * Component:javax.faces.component.html.HtmlInputText@14aa2db
    * Validator:org.apache.myfaces.bindingCLV.DummyValidator@10df4e2
    * Converter:javax.faces.convert.BigDecimalConverter@1485542
    * ActionListener:null
    * This is the message for phase before INVOKE_APPLICATION 5
    * Component:javax.faces.component.html.HtmlInputText@14aa2db
    * Validator:org.apache.myfaces.bindingCLV.DummyValidator@10df4e2
    * Converter:javax.faces.convert.BigDecimalConverter@1485542
    * ActionListener:null
    * This is the message for phase after INVOKE_APPLICATION 5
    * Component:javax.faces.component.html.HtmlInputText@14aa2db
    * Validator:org.apache.myfaces.bindingCLV.DummyValidator@10df4e2
    * Converter:javax.faces.convert.BigDecimalConverter@1485542
    * ActionListener:org.apache.myfaces.bindingCLV.DummyActionListener@391da0
    * This is the message for phase before RENDER_RESPONSE 6
    * Component:javax.faces.component.html.HtmlInputText@14aa2db
    * Validator:org.apache.myfaces.bindingCLV.DummyValidator@10df4e2
    * Converter:javax.faces.convert.BigDecimalConverter@1485542
    * ActionListener:org.apache.myfaces.bindingCLV.DummyActionListener@391da0 

Myfaces:

    * This is the message for phase before APPLY_REQUEST_VALUES(2)
    * Component:javax.faces.component.html.HtmlInputText@16752c9
    * Validator:null
    * Converter:null
    * ActionListener:null
    * This is the message for phase after APPLY_REQUEST_VALUES(2)
    * Component:javax.faces.component.html.HtmlInputText@16752c9
    * Validator:null
    * Converter:null
    * ActionListener:null
    * This is the message for phase before PROCESS_VALIDATIONS(3)
    * Component:javax.faces.component.html.HtmlInputText@16752c9
    * Validator:null
    * Converter:null
    * ActionListener:null
    * This is the message for phase after PROCESS_VALIDATIONS(3)
    * Component:javax.faces.component.html.HtmlInputText@16752c9
    * Validator:null
    * Converter:null
    * ActionListener:null
    * This is the message for phase before UPDATE_MODEL_VALUES(4)
    * Component:javax.faces.component.html.HtmlInputText@16752c9
    * Validator:null
    * Converter:null
    * ActionListener:null
    * This is the message for phase after UPDATE_MODEL_VALUES(4)
    * Component:javax.faces.component.html.HtmlInputText@16752c9
    * Validator:null
    * Converter:null
    * ActionListener:null
    * This is the message for phase before INVOKE_APPLICATION(5)
    * Component:javax.faces.component.html.HtmlInputText@16752c9
    * Validator:null
    * Converter:null
    * ActionListener:null
    * This is the message for phase after INVOKE_APPLICATION(5)
    * Component:javax.faces.component.html.HtmlInputText@16752c9
    * Validator:null
    * Converter:null
    * ActionListener:null
    * This is the message for phase before RENDER_RESPONSE(6)
    * Component:javax.faces.component.html.HtmlInputText@16752c9
    * Validator:org.apache.myfaces.bindingCLV.DummyValidator@1c958af
    * Converter:javax.faces.convert.BigDecimalConverter@1dd7736
    * ActionListener:org.apache.myfaces.bindingCLV.DummyActionListener@bd93cd

QUESTION 2: Why I not have bindings assigned before  INVOKE_APPLICATION ?(in this time is of value have a binding attribute) .  
Again JSF RI has the correct behaviour and Myfaces is wrong. Myfaces create the validators, converters and
actionListeners on correct time, but not assign bindings when is supposed to do. If I assign a binding for
converter, validator or actionListener, I should be assigned minimum before INVOKE_APPLICATION, or better,
converters and validators on PROCESS_VALIDATIONS, and actionListeners in INVOKE_APPLICATION.

Looks a little bit difficult but I will try to find a solution for this issue.



",MYFACES-1741
"Since I updated to 1.1.6, my error log has a lot of these:

java.lang.NullPointerException: 
        javax.faces.webapp._ErrorPageWriter.isText(_ErrorPageWriter.java:344)
        javax.faces.webapp._ErrorPageWriter.writeComponent(_ErrorPageWriter.java:220)
        javax.faces.webapp._ErrorPageWriter.debugHtml(_ErrorPageWriter.java:143)
        javax.faces.webapp._ErrorPageWriter.handleException(_ErrorPageWriter.java:359)
        javax.faces.webapp.FacesServlet.handleLifecycleException(FacesServlet.java:182)
        javax.faces.webapp.FacesServlet.service(FacesServlet.java:145)
        com.evermind.server.http.ResourceFilterChain.doFilter(ResourceFilterChain.java:64)

I'm sorry, I've tried reproduced the problem, but I can't. In my single-machine installation, it works fine. Once I load it in the productions servers, with 100+ concurrent users, I start getting this issue. The application itself works fine, and the users haven't reported an unavailable service, but i get like 20 or so of this exceptions daily.

Any chance that at line 344 of ErrorPageWriter:

   return (c.getClass().getName().startsWith(""com.sun.facelets.compiler""));

would be changed to:

    return c != null && (c.getClass().getName().startsWith(""com.sun.facelets.compiler""));


",MYFACES-1740
"
When you have this code:

<%@ page session=""false"" contentType=""text/html;charset=utf-8""%>
<%@ taglib uri=""http://java.sun.com/jsf/html"" prefix=""h""%>
<%@ taglib uri=""http://java.sun.com/jsf/core"" prefix=""f""%>

<html>
<f:view>
	<%@include file=""inc/head.inc""%>
	<body>
	<f:loadBundle
		basename=""org.apache.myfaces.examples.resource.example_messages""
		var=""example_messages"" />
	<h1>Myfaces Examples JSF 1.2 Additions</h1>
	<h:messages></h:messages>
	<h:form id=""form"">
		<h:panelGrid id=""grid"" columns=""3"">
			<h:outputLabel value=""BigInt"" for=""bigint""></h:outputLabel>
			<h:inputText id=""bigint"" value=""#{convertBigBean.bigint}"">
				<f:converter converterId=""javax.faces.BigInteger"" />
			</h:inputText>
			<h:message for=""bigint""></h:message>
			<h:outputLabel value=""BigDecimal"" for=""bigdecimal""></h:outputLabel>
			<h:inputText id=""bigdecimal"" value=""#{convertBigBean.bigdecimal}"">
				<f:converter converterId=""javax.faces.BigDecimal"" />
			</h:inputText>
			<h:message for=""bigdecimal""></h:message>
		</h:panelGrid>
		<h:commandButton id=""button1"" value=""press me"" action=""update"" />
	</h:form>
	</body>
</f:view>
</html>

And the backing bean looks like follows:

package org.apache.myfaces.convertbig;

import java.math.BigDecimal;
import java.math.BigInteger;

public class ConvertBigBean {

	private BigInteger bigint;
	
	private BigDecimal bigdecimal;

	public BigInteger getBigint() {
		return bigint;
	}

	public void setBigint(BigInteger bigint) {
		this.bigint = bigint;
	}

	public BigDecimal getBigdecimal() {
		return bigdecimal;
	}

	public void setBigdecimal(BigDecimal bigdecimal) {
		this.bigdecimal = bigdecimal;
	}
	
}

The code works but if you remove the lines:

<f:converter converterId=""javax.faces.BigInteger"" />

and

<f:converter converterId=""javax.faces.BigDecimal"" />

works in JSF RI 1.2 but not on Myfaces 1.2.  

This issue is related with MYFACES-1260  JSR-252 Issue #13: Specified ""by type"" converter registration for BigDecimal and BigInteger, but this is closed
so I open a new issue. The solution is simple, just add the following:

  <converter>
    <converter-for-class>java.math.BigDecimal</converter-for-class>
    <converter-class>javax.faces.convert.BigDecimalConverter</converter-class>
  </converter>

and 

  <converter>
    <converter-for-class>java.math.BigInteger</converter-for-class>
    <converter-class>javax.faces.convert.BigIntegerConverter</converter-class>
  </converter>  

to the files BigInteger.xml and BigDecimal.xml of myfaces-build project on 1.2 branch

",MYFACES-1739
"I generate a collection of inputText components at runtime with the dataTable tag. 

<h:dataTable value=""#bean.dataList"" var=""item"">
   <h:column>
      <h:inputText id=""field1"" value=""#{bean.field1}/>""
   </h:column>
</h:dataTable>

this leads to 2 inputText components in my example with IDs:
- viewPC_7_HDPVQ2N200O1802L2I1LG810G1_:PC_7_HDPVQ2N200O1802L2I1LG810G1__idJsp0:PC_7_HDPVQ2N200O1802L2I1LG810G1__idJsp40:0:field1
- viewPC_7_HDPVQ2N200O1802L2I1LG810G1_:PC_7_HDPVQ2N200O1802L2I1LG810G1__idJsp0:PC_7_HDPVQ2N200O1802L2I1LG810G1__idJsp40:1:field1

Then I would like to get a reference to one specific of these inputTextFields with root.invokeOnComponent like this:

ContextCallback callback = new ContextCallback(){
        	public void invokeContextCallback(FacesContext context, UIComponent target) {
        		 target.getAttributes().put(""style"", ""background:"" + ERROR_COLOR);
        	}
        };
invokeOnComponent(root, fc, ""viewPC_7_HDPVQ2N200O1802L2I1LG810G1_:PC_7_HDPVQ2N200O1802L2I1LG810G1__idJsp0:PC_7_HDPVQ2N200O1802L2I1LG810G1__idJsp40:1:field1"", callback);

In this example, I would only expect the UIInputText component with the given clientId to change its color, but all dynamically created UIInputText components of this dataTable do so!

Is this a bug or a side effect?
I used the patch provided in  	 MYFACES-1721!

Cheers,
Dominik",MYFACES-1738
"While initializing faces configuration and being offline (or behind a proxy), MyFaces won't start and ends with something like:
DefaultFacesInitializer.initFaces(126) | Error initializing MyFaces: java.net.ConnectException: Connection timed out: connect 

The issue is caused by the parser trying to get the dtd for: http://java.sun.com/dtd/web-facesconfig_1_x.dtd when for some reason it cannot connect to the http url.
The dtd is not being resolved from the jar as it is missing in 1.2.0, org.apache.myfaces.config.impl.FacesConfigEntityResolver will attempt to resolve the resource from org/apache/myfaces/resource, but version 1.2.0 of the myfaces-impl.jar is missing the 'older' dtds (it only contains org/apache/myfaces/resource/web-facesconfig_1_2.xsd).

By copying the web-facesconfig_1_0.dtd and the web-facesconfig_1_1.dtd into the jar everything works as expected.
",MYFACES-1737
"We may not throw exceptions - I still want to show a nice error-page to the user, even with JSF 1.2 (Ed suggested we will have development time messages in 2.0). Until then, this checkin is a workaround - I'm queuing up the exceptions which occurred and finally pass them to the ErrorHandler (currently, only the first, but I'll fix this when time permits).

regards,

Martin",MYFACES-1736
"Situation: Tomahawk 1.1.6 is used in a myfaces 1.2.0 application. The computer where the application is run on is not connected to the internet.

Problem: Myfaces refuses to start.

Expected behaviour: Myfaces should start.

Analysis: When debugging, the error is that myfaces cannot resolve the dtd declaration in tomahawk's faces-config.xml file. I do not think this is tomahawk's problem, because tomahawk wants to be myfaces-1.1 compatible. Myfaces should provide the web-facesconfig_1_0.dtd and web-facesconfig_1_1.dtd in its jar.

In a short glance at the code in org.apache.myfaces.config.impl.FacesConfigEntityResolver , it might seem that these resources are still provided:
public InputSource resolveEntity(...)
{
    InputStream stream;
    if (systemId.equals(FACES_CONFIG_1_0_DTD_SYSTEM_ID))
    {
        stream = ClassUtils.getResourceAsStream(FACES_CONFIG_1_0_DTD_RESOURCE);
    }
    else if (systemId.equals(FACES_CONFIG_1_1_DTD_SYSTEM_ID))
    {
        stream = ClassUtils.getResourceAsStream(FACES_CONFIG_1_1_DTD_RESOURCE);
    }
    ....
}
However, the referenced resources (web-facesconfig_1_0.dtd and web-facesconfig_1_1.dtd in the org.apache.myfaces.resource package) are not packaged in any myfaces 1.2 jar. They used to be present in myfaces-impl-1.1.x.jar

Proposed Resolution: provide web-facesconfig_1_0.dtd and web-facesconfig_1_1.dtd in the org.apache.myfaces.resource package in myfaces-impl-1.2.x.jar

",MYFACES-1735
"Situation: A custom validator is defined in a jsp, e.g.

<h:inputSecret id=""loginPass"" value=""#{loginController.password}"" required=""true"" label=""Password"" validator=""#{loginController.validate}""/>

The error message from validation is displayed on the same page by <h:messages/>. For testing reasons, the validate method always throws an error:

public void validate(FacesContext context, UIComponent component, Object value)
{
  FacesMessage message
      = new FacesMessage(FacesMessage.SEVERITY_ERROR, ""message summary"", ""message detail"");
  throw new ValidatorException(message);
}

Expected behaviour:  After a form submit, the error message ""message summary"" should be displayed by the <h:messages/> tag.

Observed behaviour: An empty message is displayed by the <h:messages/> tag.

Reason: in javax.faces.validator.MethodExpressionValidator#validate(FacesContext, UIComponent, Object), all ELExceptions are caught, and a ValidationException with a empty message is thrown. This empty message is then displayed by <h:messages/>

Resolution: The original ValidatorException is still contained as cause of the ElException. This is required by the contract of MethodExpression.invoke:
<quote>
... throws ELException - if an exception was thrown while performing property or variable resolution. The thrown exception must be included as the cause property of this exception, if available...
</quote>
So one should retrieve the cause of the ELException and check whether it is a ValidatorException. If yes, the cause(containing the original message) should be rethrown. If no, the error is not a validation error but something else, then the ELException should be rethrown (Reason for this: In the current implementation, if another error (no validation error) occurs, e.g. the user mistypes the method name in the jsp, no exception stack trace is displayd but only an empty faces message is added. It is very difficult to find the error. Re-throwing the EL exception removes this problem.)",MYFACES-1734
"Sometimes when using server-side state-saving some state is fixed and won't ever update.
I don't know how exactly this is caused, but it occurs a lot when using JBoss Seam.
It is consensus in the Seam community not to ever use myfaces with server-side state saving or even better not to use myfaces, but the RI instead.

Here is how to reproduce reliably with one of the Seam example applications:

- download and unzip tomcat 5.5.
- download and unzip JBoss Seam 1.2.1.
- edit <seam-install-folder>/build.properties and specify the path to tomcat
- edit <seam-install-folder>/examples/seampay/resources/WEB-INF/web.xml and change state saving method to server.
- run ant deploy.tomcat from <seam-install-folder>/examples/seampay/
- open http://localhost:8080/jboss-seam-pay
- try to click on different accounts.
=> Only the first selection ever will make it. All others are ignored. Change back to client side state saving and everything works ok. 

I tried to look into this, but I am way over my head here with the internals of JSF and MyFaces.",MYFACES-1733
,MYFACES-1732
"For a big JSF page that is accessed by thousands of users,  the JSF tree needs to be rebuilt everytime a user accesses the page. 
If there is a way to configure the page so that the page JSF tree is built only once and put it in application scope, and shared by all users, it will save memory and improve performance.  The backing bean data saved with JSF tree can be separated from JSF tree and stored in user's session scope. 
",MYFACES-1731
"I'm using converters to convert enums to Strings and back and I get a validation error that ""Value is not a valid option.""

in class javax.faces.component._SelectItemsUtil
there is

    public static boolean matchValue(Object value,
                    Iterator selectItemsIter)
    {
        while (selectItemsIter.hasNext())
        {
            SelectItem item = (SelectItem) selectItemsIter.next();
            if (item instanceof SelectItemGroup)
            {
...
            }
            else
            {
                Object itemValue = item.getValue();
// here itemValue is a String but value (submited value) is already converted do my Enum<E>
                if (value==itemValue || value.equals(itemValue))
                {
                    return true;
                }
            }
        }
        return false;
    }
}

I cannot override the Enum.equals() method because it is final.",MYFACES-1730
"When validation is applied to the following page:

<%@ page session=""false"" contentType=""text/html;charset=utf-8""%>
<%@ taglib uri=""http://java.sun.com/jsf/html"" prefix=""h""%>
<%@ taglib uri=""http://java.sun.com/jsf/core"" prefix=""f""%>

<html>
<f:view>
	<%@include file=""inc/head.inc""%>
	<body>
    <f:loadBundle basename=""org.apache.myfaces.examples.resource.example_messages"" var=""example_messages""/>
    <h1>Myfaces Examples JSF 1.2 Additions</h1>	
        <h:messages id=""messageList"" styleClass=""error""/>
        <h:form id=""form1"">
            <h:panelGrid columns=""4"">
                <h:outputLabel for=""form1:number1""
                    value=""#{example_messages['sample1_number']} 1 :"" />
                <h:outputText value=""#{validationController.number1ValidationLabel}"" />
                <h:inputText label=""#{example_messages['sample1_number']}"" 
                id=""number1"" value=""#{calcForm.number1}"" maxlength=""10""
                    size=""25"" required=""true"">
                    <f:validateLongRange minimum=""1"" maximum=""10"" />
                </h:inputText>
                <h:message id=""number1Error"" for=""form1:number1"" styleClass=""error"" />
            </h:panelGrid>
            <h:panelGrid columns=""4"">
                <h:outputLabel for=""form1:number2""
                    value=""#{example_messages['sample1_form']} 2 :"" />
                <h:outputText value=""#{validationController.number2ValidationLabel}"" />

                <h:inputText label=""#{example_messages['sample1_form']}"" 
                    id=""number2"" value=""#{calcForm.number2}"" maxlength=""10""
                    size=""25"" required=""true"">
                    <f:validateLongRange minimum=""20"" maximum=""50"" />
                </h:inputText>
                <h:message id=""number2Error"" for=""form1:number2"" styleClass=""error"" />
            </h:panelGrid>
            <h:panelGrid columns=""2"">
                <h:outputLabel for=""form1:result""
                    value=""#{example_messages['sample1_result']} :"" />
                <h:outputText id=""result"" value=""#{calcForm.result}"" />
            </h:panelGrid>

            <h:panelGrid columns=""4"">
                <h:commandButton id=""addButton""
                    value=""#{example_messages['sample1_add']}"" action=""none"">
                    <f:actionListener
                        type=""org.apache.myfaces.examples.example1.CalcActionListener""></f:actionListener>
                </h:commandButton>
                <h:commandButton id=""subtractButton""
                    value=""#{example_messages['sample1_sub']}"" action=""none"">
                    <f:actionListener
                        type=""org.apache.myfaces.examples.example1.CalcActionListener""></f:actionListener>
                </h:commandButton>

                <h:commandLink id=""href1"" action=""none"">
                    <h:outputText value=""#{example_messages['sample1_add_link']}"" />
                    <f:actionListener
                        type=""org.apache.myfaces.examples.example1.CalcActionListener""></f:actionListener>
                </h:commandLink>
                <h:commandLink id=""href2"" action=""none"">
                    <h:outputText value=""#{example_messages['sample1_sub_link']}"" />
                    <f:actionListener
                        type=""org.apache.myfaces.examples.example1.CalcActionListener""></f:actionListener>
                </h:commandLink>
            </h:panelGrid>
        </h:form>
	</body>
</f:view>
</html>


If you use the attribute label on inputText like this:

                <h:inputText label=""#{example_messages['sample1_number']}"" 
                id=""number1"" value=""#{calcForm.number1}"" maxlength=""10""
                    size=""25"" required=""true"">
                    <f:validateLongRange minimum=""1"" maximum=""10"" />
                </h:inputText>

and a validation error happens, the EL expression inside label attribute returns null. On a message box this looks like:

null: Validation Error: Specified attribute is not between the expected values of 20 and 50.

 On JSF RI 1.2 this works correctly. null is replaced by the expression inside the bundle.
",MYFACES-1729
"The JspViewHandler is improperly flushing the writer.  It makes a call to endDocument after it flushes it the writer, which leaves part of the document stuck in the buffer.  I have a patch to fix this issue.",MYFACES-1728
"When I tried to define headerClass and footerClass property on h:column, does not override h:dataTable headerClass and footerClass

I will send a patch to resolve this issue soon.

Att: Leonardo Uribe",MYFACES-1727
"AutoComplete Does Not Work When You Use Script to Submit a Form

see
http://support.microsoft.com/kb/329156/en-us

Simon said in IE6 this is true as well, at least time by time",MYFACES-1726
"There's an invalid <jsp-version> element in myfaces_core.tld. Found from running a MyFaces 1.2.0 application on Resin.

http://www.nabble.com/MyFaces-1.2.0-on-Resin-3.1.2-tf4438989.html",MYFACES-1725
"The getting started notes:

http://myfaces.apache.org/gettingstarted.html

say:
MyFaces examples. Latest milestone webapp archive (myfaces-X.X.X-examples.zip or myfaces-X.X.X-examples.tgz) is here:
http://myfaces.apache.org/download.html

So I looked through the links but could not find any myfaces-X.X.X-examples.zip  to download.  Turns out those archives are in the tomahawk examples archive.  Other new comers might appreciate being pointed to:

MyFaces Tomahawk X.X.X Examples(tar.gz)	 or MyFaces Tomahawk X.X.X Examples (zip)

Cheers,
- Ole


",MYFACES-1724
"Javascript function oamSetHiddenInput(formname, name, value) does not work in IE 6 when name=""id"". JSF framework should throw an exception or at least log a warning when user try to set parameter with this name.",MYFACES-1723
"The following page works on SunApplication Server 9, but does not work on Geronimo:

<%@page contentType=""text/html""%>
<%@page pageEncoding=""UTF-8""%>

<%@taglib prefix=""f"" uri=""http://java.sun.com/jsf/core""%>
<%@taglib prefix=""h"" uri=""http://java.sun.com/jsf/html""%>
<%@taglib prefix=""c"" uri=""http://java.sun.com/jsp/jstl/core""%>

<!DOCTYPE HTML PUBLIC ""-//W3C//DTD HTML 4.01 Transitional//EN""
   ""http://www.w3.org/TR/html4/loose.dtd"">

<html>
    <head>
        <meta http-equiv=""Content-Type"" content=""text/html; charset=UTF-8"">
        <title>JSP Page</title>
    </head>
    <body>
        <f:view>
            <p>
                <c:forEach var=""i"" items=""#{CombinedEL.table}"">
                    <h:outputText value=""#{i}""/>,
                </c:forEach>
            </p>
        </f:view>
    </body>
</html>

The managed bean looks as follows:

package pp.web;

public class CombinedEL {
    public Object[] getTable() {
        return new Object[] {""a"", ""b"", ""c""};
    }
}

The error looks like this:

HTTP Status 500 - 
type Exception report
message 
description The server encountered an internal error () that prevented it from fulfilling this request.
exception 
javax.servlet.ServletException: javax.servlet.jsp.JspTagException: Don't know how to iterate over supplied ""items"" in &lt;forEach&gt;
        javax.faces.webapp.FacesServlet.service(FacesServlet.java:152)

root cause 
javax.faces.FacesException: javax.servlet.jsp.JspTagException: Don't know how to iterate over supplied ""items"" in &lt;forEach&gt;
        org.apache.myfaces.context.servlet.ServletExternalContextImpl.dispatch(ServletExternalContextImpl.java:340)
        org.apache.myfaces.application.jsp.JspViewHandlerImpl.renderView(JspViewHandlerImpl.java:254)
        org.apache.myfaces.lifecycle.RenderResponseExecutor.execute(RenderResponseExecutor.java:41)
        org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:132)
        javax.faces.webapp.FacesServlet.service(FacesServlet.java:138)

root cause 
javax.servlet.ServletException: javax.servlet.jsp.JspTagException: Don't know how to iterate over supplied ""items"" in &lt;forEach&gt;
        org.apache.jasper.runtime.PageContextImpl.doHandlePageException(PageContextImpl.java:850)
        org.apache.jasper.runtime.PageContextImpl.handlePageException(PageContextImpl.java:779)
        org.apache.jsp.combinedEL_jsp._jspService(combinedEL_jsp.java:90)
        org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
        javax.servlet.http.HttpServlet.service(HttpServlet.java:806)
        org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:388)
        org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:320)
        org.apache.jasper.servlet.JspServlet.service(JspServlet.java:266)
        javax.servlet.http.HttpServlet.service(HttpServlet.java:806)
        org.apache.myfaces.context.servlet.ServletExternalContextImpl.dispatch(ServletExternalContextImpl.java:334)
        org.apache.myfaces.application.jsp.JspViewHandlerImpl.renderView(JspViewHandlerImpl.java:254)
        org.apache.myfaces.lifecycle.RenderResponseExecutor.execute(RenderResponseExecutor.java:41)
        org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:132)
        javax.faces.webapp.FacesServlet.service(FacesServlet.java:138)

root cause 
javax.servlet.jsp.JspTagException: Don't know how to iterate over supplied ""items"" in &lt;forEach&gt;
        org.apache.taglibs.standard.tag.common.core.ForEachSupport.toForEachIterator(ForEachSupport.java:274)
        org.apache.taglibs.standard.tag.common.core.ForEachSupport.supportedTypeForEachIterator(ForEachSupport.java:238)
        org.apache.taglibs.standard.tag.common.core.ForEachSupport.prepare(ForEachSupport.java:155)
        javax.servlet.jsp.jstl.core.LoopTagSupport.doStartTag(LoopTagSupport.java:256)
        org.apache.jsp.combinedEL_jsp._jspx_meth_c_005fforEach_005f0(combinedEL_jsp.java:157)
        org.apache.jsp.combinedEL_jsp._jspx_meth_f_005fview_005f0(combinedEL_jsp.java:119)
        org.apache.jsp.combinedEL_jsp._jspService(combinedEL_jsp.java:80)
        org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
        javax.servlet.http.HttpServlet.service(HttpServlet.java:806)
        org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:388)
        org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:320)
        org.apache.jasper.servlet.JspServlet.service(JspServlet.java:266)
        javax.servlet.http.HttpServlet.service(HttpServlet.java:806)
        org.apache.myfaces.context.servlet.ServletExternalContextImpl.dispatch(ServletExternalContextImpl.java:334)
        org.apache.myfaces.application.jsp.JspViewHandlerImpl.renderView(JspViewHandlerImpl.java:254)
        org.apache.myfaces.lifecycle.RenderResponseExecutor.execute(RenderResponseExecutor.java:41)
        org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:132)
        javax.faces.webapp.FacesServlet.service(FacesServlet.java:138)

note The full stack trace of the root cause is available in the Apache Tomcat/6.0-snapshot logs.
Apache Tomcat/6.0-snapshot
",MYFACES-1722
we need a real impl. for UIData.invokeOnComponent(),MYFACES-1721
"While <h:panelGrid><f:facet name=""header><h:outputText value=""something""/></f:facet></h:panelGrid> will render a table and a thead to put inside it the ""something"" text, the <h:panelGrid><f:facet name=""header><jsp:include page=""/someotherjsp.jsp""/></f:facet></h:panelGrid> will render the someotherjsp code inside a td inside a tbody. That really limits the choices we have and I think it can be fixed. Unfortunately I cannot do the job here where I am (no svn access to download the code, to many firewalls in between).",MYFACES-1720
"The implementation of javax.faces.webapp.UIComponentTag.setProperties(UIComponent) does not fully comply with JSF 1.1 because it sets the renderer type of the class's _componentInstance field instead of the method argument.  On the other hand, it sets the 'rendered' property of the argument as it should.

In normal use, the method argument and the field both reference the same object, thus the class generally works as expected.  The issue becomes a problem, however, for unit tests of third-party tags: the setProperties() methods of those tags cannot easily be tested directly because the _componentInstance field is not initialized until doStartTag(), which invokes setProperties() itself.  In practice, some tests that run successfully against the Sun reference implementation may fail against MyFaces because of this issue.  I haven't examined the MyFaces test suite, but I can only assume that either its tag handlers' tests do not directly test this method at all, or they rely on knowledge of the UIComponentTag implementation.
",MYFACES-1719
"In some situations, the order of literal text and jsf components changes from the first time a view is rendered to the time when it is rendered again after it was submitted.",MYFACES-1718
"Text with unmlauts entered via a html input field (browser inputEncoding = UTF-8), seems to process multi-byte UTF characters as a sequence of single-byte characters. The webbrowser has inputEncoding = UTF-8. The user enters a single none-acii character (e.g. &auml; ) into an input field and submits the form. The value in the resulting form attribute is not a single Java doublebyte character, but 2 Java double byte characters - each derived from one of the UTF-8 bytes encoding &auml; 

Attached screenshots show before- and after umlaut has been posted to MyFaces.",MYFACES-1717
"JSP-Exceptions hadn't been handled specificially - now they are, so the stack-trace is not cut off at JSP-Exceptions.",MYFACES-1716
"My application displays pages generated by Apache Trinidad, MyFaces and by SUN facelets. Xhtml pages are tiled with Facelets
I follow the instructions on Trinidad wiki to use it with faceletes

I have a backend Bean called languageManager which store the locale (string value) selected by user and I want to propagate this locale to all faces pages.
I used the attribute locale of <f:view> tag to do this

<f:view locale=""#{languageManager.locale}"">

When MyFaces generates the page, I have :

com.sun.facelets.tag.TagAttributeException: /WEB-INF/template/one-col-template.xhtml @9,45 locale=""#{languageManager.locale}"" Attribute did not evaluate to a String or Locale: null
at com.sun.facelets.tag.jsf.ComponentSupport.getLocale(ComponentSupport.java:164)
at com.sun.facelets.tag.jsf.core.ViewHandler.apply(ViewHandler.java:83)
at com.sun.facelets.tag.ui.CompositionHandler.apply(CompositionHandler.java:119)
at com.sun.facelets.compiler.NamespaceHandler.apply(NamespaceHandler.java:49)
at com.sun.facelets.compiler.EncodingHandler.apply(EncodingHandler.java:25)
at com.sun.facelets.impl.DefaultFacelet.include(DefaultFacelet.java:248)
at com.sun.facelets.impl.DefaultFacelet.include(DefaultFacelet.java:294)
at com.sun.facelets.impl.DefaultFacelet.include(DefaultFacelet.java:273)
at com.sun.facelets.impl.DefaultFaceletContext.includeFacelet(DefaultFaceletContext.java:143)
at com.sun.facelets.tag.ui.CompositionHandler.apply(CompositionHandler.java:113)
at com.sun.facelets.compiler.NamespaceHandler.apply(NamespaceHandler.java:49)
at com.sun.facelets.compiler.EncodingHandler.apply(EncodingHandler.java:25)
at com.sun.facelets.impl.DefaultFacelet.apply(DefaultFacelet.java:95)
at com.sun.facelets.FaceletViewHandler.buildView(FaceletViewHandler.java:510)
at com.sun.facelets.FaceletViewHandler.renderView(FaceletViewHandler.java:553)
at javax.faces.application.ViewHandlerWrapper.renderView(ViewHandlerWrapper.java:45)
at org.apache.myfaces.trinidadinternal.application.ViewHandlerImpl.renderView(ViewHandlerImpl.java:174)

I debug the code and I found that my backend bean is created (constructor is called) but the method public String getLocale() of my bean is never called
so a null value is returned during locale evaluation.

I downgraded my third-parties version from MyFaces 1.2.0 to MyFaces 1.1.5 and Trinidad 1.2.1 to 1.0.2 and this solve the problem without any other modifications.",MYFACES-1715
"There is a serious conversion/validation problem with JSF in combination with ajax..
From my point of view this is a major show stopper for jsf applications in combination with ajax.

Therefore I created a simple demo application and attach it to this issue.
My form contains a few input fields for Strings, dates and a number. If an invalid format is entered then the submitted value is not erased and the page is rerendered with the entered value.
This is working fine so far.
 
The error occurs now if I click then another ajax command that forces a refresh of the invalid fields via ajax.
I use an a4j:commandButton with ajaxSingle=true and surrounded this button by an a4j:region in order to process no input fields on serverside.
The values that are bound via valueBinding to the inputFields are set to null or reinitialized in the invoked ActionListener.
But the old invalid data from the previous request is rerendered on the page.
 
This happens because the submitted values of the invalid inputFields are not null but still contain the old invalid data.
Therefore the valueBinding is not evaluated in the getter.
 
I can't set the submitted value to null in the converter because invalid values should be rerendered in case that a normal processing button (not cancel button) is clicked.

Pls have a look at the demo application:
Call ... faces/test.jsp

1) Enter some data
   (e.g name=""twotest"", startDate=""01/01/70"", endDate=""01/01/70"" message=""hello"" count=55)
   and click save
   Result: Everything works fine.The new object is rendered in the list

2) Enter invalid data
   (e.g. number=doh)
   and click save
   Result: conversion error ""Count:"": value is no valid number (don't know the correct english message)

3) Click create new
   Result: Field count does still contain the old value doh
   
4) Click Edit
   Result: Field count does still contain the old value doh
   The other fields are correctly initialized
   
My first approach was to except submittedValue from stateSaving but this did not solve the problem..",MYFACES-1714
"On section 9.4.9 of the JSF 1.2 Spec is a  description about a <f:phaseListener> Tag . 
This Tag is missing in myfaces_core.tld inside the myfaces-impl-1.2.0.jar",MYFACES-1713
"On components that have an actionListener set or valueChangeListener, these listeners are added to the component instance twice. At runtime this causes the method to be called with the event twice. For example I have the following component

<h:selectOneMenu id=""Applications"" onchange=""submit()"" valueChangeListener=""#{EditPage.processApplicationChange}"">

my processApplicationChange method is invoke twice.

I have tracked this down the UIComponentELTag and UIComponentClassicTagBase classes. The UIComponentClassicTagBase calls createComponent in the findComponent method and then calls setProperties. However the createComponent method that is implemented in UIComponentELTag also calls setProperties. The setProperties routine is what adds any listeners to a collection. Therefore they get added twice. By removing the setProperties in UIComponentELTag createComponent and leaving it up to the findComponent method fixes the issue. I'm not sure however if this will have other implications although as yet I have found no issues.",MYFACES-1712
"This patch provides an error handler which redirects the user to an error page if an error occurs. The features are:
- the error page can be a jsf page
- the error page is customizable by overriding a method in the error handler
- loop detection (i.e. if an error occurs on the error page, an exception is thrown instead of endlessly looping)
- no redirect is sent to the browser(i.e. all request scoped attributes survive the redirect)

The error handler works by cleaning all HTTP request parameters from the request and dispatching the cleaned request to the error page. Cleaning the request parameters is necessary because myfaces gets confused if the error occurs in a postback and the error page is a jsf page. 
The original request parameters can be retrieved by casting the request to HttpServletRequestWrapper, retrieving its wrapped request by getRequest() and asking the wrapped request for the request parameters.",MYFACES-1711
"Improve performance by using Trove (Trove4J) fast collections (as optional)

http://trove4j.sourceforge.net/

Trove4J can be made optional like this:
http://www.onjava.com/pub/a/onjava/2002/06/12/trove.html?page=2 

I believe it is not that difficult to implement and results would be easy to compare...
",MYFACES-1710
"According to an inline comment (""validation set to false during implementation of 1.2"", DigesterFacesConfigUnmarshallerImpl) and my personal experience, configuration file validation hasn't been implemented so far. However, as far as I know the JSF specification says that ""JSF implementations that are part of a Java EE technology-compliant implementation are required to validate the application resource file against the XML schema"" (section 10.4.2). I'll attach a sample application reproducing the ""error"" (the fact that there is no error is incorrect this time) and the corresponding patch.
",MYFACES-1709
"It might have been better to reopen MYFACES-603, but observed behavior is slightly different.

I'm using JSTL's <c:if> to dynamically change view component tree depending on application state. This consistently results in duplicate id exception in JspStateManagerImpl.checkForDuplicateIds(). I have been thinking it's a bad thing to do, but I may have found a problem in MyFaces.

UIComponentTag.removeFormerChildren method removes former children not seen during rendering. It uses UIComponent.findComponent() for looking up children, but the method returns a child of other UIComponent under certain situations - specifically when two UIComponents have the same id due to changed automatically-assigned IDs. So former UIComponent incorrectly remains in the view tree, causing duplicate id exception.",MYFACES-1708
"Please log catched exceptions e.g. in org.apache.myfaces.renderkit.html.HtmlFormatRenderer:

103         MessageFormat format = new MessageFormat(pattern, facesContext.getViewRoot().getLocale());
104         try
105         {
106             return format.format(args);
107         }
108         catch (Exception e)
109         {
110             log.error(""Error formatting message of component "" + htmlOutputFormat.getClientId(facesContext));
111             return """";
112         }

Notice the missing Exception in the call of log.error()! It should be log.error(""your message"", e).",MYFACES-1707
"I have a web app where suddenly auto scroll isn't working anymore... Only thing I know I have done, is to upgrade to myfaces 1.1.5 and tomahawk 1.1.6 but not sure if the change happend then or later...
It looks like all the needed javascript calls and method is rendered on the page but after submitting the page, I end up at the top of the page....


Regards,

BTJ",MYFACES-1706
"Rendering of this page:
<%@ page session=""false"" contentType=""text/html;charset=utf-8""%>
<%@ taglib uri=""http://java.sun.com/jsf/html"" prefix=""h""%>
<%@ taglib uri=""http://java.sun.com/jsf/core"" prefix=""f""%>
<%@ taglib uri=""http://myfaces.apache.org/tomahawk"" prefix=""t""%>
<html>
<body>
<f:view>
<f:loadBundle basename=""messages"" var=""messages"" />
<h:form id=""form"">
<h:panelGrid columns=""1"">
<h:commandButton value=""Änderungen speichern"" action=""#{persoenlicheDatenHandler.save}"" />			
</h:panelGrid>
</h:form>
</f:view>
</body>
</html>

comes out like this:

<table><tbody><tr>
<td>
<input id=""form:j_id_jsp_748720302_3"" name=""form:j_id_jsp_748720302_3"" type=""submit"" value=""&Auml;nderungen speichern"" onclick=""if(typeof window.clearFormHiddenParams_form=='function'){clearFormHiddenParams_form('form');}"" />
</tr>
</tbody></table>

Results in the following warning:
WARN HtmlResponseWriterImpl:234 - HTML nesting warning on closing td: element input rendered by component : {Component-Path : [Class: javax.faces.component.UIViewRoot,ViewId: /pages/daten.jsp][Class: javax.faces.component.html.HtmlForm,Id: form][Class: javax.faces.component.html.HtmlPanelGrid,Id: j_id_jsp_748720302_2][Class: javax.faces.component.html.HtmlCommandButton,Id: j_id_jsp_748720302_3]} not explicitly closed

If changed to <h:panelGrid columns=""2""> the output is:
<table><tbody><tr><td>
<input id=""form:j_id_jsp_748720302_3"" name=""form:j_id_jsp_748720302_3"" type=""submit"" value=""Änderungen speichern"" onclick=""if(typeof window.clearFormHiddenParams_form=='function'){clearFormHiddenParams_form('form');}"" />
<td></td></tr>
</tbody></table>

and therefore still one </td> short.",MYFACES-1705
"The exception seems to be at faces servlet processing. Updating from working
jsf-1.1 app to jsf-1.2 app. This looks like an issue with myfaces 1.2.0. 
I re-run maven with Sun-RI 1.2, everything is fine. 

Duong BaTien
DBGROUPS and BudhNet

SEVERE: Servlet.service() for servlet faces threw exception
java.lang.StackOverflowError
	at org.apache.catalina.connector.Request.removeAttribute(Request.java:1336)
	at org.apache.catalina.connector.RequestFacade.removeAttribute(RequestFacade.java:514)
	at org.apache.catalina.core.ApplicationHttpRequest.removeAttribute(ApplicationHttpRequest.java:256)
	at org.apache.myfaces.context.servlet.RequestMap.removeAttribute(RequestMap.java:56)
	at org.apache.myfaces.util.AbstractAttributeMap.remove(AbstractAttributeMap.java:121)
	at org.apache.myfaces.el.unified.resolver.FacesCompositeELResolver.unsetScope(FacesCompositeELResolver.java:163)
	at org.apache.myfaces.el.unified.resolver.FacesCompositeELResolver.invoke(FacesCompositeELResolver.java:152)
	at org.apache.myfaces.el.unified.resolver.FacesCompositeELResolver.getValue(FacesCompositeELResolver.java:104)
	at org.apache.myfaces.el.VariableResolverImpl.resolveVariable(VariableResolverImpl.java:61)
	at org.apache.shale.faces.ShaleVariableResolver.resolveVariable(ShaleVariableResolver.java:157)
	at org.springframework.web.jsf.DelegatingVariableResolver.resolveVariable(DelegatingVariableResolver.java:108)
	at org.apache.myfaces.el.convert.VariableResolverToELResolver.getValue(VariableResolverToELResolver.java:93)
	at javax.el.CompositeELResolver.getValue(CompositeELResolver.java:53)
	at org.apache.myfaces.el.unified.resolver.FacesCompositeELResolver.access$301(FacesCompositeELResolver.java:46)
	at org.apache.myfaces.el.unified.resolver.FacesCompositeELResolver$4.invoke(FacesCompositeELResolver.java:108)
	at org.apache.myfaces.el.unified.resolver.FacesCompositeELResolver.invoke(FacesCompositeELResolver.java:148)
	at org.apache.myfaces.el.unified.resolver.FacesCompositeELResolver.getValue(FacesCompositeELResolver.java:104)
	at org.apache.el.parser.AstIdentifier.getValue(AstIdentifier.java:45)
	at org.apache.el.parser.AstValue.getValue(AstValue.java:86)
	at org.apache.el.ValueExpressionImpl.getValue(ValueExpressionImpl.java:186)
	at com.sun.facelets.el.TagValueExpression.getValue(TagValueExpression.java:71)
	at com.sun.facelets.tag.TagAttribute.getObject(TagAttribute.java:233)
	at com.sun.facelets.tag.TagAttribute.getValue(TagAttribute.java:200)
	at com.sun.facelets.tag.ui.CompositionHandler.apply(CompositionHandler.java:113)
	at com.sun.facelets.compiler.NamespaceHandler.apply(NamespaceHandler.java:49)
	at com.sun.facelets.compiler.EncodingHandler.apply(EncodingHandler.java:25)
	at com.sun.facelets.impl.DefaultFacelet.include(DefaultFacelet.java:248)
	at com.sun.facelets.impl.DefaultFacelet.include(DefaultFacelet.java:294)
	at com.sun.facelets.impl.DefaultFacelet.include(DefaultFacelet.java:273)
	at com.sun.facelets.impl.DefaultFaceletContext.includeFacelet(DefaultFaceletContext.java:143)
	at com.sun.facelets.tag.ui.CompositionHandler.apply(CompositionHandler.java:113)
	at com.sun.facelets.compiler.NamespaceHandler.apply(NamespaceHandler.java:49)
	at com.sun.facelets.compiler.EncodingHandler.apply(EncodingHandler.java:25)
	at com.sun.facelets.impl.DefaultFacelet.include(DefaultFacelet.java:248)
	at com.sun.facelets.impl.DefaultFacelet.include(DefaultFacelet.java:294)
	at com.sun.facelets.impl.DefaultFacelet.include(DefaultFacelet.java:273)
	at com.sun.facelets.impl.DefaultFaceletContext.includeFacelet(DefaultFaceletContext.java:143)
	at com.sun.facelets.tag.ui.CompositionHandler.apply(CompositionHandler.java:113)
	at com.sun.facelets.compiler.NamespaceHandler.apply(NamespaceHandler.java:49)
	at com.sun.facelets.compiler.EncodingHandler.apply(EncodingHandler.java:25)
	at com.sun.facelets.impl.DefaultFacelet.include(DefaultFacelet.java:248)
	at com.sun.facelets.impl.DefaultFacelet.include(DefaultFacelet.java:294)
	at com.sun.facelets.impl.DefaultFacelet.include(DefaultFacelet.java:273)
	at com.sun.facelets.impl.DefaultFaceletContext.includeFacelet(DefaultFaceletContext.java:143)
	at com.sun.facelets.tag.ui.CompositionHandler.apply(CompositionHandler.java:113)
	at com.sun.facelets.compiler.NamespaceHandler.apply(NamespaceHandler.java:49)
	at com.sun.facelets.compiler.EncodingHandler.apply(EncodingHandler.java:25)
	at com.sun.facelets.impl.DefaultFacelet.include(DefaultFacelet.java:248)
	at com.sun.facelets.impl.DefaultFacelet.include(DefaultFacelet.java:294)
",MYFACES-1704
"During the Invoke Application phase a SetPropertyActionListener always throws an AbortProcessingException claiming that the target has not been set, but that's just because the methode restoreState is incorrectly implemented. It creates a new array rather than cast the given state. I'll attach a sample web application reproducing this error and the corresponding patch.",MYFACES-1703
"This Facelets-Error-Handler works fine when using MyFaces 1.1.6, but a I guess a bug has been introduced while porting this code to MyFaces 1.2.1. Currently, while setting up the HTML code to display the exception a FileNotFoundException will be thrown because of a missing resource: META-INF/rsc/facelet-dev-error.xml. This behaviour is quite reasonable as the directory structure somehow has changed. There is no directory called META-INF (http://svn.apache.org/repos/asf/myfaces/core/branches/1_2_1/api/src/main/resources/). Therefore this bug is quite easy to fix as you just have to fix the directory structure. I'll attach a sample web application reproducing this error.",MYFACES-1702
"As the topic suggests, the state gets reconstructed twice during the Restore View phase. State reconstruction consists of decoding, decrypting and decompressing (assuming that MyFaces has been configured to do so) the given state (i.e. the ""javax.faces.ViewState"" request parameter) so it shouldn't be done more often than necessary. For a better understanding of this issue, I'll describe the call hierarchy (simplified):

///

// myfaces/core/branches/1_2_1/impl/org/apache/myfaces/application/jsp/JspStateManagerImpl.java

public UIViewRoot restoreView(FacesContext context, String viewId, String renderKitId) {
    ...
    if (isSavingStateInClient(context)) {
        ...
        state = responseStateManager.getState(context, viewId);
    }
    ...
}

// myfaces/core/branches/1_2_1/api/javax/faces/render/ResponseStateManager.java

public Object getState(FacesContext context, String viewId) {
    Object[] structureAndState = new Object[2];
    structureAndState[0] = getTreeStructureToRestore(context, viewId);
    structureAndState[1] = getComponentStateToRestore(context);
    return structureAndState;
}

// myfaces/core/branches/1_2_1/impl/org/apache/myfaces/renderkit/html/HtmlResponseStateManager.java

public Object getTreeStructureToRestore(FacesContext facesContext, String viewId) {
    ...
    Object encodedState = requestParameterMap.get(""javax.faces.ViewState""); 
    Object[] savedState = (Object[]) StateUtils.reconstruct((String) encodedState, ...);
    ...
    return savedState[TREE_PARAM];
}

public Object getComponentStateToRestore(FacesContext facesContext) {
    ...
    Object encodedState = requestParameterMap.get(""javax.faces.ViewState""); 
    Object[] savedState = (Object[]) StateUtils.reconstruct((String) encodedState, ...);
    ...
    return savedState[STATE_PARAM];
}

\\\

One possible solution (without breaking backward compatibility) is to override javax.faces.render.ResponseStateManager#getState(FacesContext, String) and that's exactly what I've done. I've tested my patch with the MyFaces Tomahawk examples on my notebook (Ubuntu 7.04, AMD Turion 1.80 GHz, 1.5 GB DDR). Additionally, I'll attach a Apache JMeter test configuration and results of this test using a local Jetty server. I'd appreciate someone backing up my test results.",MYFACES-1701
"On pages with more than one <h:form>, each one generates an element which has always the same id, which is invalid HTML. 

Looks like this:

...</script><input type=""hidden"" name=""javax.faces.ViewState"" id=""javax.faces.ViewState"" value=""..."" /></form>

I tried to put it inside <f:subview> as a workaround, but that did not work either (the ids did not change).",MYFACES-1700
"<h:selectManyListbox
	value=""#{debtorView.debtorService.sortOrders}"">
	<x:selectItems value=""#{sortOrderView.sortOrders}""
	   var=""sortOrder"" itemLabel=""#{sortOrder.name}""
	   itemValue=""#{sortOrder}"" />
</h:selectManyListbox>

Does not work using default converter-for-class from faces-config.xml. 

Using a specific converter (i.e. <h:selectManyListbox converter=""SortOrderConverter""...) it does work. 
",MYFACES-1699
"I downloaded myfaces-core-1.2.0-bin.zip and found

1) myfaces-api-1.2.0.jar contains a NOTICE.txt file that contains a claim that it contains JSCookMenu by HengYuan, ProtoType by Sam Stephenson, and Script by Thomas Fuchs.  Since the API library contains only the class files from the javax.faces package, I find this hard to believe.  I would have expected the NOTICE.txt file in this jar to match the file at myfaces/core/trunk/api/src/main/resources/META-INF/NOTICE.txt.  Perhaps the build process copies a NOTICE.txt file from the wrong source.

2) myfaces-impl-1.2.0.jar contains a NOTICE.txt file that contains a claim that it contains software from SUN.  I don't think that is true anymore. The web-facesconfig_1_2.xsd is a clean Apache implementation.  See Jira issue MYFACES-1639 and MYFACES-1582 for more information.   I think the source for this file is myfaces/core/trunk/impl/src/main/resources/META-INF/NOTICE.txt .

3) myfaces-impl-1.2.0.jar contains a \licenses\sundtd-LICENSE.txt file.  Since there is no SUN content anymore, this secondary license should be removed.

Perhaps trivial, but important fixes for those of us who use open source software and want to be confident that we understand all the license implications.

",MYFACES-1698
"Recently I tried to start using immediate JSP EL expressions but I am getting an odd behaviour which I would like to know if anyone else has seen.
 
In my mfaces-config.xml I have the following Managed bean defined:
 
    <managed-bean>
        <managed-bean-name>myDate</managed-bean-name>
        <managed-bean-class>java.util.Date</managed-bean-class>
        <managed-bean-scope>session</managed-bean-scope> 
    </managed-bean>
 
I have a JSP that contains the following:
 
    <f:view>
        <h:panelGrid columns=""1"">
            <h:outputText value=""myDate=#{myDate}"" />
            <h:outputText value=""myDate.time=#{myDate.time} "" />
            <f:verbatim>
                myDate = ${myDate}<br>
                myDate.time = ${myDate.time}
            </f:verbatim>
        </h:panelGrid>
    </f:view> 
 
The output I am getting for this code is as follows:
 
    myDate=Fri Aug 03 11:52:31 CST 2007 
    myDate.time=1186163551316 
    myDate = Fri Aug 03 11:52:31 CST 2007
    myDate.time =  
 
This behaviour is clearly wrong. For some reason the immediate EL expression is not resolving the time property correctly.
 
I debugged this in Eclipse and I found that the ""time"" segment of the EL expression is being resolved to 'null' via a sequence of calls that eventually leads to the following stack trace:
 
    date.jsp line: 10 
    org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate(String, Class, javax.servlet.jsp.PageContext, org.apache.jasper.runtime.ProtectedFunctionMapper, boolean) line: 923  
    org.apache.el.ValueExpressionImpl.getValue(javax.el.ELContext) line: 186 
    org.apache.el.parser.AstValue.getValue(org.apache.el.lang.EvaluationContext) line: 97 
    javax.el.CompositeELResolver.getValue( javax.el.ELContext, Object, Object) line: 53 
    org.apache.myfaces.el.unified.resolver.FacesCompositeELResolver.getValue(javax.el.ELContext, Object, Object) line: 104 
    org.apache.myfaces.el.unified.resolver.FacesCompositeELResolver.invoke (org.apache.myfaces.el.unified.resolver.FacesCompositeELResolver.ResolverInvoker<T>) line: 148 
    org.apache.myfaces.el.unified.resolver.FacesCompositeELResolver$4.invoke() line: 108 
    org.apache.myfaces.el.unified.resolver.FacesCompositeELResolver.access$301 (org.apache.myfaces.el.unified.resolver.FacesCompositeELResolver, javax.el.ELContext, Object, Object) line: 46 
    org.apache.myfaces.el.unified.resolver.FacesCompositeELResolver(javax.el.CompositeELResolver).getValue( javax.el.ELContext, Object, Object) line: 53 
    org.apache.myfaces.el.convert.PropertyResolverToELResolver.getValue(javax.el.ELContext, Object, Object) line: 106 
    org.apache.myfaces.el.convert.PropertyResolverToELResolver.invoke (javax.el.ELContext, Object, Object, org.apache.myfaces.el.convert.PropertyResolverToELResolver.ResolverInvoker<T>) line: 193 
    org.apache.myfaces.el.convert.PropertyResolverToELResolver$3.invoke(Object, Object) line: 115  
    org.apache.myfaces.el.DefaultPropertyResolver.getValue(Object, Object) line: 64 

The source of the deepest function is as follows:
 
    public Object getValue(Object base, Object property) throws EvaluationException, PropertyNotFoundException
    {
        updatePropertyResolved();
        return null;
    }
 
The updatePropertyResolved() function looks like this:
 
    private void updatePropertyResolved()
    {
        FacesContext.getCurrentInstance().getELContext().setPropertyResolved(false);
    }

This function is setting the propertyResolved flag to false in the ""current"" ELContext. This is necessary since the propertyResolved flag is set to true before every call to each resolver.  The current ELContext is of type org.apache.myfaces.el.unified.FacesELContext and eclipse says it's id is 313.
 
However, when I look further up the stack it turns out that the FacesCompositeELResolver checks to see if the ""time"" segment was resolved by checking the value of the propertyResolved flag in a context object of type org.apache.el.lang.EvaluationContext with id 266. Confusingly, this context object delegates it's work to a different context object of type org.apache.jasper.el.ELContextImpl with id 259. The point here is that it seems to me that the wrong context object is being used somewhere - the propertyResolved flag is being set in one object but check in a different object!! 
",MYFACES-1697
"Im having a problem with f:setPropertyActionListener when binding the target to an int-field. I never had this problem when using the latest MyFaces 1.1 and Facelets 1.1.12 which backported the setPropertyActionListener-functionality to JSF 1.1 Environments.

Here´s an excerpt of the example xhtml-page:

<h:commandButton value=""click"">
     <f:setPropertyActionListener target=""#{myBean.currentPage}"" value=""1"" />
</h:commandButton>

and here the bean (int-approach):

public class MyBean
{
    private int currentPage;
...
     	public int getCurrentPage()
	{
		return this.currentPage; 
	}

     	public int setCurrentPage(int page)
	{
		this.currentPage = page;
	}
...
} 

So when I click on the button to perform a submit I´m getting the following Exception:

java.lang.IllegalArgumentException: argument type mismatch
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at javax.el.BeanELResolver.setValue(BeanELResolver.java:108)
	at javax.el.CompositeELResolver.setValue(CompositeELResolver.java:68)
	at org.apache.myfaces.el.unified.resolver.FacesCompositeELResolver.access$501(FacesCompositeELResolver.java:46)
	at org.apache.myfaces.el.unified.resolver.FacesCompositeELResolver$6.invoke(FacesCompositeELResolver.java:132)
	at org.apache.myfaces.el.unified.resolver.FacesCompositeELResolver.invoke(FacesCompositeELResolver.java:148)
	at org.apache.myfaces.el.unified.resolver.FacesCompositeELResolver.setValue(FacesCompositeELResolver.java:128)
	at org.apache.el.parser.AstValue.setValue(AstValue.java:114)
	at org.apache.el.ValueExpressionImpl.setValue(ValueExpressionImpl.java:249)
	at com.sun.facelets.el.TagValueExpression.setValue(TagValueExpression.java:93)
	at com.sun.facelets.tag.jsf.core.SetPropertyActionListenerHandler$SetPropertyListener.processAction(SetPropertyActionListenerHandler.java:113)
	at javax.faces.event.ActionEvent.processListener(ActionEvent.java:48)
	at javax.faces.component.UIComponentBase.broadcast(UIComponentBase.java:487)
	at javax.faces.component.UICommand.broadcast(UICommand.java:105)
	at javax.faces.component.UIViewRoot._broadcastForPhase(UIViewRoot.java:292)
	at javax.faces.component.UIViewRoot.process(UIViewRoot.java:209)
	at javax.faces.component.UIViewRoot.processApplication(UIViewRoot.java:117)
	at org.apache.myfaces.lifecycle.InvokeApplicationExecutor.execute(InvokeApplicationExecutor.java:32)
	at org.apache.myfaces.lifecycle.LifecycleImpl.executePhase(LifecycleImpl.java:95)
	at org.apache.myfaces.lifecycle.LifecycleImpl.execute(LifecycleImpl.java:70)
	at javax.faces.webapp.FacesServlet.service(FacesServlet.java:137)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.myfaces.webapp.filter.ExtensionsFilter.doFilter(ExtensionsFilter.java:147)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:230)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:175)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:128)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:104)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:261)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:844)
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:581)
	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:447)
	at java.lang.Thread.run(Unknown Source)

Afterwards I changed the target-binding to String -this fixed the problem for my xhtml-example above. I change the Methods like this:

public class MyBean
{
    private int currentPage;
...
     	public String getCurrentPage()
	{
                return String.valueOf(this.currentPage); 
	}

     	public void setCurrentPage(String page)
	{
                this.currentPage = Integer.parseInt(page);
	}
...
} 

so far so good, but I´m facing another problem, when having ""calculated-expression"" as the value of setPropertyActionListener like:

<f:setPropertyActionListener target=""#{myBean.currentPage}"" value=""#{myBean.currentPage - 1}"" />

then neither the int-approach nor the string-approach works. with using the int-binding I´m getting the same error as above and with the string-binding i get another IllegalArgumentException (caused by a ClassCastException):

java.lang.IllegalArgumentException: java.lang.ClassCastException@9945e9
	at sun.reflect.GeneratedMethodAccessor188.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at javax.el.BeanELResolver.setValue(BeanELResolver.java:108)
	at javax.el.CompositeELResolver.setValue(CompositeELResolver.java:68)
	at org.apache.myfaces.el.unified.resolver.FacesCompositeELResolver.access$501(FacesCompositeELResolver.java:46)
	at org.apache.myfaces.el.unified.resolver.FacesCompositeELResolver$6.invoke(FacesCompositeELResolver.java:132)
	at org.apache.myfaces.el.unified.resolver.FacesCompositeELResolver.invoke(FacesCompositeELResolver.java:148)
	at org.apache.myfaces.el.unified.resolver.FacesCompositeELResolver.setValue(FacesCompositeELResolver.java:128)
	at org.apache.el.parser.AstValue.setValue(AstValue.java:114)
	at org.apache.el.ValueExpressionImpl.setValue(ValueExpressionImpl.java:249)
	at com.sun.facelets.el.TagValueExpression.setValue(TagValueExpression.java:93)
	at com.sun.facelets.tag.jsf.core.SetPropertyActionListenerHandler$SetPropertyListener.processAction(SetPropertyActionListenerHandler.java:113)
	at javax.faces.event.ActionEvent.processListener(ActionEvent.java:48)
	at javax.faces.component.UIComponentBase.broadcast(UIComponentBase.java:487)
	at javax.faces.component.UICommand.broadcast(UICommand.java:105)
	at javax.faces.component.UIViewRoot._broadcastForPhase(UIViewRoot.java:292)
	at javax.faces.component.UIViewRoot.process(UIViewRoot.java:209)
	at javax.faces.component.UIViewRoot.processApplication(UIViewRoot.java:117)
	at org.apache.myfaces.lifecycle.InvokeApplicationExecutor.execute(InvokeApplicationExecutor.java:32)
	at org.apache.myfaces.lifecycle.LifecycleImpl.executePhase(LifecycleImpl.java:95)
	at org.apache.myfaces.lifecycle.LifecycleImpl.execute(LifecycleImpl.java:70)
	at javax.faces.webapp.FacesServlet.service(FacesServlet.java:137)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.myfaces.webapp.filter.ExtensionsFilter.doFilter(ExtensionsFilter.java:147)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:230)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:175)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:128)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:104)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:261)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:844)
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:581)
	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:447)
	at java.lang.Thread.run(Unknown Source)

I also tried to use standard converters to ensure that ""value"" is always converted to an Integer or String, e.g.:

<f:setPropertyActionListener target=""#{myBean.currentPage}"" value=""1"" >
     <f:convertNumber integerOnly=""true""/>
</f:setPropertyActionListener>

But I also had no luck with this. It didn´t change anything.

So whats wrong here? Do I have to ensure or convert the value somehow or should the jsf-implementation perform the needed convertions?



",MYFACES-1695
"Myfaces 1.2 fails with one of these messages if no web.xml can be found or no mapping for the FacesServlet is defined:

""Couldn't find web.xml. Abort initializing MyFaces.""
""No mappings of FacesServlet found. Abort initializing MyFaces.""

That's a quite strict interpretation of the spec which says 
'Implementations may check for the presence of a servlet-class definition of class
javax.faces.webapp.FacesServlet in the web application deployment descriptor
as a means to abort the configuration process and reduce startup time for applications that do
not use JavaServer Faces Technology.'

It would be helpful for unit tests if the web.xml and a servlet-mapping is not mandatory (maybe configurable?).
In my unit tests I start an embedded jetty server whose configuration is build programmatically:

Server jettyServer = new Server();
Context webappContext = new Context(jettyServer, contextPath, Context.SESSIONS);
webappContext.addEventListener(new StartupServletContextListener());
ServletHolder facesServletHolder = new ServletHolder(new FacesServlet());
webappContext.addServlet(facesServletHolder, ""*.faces"");
webappContext.getServer().start();

That code is working fine with Myfaces 1.1 but broken with 1.2.








",MYFACES-1694
"Myfaces 1.2.0 requires JSP 2.1 to be present. Otherwise the StartupServletContextListener fails with this error:

Exception sending context initialized event to listener instance of class org.apache.myfaces.webapp.StartupServletContextListener
java.lang.NoSuchMethodError: javax.servlet.jsp.JspFactory.getJspApplicationContext(Ljavax/servlet/ServletContext;)Ljavax/servlet/jsp/JspApplicationContext;
        at org.apache.myfaces.webapp.DefaultFacesInitializer.initFaces(DefaultFacesInitializer.java:102)
        at org.apache.myfaces.webapp.StartupServletContextListener.contextInitialized(StartupServletContextListener.java:57) 

JSP version 2.1 or better JSP in general should be an optional dependency, like discussed here and implemented in Sun RI too:
http://www.nabble.com/Does-MyFaces-1.2-require-JSP-2.1--tf4112432.html#a11693501

Use cases: 
- Run Myfaces 1.2.0 in JEE 1.4 environment (Tomcat 5.x). 
- Easier setup and smaller distributions when running Myfaces in an embedded servlet container (jetty) with facelets. For example I'm using jetty for junit tests. I haven't found a working setup which solves the jsp problems.




",MYFACES-1693
"Situation:
The tag <h:commandLink action=""#{someBean.someAction}"" value=""submit""></h:commandLink> is used in a jsp page, which is visited by the user. The user clicks on the link.

Expected behaviour:
The method someBean.someAction() should be called, and the navigation rule which matches the outcome should determine the page to be displayed.

Wrong behaviour:
The method defined in action is not called and the same jsp page is rendered again. 

I did some debugging to find the reason of this problem. It seems to me that the server does not recognize that the click on the link is a postback. In line 172 in org.apache.myfaces.renderkit.html.HtmlResponseStateManager, the HTTP Parameter ResponseStateManager.VIEW_STATE_PARAM is checked for existence. If it is there, the request is a callback, and if it is not there, the request is not treated as postback. This parameter is not encoded in the link rendered by h:commandLink, thus the request is not treated as a postback, and the page is just rendered again.

If javaScript rendering is allowed, this works fine because the HTTP parameter ResponseStateManager.VIEW_STATE_PARAM is rendered as a hidden input field, and the javascript code does a form submit.

It seems to me that the problem could be solved by adding the parameter ResponseStateManager.VIEW_STATE_PARAM to the generated link (but I did not check it).",MYFACES-1692
"I am using the onBeforeUnload event to prevent the user leaving the page without first saving their work. 

If the user cancels the page navigation, further navigation in the page fails. I tracked this down to this call in oamSubmitForm

document.forms[formName].submit();

In IE when the user cancels navigation of the page the form.submit method throws an exception. This isn't caught in oamSubmitForm and so it doesn't complete cleanly.

I fixed this by changing the 2 calls to form.submit too:

try { document.forms[formName].submit(); } catch (e) {}

oamSubmitForm now completes cleanly and further navigation in the page succeeds.",MYFACES-1691
"  MyFaces 1.2 do not use local web-facesconfig_1_2.xsd.
  If Tomcat is started without an internet connection, an exception is always thrown:

21:35:06,968 ERROR DefaultFacesInitializer:126 - Error initializing MyFaces: java.net.UnknownHostException: java.sun.com
javax.faces.FacesException: java.net.UnknownHostException: java.sun.com
	at org.apache.myfaces.config.FacesConfigurator.feedClassloaderConfigurations(FacesConfigurator.java:425)
	at org.apache.myfaces.config.FacesConfigurator.configure(FacesConfigurator.java:171)
	at org.apache.myfaces.webapp.DefaultFacesInitializer.initFaces(DefaultFacesInitializer.java:112)
	at org.apache.myfaces.webapp.StartupServletContextListener.contextInitialized(StartupServletContextListener.java:57)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:3827)
	at org.apache.catalina.core.StandardContext.start(StandardContext.java:4334)
	at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:791)
	at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:771)
	at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:525)
	at org.apache.catalina.startup.HostConfig.deployDirectory(HostConfig.java:920)
	at org.apache.catalina.startup.HostConfig.deployDirectories(HostConfig.java:883)
	at org.apache.catalina.startup.HostConfig.deployApps(HostConfig.java:492)
	at org.apache.catalina.startup.HostConfig.start(HostConfig.java:1138)
	at org.apache.catalina.startup.HostConfig.lifecycleEvent(HostConfig.java:311)
	at org.apache.catalina.util.LifecycleSupport.fireLifecycleEvent(LifecycleSupport.java:117)
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1053)
	at org.apache.catalina.core.StandardHost.start(StandardHost.java:719)
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1045)
	at org.apache.catalina.core.StandardEngine.start(StandardEngine.java:443)
	at org.apache.catalina.core.StandardService.start(StandardService.java:516)
	at org.apache.catalina.core.StandardServer.start(StandardServer.java:710)
	at org.apache.catalina.startup.Catalina.start(Catalina.java:566)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:288)
	at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:413)",MYFACES-1690
"This will check regularly for changes in the web.xml file, and reloads it if needed. The time interval can be set by means of a context parameter (default is 2 seconds right now).",MYFACES-1689
The patch just adds highlighting of the component that produced the error in the component tree,MYFACES-1688
"According to all good sense, update model should throw an exception, and not show a message in the message list, if setting the value of the model-bean throws an exception itself. 

Hopefully this won't make any problems with the TCK, if it does we should challenge it.

regards,

Martin",MYFACES-1687
"The download version of the myfaces core, is missing the needed jstl and standard jars, which are needed to get an application up and running, many servlet runners do not provide those jars, maybe an extra packaging is needed or both have to be added.
",MYFACES-1686
"By express permission of Jacob Hookom for dual licensing one class out of Facelets as ASL, I've added the Facelets-Error-Handling code to the rest of the MyFaces LifeCycle. Jacob has an ICLA on file, so paperwork has been done before.

To tweak this behaviour, two new context-parameters have been added (add them to your web.xml if you need to use this tweaking):

    private static final String ERROR_HANDLING_PARAMETER = ""org.apache.myfaces.ERROR_HANDLING"" - if you want to disable the behaviour completely
    private static final String ERROR_HANDLER_PARAMETER = ""org.apache.myfaces.ERROR_HANDLER"" - if you want to choose a different class for handling the exception

Enjoy!

regards,

Martin

=================
see our mail-discussion attached as a reference

not a problem-- i think it'd be a cool solution for JSF 1.2 is to grab the ELResolver and walk through the Features-- so even custom ELResolvers would be able to output custom variables....

-- Jacob

On 7/23/07, Martin Marinschek <martin.marinschek@gmail.com> wrote:

    Hi Jacob,

    is it ok if I use your error-handling page also for errors in the full life-cycle of MyFaces? I just love this page, and I would want to see it for other exceptions than render-exceptions as well...

    I'd surely add you as an author - we'd definitely need to put the ASL-license on top, though.

    regards,

    Martin",MYFACES-1685
"I switch my jsf 1.2 from ri to myfaces 1.2.0 and run in this issue

java.lang.IllegalArgumentException: Value is no String (class=com.iplocks.model.domain.target.DatabaseType, value=DB27) and component databaseSearchForm:j_id25with path: {Component-Path : [Class: javax.faces.component.UIViewRoot,ViewId: /database/search.xhtml][Class: javax.faces.component.html.HtmlForm,Id: databaseSearchForm][Class: javax.faces.component.html.HtmlPanelGrid,Id: j_id22][Class: javax.faces.component.html.HtmlPanelGrid,Id: j_id23][Class: javax.faces.component.html.HtmlSelectOneMenu,Id: j_id25]} does not have a Converter
	org.apache.myfaces.shared_impl.renderkit.RendererUtils.getConvertedStringValue(RendererUtils.java:560)


",MYFACES-1684
"Version 1.2.0 site voids:
MF 120 is publicly out but apart from the jar itself, the MF site falls a bit behind behind...
E.g.: setup
- how does it affect the web.xml (e.g. need t specify servlet 2.5 xsd from now on), 
- how does it afffect the faces-config.xml (dtd v1.1 or 1.2 required?)
- what jars are exactly required for which combination? I would sugest to make an option matrix, from which you can read: if you use the core only, you need these jars, if you also wich to use Tomahawk, use these additional one + these additions in the web.xml.
E.g. documentation
- no examples are put online 
- the existing compatibility matrix is really out of date (Tomcat 6 isn't on it, e.g., butMF 1.2.0 either)
- ...


-Wolf",MYFACES-1683
"<%@ page import=""javax.faces.context.FacesContext"" %>
<%@ page import=""javax.faces.application.FacesMessage"" %>
<%@ taglib prefix=""jsf"" uri=""http://java.sun.com/jsf/core"" %>
<%@ taglib prefix=""h"" uri=""http://java.sun.com/jsf/html"" %>
<%--<%@ taglib prefix=""t"" uri=""http://myfaces.apache.org/tomahawk"" %>--%>
<%--<%@ taglib uri=""https://ajax4jsf.dev.java.net/ajax"" prefix=""a4j"" %>--%>
<%--
  Date: Mar 15, 2007
  Time: 4:46:53 PM
--%>
<%@ page contentType=""text/html;charset=UTF-8"" language=""java"" %>
<jsf:view>
    <%
        FacesContext.getCurrentInstance().addMessage(null,new FacesMessage(""test""));
    %>
<html>
  <head><title>Simple jsp page</title></head>
  <body>Place your content here
   <h:form>
      <h:messages/>
       <h:outputText value=""#{s.valuetest}""/>
  </h:form>
  </body>
</html>
</jsf:view>


libs in lib directory:
commons-beanutils-1.7.0.jar
commons-codec-1.3.jar
commons-collections-3.2.jar
commons-digester-1.8.jar
commons-discovery-0.4.jar
commons-el-1.0.jar
commons-logging-1.1.jar
jstl-1.2.jar
myfaces-api-1.2.0.jar
myfaces-impl-1.2.0.jar

web.xml config:
<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE web-app PUBLIC ""-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"" ""http://java.sun.com/dtd/web-app_2_3.dtd"">
<web-app>
 
 <context-param>
    <param-name>com.sun.faces.expressionFactory</param-name>
    <param-value>org.apache.el.ExpressionFactoryImpl</param-value>
</context-param>
 
    <servlet>
        <servlet-name>Faces Servlet</servlet-name>
        <servlet-class>javax.faces.webapp.FacesServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>Faces Servlet</servlet-name>
        <url-pattern>/faces/*</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>Faces Servlet</servlet-name>
        <url-pattern>*.faces</url-pattern>
    </servlet-mapping>
</web-app>


and finally faces config:
<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE faces-config PUBLIC
  ""-//Sun Microsystems, Inc.//DTD JavaServer Faces Config 1.1//EN""
  ""http://java.sun.com/dtd/web-facesconfig_1_1.dtd"">
 
<faces-config>
      <managed-bean>
          <managed-bean-name>s</managed-bean-name>
          <managed-bean-class>test.Bean</managed-bean-class>
          <managed-bean-scope>session</managed-bean-scope>
      </managed-bean>
</faces-config>


if page contains simple message output all work fine!
If any value in tag then i got this error:
javax.servlet.ServletException: /test.jsp(21,7) According to TLD or attribute directive in tag file, attribute value does not accept any expressions
	javax.faces.webapp.FacesServlet.service(FacesServlet.java:152)
 
root cause 
javax.faces.FacesException: /test.jsp(21,7) According to TLD or attribute directive in tag file, attribute value does not accept any expressions
	org.apache.myfaces.context.servlet.ServletExternalContextImpl.dispatch(ServletExternalContextImpl.java:340)
	org.apache.myfaces.application.jsp.JspViewHandlerImpl.renderView(JspViewHandlerImpl.java:254)
	org.apache.myfaces.lifecycle.RenderResponseExecutor.execute(RenderResponseExecutor.java:41)
	org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:132)
	javax.faces.webapp.FacesServlet.service(FacesServlet.java:138)
 
root cause 
org.apache.jasper.JasperException: /test.jsp(21,7) According to TLD or attribute directive in tag file, attribute value does not accept any expressions
	org.apache.jasper.compiler.DefaultErrorHandler.jspError(DefaultErrorHandler.java:40)
	org.apache.jasper.compiler.ErrorDispatcher.dispatch(ErrorDispatcher.java:407)
	org.apache.jasper.compiler.ErrorDispatcher.jspError(ErrorDispatcher.java:148)
	org.apache.jasper.compiler.Validator$ValidateVisitor.checkXmlAttributes(Validator.java:1172)
	org.apache.jasper.compiler.Validator$ValidateVisitor.visit(Validator.java:819)
	org.apache.jasper.compiler.Node$CustomTag.accept(Node.java:1507)
	org.apache.jasper.compiler.Node$Nodes.visit(Node.java:2336)
	org.apache.jasper.compiler.Node$Visitor.visitBody(Node.java:2386)
	org.apache.jasper.compiler.Validator$ValidateVisitor.visit(Validator.java:838)
	org.apache.jasper.compiler.Node$CustomTag.accept(Node.java:1507)
	org.apache.jasper.compiler.Node$Nodes.visit(Node.java:2336)
	org.apache.jasper.compiler.Node$Visitor.visitBody(Node.java:2386)
	org.apache.jasper.compiler.Validator$ValidateVisitor.visit(Validator.java:838)
	org.apache.jasper.compiler.Node$CustomTag.accept(Node.java:1507)
	org.apache.jasper.compiler.Node$Nodes.visit(Node.java:2336)
	org.apache.jasper.compiler.Node$Visitor.visitBody(Node.java:2386)
	org.apache.jasper.compiler.Node$Visitor.visit(Node.java:2392)
	org.apache.jasper.compiler.Node$Root.accept(Node.java:489)
	org.apache.jasper.compiler.Node$Nodes.visit(Node.java:2336)
	org.apache.jasper.compiler.Validator.validate(Validator.java:1737)
	org.apache.jasper.compiler.Compiler.generateJava(Compiler.java:178)
	org.apache.jasper.compiler.Compiler.compile(Compiler.java:306)
	org.apache.jasper.compiler.Compiler.compile(Compiler.java:286)
	org.apache.jasper.compiler.Compiler.compile(Compiler.java:273)
	org.apache.jasper.JspCompilationContext.compile(JspCompilationContext.java:566)
	org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:308)
	org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:320)
	org.apache.jasper.servlet.JspServlet.service(JspServlet.java:266)
	javax.servlet.http.HttpServlet.service(HttpServlet.java:803)
	org.apache.myfaces.context.servlet.ServletExternalContextImpl.dispatch(ServletExternalContextImpl.java:334)
	org.apache.myfaces.application.jsp.JspViewHandlerImpl.renderView(JspViewHandlerImpl.java:254)
	org.apache.myfaces.lifecycle.RenderResponseExecutor.execute(RenderResponseExecutor.java:41)
	org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:132)
	javax.faces.webapp.FacesServlet.service(FacesServlet.java:138)

i'm try new installation og myfaces-1.2 and got another exception:
SEVERE: Servlet.service() for servlet jsp threw exception
org.apache.jasper.JasperException: Unable to convert string ""Test"" to class ""javax.el.ValueExpression"" for attribute ""value"": Property Editor not registered with the PropertyEditorManager
	at org.apache.jasper.runtime.JspRuntimeLibrary.getValueFromPropertyEditorManager(JspRuntimeLibrary.java:887)
	at org.apache.jsp.test_jsp._jspx_meth_h_005foutputText_005f0(test_jsp.java:138)
	at org.apache.jsp.test_jsp._jspx_meth_f_005fview_005f0(test_jsp.java:102)
	at org.apache.jsp.test_jsp._jspService(test_jsp.java:65)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:803)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:384)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:320)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:266)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:803)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:687)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:469)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:403)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:301)
	at org.apache.myfaces.context.servlet.ServletExternalContextImpl.dispatch(ServletExternalContextImpl.java:334)
	at org.apache.myfaces.application.jsp.JspViewHandlerImpl.renderView(JspViewHandlerImpl.java:254)
	at org.apache.myfaces.lifecycle.RenderResponseExecutor.execute(RenderResponseExecutor.java:41)
	at org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:132)
	at javax.faces.webapp.FacesServlet.service(FacesServlet.java:138)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:228)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:175)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:128)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:104)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:216)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:844)
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:634)
	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:445)
	at java.lang.Thread.run(Thread.java:595)

So finally:
if jsp page has value with EL expr i got: According to TLD or attribute directive in tag file, attribute value does not accept any expressions
if wihout EL expr: org.apache.jasper.JasperException: Unable to convert string ""Test"" to class ""javax.el.ValueExpression"" for attribute ""value"": Property Editor not registered with the PropertyEditorManager",MYFACES-1682
"The Map returned by UIComponent.getAttributes() is too restrictive with respect
to null values.

MyFaces will always throw an NPE for a null value.  Granted, the following is
in the javadocs:

 * Any attempt to add a null key or value must throw a NullPointerException.

However, the following is also in the same section:

 * put() - If the property is writeable, call the setter method to set the corresponding value (unwrapping primitive values in their    
   corresponding wrapper classes). If the property is not writeable, or an attempt is made to set a property of primitive type to null, throw 
   IllegalArgumentException.

Notice the comment about setting a primitive property to null.  This implies that a null value for this case
is legal.  The RI will only throw the NPE against a null value *if* there isn't an associated property.

",MYFACES-1681
"The following converters are missing:
BigDecimal
BigInteger
Boolean
Character
Enum",MYFACES-1680
"Chapter ""3.3.3 Standard Converter Implementations"" defines a List of ""by type"" registered Converters.
I assumed that
Converter converter =  FacesContext.getCurrentInstance().getApplication().createConverter(Integer.class);
should return a javax.faces.convert.IntegerConverter.
It doesn't, null is returned instead.
The ""standard-faces-config.xml"" doesn't do any by-type registrations at all.
",MYFACES-1679
"h:panelGrid renders not complete table: last <td> is not closed
Thus it may produce invalid XHTML

the following code renders as:
	<h:panelGrid columns=""2"" cellpadding=""1"" cellspacing=""1"" border=""0""
		headerClass=""form-header-default"" 
		columnClasses=""form-column-names, form-column-values"" 
		footerClass=""form-footer-default"">
		
		<f:facet name=""header"">
			<h:outputText value=""Enter search parameters:"" styleClass=""form-text-bold"" />
		</f:facet>
		
		<h:outputText value=""First name"" styleClass=""form-text-norm"" />
		<h:inputText id=""firstName"" styleClass=""form-input-text"" value=""#{customerSearchBean.firstName}"" />

		<h:outputText value=""Last name"" styleClass=""form-text-norm"" />
		<h:inputText id=""lastName"" styleClass=""form-input-text"" value=""#{customerSearchBean.lastName}"" />

		<h:outputText value=""SSN"" styleClass=""form-text-norm"" />
		<h:inputText id=""ssn"" styleClass=""form-input-text"" value=""#{customerSearchBean.ssn}"" />
		
		<h:outputText value="""" styleClass=""form-text-norm"" />
		<h:commandButton id=""doSearch"" type=""submit"" value=""Search"" styleClass=""form-input-button""
			action=""#{customerSearchBean.doSearch}"" />
	</h:panelGrid>

-- RENDERS TO --
<table border=""0"" cellpadding=""1"" cellspacing=""1"">
<thead><tr><th class=""form-header-default"" scope=""colgroup"" colspan=""2"">
<span class=""form-text-bold"">Enter search parameters:</span>
</th></tr></thead><tbody><tr><td class=""form-column-names""><span class=""form-text-norm"">First name</span></td><td class=""form-column-values""><input id=""customerSearchForm:firstName"" name=""customerSearchForm:firstName"" type=""text"" value=""john"" class=""form-input-text"" /></td></tr>
<tr><td class=""form-column-names""><span class=""form-text-norm"">Last name</span></td><td class=""form-column-values""><input id=""customerSearchForm:lastName"" name=""customerSearchForm:lastName"" type=""text"" value="""" class=""form-input-text"" /></td></tr>

<tr><td class=""form-column-names""><span class=""form-text-norm"">SSN</span></td><td class=""form-column-values""><input id=""customerSearchForm:ssn"" name=""customerSearchForm:ssn"" type=""text"" value="""" class=""form-input-text"" /></td></tr>
<tr><td class=""form-column-names""><span class=""form-text-norm""></span></td><td class=""form-column-values""><input id=""customerSearchForm:doSearch"" name=""customerSearchForm:doSearch"" type=""submit"" value=""Search"" onclick=""if(typeof window.clearFormHiddenParams_customerSearchForm=='function'){clearFormHiddenParams_customerSearchForm('customerSearchForm');}"" class=""form-input-button"" /></tr>
</tbody></table>

NOTE: that after ""customerSearchForm:doSearch"" element there is </tr> comming... with no </td>

and violation in the log:
10:42:58,265 WARN  [HtmlResponseWriterImpl] HTML nesting warning on closing td:
element input rendered by component : {Component-Path : [Class: javax.faces.comp
onent.UIViewRoot,ViewId: /jsp/cust/customer_search.jsp][Class: com.ibm.jswm.jsf.
WindowsManagerComp,Id: j_id_jsp_569314233_1][Class: javax.faces.component.html.H
tmlForm,Id: customerSearchForm][Class: javax.faces.component.html.HtmlPanelGrid,
Id: j_id_jsp_569314233_3][Class: javax.faces.component.html.HtmlCommandButton,Id
: doSearch]} not explicitly closed",MYFACES-1678
"After recently upgrading to 1.1.5 from 1.1.4 I've noticed the following problem, this simple selectOneMenu
no longer passes validation. The Validation phase always fails with the message ""Value is not a valid option"".

<h:selectOneMenu id=""country""
        					   value=""#{UserAccountDataBean.userAccount.country.countryId}"" 
        					   required=""true"">
   <f:selectItems value=""#{UserAccountDataBean.countrySelectItems}""/>
</h:selectOneMenu>

The type of countryId is an Integer and it is initially null. The selectOneMenu is inside a form within a subview.

I tried using a PhaseTracker to see what was going on:

BEFORE APPLY_REQUEST_VALUES(2)
Submitted null Local null Value null
AFTER APPLY_REQUEST_VALUES(2)
Submitted 1 Local null Value    null
BEFORE PROCESS_VALIDATIONS(3)
Submitted 1 Local null Value null
AFTER PROCESS_VALIDATIONS(3)
Submitted 1 Local null Value    null
BEFORE RENDER_RESPONSE(6)
Submitted 1 Local null Value null
AFTER RENDER_RESPONSE(6)
Submitted 1 Local null Value    null

The submitted value 1 is definitely in the Options list so there's no reason validation should fail. Indeed if I change nothing and revert back to 1.1.4 everything is fine.

Cheers,
Ben",MYFACES-1677
"The reason is a double negation within
HtmlRendererUtils#writeIdAndNameIfNecessary(ResponseWriter, UIComponent, FacesContext)

if(component.getId()!=null && !!component.getId().startsWith(UIViewRoot.UNIQUE_ID_PREFIX))
must be
if(component.getId()!=null && !component.getId().startsWith(UIViewRoot.UNIQUE_ID_PREFIX))
",MYFACES-1676
HtmlButtonRenderBase don't end INPUT_ELEM in method encodeEnd,MYFACES-1674
"Using the JSF core tag <f:convertNumber /> in a page like this (where the amount property is an instance of java.math.BigDecimal)

<h:outputText value=""#{moneyBean.amount}"">
<f:convertNumber type=""currency"" />
</h:outputText>

causes the following stack trace

HTTP Status 500 -

type Exception report

message

description The server encountered an internal error () that prevented it from fulfilling this request.

exception

javax.servlet.ServletException: An exception occurred processing JSP page /index.jsp at line 16

13: <f:view>
14: You owe me &nbsp; 
15: <h:outputText value=""#{moneyBean.amount}"">
16:  <f:convertNumber type=""currency"" /> 
17: </h:outputText>
18: </f:view>
19: </body>


Stacktrace:
	javax.faces.webapp.FacesServlet.service(FacesServlet.java:152)

root cause

javax.faces.FacesException: An exception occurred processing JSP page /index.jsp at line 16

13: <f:view>
14: You owe me &nbsp; 
15: <h:outputText value=""#{moneyBean.amount}"">
16:  <f:convertNumber type=""currency"" /> 
17: </h:outputText>
18: </f:view>
19: </body>


Stacktrace:
	org.apache.myfaces.context.servlet.ServletExternalContextImpl.dispatch(ServletExternalContextImpl.java:340)
	org.apache.myfaces.application.jsp.JspViewHandlerImpl.renderView(JspViewHandlerImpl.java:254)
	org.apache.myfaces.lifecycle.RenderResponseExecutor.execute(RenderResponseExecutor.java:41)
	org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:132)
	javax.faces.webapp.FacesServlet.service(FacesServlet.java:138)

root cause

org.apache.jasper.JasperException: An exception occurred processing JSP page /index.jsp at line 16

13: <f:view>
14: You owe me &nbsp; 
15: <h:outputText value=""#{moneyBean.amount}"">
16:  <f:convertNumber type=""currency"" /> 
17: </h:outputText>
18: </f:view>
19: </body>


Stacktrace:
	org.apache.jasper.servlet.JspServletWrapper.handleJspException(JspServletWrapper.java:524)
	org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:435)
	org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:320)
	org.apache.jasper.servlet.JspServlet.service(JspServlet.java:266)
	javax.servlet.http.HttpServlet.service(HttpServlet.java:803)
	org.apache.myfaces.context.servlet.ServletExternalContextImpl.dispatch(ServletExternalContextImpl.java:334)
	org.apache.myfaces.application.jsp.JspViewHandlerImpl.renderView(JspViewHandlerImpl.java:254)
	org.apache.myfaces.lifecycle.RenderResponseExecutor.execute(RenderResponseExecutor.java:41)
	org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:132)
	javax.faces.webapp.FacesServlet.service(FacesServlet.java:138)

root cause

java.lang.NullPointerException
	org.apache.myfaces.taglib.core.ConvertNumberTag.createConverter(ConvertNumberTag.java:136)
	javax.faces.webapp.ConverterELTag.doStartTag(ConverterELTag.java:59)
	org.apache.jsp.index_jsp._jspx_meth_f_005fconvertNumber_005f0(index_jsp.java:184)
	org.apache.jsp.index_jsp._jspx_meth_h_005foutputText_005f0(index_jsp.java:153)
	org.apache.jsp.index_jsp._jspx_meth_f_005fview_005f0(index_jsp.java:111)
	org.apache.jsp.index_jsp._jspService(index_jsp.java:74)
	org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
	javax.servlet.http.HttpServlet.service(HttpServlet.java:803)
	org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:393)
	org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:320)
	org.apache.jasper.servlet.JspServlet.service(JspServlet.java:266)
	javax.servlet.http.HttpServlet.service(HttpServlet.java:803)
	org.apache.myfaces.context.servlet.ServletExternalContextImpl.dispatch(ServletExternalContextImpl.java:334)
	org.apache.myfaces.application.jsp.JspViewHandlerImpl.renderView(JspViewHandlerImpl.java:254)
	org.apache.myfaces.lifecycle.RenderResponseExecutor.execute(RenderResponseExecutor.java:41)
	org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:132)
	javax.faces.webapp.FacesServlet.service(FacesServlet.java:138)
",MYFACES-1673
"Navigation via command links behaves very strangely. I've included a zip file containing a stripped down project. I've deleted gobs of stuff from there so hopefully the remaining classes/files retain some cohesion to an external audience. The zip contains java, jsp and config files. In spite of the maven style directory structure, I haven't actually migrated yet, so dependencies could be a problem. (I'm assuming that most of you will already have everything, and including them in the zip would needlessly create a larger download). I've also included my Intellij IDEA project files in the off chance that someone else uses it. I've mocked out the data access layer (no comments on how awful the mocked code is), so it should be self contained. I've also included a single Selenium IDE test. It's not really a 'test' per se, rather it is a convenient way to navigate to the problem page without my having to describe it. Many of the paths through this stripped down version are broken, so letting Selenium handle the navigation seemed easiest. The test is in src\test\selenium.

I actually have 2 classes of problems I can't figure out. The first is the one outlined in this email's subject: navigating through students via the command links on the left had side of the page. If you navigate to the detail page via Selenium, then click on one of the other Student command links at the left, every *second* click of the student commandLink works. During the submits where nothing happens, the appropriate backing bean is created, but none of it's methods are called and the page refreshes. The other problem relates to the warnings about submitted values, but this bug is related to tomahawk, not the core.

The zip also includes a 1.1.4 version of the myfaces core. If one switches to this version, navigation works correctly again. This activity is critical to my application and this bug is preventing me from upgrading to current myfaces versions.",MYFACES-1672
"As described in this issue:
http://jira.jboss.com/jira/browse/JBSEAM-1556

When running in a portlet environment and using MyFaces, JSF PhaseListeners get registered TWICE, due to the way MyFaces initializes itself: 

1. MyFaces has a StartupServletContextListener that initializes the JSF framework (the first time). 

2. The MyFacesGenericPortlet.initMyFaces() method initializes the JSF framework (a second time). 

In order to fix this, the MyFacesGenericPortlet must do a better job at determining whether or not the JSF framework has been initialized. There is no need to add the PhaseListeners to the Lifecycle a second time. And in the case of Seam, this can actually cause a problem, because there can be only one Seam phase listener active (that extends Seam's AbstractSeamPhaseListener) at any given time. In the case of other portlet phase listeners (like FileUpload ones that parse mutlipart-formdata), uploaded files would get saved twice, I would imagine.
",MYFACES-1671
"I have a simple code where dollar-type expression (like ${}) works differently than shrap-type  expression (like #{}),
I put into the http session a managed bean aggregating another bean.
${parent} is calculated, while ${parent.child} is always null (it is printed as an empty string and equals to null in ""when"" tag).

For example the following snip of JSP code:
   <f:view>
    <h:form id=""myform"" >
    <b>Using sharp-el</b>: <br/>
    *<h:outputText id=""cll1"" value=""#{customerDetailsBean}"" />*<br/>
    *<h:outputText id=""cll2"" value=""#{customerDetailsBean.customer}"" />*<br/>
    <b>Using dollar-el</b>: <br/>
    *${customerDetailsBean}*<br/>
    *${customerDetailsBean.customer}*<br/>
    <b>Classical ""servlet"" style</b>: <br/>
    *<% if (session.getAttribute(""customerDetailsBean"") != null) {%><%= session.getAttribute(""customerDetailsBean"") %><% } %>*<br/>
    *<% if (session.getAttribute(""customerDetailsBean"") != null) {%><%= ((eltest.CustomerDetailsBean)session.getAttribute(""customerDetailsBean"")).getCustomer() %><% } %>*<br/>
    </h:form>
    </f:view>

-- PRODUCES --:

    Using sharp-el:
    *CustomerDetailsBean: { customer: Customer {frstName: Alex , lastName: Zynevich, id: 1979}}*
    *Customer {frstName: Alex , lastName: Zynevich, id: 1979}*
    Using dollar-el: 
    *CustomerDetailsBean: { customer: Customer {frstName: Alex , lastName: Zynevich, id: 1979}}*
    **
    Classical ""servlet"" style:
    *CustomerDetailsBean: { customer: Customer {frstName: Alex , lastName: Zynevich, id: 1979}}*
    *Customer {frstName: Alex , lastName: Zynevich, id: 1979}*

while I would expect:

    Using sharp-el: 
    *CustomerDetailsBean: { customer: Customer {frstName: Alex , lastName: Zynevich, id: 1979}}*
    *Customer {frstName: Alex , lastName: Zynevich, id: 1979}*
    Using dollar-el: 
    *CustomerDetailsBean: { customer: Customer {frstName: Alex , lastName: Zynevich, id: 1979}}*
    *Customer {frstName: Alex , lastName: Zynevich, id: 1979}*
    Classical ""servlet"" style: 
    *CustomerDetailsBean: { customer: Customer {frstName: Alex , lastName: Zynevich, id: 1979}}*
    *Customer {frstName: Alex , lastName: Zynevich, id: 1979}*

you may find the maven project at https://issues.apache.org/jira/browse/GERONIMO-3253, war is attached
",MYFACES-1670
"Consider the snipped of JSF code. This is a custom tag that works in jsf-1.0.9 but does wot work in
jsf1.1.3 or greater.

<t:tableIterator id=""taxAreaResultsList"" cellpadding=""5"" cellspacing=""0""
            styleClass=""GridData"" width=""100%"" value=""#{rateluWorkflow.results.taxAreas}"" var=""taxAreaRate"" rendered=""#{!empty rateluWorkflow.results.taxAreas}"">


            <t:tableRow id=""resultsHeaderRow"" header=""true"">
              <t:tableCell id=""taxAreaIdCell"" styleClass=""gridData"">
                <h:outputText id=""taxAreaId"" value=""#{taxAreaRate.taxAreaId}"" styleClass=""gridDataBold""/>
             </t:tableCell>
            </t:tableRow>


 
</t:tableIterator>


The expression language ""#{rateluWorkflow.results.taxAreas}"" mentioned above is as follows:


The ""rateluWorkflow"" references a WorkFlow bean which has a getResults() method which returns a
ResultsPreparer bean which has a getTaxAreas() method that returns a java Set(TreeSet) which contains a TaxAreaResultBean  bean which 
contains the method getTaxAreaId(). Now, when the  ""#{taxAreaRate.taxAreaId}"" executes I get an error as follows:

javax.faces.el.PropertyNotFoundException: Bean: java.util.TreeSet, property: taxAreaId

If I change the method getTaxAreas() in the ResultsPreparer bean to return anything other then a Set(TreeSet) for example a list it calls
the correct method getTaxAreaId() on the TaxAreaResult bean and returns correctly. Is it possible that you cannot
use Sets in this case.
",MYFACES-1669
"Fix for Websphere 5.1. since WAS uses protocol wsjar: for accessing jar content instead of regular protocol jar: 

This affects FacesConfigurator which does not correctly detect jars on classpath. FacesConfigurator indirectly uses Enumeration resources = ClassLoader.getResources(resource); to detect libraries on classpath and check if they start with prefix jar: what is obviously not true for IBM Websphere :(

ie. WAS returns wsjar:file:mypath/myjar.jar!xyz where Tomcat returns jar:file:mypath/myjar.jar!xyz

Patch is provided.",MYFACES-1668
"Chapter 10.3.2 Application Startup Behavior of the spec says:
""Search for all resources named ""META-INF/faces-config.xml"" in the
ServletContext resource paths for this web application, and load each as a JSF
configuration resource (in reverse order of the order in which they are returned
by getResources()).""

FacesConfigurator.feedClassloaderConfigurations does NOT iterate in reverse order.
",MYFACES-1667
"HtmlResponseWriterImpl implements different behaviour for the two writeText methods:
 * writeText(Object value, String componentPropertyName) does not encode successive spaces and newlines
 * writeText(char cbuf[], int off, int len) does encode successive spaces and newlines

RI does not encode in both variants.

IMO both methods SHOULD encode successive spaces and newlines to render the corresponding HTML syntax (&nbsp; and <br/>).
Therefore we should (re)add this feature and make it switchable via a MyFaces Option ""STRICT_RI_MODE"" or something like that.
",MYFACES-1666
"Instead of having hundreds of spread NOTICE.txt and LICENSE.txt files we should use the remote-resources plugin like Trinidad does.
",MYFACES-1665
MyFaces 1.2 does not currently have a JSR-301 subproject.  Work should begin on JSR-301 as bridge support for the MyFaces 1.2 branch.  Trinidad is currently dependant on this project for bridge support and other Renderkits may wish to use this standards based bridge as well.,MYFACES-1664
"JspViewHandlerImpl.getServletMapping is returning the wrong servlet mapping.  In my case, it was causing an action URL to be prepended with an extra slash, such as ""//index.xhtml"".

Below is the code with the correct fix that needs to be committed.  Without the extra line, the code was taking a urlpattern of a single slash (""/""),  substringing it to get an empty string (""""), and returning the servlet mapping containing the single slash, since it is true that every string ends with the empty string.

Can someone please commit the fix for me?  Thanks in advance.


    private static ServletMapping getServletMapping(ExternalContext externalContext) {
        String servletPath = externalContext.getRequestServletPath();
        String requestPathInfo = externalContext.getRequestPathInfo();

        WebXml webxml = WebXml.getWebXml(externalContext);
        List mappings = webxml.getFacesServletMappings();


        if (requestPathInfo == null) {
            // might be extension mapping
            for (int i = 0, size = mappings.size(); i < size; i++) {
                ServletMapping servletMapping = (ServletMapping) mappings.get(i);
                String urlpattern = servletMapping.getUrlPattern();
                String extension = urlpattern.substring(1, urlpattern.length());
                if (servletPath.endsWith(extension) 
                     && servletMapping.isExtensionMapping()) {                 //  HERE IS THE LINE I ADDED FOR THE FIX
                    return servletMapping;
                }
                else if (servletPath.equals(urlpattern)) {
                    // path mapping with no pathInfo for the current request
                    return servletMapping;
                }
            }
        }
        else {
            // path mapping
            for (int i = 0, size = mappings.size(); i < size; i++) {

                ServletMapping servletMapping = (ServletMapping) mappings.get(i);
                String urlpattern = servletMapping.getUrlPattern();
                urlpattern = urlpattern.substring(0, urlpattern.length() - 2);
                // servletPath starts with ""/"" except in the case where the
                // request is matched with the ""/*"" pattern, in which case
                // it is the empty string (see Servlet Sepc 2.3 SRV4.4)
                if (servletPath.equals(urlpattern)) {
                    return servletMapping;
                }
            }
        }

        // handle cases as best possible where servletPath is not a faces servlet,
        // such as when coming through struts-faces
        if (mappings.size() > 0) {
            return (ServletMapping) mappings.get(0);
        }
        else {
            log.warn(""no faces servlet mappings found"");
            return null;
        }
    }
",MYFACES-1663
"The class org.apache.myfaces.shared.renderkit.html.HtmlRendererUtils implements the javascript rendering for the ""Autoscroll"" feature. Since this is only used by the Tomahawk implementation the related code should be moved to some Tomahawk utility class.
",MYFACES-1662
"javax.faces.webapp.UIComponentTag includes a method call that is not jdk 1.4 compatible inside the method

private static void getPathToComponent(UIComponent component, StringBuffer buf)
...
StringBuffer intBuf = new StringBuffer();
...
buf.insert(0, intBuf);
...",MYFACES-1661
"André Næss reported a memory leak in JspStateManagerImpl:

http://www.mail-archive.com/dev@myfaces.apache.org/msg22905.html


_oldSerializedViews = new ReferenceMap();
needs to be substituted by
_oldSerializedViews = new ReferenceMap(AbstractReferenceMap.WEAK,
AbstractReferenceMap.WEAK, true);
",MYFACES-1660
"I use a generic converter which is instanciated multiple times, using different converter properties for each instance which controls the behaviour. See sample below.

The bug is that the first converter is being configured with the properties of the second converter. 
This happens because in the converter configurations in org.apache.myfaces.application.ApplicationImpl are keyed by the converter class, not by the converter id.


Snip from faces-config.xml:

	<converter>
		<converter-id>userTypeConverter</converter-id>
		<converter-class>com.mazdaeur.crsadmin.converters.CommonsEnumConverter</converter-class>
		<property>
			<property-name>enumClass</property-name>
			<property-class>java.lang.String</property-class>
			<default-value>com.mazdaeur.crs.model.UserType</default-value>
		</property>
	</converter>
	<converter>
		<converter-id>userSalutationTypeConverter</converter-id>
		<converter-class>com.mazdaeur.crsadmin.converters.CommonsEnumConverter</converter-class>
		<property>
			<property-name>enumClass</property-name>
			<property-class>java.lang.String</property-class>
			<default-value>com.mazdaeur.crs.model.UserSalutationType</default-value>
		</property>
	</converter>

",MYFACES-1659
"We are working on a JSF project and recently started stress testing the system. This stress-testing caused the JVM to run out of memory and spend most of it time  doing Full GC. Analyzing the heap revealed that most of the memory was being retained by SerializedViewCollection instances. We also noticed that the value of NUMBER_OF_VIEWS_IN_SESSION didn't seem to affect the memory usage.

It seems the problem is due to the _oldSerializedViews hashmap which is supposed to use soft references and hence be GC-ed whenever there is a lack of memory, but this apparently doesn't work. Removing this hashmap completely solved the problem. It is however difficult to provide a simple testcase as we used JMeter to load the server with 600 users fetching a fairly big JSF page with a constant throughput of 20 requests per second.

I should also mention that we found this problem with 1.1.4 but I fixed it with the 1.1.5 release.

Here's the diff output:

~/code/myfaces-1.1.5/impl/src/main/java/org/apache/myfaces/application/jsp$ svn diff
Index: JspStateManagerImpl.java
===================================================================
--- JspStateManagerImpl.java    (revision 543859)
+++ JspStateManagerImpl.java    (working copy)
@@ -18,7 +18,6 @@
  */
 package org.apache.myfaces.application.jsp;

-import org.apache.commons.collections.map.ReferenceMap;
 import org.apache.commons.lang.builder.EqualsBuilder;
 import org.apache.commons.lang.builder.HashCodeBuilder;
 import org.apache.commons.logging.Log;
@@ -609,10 +608,6 @@
         private final List _keys = new ArrayList(DEFAULT_NUMBER_OF_VIEWS_IN_SESSION);
         private final Map _serializedViews = new HashMap();

-        // old views will be hold as soft references which will be removed by
-        // the garbage collector if free memory is low
-        private transient Map _oldSerializedViews = null;
-
         public synchronized void add(FacesContext context, Object state) {
             Object key = new SerializedViewKey(context);
             _serializedViews.put(key, state);
@@ -623,10 +618,7 @@
             int views = getNumberOfViewsInSession(context);
             while (_keys.size() > views) {
                 key = _keys.remove(0);
-                Object oldView = _serializedViews.remove(key);
-                if (oldView != null) {
-                    getOldSerializedViewsMap().put(key, oldView);
-                }
+                _serializedViews.remove(key);
             }
         }

@@ -660,23 +652,9 @@
             return views;
         }

-        /**
-         * @return old serialized views map
-         */
-        protected Map getOldSerializedViewsMap() {
-            if (_oldSerializedViews == null) {
-                _oldSerializedViews = new ReferenceMap();
-            }
-            return _oldSerializedViews;
-        }
-
         public Object get(Integer sequence, String viewId) {
             Object key = new SerializedViewKey(viewId, sequence);
-            Object value = _serializedViews.get(key);
-            if (value == null) {
-                value = getOldSerializedViewsMap().get(key);
-            }
-            return value;
+            return _serializedViews.get(key);
         }
     }

",MYFACES-1658
"I am receiving the following log message in my server startup log with the new 1.1.5 myfaces release.

[5/11/07 15:34:41:650 EDT] 00000017 FacesConfigur I org.apache.myfaces.config.FacesConfigurator logMetaInf MyFaces-package : myfaces-api not found.
[5/11/07 15:34:41:743 EDT] 00000017 FacesConfigur I org.apache.myfaces.config.FacesConfigurator logMetaInf MyFaces-package : myfaces-impl not found.
[5/11/07 15:34:41:790 EDT] 00000017 FacesConfigur I org.apache.myfaces.config.FacesConfigurator logMetaInf MyFaces-package : tomahawk-sandbox not found.
[5/11/07 15:34:41:790 EDT] 00000017 FacesConfigur I org.apache.myfaces.config.FacesConfigurator logMetaInf MyFaces-package : tomahawk not found.

All except for tomahawk-sandbox is correctly located and functioning properly in my environment.  Why are these messages displaying not found and is there a way to remove them?

Thanks,
Travis",MYFACES-1657
"I tried to run GuessNumber application on the latest SNAPSHOT of 1.2.0
Looks like is cannot coerce #{integer-value} for string. A week ago this code worked. Now it prints:
/greeting.jsp(44,3) '#{UserNumberBean.userNumber}' java.lang.IllegalArgumentException: argument type mismatch
snip from bean:
    public void setUserNumber(Integer user_number) {
        userNumber = user_number;
        System.out.println(""Set userNumber "" + userNumber);
    }


    public Integer getUserNumber() {
        System.out.println(""get userNumber "" + userNumber);
        return userNumber;
    }
snip from jsp:
  	<h:inputText id=""userNo"" value=""#{UserNumberBean.userNumber}""
                      validator=""#{UserNumberBean.validate}""/>          
you may download war from  	 GERONIMO-3167
see also screen shot",MYFACES-1656
The list of subprojects doesn't mention orchestra.,MYFACES-1655
The list of subprojects doesn't contain trinidad.,MYFACES-1654
"This problem is very similair to https://issues.apache.org/jira/browse/MYFACES-1633 and https://issues.apache.org/jira/browse/GERONIMO-3167 however now all the h:form is shifted, see attachments ",MYFACES-1653
"New methods added to shared 2.0 since the branching shared 3.0 must be added to 3.0, so tomahawk compiles with it",MYFACES-1652
"Not registered at all, since they do not appear in the standard-faces-config.xml file...",MYFACES-1651
It is not using ValueExpressions,MYFACES-1650
It is not pointing to the implementation ConverterTag,MYFACES-1649
,MYFACES-1648
,MYFACES-1647
"The autogeneration for myfaces impl is creating a faces-config.xml file with the default configuration of myfaces. Instead it should create a standard-faces-config.xml file (that replaces the old standard config file). This ensures that, when an app is configured, the myfaces config goes first and alternative configurations (such as Trinidad's) override the configuration.",MYFACES-1646
"See

http://java.sun.com/javaee/javaserverfaces/1.2/docs/api/javax/faces/component/UIViewRoot.html#getLocale()

for the implementation explanation.",MYFACES-1645
"JSF 1.2 javadoc for UIComponentTagBase requires 

protected static Logger log = Logger.getLogger(""javax.faces.webapp"");",MYFACES-1644
"I get nightly build of Geronimo 2.0. It uses MyFaces-1.2.0-SNAP.
I see that http://people.apache.org/repo/m2-snapshot-repository/org/apache/myfaces/core/myfaces-impl/1.2.0-SNAPSHOT/myfaces-impl-1.2.0-SNAPSHOT.jar has /META-INF/myfaces_core.tld which declares all attributes for f:convertDataTime as <deffeted-value> however methods of 
org.apache.myfaces.taglib.core.ConvertDateTimeTag (derived from org.apache.myfaces.shared_impl.taglib.core.ConvertDateTimeTagBase) accept only strings(thus it may not be deffered):

http://svn.apache.org/viewvc/myfaces/shared/branches/3_0_0/core/src/main/java/org/apache/myfaces/shared/taglib/core/ConvertDateTimeTagBase.java?revision=479743&view=markup
<code>
    private String _dateStyle = ""default""; // the default value as required by the spec (default in this case)
    private String _locale = null;
    private String _pattern = null;
    private String _timeStyle = ""default""; // the default value as required by the spec (default in this case)
    private String _timeZone = null;
    private String _type = null;

    public void setDateStyle(String dateStyle)
    {
        _dateStyle = dateStyle;
    }

    public void setLocale(String locale)
    {
        _locale = locale;
    }

    public void setPattern(String pattern)
    {
        _pattern = pattern;
    }

    public void setTimeStyle(String timeStyle)
    {
        _timeStyle = timeStyle;
    }

    public void setTimeZone(String timeZone)
    {
        _timeZone = timeZone;
    }

    public void setType(String type)
    {
        _type = type;
    }
</code>

The indication is:
javax.servlet.ServletException: Unable to compile class for JSP: 

An error occurred at line: 72 in the jsp file: /jsp/cust/customer_details_spc.jsp
The method setPattern(String) in the type ConvertDateTimeTagBase is not applicable for the arguments (JspValueExpression)
69: 		</f:facet>
70: 		<w:dragSource dndTypeId=""<%=DnDIds.ID_SPECIAL%>"" dndObjId=""#{obj.spclID}"" dndText=""#{obj.spclShrtName}"">
71: 			<h:outputText id=""cellFrom"" styleClass=""specials-text-norm-dnd-ds"" value=""#{obj.spclStrtDate}"" >
72: 				<f:convertDateTime pattern=""yyyy-MM-dd"" timeZone=""#{commonInfo.timeZone}"" />
73: 			</h:outputText>
74: 		</w:dragSource>
75: 	</h:column>


An error occurred at line: 72 in the jsp file: /jsp/cust/customer_details_spc.jsp
The method setTimeZone(String) in the type ConvertDateTimeTagBase is not applicable for the arguments (JspValueExpression)
69: 		</f:facet>
70: 		<w:dragSource dndTypeId=""<%=DnDIds.ID_SPECIAL%>"" dndObjId=""#{obj.spclID}"" dndText=""#{obj.spclShrtName}"">
71: 			<h:outputText id=""cellFrom"" styleClass=""specials-text-norm-dnd-ds"" value=""#{obj.spclStrtDate}"" >
72: 				<f:convertDateTime pattern=""yyyy-MM-dd"" timeZone=""#{commonInfo.timeZone}"" />
73: 			</h:outputText>
74: 		</w:dragSource>
75: 	</h:column>

",MYFACES-1643
,MYFACES-1642
"When a client makes an http request that ""only"" accepts text/*, content type cannot be set on responsewriter. The solution would be to select text/html by default for text/*.",MYFACES-1641
"This could be observed in the fileUpload example, which didn't work",MYFACES-1640
"For now, I will follow GERONIMO's lead and retype the DTDs by hand, with ASF headers.",MYFACES-1639
,MYFACES-1638
"Wrong cast to set, instead of list",MYFACES-1637
"Observable in the sample2.jsf page from the simple examples, when removing quotes.",MYFACES-1636
,MYFACES-1635
Now it is pointing to the javax.faces.* (like in 1.1) when it should point to the implementation in org.apache.myfaces.*,MYFACES-1634
"The rendered code and the html code from the page are not ordered correctly. Visual mess.

Easily observable when running the simple examples with our 1.2 implementation.",MYFACES-1633
"selectItem component not resolving expressions for some of its attributes:

- itemLabel
- itemValue
- itemEscaped
- itemDisabled
- itemDescription",MYFACES-1632
"I would like to see version specific sites deployed.  This will allow a  user to see MyFaces 1.1.1 documentation in addition to the current documentation.  As an example, Commons Configuration [1] contains javadocs for many versions.  I would prefer having a MyFaces 1.1.1, 1.1.2, 1.1.3,... sites instead of just the javadocs.

[1] http://jakarta.apache.org/commons/configuration/
",MYFACES-1631
"Trinidad's out of incubator, and needs to be added as a project link.",MYFACES-1630
"I am receiving these messages when navigating through my application right after startup.

[5/11/07 11:35:11:760 EDT] 0000002b MyfacesConfig I org.apache.myfaces.shared_impl.config.MyfacesConfig getCurrentInstance Starting up Tomahawk on the RI-JSF-Implementation.
[5/11/07 11:35:11:775 EDT] 0000002b MyfacesConfig I org.apache.myfaces.shared_impl.config.MyfacesConfig getCurrentInstance Starting up Tomahawk on the MyFaces-JSF-Implementation
[5/11/07 11:35:11:775 EDT] 0000002b MyfacesConfig E org.apache.myfaces.shared_impl.config.MyfacesConfig getCurrentInstance Both MyFaces and the RI are on your classpath. Please make sure to use only one of the two JSF-implementations.

I don't have any RI jars in my classpath that should cause this.. I have the same set of jars with the exception of the 1.1.5 jars instead of 1.1.4.  There is nothing else that changed.  I can physically remove the jsf-api.jar and ws-jsf.jar from the IBM runtime library locally and run successfully, but that is not a solution on a production system.  

Was there anything that changed with these three jars (myfaces-api-1.1.5.jar, myfaces-impl-1.1.5.jar, and tomahawk-1.1.5.jar that are loading the RI jars?

Thanks.",MYFACES-1629
Migrate Partial State Saving to MyFaces 1.2,MYFACES-1628
"The lifecycle for a GET request when using Server side state saving is inconsistent and seems incorrect when compared to Client side state saving.

When using Client side state saving the flow is a s follows :
   RESTORE_VIEW: Attempts to restore the view, cannot as there is no saved state, a new view is created, renderResponse is called
   RENDER_VIEW: The view is rendered and the state saved to the client.

When using Server side state saving the flow is as follows :
Case 1: First time access to a view
   RESTORE_VIEW: Attempts to restore the view, cannot as there is no saved state, a new view is created, renderResponse is called
   RENDER_VIEW: The view is rendered and the state saved to the client.

Case 2: Subsequent accesses to a view
   RESTORE_VIEW: Attempts to restore the view, locates the LAST saved state for that view and loads it.
   APPLY_REQUEST_VALUES: Attemtps to process postback, none exists as this is a GET.
   PROCESS_VALIDATIONS:
   UPDATE_MODEL_VALUES:
   INVOKE_APPLICATION:
   RENDER_VIEW: The view is rendered and the state saved to the client.


Now obviously something must be amis, as based on my understanding of the spec both Client and Server side state saving should behave the same with the only difference where the state is saved.

Additionally with the current scheme of loading the LAST saves state for the view its possible for a new GET request to be returned a ""used"" view that already has some modified view state (i.e. components that save some of their own state).


The resolution would be to only restore the view if the jsf_sequence parameter exsists, rather than using the LAST sequence saved when it doesnt.
   ",MYFACES-1626
,MYFACES-1625
,MYFACES-1624
"I am trying to put <marquee> tag around a JSF component like <dataTable> using <t:htmlTag>, <f:verbatim> and <h:outputText>, but none of them work. 
 
For example,
 
<f:verbatim><marquee></f:verbatim> 
(JSF component)
<f:verbatim></marquee></f:verbatim>
 
 
<h:outputText value=""<marquee>"" escape=""false/>
(JSF component) 
<h:outputText value=""</marquee>"" escape=""false/>
 
 
<t:htmlTag value=""marquee"">
(JSF component)
</t:htmlTag>
 

the generated HTML is :
<marquee></marquee>(HTML for JSF component)
 
What should be : 
<marquee> (HTML for JSF component) </marquee>
",MYFACES-1623
"headerClass and footerClass attributes specified at the h:column level should override style attributes specified at the UIData level.

page 7 of JSF 1.2 spec, section titled ""General changes"" says:
{quote}
Added headerClass and footerClass attributes at the ""h:column"" level. Please 
see Section8.5 ""Standard HTML RenderKit Implementation"" for more details.
{quote}

Further details are available in the header section of :
http://java.sun.com/javaee/javaserverfaces/1.2_MR1/docs/renderkitdocs/HTML_BASIC/javax.faces.Datajavax.faces.Table.html",MYFACES-1622
"If the wrapped Response is used and getOutputStream() is called, a null pointer exception or an illegalState Exception is thrown. Thats because of the ViewResponseWrapper does not care about OutputStreams and expects that every wrapped Response uses the Writer.

Regards,
Martin Haimberger",MYFACES-1621
"Now it is returning obj.getType(), but it has to invoke getValue() of the implicit object",MYFACES-1620
"Currently the implementation differs between field- and property-based injection both in processing annotations and in invoking the appropriate method to set the value being looked up. Needless to say, this approach causes great redundancy affecting even the latest revision [1]. Both methods should do similar annotation processing but the first one checks for the @Resource annotation twice (due to the delegation to the super class). Therefore I think you should abstract away the difference between field- and property-based injection.

[1]: http://svn.apache.org/viewvc/myfaces/core/branches/jsf12/impl/src/main/java/org/apache/myfaces/config/annotation/AllAnnotationLifecycleProvider.java?revision=518967&view=markup",MYFACES-1619
"Each implicit object defines its name by using a ""interned"" string literal,  such as for example the class ApplicationImplicitObject [1] does. The JLS declares that literals are ""interned"" anyway (""String objects have a constant value. String literals-or, more generally, strings that are the values of constant expressions (§15.28)-are ""interned"" so as to share unique instances, using the method String.intern."") [2] so I think the additional call to ""intern()"" is redundant.

[1]: http://svn.apache.org/viewvc/myfaces/core/branches/jsf12/impl/src/main/java/org/apache/myfaces/el/unified/resolver/implicitobject/ApplicationImplicitObject.java?revision=518967&view=markup
[2]: http://java.sun.com/docs/books/jls/third_edition/html/lexical.html#3.10.5
",MYFACES-1618
"Now, due to the call to the clearForm this value is wrongly set to ''",MYFACES-1617
"For the other forms, the viewState information is not rendered and instead you can see the anchor (<!--@@JSF_FORM_STATE_MARKER@@-->)",MYFACES-1616
,MYFACES-1615
,MYFACES-1614
,MYFACES-1613
Now it is showing the default Integer.MIN_VALUE,MYFACES-1612
"Should be rendered:

readonly=""readonly""",MYFACES-1611
An exception is thrown when enabledClass or disabledClass is set on a select component,MYFACES-1610
SelectItems can have null value,MYFACES-1609
"Passtrhu attributes ""onfocus"" and ""onblur"" are not being honoured by the link renderer.",MYFACES-1608
Flesh out the implementation of ResourceBundleResolver.getFeatureDescriptors(),MYFACES-1607
"Hy,

if i use a h:dataTable and use facet inside it like:

       <h:column>
          <f:facet name=""header"">
            <h:outputText value=""name"" />
          </f:facet>
          <h:outputText value=""#{item.name}"" />
        </h:column>

an exception during the rendering is thrown:

avax.servlet.ServletException: Must be called before the start element is closed (attribute 'scope')
	javax.faces.webapp.FacesServlet.service(FacesServlet.java:152)
root cause

java.lang.IllegalStateException: Must be called before the start element is closed (attribute 'scope')
	org.apache.myfaces.shared_impl.renderkit.html.HtmlResponseWriterImpl.writeAttribute(HtmlResponseWriterImpl.java:297)
	org.apache.myfaces.shared_impl.renderkit.html.HtmlTableRendererBase.renderColumnHeaderCell(HtmlTableRendererBase.java:835)
	org.apache.myfaces.shared_impl.renderkit.html.HtmlTableRendererBase.renderColumnChildHeaderOrFooterRow(HtmlTableRendererBase.java:777)
	org.apache.myfaces.shared_impl.renderkit.html.HtmlTableRendererBase.renderColumnHeaderOrFooterRow(HtmlTableRendererBase.java:741)
	org.apache.myfaces.shared_impl.renderkit.html.HtmlTableRendererBase.renderColumnHeaderRow(HtmlTableRendererBase.java:671)
	org.apache.myfaces.shared_impl.renderkit.html.HtmlTableRendererBase.renderFacet(HtmlTableRendererBase.java:574)
	org.apache.myfaces.shared_impl.renderkit.html.HtmlTableRendererBase.beforeBody(HtmlTableRendererBase.java:413)
	org.apache.myfaces.shared_impl.renderkit.html.HtmlTableRendererBase.encodeChildren(HtmlTableRendererBase.java:118)
	javax.faces.component.UIComponentBase.encodeChildren(UIComponentBase.java:527)
	org.apache.myfaces.shared_impl.renderkit.RendererUtils.renderChild(RendererUtils.java:438)
	org.apache.myfaces.shared_impl.renderkit.html.HtmlGridRendererBase.renderChildren(HtmlGridRendererBase.java:216)
	org.apache.myfaces.shared_impl.renderkit.html.HtmlGridRendererBase.encodeEnd(HtmlGridRendererBase.java:98)
	javax.faces.component.UIComponentBase.encodeEnd(UIComponentBase.java:539)
	javax.faces.component.UIComponent.encodeAll(UIComponent.java:250)
	javax.faces.component.UIComponent.encodeAll(UIComponent.java:247)
	javax.faces.component.UIComponent.encodeAll(UIComponent.java:247)
	org.apache.myfaces.application.jsp.JspViewHandlerImpl.renderView(JspViewHandlerImpl.java:314)
	org.apache.myfaces.lifecycle.RenderResponseExecutor.execute(RenderResponseExecutor.java:41)
	org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:132)
	javax.faces.webapp.FacesServlet.service(FacesServlet.java:138)

without facets there is no problem.

Regards,
Martin Haimberger",MYFACES-1606
"Hi,

Following Components are broken:

h:selectBooleanCheckbox
h:selectManyCheckbox 
h:selectManyListbox 
h:selectManyMenu
 h:selectOneListbox 
h:selectOneMenu 
h:selectOneRadio

i used:

 <h:select* value=""#{testbean.entrie}"" >
                    <f:selectItems value=""#{testbean.entries}""></f:selectItems>
 </h:select*>

the testbean.entires returns a list of SelectItems and entrie is a String.

In the current MyFaces 1.1 Implementation this is working.

the Stacktrace:

javax.servlet.ServletException: /helloWorld.jsp(25,20) Unable to find setter method for attribute: value
	javax.faces.webapp.FacesServlet.service(FacesServlet.java:152)
root cause

javax.faces.FacesException: /helloWorld.jsp(25,20) Unable to find setter method for attribute: value
	org.apache.myfaces.context.servlet.ServletExternalContextImpl.dispatch(ServletExternalContextImpl.java:340)
	org.apache.myfaces.application.jsp.JspViewHandlerImpl.renderView(JspViewHandlerImpl.java:260)
	org.apache.myfaces.lifecycle.RenderResponseExecutor.execute(RenderResponseExecutor.java:41)
	org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:132)
	javax.faces.webapp.FacesServlet.service(FacesServlet.java:138)
root cause

org.apache.jasper.JasperException: /helloWorld.jsp(25,20) Unable to find setter method for attribute: value
	org.apache.jasper.compiler.DefaultErrorHandler.jspError(DefaultErrorHandler.java:40)
	org.apache.jasper.compiler.ErrorDispatcher.dispatch(ErrorDispatcher.java:407)
	org.apache.jasper.compiler.ErrorDispatcher.jspError(ErrorDispatcher.java:148)
	org.apache.jasper.compiler.Generator$GenerateVisitor.evaluateAttribute(Generator.java:2756)
	org.apache.jasper.compiler.Generator$GenerateVisitor.generateSetters(Generator.java:2985)
	org.apache.jasper.compiler.Generator$GenerateVisitor.generateCustomStart(Generator.java:2169)
	org.apache.jasper.compiler.Generator$GenerateVisitor.visit(Generator.java:1689)
	org.apache.jasper.compiler.Node$CustomTag.accept(Node.java:1507)
	org.apache.jasper.compiler.Node$Nodes.visit(Node.java:2336)
	org.apache.jasper.compiler.Node$Visitor.visitBody(Node.java:2386)
	org.apache.jasper.compiler.Generator$GenerateVisitor.visit(Generator.java:1705)
	org.apache.jasper.compiler.Node$CustomTag.accept(Node.java:1507)
	org.apache.jasper.compiler.Node$Nodes.visit(Node.java:2336)
	org.apache.jasper.compiler.Node$Visitor.visitBody(Node.java:2386)
	org.apache.jasper.compiler.Generator$GenerateVisitor.visit(Generator.java:1705)
	org.apache.jasper.compiler.Node$CustomTag.accept(Node.java:1507)
	org.apache.jasper.compiler.Node$Nodes.visit(Node.java:2336)
	org.apache.jasper.compiler.Node$Visitor.visitBody(Node.java:2386)
	org.apache.jasper.compiler.Generator$GenerateVisitor.visit(Generator.java:1705)
	org.apache.jasper.compiler.Node$CustomTag.accept(Node.java:1507)
	org.apache.jasper.compiler.Node$Nodes.visit(Node.java:2336)
	org.apache.jasper.compiler.Node$Visitor.visitBody(Node.java:2386)
	org.apache.jasper.compiler.Node$Visitor.visit(Node.java:2392)
	org.apache.jasper.compiler.Node$Root.accept(Node.java:489)
	org.apache.jasper.compiler.Node$Nodes.visit(Node.java:2336)
	org.apache.jasper.compiler.Generator.generate(Generator.java:3394)
	org.apache.jasper.compiler.Compiler.generateJava(Compiler.java:210)
	org.apache.jasper.compiler.Compiler.compile(Compiler.java:306)
	org.apache.jasper.compiler.Compiler.compile(Compiler.java:286)
	org.apache.jasper.compiler.Compiler.compile(Compiler.java:273)
	org.apache.jasper.JspCompilationContext.compile(JspCompilationContext.java:566)
	org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:308)
	org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:320)
	org.apache.jasper.servlet.JspServlet.service(JspServlet.java:266)
	javax.servlet.http.HttpServlet.service(HttpServlet.java:803)
	org.apache.myfaces.context.servlet.ServletExternalContextImpl.dispatch(ServletExternalContextImpl.java:334)
	org.apache.myfaces.application.jsp.JspViewHandlerImpl.renderView(JspViewHandlerImpl.java:260)
	org.apache.myfaces.lifecycle.RenderResponseExecutor.execute(RenderResponseExecutor.java:41)
	org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:132)
	javax.faces.webapp.FacesServlet.service(FacesServlet.java:138)

Regards,
Martin Haimberger",MYFACES-1605
"A disabled commandLink correctly renders as a <span> but needs to include id attribute and also render its children.

See 
http://java.sun.com/javaee/javaserverfaces/1.2_MR1/docs/renderkitdocs/HTML_BASIC/javax.faces.Outputjavax.faces.Link.html",MYFACES-1604
"When the component DataList is used to print many columns using link (CommandLink), at the first time,
the actions binding commandLink don't run.
After the first POST Request, it gets OK.

The expression to use a DataList:
                                    <t:dataList
                                        value=""#{gerenteFilme.paginacao.paginas}""
                                        var=""paginaFilme""
                                        rowIndexVar=""curPaginaFilme""
                                        forceId=""true"" forceIdIndex=""true"">

In the first request, the <a href=/> is printed as:
<a href=""#"" onclick=""return oamSubmitForm('_idJsp8','_idJsp98_0:_idJsp102');"" id=""_idJsp98_0:_idJsp102"">
But after first time:
<a href=""#"" onclick=""return oamSubmitForm('_idJsp8','_idJsp8:_idJsp98:0:_idJsp102');"" id=""_idJsp8:_idJsp98:0:_idJsp102"">0</a>

Clearly, it's a wrong tag invocation _0: It should be :0:, and something is missing.


",MYFACES-1603
Seems to be related to the value being null when creating the DataModel in UIData.,MYFACES-1602
"The ""var"" attribute in dataTable:

- Should be required=false (now it is true)
- Should be a deferred value (must evaluate to java.lang.String)

http://java.sun.com/javaee/javaserverfaces/1.2/docs/tlddocs/h/dataTable.html",MYFACES-1601
"rendered - Expected deferred value type to be 'java.lang.Boolean' (now is  'boolean')
id - Expected rtexpr value to be false (now is true)",MYFACES-1600
"The expected deferred-method for the attribute ""action"" is  'java.lang.Object action()',

Now we have 'java.lang.String myMethod()' - wrong",MYFACES-1599
"For ""binding"" the deferred-type must be 'javax.faces.component.UIComponent'
For ""converter"" the deferred-type must be 'javax.faces.convert.Converter'

Now the deferred-type tags in the tld for these attributes are empty (hence expeting java.jang.Object)",MYFACES-1598
Do not render rows and cols if the value of these attributes is not set,MYFACES-1597
"According to the renderkit javadocs, tf the ""autocomplete"" attribute for an inputText is not set or the value is ""on"", render nothing.

http://java.sun.com/javaee/javaserverfaces/1.2/docs/tlddocs/h/inputText.html",MYFACES-1596
"Per the HtmlCommandButton spec at:
http://java.sun.com/javaee/javaserverfaces/1.2_MR1/docs/api/javax/faces/component/html/HtmlCommandButton.html

need to correct two issues with HtmlCommandButton renderer to match the spec:
-  render readonly=""readonly"" when button.isReadOnly() returns true, otherwise don't render the attribute
-  render type=""reset"" when button.getType() returns ""reset"" (case sensitive), otherwise render type=""submit""",MYFACES-1595
"The attribute ""acceptcharset"" for the form is not being rendered. Probably the fix lies in the rendering of the passthrough attributes for the form component.",MYFACES-1594
"With a managed bean defined in faces-config.xml like this:
    <managed-bean>
        <managed-bean-name>
            mybean
        </managed-bean-name>
        <managed-bean-class>
            MyBean
        </managed-bean-class>
        <managed-bean-scope>
            request
        </managed-bean-scope>
    </managed-bean>

FacesCompositeResolver can resolve the bean but javax.el.CompositeELResolver cannot.  It does not insulate the ManagedBeanResolver with the code in VariableResolverToELResolver that sets the propertyResolved flag back to false after ManagedBeanResolver returns null and relies on ScopedAttributeResolver to return it from the proper scope later.

For example, this code will fail to resolve the managed bean:

PageContext context = JspFactory.getDefaultFactory().getPageContext( ... );
ELResolver resolver = context.getELResolver();  // jasper returns a javax.el.CompositeELResolver
MyBean mybean = resolver.getValue(context, null, ""mybean"");  // returns null",MYFACES-1593
"The tag descriptor generated by the maven plugin for HtmlSelectBooleanCheckboxTag has the following attribute:
    <attribute>
      <description><![CDATA[The initial value of this component.]]></description>
      <name>value</name>
      <deferred-value></deferred-value>
    </attribute>

So when a JSP contains a tag like this:
<h:selectBooleanCheckbox id=""foo1"" value=""true""/>

The following unhandled exception is thrown:
javax.servlet.ServletException: Expected submitted value of type Boolean for Component : {Component-Path : [Class: javax.faces.component.UIViewRoot,ViewId: /mytest.jsp][Class: javax.faces.component.html.HtmlForm,Id: form][Class: javax.faces.component.html.HtmlSelectBooleanCheckbox,Id: foo1]}
	at javax.faces.webapp.FacesServlet.service(FacesServlet.java:152)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:231)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:175)
	at org.apache.geronimo.tomcat.valve.DefaultSubjectValve.invoke(DefaultSubjectValve.java:56)
	at org.apache.geronimo.tomcat.GeronimoStandardContext$SystemMethodValve.invoke(GeronimoStandardContext.java:333)
	at org.apache.geronimo.tomcat.valve.GeronimoBeforeAfterValve.invoke(GeronimoBeforeAfterValve.java:47)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:128)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:104)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
	at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:543)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:238)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:844)
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:634)
	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:445)
	at java.lang.Thread.run(Thread.java:613)

This exception is thrown because RendererUtils.getBooleanValue() expects HtmlSelectBooleanCheckbox.getValue() to return a Boolean but instead it returns an Object.  Changing the type for the ""value"" attribute in h.tld as shown below avoids the exception and passes the currently failing TCK test for that component:
    <attribute>
      <description><![CDATA[The initial value of this component.]]></description>
      <name>value</name>
      <deferred-value>
        <type>boolean</type>
      </deferred-value>
    </attribute>

",MYFACES-1592
"All config elements now have a config-location element - this element helps to determine where they have been loaded from. This enables better error handling (and eventually, if one wants to do so, special variable resolvers which can cope with multiply registered managed bean-names).

regards,

Martin",MYFACES-1591
"Easy fix: just had to change the doctype to:

<!DOCTYPE taglib
  PUBLIC ""-//Sun Microsystems, Inc.//DTD JSP Tag Library 1.2//EN""
  ""misc/web-jsptaglibrary_1_2.dtd"" [

so referencing the dtd locally.

regards,

Martin",MYFACES-1590
"One of my page designers pointed out that the autoscroll hidden input location changed between MyFaces Core 1.1.4 and 1.1.5.

Unfortunately, on this page, it moved right in the middle of a navigation bar, causing a visible space between the two buttons it is located between, on both IE and Firefox.

Using my limited html knowledge, I tried saving the html to a file and adding style=""display:none"" just to see if css might be able to solve the problem.   It did not.

My guess is that it is now appearing after the first component to reference autoScroll.

Is there some style we can apply to this input to make it not affect the display (You'd think that'd be the default behavior, wouldn't you?)  Barring all that, maybe this hidden input should be moved to right before the closing form end tag, or wherever the rest of the generated hidden inputs are located.

Or is my only option to put an unused hidden h:commandButton at the top of the page?

      <h:commandButton style=""display: none;"" />


Example page output:

<div class=""nav_menu"">
<input type=""submit"" class=""normal"" onmouseout=""this.className =
'normal'"" onmouseover=""this.className = 'highlight'""
onclick=""if(typeof
window.clearFormHiddenParams__id12!='undefined'){clearFormHiddenParams__id12('_id12');}if(typeof
window.getScrolling!='undefined'){oamSetHiddenInput('_id12','autoScroll',getScrolling());}""
value=""Search Records"" name=""_id12:_id16"" id=""_id12:_id16"">
<input type=""hidden"" name=""autoScroll"">
<input type=""submit"" class=""normal"" onmouseout=""this.className =
'normal'"" onmouseover=""this.className = 'highlight'""
onclick=""if(typeof
window.clearFormHiddenParams__id12!='undefined'){clearFormHiddenParams__id12('_id12');}if(typeof
window.getScrolling!='undefined'){oamSetHiddenInput('_id12','autoScroll',getScrolling());}""
value=""Add Record"" name=""_id12:_id17"" id=""_id12:_id17"">
<input type=""submit"" class=""normal"" onmouseout=""this.className =
'normal'"" onmouseover=""this.className = 'highlight'""
onclick=""if(typeof
window.clearFormHiddenParams__id12!='undefined'){clearFormHiddenParams__id12('_id12');}if(typeof
window.getScrolling!='undefined'){oamSetHiddenInput('_id12','autoScroll',getScrolling());}""
value=""Add Another Record"" name=""_id12:_id18"" id=""_id12:_id18"">
<input type=""submit"" class=""normal"" onmouseout=""this.className =
'normal'"" onmouseover=""this.className = 'highlight'""
onclick=""if(typeof
window.clearFormHiddenParams__id12!='undefined'){clearFormHiddenParams__id12('_id12');}if(typeof
window.getScrolling!='undefined'){oamSetHiddenInput('_id12','autoScroll',getScrolling());}""
value=""Add Info"" name=""_id12:_id19"" id=""_id12:_id19"">
<input type=""submit"" class=""normal"" onmouseout=""this.className =
'normal'"" onmouseover=""this.className = 'highlight'""
onclick=""if(typeof
window.clearFormHiddenParams__id12!='undefined'){clearFormHiddenParams__id12('_id12');}if(typeof
window.getScrolling!='undefined'){oamSetHiddenInput('_id12','autoScroll',getScrolling());}""
value=""Search Other"" name=""_id12:_id20"" id=""_id12:_id20"">
</div>",MYFACES-1589
"When a manged bean is defined in an application's config like this:
        <managed-bean>
                <managed-bean-name>MyBean</managed-bean-name>
                <managed-bean-class>foo.MyBean</managed-bean-class>
                <managed-bean-scope>none</managed-bean-scope>
        </managed-bean>

the bean should be resolvable from a ValueBinding but instead it returns null as shown below:
        ValueBinding binding = application.createValueBinding(""#{MyBean}"");
        binding.getValue(facesContext);   // returns null;",MYFACES-1588
"The name of the partial state saving parameter should not start with javax.faces, because its an myfaces specific parameter.",MYFACES-1586
"tomcats CompositeELResolver implementation contains a bug. The class org.apache.myfaces.el.CompositeELResolver contains a workaround to fix this.
See http://issues.apache.org/bugzilla/show_bug.cgi?id=42077. As soon as this bug is fixed we can remove the myfaces implementation.",MYFACES-1585
"javax.faces.convert.DateTimeConverter contains an extra non-spec field:

    public static final String PATTERN_TYPE_ID = ""javax.faces.converter.DateTimeConverter.PATTERN_TYPE"";

See:
http://java.sun.com/javaee/javaserverfaces/1.2/docs/api/javax/faces/convert/DateTimeConverter.html",MYFACES-1584
"Consider for a moment the following image input.  Let's say I have a
myfaces app, with a context root of ""my/context/root"", with a domain
name of ""www.mycompany.com"".

<input
    type=""image""
    src=""//www.mycompany.com/images/blah.gif""
    name=""blah""
    value=""Blah"" />

Notice that the src attribute starts with a doubleslash.  When
authoring non-JSF tags (i.e. in non-JSF apps), this has been an effective way to include
resources that are external to our app (typically hosted at a central
location somewhere in our enterprise).  

Our web standards actually do
not allow us to include the protocol in the URL, but when we author
the attribute this way, the browser prepends the protocol (i.e. https://)
that was used to retrieve the page.  This browser behavior seems the same with
all external resources, i.e. javascripts, css, etc.

Now, consider the JSF example for the same input:

<h:commandButton
    action=""#{backingBean.someAction}""
    image=""//www.mycompany.com/images/blah.gif"" />

MyFaces renders this:

<input
    type=""image""
    src=""my/context/root//www.mycompany.com/images/blah.gif""
    ...

Of course, if I include the https: protocol in the URL, MyFaces
correctly interprets and renders it as a complete external URL.

When we supply an external resource, as when using the image attribute in a commandButton, shouldn't MyFaces behave in the same way as when we point to an external resource while composing non-JSF tags?  In particular, when we begin the URL with a doubleslash, shouldn't it interpret the URL as an external resource and prepend the protocol that was used to retrieve the page?  If MyFaces merely rendered these attributes unmodified, I think the browser would handle it correctly.

As it is, in order to avoid including the protocol in these URLs, I must maintain local copies of these image resources in our web app, which is also discouraged by our web standards.

I found this, it sounds like this may have been when the behavior was introduced.
http://issues.apache.org/jira/browse/MYFACES-476

Perhaps also relevant:
http://issues.apache.org/jira/browse/MYFACES-52
",MYFACES-1583
"web-facesconfig_1_2.xsd contains a restrictive copyright.

            This document and the technology which it describes are
            distributed under licenses restricting their use, copying,
            distribution, and decompilation. No part of this document
            may be reproduced in any form by any means without prior
            written authorization of Sun and its licensors, if any.",MYFACES-1582
"After doing a bit of research, I'm convinced a problem occurs when SelectItem.itemValue is an EJB. Given that 1.1.3 and the RI (1.2_04) do not have this problem, I suggest the current implementation be changed. If I'm wrong, please help me understand. Otherwise, I'll submit a change request. 

JSP contents: 
         <h:selectOneMenu id=""client"" value=""#{myPage.projectType}"" required=""true""> 
             <f:converter converterId=""x.y.ProjectTypeConverter""/> 
             <f:selectItem itemValue="""" itemLabel=""--- Select Project Type---""/> 
             <f:selectItems value=""#{myPage.projectTypeList}""/> 
         </h:selectOneMenu> 

Where ProjectTypeConverter returns null for """" on input and myPage.projectTypeList is a list of SelectItem created in the following manner: 

         ArrayList projectTypes = new ArrayList( projectTypeHome.findAll() ); 
         for( int i = 0; i < projectTypes.size(); i++ ) 
         { 
            ProjectTypeLocal projectType = (ProjectTypeLocal)projectTypes.get( i ); 
            m_projectTypes.add( new SelectItem( projectType, projectType.getName() ) ); 
         } 

Note that the SelectItem.itemValue is an EJB. 

The intent is to force the user to select a value from the list. If no action is taken by the user, generate an error. This is directly analogous to a Tomahawk example, except the values are EJB's. 

The problem: 
This worked fine under MyFaces 1.1.3 and appears that it would work under RI 1.2_04. Under release 1.1.5, however, a ClassCastException occurs during the validation phase, but only if a list item is selected and the item is an EJB. 

Analysis (based on 1.1.5 release): 
During the validation phase, UISelectOne.validateValue is invoked with the selected EJB. This causes the following lines in _SelectItemsUtil.matchValue() to be invoked: 

                [item is class SelectItem] 
                Object itemValue = item.getValue(); 
                if (value==itemValue || value.equals(itemValue)) 

This is fine for the SelectItem values that are EJB's, but not for """". Since EJB equality requires identity, the EJB equals() method calls isIdentical() and immediately encounters an exception casting to EJBLocalObject (code here from JBoss 4.0.4GA LocalProxy): 

   Boolean isIdentical(final Object a, final Object b) 
   { 
      final EJBLocalObject ejb = (EJBLocalObject)a; 
      Boolean isIdentical = Boolean.FALSE; 
      if( ejb != null ) 
      { 
         isIdentical = new Boolean(ejb.toString().equals(b)); 
      } 
      return isIdentical; 
   } 

Possible solution: 
In _SelectItemsUtil.matchValue() change the lines above to: 

                [item is class SelectItem] 
                Object itemValue = item.getValue(); 
                if (value==itemValue || ( itemValue != null && itemValue.equals(value))) 

Note: The attached test files attempt to recreate the exception with a POJO rather than an EJB.

",MYFACES-1581
"I'm trying to select a Date using a SelectOneMenu (see attached file). Every time I get the following error message: """"someValue"": Value is not a valid option.""

I tried to set the SelectItems for the component in different ways. The problem seems to be the call to _SelectItemsUtil.matchValue() which cannot find a matching value for my date. Same is true for Integer. I've specified a converter for the dates.

This worked with an older Version of MyFaces and occured after switching to 1.1.5.
",MYFACES-1580
"VariableResolverImpl tries to determine if it was invoked through the faces chain or jsp chain by looking for an attribute (Scope.getClassName()) in the RequestMap.  However, that attribute is only set during the span of a call to FacesCompositeELResolver.getValue().   See FacesCompositeELResolver#invoke(), which calls setScope() and then unsetScope().

Therefore the following code always throws IllegalStateException 

        VariableResolver resolver = application.getVariableResolver();
        Object result = resolver.resolveVariable(facesContext, ""param"");

because when VariableResolverImpl.resolveVariable() looks for the scope in the request map (which happens outside the getValue() call) its always null.",MYFACES-1579
"In trunk of shared module, class o.a.m.shared.webapp.webxml.WebXml is a singleton (instance placed in the application map) but it does not synchronize access to its members.

For example, when the object is first created and stored into the application map on startup, member _facesExtensionsFilterMappings is null. When a later call comes in to method getFacesExtensionsFilterMappings() on the singleton instance and it is discovered that the value is null a new array is created and populated. However this method does not protect against race condtions in any way, so two requests that pass through the ExtensionsFilter can be executing this code concurrently, with potentially nasty effects.

We have a load test that is actually experiencing intermittent exceptions when run against a freshly-started webapp. The exception is actually in AddResourceFactory.checkEnvironment, where it complains that there is no mapping for the ExtensionFilter, and the thread-race above could well be the cause.",MYFACES-1578
"According to the spec several methods in PropertyResolver should throw PropertyNotFoundException in the following circumstances:

getValue(Object base, int index) 
    PropertyNotFoundException - if the index is out of bounds or if base is null

setValue(Object base, int index, Object value)
    PropertyNotFoundException - if the index is out of bounds or if base is null

setValue(Object base, Object property, Object value) 
    PropertyNotFoundException - if the specified bean base object property does not exist or if base or property is null


BTW,  MYFACES-1576 already addressed these two cases:
getType(Object base, int index) 
    PropertyNotFoundException - if the index is out of bounds or if base is null
getType(Object base, Object property)
    PropertyNotFoundException - if the specified bean base object property does not exist or if base or property is null
",MYFACES-1577
"According to the spec PropertyResolver.getType(Object, int) should throw PropertyNotFoundException when the int is out of bounds or Object is null.

Also PropertyResolver.getType(Object, Object) should throw PropertyNotFoundException when either argument is null.",MYFACES-1576
"When javax.faces.el.MethodBinding.invoke() catches an Exception the EvaluationException it subsequently throws should include the cause property of the original exception.

See:
http://java.sun.com/javaee/5/docs/api/javax/faces/el/MethodBinding.html#invoke(javax.faces.context.FacesContext,%20java.lang.Object[])exception)",MYFACES-1575
"The generated java src for javax.faces.component.html.HtmlOutputLink sets the renderer type to ""javax.faces.Label"" :

  public HtmlOutputLink()
  {
    setRendererType(""javax.faces.Label"");
  }


It should instead set the renderer type to ""javax.faces.Link""",MYFACES-1574
"when I use IDE visual editer create a jsf page like this:

<h:selectOneRadio rendered=""true"" style=""font-size: 12px; width: 200px; height: 20px; position: absolute; top: 193px; left: 134px;"" value=""#{entity0.attribute0}"">
     <f:selectItem itemLabel=""test1"" itemValue=""test1""></f:selectItem>
     <f:selectItem itemLabel=""test2"" itemValue=""test2""></f:selectItem>
     <f:selectItem itemLabel=""test3"" itemValue=""test3""></f:selectItem>
</h:selectOneRadio> 

The radio renderer does not work normally when using absolute position in style attribute.
Because the renderer set the style to every radios.",MYFACES-1573
"UIData data = new UIData();
data.setFirst(1);
data.getFirst(); // returns 0
data.setRows(1);
data.getRows();  // returns 0

Looks like there may be a bug in the code generator.  The setFirst() and setRows() methods should be assigning _firstSet=true and _rowsSet=true.   Maybe there is some way to influence this behavior in UIData's template?",MYFACES-1572
"I don't have time to look at this right now but here's the stack trace if anyone else wants to take a swing at it.

javax.servlet.ServletException: String index out of range: -1
	javax.faces.webapp.FacesServlet.service(FacesServlet.java:152)

root cause

java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	java.lang.AbstractStringBuilder.replace(AbstractStringBuilder.java:800)
	java.lang.StringBuffer.replace(StringBuffer.java:392)
	org.apache.myfaces.application.jsp.JspViewHandlerImpl$StateMarkerAwareWriter.flushToWriter(JspViewHandlerImpl.java:398)
	org.apache.myfaces.application.jsp.JspViewHandlerImpl.renderView(JspViewHandlerImpl.java:328)
	org.apache.myfaces.lifecycle.RenderResponseExecutor.execute(RenderResponseExecutor.java:41)
	org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:132)
	javax.faces.webapp.FacesServlet.service(FacesServlet.java:138)
",MYFACES-1571
"Carlos Ortiz reported that the tree component no longer works.

java.lang.UnsupportedOperationException: long been deprecated...
	org.apache.myfaces.renderkit.html.HtmlResponseStateManager.writeStateAsUrlParams(HtmlResponseStateManager.java:103)
	org.apache.myfaces.application.jsp.JspStateManagerImpl.writeStateAsUrlParams(JspStateManagerImpl.java:424)
	org.apache.myfaces.taglib.core.ViewTag.doAfterBody(ViewTag.java:194)
	org.apache.jsp.index_jsp._jspx_meth_f_005fview_005f0(index_jsp.java:150)

Caused by:

Author: mmarinschek
Date: Tue Oct 17 06:49:23 2006
New Revision: 464925

URL: http://svn.apache.org/viewvc?view=rev&rev=464925
Log:
fix for MyFaces-1469: State-saving now uses the parameter javax.faces.ViewState - as proposed by the 1.2 spec

",MYFACES-1570
"Submit of a from with input text is disabled == true leads to the following message:
""WARNING: There should always be a submitted value for an input if it is rendered, its form is submitted, and it is not disabled or read-only . Component : <...inputText>""

The warning does not appear when readOnly == true. Please remove the part ""or read-only"" from the message.
",MYFACES-1569
"We have created czech translation of javax/faces/Messages.properties

I will attach it to this issue.",MYFACES-1568
"""java.lang.IllegalArgumentException: Value is no String"" error is caused in all select one components in both CORE and TOMAHAWK due to the usage of RendererUtils.NOTHING class.

Instead of using ""((EditableValueHolder) component).setSubmittedValue(null);"" in HtmlRendererUtils, the following code is used:

((EditableValueHolder) component).setSubmittedValue(RendererUtils.NOTHING);

This NOTHING is not a valid submitted value for select one component and causes errors.

The stack trace is:
...does not have a Converter
       at org.apache.myfaces.shared_impl.renderkit.RendererUtils.getConvertedStringValue(RendererUtils.java:513)
       at org.apache.myfaces.shared_impl.renderkit.html.HtmlRadioRendererBase.encodeEnd(HtmlRadioRendererBase.java:95)
       at javax.faces.component.UIComponentBase.encodeEnd(UIComponentBase.java:539)
       at org.ajax4jsf.framework.renderer.RendererBase.renderChild(RendererBase.java:256)
       at org.ajax4jsf.framework.renderer.RendererBase.renderChildren(RendererBase.java:232)
       at org.ajax4jsf.framework.renderer.AjaxContainerRenderer.encodeChildren(AjaxContainerRenderer.java:100)
       at javax.faces.component.UIComponentBase.encodeChildren(UIComponentBase.java:527)
...

During rendering of the component, the NOTHING is not null and not a string, so therefore the error is thrown. This is a critical error as it breaks the entire page and the user is left viewing an error page. 

Proposed fix: remove the NOTHING variable from RendererUtils and use null instead. The only code that actually cares about NOTHING is in HtmlRendererUtils:
            UISelectOne uiSelectOne = (UISelectOne) uiComponent;
            Object lookup = uiSelectOne.getSubmittedValue();
            if (lookup == null) {
                lookup = uiSelectOne.getValue();
                String lookupString = RendererUtils.getConvertedStringValue(facesContext, uiComponent, converter, lookup);
                lookupSet = Collections.singleton(lookupString);
            }
            else if (org.apache.myfaces.shared_tomahawk.renderkit.RendererUtils.NOTHING.equals(lookup)) {
                lookupSet = Collections.EMPTY_SET;
            }

I don't see why it is done this way. It may be possible to use isLocalValueSet instead (setLocalValueSet(true); setSubmittedValue(null);). This way, it can be checked that a value was submitted, but the value was null. If this proposed fix is not acceptible, ""org.apache.myfaces.shared_impl.renderkit.RendererUtils.getConvertedStringValue(RendererUtils.java:513)"" needs to be fixed to handle NOTHING values.
",MYFACES-1567
"With the boolean prependId attribute of UIForm, it's possible to turn on/off the form id being attached as the prefix id of it's children.

For a component tree like;
<h:form id=""form1"">
<h:inputText id=""text1"" ... />
</h:form>

With form's prependId=true, clientID of inputtext will be ""form1:text1"", when it's false it'll be ""text1""

",MYFACES-1566
"Added a more ""user-friendly"" default error message for UIInput ""update model"". ",MYFACES-1565
"When a conversion or validation error occurs, the submitted values are erased and components are rendered with empty values.",MYFACES-1564
"Since the component was previously not rendered, its submitted value is null. The local value that is set in restoreState is not null.  This does not get reset by validation since non-rendered components are not validated (processValidators). Therefore the associated value-binding expression is not evaluated in getValue,and hence the local value is returned. 

It seems to me that restoreState should set the local value to null. This would result in the value-binding expression being evaluated and displayed.

Example:

I have a number of input text fields and a select-one-menu (which has an immedate valueChangeListener) a command button (with an non-immedate action). The menu switches the rendered mode of some display fields. The button saves the entered text and clears the input fields.

In addition I have a data-table which displays the saved data and contains a column with a button, whose on-immediate action puts the selected data item into the input fields.   

I enter data in the input fields and save the data. It is displayed in the table. Then I use the menu to select a mode in which some of the input text fields are no longer rendered. I then select the original data from the table. The fields which remain rendered are displayed and filled correctly. However the fields which were previously NOT rendered are displayed but are EMPTY.

This bug does not occur with Sun's reference implementation.",MYFACES-1563
"In _SharedRendererUtils findUIOutputConverter,

ValueBinding vb = component.getValueBinding(""value"");
if (vb == null) return null;

Class valueType = vb.getType(facesContext);
if (valueType == null) return null;

if (Object.class.equals(valueType)) return null;    //There is no converter for Object class

vb.getType(facesContext) always returns java.lang.Object so conversion does not happen. We should start replacing valuebinding stuff with valueexpression anyway.",MYFACES-1562
"For a component like;

<h:inputText id=""date"" value=""#{person.birth}"">
     <f:validateLength minimum=""10"" />
      <f:convertDateTime dateStyle=""full"" />
</h:inputText>

Both validators and converters specified for the input text are ignored. UIInput getValidators.length returns 0 and getConverter is always null.",MYFACES-1561
"When WebXmlParser ignores a child of <servlet> or <filter> it logs a debug message, as expected.  However, when it ignores a child of <servlet-mapping> or <filter-mapping> it logs a warning message.  It should log a debug message instead.",MYFACES-1560
"I'm opening this jira as a convenient place to put code samples in support of discussion on the dev list

Based on my experience implementing dependency injection and lifecyle methods in the geronimo app client container and the geronimo-jetty integration, and inspired by the openejb3 code for this purpose, I'd like to propose that MyFaces consider using an interface similar to this for object creation and shutdown:

public interface LifecycleProvider {

    /**
     * Create an object of the class with the supplied name, inject dependencies as appropriate,
     * and call a postContruct method as appropriate.
     *
     * @param className name of the class of the desired object
     * @return a fully constructed, dependency-injected, and initialized object.
     */
    Object newInstance(String className);

    /**
     * Take whatever steps are needed to shut down the object, including calling a preDestroy method.
     *
     * @param o object to shut down.
     */
    void destroyInstance(Object o);
}

It's easy to write an adapter between this and the AnnotationProcessor interface currently implemented.
",MYFACES-1559
"FactoryFinder has insufficient synchronization to be thread safe, and has a memory leak in _registeredFactoryNames.",MYFACES-1558
"If getCurrentInstance decides to create a new  MyFacesConfig, it sets it before filling in the values.  This is obviously not thread safe.

With the current MyFaces implementations getting/setting the config is eventually done on the ServletContext obtained from the web container.  AFAICT the servlet spec doesn't say anything about whether access to ServletContext attributes is synchronized, but the jetty6 implementation does synchronize the get/set methods.  If this is generally understood to be a requirement, the getCurrentInstance method can be made thread safe by setting the new instance to after it is all filled in rather than before.  Otherwise additional synchronization would be needed.",MYFACES-1557
"When required of a TextInputField is false and the submitted Value is empty the Validation should return but in the Method
validate(FacesContext context) of UIInput the submittedValue is checked against null
However the get on RequestParameterMap returns an empty String if the formField is empty and not a null value.
the if Statement needs to check for null or empty string and if required is false return.",MYFACES-1556
"When I use 
<h:messages layout=""table"" showSummary=""false"" showDetail=""true"" style=""color: red""></h:messages>
the style attribute has no effect on generated html.
If I change it to
<h:messages layout=""table"" showSummary=""false"" showDetail=""true"" errorStyle=""color: red""></h:messages>
then it works correctly.

I have looked at the code and here is the cause:

File: HtmlMessagesRendererBase.java (org/apache/myfaces/shared/renderkit/html/HtmlMessagesRendererBase.java)
Lines: 199-202
Code:
            if (style == null)
            {
                style = (String)attr.get(org.apache.myfaces.shared.renderkit.JSFAttr.STYLE_CLASS_ATTR);
            }

I believe that the attribute to be used here must be JSFAttr.STYLE_ATTR (not JSFAttr.STYLE_CLASS_ATTR)

This fix should apply to HtmlMessageRendererBase.java too because h:message has the same problem.
",MYFACES-1555
"We recently had a user with the accept-header set to ""Accept = text/*, image/*, application/*, audio/*"" which, according to the RFC (http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html), seems completely legal:

 "" The asterisk ""*"" character is used to group media types into ranges, with ""*/*"" indicating all media types and ""type/*"" indicating all subtypes of that type. The media-range MAY include media type parameters that are applicable to that range. ""

In this case HtmlRendererUtils failed to determine the content-type:

java.lang.IllegalArgumentException: ContentTypeList does not contain a supported content type: text/*, image/*, application/*, audio/*
at org.apache.myfaces.shared_impl.renderkit.html.HtmlRendererUtils.selectContentType(HtmlRendererUtils.java:1043)
at org.apache.myfaces.renderkit.html.HtmlRenderKitImpl.createResponseWriter(HtmlRenderKitImpl.java:126)
at javax.faces.webapp.UIComponentTag.setupResponseWriter(UIComponentTag.java:936)
at javax.faces.webapp.UIComponentTag.doStartTag(UIComponentTag.java:310)
at org.apache.myfaces.taglib.core.ViewTag.doStartTag(ViewTag.java:70)",MYFACES-1554
"The JSF 1.2 API says that the value of DoubleConverter.CONVERTER_ID should be ""javax.faces.DoubleTime""",MYFACES-1553
"I extracted the javascript of a button out to make sure it uses up less html-code on the page. There is now one central javascript-method rendered where before the javascript calls were made per button.

regards,

Martin",MYFACES-1552
The 1.2 RI API does not define the method UIViewRoot.getPhaseListeners(). But this method is generated into the myfaces 1.2 UIViewRoot class.,MYFACES-1551
"Pages that once worked (1.1.5) stopped working for some reason (within the past week).  The issue seems to be with generated id's on components.

You will see this where you load a page and then reload the same page through a hyperlink or rendering for the second time.

There seems to be some correlation with the <f:facet tag.  I have a page with a <t:dataTable and several columns that use the <f:facet> tag to provide the column header.  The page loads just fine initially but if I reload, I get a blank screen and the following message in my Tomcat log file.

If I remove the column header and the facet tag, I do not see the error.  About a week ago there were no problems with this page so it is something new that has been introduced and should be fixed.

---
Mar 1, 2007 2:29:16 PM com.sun.facelets.FaceletViewHandler handleRenderException

SEVERE: Error Rendering View[/web/Summary.xhtml]
java.lang.IllegalStateException: Client-id : _id32 is duplicated in the faces tr
ee. Component : _id30:_id31:_id32, path: {Component-Path : [Class: javax.faces.c
omponent.UIViewRoot,ViewId: /web/Summary.xhtml][Class: org.ap
ache.myfaces.custom.document.Document,Id: _id12][Class: javax.faces.component.ht
ml.HtmlForm,Id: _id30][Class: org.apache.myfaces.component.html.ext.HtmlDataTabl
e,Id: _id31][Class: javax.faces.component.UIColumn,Id: _id32][Class: javax.faces
.component.html.HtmlOutputText,Id: _id32]}
        at org.apache.myfaces.application.jsp.JspStateManagerImpl.checkForDuplic
ateIds(JspStateManagerImpl.java:329)
        at org.apache.myfaces.application.jsp.JspStateManagerImpl.checkForDuplic
ateIds(JspStateManagerImpl.java:341)
        at org.apache.myfaces.application.jsp.JspStateManagerImpl.checkForDuplic
ateIds(JspStateManagerImpl.java:338)
        at org.apache.myfaces.application.jsp.JspStateManagerImpl.checkForDuplic
ateIds(JspStateManagerImpl.java:338)
        at org.apache.myfaces.application.jsp.JspStateManagerImpl.checkForDuplic
ateIds(JspStateManagerImpl.java:341)
        at org.apache.myfaces.application.jsp.JspStateManagerImpl.checkForDuplic
ateIds(JspStateManagerImpl.java:341)
        at org.apache.myfaces.application.jsp.JspStateManagerImpl.saveSerialized
View(JspStateManagerImpl.java:286)
        at com.sun.facelets.FaceletViewHandler.renderView(FaceletViewHandler.jav
a:601)
        at com.presence.util.bb.customjsf.PtViewHandler.renderView(PtViewHandler
.java:107)
        at org.apache.myfaces.lifecycle.RenderResponseExecutor.execute(RenderRes
ponseExecutor.java:41)
        at org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:
132)
        at javax.faces.webapp.FacesServlet.service(FacesServlet.java:140)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(Appl
icationFilterChain.java:252)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationF
ilterChain.java:173)
        at org.springframework.orm.hibernate3.support.OpenSessionInViewFilter.do
FilterInternal(OpenSessionInViewFilter.java:173)
        at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerR
equestFilter.java:77)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(Appl
icationFilterChain.java:202)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationF
ilterChain.java:173)
        at org.apache.myfaces.webapp.filter.ExtensionsFilter.doFilter(Extensions
Filter.java:190)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(Appl
icationFilterChain.java:202)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationF
ilterChain.java:173)
        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperV
alve.java:213)
        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextV
alve.java:178)
        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.j
ava:126)
        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.j
ava:105)
        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineVal
ve.java:107)
        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.jav
a:148)
        at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java
:869)
        at org.apache.coyote.http11.Http11BaseProtocol$Http11ConnectionHandler.p
rocessConnection(Http11BaseProtocol.java:664)
        at org.apache.tomcat.util.net.PoolTcpEndpoint.processSocket(PoolTcpEndpo
int.java:527)
        at org.apache.tomcat.util.net.LeaderFollowerWorkerThread.runIt(LeaderFol
lowerWorkerThread.java:80)
        at org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadP
ool.java:684)
        at java.lang.Thread.run(Thread.java:619)
---",MYFACES-1550
"UIOutput currently has the following code:

     public Object getValue()
     {
         if (_value != null) return _value;
         ValueBinding vb = getValueBinding(""value"");
         return vb != null ? (Object)vb.getValue(getFacesContext()) : null;
     }

UIInput has the following code:

     public void setValue(Object value)
     {
         setLocalValueSet(true);
         super.setValue(value);
     }

My problem (pseudo code):

1) user enters an empty string in an input-component: """"
2) conversion and validation phase: """" --> setValue(null);
isLocalValueSet = true; setSubmittedValue(null);
3) validation fails in some component on the page --> update model
phase is skipped
4) renderer calls getValue(); --> getValue() evaluates the
value-binding, as the local-value is 'null', and I get the
default-value of the bean shown again

proposed solution:

UIInput overwrites getValue of UIOutput:

     public Object getValue()
     {
         if (isLocalValueSet()) return _value;
         ValueBinding vb = getValueBinding(""value"");
         return vb != null ? (Object)vb.getValue(getFacesContext()) : null;
     }",MYFACES-1549
The Component State change if getValueBinding() is called and no _valueExpressionMap is present.,MYFACES-1548
"I'm using Spring WebFlow (SWF) in combination with MyFaces/Trinidad. I have the problem that the FlowPhaseListener from SWF is calling a method that triggers ServletExternalContextImpl.redirect be to called.
 
ServletExternalContextImpl.java
489    public void redirect(String url) throws IOException
490    {
491        if (_servletResponse instanceof HttpServletResponse)
492        {
493          ((HttpServletResponse)_servletResponse).sendRedirect(url);
494           FacesContext.getCurrentInstance().responseComplete();            
495        }
496        else
497        {
498            throw new IllegalArgumentException(""Only HttpServletResponse supported"");
499        }
500    }

The redirect method is calling a sendRedirect on the response but did not encode the url, so in case of URL-rewriting the jsessionid is not attached!

This patch would solve my problem:
 
replace line 493 with the following two lines:

String encodedUrl = ((HttpServletResponse)_servletResponse).encodeURL(url);
((HttpServletResponse)_servletResponse).sendRedirect(encodedUrl);
 
Thanks in advance, Leif
",MYFACES-1547
"This jira is to collect new names for Apache MyFaces Fusion

so far:

Apache MyFaces Connections
Apache MyFaces Vista
Apache MyFaces Salida
Apache MyFaces Defender
Apache MyFaces Seamless
Apache MyFaces Mergence
Apache MyFaces Accretion
Apache MyFaces Collective
Apache MyFaces Aurora
Apache MyFaces Concerto
Apache MyFaces Orchestra
",MYFACES-1546
"This seems to be closely related with MYFACES-1328.

I have a Converted configured with a UISelectOne which converts between strings and enum values, i.e. getAsObject() returns an Enum instance. After the convertion takes place UISelectOne.validateValue() is invoked to check if the Enum instance is among select items. This code definitely does not work:
                Object itemValue = item.getValue();
                if (value==itemValue || value.equals(itemValue))
                {
                    return true;
                }

as it tries to match an Enum instance against a string.",MYFACES-1545
"Hy,

Verbatim Components for text in the JSP Page are not created during JSP dispatch

Regards
Martin Haimberger",MYFACES-1544
the mbean_source is not working if for example the myfaces_simple examples are deployed not as docBase. The path the mbean_source.jsp generates is related to the docBase directory.,MYFACES-1543
"mavens dependencyManagement structure should be used to define the versions of the dependencies that are used in api and impl.
see http://maven.apache.org/pom.html#Dependency%20Management",MYFACES-1542
"Partial State Saving of the Component Tree to reduce the needed bandwith if client side state saving is activated or the used memory if server side state saving is used. There are two ""modes"" in which the partial state saving can be used, the faster one is if the jsp is only rendert once and a ""template"" of the component tree is generated and saved. The following request uses this ""template"" to construct the UIViewRoot and merge the partial state save. Before the state will get saved, the current UIViewRoot is compared to the template and only the components which differs are saved. In the secound mode the JSP is processed by every request, which is very usefull if Scripts are embedded inside the page. The secound reason is backword compatiblity because for example the f:loadbundle tag will load the bundle if the TAG is processed. The s:loadBundle component solves this problem, but if someone want to use partial state saving and is not willing to include the sandbox for the s:loadBundle component the secound mode will help.",MYFACES-1541
"Something like:
...
HtmlInputCalendar inputDate1 = JSFUtilities.createHtmlCalendar();
inputDate1.setDisplayValueOnly(true);
panel2.getChildren().add(inputDate1);
...

does not work. If I use the Component in a normal JSP page it works,
but why does it not work when set programatically.

Might not be a bug but at lease there should be some advice.",MYFACES-1540
"In the MyFaces-generated JavaScript for links, the parameter for saving the id of the link  has been changed from:

_link_hidden

to 

_idcl

This was necessary to increase compatibility with the RI 1.1 - without the change, t:commanLink elements wouldn't work with the RI.  Please change your javascript-code accordingly, if you program against this implementation dependent parameter.

regards,

Martin",MYFACES-1539
"outputFormat tag does not support variable substitution in title attribute

example:

<h:outputFormat value=""#{messages.test}"" title=""#{messages.test}"">
  <f:param value=""Peter"" />
</h:outputFormat>


result:

Param is substitutet in value attribute but not in title attribute.


Would be nice if it would be substituted in both/all attributes
",MYFACES-1537
"It seems that when MyFaces has been enabled it assumes that all the JSPs in a web app will produce a FacesContext.  But that's not the case for JSPs like the following:

<%@ taglib prefix=""c"" uri=""http://java.sun.com/jsp/jstl/core"" %>
<%
java.util.ArrayList mylist = new java.util.ArrayList();
mylist.add(""one"");
mylist.add(""two"");
mylist.add(""three"");
pageContext.setAttribute(""mylist"", mylist);
%>
<c:forEach var=""x"" items=""${mylist}"">
 <p>${x}</p>
</c:forEach>

And the error is:
java.lang.NullPointerException
      org.apache.myfaces.el.unified.resolver.ManagedBeanResolver.externalContext(ManagedBeanResolver.java:217)
      org.apache.myfaces.el.unified.resolver.ManagedBeanResolver.getValue(ManagedBeanResolver.java:146)
      javax.el.CompositeELResolver.getValue(CompositeELResolver.java:53)
      javax.el.CompositeELResolver.getValue(CompositeELResolver.java:53)
      org.apache.el.parser.AstIdentifier.getValue(AstIdentifier.java:45)
      org.apache.el.ValueExpressionImpl.getValue(ValueExpressionImpl.java:186)
      org.apache.jasper.el.JspValueExpression.getValue(JspValueExpression.java:101)
      org.apache.jsp.index_jsp._jspx_meth_c_005fforEach_005f0(index_jsp.java:95)
      org.apache.jsp.index_jsp._jspService(index_jsp.java:68)
      org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:98)
      javax.servlet.http.HttpServlet.service(HttpServlet.java:803)
      org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:384)
      org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:320)
      org.apache.jasper.servlet.JspServlet.service(JspServlet.java:266)
      javax.servlet.http.HttpServlet.service(HttpServlet.java:803)

This looks like there's a problem in the resolvers where the ELContext is expected to always have a FacesContext.",MYFACES-1536
"Profiling showed that findComponent takes a considerable amount of time to complete if called quite often (and many components do call findComponent). The proposed solution will store children not only in a list, but also in a map keyed by their id.

regards,

Martin",MYFACES-1535
http://mojo.codehaus.org/rat-maven-plugin/,MYFACES-1534
"The way how the custom converters are handled in current code is totally incosistent!
This issue can be splited into two parts:

1. Initial rendering of component, which provides custom converter don't check this, but just throws an exception: ""Expected submitted value of type ... for Component:..."", if the type of bound bean property dosn't match expected type. (i.e. h:selectBooleanCheckbox can't be bound to a String property, even with a custom converter, that converts a string value posted from client to ""true""/""false"", ""1""/""0"", ""yes""/""no"" or whatever, because this converter is just not called at this stage.)

Usecase
in bean:
----------------------------------------
private String strBoolean = ""1"";
	
public String getStrBoolean() {
	return strBoolean;
}

public void setStrBoolean(String strBoolean) {
	this.strBoolean = strBoolean;
}


converter:
---------------------------------------
public class BooleanConverter implements Converter {
	
	public Object getAsObject(FacesContext arg0, 
			                   UIComponent arg1,
			                        String newValue) throws ConverterException {
		return newValue.equalsIgnoreCase(""true"") ? ""1"" : ""0"";
	}

	public String getAsString(FacesContext arg0, 
			                   UIComponent arg1,
			                        Object myValue) throws ConverterException {
		return myValue.toString().equalsIgnoreCase(""1"") ? ""true"" : ""false"";
		//what should we return here, to make the UIBoolean happy???
		//""checked""/"""" ? ""on""/"""" ? nothing works, because this method is
		//just not called!
	}

}

in xhtml:
------------------------------------
<h:selectBooleanCheckbox value=""#{MyBean.strBoolean}""
				converter=""MyBooleanConverter""/>


causes:
----------------------------------
Expected submitted value of type Boolean for Component :...

Side note: if property in bean is initialized to null, all works great without any warning and the initial state of component's value becomes false!

Well, t:inputCalendar implements own converter handling and it works great, if some valid string is posted from client, but it's not possible to set initial value of component in bean, i.e.

private String strDate = ""01.01.2006"";

The initial 'rendered' state of component is always an empty string.



2. The second one should be probably the JSF Specification issue, but somehow is also converter related... AJAX compatybility. I've discovered some strange behaviour by using ajaxSingle feature from A4J. If a component's value is not present in request (ajaxSingle approach), it becomes null during 'Apply request values' phase regardless of custom converter (which tries to catch this situation in getAsObject() method). The warning ""There should always be a submitted value..."" is correct, but why should the framework not try to let custom converter deal with this situation, if it's provided?

regards,
paul",MYFACES-1533
"The way how the custom converters are handled in current code is totally incosistent!
This issue can be splited into two parts:

1. Initial rendering of component, which provides custom converter don't check this, but just throws an exception: ""Expected submitted value of type ... for Component:..."", if the type of bound bean property dosn't match expected type. (i.e. h:selectBooleanCheckbox can't be bound to a String property, even with a custom converter, that converts a string value posted from client to ""true""/""false"", ""1""/""0"", ""yes""/""no"" or whatever, because this converter is just not called at this stage.)

Usecase
in bean:
----------------------------------------
private String strBoolean = ""1"";
	
public String getStrBoolean() {
	return strBoolean;
}

public void setStrBoolean(String strBoolean) {
	this.strBoolean = strBoolean;
}


converter:
---------------------------------------
public class BooleanConverter implements Converter {
	
	public Object getAsObject(FacesContext arg0, 
			                   UIComponent arg1,
			                        String newValue) throws ConverterException {
		return newValue.equalsIgnoreCase(""true"") ? ""1"" : ""0"";
	}

	public String getAsString(FacesContext arg0, 
			                   UIComponent arg1,
			                        Object myValue) throws ConverterException {
		return myValue.toString().equalsIgnoreCase(""1"") ? ""true"" : ""false"";
		//what should we return here, to make the UIBoolean happy???
		//""checked""/"""" ? ""on""/"""" ? nothing works, because this method is
		//just not called!
	}

}

in xhtml:
------------------------------------
<h:selectBooleanCheckbox value=""#{MyBean.strBoolean}""
				converter=""MyBooleanConverter""/>


causes:
----------------------------------
Expected submitted value of type Boolean for Component :...

Side note: if property in bean is initialized to null, all works great without any warning and the initial state of component's value becomes false!

Well, t:inputCalendar implements own converter handling and it works great, if some valid string is posted from client, but it's not possible to set initial value of component in bean, i.e.

private String strDate = ""01.01.2006"";

The initial 'rendered' state of component is always an empty string.



2. The second one should be probably the JSF Specification issue, but somehow is also converter related... AJAX compatybility. I've discovered some strange behaviour by using ajaxSingle feature from A4J. If a component's value is not present in request (ajaxSingle approach), it becomes null during 'Apply request values' phase regardless of custom converter (which tries to catch this situation in getAsObject() method). The warning ""There should always be a submitted value..."" is correct, but why should the framework not try to let custom converter deal with this situation, if it's provided?

regards,
paul",MYFACES-1532
"We encountered some NPE when accessing the FacesContext in the doView-Method. I first thought about a bug in the Liferay-Portal-Server (see http://support.liferay.com/browse/LEP-1869). But then I discovered that it is a bug in MyFaces, that is triggred because Liferay pools ActionRequest and RenderRequest objects.

MyFaces changes the external context value in the method org.apache.myfaces.portlet.MyFacesGenericPortlet#facesRender to switch from ActionRequest and ActionResponse to RenderRequest and RenderResponse. But that switch happens to late, so that in doView (and doEdit and doHelp as well) the FacesContext uses references to the ActionRequest and ActionResponse instead of RenderRequest and RenderResponse. And unfortunately Liferay has already recycled the RenderRequest object and thus a NPE is raised when trying to use the request.

I added the following code to my portlet (indeed, to our own super class) to make the switch earlier and the NullPointerException when accessing attributes via the FacesContext will not be raised any longer. (Please note that I cannot use the FacesContext.getCurrentInstance() method in a portal environment, because each portlet owns its own context).

    public void render(RenderRequest request, RenderResponse response) throws PortletException,
            IOException {

        // The following code was taken from org.apache.myfaces.portlet.MyFacesGenericPortlet#facesRender
        //
        // get the portlet session local context
        ServletFacesContextImpl context = (ServletFacesContextImpl) request.getPortletSession()
                .getAttribute(CURRENT_FACES_CONTEXT);
        if (context != null) {
            // and set a new external context that uses the render request and response
            context.setExternalContext(makeExternalContext(request, response));
        } else {
            // no context available for the current portlet yet; create a new one and put it into the session
            context = (ServletFacesContextImpl) facesContext(request, response);
            request.getPortletSession().setAttribute(CURRENT_FACES_CONTEXT, context);
        }


        super.render(request, response);
    } 

Later I discovered another problem concerning the FacesContext: When rendering the very first MyFaces-Portlet, no FacesContext exists for the Portlet. Therefore the method nonFacesRequest is called. Somewhere inside this method a new FacesContext is created, but that new FacesContext is never put into the session. Thus my workaround in the render method was broken again. I fixed that by extending the method nonFacesRequest as follows:

    protected void nonFacesRequest(RenderRequest request, RenderResponse response)
            throws PortletException {

        super.nonFacesRequest(request, response);

        request.getPortletSession().setAttribute(CURRENT_FACES_CONTEXT,
                FacesContext.getCurrentInstance());
    }

",MYFACES-1531
"Actions (commandLink, commandButton) are not called when using Websphere 6.0. Works in Tomcat 5.0.

Short story: We're porting web application from Tomcat 5.0 to Websphere 6.0. Application was using MyFaces 1.1.4, but unfortunately there is a bug that generates duplicated component IDs when components are generated dynamically (using bind). First time the page was generated correctly and the problem appeared after submitting a form. Therefore we decided to give a try to 1.1.5-SNAPSHOT. Then, after submitting a form, the page reloaded, but no action method was called.

For now we are using 1.1.3 that seems not to have these issues.
",MYFACES-1530
"Hi,

I have a working application (myfaces-1.1.3.jar) that fills a CachedRowSet
and displays in a <h:dataTable>. 

When replacing with myfaces-1.1.4 or myfaces-1.1.5-SNAPSHOT
(I tried with SNAPSHOT January1st, February 1st) the dataTable is empty, 
no rows are rendered and no exceptions are thrown.

(Actually I have two applications in three different environments 
 which reproducible fail to render the table)

I am unsure whether this relates to TOMAHAWK-89, 
but that refers to <t:dataTable>

Yours,
Steffen

Bean:
	public CachedRowSet getRsdates(){
		ResultSet d = null;
		CachedRowSet crs = null;
		try {
			con = getDBConnection();
			
			pstm = con.prepareStatement(""select date, count(date) as count from userdates group by date order by date;"");
			d = pstm.executeQuery();
			crs = new CachedRowSetImpl();
			crs.populate(d);
			con.close();
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}		
		return crs;
	}


*.jsp:
	<h:dataTable value=""#{tisch.rsdates}"" var=""tupel"" >
						<h:column>
							<h:outputText value=""#{tupel.date}"" />
						</h:column>
					</h:dataTable>
",MYFACES-1528
"Some of the jsp files in the simple.war web application that comes with the myfaces-examples contain a form tag with a name attribute instead of an id attribute.
This causes an error in the current myfaces core release.
",MYFACES-1527
"I'm my application I use a t:datatable to render a table of links.
The commandLinks have a target-attribute to open a the next page in a new window.

This works fine, except that after the user has links on a link and thereafter closes the opened window, the parent window is still locked.
Clicking on any other link results in an alter stating: ""Window has been locked"" 

The code of my page looks like: 
        

<t:dataTable 
        id=""messageList"" 
        value=""#{messageSearchBean.foundMessages}"" var=""message"" > 
        <t:column > 
                <h:commandLink 
                        action=""#{messageSearchBean.select}"" 
                        immediate=""true"" 
                        value=""#{message.subject}"" 
                        target=""readMessageWindow""> 
                        <t:updateActionListener property=""#{messageDisplayBean.message}"" value=""#{message}"" /> 
                </h:commandLink> 
        </t:column>     
</t:dataTable> 

I assume the locking of the window has been build in to prevent double submits, which it does quite nicely, but is an annoyance for my use case.
I think the locking of the window should not be done when a commandLink has a target attribute or the newly opened window should 'unlock' it's parent onLoad.


",MYFACES-1526
"actions of UICommand components with immediate=false are executed in applyRequestValue phase instead of invokeApplication phase,
if the UICommand is a descendant of another UICommand with immediate=true.

following situation:

a button with immediate=true, a popup-facet on this button.
inside this popup a button with no immediate, (or immediate=false).

the action of the button inside the popup is execuded in applyRequestValue phase instead of in invokeApplication.

this problem is the same in myfaces and RI implementation.",MYFACES-1525
"Section 5.3.1.3 states that lists returned by getters for list-entries properties should be used if they are non-null:

For <list-entries>:
1. Call the property getter, if it exists.
2. If the getter returns null or doesn't exist, create a java.util.ArrayList,
   otherwise use the returned Object (an array or a java.util.List).
...
5. If a new java.util.List was created in step 2) and the property is of type
   List, set the property by calling the setter method, or log an error if there is no
   setter method.

From point 5, it's obvious that the corresponding setter should only be called only if a new list was created in step 2, which only happens if there is no getter or the getter returns null. The implementation in MyFaces (org.apache.myfaces.config.ManagedBeanBuilder.initializeProperties(...)) does however always call the setter, even when a list was returned from the getter.

The implementation should remember if a new list had to be created (either because it was null/no getter present, or because an array was returned from the getter), and only call the setter if that was the case.",MYFACES-1524
"This problem, which is also addressed by jsf-1.2 specs, actually afflicts all the pre-1.2.0 myfaces-core versions.

In these versions, when an HTTP request is issued to myfaces, the package evincts it is a postback request in case at least one POST/GET parameter is issued.

This can't be always the case, since there is the possibilty that some parameters are somehow used outside of the myfaces framework, expecially in the GET case.

I propose a solution which basicly assumes that an HTTP request is a postback iff it finds a parameter having a name ending in the _SUBMIT suffix, which is the one adopted by org.apache.myfaces.shared_impl.renderkit.html.HtmlFormRendererBase to mark a form submit.",MYFACES-1523
"If a Exception (like a PropertyException) was thrown and the UIInput#updateModel method catches it, the Exception has a message but no stacktrace. The user gets only a *null* message and the log shows nothing.

It would be nice if the exception is also logged. Here comes a short patch:

       catch (EvaluationException ee)
        {
            String exceptionMessage = ee.getMessage();
            if (exceptionMessage == null)
            {
                _MessageUtils.addErrorMessage(context, this,
                        CONVERSION_MESSAGE_ID, new Object[] { getId() });
            }
            else
            {
               // log the exception for the developer
               context.getExternalContext().log(ee.getMessage(), ee);
                _MessageUtils.addErrorMessage(context, this, ee);
            }
            
            setValid(false);
        }",MYFACES-1522
"setVar() on generated DataTable tag clazz file should take string instead of valueExpression

something like <h:dataTable var=""#{foo""}> makes it hard to access the underlying beans in a row.",MYFACES-1521
,MYFACES-1520
,MYFACES-1519
"At the end of the portlet action phase the MyFacesGenericPortlet sets a render parameter.  

response.setRenderParameter(VIEW_ID, facesContext.getViewRoot().getViewId());

This is not allowed if redirect has already been called on the external context during the action phase of the jsf lifecycle.  I believe for redirect case a flag should be used to indicate the the render parameter should not be set.",MYFACES-1518
"According to the jsf-1_0-fr-spec-apidocs (JavaDocs for jsf-api: http://java.sun.com/javaee/javaserverfaces/download.html --> JavaServer Faces v1.0 Specification Final Release), considered part of the JSF specification, the method getRequestParameterMap() in javax.faces.context.ExternalContext must return an immutable Map:
""Return an immutable Map whose keys are the set of request parameters names included in the current request, and whose values (of type String) are the first (or only) value for each parameter name returned by the underlying request."" (http://java.sun.com/javaee/javaserverfaces/1.1_01/docs/api/javax/faces/context/ExternalContext.html)

The org.apache.myfaces.context.servlet.ServletExternalContextImpl, however, returns a mutable Map. This is not conform to the JSF specification.",MYFACES-1517
"I have three locales supported:
cs_CZ
en_US
en
When I tell my browser to send only one allowed language, everything is all right, but when I configure firefox to use these three languages in the same order (firefox sets 0.7 priority to en_US and 0.3 to en), I always get en_US version. Locale config says that cs_CZ is the default locale:
<locale-config>
<default-locale>cs_CZ</default-locale>
<supported-locale>en_US</supported-locale>
<supported-locale>en</supported-locale>
</locale-config>
This is not a blocker, but it is a problem, that should be solved.",MYFACES-1516
"Please add attribute ""autocomplete"" to h:HtmlForm aswell, like on h:inputText.

Patch is enclosed",MYFACES-1515
"When i use JSP under WebApp, Pages is showed well. But when i move the JSPs to WEB-INF directory, pages is showed errors, that is ""unable to load class for jsp"".
So, JSF is not allowed to place JSP under WEB-INF?",MYFACES-1514
"pom.xml of myFaces-api defines the following dependency:
    <dependency>
      <groupId>commons-digester</groupId>
      <artifactId>commons-digester</artifactId>
      <version>1.6</version>
      <scope>compile</scope>
      <exclusions>
        <exclusion>
          <artifactId>xml-apis</artifactId>
          <groupId>xml-apis</groupId>
        </exclusion>
      </exclusions>
    </dependency>

This one is unnecessary and should be moved to myfaces-impl where there is a real dependency from DigesterFacesConfigUnmarshallerImpl class.
",MYFACES-1513
"When a validator is attached to an input field, using the backing bean validator method:

<h:inputText id=""accountNumber"" value=""#{unitBean.entity.accountNumber}"" validator=""#{unitBean.validateAccountNumber}"" />

the validator is not called if the field is blank. This limits the usefulness of validators, making it impossible to implement validation rules for fields that are only required under certian conditions (in my case the account # was only required for certain selections from another control in the form)",MYFACES-1512
"a) ... there is only a commandButton on the form (not commandLinks)
... which is not necessarily a problem as normally such a form do not require these functions, BUT when you have enabled the auto_scroll feature things getting worse. Then something like
oamSetHiddenInput('_idJsp29','autoScroll',getScrolling())
will be rendered and then the oamSetHiddenInput function is missing.

b) ... you are using the adf form
in HtmlLinkRendererBase you'll see that renderFormSubmitScriptIfNecessary will not be called if the link is used within an adf form, then again the autoScroll feature is broken and a javascript error will be shown.

Would be great if someone else has some time to fix it.",MYFACES-1511
The HtmlFormRendererBase class does not render the accept-charset attribute.,MYFACES-1510
"Autogeneration of Myfaces CORE's components breaks some examples in Tomahawk:

AliasBean

Data Table:
  Master-Detail
  Dynamic number of columns, add a column

Schedule
  all

In all examples newly generated CORE components prevent normal behavior. I coudn't track the bug.

Zdenek Sochor",MYFACES-1509
"Hi,

I had an exception and after a couple of hours debugging I think I found the cause of the problem. I would suggest some possibility to solve the problem as well.
On the line 194 of the class JspViewHandlerImpl the following code can be foud:

        if (PortletUtil.isPortletRequest(facesContext)) {
            externalContext.dispatch(viewId);
            return;
        }

The PortletUtil.isPortletRequest returns false for me although I develop a portlet JSF component. The cause of this that the isPortletRequest function checks whether the sessionMap of the ExternalContext contain the PORTLET_REQUEST_FLAG key or not. It does not because the getSessionMap() function of the ExternalContextImpl creates the map if it is null and it does not put this key into the map. I think it should do it in the constructor.
Could you please check if it is true what I am saying? I wanted to make the chapter 6 project of the ""Pro Jsf And Ajax"" book work in a Liferay environment when I found this.

Could you please check if this is a bug or not?",MYFACES-1508
"When I type the value ""abc12345"" it gives me a ConversionError as expected.
But when I type the value ""123abc45"" there is no ConversionError but it converts this input to the Number ""123"" and cuts the rest of it. I would also expect a ConversionError as this input is not a valid Number...?!

Looking into the source of NumberConverter I see that it uses DecimalFormat to parse the input into Number which definitive cuts the String value in the descibed way. Maybe there should also be a verification for any character of the typed input string.

Would this be a correct way to fix this?
",MYFACES-1507
"I'm attaching CompareToValidator.java with basic i18n support, Messages.properties, Messages_en.properties and Message_pt_BR.properties with new localized strings.",MYFACES-1506
"The attribute acceptCharset is incorrect in Myfaces TLD for the tag h:form.  It should be acceptcharset.

The Selenium test case testSuite/hForm.jsp is currently failing because of this.


See http://java.sun.com/javaee/javaserverfaces/1.1_01/docs/tlddocs/h/form.html",MYFACES-1505
"a) ... there is only a commandButton on the form (not commandLinks)
... which is not necessarily a problem as normally such a form do not require these functions, BUT when you have enabled the auto_scroll feature things getting worse. Then something like
oamSetHiddenInput('_idJsp29','autoScroll',getScrolling())
will be rendered and then the oamSetHiddenInput function is missing.

b) ... you are using the adf form
in HtmlLinkRendererBase you'll see that renderFormSubmitScriptIfNecessary will not be called if the link is used within an adf form, then again the autoScroll feature is broken and a javascript error will be shown.

Would be great if someone else has some time to fix it.",MYFACES-1504
"When used custom converter MyObject -> String Id, String Id -> MyObject, h:selectOneMenu does not update value binding. I was testing the binding with h:inputText and there it works OK.

Following works:
<h:inputText value=""#{GlossInstrumentCapture.instrument.denominationCurrency}"" />

Following does not:
<h:selectOneMenu
	value=""#{GlossInstrumentCapture.instrument.denominationCurrency}"">
	<f:selectItems
		value=""#{GlossInstrumentCapture.definition.currencies}"" />
</h:selectOneMenu>

public InstrumentLabel getDenominationCurrency();
public void setDenominationCurrency(InstrumentLabel denominationCurrency);

	for (InstrumentLabel currency : definition.getCurrencies()) {
		SelectItem item = new SelectItem(currency, currency.getName());
		currencies.add(item);
	}

	public List<SelectItem> getCurrencies() {
		return currencies;
	}

Converter is called properly, works properly. When the form is submitted, converter is called and in case of inputText value binding (GlossInstrumentCapture.instrument.denominationCurrency) is updated. In case of selectOneMenu, MyFaces weirdly and SILENTLY skips UPDATE_MODEL_VALUES and INVOKE_APPLICATION and renders current /previous/ view.

Thanks, Jiri
",MYFACES-1503
"JavaScript detection is failing for core components such as <h:commandLink/>.

Core commandLink calls JavascriptUtil, which  looks for a session attribute named ""org.apache.myfaces.shared_impl.renderkit.html.util.JavascriptUtils.JAVASCRIPT_DETECTED"" to determine if JavaScript is supported in the browser.

However, in the above configuration, JavaScript detector has placed flag in attribute named  ""org.apache.myfaces.shared_tomahawk.renderkit.html.util.JavascriptUtils.JAVASCRIPT_DETECTED"" 
(note 'shared_tomahawk' instead of 'shared_impl').

Rendered CommandLink would not pass on nested <f:param> to actionListener because javascript was not detected, and thus not properly rendered.
 
<h:commandLink immediate=""true"" styleClass=""#{t.nodeSelected ? 'documentSelected':'document'}""
               actionListener=""#{control.menuTree.selectNode}"" action=""accountManager"">	          
     <h:outputText value=""#{msgs.navTree_accountManager}"" styleClass=""nodeFolder"" />
     <f:param name=""docNum"" value=""#{node.identifier}"" />
</t:commandLink>

My workaround (after much debugging): Used Tomahawk <t:commandLink/> instead.",MYFACES-1502
"Receive the following exception from myfaces from time to time while executing a load tests. Happens intermitently.

06/11/27 11:10:20.626 PINSSWeb: Servlet error
javax.faces.FacesException: InValid to flush BodyContent: no backing stream behind it 
	at org.apache.myfaces.context.servlet.ServletExternalContextImpl.dispatch(ServletExternalContextImpl.java:422)
	at org.apache.myfaces.application.jsp.JspTilesViewHandlerImpl.dispatch(JspTilesViewHandlerImpl.java:233)
	at org.apache.myfaces.application.jsp.JspTilesViewHandlerImpl.renderView(JspTilesViewHandlerImpl.java:219)
	at org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:384)
	at javax.faces.webapp.FacesServlet.service(FacesServlet.java:138)
	at com.evermind[Oracle Containers for J2EE 10g (10.1.3.0.0) ].server.http.ResourceFilterChain.doFilter(ResourceFilterChain.java:64)
	at org.apache.myfaces.webapp.filter.ExtensionsFilter.doFilter(ExtensionsFilter.java:144)
	at com.evermind[Oracle Containers for J2EE 10g (10.1.3.0.0) ].server.http.EvermindFilterChain.doFilter(EvermindFilterChain.java:15)
	at org.ajax4jsf.framework.ajax.xmlfilter.BaseFilter.doFilter(BaseFilter.java:232)
	at com.evermind[Oracle Containers for J2EE 10g (10.1.3.0.0) ].server.http.EvermindFilterChain.doFilter(EvermindFilterChain.java:17)
	at org.acegisecurity.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:264)
	at ca.gc.agr.pinss.web.filters.security.ChangePasswordFilter.doFilter(ChangePasswordFilter.java:116)
	at org.acegisecurity.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:274)
	at org.acegisecurity.intercept.web.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:107)
	at org.acegisecurity.intercept.web.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:72)
	at org.acegisecurity.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:274)
	at org.acegisecurity.ui.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:110)
	at org.acegisecurity.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:274)
	at ca.gc.agr.pinss.web.filters.security.SessionTimeoutFilter.doFilter(SessionTimeoutFilter.java:118)
	at org.acegisecurity.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:274)
	at org.acegisecurity.wrapper.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:81)
	at org.acegisecurity.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:274)
	at org.acegisecurity.ui.AbstractProcessingFilter.doFilter(AbstractProcessingFilter.java:216)
	at org.acegisecurity.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:274)
	at org.acegisecurity.context.HttpSessionContextIntegrationFilter.doFilter(HttpSessionContextIntegrationFilter.java:195)
	at org.acegisecurity.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:274)
	at org.acegisecurity.util.FilterChainProxy.doFilter(FilterChainProxy.java:148)
	at org.acegisecurity.util.FilterToBeanProxy.doFilter(FilterToBeanProxy.java:90)
	at com.evermind[Oracle Containers for J2EE 10g (10.1.3.0.0) ].server.http.EvermindFilterChain.doFilter(EvermindFilterChain.java:17)
	at ca.gc.agr.pinss.web.filters.CharacterEncodingFilter.doFilter(CharacterEncodingFilter.java:45)
	at com.evermind[Oracle Containers for J2EE 10g (10.1.3.0.0) ].server.http.ServletRequestDispatcher.invoke(ServletRequestDispatcher.java:627)
	at com.evermind[Oracle Containers for J2EE 10g (10.1.3.0.0) ].server.http.ServletRequestDispatcher.forwardInternal(ServletRequestDispatcher.java:376)
	at com.evermind[Oracle Containers for J2EE 10g (10.1.3.0.0) ].server.http.HttpRequestHandler.doProcessRequest(HttpRequestHandler.java:870)
	at com.evermind[Oracle Containers for J2EE 10g (10.1.3.0.0) ].server.http.HttpRequestHandler.processRequest(HttpRequestHandler.java:451)
	at com.evermind[Oracle Containers for J2EE 10g (10.1.3.0.0) ].server.http.AJPRequestHandler.run(AJPRequestHandler.java:299)
	at com.evermind[Oracle Containers for J2EE 10g (10.1.3.0.0) ].server.http.AJPRequestHandler.run(AJPRequestHandler.java:187)
	at oracle.oc4j.network.ServerSocketReadHandler$SafeRunnable.run(ServerSocketReadHandler.java:260)
	at com.evermind[Oracle Containers for J2EE 10g (10.1.3.0.0) ].util.ReleasableResourcePooledExecutor$MyWorker.run(ReleasableResourcePooledExecutor.java:303)
	at java.lang.Thread.run(Thread.java:595)",MYFACES-1501
"Default values for view-handler and factories are missing in standard-faces-config.xml.
",MYFACES-1500
"The situation is that I have a button that should only be shown when the goBackAction field is set in the OrderStatusBean (which is _request_ scoped), and which is kept as a hidden field in the form.  I can print out the field which has the expected value of ""succesfulOrder"".

Problematic code:

1)
<h:commandButton action=""#{OrderStatusHandler.goBack}"" value=""#{msg['go-back']}"" rendered=""#{not empty OrderStatusBean.goBackAction}""/>

2)
<h:commandButton action=""#{OrderStatusHandler.goBack}"" value=""#{msg['go-back']}"" />

Of these #2 works as expected (but always show the button), and #1 shows as expected but does not call the listed action.

I tried adding the immediate=""true"" option to #1, but with no change.

I have not seen any log lines indicating that a navigational choice was made after pressing the button, so my guess is that the button is considered to be unavailable at processing time and therefore discarded, so the page is merely redisplayed.

Is it legal at all to do what I would like to, or should I go for a session based variable instead?



",MYFACES-1499
"I stubled upon this NoSuchMethodError and did a google search and found out that other people on myfaces-user have had this problem too.

As described in http://thicksliced.blogspot.com/2006/04/compiling-for-older-jvms.html the problem is StringBuffer.insert call in _SelectItemsIterator.java:228

My guess is that myfaces-core-1.1.3 release was compiled with 1.5.0 compiler using source=""1.4"" and target=""1.4"" switches. Can someone confirm this?
Apparently this alone is not enough to guarantee complete 1.4 compatibility.

I will recompile 1.1.4 myself with 1.4 compiler to confirm this.

There is also a workaround that can be applied in the source level. Cast the second argument of the insert call to Object. insert(2, (Object)strBuf)


[20.11.2006 16:59:10:955 EET] 0000002f ServletWrappe E   SRVE0014E: Uncaught service() exception root cause faces: java.lang.NoSuchMethodError: java/lang/StringBuffer.insert(ILjava/lang/CharSequence;)Ljava/lang/StringBuffer;
        at javax.faces.component._SelectItemsIterator.getPathToComponent(_SelectItemsIterator.java:228)
        at javax.faces.component._SelectItemsIterator.getPathToComponent(_SelectItemsIterator.java:199)
        at javax.faces.component._SelectItemsIterator.hasNext(_SelectItemsIterator.java:131)
        at javax.faces.component._SelectItemsUtil.matchValue(_SelectItemsUtil.java:46)
        at javax.faces.component.UISelectOne.validateValue(UISelectOne.java:62)
        at javax.faces.component.UIInput.validate(UIInput.java:353)
        at javax.faces.component.UIInput.processValidators(UIInput.java:183)
        at javax.faces.component.UIComponentBase.processValidators(UIComponentBase.java:624)
        at javax.faces.component.UIForm.processValidators(UIForm.java:70)
        at javax.faces.component.UIComponentBase.processValidators(UIComponentBase.java:624)
        at javax.faces.component.UIViewRoot.processValidators(UIViewRoot.java:146)
        at org.apache.myfaces.lifecycle.LifecycleImpl.processValidations(LifecycleImpl.java:262)
        at org.apache.myfaces.lifecycle.LifecycleImpl.execute(LifecycleImpl.java:76)
        at javax.faces.webapp.FacesServlet.service(FacesServlet.java:137)
        at org.apache.myfaces.webapp.MyFacesServlet.service(MyFacesServlet.java:74)",MYFACES-1498
"With jsf code of :

	<h:form enctype=""multipart/form-data"" >
		<h:commandButton value=""Upload"" action=""#{uploadUsersUIBean.testSubmit}"" />
	</h:form>

and java code of : 	
public String testSubmit()
	{
		return(null);
	}",MYFACES-1497
"findNestingForm  is implemented twice. Onece in _ComponentUtils also in RendererUtils.

",MYFACES-1496
"client side state saving in myfaces 1.1.5 says

""No serialized component state found in client request!""
",MYFACES-1495
"In the service() method of FacesServlet you have the following code :
        try {
			_lifecycle.execute(facesContext);
			_lifecycle.render(facesContext);
	} catch (Throwable e)  {
             ...

So, if an exception occurs in the execute step it is impossible to do the render step and the consequence is a blank page which is not very user-friendly",MYFACES-1494
"h:selectOneMenu appears to require a converter if the object bound in the value field is not a java.lang.String.

To reproduce:

JSP snippet:

   <h:dataTable var=""row"" value=""#{bean.rows}>
      <h:column>
         <h:selectOneMenu value=""#{row.day}""/>
      <h:column>
   </h:dataTable>


Java snippet (backing bean):

  private List<UserClass> rows;

   public List getRows(){
      return rows;
   }


Java snippet (UserClass):

   static enum Day {MON, TUE, WED, THU, FRI, SAT, SUN};

   private Day day;

   public getDay(){
      return day;
   }

Expected:
the enum Day to be converted to a string and display either ""MON"", ""TUE"", etc...

Actual:
java.lang.IllegalArgumentException: Value is no String (class=UserClass$Day, value=MON)
   at org.apache.myfaces.shared_impl.renderkit.RendererUtils.getConvertedStringValue(RendererUtils.java:536)
        at org.apache.myfaces.shared_impl.renderkit.html.HtmlRendererUtils.getSubmittedOrSelectedValuesAsSet(HtmlRendererUtils.java:321)
        at org.apache.myfaces.shared_impl.renderkit.html.HtmlRendererUtils.internalRenderSelect(HtmlRendererUtils.java:296)
        at org.apache.myfaces.shared_impl.renderkit.html.HtmlRendererUtils.renderMenu(HtmlRendererUtils.java:252)
        at org.apache.myfaces.shared_impl.renderkit.html.HtmlMenuRendererBase.encodeEnd(HtmlMenuRendererBase.java:54)
        at javax.faces.component.UIComponentBase.encodeEnd(UIComponentBase.java:536)
        at org.apache.myfaces.shared_impl.renderkit.RendererUtils.renderChild(RendererUtils.java:442)
        at org.apache.myfaces.shared_impl.renderkit.RendererUtils.renderChildren(RendererUtils.java:419)
        at org.apache.myfaces.shared_impl.renderkit.RendererUtils.renderChild(RendererUtils.java:440)
        at org.apache.myfaces.shared_impl.renderkit.html.HtmlTableRendererBase.renderColumnBody(HtmlTableRendererBase.java:332)
        at org.apache.myfaces.shared_impl.renderkit.html.HtmlTableRendererBase.encodeColumnChild(HtmlTableRendererBase.java:301)
        at org.apache.myfaces.shared_impl.renderkit.html.HtmlTableRendererBase.encodeInnerHtml(HtmlTableRendererBase.java:277)
        at org.apache.myfaces.shared_impl.renderkit.html.HtmlTableRendererBase.encodeChildren(HtmlTableRendererBase.java:123)
        at javax.faces.component.UIComponentBase.encodeChildren(UIComponentBase.java:524)


The RI and ADF Faces will quite happily work, however myfaces doc's seem to mean that a convertor is needed.  
See also http://www.mail-archive.com/users@myfaces.apache.org/msg29588.html 

This is a pain - could it be fixed please?

",MYFACES-1493
"valueChangeListener is being called before the setters, even with immediate=""true"".
This is not the right behavior since it overwrites any property modified in the event handler.

<t:panelGrid columns=""2"" cellpadding=""0"" cellspacing=""5px"" columnClasses=""left top, left top"">
    <t:outputLabel for=""infoId"" value=""Options""/>
    <t:selectOneMenu id=""infoId"" value=""#{productBean.infoId}"" onchange=""submit()"" valueChangeListener=""#{productBean.valueChangedHandler}"" immediate=""true"">
        <f:selectItem itemValue=""-1"" itemLabel=""<new short info>""/>
        <f:selectItems value=""#{productBean.shortInfoSelectItems}""/>
    </t:selectOneMenu>

    <t:outputLabel for=""descText"" value=""Description""/>
    <t:inputTextarea id=""descText"" rows=""8"" value=""#{productBean.description}""/>

    <t:outputLabel for=""utilText"" value=""Usage""/>
    <t:inputTextarea id=""utilText"" styleClass=""wXXXL"" rows=""8"" value=""#{productBean.usage}""/>
</t:panelGrid>

public class ProductBean {

    private Long infoId;
    private String description;
    private String usage;

//    ....  setters and getters for the above properties

    public void valueChangedHandler(ValueChangeEvent event) {
        Long infoId = (Long) event.getNewValue();
        if ((infoId != null) && (infoId > 0)) {
            //DataService and ProductInfo are related to Hibernate
            ProductInfo info = DataService.getProductInfo(infoId);
            this.description = info.getDescription();
            this.usage = info.getUsage();
        }
    }
}

Description and Usage properties can never be changed since they get overwritten with the initial values.
:(((((((((((((((((((((((((
",MYFACES-1492
"As a followup to to MyFaces-1488, this is a requst to implement Maven's Checkstyle plugin to insure all source files contain the correct Apache License.

Additional checks, i.e. modules, can be added in the future.  This request is limited to checking for the Apache License",MYFACES-1491
DateTimeConverter throws ParseException on parsing time.,MYFACES-1490
"Context Maps (SessionMap, RequestHeaderMap, InitParameterMap, ...) return different values each time the map is called",MYFACES-1489
"All the ASF License headers in the source files need to be updated to remove the copyright notice as per the new policy:

    http://www.apache.org/legal/src-headers.html

We could also run Robert Burrell Donkin's ""RAT"" (release audit tool) to see if anything else is missing

   http://code.google.com/p/arat/",MYFACES-1488
"A navigation rule bug is present in NavigationHandlerImpl.calcMatchingNavigationCase(..)

The bug occurs in the following situation:

given the following navigation rules:

    <navigation-rule>
        <from-view-id>/foo.jsp</from-view-id>
        <navigation-case>
            <from-outcome>success</from-outcome>
            <to-view-id>/bar.jsp</to-view-id>
        </navigation-case>
    </navigation-rule>

    <navigation-rule>
        <navigation-case>
            <from-action>#{randomBean.newFoobar}</from-action>
            <from-outcome>success</from-outcome>
            <to-view-id>/foobar.jsp</to-view-id>
        </navigation-case>
    </navigation-rule>

Also:
#{randomBean.newFoobar} returns ""success""

If you are in the view /foo.jsp and an action link calling #{randomBean.newFoobar} is clicked, the first navigation rule will be used. The reason is that the  the rule's actionRef and the current actionRef are never compared, due to a logic error. This can be fixed by updating calcMatchingNavigationCase:

--snip--
            if (((cazeOutcome == outcome) || (cazeOutcome != null && cazeOutcome.equals(outcome))) &&
                ((cazeActionRef == actionRef) || (cazeActionRef != null && cazeActionRef.equals(actionRef))))
            {
                return caze;
            }
--snip--",MYFACES-1487
"MyFaces currently doesn't handle the case of null-values for the ""base"" parameter in the calls to methods of PropertyResolverImpl. This is bad for user-feedback - they never know that a bean that they supplied was spelled wrongly or is null. It's ok for the VariableResolverImpl to return null if the resolved bean is null, and ok for the PropertyResolverImpl to return null if the supplied property-name resolves to null, but not if the supplied base is null!

regards,

Martin

",MYFACES-1486
,MYFACES-1485
,MYFACES-1484
"I have a drop down selectOne menu with an ""empty"" option as the first option. But rather than printing the empty string in the drop down menu, I want to display the text '- Select One-' instead, but still have it correspond to the empty string value for the purpose of forcing a required validation check. When I set this up (see snippets below), this leads to a conversion error on the select one component when I try to submit a form with the '-Select One-' option selected. If instead I do not try to display '-Select One-' as the empty option but just simply display the empty string as the first option in the select one component, then I correctly get a required validation error when submitting the form with the empty selection selected.

sample jsp:

						<h:selectOneMenu id=""selectonecomponent"" value=""#{reportParameterToValueBinding.reportParameterValue}"" converter=""org.efs.openreports.objects.ReportParameterValue"" styleClass=""selectOneMenu"" required=""#{reportParameterToValueBinding.reportParameter.required}"" >
							<f:selectItem itemValue="""" itemLabel=""- Select One -"" />
							<f:selectItems value=""#{reportParameterToValueBinding.valuesToSelectFromAsMap}"" />
						</h:selectOneMenu>


I found that if I locally change org.apache.myfaces.shared.renderkit.html.HtmlRendererUtils.renderSelectOptions from this:

....
                if (itemStrValue != null) {
                    writer.writeAttribute(HTML.VALUE_ATTR, itemStrValue, null);
                }
...

to this:
...
                if (itemStrValue != null) {
                    writer.writeAttribute(HTML.VALUE_ATTR, itemStrValue, null);
                }
		else {
		    writer.writeAttribute(HTML.VALUE_ATTR, """", null);
		}
...

then the select one component properly behaves with a required value error instead of a conversion error when sumbitting the empty form. Without this change, the component leads to rendering of the option empty as follows:

<option>- Select One-</option>

which seems to cause the browser to send '- Select One-' as the default ""server"" value for the component (vs the empty string).

The code change above to HtmlRendererUtils forces the option to be rendered with an explicit empty ""server"" value if the item value is null:

<option value="""">- Select One -</option>	

which in turn results in the browser sending the empty string instead of '-Select One-' when the form is submitted with the '-Select One-' option selected.",MYFACES-1483
"Provide an alternative NavigationHandler Implementation that checks if an outcome
for which no navigation Case could be identifiied matches a viewId and navigates
to that viewId",MYFACES-1482
"The problem is that ServletFacesContextImpl is not serializable and processAction places one in the session.

Here is a link to a discussion on the JBoss Forum.
http://jboss.org/index.html?module=bb&op=viewtopic&p=3981103#3981103

Here is a link to the workaround I created.
http://taylor.cvs.sourceforge.net/taylor/taylor/commons/src/main/java/net/taylor/portlet/MyFacesGenericPortlet.java?view=markup

",MYFACES-1481
"When I deploy the  example simple folder from myfaces 1.1.1 into the  webapps folder under Tomcat and then run Tomcat 5.5.20, I see the following error:-
Error Screen :-
Oct 26, 2006 12:09:11 PM org.apache.catalina.core.AprLifecycleListener lifecycleEvent
INFO: The Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: C:\Program Files\Java\jre1.5.0_09\bin;.;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\Program Files\Rational\ClearCase\bin;C:\Program Files\Java\jdk1.5.0_09\bin;C:\Program Files\apache-ant-1.6.5\bin;C:\Program Files\Rational\common;\\drcalvin.dr.avaya.com\ccase_c_07\mmcxint\viewtools;
Oct 26, 2006 12:09:12 PM org.apache.coyote.http11.Http11BaseProtocol init
INFO: Initializing Coyote HTTP/1.1 on http-8080
Oct 26, 2006 12:09:12 PM org.apache.catalina.startup.Catalina load
INFO: Initialization processed in 3312 ms
Oct 26, 2006 12:09:12 PM org.apache.catalina.core.StandardService start
INFO: Starting service Catalina
Oct 26, 2006 12:09:12 PM org.apache.catalina.core.StandardEngine start
INFO: Starting Servlet Engine: Apache Tomcat/5.5.20
Oct 26, 2006 12:09:12 PM org.apache.catalina.core.StandardHost start
INFO: XML validation disabled
Oct 26, 2006 12:09:13 PM org.apache.catalina.startup.HostConfig deployWAR
INFO: Deploying web application archive HelloWorldWeb.war
Oct 26, 2006 12:09:13 PM org.apache.catalina.startup.HostConfig deployWAR
INFO: Deploying web application archive struts-blank.war
Oct 26, 2006 12:09:13 PM org.apache.struts.tiles.TilesPlugin initDefinitionsFactory
INFO: Tiles definition factory loaded for module ''.
Oct 26, 2006 12:09:13 PM org.apache.struts.validator.ValidatorPlugIn initResources
INFO: Loading validation rules file from '/WEB-INF/validator-rules.xml'
Oct 26, 2006 12:09:13 PM org.apache.struts.validator.ValidatorPlugIn initResources
INFO: Loading validation rules file from '/WEB-INF/validation.xml'
Oct 26, 2006 12:09:14 PM org.apache.catalina.startup.HostConfig deployWAR
INFO: Deploying web application archive struts-menu.war
Oct 26, 2006 12:09:14 PM org.apache.catalina.startup.HostConfig deployWAR
INFO: Deploying web application archive StrutsTest.war
Oct 26, 2006 12:09:15 PM org.apache.struts.tiles.TilesPlugin initDefinitionsFactory
INFO: Tiles definition factory loaded for module ''.
Oct 26, 2006 12:09:15 PM org.apache.struts.validator.ValidatorPlugIn initResources
INFO: Loading validation rules file from '/WEB-INF/validator-rules.xml'
Oct 26, 2006 12:09:15 PM org.apache.struts.validator.ValidatorPlugIn initResources
INFO: Loading validation rules file from '/WEB-INF/validation.xml'
Oct 26, 2006 12:09:15 PM org.apache.catalina.core.ApplicationContext log
INFO: org.apache.webapp.balancer.BalancerFilter: init(): ruleChain: [org.apache.webapp.balancer.RuleChain: [org.apache.webapp.balancer.rules.URLStringMatchRule: Target string: News / Redirect URL: http://www.cnn.com], [org.apache.webapp.balancer.rules.RequestParameterRule: Target param name: paramName / Target param value: paramValue / Redirect URL: http://www.yahoo.com], [org.apache.webapp.balancer.rules.AcceptEverythingRule: Redirect URL: http://jakarta.apache.org]]
Oct 26, 2006 12:09:16 PM org.apache.catalina.core.ApplicationContext log
INFO: ContextListener: contextInitialized()
Oct 26, 2006 12:09:16 PM org.apache.catalina.core.ApplicationContext log
INFO: SessionListener: contextInitialized()
Oct 26, 2006 12:09:16 PM org.apache.catalina.core.ApplicationContext log
INFO: ContextListener: contextInitialized()
Oct 26, 2006 12:09:16 PM org.apache.catalina.core.ApplicationContext log
INFO: SessionListener: contextInitialized()
Oct 26, 2006 12:09:16 PM org.apache.catalina.core.ApplicationContext log
SEVERE: StandardWrapper.Throwable
java.lang.IllegalStateException: No Factories configured for this Application - typically this is because a context listener is not setup in your web.xml.
A typical config looks like this;
<listener>
  <listener-class>org.apache.myfaces.webapp.StartupServletContextListener</listener-class>
</listener>

	at javax.faces.FactoryFinder.getFactory(FactoryFinder.java:84)
	at javax.faces.webapp.FacesServlet.init(FacesServlet.java:84)
	at org.apache.catalina.core.StandardWrapper.loadServlet(StandardWrapper.java:1105)
	at org.apache.catalina.core.StandardWrapper.load(StandardWrapper.java:932)
	at org.apache.catalina.core.StandardContext.loadOnStartup(StandardContext.java:3951)
	at org.apache.catalina.core.StandardContext.start(StandardContext.java:4225)
	at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:759)
	at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:739)
	at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:524)
	at org.apache.catalina.startup.HostConfig.deployDirectory(HostConfig.java:904)
	at org.apache.catalina.startup.HostConfig.deployDirectories(HostConfig.java:867)
	at org.apache.catalina.startup.HostConfig.deployApps(HostConfig.java:474)
	at org.apache.catalina.startup.HostConfig.start(HostConfig.java:1122)
	at org.apache.catalina.startup.HostConfig.lifecycleEvent(HostConfig.java:310)
	at org.apache.catalina.util.LifecycleSupport.fireLifecycleEvent(LifecycleSupport.java:119)
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1021)
	at org.apache.catalina.core.StandardHost.start(StandardHost.java:718)
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1013)
	at org.apache.catalina.core.StandardEngine.start(StandardEngine.java:442)
	at org.apache.catalina.core.StandardService.start(StandardService.java:450)
	at org.apache.catalina.core.StandardServer.start(StandardServer.java:709)
	at org.apache.catalina.startup.Catalina.start(Catalina.java:551)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:294)
	at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:432)
Oct 26, 2006 12:09:16 PM org.apache.catalina.core.StandardContext loadOnStartup
SEVERE: Servlet /simple threw load() exception
java.lang.IllegalStateException: No Factories configured for this Application - typically this is because a context listener is not setup in your web.xml.
A typical config looks like this;
<listener>
  <listener-class>org.apache.myfaces.webapp.StartupServletContextListener</listener-class>
</listener>

	at javax.faces.FactoryFinder.getFactory(FactoryFinder.java:84)
	at javax.faces.webapp.FacesServlet.init(FacesServlet.java:84)
	at org.apache.catalina.core.StandardWrapper.loadServlet(StandardWrapper.java:1105)
	at org.apache.catalina.core.StandardWrapper.load(StandardWrapper.java:932)
	at org.apache.catalina.core.StandardContext.loadOnStartup(StandardContext.java:3951)
	at org.apache.catalina.core.StandardContext.start(StandardContext.java:4225)
	at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:759)
	at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:739)
	at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:524)
	at org.apache.catalina.startup.HostConfig.deployDirectory(HostConfig.java:904)
	at org.apache.catalina.startup.HostConfig.deployDirectories(HostConfig.java:867)
	at org.apache.catalina.startup.HostConfig.deployApps(HostConfig.java:474)
	at org.apache.catalina.startup.HostConfig.start(HostConfig.java:1122)
	at org.apache.catalina.startup.HostConfig.lifecycleEvent(HostConfig.java:310)
	at org.apache.catalina.util.LifecycleSupport.fireLifecycleEvent(LifecycleSupport.java:119)
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1021)
	at org.apache.catalina.core.StandardHost.start(StandardHost.java:718)
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1013)
	at org.apache.catalina.core.StandardEngine.start(StandardEngine.java:442)
	at org.apache.catalina.core.StandardService.start(StandardService.java:450)
	at org.apache.catalina.core.StandardServer.start(StandardServer.java:709)
	at org.apache.catalina.startup.Catalina.start(Catalina.java:551)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:294)
	at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:432)
Oct 26, 2006 12:09:16 PM org.apache.coyote.http11.Http11BaseProtocol start
INFO: Starting Coyote HTTP/1.1 on http-8080
Oct 26, 2006 12:09:17 PM org.apache.jk.common.ChannelSocket init
INFO: JK: ajp13 listening on /0.0.0.0:8009
Oct 26, 2006 12:09:17 PM org.apache.jk.server.JkMain start
INFO: Jk running ID=0 time=0/31  config=null
Oct 26, 2006 12:09:17 PM org.apache.catalina.storeconfig.StoreLoader load
INFO: Find registry server-registry.xml at classpath resource
Oct 26, 2006 12:09:17 PM org.apache.catalina.startup.Catalina start
INFO: Server startup in 5188 ms
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------",MYFACES-1480
"There is code in StartupServletContextListener that initializes the SerialFactory.  Since portlets don't use the StartupServletContextListener, this never gets initialized and results in a NullPointerException.

See:
http://www.jboss.com/index.html?module=bb&op=viewtopic&t=93223
http://wiki.apache.org/myfaces/PortletSerialFactoryWorkaround

The handleSerialFactory() method should be in the FacesConfigurator instead of StartupServletContextListener.  You can get the init params via ExternalContext.getInitParameter() instead of ServletContext.getInitParameter().",MYFACES-1479
,MYFACES-1478
"When an input has an ""enabledOnUserRole"" tag, and its content (roles) causes that the input should be disabled, it is disabled but only in a browser. I'm afraid it is not enough. In fact, it breaks submitting such form, and an action cannot be processed. Following log lines come out:

""There should always be a submitted value for an input if it is rendered, its form is submitted, and it is not disabled or read-only [...]""

But it is diabled in a browser, isn't it? (.. disabled=""diabled"" .. in a source)



",MYFACES-1477
"Hello

Suppose we have: <h:inputTextarea value=""x[TAB]abc[TAB]test[TAB][TAB]more test"" />, where [TAB] is a tab character (\t)

This component is rendered as TEXTAREA and its value contains multiple spaces in place of tabs. The same misbehaviour is when binding value to acking bean property.

AFAIK this was working correctly in previous releases.

Thanks in advance for fixing :-)
",MYFACES-1476
,MYFACES-1475
Fix EL-evaluation in  ActionListenerTag,MYFACES-1474
,MYFACES-1473
"I would like to use the new 1.6 facilities of ResourceBundle.Control to get a ResourceBundle with translation that picks up changes in the underlying property files on the fly.

The code in LoadBundleTag.java (1.1.4) doing this is:

        final ResourceBundle bundle;
        try
        {
            bundle = ResourceBundle.getBundle(basename,
                                              locale,
                                              Thread.currentThread().getContextClassLoader());
        }
        catch (MissingResourceException e)
        {
            log.error(""Resource bundle '"" + basename + ""' could not be found."");
            return Tag.SKIP_BODY;
        }

which does not allow for any customization.  If the ""ResourceBundle.getBundle(....)"" could be done in an overridable way in a factory where I can provide my own 1.6 code, it would probably solve this while keeping this code 1.2 compatible.

",MYFACES-1472
"When one  drags and drops an ADF TABLE component on a PDA visial editor, it throws a class cast exception. (BUG- 5610691).  With the following stacktrace :

 java.lang.ClassCastException: oracle.adf.view.rich.component.rich.data.RichColu
mn
at org.apache.myfaces.trinidadinternal.renderkit.core.pda.PdaTableRenderer._re
nderColumnHeader(PdaTableRenderer.java:437)
at org.apache.myfaces.trinidadinternal.renderkit.core.pda.PdaTableRenderer.ren
derTableContent(PdaTableRenderer.java:186)
at org.apache.myfaces.trinidadinternal.renderkit.core.xhtml.TableRenderer.enco
deAll(TableRenderer.java:277)
at org.apache.myfaces.trinidad.render.CoreRenderer.encodeEnd(CoreRenderer.java
:181)
@ at org.apache.myfaces.trinidad.component.UIXComponentBase.encodeEnd(UIXCompone
ntBase.java:673)
@ at org.apache.myfaces.trinidad.component.UIXCollection.encodeEnd(UIXCollection
.java:483)
at org.apache.myfaces.trinidad.render.CoreRenderer.encodeChild(CoreRenderer.ja
va:260)
at org.apache.myfaces.trinidadinternal.renderkit.core.xhtml.PanelGroupLayoutRe
nderer.encodeChild(PanelGroupLayoutRenderer.java:174)
at org.apache.myfaces.trinidadinternal.renderkit.core.xhtml.PanelGroupLayoutRe
nderer._encodeChildren(PanelGroupLayoutRenderer.java:140)
at org.apache.myfaces.trinidadinternal.renderkit.core.xhtml.PanelGroupLayoutRe
nderer.encodeAll(PanelGroupLayoutRenderer.java:92)
at org.apache.myfaces.trinidad.render.CoreRenderer.encodeEnd(CoreRenderer.java
:181)
@ at org.apache.myfaces.trinidad.component.UIXComponentBase.encodeEnd(UIXCompone
ntBase.java:673)
at org.apache.myfaces.trinidad.render.RenderUtils.encodeRecursive(RenderUtils.
java:66)
at org.apache.myfaces.trinidad.render.CoreRenderer.encodeChild(CoreRenderer.ja
va:255)
at org.apache.myfaces.trinidad.render.CoreRenderer.encodeAllChildren(CoreRende
rer.java:277)
at org.apache.myfaces.trinidadinternal.renderkit.core.xhtml.PanelPartialRootRe
nderer.renderContent(PanelPartialRootRenderer.java:70)
at org.apache.myfaces.trinidadinternal.renderkit.core.xhtml.BodyRenderer.rende
rContent(BodyRenderer.java:134)
at org.apache.myfaces.trinidadinternal.renderkit.core.xhtml.PanelPartialRootRe
nderer.encodeAll(PanelPartialRootRenderer.java:150)
at org.apache.myfaces.trinidadinternal.renderkit.core.xhtml.BodyRenderer.encod
eAll(BodyRenderer.java:76)
at org.apache.myfaces.trinidad.render.CoreRenderer.delegateRenderer(CoreRender
er.java:294)
at org.apache.myfaces.trinidadinternal.renderkit.core.xhtml.DocumentRenderer.e
ncodeAll(DocumentRenderer.java:78)
at org.apache.myfaces.trinidad.render.CoreRenderer.encodeEnd(CoreRenderer.java
:181)
@ at org.apache.myfaces.trinidad.component.UIXComponentBase.encodeEnd(UIXCompone
ntBase.java:673)
at javax.faces.webapp.UIComponentTag.encodeEnd(UIComponentTag.java:623)
at javax.faces.webapp.UIComponentTag.doEndTag(UIComponentTag.java:546)
at org.apache.myfaces.trinidad.webapp.UIXComponentTag.doEndTag(UIXComponentTag
.java:114)
at oracle.jdevimpl.webapp.design.renderer.DesignTimeJspActionRenderer.doEndTag
(DesignTimeJspActionRenderer.java:728)
at oracle.jdevimpl.webapp.design.renderer.DesignTimeJspActionRenderer._execute
Tag(DesignTimeJspActionRenderer.java:1924)
at oracle.jdevimpl.webapp.design.renderer.DesignTimeJspActionRenderer.render(D
esignTimeJspActionRenderer.java:331)
at oracle.jdevimpl.webapp.design.renderer.FacesActionRenderer.render(FacesActi
onRenderer.java:167)
at oracle.jdevimpl.webapp.design.DesignTimeRenderer.renderChildren(DesignTimeR
enderer.java:868)
at oracle.jdevimpl.webapp.design.renderer.DesignTimeJspActionRenderer.renderCh
ildren(DesignTimeJspActionRenderer.java:551)
at oracle.jdevimpl.webapp.design.renderer.FacesActionRenderer.renderChildren(F
acesActionRenderer.java:591)
at oracle.jdevimpl.webapp.design.renderer.DesignTimeJspActionRenderer._execute
Tag(DesignTimeJspActionRenderer.java:1893)
at oracle.jdevimpl.webapp.design.renderer.DesignTimeJspActionRenderer.render(D
esignTimeJspActionRenderer.java:331)
at oracle.jdevimpl.webapp.design.renderer.FacesActionRenderer.render(FacesActi
onRenderer.java:167)
at oracle.jdevimpl.webapp.design.DesignTimeRenderer.renderChildren(DesignTimeR
enderer.java:868)
at oracle.jdevimpl.webapp.jsp.renderers.JSPCoreSyntaxRenderer.render(JSPCoreSy
ntaxRenderer.java:150)
at oracle.jdevimpl.webapp.design.support.jsp.DesignTimeJspServlet._renderSourc
e(DesignTimeJspServlet.java:249)
at oracle.jdevimpl.webapp.design.support.jsp.DesignTimeJspServlet.serviceJsp(D
esignTimeJspServlet.java:132)
at oracle.jdevimpl.webapp.design.support.jsp.DesignTimeJspServlet.service(Desi
gnTimeJspServlet.java:88)
at javax.servlet.http.HttpServlet.service(HttpServlet.java:820)
at oracle.jdevimpl.webapp.design.support.http.DesignTimeServletInfo.service(De
signTimeServletInfo.java:267)
at oracle.jdevimpl.webapp.design.support.http.DesignTimeRequestDispatcher.disp
atch(DesignTimeRequestDispatcher.java:312)
at oracle.jdevimpl.webapp.design.support.http.DesignTimeRequestDispatcher.forw
ard(DesignTimeRequestDispatcher.java:84)
at com.sun.faces.context.ExternalContextImpl.dispatch(ExternalContextImpl.java
:322)
at org.apache.myfaces.trinidadinternal.context.ExternalContextDecorator.dispat
ch(ExternalContextDecorator.java:41)
at org.apache.myfaces.trinidadinternal.context.FacesContextFactoryImpl$Overrid
eDispatch.dispatch(FacesContextFactoryImpl.java:235)
at com.sun.faces.application.ViewHandlerImpl.renderView(ViewHandlerImpl.java:1
30)
at oracle.adfinternal.view.faces.application.ViewHandlerImpl.renderView(ViewHa
ndlerImpl.java:157)
at org.apache.myfaces.trinidadinternal.application.ViewHandlerImpl.renderView(
ViewHandlerImpl.java:178)
at com.sun.faces.lifecycle.RenderResponsePhase.execute(RenderResponsePhase.jav
a:87)
at com.sun.faces.lifecycle.LifecycleImpl.phase(LifecycleImpl.java:200)
at com.sun.faces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:117)
at javax.faces.webapp.FacesServlet.service(FacesServlet.java:198)
at oracle.jdevimpl.webapp.design.support.http.DesignTimeServletInfo.service(De
signTimeServletInfo.java:267)
at oracle.jdevimpl.webapp.design.support.http.DesignTimeRequestDispatcher$Desi
gnTimeFilterChain.doFilter(DesignTimeRequestDispatcher.java:503)
at oracle.adfinternal.view.faces.webapp.rich.RegistrationFilter.doFilter(Regis
trationFilter.java:60)
at org.apache.myfaces.trinidadinternal.webapp.TrinidadFilterImpl$FilterListCha
in.doFilter(TrinidadFilterImpl.java:425)
at oracle.adfinternal.view.faces.activedata.ADSFilter2.doFilter(ADSFilter2.jav
a:193)
at org.apache.myfaces.trinidadinternal.webapp.TrinidadFilterImpl$FilterListCha
in.doFilter(TrinidadFilterImpl.java:425)
at org.apache.myfaces.trinidadinternal.webapp.TrinidadFilterImpl._invokeDoFilt
er(TrinidadFilterImpl.java:327)
at org.apache.myfaces.trinidadinternal.webapp.TrinidadFilterImpl._doFilterImpl
(TrinidadFilterImpl.java:291)
at org.apache.myfaces.trinidadinternal.webapp.TrinidadFilterImpl.doFilter(Trin
idadFilterImpl.java:214)
at org.apache.myfaces.trinidad.webapp.TrinidadFilter.doFilter(TrinidadFilter.j
ava:90)
at oracle.jdevimpl.webapp.design.support.http.DesignTimeRequestDispatcher$Desi
gnTimeFilterChain.doFilter(DesignTimeRequestDispatcher.java:463)
at oracle.jdevimpl.webapp.design.support.http.DesignTimeRequestDispatcher.disp
atch(DesignTimeRequestDispatcher.java:308)
at oracle.jdevimpl.webapp.design.support.http.DesignTimeServletContainerContex
t._service(DesignTimeServletContainerContext.java:740)
at oracle.jdevimpl.webapp.design.support.http.DesignTimeServletContainerContex
t._serviceRequest(DesignTimeServletContainerContext.java:677)
at oracle.jdevimpl.webapp.design.support.http.DesignTimeServletContainerContex
t.service(DesignTimeServletContainerContext.java:639)
at oracle.jdevimpl.webapp.design.DesignTimeRenderWebApp.service(DesignTimeRend
erWebApp.java:62)
at oracle.jdevimpl.webapp.design.DesignTimeEngine.service(DesignTimeEngine.jav
a:197)
at oracle.jdevimpl.webapp.design.view.DomDesignTimeViewDocument._serviceJsp(Do
mDesignTimeViewDocument.java:988)
at oracle.jdevimpl.webapp.design.view.DomDesignTimeViewDocument.rebuildTreeImp
l(DomDesignTimeViewDocument.java:178)
at oracle.jdevimpl.webapp.design.view.DomDesignTimeViewDocument.rebuildImpl(Do
mDesignTimeViewDocument.java:99)
at oracle.jdevimpl.webapp.model.content.dom.view.proxy.DomProxyViewDocument.re
build(DomProxyViewDocument.java:121)
at oracle.jdevimpl.webapp.model.content.dom.view.proxy.DomProxyViewDocument.ha
ndleModelStructureChanged(DomProxyViewDocument.java:710)
at oracle.jdevimpl.webapp.model.content.dom.view.proxy.DomProxyViewDocument.ha
ndleModelTreeChanged(DomProxyViewDocument.java:675)
at oracle.jdevimpl.webapp.model.content.dom.view.proxy.DomProxyViewDocument.ha
ndleModelChanged(DomProxyViewDocument.java:662)
at oracle.jdevimpl.webapp.model.content.dom.view.proxy.DomProxyViewDocument$Xm
lModelListenerImpl.modelChanged(DomProxyViewDocument.java:1277)
at oracle.bali.xml.model.XmlView._handleBaseModelChanged(XmlView.java:1939)
at oracle.bali.xml.model.XmlView.mav$_handleBaseModelChanged(XmlView.java:112)
at oracle.bali.xml.model.XmlView$ModelChangeListener.modelChanged(XmlView.java
:2024)
at oracle.bali.xml.model.XmlModel._deliverModelChangeEvents(XmlModel.java:3128
)
at oracle.bali.xml.model.XmlModel._deliverChangeEvents(XmlModel.java:3316)
at oracle.bali.xml.model.XmlModel.__commitTransaction(XmlModel.java:2817)
at oracle.bali.xml.model.XmlContext.__commitTransaction(XmlContext.java:1732)
at oracle.bali.xml.model.XmlModel.__requestCommitTransaction(XmlModel.java:276
8)
@ at oracle.bali.xml.model.XmlView.commitTransaction(XmlView.java:302)
at oracle.bali.xml.model.task.StandardTransactionTask.__commitWrapperTransacti
on(StandardTransactionTask.java:413)
at oracle.bali.xml.model.task.StandardTransactionTask.runThrowingXCE(StandardT
ransactionTask.java:203)
at oracle.bali.xml.model.datatransfer.operation.CreateFromXmlKeyOperation.appl
y(CreateFromXmlKeyOperation.java:38)
at oracle.bali.xml.model.datatransfer.operation.OperationProcessor._apply(Oper
ationProcessor.java:393)
at oracle.bali.xml.model.datatransfer.operation.OperationProcessor._forceSimpl
eApplyImpl(OperationProcessor.java:346)
at oracle.bali.xml.model.datatransfer.operation.OperationProcessor.forceSimple
Apply(OperationProcessor.java:293)
at oracle.bali.xml.model.datatransfer.operation.OperationProcessor.forceSimple
Apply(OperationProcessor.java:243)
at oracle.bali.xml.gui.swing.dnd.DropHandlerHelper._doRegularDrop(DropHandlerH
elper.java:268)
at oracle.bali.xml.gui.swing.dnd.DropHandlerHelper.performDrop(DropHandlerHelp
er.java:87)
at oracle.bali.xml.gui.swing.dnd.ModelDropHandler.drop(ModelDropHandler.java:1
54)
at java.awt.dnd.DropTarget.drop(DropTarget.java:430)
at sun.awt.dnd.SunDropTargetContextPeer.processDropMessage(SunDropTargetContex
tPeer.java:500)
at sun.awt.dnd.SunDropTargetContextPeer.access$800(SunDropTargetContextPeer.ja
va:53)
at sun.awt.dnd.SunDropTargetContextPeer$EventDispatcher.dispatchDropEvent(SunD
ropTargetContextPeer.java:812)
at sun.awt.dnd.SunDropTargetContextPeer$EventDispatcher.dispatchEvent(SunDropT
argetContextPeer.java:736)
at sun.awt.dnd.SunDropTargetEvent.dispatch(SunDropTargetEvent.java:29)
@ at java.awt.Component.dispatchEventImpl(Component.java:3826)
at java.awt.Container.dispatchEventImpl(Container.java:2024)
@ at java.awt.Component.dispatchEvent(Component.java:3803)
at java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4212)
at java.awt.LightweightDispatcher.processDropTargetEvent(Container.java:3963)
at java.awt.LightweightDispatcher.dispatchEvent(Container.java:3817)
at java.awt.Container.dispatchEventImpl(Container.java:2010)
at java.awt.Window.dispatchEventImpl(Window.java:1774)
@ at java.awt.Component.dispatchEvent(Component.java:3803)
at java.awt.EventQueue.dispatchEvent(EventQueue.java:463)
at java.awt.EventDispatchThread.pumpOneEventForHierarchy(EventDispatchThread.j
ava:242)
at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.jav
a:163)
at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:157)
at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:149)
at java.awt.EventDispatchThread.run(EventDispatchThread.java:110)
",MYFACES-1471
"Hidden fields in a form created by the HtmlResponseStateManager is given an id which is not prefixed with the id of the form. When using more than form on a page the id is no longer unique within the page. This can be easily resolved by not giving the hidden fields any id. It is the name attribute that causes the browser to submit the field, not the id attribute.",MYFACES-1470
"Other field-names are not used anymore.

regards,

Martin",MYFACES-1469
"I'm tuning the building of myfaces package on Gentoo Linux

Archive ""myfaces-core-1.1.4-src"" is missing some files that are present in the bin distribution.

In archive ""myfaces-core-1.1.4-bin"", the jar ""myfaces-impl-1.1.4.jar"" contains the following files

/META-INF/myfaces_core.tld
/META-INF/myfaces_html.tld
/javax/faces/Messages*.properties
/licenses/sundtd-LICENSE.txt
/org/apache/myfaces/resource/standard-faces-config.xml
/org/apache/myfaces/resource/web-facesconfig_1_0.dtd
/org/apache/myfaces/resource/web-facesconfig_1_1.dtd

These files are missing in the src, so currently the user have to download both src and bin in order to build and package it correctly

Please, include these files even in the src distribution.

Thank you",MYFACES-1468
"A component with a required value will not fail validation as expected if the submitted value is null. This issue is not seen normally because browsers send the value for an empty text field as an empty string. That is, the POST data for an empty field1 will contain the field name but no value, like field1=&field2=something. However, if you use a man-in-the-middle proxy such as Paros to remove ""fieldname="" from the POST data, the submitted value will be null. UIInput.validate() skips validation for null submitted values, but since requiredness is also part of validation, the requiredness check gets skipped, too.",MYFACES-1467
It should contain the common code for all Validate(...)Tags,MYFACES-1466
,MYFACES-1465
,MYFACES-1464
,MYFACES-1463
,MYFACES-1462
,MYFACES-1461
,MYFACES-1460
,MYFACES-1459
,MYFACES-1458
,MYFACES-1457
,MYFACES-1456
,MYFACES-1455
,MYFACES-1454
,MYFACES-1453
"I use following code in JSF:

<h:selectBooleanCheckbox value=""#{conf.zero}"" converter=""NumberBooleanConverter"" />

conf.zero returns an Integer ( 0 or 1). Converter returns ""true"" or ""false"" (String), but getAsString isn`t called. Instead the exception is thrown (see below). Same effect with extension (x:selectBooleanCheckbox). For inputText (<h:inputText value=""#{conf.one}"" converter=""NumberBooleanConverter"" />) it works. Is it a similar reason as in Bug ADFFACES-38? Or am I on the wrong track?

Thrown exception:
javax.faces.FacesException: Expected submitted value of type Boolean for Component : {Component-Path : [Class: javax.faces.component.UIViewRoot,ViewId: /jsp/common/rechte/matrix_behoerde.jsp][Class: javax.faces.component.html.HtmlForm,Id: behoerde_matrix][Class: javax.faces.component.html.HtmlPanelGroup,Id: _id0][Class: org.apache.myfaces.component.html.ext.HtmlDataTable,Id: matrix][Class: javax.faces.component.UIColumn,Id: _id33][Class: org.apache.myfaces.component.html.ext.HtmlSelectBooleanCheckbox,Id: _id35]}
	org.apache.myfaces.context.servlet.ServletExternalContextImpl.dispatch(ServletExternalContextImpl.java:421)
	org.apache.myfaces.application.jsp.JspViewHandlerImpl.renderView(JspViewHandlerImpl.java:234)
	org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:352)
	javax.faces.webapp.FacesServlet.service(FacesServlet.java:107)
	org.apache.myfaces.component.html.util.ExtensionsFilter.doFilter(ExtensionsFilter.java:92)
	org.apache.myfaces.component.html.util.ExtensionsFilter.doFilter(ExtensionsFilter.java:122)
	de.filter.AccessFilter.doFilter(AccessFilter.java:93)

",MYFACES-1452
"The method getStyles(UIData) in the type org.apache.myfaces.shared_impl.renderkit.html.HtmlTableRendererBase is declared as static, but (IMHO) has no reason to be static, especially considering that it is also declared protected.

I am maintaining a subclass that allows me to specify styles for rows and columns based on a condition that is evaluated for that row or column. The getStyles method is the perfect place to hook into, unfortunately 'static' prevents me from doing this.",MYFACES-1451
"If I have a JSF portlet, and it is given the chance to initialize the session, after redeploying the application I get an NPE:

Caused by: java.lang.NullPointerException
        at org.apache.myfaces.portlet.MyFacesGenericPortlet.facesRender(MyFacesGenericPortlet.java:393)
        at org.apache.myfaces.portlet.MyFacesGenericPortlet.doView(MyFacesGenericPortlet.java:266)

I have worked around the problem by creating my own portlet and overriding one function:
(the cause of the NPE is request.getPortletSession().getAttribute(CURRENT_FACES_CONTEXT) being null after redeployment)

protected void facesRender(RenderRequest request, RenderResponse response)
            throws PortletException, java.io.IOException {
        if (sessionTimedOut(request) || request.getPortletSession().
                getAttribute(CURRENT_FACES_CONTEXT) == null) {
            setPortletRequestFlag(request);
            nonFacesRequest(request,  response);
            return;
        }

        super.facesRender(request, response);
    }",MYFACES-1450
JSR spec 10.3.2. javax.webapp.ConverterTag replaced by ConverterELTag. ConverterTag is now part of the implementation,MYFACES-1449
"The MyFaces Generic Portlet Bridge should be enhanced to allow special code to be executed during Portlet Initialization and Destruction, as well as before and after the lifecycle is run.  Phase listeners do not always work for this because there is no guarantee that all phases will be executed for cleanup.  This would allow a renderkit to provide SOME of the functionality which is commonly used in filters with the exception of Request/Response wrapping.

Specification of these special ""filters"" would be defined in the portlet.xml and would be executed in the order that they are specified in that file.",MYFACES-1448
"I'm trying a JSF code similar to:

<li>Number:<h:inputText value=""#{contract.pk.number}"" required=""true"" id=""pk_number"" /></li>
<li>Alias:<h:inputText value=""#{contract.pk.alias}"" required=""true"" id=""pk_alias"" /></li>

The contract bean looks like:

public class Contract implements Serializable {
    @EmbeddedId
    private Contract.PK pk;
    ...
    @Embeddable
    public static class PK implements Serializable {
        private String number;
        private String alias;
        ...
        public String getNumber() { return this.number; }
        public void setNumber(String sNumber) {...}
        public String getAlias() { return this.alias; }
        public void setAlias(String sAlias) {...}
    }
}        


 Whatever I input into my form a ""conversion error"" is returned since getPk() returns null.

 To solve the problem I have to explicetely initialize the pk member:

public class Contract implements Serializable {
    @EmbeddedId
    private Contract.PK pk = new Contract.PK();
    ...
}        

 

More info:
http://forum.java.sun.com/thread.jspa?threadID=774503&tstart=30",MYFACES-1447
"Compiling the current svn trunk for myfaces does not work anymore:

I issued this in an empty directory:

svn co https://svn.apache.org/repos/asf/myfaces/current myfaces-current 
cd myfaces-current
mvn install


I get this error from maven:

[ERROR] BUILD ERROR
[INFO] ------------------------------------------------------------------------
[INFO] Failed to configure plugin parameters for: org.apache.maven.plugins:maven-jar-plugin:2.0
[INFO] ------------------------------------------------------------------------
[INFO] Trace
org.apache.maven.lifecycle.LifecycleExecutionException: Error configuring: org.apache.maven.plugins:maven-jar-plugin. Reason: Unable to parse the created DOM for plugin configuration
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:563)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLifecycle(DefaultLifecycleExecutor.java:475)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:454)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:306)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:273)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:140)
        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:322)
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:115)
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:256)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:324)
        at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
        at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
        at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
        at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
Caused by: org.apache.maven.plugin.PluginConfigurationException: Error configuring: org.apache.maven.plugins:maven-jar-plugin. Reason: Unable to parse the created DOM for plugin configuration
        at org.apache.maven.plugin.DefaultPluginManager.populatePluginFields(DefaultPluginManager.java:1036)
        at org.apache.maven.plugin.DefaultPluginManager.getConfiguredMojo(DefaultPluginManager.java:576)
        at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:390)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:534)
        ... 16 more
Caused by: org.codehaus.plexus.component.configurator.ComponentConfigurationException: Cannot find setter nor field in org.apache.maven.archiver.ManifestConfiguration for 'addDefaultImplementationEntries'
        at org.codehaus.plexus.component.configurator.converters.ComponentValueSetter.<init>(ComponentValueSetter.java:68)
        at org.codehaus.plexus.component.configurator.converters.composite.ObjectWithFieldsConverter.processConfiguration(ObjectWithFieldsConverter.java:134)
        at org.codehaus.plexus.component.configurator.converters.composite.ObjectWithFieldsConverter.fromConfiguration(ObjectWithFieldsConverter.java:90)
        at org.codehaus.plexus.component.configurator.converters.ComponentValueSetter.configure(ComponentValueSetter.java:207)
        at org.codehaus.plexus.component.configurator.converters.composite.ObjectWithFieldsConverter.processConfiguration(ObjectWithFieldsConverter.java:137)
        at org.codehaus.plexus.component.configurator.converters.composite.ObjectWithFieldsConverter.fromConfiguration(ObjectWithFieldsConverter.java:90)
        at org.codehaus.plexus.component.configurator.converters.ComponentValueSetter.configure(ComponentValueSetter.java:247)
        at org.codehaus.plexus.component.configurator.converters.composite.ObjectWithFieldsConverter.processConfiguration(ObjectWithFieldsConverter.java:137)
        at org.codehaus.plexus.component.configurator.BasicComponentConfigurator.configureComponent(BasicComponentConfigurator.java:56)
        at org.apache.maven.plugin.DefaultPluginManager.populatePluginFields(DefaultPluginManager.java:1030)
        ... 19 more
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 14 seconds
[INFO] Finished at: Mon Oct 09 14:25:32 CEST 2006
[INFO] Final Memory: 11M/21M
[INFO] ------------------------------------------------------------------------



Cause: Cannot find setter nor field in org.apache.maven.archiver.ManifestConfiguration for 'addDefaultImplementationEntries'

",MYFACES-1446
"A new class for JSR-252 must be implemented, the UIComponentClassicTagBase, which is the superclass of all JSP tags

http://java.sun.com/javaee/javaserverfaces/1.2/docs/api/index.html",MYFACES-1445
Attributes of HTML Basic tags have to be of type ValueExpression. Maybe for that task we could generate the code?,MYFACES-1444
"All JSR-252 changes in UIComponentTagUtils will be reverted and this class is going to be deprecated. The behaviour will be replaced by the new class UIComponentELTagUtils, which is consistent with other changes",MYFACES-1443
"Following the spec, section 10.3:

Faces depends on version JSP 2.1 or later, and the JSP tags in Faces expose properties that
leverage concepts specific to that release of JSP. Importantly, most Faces JSP tag attributes
are either of type javax.el.ValueExpression or javax.el.MethodExpression.
For backwards compatability with existing Faces component libraries that expose themselves
as JSP tags, the existing classes relating to JSP have been deprecated and new ones
introduced that leverage the EL API.

10.3.1 AttributeTag
The faces implementation must now provide this class.

10.3.2 ConverterTag
This has been replaced with ConverterELTag

10.3.3 UIComponentBodyTag
All component tags now implement BodyTag by virtue of the new class
UIComponentClassicTagBase implementing BodyTag. This class has been replaced
by UIComponentELTag.

10.3.4 UIComponentTag
This component has been replaced by UIComponentELTag.

10.3.5 ValidatorTag
This component has been replaced by ValidatorELTag.",MYFACES-1442
"Implement method: ApplicationImpl.getResourceBundle(FacesContext ,String)",MYFACES-1441
"Implementation not finished for method ApplicationImpl.createComponent(ValueExpression,FacesContext, String)",MYFACES-1440
"Some methods are still to be implemented in the ApplicationImpl class, for JSF 1.2",MYFACES-1439
"There is a jsp (wizard.jsp) creating two components with a binding to properties within a managed bean (DummyWizardBean)

The Jsp:
	<h:outputText id=""wizardText"" binding=""#{dummyWizard.caption}""/>
	<h:panelGrid id=""wizard"" binding=""#{dummyWizard.inputFieldContainer}""/>

The Bean:
	public HtmlPanelGrid getInputFieldContainer() {
		return inputFieldContainer;
	}

	public HtmlOutputText getCaption() {
		return caption;
	}



If the buttons next or pev are pressed a method on the bean is invoked which is switching the references ""dummyWizard.caption"" and ""dummyWizard.inputFieldContainer"". If the use presses next the switch from page1 to page 2 is successful. If the user switches back to page1 the outputText and the panelGrid are not show again.

These are the methods:

	public String back() {
		inputFieldContainer = inputFieldContainers[0];
		caption = captions[0];
		backButtonDisabled = true;
		nextButtonDisabled = false;
		return ""wizard"";
	}

	public String next() {
		inputFieldContainer = inputFieldContainers[1];
		caption = captions[1];
		backButtonDisabled = false;
		nextButtonDisabled = true;
		return ""wizard"";
	}

The sample is working with myfaces 1.1.3. Tomahawk was 1.1.3 (but is think that should not matter)

The attached sample contains a complete webapplication (as eclipse webproject) to reproduce the bug.
The second attachment contains the webapplication as war-file for easier ""demoing"".",MYFACES-1438
,MYFACES-1437
,MYFACES-1436
All the attributes are ValueExpression now,MYFACES-1435
"Attributes in tags are of type javax.el.ValueExpression. In the tld, following the jsp 2.1 spec we have to put the deferred-type element, with the type of the attribute.
This is a major change in the codebase. Now methods such as UIComponentTagUtils.setIntegerProperty, UIComponentTagUtils.setStringProperty, etc, will be deprecated in favor of a unique UIComponentTagUtils.setProperty (accepting a ValueExpression instead of a String). This methods are called in the setProperties() methods of the tags",MYFACES-1434
"[A similar issue was already open under MYFACES-218.]

We use Ajax4JSF which sends Javascript code embedded in Ajax responses to the server. This Javascript code is used to update client-side state of input components and select components (comboboxes). In the case of comboboxes, the response also contains literal String arrays. 

We use ISO-8859-1 as the output character set, not UTF-8.

The effect that we notice is the same as stated in MYFACES-218, namely that the Javascript strings are rendered with all non-latin-1 characters replaced by numeric character references. As the Javascript strings are used to update input fields or re-render select options, e.g., a combobox would then contain entries where non-latin-1 characters show up with the character references visible instead of the intended characters.

In this environment it is no longer easy to go over all the returned strings and use some client-side replacement function, because the client-side code is part of the Ajax4JSF project. Also, implementing some un-escaping functionality on the client side makes the client dependent on particulars of the server-side JSF implementation.

Also, in my humble opinion, having the character references in Javascript strings is plain wrong, however, this is from my experience and not from looking through standard documents. But the net effect is that the strings are not rendered correctly (as intended) by the browser.

Regards,
Claus",MYFACES-1433
"In http://myfaces.apache.org/impl/tagreference.html there are a lot of escaped 'p' tags (i.e.: the generated html has ""&lt;p&gt;"" where I think it should have '<p>').
Couldn't find in svn where this file is generated to check if it's already fixed there.",MYFACES-1432
"This problem does occur after updating to myFacesCore 1.1.4.
I does not occur with myFacesCore 1.1.3!!!  
(Therefore I entered this bug for myFacesCore 1.1.4 and not for tomahawk 1.1.3)

I have two subforms inside a form. Each subform contains command buttons. 
I receive JavaScript errors if I click the command buttons:
 
Generated HTML for the button with core 1.1.4:
<input id=""docform:singleFormId:_idJsp210"" name=""docform:singleFormId:_idJsp210"" type=""submit"" value=""Accept"" onclick=""clear_docform_3AsingleFormId();"" style=""z-index:1"" class=""button_img_60"" accesskey=""a"" />
JS Error: clear_docform_3AsingleFormId not defined

Generated HTML for the button with core 1.1.3:
<input id=""docform:singleFormId:_idJsp210"" name=""docform:singleFormId:_idJsp210"" type=""submit"" value=""Accept"" onclick=""clear_docform();"" style=""z-index:1"" class=""button_img_60"" accesskey=""a"" />
 
JSP source:
<x:subForm id=""singleFormId"">
...
<h:commandButton actionListener=""#{MyController.accept}"" value=""accept""
styleClass=""button_img_60"" style=""z-index:1"" accesskey=""a""/>
...",MYFACES-1431
"After updating myFacesCore to 1.1.4 a selectOneMenu with a binding is not working anymore. 
The used version of tomahawk is 1.1.3.

The entries of the select one menu are cleared after clicking an immediate link.
The BackingBean BBController has session scope.
When I go back to myFacesCore 1.1.3 everything works fine!!!
I attached a small demo webApp that everybody can reconstruct this behaviour.
 
JSP snippet:
<f:view>
<h:form id=""myform"">
	<h:panelGroup>
		<h:outputText value=""MyDropdown"" style=""padding-right:10px;""/>
		<h:selectOneMenu id=""lastSearch"" binding=""#{BBController.savedSearchesMenu}""/>
	</h:panelGroup>

   <h:outputText value=""<br/><br/>"" escape=""false""/>
   <h:commandLink actionListener=""#{BBController.doImmediate}"" value=""doImmediate"" immediate=""true""></h:commandLink>
   <h:outputText value=""<br/><br/>"" escape=""false""/>
   <h:commandLink actionListener=""#{BBController.doNormal}"" value=""doNormal""></h:commandLink>
</h:form>
</f:view>

BBController snippet:
public class BackingBean implements Serializable {
	private static final long serialVersionUID = 1L;
	private transient UISelectOne savedSearchesMenu; 
	public BackingBean() {}
	
	public UISelectOne getSavedSearchesMenu() {
		System.out.println (""getSavedSearchesMenu called"");
		if (this.savedSearchesMenu==null){
			this.populateSavedSearchesMenu();  
		}
		return this.savedSearchesMenu;
	}
	
	public void setSavedSearchesMenu(UISelectOne savedSearchesMenu) {
		System.out.println (""*** setSavedSearchesMenu called"");
		this.savedSearchesMenu = savedSearchesMenu;
	}
	
	private SelectItem[] populateSavedSearchesMenu(){
        SelectItem[] selectItems = new SelectItem[5];
        for (int i=0; i<5; i++) {
        	selectItems[i] = new SelectItem(i+"" testItem"");
        }
        this.savedSearchesMenu = new HtmlSelectOneMenu();

        //add an emtpy Select Item
	  		UISelectItem uiItem = new UISelectItem();
        uiItem.setValue( new SelectItem(""""));
        this.savedSearchesMenu.getChildren().add(0, uiItem);

        //add the saved searches
        UISelectItems uiItems = new UISelectItems();
        uiItems.setValue(selectItems);
        this.savedSearchesMenu.getChildren().add(uiItems);

        return selectItems;
	}
	
	/**
	 * Action Listener to show detailed document profile data.
	 * 
	 * @param ae The ActionEvent
	 */
	public void doImmediate(ActionEvent ea) {
		System.out.println (""doImmediate called"");
		// This causes the current View tree to be discarded and a fresh one created.
		// The new components of course then have no submitted values, 
		// and so fetch their displayed values via their value-bindings.
		FacesContext context = FacesContext.getCurrentInstance();
	  ViewHandler viewHandler = context.getApplication().getViewHandler();
	  UIViewRoot viewRoot = viewHandler.createView(context, context.getViewRoot().getViewId());
	  context.setViewRoot(viewRoot);
	  context.renderResponse();
	}

	/**
	 * Action Listener to show detailed document profile data.
	 * 
	 * @param ae The ActionEvent
	 */
	public void doNormal(ActionEvent ea) {
		System.out.println (""do normal called"");
	}
}


Output after clicking the immedaite link
with 1.1.3:
*** setSavedSearchesMenu called
doImmediate called
getSavedSearchesMenu called


with 1.1.4:
*** setSavedSearchesMenu called
doImmediate called
getSavedSearchesMenu called
*** setSavedSearchesMenu called


The obvious difference is the 2.nd call of the setter.
The parameter savedSearchesMenu (of type HtmlSelectOneMenu) is not initialized anymore.
All attributes are null or false except _valid which is true.

URL of the discussion:
http://marc.theaimsgroup.com/?l=myfaces-user&m=115953578324128&w=2
",MYFACES-1430
"The source code of the portlet still presents import statements from the portlet API and references portlet API inside in the method:

 /**
         * Determine if we are processing a portlet RenderResponse.
         *
         * @param facesContext The current FacesContext.
         * @return <code>true</code> if we are processing a RenderResponse,
         *         <code>false</code> otherwise.
         */
        public static boolean isRenderResponse(FacesContext facesContext) {
            if (!isPortletRequest(facesContext)) return false;
            
            return facesContext.getExternalContext().getResponse() instanceof RenderResponse;
        }

the method gets infoked from the org.apache.myfaces.application.jsp.JspViewHandlerImpl line 150 in the call: getActionURL. This call is referenced in the multiple places in jsf core distribution. 

The clean way to resolve portlet api issue whould be to eliminate (compile and runtime) dependency on any of the portlet api classes.",MYFACES-1429
"Till last week I used the nightliy build of Snapshot 1.1.5 of 12th July and everything worked fine. Know I tried to grade up to the nightly build of Snapshot 1.1.5 of 27th September and 1st October - but with both new nightly builds my application cannot be started.

I get a StringIndexOutOfBoundsException when I start Tomcat and a ""java.lang.IllegalStateException: No Factories configured for this Application..."" when I call a JSP-Page, but the StartupServletContextListener-entry exists in my web.xml file.

What goes wrong?

-----------------------------------------------------------------------------------------------------------------------------------
Tomcat error message:

[02.10.2006 13:46:39] <ERROR>  Error initializing ServletContext
javax.faces.FacesException: java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at org.apache.myfaces.config.FacesConfigurator.logMetaInf(FacesConfigurator.java:211)
	at org.apache.myfaces.config.FacesConfigurator.configure(FacesConfigurator.java:136)
	at org.apache.myfaces.webapp.StartupServletContextListener.initFaces(StartupServletContextListener.java:69)
	at org.apache.myfaces.webapp.StartupServletContextListener.contextInitialized(StartupServletContextListener.java:52)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:3669)
	at org.apache.catalina.core.StandardContext.start(StandardContext.java:4104)
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1012)
	at org.apache.catalina.core.StandardHost.start(StandardHost.java:718)
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1012)
	at org.apache.catalina.core.StandardEngine.start(StandardEngine.java:442)
	at org.apache.catalina.core.StandardService.start(StandardService.java:450)
	at org.apache.catalina.core.StandardServer.start(StandardServer.java:683)
	at org.apache.catalina.startup.Catalina.start(Catalina.java:537)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:271)
	at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:409)
Caused by: java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1768)
	at org.apache.myfaces.config.FacesConfigurator.checkJar(FacesConfigurator.java:231)
	at org.apache.myfaces.config.FacesConfigurator.logMetaInf(FacesConfigurator.java:184)
	... 18 more
javax.faces.FacesException: java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at org.apache.myfaces.config.FacesConfigurator.logMetaInf(FacesConfigurator.java:211)
	at org.apache.myfaces.config.FacesConfigurator.configure(FacesConfigurator.java:136)
	at org.apache.myfaces.webapp.StartupServletContextListener.initFaces(StartupServletContextListener.java:69)
	at org.apache.myfaces.webapp.StartupServletContextListener.contextInitialized(StartupServletContextListener.java:52)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:3669)
	at org.apache.catalina.core.StandardContext.start(StandardContext.java:4104)
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1012)
	at org.apache.catalina.core.StandardHost.start(StandardHost.java:718)
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1012)
	at org.apache.catalina.core.StandardEngine.start(StandardEngine.java:442)
	at org.apache.catalina.core.StandardService.start(StandardService.java:450)
	at org.apache.catalina.core.StandardServer.start(StandardServer.java:683)
	at org.apache.catalina.startup.Catalina.start(Catalina.java:537)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:271)
	at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:409)
Caused by: java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1768)
	at org.apache.myfaces.config.FacesConfigurator.checkJar(FacesConfigurator.java:231)
	at org.apache.myfaces.config.FacesConfigurator.logMetaInf(FacesConfigurator.java:184)
	... 18 more

-----------------------------------------------------------------------------------------------------------------------------------

When I call a Jsp-Page I get following error message:

javax.servlet.ServletException: Servlet.init() for servlet Faces Servlet threw exception
	org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:105)
	org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:148)
	org.apache.jk.server.JkCoyoteHandler.invoke(JkCoyoteHandler.java:307)
	org.apache.jk.common.HandlerRequest.invoke(HandlerRequest.java:385)
	org.apache.jk.common.ChannelSocket.invoke(ChannelSocket.java:748)
	org.apache.jk.common.ChannelSocket.processConnection(ChannelSocket.java:678)
	org.apache.jk.common.SocketConnection.runIt(ChannelSocket.java:871)
	org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:684)
	java.lang.Thread.run(Thread.java:595)

root cause

java.lang.IllegalStateException: No Factories configured for this Application. This happens if the faces-initialization does not work at all - make sure that you properly include all configuration settings necessary for a basic faces application and that all the necessary libs are included. Also check the logging output of your web application and your container for any exceptions!
If you did that and find nothing, the mistake might be due to the fact that you use some special web-containers which do not support registering context-listeners via TLD files and a context listener is not setup in your web.xml.
A typical config looks like this;
<listener>
  <listener-class>org.apache.myfaces.webapp.StartupServletContextListener</listener-class>
</listener>

	javax.faces.FactoryFinder.getFactory(FactoryFinder.java:90)
	javax.faces.webapp.FacesServlet.init(FacesServlet.java:88)
	org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:105)
	org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:148)
	org.apache.jk.server.JkCoyoteHandler.invoke(JkCoyoteHandler.java:307)
	org.apache.jk.common.HandlerRequest.invoke(HandlerRequest.java:385)
	org.apache.jk.common.ChannelSocket.invoke(ChannelSocket.java:748)
	org.apache.jk.common.ChannelSocket.processConnection(ChannelSocket.java:678)
	org.apache.jk.common.SocketConnection.runIt(ChannelSocket.java:871)
	org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:684)
	java.lang.Thread.run(Thread.java:595)
",MYFACES-1428
"sharath reddy wrote:	

There seems to be a problem restoring the
view, I get the following error:

java.lang.NumberFormatException: For input string:
""VUPIfby1ciIiAGQV/wIyHg==""

java.lang.NumberFormatException.forInputString(NumberFormatException.java:48)
       java.lang.Integer.parseInt(Integer.java:447)
       java.lang.Integer.<init>(Integer.java:620)

org.apache.myfaces.application.jsp.JspStateManagerImpl.getSerializedViewFromServletSession(JspStateManagerImpl.java:472)

org.apache.myfaces.application.jsp.JspStateManagerImpl.restoreTreeStructure(JspStateManagerImpl.java:229)

org.apache.myfaces.application.jsp.JspStateManagerImpl.restoreView(JspStateManagerImpl.java:264)

org.apache.myfaces.application.jsp.JspViewHandlerImpl.restoreView(JspViewHandlerImpl.java:231)

org.apache.myfaces.custom.conversation.ConversationViewHandler.restoreView(ConversationViewHandler.java:116)

org.apache.myfaces.lifecycle.RestoreViewExecutor.execute(RestoreViewExecutor.java:78)

org.apache.myfaces.lifecycle.LifecycleImpl.executePhase(LifecycleImpl.java:92)

org.apache.myfaces.lifecycle.LifecycleImpl.execute(LifecycleImpl.java:67)

javax.faces.webapp.FacesServlet.service(FacesServlet.java:137)
",MYFACES-1427
Fails to run a portlet bridge in the distributable env. add <distributabl/> flag to the web application.,MYFACES-1426
"In the getting started page at http://myfaces.apache.org/gettingstarted.html  , section ""Using MyFaces in your own web application"" the link to the tomahawk dependencies has the text  ""http://myfaces.apache.org/impl/dependencies.html"" instead of ""http://myfaces.apache.org/tomahawk/dependencies.html"".",MYFACES-1425
"On the website on the page http://myfaces.apache.org/source-repository.html, the source repository commands have the following URL: http://svn.apache.org/repos/asf/myfaces/site/trunk

This doesn't point to the MyFaces source code. 

It needs to be fixed. I cannot figure out which path I should get source from for the current release.

For example it says:
""The source can be checked out anonymously from SVN with this command:

$ svn checkout http://svn.apache.org/repos/asf/myfaces/site/trunk myfaces""",MYFACES-1424
"MyFaces needs to log its packages on startup - including version numbers. Duplicate packages should cause an error-log. This will help users and developers in tracking down errors.

regards,

Martin",MYFACES-1423
"since we ran into issues with some FormComponents which *extend*
UIForm, but override the Family we should add an instanceof to
the findNestingForm() method.

Currently we test if the Form is a member of the following families:

""javax.faces.Form""
""org.apache.struts.faces.Form""
""org.apache.myfaces.trinidad.Form""
""oracle.adf.Form""

Since there are more and more coming ""custom"" JSF libs which may
extend UIForm, but override the family (like Struts-Faces did) I think
we should add an instanceof UIForm to the algor.

Testing against the families:
""org.apache.myfaces.trinidad.Form""
""oracle.adf.Form""

makes sense because they are not UIForms. These form are also not a
naming container.
",MYFACES-1422
_ComponentUtils.java doesn't know the family of the struts faces form component,MYFACES-1421
"NPE is thrown at line 183 of org.apache.myfaces.shared_impl.util.SelectItemsIterator.next() if value binding property of the current UISelectItems component is null. This is not relevant, as the exception expected at that place in the code is IllegalArgumentException. By constructing the IllegalArgumentException message, a check whether the binding is null should be made, like it's done at line 143 of the same class.",MYFACES-1420
"All available converters look very similar. Extract the common behavior in base class.

Also DateTimeConverter can be migrated to work with type safe enums for style and type properties.
There are comments in source like //TODO: validate timeStyle. According to java doc of DateTimeConverter on sun there should not have validation. The validation of these will be performed when asString/asObject methods are called.",MYFACES-1419
"The 3 classes are very similar to each other except the type of minimum and maximum (and value of course). Therefore I'll suggest extracting the common behaviour in common parent class. 
",MYFACES-1418
"I've table with 9 colums. When a special condition is true I want to display only 8 columns. (the 4th column should be hidden). This ""magic"" is realized with <t:column rendered=""{#backingBean.condition}"" ..>

For the style of the columns I use the columnClasses attribute of the  datatable. Because of the variable number of the column's I serve the columnClasses attribute with a backing bean <h:dataTable  columnClasses=""#{backingBean.columnClasses}"" .../>

When the number of the columns is equal to the maximum numbers the styling  is o.k. (every column got the right class attribute value).
When the number of columns is less than the maximum numbers the styling of  the columns is wrong. (The column style attribute is wrong )

I checked the return value of the backing bean for the columnClasses attribute and the value is o.k.

I got this values for the columnClasses Attributte  when I have to render 9 columns:
 tableSelectionColumn,tarifBezeichnung,date,standardTableColumnCentered,standardTableColumnCentered,standardTableColumnCentered,tarifKurzBez,praemie,standardTableColumnCentered

when I have to render 8 columns:
 tableSelectionColumn,tarifBezeichnung,date,standardTableColumnCentered,standardTableColumnCentered,tarifKurzBez,praemie,standardTableColumnCentered


I the case when only 8 columns should be rendered for example the 6th column
 is rendered with the class praemie. But this class is on 7th position in the columnClasses value.

And the same code worked with version 1.1.1 correct. 


I've a little example which shows this bug",MYFACES-1417
" I have experiencing a wierd problem with MyFaces while deploying it to Tomcat Application Server

->Deploying the web application for the first time works using MyFaces 1.1.1 or MyFaces 1.0.9 onto Tomcat 5.0.28 or 5.5

-> When i Undeploy the application using Tomcat Manager Console the problem starts
 1)   it doesnt removes the application completely from the webapps directory of Tomcat. The left over folder will be WEB-INF/lib/myfaces*.jar files
 2) when i try to physically delete this folder it pops up with a Alert saying myfaces.jar is used by another person or program whereas the fact is no other program is deployed onto Tomcat or i see no references of it. Anyhow Undeploy from Tomcat should completly remove the web application without leaving a foot print of   WEB-INF/lib/myfaces*.jar  folder saying its referenced by other program

3) So finally i stop the Tomcat application server. Now i am in a position to physically delete the web application under webapps directory i.e. WEB-INF/lib/myfaces*.jar 

4) Now onwards subsequent  fresh deployments of web application will not go thru and give following error message

Sep 20, 2006 5:18:18 PM org.apache.catalina.startup.HostConfig deployWAR
INFO: Deploying web application archive TestFaces.war
log4j:WARN No appenders could be found for logger (org.apache.commons.digester.Digester.sax).
log4j:WARN Please initialize the log4j system properly.
Sep 20, 2006 5:18:22 PM org.apache.catalina.core.StandardContext start
SEVERE: Error listenerStart
Sep 20, 2006 5:18:22 PM org.apache.catalina.core.StandardContext start
SEVERE: Context [/TestFaces] startup failed due to previous errors

5) So i look at the webapp folder quite amazingly the application got deployed successfully with all the jar files etc i mean the packaging is perfect but the tomcat console shows the error and also the application doest show up on Tomcat Manager Console

6) Also i figured out the application automatically got undeployed by refreshing the tomcat console from the following message & webapp folder
Sep 20, 2006 5:20:17 PM org.apache.catalina.core.ApplicationContext log
INFO: HTMLManager: undeploy: Undeploying web application at '/TestFaces'
Sep 20, 2006 5:20:17 PM org.apache.catalina.core.StandardContext stop
INFO: Container org.apache.catalina.core.ContainerBase.[Catalina].[localhost].[/TestFaces] has not been started
Sep 20, 2006 5:20:17 PM org.apache.catalina.startup.HostConfig checkResources
INFO: Undeploying context [/TestFaces]
Sep 20, 2006 5:20:17 PM org.apache.catalina.core.ApplicationContext log
INFO: HTMLManager: list: Listing contexts for virtual host 'localhost'
Sep 20, 2006 5:20:20 PM org.apache.catalina.core.ApplicationContext log
INFO: HTMLManager: undeploy: Undeploying web application at '/TestFaces'
Sep 20, 2006 5:20:20 PM org.apache.catalina.core.ApplicationContext log
INFO: HTMLManager: list: Listing contexts for virtual host 'localhost'
Sep 20, 2006 5:20:23 PM org.apache.catalina.core.ApplicationContext log
INFO: HTMLManager: undeploy: Undeploying web application at '/TestFaces'
Sep 20, 2006 5:20:23 PM org.apache.catalina.startup.HostConfig checkResources
INFO: Undeploying context [/TestFaces]
Sep 20, 2006 5:20:23 PM org.apache.catalina.core.ApplicationContext log
INFO: HTMLManager: list: Listing contexts for virtual host 'localhost'
Sep 20, 2006 5:20:24 PM org.apache.catalina.core.ApplicationContext log
INFO: HTMLManager: undeploy: Undeploying web application at '/TestFaces'
Sep 20, 2006 5:20:24 PM org.apache.catalina.core.ApplicationContext log
INFO: HTMLManager: list: Listing contexts for virtual host 'localhost'
Sep 20, 2006 5:20:33 PM org.apache.catalina.core.ApplicationContext log
INFO: HTMLManager: list: Listing contexts for virtual host 'localhost'

Any pointers/suggestion to mail2bansi@yahoo.com will be highly appreciated

Regards
Bansi
",MYFACES-1416
"When using a Servlet 2.4 compliant web.xml, warnings are shown for some elements that are valid according to the spec.  This is purely a cosmetic issue, with no loss of function whatsoever.  It does create some confusion when users see this message (e.g. http://www.mail-archive.com/users@myfaces.apache.org/msg28066.html), so it might be worth fixing at some time.

WARN [WebXmlParser] Ignored element 'dispatcher' as child of 'filter-mapping'.",MYFACES-1415
"On the Getting started page (http://myfaces.apache.org/gettingstarted.html), the URL referred to by ""here"" does not have the MyFaces examples webapp archive. It is nowhere to be found! 

MyFaces examples. Latest milestone webapp archive (myfaces-X.X.X-examples.zip or myfaces-X.X.X-examples.tgz) is here

The here link points to the download page -> http://myfaces.apache.org/download.html

This needs to be fixed ASAP. It is a big problem for newbies!",MYFACES-1414
"org.apache.myfaces.shared.renderkit.html.HtmlRendererUtils

    public static String getClearHiddenCommandFormParamsFunctionName(
        String formName) {
        if(formName == null)
        {
            return ""'"" +CLEAR_HIDDEN_FIELD_FN_NAME
                + ""_'+formName.replace('""+NamingContainer.SEPARATOR_CHAR+""','_')"";
        }
....
generete this JS
	function oamSubmitForm(formName, linkId, target, params)
	{
		
		var clearFn = 'clearFormHiddenParams_'+formName.replace(':','_');
but if formName contain dashes (for example ""form-edit"")  clearFn = clearFormHiddenParams_form-edit
and it genare JS error  'edit is undefined'",MYFACES-1413
"JSF 1.1 spec, section 2.2.1 says:
-Examine the FacesContext instance for the current request. If it already
contains a UIViewRoot:
--Set the locale on this UIViewRoot to the value returned by the
getRequestLocale() method on the ExternalContext for this request.
--For each component in the component tree, determine if a ValueBinding for
""binding"" is present. If so, call the setValue() method on this
ValueBinding, passing the component instance on which it was found.
--Take no further action during this phase.

As I was looking at restore view phase implementation there was no such behaviour implemented. This should be implemented as:
		if(facesContext.getViewRoot() != null) {
			facesContext.getViewRoot().setLocale(facesContext.getExternalContext().getRequestLocale());
			RestoreStateUtils.recursivelyHandleComponentReferencesAndSetValid(facesContext, facesContext.getViewRoot());
			return false;
		}
At least if understand the code properly.",MYFACES-1412
"Every phase in LifecycleImpl looks like:

    private boolean applyRequestValues(FacesContext facesContext, PhaseListenerManager phaseListenerMgr)
        throws FacesException
    {
    		boolean skipFurtherProcessing = false;
        if (log.isTraceEnabled()) log.trace(""entering applyRequestValues in "" + LifecycleImpl.class.getName());

        try {
            phaseListenerMgr.informPhaseListenersBefore(PhaseId.APPLY_REQUEST_VALUES);

            if(isResponseComplete(facesContext, ""applyRequestValues"", true))
            {
                            // have to return right away
                            return true;
            }
            if(shouldRenderResponse(facesContext, ""applyRequestValues"", true))
            {
                            skipFurtherProcessing = true;
            }

            facesContext.getViewRoot().processDecodes(facesContext);
        } finally {
            phaseListenerMgr.informPhaseListenersAfter(PhaseId.APPLY_REQUEST_VALUES);
        }


        if (isResponseComplete(facesContext, ""applyRequestValues"", false)
				|| shouldRenderResponse(facesContext, ""applyRequestValues"", false))
        {
        		// since this phase is completed we don't need to return right away even if the response is completed
        		skipFurtherProcessing = true;
        }

        if (!skipFurtherProcessing && log.isTraceEnabled())
			log.trace(""exiting applyRequestValues in ""
					+ LifecycleImpl.class.getName());
        return skipFurtherProcessing;
    }


And that is repeated as many times as phases are. The fix will be to extract the common behavior in a method, that receives one additional parameter - PhaseExecutor and delegate to it the real execution.",MYFACES-1411
"this code return null
                if (base instanceof Object[] && ((Object[])base)[index] != null) {
                    Object[] array = (Object[]) base;
                    return array[index].getClass().getComponentType();
                } else {
.....

this change fix this error

Index: /current/impl/src/java/org/apache/myfaces/el/PropertyResolverImpl.java
===================================================================
--- /current/impl/src/java/org/apache/myfaces/el/PropertyResolverImpl.java	(revision 312842)
+++ /current/impl/src/java/org/apache/myfaces/el/PropertyResolverImpl.java	(working copy)
@@ -308,7 +308,7 @@
             {
                 if (base instanceof Object[] && ((Object[])base)[index] != null) {
                     Object[] array = (Object[]) base;
-                    return array[index].getClass().getComponentType();
+                    return array[index].getClass();
                 } else {
                     return base.getClass().getComponentType();
                 }
",MYFACES-1410
"The following behavior appears to be incorrect in myfaces implementation of JSF. 

After FacesContext.responseComplete is issued in the afterPhase method of  the PhaseListener at the RESTORE_VIEW phase, myfaces implementation skips to  RENDER_RESPONSE phase. This appears to be incorrect, as following a call to  FacesContext.responseComplete JSF implementation should exit JSF lifecycle  completely, i.e. the next phase of the lifecycle should be again  RESTORE_VIEW. 
 
This problem can be observed when running Sun's Progress Bar with JSF and  AJAX Sample with myfaces libraries on Tomcat. 
",MYFACES-1409
"When trying to build the project according to wiki instructions (http://wiki.apache.org/myfaces/JSR-252) getting error:


[INFO] Scanning for projects...
[INFO] snapshot org.apache.myfaces.maven:myfaces-master:1.0.4-SNAPSHOT: checking for updates from apache-maven-snapshots
[WARNING] repository metadata for: 'snapshot org.apache.myfaces.maven:myfaces-master:1.0.4-SNAPSHOT' could not be retrieved from repository: apache-maven-snapshots due to an error: Exit code: 1 - Host key verification failed.

[INFO] Repository 'apache-maven-snapshots' will be blacklisted
Downloading: https://maven-repository.dev.java.net/nonav/repository/org.apache.myfaces.maven/poms/myfaces-master-1.0.4-SNAPSHOT.pom
[WARNING] Unable to get resource from repository java.net (https://maven-repository.dev.java.net/nonav/repository)
[INFO] ----------------------------------------------------------------------------
[ERROR] FATAL ERROR
[INFO] ----------------------------------------------------------------------------
[INFO] Failed to resolve artifact.

GroupId: org.apache.myfaces.maven
ArtifactId: myfaces-master
Version: 1.0.4-SNAPSHOT

Reason: Unable to download the artifact from any repository

  org.apache.myfaces.maven:myfaces-master:pom:1.0.4-SNAPSHOT

from the specified remote repositories:
  central (http://repo1.maven.org/maven2),
  java.net (https://maven-repository.dev.java.net/nonav/repository),
  apache-maven-snapshots (people.apache.org/repo/m2-snapshot-repository),
  myfaces-repo (http://myfaces.zones.apache.org/dist/maven-repository)


[INFO] ----------------------------------------------------------------------------
[INFO] Trace
org.apache.maven.reactor.MavenExecutionException: POM 'org.apache.myfaces.maven:myfaces-master' not found in repository: Unable to download the artifact from any repository

  org.apache.myfaces.maven:myfaces-master:pom:1.0.4-SNAPSHOT

from the specified remote repositories:
  central (http://repo1.maven.org/maven2),
  java.net (https://maven-repository.dev.java.net/nonav/repository),
  apache-maven-snapshots (people.apache.org/repo/m2-snapshot-repository),
  myfaces-repo (http://myfaces.zones.apache.org/dist/maven-repository)

        at org.apache.maven.DefaultMaven.getProjects(DefaultMaven.java:365)
        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:278)
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:115)
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:249)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:324)
        at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
        at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
        at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
        at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
Caused by: org.apache.maven.project.ProjectBuildingException: POM 'org.apache.myfaces.maven:myfaces-master' not found in repository: Unable to download the artifact from any repository

  org.apache.myfaces.maven:myfaces-master:pom:1.0.4-SNAPSHOT

from the specified remote repositories:
  central (http://repo1.maven.org/maven2),
  java.net (https://maven-repository.dev.java.net/nonav/repository),
  apache-maven-snapshots (people.apache.org/repo/m2-snapshot-repository),
  myfaces-repo (http://myfaces.zones.apache.org/dist/maven-repository)

        at org.apache.maven.project.DefaultMavenProjectBuilder.findModelFromRepository(DefaultMavenProjectBuilder.java:429)
        at org.apache.maven.project.DefaultMavenProjectBuilder.assembleLineage(DefaultMavenProjectBuilder.java:986)
        at org.apache.maven.project.DefaultMavenProjectBuilder.build(DefaultMavenProjectBuilder.java:593)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromSourceFile(DefaultMavenProjectBuilder.java:303)
        at org.apache.maven.project.DefaultMavenProjectBuilder.build(DefaultMavenProjectBuilder.java:274)
        at org.apache.maven.DefaultMaven.getProject(DefaultMaven.java:515)
        at org.apache.maven.DefaultMaven.collectProjects(DefaultMaven.java:447)
        at org.apache.maven.DefaultMaven.collectProjects(DefaultMaven.java:491)
        at org.apache.maven.DefaultMaven.getProjects(DefaultMaven.java:351)
        ... 11 more
Caused by: org.apache.maven.artifact.resolver.ArtifactNotFoundException: Unable to download the artifact from any repository

  org.apache.myfaces.maven:myfaces-master:pom:1.0.4-SNAPSHOT

from the specified remote repositories:
  central (http://repo1.maven.org/maven2),
  java.net (https://maven-repository.dev.java.net/nonav/repository),
  apache-maven-snapshots (people.apache.org/repo/m2-snapshot-repository),
  myfaces-repo (http://myfaces.zones.apache.org/dist/maven-repository)

        at org.apache.maven.artifact.resolver.DefaultArtifactResolver.resolve(DefaultArtifactResolver.java:136)
        at org.apache.maven.artifact.resolver.DefaultArtifactResolver.resolve(DefaultArtifactResolver.java:63)
        at org.apache.maven.project.DefaultMavenProjectBuilder.findModelFromRepository(DefaultMavenProjectBuilder.java:386)
        ... 19 more
Caused by: org.apache.maven.wagon.ResourceDoesNotExistException: Unable to download the artifact from any repository
        at org.apache.maven.artifact.manager.DefaultWagonManager.getArtifact(DefaultWagonManager.java:260)
        at org.apache.maven.artifact.resolver.DefaultArtifactResolver.resolve(DefaultArtifactResolver.java:124)
        ... 21 more
[INFO] ----------------------------------------------------------------------------
[INFO] Total time: 5 seconds
[INFO] Finished at: Sun Sep 17 00:49:40 EEST 2006
[INFO] Final Memory: 2M/4M
[INFO] ----------------------------------------------------------------------------",MYFACES-1408
"oamSubmitForm method is generated with target/params parameters in reverse order.
Symptom is open link in new browser window when target is null but params is not.

HtmlRenderUtils defines oamSubmitForm function as:
        context.append(SUBMIT_FORM_FN_NAME).append(""(formName, linkId, target, params)"");

But HtmlLinkRenderBase renders: (formName, linkId, params, target)",MYFACES-1407
"Core and Shared project has dependency on myfaces:myfaces-api version 1.1.1.  Their are 2 problems here:

1) The dependency group is myfaces instead of org.apache.myfaces.core

2) The version number is wrong.

In many places this problem is minimized by the fact that the depenency is marked as ""provided"".  I notices the problem why using eclipse.  Eclipse was trying to use the 1.1.1 version of the API even though I was working with the 1.1.5-SNAPSHOT .

",MYFACES-1406
"The current version of 1.1.5-SNAPSHOT had state saving code built into the view-handler. Facelets replaces the view-handler; so this was an attempt that didn't work.

Resolution:

- moving all the state saving code (especially: view-sequence-id) into the state-manager
- letting the HtmlResponseStateManager write code not only in the client-side state saving case, but also in the server-side state saving case

how to see that it still doesn't work: watch for issues with the back-button. If you click on the back-button, does a click on a link move you to the next page? If the first one doesn't, but the second one does, this problem has reoccurred and we need to reopen this bug.

Can anyone check that this really works with Facelets?

regards,

Martin",MYFACES-1405
"TRINIDAD_FORM_COMPONENT_FAMILY constant of RendererUtils and _ComponentUtils has wrong value.
Currently:
org.apache.myfaces.adf.Form
Must be:
org.apache.myfaces.trinidad.Form

This breaks JS Cook Menu etc.
Trivial to fix.",MYFACES-1404
"(Note: This is the essentially same problem as MYFACES-198.)

When ALLOW_JAVASCRIPT is configured to false, clicking on commandLink does not invoke the associated action.

The apparent reason is that ..._SUBMIT=1 is missing in the generated href.

Please find attached a patch for myfaces-impl-1.1.3 that solves the problem.",MYFACES-1403
"Hi,

I'm trying to use STATE_SAVING_METHOD with param client.

But when I reload the same page, i have an error :


 java.lang.IllegalStateException: Duplicate component ID 'index:form:listRoot:subList:out1' found in view.
	at com.sun.faces.application.StateManagerImpl.buildTreeStructureToSave(StateManagerImpl.java:335)
	at com.sun.faces.application.StateManagerImpl.buildTreeStructureToSave(StateManagerImpl.java:345)
	at com.sun.faces.application.StateManagerImpl.buildTreeStructureToSave(StateManagerImpl.java:345)
	at com.sun.faces.application.StateManagerImpl.buildTreeStructureToSave(StateManagerImpl.java:345)
	at com.sun.faces.application.StateManagerImpl.buildTreeStructureToSave(StateManagerImpl.java:345)
	at com.sun.faces.application.StateManagerImpl.buildTreeStructureToSave(StateManagerImpl.java:345)
 



Of course when I reload my page, I reload the component with id : 'index:form:listRoot:subList:out1'.

Is there anyway to do it ?

Is it a bug ?

someone have an application which work with STATE_SAVING_METHOD client ?

thanks for your help ",MYFACES-1402
"I've isolated the problem i encountered in my web application i am currently developing. In the attached zip file are 4 files:

 test.jsp
 0.jsp
 1.jsp 
 f.jsp

test.jsp is the main page and needs to get loaded via the browser. test.jsp includes dynamically (random) either 0.jsp or 1.jsp. ... At the bottom of the page test.jsp i statically include f.jsp.

As you will see, there are serious problems when pressing the command buttons.... The outputTexts are rendered sometimes twice, other times in the wrong order and some times they aren't rendered at all.

I can't figure out what's the problem... if you need further information (config files, etc.... ) please let me know.",MYFACES-1401
http://mail-archives.apache.org/mod_mbox/myfaces-dev/200608.mbox/%3c8f985b960608100903v45575534tb9f84e73fc113689@mail.gmail.com%3e,MYFACES-1400
"You can register a converter for the elements of a selected collection of values but the collection type itself cannot be controlled by a converter. It appears to me that the implementation makes assumption about the developers intended collection type (one comments starts like ""this is a curious situation...""). Instead the collection type should be configurable. I have the rather exotic application in mind where I want to edit an in-clause of an SQL query (""in (1,2,4)""). This String property apparently is eqivalent to a list of values of some type. If I want to be able to make this String property of a managed bean editable by a jsf page I need a converter that generates a collection of objects from the String. ",MYFACES-1399
" getValidJavascriptNameAsInRI throws IllegalArgumentException for all non-null String input.

/**Don't use this function - except when compatibility with the RI is a must,
     * as in the name for the clear form parameters script.
     */
    public static String getValidJavascriptNameAsInRI(String origIdentifier)
    {
        return origIdentifier.replaceAll(""-"", ""\\$_"");  // <-- I think this is what you want, but can't tell from the javadocs :-)
    }
",MYFACES-1397
"HTMLOutputText (which delegates to HTMLEncoder) escapes not only XML-invalid charactres (like <, >, &), but also german umlauts. This is OK if generating (X)HTML, but not OK if generating XML. However, according to the official documentation to the outputText Tag the german umlauts should not be quoted: If the ""escape"" attribute is not present, or it is present and its value is ""true"" all angle brackets should be converted to the ampersand xx semicolon syntax when rendering the value of the ""value"" attribute as the value of the component.

There is an automatic XML detection, but this is broken, as only predefined MIME-types are recognized (application/xhtml+xml, application/xml, text/xml).

This bug prevents using JSF for generating other content (e.g. SVG, MIME-type image/svg+xml).
",MYFACES-1396
"Children of h:panelgroup within a f:facet that access bean properties are not evaluated. Only the static text within OutputText elements is evaluated: see below:

<h:dataTable value=""#{ContentAction.contentDescriptor.profiles}""
	var=""profile"" styleClass=""profileTable"">
	<h:column>
		
		<f:facet name=""header"">
		<h:panelGroup>
		<h:outputText value=""Profil ID"" />:<h:outputText
			value=""#{profile.ID}"" />
			<h:outputText value=""of this profile has ID:"" />
			<h:outputText
			value=""#{profile.ID}"" />
		</h:panelGroup>
		</f:facet>
.....

produces the result:

Profil ID:of this profile has ID:",MYFACES-1395
"When using JSF inside a portlet the locale attribute of the view-tag can not be used because a ClassCastException is thrown. 
This is because ViewTag.setProperties(UIComponent component) assumes that getFacesContext().getExternalContext().getRequest() returns a javax.servlet.ServletRequest which is only correct for non-portlets. For portlets it returns an javax.portlet.PortletRequest which can not be casted to javax.servlet.ServletRequest. 

See also:
http://java.sun.com/javaee/javaserverfaces/1.0/docs/api/javax/faces/context/ExternalContext.html#getRequest()",MYFACES-1394
"Problem#2

Environment:
MyFaces implementation
ADF Faces
Tomahawk 1.1.5

The hidden parameter ""jsf-sequence"" will not be rendered when using an
ADF form.

Possible solution: A new tomahawk component (myfacesParams), renders
all hidden input fields needed by the MyFaces implementation, eg the
jsf-sequence param. This artificial component must then be added to
every ADF form. This approach will work, but it's fault-prone. Any
ideas?


Comment by Adam Winer:

Problem #2 should not be happening if the MyFaces state management  code is
properly factored;  the FormRenderer - anyone's form renderer - should be
calling the ResponseStateManager, which should be rendering the sequence.
Last time I looked, the MyFaces FormRenderer was directly encoding the
sequence ID, which isn't the right approach.",MYFACES-1393
"I frequently - but far from always get a NPE when I use the variable resolver to resolve a session scope variable. Does anyone have any idea of what I am doing wrong?

The setup is this.

I have set up a session scope backing bean let's call it my myBean.
I have a servlet that generates graphic elements for some pages based on the information in myBean.

In the servlet I do the following:

    FacesContext facesContext = FacesContext.getCurrentInstance();
    if (facesContext == null) {
      FacesContextFactory fcf =
        (FacesContextFactory) FactoryFinder.getFactory(FactoryFinder.FACES_CONTEXT_FACTORY);
      LifecycleFactory lifecycleFactory =
        (LifecycleFactory) FactoryFinder.getFactory(FactoryFinder.LIFECYCLE_FACTORY);
      facesContext = fcf.getFacesContext(getServletContext(),
        req,
        resp,
        lifecycleFactory.getLifecycle(LifecycleFactory.DEFAULT_LIFECYCLE ));
    }

    if (facesContext != null) {
      VariableResolver vr = facesContext.getApplication().getVariableResolver();
      if (vr != null) {
        Object o = vr.resolveVariable(facesContext, ""myBean"");
      }
    }

As I started to say the line:
vr.resolveVariable(facesContext, ""myBean"");
somtimes throw a NPE with the following trace:
java.lang.NullPointerException
        at
org.apache.myfaces.context.servlet.SessionMap.setAttribute(SessionMap.java:50)
        at
org.apache.myfaces.context.servlet.AbstractAttributeMap.put(AbstractAttributeMap.java:104)
        at
org.apache.myfaces.el.VariableResolverImpl$13.put(VariableResolverImpl.java:192)
        at
org.apache.myfaces.el.VariableResolverImpl.resolveVariable(VariableResolverImpl.java:328)
        at
org.apache.myfaces.config.LastVariableResolverInChain.resolveVariable(LastVariableResolverInChain.java:42)",MYFACES-1392
"Not sure why this happens all of a sudden.  I will be excluding the test for the time being.

java.lang.UnsupportedOperationException
	at javax.faces.context.FacesContext.getELContext(FacesContext.java:138)
	at javax.faces.component.UIViewRoot.setLocale(UIViewRoot.java:900)
	at org.apache.myfaces.shared.util.MessageUtilsTest.testGetMessageSeverityStringObjectArrayFacesContext(MessageUtilsTest.java:88)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at junit.framework.TestCase.runTest(TestCase.java:154)
	at junit.framework.TestCase.runBare(TestCase.java:127)
	at junit.framework.TestResult$1.protect(TestResult.java:106)
	at junit.framework.TestResult.runProtected(TestResult.java:124)
	at junit.framework.TestResult.run(TestResult.java:109)
	at junit.framework.TestCase.run(TestCase.java:118)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at org.apache.maven.surefire.battery.JUnitBattery.executeJUnit(JUnitBattery.java:242)
	at org.apache.maven.surefire.battery.JUnitBattery.execute(JUnitBattery.java:216)
	at org.apache.maven.surefire.Surefire.executeBattery(Surefire.java:215)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:163)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:87)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at org.apache.maven.surefire.SurefireBooter.runTestsInProcess(SurefireBooter.java:285)
	at org.apache.maven.surefire.SurefireBooter.run(SurefireBooter.java:201)
	at org.apache.maven.test.SurefirePlugin.execute(SurefirePlugin.java:366)
	at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:412)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:534)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLifecycle(DefaultLifecycleExecutor.java:475)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:454)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:306)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:273)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:140)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:322)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:115)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:256)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
	at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
	at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:375)",MYFACES-1391
,MYFACES-1390
"It seems like using the ""{"", ""}"" characters in messages (in resource bundles) is impossible (Unless it is used for params: {0}, {1} etc'). The FacesUtil.subtituteParams seems to be throwing an exception. I tried escaping the characters by using ""\{"" but it still not working.",MYFACES-1389
"After switching from MyFaces 1.1.4 to MyFaces 1.1.5, the following error appears when requesting a page:

The context parameter 'org.apache.myfaces.secret.CACHE' is not set to false, yet there is nothing stored in the application map w/ the following key 'org.apache.myfaces.secret.CACHE'. It was either not placed there by StartupServletContextListener or something has removed it.

The error goes away if the following configuration line is added to web.xml, or if you downgrade back to 1.1.4.

    <context-param>
        <param-name>org.apache.myfaces.secret.cache</param-name>
        <param-value>false</param-value>
    </context-param>


Other encryption parameter values are:

 	<!-- MyFaces Encryption -->
    <context-param>
        <param-name>org.apache.myfaces.secret</param-name>
        <param-value>[censored]</param-value>
    </context-param>
    <context-param>
        <param-name>org.apache.myfaces.algorithm</param-name>
        <param-value>AES</param-value>
    </context-param>
    <context-param>
        <param-name>org.apache.myfaces.algorithm.parameters</param-name>
        <param-value>CBC/PKCS5Padding</param-value>
    </context-param>
    <context-param>
        <param-name>org.apache.myfaces.algorithm.iv</param-name>
        <param-value>[censored]</param-value>
    </context-param>


java.lang.NullPointerException: The context parameter 'org.apache.myfaces.secret.CACHE' is not set to false, yet there is nothing stored in the application map w/ the following key 'org.apache.myfaces.secret.CACHE'. It was either not placed there by StartupServletContextListener or something has removed it.
	at org.apache.myfaces.shared_impl.util.StateUtils.symmetric(StateUtils.java:484)
	at org.apache.myfaces.shared_impl.util.StateUtils.encrypt(StateUtils.java:198)
	at org.apache.myfaces.shared_impl.util.StateUtils.construct(StateUtils.java:155)
	at org.apache.myfaces.renderkit.html.HtmlResponseStateManager.writeState(HtmlResponseStateManager.java:72)
	at org.apache.myfaces.application.jsp.JspStateManagerImpl.writeState(JspStateManagerImpl.java:430)
	at com.sun.facelets.FaceletViewHandler.renderView(FaceletViewHandler.java:606)
	at org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:383)
	at javax.faces.webapp.FacesServlet.service(FacesServlet.java:138)
	at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:428)
	at org.mortbay.jetty.servlet.WebApplicationHandler$CachedChain.doFilter(WebApplicationHandler.java:830)
	at de.mindmatters.faces.spring.support.RequestHandledFilter.doFilter(RequestHandledFilter.java:150)
	at org.mortbay.jetty.servlet.WebApplicationHandler$CachedChain.doFilter(WebApplicationHandler.java:821)
	at org.apache.myfaces.webapp.filter.ExtensionsFilter.doFilter(ExtensionsFilter.java:144)
	at org.mortbay.jetty.servlet.WebApplicationHandler$CachedChain.doFilter(WebApplicationHandler.java:821)
	at com.gvea.servlet.filter.authentication.RequiredSecActionFilter.doFilter(RequiredSecActionFilter.java:79)
	at org.mortbay.jetty.servlet.WebApplicationHandler$CachedChain.doFilter(WebApplicationHandler.java:821)
	at com.gvea.servlet.filter.authentication.SecIndividualLookupFilter.doFilter(SecIndividualLookupFilter.java:136)
	at org.mortbay.jetty.servlet.WebApplicationHandler$CachedChain.doFilter(WebApplicationHandler.java:821)
	at com.gvea.servlet.filter.DataContextManagerFilter.doFilter(DataContextManagerFilter.java:31)
	at org.mortbay.jetty.servlet.WebApplicationHandler$CachedChain.doFilter(WebApplicationHandler.java:821)
	at com.gvea.servlet.filter.SequentialSessionFilter.doFilter(SequentialSessionFilter.java:63)
	at org.mortbay.jetty.servlet.WebApplicationHandler$CachedChain.doFilter(WebApplicationHandler.java:821)
	at com.gvea.servlet.filter.authentication.ForcedAuthenticationFilter.doFilter(ForcedAuthenticationFilter.java:41)
	at org.mortbay.jetty.servlet.WebApplicationHandler$CachedChain.doFilter(WebApplicationHandler.java:821)
	at org.mortbay.jetty.servlet.WebApplicationHandler.dispatch(WebApplicationHandler.java:471)
	at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:568)
	at org.mortbay.http.HttpContext.handle(HttpContext.java:1530)
	at org.mortbay.jetty.servlet.WebApplicationContext.handle(WebApplicationContext.java:633)
	at org.mortbay.http.HttpContext.handle(HttpContext.java:1482)
	at org.mortbay.http.HttpServer.service(HttpServer.java:909)
	at org.mortbay.http.HttpConnection.service(HttpConnection.java:816)
	at org.mortbay.http.HttpConnection.handleNext(HttpConnection.java:982)
	at org.mortbay.http.HttpConnection.handle(HttpConnection.java:833)
	at org.mortbay.http.SocketListener.handleConnection(SocketListener.java:244)
	at org.mortbay.util.ThreadedServer.handle(ThreadedServer.java:357)
	at org.mortbay.util.ThreadPool$PoolThread.run(ThreadPool.java:534)
",MYFACES-1388
"Problem during generation of t:tree2 : 
t:graphicImage can be easily setup by referencing directly an already generated and available *.jpg/*.gif or *.png file. 
e.g. <t:graphicImage value=""/images/yellow-folder-open.png"" rendered=""#{t.nodeExpanded}"" border=""0""/>. 
My problem is that I want to create my own graphics (e.g. via Graphics2D graphics = image.createGraphics())) 
and to include the drawn image/graphic according environment conditions into my t:tree component without the 
necessity to store each generated image/graphic as *.jpg file (minimization of memory usage/process time reduction). 
Is there any possibility to include an icon in my *.xhtml page by usage of t:graphicImage 
referencing a self-drawn graphic ? If yes, how ? 

This is a big blocking point for me, any help is welcome ! 
Thanks in advance for any idea, instruction or answer. 
Peter 

",MYFACES-1387
"my managed bean was lacking a setter for a property. Due to a non-descriptive error message I was unable to identify the source of the problem. After debugging, this code block was identified that lacks a descriptive error message.

Error message was:
Bean: com.somedomain.Controller, property: alertDiffResult Bean: com.somedomain.Controller, property: alertDiffResult

Error message should be:
Bean: com.somedomain.Controller, property: alertDiffResult Bean: com.somedomain.Controller, property: alertDiffResult (no write method for property)

suggested patch: 


  public static void setProperty(Object base, String name, Object newValue)
    {
        PropertyDescriptor propertyDescriptor =
            getPropertyDescriptor(base, name);

        Method m = propertyDescriptor.getWriteMethod();
        if (m == null)
        {
            throw new PropertyNotFoundException(
                getMessage(base, name)+ "" (no write method for property!)"");
        }
...
",MYFACES-1386
"Clean up of dead code, imports, and unused variables",MYFACES-1385
"After switch from myfaces-impl-1.1.3 (release) to myfaces-1.1.5-SNAPSHOT, javascript throw error 'Object expected'

If look at file ctx-myfaces-impl-1.1.3-release-valid.html , you  can see what function for clear form named as 'clear_company_5Fform()'. But in file ctx-myfaces-impl-1.1.5-snapshot-broken.html this form now named as 'clearFormHiddenParams_company_form(currFormName)'

In both files code with link not changed:
<tr><td><a href=""#"" onclick=""clear_company_5Fform();document.forms['company_form'].elements['company_form:_link_hidden_'].value='company_form:subviewCompanyList:companyDataTable:0:_idJsp6ns17';if(document.forms['company_form'].onsubmit){var result=document.forms['company_form'].onsubmit();  if( (typeof result == 'undefined') || result ) {document.forms['company_form'].submit();}}else{document.forms['company_form'].submit();}return false;"" id=""company_form:subviewCompanyList:companyDataTable:0:_idJsp6ns17"">1st company</a></td></tr>


All of jsp files of this JSF appl you can find here:
http://svn.sourceforge.net/viewvc/riverock/trunk/riverock-portlet/src/main/webapp/riverock/manager/company/
",MYFACES-1384
"trinidad won´t run in a portlet environment. problem is, that FacesContextFactoryImpl does not extend
ServletFacesContextImpl. therefore this is an internal myfaces core problem that could hopefully be fixed.
stacktrace of the crashing portlet using myfaces and trinidad:

javax.portlet.PortletException:
org.apache.myfaces.trinidadinternal.context.FacesContextFactoryImpl$CacheRenderKit
at
org.apache.myfaces.portlet.MyFacesGenericPortlet.handleExceptionFromLifecycle(MyFacesGenericPortlet.java:253)
at
org.apache.myfaces.portlet.MyFacesGenericPortlet.facesRender(MyFacesGenericPortlet.java:407)
....
Nested Exception is java.lang.ClassCastException:
org.apache.myfaces.trinidadinternal.context.FacesContextFactoryImpl$CacheRenderKit
at
org.apache.myfaces.portlet.MyFacesGenericPortlet.facesRender(MyFacesGenericPortlet.java:387)
at
net.portlets.logon.LogonPortlet.doView(LogonPortlet.java:88)
....",MYFACES-1383
"Sorry for my english please.

I am using list of SelectItem objects to fill data in listbox. Listbox is using
an converor.

SelectItem object has method getValue, which returns a type Object.
In my case is type of the value property an Integer.

In class 

  javax.faces.component._SelectItemsUtil

is method matchValue which is testing if value of the componet exists
in set of values in the listbox. Listbox contais ""raw values"", value in listbox
is converted.

The code is

                Object itemValue = item.getValue();
                if(converter != null && itemValue instanceof String)
                {
                    itemValue = converter.getConvertedValue(context, (String)itemValue);
                }
                if (value==itemValue || value.equals(itemValue))
                ....


If in listbox are values not in type String (for example Integer), convertor is not
invoked and following test will fails and application will end with validation error exception.

This problem can be solved if only Strings  are used as value in listbox which are using
convertors. (trap ?)

Or change this code to something like this:

                Object itemValue = item.getValue();
                if(converter != null)
                {
                    itemValue = converter.getConvertedValue(context, itemValue.toString());
                }

Or not allow to use no String value in a SelectItem object.

Alois Vitasek
",MYFACES-1382
"JSR-252 Issue #303: Clarified the use of encodeChildren with no renderer: render not no-op

https://javaserverfaces.dev.java.net/issues/show_bug.cgi?id=303",MYFACES-1381
"Hi there,

I have a problem with the languages of the messages. Although the browser language is e.g. set to ""de"" only, I get the messages from the ""en"" message bundle.

Do I have to set the language manually somewhere?

Kind regards,
Dennis",MYFACES-1380
"When a commandLink inside a tree2 has an action attr, actionListener attr, or f:actionListener tag they are never queued or broadcast and the associated methods never get called.",MYFACES-1379
"If you have a date field in a database and use a outputText with a convertDateTime component embedded in it it displays the date incorrectly - 1 day earlier than the correct date in the database.
If i use the t:inputCalender to display the same date, it displays the correct date that is stored in the database.
-------------------------
<h:outputLabel styleClass=""outputLabel"" for=""review_date"" value=""#{msgs.review_date}""/>
<h:outputText id=""review_date"" value=""#{RisksBBB.entity.review_date}"">
<f:convertDateTime/>
</h:outputText>
<h:message styleClass=""message"" for=""review_date""/>
<h:outputLabel styleClass=""outputLabel"" for=""review_dated"" value=""#{msgs.review_date}""/>
<t:inputDate popupCalendar=""true"" id=""review_dated"" value=""#{RisksBBB.entity.review_date}""/>
<h:message styleClass=""message"" for=""review_dated""/>

Gives 17-Aug-2006 from tthe outputText but 18-Aug-2006 in the calendar control.
 ",MYFACES-1378
"h:dataTable with t:dataScroller generates ""Row is not available. Rowindex =#"" errors on non-full pages.

See http://issues.apache.org/jira/browse/TOMAHAWK-467",MYFACES-1377
tree2NiceWrap.jsf throws a javascript error when you try to expand the node,MYFACES-1376
"I have an application that was using straight JSF (no MyFaces).  I introduced MyFaces to add a navigation menu to the site.  With no code changes to the pages that have the selectBooleanCheckbox, except for an include of the new header/footer, the selectBooleanCheckboxes no longer function in that they throw an exception when the page loads.  A similar exception occurs on three different pages in the app, and it used to function correctly.  Here is the exception:

javax.servlet.ServletException: javax.servlet.jsp.JspException: Expected submitted value of type Boolean for Component : {Component-Path : [Class: javax.faces.component.UIViewRoot,ViewId: /LMMaintenance/manageProductModules.jsp][Class: javax.faces.component.html.HtmlForm,Id: manageProductModule][Class: javax.faces.component.html.HtmlPanelGrid,Id: _id3][Class: javax.faces.component.UISelectBoolean,Id: ModuleStatus]}
	org.apache.jasper.runtime.PageContextImpl.doHandlePageException(PageContextImpl.java:844)
	org.apache.jasper.runtime.PageContextImpl.access$1100(PageContextImpl.java:65)
	org.apache.jasper.runtime.PageContextImpl$12.run(PageContextImpl.java:768)
	java.security.AccessController.doPrivileged(Native Method)
	org.apache.jasper.runtime.PageContextImpl.handlePageException(PageContextImpl.java:766)

Here is a code snippet from one of the three pages:

				<h:selectBooleanCheckbox id=""CategoryStatus""
				 value=""#{ManageCategoryBean.categoryStatus}""
				 required=""true""
				 binding=""#{ManageCategoryBean.uiCategoryStatus}"">
				</h:selectBooleanCheckbox>

The backing ManageCategoryBean has a getter/setter for categoryStatus (Boolean) and uiCategoryStatus (UISelectBoolean).  When the binding attribute is removed, the issue is resolved, however, then the behavior for the application is incorrect as the value is not loaded onto the screen correctly.  This was what was working (perhaps by chance) with the Sun's JSF implementation.  Perhaps I need to use a different type in the backing bean for these checkboxes, but I haven't found any documentation to indicate that to date.",MYFACES-1374
"Add exception to logger for output exception stack trace in 
myfaces-shared\core\src\main\java\org\apache\myfaces\shared\renderkit\html\HtmlRendererUtils.java 

Current log message 'Error finding Converter for component with id add_idea_form:select_one_category' not output why exception was thrown.

Patch is very simple",MYFACES-1373
"Adding a ""global"" message in a backing bean goed fine;with the MyFaces log level set to DEBUG, it shows it is indeed added.
Log extrait:""2006-07-26 10:48:02,296 DEBUG [org.apache.myfaces.shared_impl.util.MessageUtils] - adding message Global Security Test for clientId null""

Code: I've tried both the Std way & the MyFaces way: (from http://wiki.apache.org/myfaces/Displaying_Errors/Infos/Warnings_in_JSF_Pages)
FacesContext ctx = FacesContext.getCurrentInstance();
ctx.addMessage(null, new FacesMessage(""Test Summary"",""Test"" ));
& MessageUtils.addMessage(FacesMessage.SEVERITY_ERROR,""secMsg_test"" , null);

& In the page just this: ( & variations: I've tried to put all before </h:form> but not any order made a difference.
<t:messages id=""errors"" errorStyle=""error""/>
</h:form>
<h:messages id=""errors"" errorClass=""error"" />

Yet, when I ask to show teh source of the actual webpage, I found out it is not renderen. (no component with that ID found) Couldn't believe it so I manually searched for it, knowing its place. But it was true: it's just not on the page. This is particularily weird as -also in debug mode- this fragment passes the revue:
"" <html.HtmlMessages id=""errors"" forceIdIndex=""true"" errorClass=""NULL"" errorStyle=""NULL"" family=""javax.faces.Messages"" fatalClass=""NULL"" fatalStyle=""NULL"" globalOnly=""false"" infoClass=""NULL"" infoStyle=""NULL"" layout=""list"" rendered=""true"" rendererType=""javax.faces.Messages"" rendersChildren=""false"" showDetail=""false"" showSummary=""true"" style=""NULL"" styleClass=""error"" title=""NULL"" tooltip=""false"" transient=""false"" warnClass=""NULL"" warnStyle=""NULL""/>""

(= in the logs ONLY, NOT in the page)

Finally: 
This seems t be an old issue: (April 12, 2005)
http://mail-archives.apache.org/mod_mbox/myfaces-users/200504.mbox/%3C20050412060343.85397.qmail@web31109.mail.mud.yahoo.com%3E

<h:messages> is core to JSF. One of the few basic tags. It's strange it suffers from this many bugs. (searched old bugs before posting this one, did my homework ;-)
Hope someone can rectify it for good. 

Wolf
",MYFACES-1372
"In JSF-RI, style attribute of <h:selectManyCheckbox> and <h:selectOneRadio> is 
applied to only <table>. However MyFaces applies to <table> and its child <input> tags.

I'm working for WYSIWYG JSP designer for Eclipse.
And I'm planning to make component layout using CSS absolute layout.
(This is the same approach as Sun Java Studio Creator)

For example:

<h:selectManyCheckbox 
  style=""location:absolute; top:10; left:10; width:100; height:16;"">
   ...
</h:selectManyCheckbox>

JSF-RI can display this JSP well.
But in MyFaces, checkboxes are displayed at the same location.

I couldn't find the clear regulation about this problem in the JSF specification.
So I think that it cannot necessarily declare that it is a bug. 

However I wish to decrease differences of HTML rendering.

Regards.",MYFACES-1371
"CommandLink would not work with javascript turned off.

	<context-param>
		<param-name>org.apache.myfaces.ALLOW_JAVASCRIPT</param-name>
		<param-value>false</param-value>
	</context-param>




This fixes it.

		hrefBuf.append('&');
		hrefBuf.append(findNestingForm(component, facesContext).getFormName()
				+ ""_SUBMIT"");
		hrefBuf.append('=');
		hrefBuf.append(1);


If added to the renderNonJavaScriptAnchorStart method in HtmlLinkRendererBase",MYFACES-1370
"http://mail-archives.apache.org/mod_mbox/myfaces-commits/200607.mbox/%3C20060704203128.8B95D1A9887@eris.apache.org%3E

Fix should include unit tests for backwards compatibility.",MYFACES-1368
"There is a small error in javascript function org_apache_myfaces_getScrolling (forgotten brackets).

The patch:

Index: C:/Java/MyFaces-shared-HEAD/core/src/main/java/org/apache/myfaces/shared/renderkit/html/util/JavascriptUtils.java
===================================================================
--- C:/Java/MyFaces-shared-HEAD/core/src/main/java/org/apache/myfaces/shared/renderkit/html/util/JavascriptUtils.java	(revision 422108)
+++ C:/Java/MyFaces-shared-HEAD/core/src/main/java/org/apache/myfaces/shared/renderkit/html/util/JavascriptUtils.java	(working copy)
@@ -307,7 +307,7 @@
         StringBuffer script = new StringBuffer();
 
         script.append(""function "");
-        script.append(AUTO_SCROLL_FUNCTION);
+        script.append(AUTO_SCROLL_FUNCTION + ""()"");
         script.append("" {\n"");
         script.append(""    var x = 0; var y = 0;\n"");
         script.append( ""    if (self.pageXOffset || self.pageYOffset) {\n""+
",MYFACES-1366
"Using two selectOneMenu on one page results in a broken phase processing.

example:

Works:

<html>
<%@ taglib uri=""http://java.sun.com/jsf/core"" prefix=""f""%>
<%@ taglib uri=""http://java.sun.com/jsf/html"" prefix=""h""%>
<%@ taglib uri=""http://myfaces.apache.org/tomahawk"" prefix=""t""%>
<%@include file=""../inc/head.jsp""%>
<body>
<f:view>
        <h:form>
                <f:loadBundle basename=""my.examples.ressources.messages"" var=""msgs"" />
                <h:selectOneMenu id=""oneoption"" value=""#{tableData.rows}""
                        onchange=""submit()"" valueChangeListener=""#{tableData.rowsChanged}""
                        immediate=""true"">
                        <f:selectItem itemValue=""5"" itemLabel=""5"" />
                        <f:selectItem itemValue=""10"" itemLabel=""10"" />
                        <f:selectItem itemValue=""15"" itemLabel=""15"" />
                        <f:selectItem itemValue=""20"" itemLabel=""20"" />
                </h:selectOneMenu>
        </h:form>
</f:view>
<%@include file=""../inc/page_footer.jsp""%>
</body>
</html>

doesnt work:

<html>
<%@ taglib uri=""http://java.sun.com/jsf/core"" prefix=""f""%>
<%@ taglib uri=""http://java.sun.com/jsf/html"" prefix=""h""%>
<%@ taglib uri=""http://myfaces.apache.org/tomahawk"" prefix=""t""%>
<%@include file=""../inc/head.jsp""%>
<body>
<f:view>
        <h:form>
                <f:loadBundle basename=""my.examples.ressources.messages"" var=""msgs"" />
                <h:selectOneMenu id=""oneoption"" value=""#{tableData.rows}""
                        onchange=""submit()"" valueChangeListener=""#{tableData.rowsChanged}""
                        immediate=""true"">
                        <f:selectItem itemValue=""5"" itemLabel=""5"" />
                        <f:selectItem itemValue=""10"" itemLabel=""10"" />
                        <f:selectItem itemValue=""15"" itemLabel=""15"" />
                        <f:selectItem itemValue=""20"" itemLabel=""20"" />
                </h:selectOneMenu>
                <h:selectOneMenu value=""#{tableData.country}"" onchange=""submit()"">
                        <f:valueChangeListener
                                type=""my.examples.sortabletable.CountryListener"" />
                        <f:selectItems value=""#{tableData.countryNames}"" />
                </h:selectOneMenu>
        </h:form>
</f:view>
<%@include file=""../inc/page_footer.jsp""%>
</body>
</html>

Using the first one, the event gets fired and looking at the phase listener, all 6 phases are processed.
Using the second example with both menus and firing an event on the first menu, application invoke and model update phase aren't executed.
The second menu works fine

Only happens after the bean is new - using it on a already created session bean, works. Only after the first invoking of the view this happens.

I don't see any cause why the first event should not process phase 4 and 5 ( like it does when only one menu is used ), so imho it's a bug.

kind regards

Torsten",MYFACES-1365
"If I have a custom component (e.g. extends HtmlPanelGrid) and I attach to this another component (e.g. a HtmlCommandLink) in the constructor, I get an ArrayIndexOutOfBounds exception in the restore state phase.

What happens is that in the save state phase it will save one child, but in the restore state phase it will try to restore two: a new child (that gets added when the component is recreated) AND the old child.

Therefore, I cannot define a (usable) custom composite component (I can, actually, but with some nasty workarounds).",MYFACES-1364
">>-----Original Message-----
>>From: Cagatay Civici [mailto:cagatay.civici@gmail.com]
>>Sent: Tuesday, July 11, 2006 06:41 PM
>>To: dev@myfaces.apache.org
>>Subject: current12 shared_core classpath issue
>>
>>Hi,
>>
>>I'm working on some of unassigned 1.2 jira issues.
>>
>>After building the libraries using current12 and doing mvn eclipse:eclipse,
>>the created .classpath of myfaces_shared_core points to the
>>
>><classpathentry kind=""var"" path=""M2_REPO/myfaces/myfaces-api/1.1.1/myfaces-
>>api-1.1.1.jar""/>, thus changes I've made for the 1.2 issues are not taken
>>into account.
>>
>>Any thoughts?
>>
>>Regards,
>>
>>Cagatay Civici ",MYFACES-1363
"On the website the ""Getting Started Page"" states that the examples (myfaces-X.X.X-examples.zip) are on the ""Download  Page"" ((http://myfaces.apache.org/download.html)). They are not.

It seems that the examples are in the nightly distribution, but not in the main released distribution.

It seems the examples should be in the main distribution.

",MYFACES-1362
"The listing in Apache's project catalog is out of date and need to be updated. See http://projects.apache.org/projects/myfaces.html

The information to be updated includes:
1) Release Information
2) Spelling/Capitalization of the project name (per Dennis Byrne)",MYFACES-1361
"I would like to extend the HtmlMessagesRendererBase and overwrite the methods renderList and renderTable in order to add styleClasses to the generated list elements. Unfortunately these methods (and the internal class MessagesIterator) are private. 
Is there any reason why these methods are not protected?",MYFACES-1360
"Theis portlet fragment renders one of 2 components depending on the selection in the selectOneMenu: 

<div xmlns:f=""http://java.sun.com/jsf/core""
    xmlns:h=""http://java.sun.com/jsf/html"">        
    <h:form>
        <h:outputLabel for=""list"">foo</h:outputLabel>
        <h:selectOneMenu value=""${booleanTest.choice}"" id=""list""><f:selectItems value=""#{booleanTest.selectList}""/></h:selectOneMenu>
        <h:commandButton action=""#{booleanTest.doIt}""/>
    </h:form>
    <h:outputText rendered=""#{empty booleanTest.list}"" value=""Empty""/>
    <h:dataTable rendered=""#{! empty booleanTest.list}"" value=""#{booleanTest.list}"" var=""l"" border=""1"">
        <h:column>
            <f:facet name=""header""><h:outputText value=""Column""/></f:facet>
            <h:outputText value=""#{l}""/>
        </h:column>
    </h:dataTable>
</div>

It's using this simple bean:

public class BooleanTest {
    private List<String> list =  new ArrayList<String>();
    private List<String> emptyList = new ArrayList<String>();
    private String choice = ""Foo"";
    private List<SelectItem> selectList = null;
    
    public List<String> getList() {
        if (choice.equals(""Foo"")) {
            return emptyList;
        } else {
            if (list.isEmpty()) {
                list = new ArrayList<String>();
                list.add(""Hello"");
                list.add(""World"");
                list.add(""!!!!!"");
            }
            return list;
        }
    }
    
    public String doIt() {
        return ""success"";
    }

    public List<SelectItem> getSelectList() {
        if (selectList == null) {
            selectList = new ArrayList<SelectItem>();
            selectList.add(new SelectItem(""Foo"", ""Foo""));
            selectList.add(new SelectItem(""bar"", ""bar""));
        }
        return selectList;
    }

    public String getChoice() {
        return choice;
    }

    public void setChoice(String choice) {
        this.choice = choice;
    }
}

When I first add this portlet to a page, I get the drop down list, the submit button and the ""empty"" message. If I select the 'bar' entry in the list and click submit I get the error, "" Can not call encodeNamespace() during a portlet ActionRequest""

It seems to be because MyFacesGenericPortlet.processAction calls lifecycle.execute, which in turn starts createing components for the table (which wasn't in the first call to the page). This calls encodeNamespace for the new componenet IDs and thats when it falls over.

I fixed this by changing PortletExternalContextImpl.encodeNamespace to return null instead of throwing an IllegalStateException. My application seems to be working well with this solution, but I don't know if it might have any knock on effects?

",MYFACES-1359
"
Hi,

    I've been testing the most basic portlet in our GridSphere framework and ran into this error:

java.lang.IllegalArgumentException: Subsequent characters of component identifier must be a letter, a digit, an underscore ('_'), or a dash ('-')! But component identifier contains ""#""
        at javax.faces.component.UIComponentBase.isIdValid(UIComponentBase.java:1049)

It appears that PortletExternalContextImpl is using the RenderResponse.getNamespace() method which in our case will return a string containing a #.

The JSR168 spec. does not specify any disallowed characters in getNamespace() so I think this is a bug in the PortletExternalContextImpl class-- probably in the

public String encodeNamespace(String name)

method, it should conert the response.getNamespace into a form that the UIComponentBase.isValid method can deal with.

    Thanks, Jason",MYFACES-1358
"Consider a simple datatable:

				<h:dataTable 
					value=""#{userProfile.associations}""  var=""association"">
					<h:column>
						<h:commandButton action=""#{userProfile.selecting}"" value=""#{association.entityCodeTo}"" />
					</h:column>
					<h:column>
						<h:outputText value=""#{association.dateFrom}""></h:outputText>
					</h:column>
				</h:dataTable>

Now consider that the list returned by userProfile.associations is null (or an empty ArrayList) in the first time it get's called (in ApplyRequestValues phase), and is fully populated in the RenderResponse phase (because it depends on settings populated in the UpdateModel phase).

When the commandButton is pressed, the method in the action (userProfile.selecting) will not be called.

The only workaround is implementing the getAssociations like this:

public List<EntityAssociationData> getAssociations() {
         	if (business rule is populated)  {
	        		associationData = getAssociationsFromSystem();
	        } else 
                        if (associationData == null) {
	        		/* We must always return a arraylist with at least one element */
	        		associationData = new ArrayList<EntityAssociationData>();
	        		EntityAssociationData entityAssociationData = new EntityAssociationData();
	        		associationData.add(entityAssociationData);
	        }
 }

We *really* need that bogus entry, so the ArrayList has a size > 0, or else the userProfile.selecting() method will never be called.

",MYFACES-1357
"
In the class FacesServlet (and maybe more locations) a ServletException is thrown while loosing the RootCause.
The Stacktrace will be broken.

Instead of 
""throw new ServletException(e.getMessage(), e);""

You should use the method ""initCause()"", f.e.:
ServletException se = new ServletException( e.getMassage );
se.initCause( e );
throw se;

Thanks a lot
Jan Dankert",MYFACES-1356
"Addition of a facelet taglib file for the example component.

Facelet enabling the example component by adding a mycomponent.taglib.xml file, in resources/META-INF.
Faclets will automatically load *.taglib.xml files placed at this location.",MYFACES-1355
"Hi,
I'm using custom PropertyResolver and it works fine until first redeployment of web application. After that, it throws ClassCastException's. I've found out, that while new PropertyResolver instance is created during every deployment, for every EL expression evaluation that instance is used, which was used for it's first evaluation. So the source of linkage errors is that classes of objects, passed to PropertyResolver instance, were loaded by different classloaders (for each of web app deployments).

After searching the source code I've found the source of problem: static BiLevelCacheMap s_expressionCache in ValueBindingImpl. It stores expressions, parsed from strings by ELParserHelper, and during parsing link to current Application is passed  to these expressions:

private static void replaceSuffixes(ComplexValue complexValue)
    {
        Application application = FacesContext.getCurrentInstance()
            .getApplication();

        List suffixes = complexValue.getSuffixes();
        for (int i = 0, len = suffixes.size(); i < len; i++)
        {
            ValueSuffix suffix = (ValueSuffix) suffixes.get(i);
            if (suffix instanceof PropertySuffix)
            {
                if (suffix instanceof MyPropertySuffix)
                {
                    throw new IllegalStateException(
                        ""Suffix is MyPropertySuffix and must not be"");
                }

                suffixes.set(i, new MyPropertySuffix((PropertySuffix) suffix,
                    application));
            }
            ....

Then, once some EL expression in JSP page was first evaluated, current Application instance (and, accordingly, its PropertyResolver instance) will be used for all subsequent evaluations of the same expression, even after redeployment of web app and new Application intance creation.

I can workaround this issue by using code like this: 

public Object getValue(Object base, Object property) throws EvaluationException, PropertyNotFoundException {
        javax.faces.el.PropertyResolver actual = 
                FacesContext.getCurrentInstance().getApplication().getPropertyResolver();
        if (this != actual) return actual.getValue(base, property);
        ...

at the start of each methos of PropertyResolver.

Regards,
Alexander",MYFACES-1354
"http://svn.apache.org/viewvc/myfaces/shared/trunk/core/src/main/java/org/apache/myfaces/shared/renderkit/html/HtmlResponseWriterImpl.java?view=markup

Sometimes ResponseWriters are used to supplement other markups and in JBoss Seam's Blog example, we provide RSS feeds:

he following facelets template:
>>
>>   <link>foo</link>
>>
>> generates:
>>
>>   <link/>foo

This is driven by the static set 's_emptyHtmlElements' where the closeIfNecessary() closes elements before they have a chance to be closed by the user of the ResponseWriter.  The logic should be if the endElement is written and there's no body, then use that specialized set to determine if the element should be written as closed or not.

I'm not sure if the logic was setup to correct issues with errant Renderers, but correcting HTML markup should only be handling cases where a closed element will not work (span, div, script, etc)--- not the other way around.",MYFACES-1353
"This is a snippet from my JSF page:

<h:selectOneMenu id=""vertragid"" required=""true"" value=""#{rufnummerEditBean.vertragid}"" onchange=""submit()"" immediate=""true"" valueChangeListener=""#{rufnummerEditBean.changeVertragid}"">
<f:selectItems value=""#{rufnummerEditBean.vertragidList}""/>
</h:selectOneMenu>
<h:selectOneMenu id=""tarifid"" required=""true"" value=""#{rufnummerEditBean.tarifid}"" onchange=""submit()"" immediate=""true"" valueChangeListener=""#{rufnummerEditBean.changeTarifid}"">
<f:selectItems value=""#{rufnummerEditBean.tarifidList}""/>
</h:selectOneMenu>

The associated code is:

public List getVertragidList() {
if(debugInfo) System.out.println(""getVertragidList.1"");
List result=new ArrayList();
for(Vertrag vertrag:vertragDAO.findAll()) {
result.add(new SelectItem(vertrag.getId(),vertrag.getBezeichnung()));
}
if(debugInfo) System.out.println(""getVertragidList.2"");
return result;
}
public void changeVertragid(ValueChangeEvent event) {
Integer newval=(Integer)(event.getNewValue());
if(debugInfo) System.out.println(""changeVertragid ""+newval);
setVertragid(newval);
List listTarifs=getTarifidList();
if(listTarifs.isEmpty()) setTarifid(null);
else setTarifid((Integer)(listTarifs.get(0).getValue()));
}
public Integer getVertragid() {
if(debugInfo) System.out.println(""getVertragid ""+vertragid);
return vertragid;
}
public void setVertragid(Integer vertragid) {
if(debugInfo) System.out.println(""setVertragid ""+vertragid);
this.vertragid = vertragid;
}
public Integer getTarifid() {
if(debugInfo) System.out.println(""getTarifid ""+tarifid);
return tarifid;
}
private void setTarifid(Integer tarifid) {
if(debugInfo) System.out.println(""setTarifid ""+tarifid);
this.tarifid = tarifid;
}

When I choose some value in the combo box Vertragid, the following messages are logged: 

12:50:09,734 INFO  [STDOUT] getVertragidList.1
12:50:10,000 INFO  [STDOUT] getVertragidList.2
12:50:10,015 INFO  [STDOUT] getTarifidList.1 vertragid=10000010
12:50:10,921 INFO  [STDOUT] getTarifidList.2 size=7
12:50:10,937 INFO  [STDOUT] changeVertragid 10000050
12:50:10,937 INFO  [STDOUT] setVertragid 10000050
12:50:10,937 INFO  [STDOUT] getTarifidList.1 vertragid=10000050
12:50:11,015 INFO  [STDOUT] getTarifidList.2 size=0
12:50:11,015 INFO  [STDOUT] setTarifid null
12:50:11,015 INFO  [STDOUT] changeTarifid 10000250
12:50:11,015 INFO  [STDOUT] setTarifid 10000250
12:50:11,625 INFO  [STDOUT] getVertragidList.1
12:50:11,843 INFO  [STDOUT] getVertragidList.2
12:50:11,859 INFO  [STDOUT] getTarifidList.1 vertragid=10000050
12:50:11,953 INFO  [STDOUT] getTarifidList.2 size=0
12:50:11,953 INFO  [STDOUT] getTarifid 10000250

As you can see, although I have only used the combo box Vertragid, also the valueChangeListener of Tarifid gets called. This is, in my opinion, wrong.",MYFACES-1351
"org.apache.myfaces.renderkit.html.HtmlRadioRendererBase is rendering an extra </tr> after each option if layout=""pageDirection"".  The encode end method has a line which says ""if (pageDirectionLayout) writer.endElement(HTML.TR_ELEM);"" even though it hasn't started a <tr>.

This is causing page layout issues for us.",MYFACES-1350
"I have a selectonelistbox inside a datatable. When I submit the form, I get a

17:12:02,640 DEBUG PropertyResolverImpl:177 - Exception while setting property; base with class : TestUnit, property : item1
javax.faces.el.PropertyNotFoundException: Bean: TestUnit, property: item1
	at org.apache.myfaces.el.PropertyResolverImpl.setProperty(PropertyResolverImpl.java:391)
	at org.apache.myfaces.el.PropertyResolverImpl.setValue(PropertyResolverImpl.java:173)
	at org.apache.myfaces.el.ValueBindingImpl.setValue(ValueBindingImpl.java:275)
	at javax.faces.component.UIInput.updateModel(UIInput.java:269)
. . .

for the value of the selectonelistbox. Note, the exception only prints out when the
log4j.properties is set to debug, otherwise I don't get any information why it
doesn't work. Also, I have the same problem with <h:inputhidden>.

test.jsp
================
<%@ taglib uri=""http://java.sun.com/jsf/html"" prefix=""h""%>
<%@ taglib uri=""http://java.sun.com/jsf/core"" prefix=""f""%>

<f:view>
	<html>
		<body>
			<h:form id=""test"">
				<h:dataTable var=""unit"" value=""#{testBean.units}"">
					<h:column>
						<h:outputText value=""#{unit.item2}""></h:outputText>
						<h:selectOneListbox value=""#{unit.item1}"" size=""1"">
							<f:selectItems value=""#{unit.items1}"" />
						</h:selectOneListbox>
					</h:column>
				</h:dataTable>
				<h:commandButton value=""submit"" action=""#{testBean.processForm}"" />
			</h:form>
		</body>
	</html>
</f:view>
================

TestBean.java
================
import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import javax.faces.model.DataModel;
import javax.faces.model.ListDataModel;

public class TestBean implements Serializable {
	private static final long serialVersionUID = 1L;
	private DataModel units;

	public TestBean() {
		List unitList = new ArrayList();
		unitList.add(new TestUnit());
		units = new ListDataModel();
		units.setWrappedData(unitList);
	}

	public DataModel getUnits() {
		return units;
	}

	public void processForm() {
		System.out.println(""processForm"");
	}
}
================

TestUnit.java
================
import java.io.Serializable;
import javax.faces.model.SelectItem;

public class TestUnit implements Serializable {
	private static final long serialVersionUID = 1L;

	public TestUnit() {
		super();
	}

	public String getItem1() {
		return ""1"";
	}

	public String getItem2() {
		return ""2"";
	}

	public SelectItem[] getItems1() {
		SelectItem[] items1 = new SelectItem[5];
		int loop = 0;
		items1[loop] = new SelectItem("""" + loop, """");
		for (loop = 1; loop < 5; loop++) {
			items1[loop] = new SelectItem("""" + loop, """" + loop);
		}
		return items1;
	}
}
================

",MYFACES-1349
"java.util.AbstractMap (as well as AbstractSet, etc)  have very useful default implementations of toString() which are extremely handy for debugging.  org.apache.myfaces.context.servlet.AbstractAttributeMap implements Map directly without providing an implementation of toString().  

Extending AbstractMap (and AbstractSet where appropriate) would be the simplest way to approach this (and could be used to reduce the size of AbstractAttributeMap.)",MYFACES-1348
"javax.faces.application.FacesMessage is declared serializable as it should be, but its top level inner memeber class Severity is not serializable. As a result FacesMessage cannot be serialized, which means that no objects that contain a FacesMessage can be serialized",MYFACES-1347
"I have defined a custom error page and mapped it (among others) to 404 errors in web.xml:
<error-page>
		<error-code>400</error-code>
		<location>/error.jspx</location>
	</error-page>

It works for all addresses except those that match the mapping for the FacesServlet (*.jsf).
When a page that doesn't exist is requested, a standard Tomcat error page is shown instead of the custom error page and the following exception is logged:

2006-06-29 12:50:32,655 ERROR TP-Processor6 [Engine] ApplicationDispatcher[] Servlet.service() for servlet jsp threw exception
java.lang.IllegalStateException: getOutputStream() has already been called for this response
        at org.apache.coyote.tomcat5.CoyoteResponse.getWriter(CoyoteResponse.java:600)
        at org.apache.coyote.tomcat5.CoyoteResponseFacade.getWriter(CoyoteResponseFacade.java:164)
        at org.apache.jasper.runtime.JspWriterImpl.initOut(JspWriterImpl.java:124)
        at org.apache.jasper.runtime.JspWriterImpl.flushBuffer(JspWriterImpl.java:117)
        at org.apache.jasper.runtime.PageContextImpl.release(PageContextImpl.java:191)
        at org.apache.jasper.runtime.JspFactoryImpl.internalReleasePageContext(JspFactoryImpl.java:115)
        at org.apache.jasper.runtime.JspFactoryImpl.releasePageContext(JspFactoryImpl.java:75)
        at org.apache.jsp.error_jspx._jspService(error_jspx.java:185)
        at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:94)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:810)
        at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:324)
        at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:292)
        at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:236)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:810)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:252)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
        at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:696)
        at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:476)
        at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:409)
        at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
        at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:396)
        at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:301)
        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:147)
        at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:104)
        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:118)
        at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:102)
        at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:535)
        at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:102)
        at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:520)
        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
        at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:104)
        at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:520)
        at org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:929)
        at org.apache.coyote.tomcat5.CoyoteAdapter.service(CoyoteAdapter.java:160)
        at org.apache.jk.server.JkCoyoteHandler.invoke(JkCoyoteHandler.java:300)
        at org.apache.jk.common.HandlerRequest.invoke(HandlerRequest.java:374)
        at org.apache.jk.common.ChannelSocket.invoke(ChannelSocket.java:743)
        at org.apache.jk.common.ChannelSocket.processConnection(ChannelSocket.java:675)
        at org.apache.jk.common.SocketConnection.runIt(ChannelSocket.java:866)
        at org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:684)
        at java.lang.Thread.run(Thread.java:534)
2006-06-29 12:50:32,657 ERROR TP-Processor6 [Engine] org.apache.catalina.core.StandardHostValve@77c8d6: Exception Processing ErrorPage[errorCode=404, location=/error.jspx]
java.lang.IllegalStateException: getOutputStream() has already been called for this response
        at org.apache.coyote.tomcat5.CoyoteResponse.getWriter(CoyoteResponse.java:600)
        at org.apache.coyote.tomcat5.CoyoteResponseFacade.getWriter(CoyoteResponseFacade.java:164)
        at org.apache.jasper.runtime.JspWriterImpl.initOut(JspWriterImpl.java:124)
        at org.apache.jasper.runtime.JspWriterImpl.flushBuffer(JspWriterImpl.java:117)
        at org.apache.jasper.runtime.PageContextImpl.release(PageContextImpl.java:191)
        at org.apache.jasper.runtime.JspFactoryImpl.internalReleasePageContext(JspFactoryImpl.java:115)
        at org.apache.jasper.runtime.JspFactoryImpl.releasePageContext(JspFactoryImpl.java:75)
        at org.apache.jsp.error_jspx._jspService(error_jspx.java:185)
        at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:94)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:810)
        at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:324)
        at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:292)
        at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:236)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:810)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:252)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
        at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:696)
        at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:476)
        at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:409)
        at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
        at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:396)
        at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:301)
        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:147)
        at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:104)
        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:118)
        at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:102)
        at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:535)
        at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:102)
        at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:520)
        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
        at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:104)
        at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:520)
        at org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:929)
        at org.apache.coyote.tomcat5.CoyoteAdapter.service(CoyoteAdapter.java:160)
        at org.apache.jk.server.JkCoyoteHandler.invoke(JkCoyoteHandler.java:300)
        at org.apache.jk.common.HandlerRequest.invoke(HandlerRequest.java:374)
        at org.apache.jk.common.ChannelSocket.invoke(ChannelSocket.java:743)
        at org.apache.jk.common.ChannelSocket.processConnection(ChannelSocket.java:675)
        at org.apache.jk.common.SocketConnection.runIt(ChannelSocket.java:866)
        at org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:684)
        at java.lang.Thread.run(Thread.java:534)

Apparently Tomcat cannot get the writer from the response object, because getOutputStream() has already been called on it.",MYFACES-1346
This happens as a result of moving all of the xml files from javax.faces.component and component.html to under main/resources .,MYFACES-1344
"When we add a nested param tag to the an output link  as shown below we get a stack trace on the page

<h:outputLink value=""BusinessObjectPropertySummary"">
   <f:param name=""buisnessObjectClass"" value=""#{businessObjectDetails.className}""/>
   <h:outputText value=""#{businessObjectDetails.name}""/>
</h:outputLink>

java.lang.NullPointerException: charsetName
	at java.io.OutputStreamWriter.<init>(OutputStreamWriter.java:81)
	at java.net.URLEncoder.encode(URLEncoder.java:189)
	at org.apache.myfaces.renderkit.html.HtmlLinkRendererBase.addParameterToHref(HtmlLinkRendererBase.java:428)
	at org.apache.myfaces.renderkit.html.HtmlLinkRendererBase.addChildParametersToHref(HtmlLinkRendererBase.java:360)
	at org.apache.myfaces.renderkit.html.HtmlLinkRendererBase.renderOutputLinkStart(HtmlLinkRendererBase.java:376)
	at org.apache.myfaces.renderkit.html.HtmlLinkRendererBase.encodeBegin(HtmlLinkRendererBase.java:95)
	at javax.faces.component.UIComponentBase.encodeBegin(UIComponentBase.java:307)
	at org.apache.myfaces.renderkit.RendererUtils.renderChild(RendererUtils.java:441)
	at org.apache.myfaces.renderkit.RendererUtils.renderChildren(RendererUtils.java:427)
	at org.apache.myfaces.renderkit.RendererUtils.renderChild(RendererUtils.java:448)
	at org.apache.myfaces.renderkit.html.ext.HtmlTableRenderer.renderColumnBody(HtmlTableRenderer.java:206)
	at org.apache.myfaces.renderkit.html.HtmlTableRendererBase.encodeColumnChild(HtmlTableRendererBase.java:168)
	at org.apache.myfaces.renderkit.html.ext.HtmlTableRenderer.encodeColumnChild(HtmlTableRenderer.java:161)
	at org.apache.myfaces.renderkit.html.HtmlTableRendererBase.encodeInnerHtml(HtmlTableRendererBase.java:154)
	at org.apache.myfaces.renderkit.html.HtmlTableRendererBase.encodeChildren(HtmlTableRendererBase.java:94)
	at org.apache.myfaces.renderkit.html.ext.HtmlTableRenderer.encodeChildren(HtmlTableRenderer.java:57)
	at javax.faces.component.UIComponentBase.encodeChildren(UIComponentBase.java:319)
	at com.sun.facelets.tag.jsf.ComponentSupport.encodeRecursive(ComponentSupport.java:234)
	at com.sun.facelets.tag.jsf.ComponentSupport.encodeRecursive(ComponentSupport.java:239)
	at com.sun.facelets.tag.jsf.ComponentSupport.encodeRecursive(ComponentSupport.java:239)
	at com.sun.facelets.tag.jsf.ComponentSupport.encodeRecursive(ComponentSupport.java:239)
	at com.sun.facelets.tag.jsf.ComponentSupport.encodeRecursive(ComponentSupport.java:239)
	at com.sun.facelets.FaceletViewHandler.renderView(FaceletViewHandler.java:554)
	at com.peace.externalInteraction.web.jsf.PeaceFaceletViewHandler.renderView(PeaceFaceletViewHandler.java:62)
	at org.apache.myfaces.adfinternal.application.ViewHandlerImpl.renderView(ViewHandlerImpl.java:175)
	at org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:352)
	at javax.faces.webapp.FacesServlet.service(FacesServlet.java:107)
	at org.apache.myfaces.webapp.MyFacesServlet.service(MyFacesServlet.java:74)
	at com.peace.externalInteraction.web.OmniServlet.service(OmniServlet.java:78)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:252)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
	at org.apache.myfaces.adfinternal.webapp.AdfFacesFilterImpl._invokeDoFilter(AdfFacesFilterImpl.java:320)
	at org.apache.myfaces.adfinternal.webapp.AdfFacesFilterImpl._doFilterImpl(AdfFacesFilterImpl.java:289)
	at org.apache.myfaces.adfinternal.webapp.AdfFacesFilterImpl.doFilter(AdfFacesFilterImpl.java:213)
	at org.apache.myfaces.adf.webapp.AdfFacesFilter.doFilter(AdfFacesFilter.java:90)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:202)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
	at org.apache.myfaces.component.html.util.ExtensionsFilter.doFilter(ExtensionsFilter.java:122)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:202)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
	at com.peace.externalInteraction.web.jsf.ViewModeFilter.doFilter(ViewModeFilter.java:29)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:202)",MYFACES-1342
"I think a subtle logic bug crept into NavigationHandlerImpl handling on wildcard matches during this revision:

http://svn.apache.org/viewvc/myfaces/core/trunk/impl/src/main/java/org/apache/myfaces/application/NavigationHandlerImpl.java?r1=410138&r2=414102&diff_format=h

Here is the scenario:

there are two navigation rules:

    <navigation-rule>
        <from-view-id>/foo.jsp</from-view-id>
        <navigation-case>
            <from-outcome>success</from-outcome>
            <to-view-id>/bar.jsp</to-view-id>
        </navigation-case>
    </navigation-rule>

    <navigation-rule>
        <navigation-case>
            <from-outcome>foobar</from-outcome>
            <to-view-id>/foobar.jsp</to-view-id>
        </navigation-case>
    </navigation-rule>

Assuming you are in the view /foo.jsp and your action method returns ""foobar"" you would expect to end up matching on the wildcard navigation rule and be sent to /foobar.jsp.

It looks like the logic on lines 71-72 and 75-79 are erroneous and should be removed as they are present in the getNavigationCase(...) method called on line 73. The net effect of the problem is that even if you find a good match from line 73, if your viewId returns a list from the casesMap the code ends up overwriting the previously determined navigation case with a null - this send you right back to rerendering the view as if you nav case wasn't there at all.

I took out the lines in question and tested locally and everything seems to work for me...

-Erik


Diff:
Index: core/impl/src/main/java/org/apache/myfaces/application/NavigationHandlerImpl.java
===================================================================
--- core/impl/src/main/java/org/apache/myfaces/application/NavigationHandlerImpl.java   (revision 415098)
+++ core/impl/src/main/java/org/apache/myfaces/application/NavigationHandlerImpl.java   (working copy)
@@ -68,18 +68,8 @@
             return;
         }

-        String viewId = facesContext.getViewRoot().getViewId();
-        Map casesMap = getNavigationCases(facesContext);
         NavigationCase navigationCase = getNavigationCase(facesContext, fromAction, outcome);

-        List casesList = (List)casesMap.get(viewId);
-        if (casesList != null)
-        {
-            // Exact match?
-            navigationCase = calcMatchingNavigationCase(casesList, fromAction, outcome);
-        }
-
-
",MYFACES-1340
"When using component binding in a managed bean, Tomcat throws exceptions at startup or shutdown because a lot of classes in the impl are not Serializable.
These are some of the classes that are cause this exception:
core\impl\src\main\java\org\apache\myfaces\el\ValueBindingImpl.java
core\impl\src\main\java\org\apache\myfaces\el\MethodBindingImpl.java
core\impl\src\main\java\org\apache\myfaces\application\ActionListenerImpl.java
core\impl\src\main\java\org\apache\myfaces\application\ApplicationImpl.java
core\impl\src\main\java\org\apache\myfaces\config\impl\digester\elements\Component.java
core\impl\src\main\java\org\apache\myfaces\config\impl\digester\elements\Attribute.java
core\impl\src\main\java\org\apache\myfaces\config\impl\digester\elements\Application.java
core\impl\src\main\java\org\apache\myfaces\config\impl\digester\elements\Factory.java
core\impl\src\main\java\org\apache\myfaces\config\impl\digester\elements\FacesConfig.java
core\impl\src\main\java\org\apache\myfaces\config\impl\digester\elements\Converter.java

There are more though, I would guess most classes in those packages should be made serializable.",MYFACES-1339
"I'm using MyFaces 1.1.4 within a portlet and I'm noticing that MyFaces is being initialized twice.  Its causing a warning because multiple copies of my managed beans are being created.  Here is the log output, I'm using Liferay 4.0.0 and tomcat 5.5.17. 

20:52:52,517 INFO  [com.liferay.portal.deploy.AutoDeployPortletListener] Portlets for \home\liferay\deploy\MyMessagesPortlet.war copied successfully 
20:53:00,122 INFO  [org.apache.catalina.startup.HostConfig] Reloading context [/MyMessagesPortlet] 
DEBUG [org.apache.myfaces.webapp.StartupServletContextListener.initFaces(60)] Initializing MyFaces 
INFO  [org.apache.myfaces.config.FacesConfigurator.feedStandardConfig(151)] Reading standard config org/apache/myfaces/resource/standard-faces-config.xml 
INFO  [org.apache.myfaces.config.FacesConfigurator.feedClassloaderConfigurations(250)] Reading config jar:file:/D:/liferay4/webapps/MyMessagesPortlet/WEB-INF/lib/jsf-facelets.jar!/META-INF/faces-config.xml 
INFO  [org.apache.myfaces.config.FacesConfigurator.feedClassloaderConfigurations(250)] Reading config jar:file:/D:/liferay4/webapps/MyMessagesPortlet/WEB-INF/lib/tomahawk-1.1.2-SNAPSHOT.jar!/META-INF/faces-config.xml 
INFO  [org.apache.myfaces.config.FacesConfigurator.feedWebAppConfig(411)] Reading config /WEB-INF/faces-config.xml 
INFO  [org.apache.myfaces.renderkit.html.HtmlRenderKitImpl.addRenderer(104)] Overwriting renderer with family = javax.faces.Command rendererType = javax.faces.Button renderer class = org.apache.myfaces.renderkit.html.jsf.DummyFormHtmlButtonRenderer 
INFO  [org.apache.myfaces.renderkit.html.HtmlRenderKitImpl.addRenderer(104)] Overwriting renderer with family = javax.faces.Command rendererType = javax.faces.Link renderer class = org.apache.myfaces.renderkit.html.jsf.DummyFormHtmlLinkRenderer 
INFO  [org.apache.myfaces.webapp.StartupServletContextListener.initFaces(96)] ServletContext 'D:\liferay4\webapps\MyMessagesPortlet\' initialized. 
20:53:02,575 INFO  [com.liferay.portal.deploy.HotDeployPortletListener] Registering portlets for MyMessagesPortlet 
20:53:02,606 INFO  [com.liferay.portal.deploy.HotDeployPortletListener] Portlets for MyMessagesPortlet registered successfully 
Loading jar:file:/D:/liferay4/liferay/WEB-INF/lib/portal-ejb.jar!/portal.properties for liferay.com 
Loading file:/D:/liferay4/liferay/WEB-INF/classes/portal-ext.properties for liferay.com 
Loading jar:file:/D:/liferay4/liferay/WEB-INF/lib/portal-ejb.jar!/cache-single-vm.properties 
DEBUG [com.teradata.portlet.MultiModePortlet.init(32)] View page = /view.xhtml 
DEBUG [com.teradata.portlet.MultiModePortlet.init(33)] Edit page = /edit.xhtml 
DEBUG [com.teradata.portlet.MultiModePortlet.init(34)] Help page = /help.xhtml 
DEBUG [org.apache.myfaces.portlet.MyFacesGenericPortlet.initMyFaces(178)] Initializing MyFaces 
INFO  [org.apache.myfaces.config.FacesConfigurator.feedStandardConfig(151)] Reading standard config org/apache/myfaces/resource/standard-faces-config.xml 
INFO  [org.apache.myfaces.config.FacesConfigurator.feedClassloaderConfigurations(250)] Reading config jar:file:/D:/liferay4/webapps/MyMessagesPortlet/WEB-INF/lib/jsf-facelets.jar!/META-INF/faces-config.xml 
INFO  [org.apache.myfaces.config.FacesConfigurator.feedClassloaderConfigurations(250)] Reading config jar:file:/D:/liferay4/webapps/MyMessagesPortlet/WEB-INF/lib/tomahawk-1.1.2-SNAPSHOT.jar!/META-INF/faces-config.xml 
INFO  [org.apache.myfaces.config.FacesConfigurator.feedWebAppConfig(411)] Reading config /WEB-INF/faces-config.xml 
INFO  [org.apache.myfaces.renderkit.html.HtmlRenderKitImpl.addRenderer(104)] Overwriting renderer with family = javax.faces.Command rendererType = javax.faces.Button renderer class = org.apache.myfaces.renderkit.html.jsf.DummyFormHtmlButtonRenderer 
INFO  [org.apache.myfaces.renderkit.html.HtmlRenderKitImpl.addRenderer(104)] Overwriting renderer with family = javax.faces.Command rendererType = javax.faces.Link renderer class = org.apache.myfaces.renderkit.html.jsf.DummyFormHtmlLinkRenderer 
INFO  [org.apache.myfaces.renderkit.RenderKitFactoryImpl.addRenderKit(54)] RenderKit with renderKitId 'HTML_BASIC' was replaced. 
WARN  [org.apache.myfaces.config.FacesConfigurator.configureRuntimeConfig(588)] More than one managed bean w/ the name of 'messages' - only keeping the last 
WARN  [org.apache.myfaces.config.FacesConfigurator.configureRuntimeConfig(588)] More than one managed bean w/ the name of 'form' - only keeping the last 

Both org.apache.myfaces.webapp.StartupServletContextListener.initMyFaces() and org.apache.myfaces.portlet.MyFacesGenericPortlet.initMyFaces() check a context attribute to see if MyFaces is initialized before invoking org.apache.myfaces.config.FacesConfigurator.configure() but both actually check and set a different attribute name. 

StartupServletContextListener uses: 

static final String FACES_INIT_DONE 
            = StartupServletContextListener.class.getName() + "".FACES_INIT_DONE""; 


MyFacesGenericPortlet uses: 

protected static final String FACES_INIT_DONE = 
        MyFacesGenericPortlet.class.getName() + "".FACES_INIT_DONE"";     


I find that if I override MyFacesGenericPortlet.initMyFaces() to do nothing, everythings works and I avoid the duplicate managed bean warnings. 
",MYFACES-1338
"In jsp page I have

<h:selectOneRadio>
<f:selectItem itemLabel=""Y"" itemValue=""Y""/>
<f:selectItem itemLabel=""M"" itemValue=""M""/>
<f:selectItem itemLabel=""D"" itemValue=""D""/>
<f:selectItem itemLabel=""F"" itemValue=""F"" id=""optionId""/>
</h:selectOneRadio>

It is rendered as set of <input type=""radio"" /> but there is no id attribute.
It can be usefull when you want to check state of this radio via java-script.

MyFaces should render those id attributes in such radio and checkBox elements.",MYFACES-1337
"incorrect html code generation:

please, look on myfaces code and then on incorrect html code:

1) double html tag, second 6 lines after first one.
2) a part of  table (3 lines) before HEAD tag 
3) closed HTML tag 

myfaces code:
---------------------------------------------------------------------------------------------------------------------------------
<%@ page contentType=""text/html; charset=ISO-8859-1"" %>

<%@ taglib uri=""http://java.sun.com/jsf/html"" prefix=""h"" %>
<%@ taglib uri=""http://java.sun.com/jsf/core"" prefix=""f"" %>

<html>
<link href=""css/ie.css"" rel=""stylesheet"" />

<body bgcolor=""#FFFFFF"" text=""#000000"" topmargin=""0"" leftmargin=""0"" marginheight=""0"" marginwidth=""0"">

<f:view>

<table cellpadding=""0"" cellspacing=""0"" style="" height: 100%;"">
<tr style=""height: 55px;"">
	<td><%@include file=""logo_part.html""%></td>
	<td style=""background-color: #cccccc; width: 100%;""><%@include file=""header_part.jsp""%></td>
</tr>

<tr>
	<td style=""background-color: #cccccc; vertical-align: top;""><%@include file=""monthly_reporting_part.jsp"" %> </td>
.....
------------------------------------------------------------------------------------------------------------------------------------------------

generated html code:

<html>
<link href=""css/ie.css"" rel=""stylesheet"" />

<body bgcolor=""#FFFFFF"" text=""#000000"" topmargin=""0"" leftmargin=""0"" marginheight=""0"" marginwidth=""0"">

<table cellpadding=""0"" cellspacing=""0"" style="" height: 100%;"">
     <tr style=""height: 55px;"">
	<td><html>

<head>
<meta http-equiv=""Content-Type"" content=""text/html; charset=iso-8859-1"">
</head>

<body bgcolor=""#FFFFFF"" text=""#000000"" topmargin=""0"" leftmargin=""0"" bottommargin=""0"" rightmargin=""0"" marginheight=""0"" marginwidth=""0"">
<img src=""images/p_head.gif"" width=""163"" height=""55"" border=""0"">
</body>
</html>
</td>
.....
",MYFACES-1336
There is no link on myfaces-all.jar that mentioned in documentation from the download  area of myfaces site.,MYFACES-1335
There is no link on bug tracking system from myfaces site pages. therefore users often post bugs in dev. mail list and should spend additional time in order to find link on bug tracking system. ,MYFACES-1334
"there is no link on examples from download page, users should seek thru the whole site or even thru google",MYFACES-1333
"The TLD documents ""percentage"" as an allowable value for the attribute ""type"" of <f:convertNumber>.  This value throws the following exception:
SEVERE: Servlet.service() for servlet jsp threw exception
javax.faces.convert.ConverterException: Cannot get NumberFormat, illegal type percentage
	at javax.faces.convert.NumberConverter.getNumberFormat(NumberConverter.java:162)
	at javax.faces.convert.NumberConverter.getAsString(NumberConverter.java:117)
	at org.apache.myfaces.shared_impl.renderkit.RendererUtils.getStringValue(RendererUtils.java:251)
	at org.apache.myfaces.shared_impl.renderkit.html.HtmlTextRendererBase.renderOutput(HtmlTextRendererBase.java:69)
	at org.apache.myfaces.shared_impl.renderkit.html.HtmlTextRendererBase.encodeEnd(HtmlTextRendererBase.java:57)
	at javax.faces.component.UIComponentBase.encodeEnd(UIComponentBase.java:536)


The implementation is expecting ""percent""

Which is correct?",MYFACES-1332
"The Value attribute in <f:selectItem> is documented as not required, but the following is thrown when the attibute is not present:

javax.faces.FacesException: SelectItem with no value
	org.apache.myfaces.context.servlet.ServletExternalContextImpl.dispatch(ServletExternalContextImpl.java:421)
	org.apache.myfaces.application.jsp.JspViewHandlerImpl.renderView(JspViewHandlerImpl.java:234)
	org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:352)
	javax.faces.webapp.FacesServlet.service(FacesServlet.java:107)
	org.apache.myfaces.component.html.util.ExtensionsFilter.doFilter(ExtensionsFilter.java:122)

",MYFACES-1331
"
The default activation of the 'myfaces' profile currently depends on the fact that no other profile is being activated automatically.  See MNG-2136.

It would be better to activate 'myfaces' based on the absence of a system property, and then the RI with a particular value.  (Thanks to Roland Asmann on users@maven for this suggestion.)

",MYFACES-1330
"I'm not sure if this is the right place to post, but here goes...

I have a JSF application that I've been working on using Sun's reference implementation 1.1.  For various reasons, I thought I'd try and upgrade to MyFaces 1.1.3.   I can get some pages to display, so I'm assuming my configuration is correct. I'm having some problems however with on page and bean in particular.  I am seeing the following exception...

javax.servlet.ServletException: javax.servlet.jsp.JspException: Bean: java.lang.String, property: optionName


The jsp/jsf code snippet is as follows...
<f:subview id=""main-menu"">
    <h:form>
        <t:dataList var=""option"" value=""#{MenuConstants.menuOptions}"" layout=""unorderedList"">
                <h:commandLink action=""#{option.display}"">
                     <h:outputText value=""#{option.optionName}""/>
                </h:commandLink>
        </t:dataList>
    </h:form>
</f:subview> 


It looks like the code is getting the list correctly, but errors in converting the type.  Here is the MenuConstants get/set methods
    public List<MenuOptionMB> getMenuOptions() {
        return menuOptions;
    }

    public void setMenuOptions(List<MenuOptionMB> menuOptions) {
        this.menuOptions = menuOptions;
    }


And here is the MenuOptionMB get.set for the ""optionName""
    public String getOptionName() {
        return optionName;
    }

    public void setOptionName(String optionName) {
        this.optionName = optionName;
    }


Shouldn't the exception have the ""MenuOptionMB "" class name in the bean instead of ""String""???  Like I said before, this worked before using Sun's reference implementation.

I would appreciate any help or advice.  Thanks in advance!


Here is the full stack trace...
javax.servlet.ServletException: javax.servlet.jsp.JspException: Bean: java.lang.String, property: optionName
	at javax.faces.webapp.FacesServlet.service(FacesServlet.java:152)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:237)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:157)
	at com.mycompany.ui.servlet.filter.MyFilter.doFilter(MyFilter.java:33)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:186)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:157)
	at org.apache.myfaces.webapp.filter.ExtensionsFilter.doFilter(ExtensionsFilter.java:144)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:186)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:157)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:214)
	at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:104)
	at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:520)
	at org.apache.catalina.core.StandardContextValve.invokeInternal(StandardContextValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:152)
	at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:104)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:462)
	at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:102)
	at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:520)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:137)
	at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:104)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:118)
	at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:102)
	at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:520)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
	at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:104)
	at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:520)
	at org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:929)
	at org.apache.coyote.tomcat5.CoyoteAdapter.service(CoyoteAdapter.java:160)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:799)
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.processConnection(Http11Protocol.java:705)
	at org.apache.tomcat.util.net.TcpWorkerThread.runIt(PoolTcpEndpoint.java:577)
	at org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:683)
	at java.lang.Thread.run(Thread.java:595)",MYFACES-1329
"The problem seems to be in javax.faces.component._SelectItemsUtil.matchValue(FacesContext context, Object value, Iterator selectItemsIter, _ValueConverter converter) method.

Line 63-72:
                Object itemValue = item.getValue();
                if(converter != null && itemValue instanceof String)
                {
                    itemValue = converter.getConvertedValue(context, (String)itemValue);
                }
                if (value==itemValue || value.equals(itemValue))
                {
                    return true;
                }

If item's value is java.lang.String then this code does duplicate conversion making matchValue() return false and subsequently resulting in error in calling method (validateValue() in javax.faces.component.UISelectOne and javax.faces.component.UISelectMany).",MYFACES-1328
... should show off invokeOnComponent and content interweaving.,MYFACES-1327
adding metadata makes it much more convenient to use MyFaces with specialized JSF editors.,MYFACES-1326
"For now, comment out the following section in the poms, then add the notifiers via the continuum web interface.

<ciManagement>
    <system>continuum</system>
    <notifiers>
      <notifier>
        <configuration>
          <address>commits@myfaces.apache.org</address>
        </configuration>
      </notifier>
    </notifiers>
  </ciManagement>",MYFACES-1325
"updating ""getting started"" to avoid mailing list trafic",MYFACES-1324
"There is a command link on a page that toggles between two images.

JSP source

<h:commandLink actionListener=""#{result.sortableHitSet.sortBy}"">
        <f:param name=""sortByColumn"" value=""text""/>
        <f:param name=""sortOrder"" value=""#{result.sortableHitSet.sortedBy['text']}""/>
        <ivy:sortImage value=""#{result.sortableHitSet.sortedBy['text']}""/>
</h:commandLink>

The whole information is rendered in the right way to the browser
  - there is a hidden field for each command representing the right value.
		<input type=""hidden"" name=""sortByColumn"" />
		<input type=""hidden"" name=""sortOrder"" />
  - there is some javascript to update the fields on submit
                    document.forms['test'].elements['sortByColumn'].value='name';
                    document.forms['test'].elements['sortOrder'].value='1';


BUT:
If i click on the Link the action is triggered, but the param (childs) of my component are not reflecting the values from the page. For the one with the value binding, the call of getValue() results in reevaluating of the value binding on the server.
If you think about a 'back-button-scenario' this breaks my applikation.
And why there are the hidden fields for the parameters, if the values are ignored.
",MYFACES-1323
"UICommand, UIComponentBase and UIInput have depenencies on impl.  This creates a circular dependency, which maven does not allow.",MYFACES-1322
"FactoryFinderTest and UIComponentBaseTest  were excluded in order to make the jsf12 branch build with ""mvn clean install"".",MYFACES-1321
"I have removed Myfaces889TestCase from the mavan test sequence in order to get something up and running.  Later, this test will should be brought back into the fold.",MYFACES-1320
org.apache.myfaces.COMPRESS_STATE_IN_CLIENT in web.xml,MYFACES-1319
Compression should precede encryption.,MYFACES-1318
"I am setting the time zone attribute for the tag <f:convertDataTime> from a backing bean.  This causes the following
ClassCastException in core 1.1.3

Caused by: java.lang.ClassCastException
        at org.apache.myfaces.shared_impl.taglib.core.ConvertDateTimeTagBase.setConverterTimeZone(ConvertDateTimeTagBase.java:165)
        at org.apache.myfaces.shared_impl.taglib.core.ConvertDateTimeTagBase.createConverter(ConvertDateTimeTagBase.java:85)
        at javax.faces.webapp.ConverterTag.doStartTag(ConverterTag.java:63)

If I hard code the time zone in the attribute, i.e. timeZone=""GMT-05:00"", no exception is thrown. 

When I changed my method getTimeZone() to return a TimeZone, things worked as expected.

I guess my confusion comes from the TLD Documentation, http://myfaces.apache.org/impl/tlddoc/index.html.

  ""When this value is a value-binding to a TimeZone instance, that timezone is used. Otherwise
   this value is treated as a String containing a timezone id, ie as the ID parameter of method
   java.util.TimeZone.getTimeZone(String).""

I read this to mean that the converter would converter would treat String value-binding the same way
as a String value.  Below is a coded version of my expectation.

  if (UIComponentTag.isValueReference(value))
  {
    ValueBinding vb = facesContext.getApplication().createValueBinding(value);
    TimeZone timeZone;
    Object value = vb.getValue(facesContext);
    if (value instanceof TimeZone)
    {
      timeZone = (TimeZone) value;
    }
    else
    {
      timeZone = TimeZone.getTimeZone(value.toString())
    }
    converter.setTimeZone(timeZone);
  }


From  Matthias Wessendorf:
Paul- 

good catch. You are right. RI TLD Doc says the same.

Create a bug for MyFaces Core Jira project and asign the ticket please to me !
(matzew)

Thanks,
Matthias 
",MYFACES-1317
"isIdValid in UIComponentBase.java is called for every component that you dynamically create.
It checks for i == 0 within a loop which can be done once outside of the loop to improve its performance.",MYFACES-1316
"The documention in link http://wiki.apache.org/myfaces/Websphere_Installation has some wrong information:

1) You couldn´t remove JSF files provided by IBM and replace with MyFaces API, WebSphere has implicit dependency for the listed files.
Websphere 6.0 won´t never be 100% compatible with JSF 1.0 while IBM doesn´t launch an update to JSF 1.1. More information in the link: http://publib.boulder.ibm.com/infocenter/wasinfo/v6r0/topic/com.ibm.websphere.nd.doc/info/ae/ae/cweb_javaserver_faces.html

2) In the section Websphere 6 Installation Guide (without removing IBM jars), if you copy to lib folder of webapp the file myfaces-api-1.1.3.jar, the home of simple demo application, if you remove it the links for sample components are show !

For more information for WebSphere 6.1 JSF support:
http://publib.boulder.ibm.com/infocenter/wasinfo/v6r1/topic/com.ibm.websphere.nd.doc/info/ae/ae/cweb_javaserver_faces.html

If somebody need some tests with WebSphere 5.1.x, 6.0.x  or 6.1.x let me know !!!",MYFACES-1315
"At the least, the structure and values should be processed in tandem.",MYFACES-1314
"I have 3 beans: beanA, beanB (ArrayList) and beanC, i add some items on beanB from beanA and i need remove few others from beanC, but when i try remove from beanC i'm getting a IndexOutOfBounds exception.

beanA and beanC is at request scope and beanB is at session scope.

Look this code:

public beanA
{
     private ArrayList beanB;

     public beanA()
     {

     }

     public String addItem()
     {
         if(beanB == null)
             setBeanB(new ArrayList());

         beanB.add(""newItem"");
         return null;
     }

     public void setBeanB(ArrayList beanB)
     {
          this.beanB = beanB;
     }
}


public beanC
{
     private ArrayList beanB;

     public beanC()
     {

     }

     public void removeItem(ActionEvent event)
     {
         beanB.remove(myDataTable.getRowIndex());
         return null;
     }

     public void setBeanB(ArrayList beanB)
     {
          this.beanB = beanB;
     }
}

i haven't added get/set stuff of myDataTable to keep the example simple.",MYFACES-1312
"While using MyFaces in a portlet at the Weblogic 8.1 SP5 Portal Server the navigation doesn't work in the right way:

per ""FacesContext.getCurrentInstance().getExternalContext().getRequestParameterMap()"" I can't get the request parameters
(submitted via commandlink/commandbutton parameter or another parameter via hidden field f.e.) 

If I added an actionlistener to the commandlink (additionally) TWO
requests were submitted:
The first with all the correct params and the second without these
params...
I've tried the whole thing with client- and server-save-state: no
differences.

Looking in the internals of the requestParameterMap I saw that my wanted
params are only request params but not portlet request params.

This problem with the two requests were solved putting my backing-bean into the session. ",MYFACES-1311
"i am migrating my website based on jsf myfaces from JOnAS to WebLogic 8.1 sp 5 and i have still this issue :
i have downloaded  the latest snapshot

myfaces-core-1.1.4-snapshot
tomahawk-1.1.3-snapshot

java.lang.IllegalStateException: strict servlet API: cannot call getOutputStream() after getWriter()
        at weblogic.servlet.internal.ServletResponseImpl.getOutputStream(ServletResponseImpl.java:162)
        at org.apache.myfaces.webapp.filter.ExtensionsFilter.doFilter(ExtensionsFilter.java:176)
        at weblogic.servlet.internal.FilterChainImpl.doFilter(FilterChainImpl.java:27)
        at simpa.web.utils.AuthorizationFilter.doFilter(AuthorizationFilter.java:58)
        at weblogic.servlet.internal.FilterChainImpl.doFilter(FilterChainImpl.java:27)
        at weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.run(WebAppServletContext.java:6987)
        at weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:321)
        at weblogic.security.service.SecurityManager.runAs(SecurityManager.java:121)
        at weblogic.servlet.internal.WebAppServletContext.invokeServlet(WebAppServletContext.java:3892)
        at weblogic.servlet.internal.ServletRequestImpl.execute(ServletRequestImpl.java:2766)
        at weblogic.kernel.ExecuteThread.execute(ExecuteThread.java:224)
        at weblogic.kernel.ExecuteThread.run(ExecuteThread.java:183)

it is critical for us as the experimentation should start next week
thanks in advance

Bruno
",MYFACES-1310
"I got the error as follow:
javax.faces.el.PropertyNotFoundException: Bean: com.test.MyList, property: currentPage
	at org.apache.myfaces.el.PropertyResolverImpl.setProperty(PropertyResolverImpl.java:353)
	at org.apache.myfaces.el.PropertyResolverImpl.setValue(PropertyResolverImpl.java:148)
I had defined the currentPage at the super class BaseList and provided getter and setter.I think myface should know it .",MYFACES-1309
" Martin Denham 	wrote,
=========
Here is the error:
com.sun.facelets.FaceletViewHandler handleRenderException
SEVERE: Error Rendering View[/user/test.xhtml]
java.lang.IllegalArgumentException: Component submit must be embedded in an form

       at org.apache.myfaces.shared_impl.renderkit.html.HtmlButtonRendererBase.buildOnClick(HtmlButtonRendererBase.java:173)
       at org.apache.myfaces.shared_impl.renderkit.html.HtmlButtonRendererBase.encodeEnd(HtmlButtonRendererBase.java:120)
       at javax.faces.component.UIComponentBase.encodeEnd(UIComponentBase.java:536)
=========

org.apache.myfaces.shared.util._ComponentUtils.findNestingForm() needs to support af:form.  One possibility -- Use component-family instead of 'instanceof UIForm.'



",MYFACES-1308
"Please, please give us back the source distribution. We really need this here.
",MYFACES-1307
"While using JSF-RI along with tomahawk 1.1.3 snapshot, I got the following errors:

Error in using tag library uri='http://myfaces.apache.org/tomahawk' prefix='t': The Tag class 'org.apache.myfaces.custom.crosstable.HtmlColumnsTag' has no setter method corresponding to TLD declared attribute 'groupBy', (JSP 1.1 spec, 5.4.1) 

Please advise.

Thanks.",MYFACES-1306
"A confusing error message

The exception 

java.lang.IllegalArgumentException: Class org.jboss.seam.jsf.SeamNavigationHandler is no javax.faces.application.NavigationHandler

was thrown because the class loader couldn't find org.jboss.seam.jsf.SeamNavigationHandler not because it doesn't extend/implement. ",MYFACES-1305
"org.apache.myfaces.config.impl.digester.DigesterFacesConfigDispenserImpl uses HashMap instance for registered renderkits. But when calling method getRenderKitIds() returned render kid ids are in unexpected order - HTML_BASIC is not the first! 

This doesnt work with ADF faces, because creating oracle.adfinternal.view.faces.renderkit.core.CoreRenderKit requires HTML_BASIC already registered!",MYFACES-1304
"When you have input fields in your jsp page, and you submit this page, you receive the following message:

WARNING: There should always be a submitted value for an input if it is rendered, its form is submitted, and it is not disabled or read-only. 

My example page:

<%@ page session=""false"" %>
<%@ taglib uri=""http://java.sun.com/jsf/html"" prefix=""h""%>

<h:messages showDetail=""true"" showSummary=""true"">
	<h:outputText value=""Esta es la very simple Tiles example."" />
	<h:inputText required=""true"" />
	<h:commandLink action=""pagina2"" value=""pagina2"" />
</h:messages>

As you notice, input field is required, it isnt read-only, or disabled. If I add a backing bean, this one dont receive field values.

App doesnt throw any exception, and allows me to navigate with no problem. It only happens with myfaces tiles.

I think is the same issue than myfaces-262.



",MYFACES-1303
"Display class and value of object during a failed conversion attempt in IllegalArgumentException so it is more obvious why the error occurred.

Add after ""Value is no String"" the string ""(class="" + value.getClass().getName() + "", value="" + value + "") """,MYFACES-1302
"This causes an IllegalStateException about ""duplicate ids"" to pop-up when navigating from one to another instance of the same view, while using component binding at the same time. If you look at the code in ApplicationImpl, starting line 430, you see that it actually fails to archive anything, apart from a fancy log message per stale component it finds. Patch is attached.",MYFACES-1301
"I have added two convertes in my library and added the following setting in faces-config.xml 
<converter>
    <converter-id>javax.faces.DateTime</converter-id>
    <converter-class>se.pythagoras.converter.jsfDatetimeconverter</converter-class>
  </converter>

    <converter>
        <converter-for-class>java.util.Date</converter-for-class>
       <converter-class>se.pythagoras.converter.jsfDatetimeconverter</converter-class>
    </converter>
The first one will replace the one added by myfaces but the one added for java.util.Date will not. If I trace the DigisterFacesConfigDispenserimpl class where convertes are added then I can see that the above defined will be 
added before the system one. The output from the adding loop is, ignore the AANNN output just to find the output
AAANNN javax.faces.BigDecimal;javax.faces.convert.BigDecimalConverter;null
AAANNN javax.faces.BigInteger;javax.faces.convert.BigIntegerConverter;null
AAANNN javax.faces.Boolean;javax.faces.convert.BooleanConverter;null
AAANNN javax.faces.Byte;javax.faces.convert.ByteConverter;null
AAANNN javax.faces.Character;javax.faces.convert.CharacterConverter;null
AAANNN javax.faces.DateTime;javax.faces.convert.DateTimeConverter;null
AAANNN javax.faces.Double;javax.faces.convert.DoubleConverter;null
AAANNN javax.faces.Float;javax.faces.convert.FloatConverter;null
AAANNN javax.faces.Integer;javax.faces.convert.IntegerConverter;null
AAANNN javax.faces.Long;javax.faces.convert.LongConverter;null
AAANNN javax.faces.Number;javax.faces.convert.NumberConverter;null
AAANNN javax.faces.Short;javax.faces.convert.ShortConverter;null
AAANNN null;javax.faces.convert.BooleanConverter;java.lang.Boolean
AAANNN null;javax.faces.convert.ByteConverter;java.lang.Byte
AAANNN null;javax.faces.convert.CharacterConverter;java.lang.Character
AAANNN null;javax.faces.convert.DoubleConverter;java.lang.Double
AAANNN null;javax.faces.convert.FloatConverter;java.lang.Float
AAANNN null;javax.faces.convert.IntegerConverter;java.lang.Integer
AAANNN null;javax.faces.convert.LongConverter;java.lang.Long
AAANNN null;javax.faces.convert.ShortConverter;java.lang.Short
AAANNN javax.faces.DateTime;se.pythagoras.converter.jsfDatetimeconverter;null
AAANNN null;se.pythagoras.converter.jsfDatetimeconverter;java.util.Date
AAANNN null;javax.faces.convert.BigDecimalConverter;java.math.BigDecimal
AAANNN null;javax.faces.convert.BigIntegerConverter;java.math.BigInteger
AAANNN null;javax.faces.convert.DateTimeConverter;java.util.Date
AAANNN null;org.apache.myfaces.convert.StringArrayConverter;[Ljava.lang.String;
AAANNN null;org.apache.myfaces.custom.fileupload.UploadedFileConverter;org.apache.myfaces.custom.fileupload.UploadedFile

The output is added into the feed method

Regards 
Ufo",MYFACES-1300
"<f:facet name=""header""/> doesn't allow multiple <t:outputText> inside

multiple <t:outputText> inside <f:facet name=""header""> cause exception


    [java] WARN   SL: javax.servlet.ServletException: facet 'header' already has a child associated. current associated component id: eventDetailsForm:productInfoView:_idJsp5 class:org.apache.myfaces.component.html.ext.HtmlOutputText
    [java]     at javax.faces.webapp.FacesServlet.service(FacesServlet.java:152)
    [java]     at com.webapp.framework.web.faces.ExtFacesServlet.service(ExtFacesServlet.java:31)
    [java]     at weblogic.servlet.internal.StubSecurityHelper$ServletServiceAction.run(StubSecurityHelper.java:214)
    [java]     at weblogic.servlet.internal.StubSecurityHelper.invokeServlet(StubSecurityHelper.java:120)
    [java]     at weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:272)
    [java]     at weblogic.servlet.internal.TailFilter.doFilter(TailFilter.java:26)
    [java]     at weblogic.servlet.internal.FilterChainImpl.doFilter(FilterChainImpl.java:42)
    [java]     at leh.efw.shared.filter.LoggingFilter.doFilter(LoggingFilter.java:113)
    [java]     at weblogic.servlet.internal.FilterChainImpl.doFilter(FilterChainImpl.java:42)
    [java]     at org.apache.myfaces.webapp.filter.ExtensionsFilter.doFilter(ExtensionsFilter.java:144)
    [java]     at weblogic.servlet.internal.FilterChainImpl.doFilter(FilterChainImpl.java:42)
",MYFACES-1299
"There is a problem in the code of javax.faces.component.UIInput.validateValue method.

This part is wrong:
        if (!empty)
        {
            _ComponentUtils.callValidators(context, this, convertedValue);
        }

Here is why. 
The above will work if you use required=""true"" attribute on your input fields in order to check if the field is empty. However, the 'required' attribute cannot be used if you want to make the validation rules a bit more complex. For example, if you want to configure the level of validation for each field on per button basis (skip validation when certain buttons on the page are pressed, do partial validation on others or do the full validation on the rest). This is easily achieved by writing custom validators that check for certain request parameters and do the validation accordingly. This is a lot like the solution described here: http://wiki.apache.org/myfaces/OptionalValidationFramework

The problem is that such a validation framework must have its own RequiredValidator, if it wants to check for empty values. However, due to the code in UIInput.validateValue method, there is no way to actually run your custom validators if the value is empty. That one line of code breaks mine and http://wiki.apache.org/myfaces/OptionalValidationFramework implementations.

As a workaround I had to write some ugly code to register a 2 phase listeners around the Validate phase, that will replace empty input values with a sentinel string before validation and then remove it after.

I would think that UIInput should run validators regardless of whether the value is empty or not and rely on validators to properly handle null values.",MYFACES-1297
"Hi,

I'm having trouble using the 1.1.2 release and latest nightly build. If I do some massive clicking with the sample application, I get after 30-50 clicks an NPE within the JspStateManager. In my own app. I get this error after 10 page request.

This problem only occurs, if I use server state saving. I figured out, that if I increase the org.apache.myfaces.NUMBER_OF_VIEWS_IN_SESSION parameter to a large (500) value, the error does not occur or does not occur yet :-)

I can reproduce this error every time. There is an resolved issue on jira (http://issues.apache.org/jira/browse/MYFACES-1278), which explains exactly my problem. This issue was closed. After discussing the problem with Juergen Melzer, he confirmed that the problem is still there. 

regards,
Stephan


java.lang.NullPointerException: null values not allowed
   at org.apache.commons.collections.map.AbstractReferenceMap.put(AbstractReferenceMap.java:251)
   at org.apache.myfaces.application.jsp.JspStateManagerImpl$SerializedViewCollection.add(JspStateManagerImpl.java:717)
   at org.apache.myfaces.application.jsp.JspStateManagerImpl.saveSerializedViewInServletSession(JspStateManagerImpl.java:493)
   at org.apache.myfaces.application.jsp.JspStateManagerImpl.saveSerializedView(JspStateManagerImpl.java:332)
   at org.apache.myfaces.taglib.core.ViewTag.doAfterBody(ViewTag.java:122)
   at org.apache.jsp.home_jsp._jspx_meth_f_view_0(home_jsp.java:153)
   at org.apache.jsp.home_jsp._jspService(home_jsp.java:102)
   at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:94)
   at javax.servlet.http.HttpServlet.service(HttpServlet.java:810)
   at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:324)
   at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:292)
   at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:236)
   at javax.servlet.http.HttpServlet.service(HttpServlet.java:810)
   at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:237)
   at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:157)
   at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:704)
   at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:474)
   at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:409)
   at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
   at org.apache.myfaces.context.servlet.ServletExternalContextImpl.dispatch(ServletExternalContextImpl.java:416)
   at org.apache.myfaces.application.jsp.JspViewHandlerImpl.renderView(JspViewHandlerImpl.java:234)
   at org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:367)
   at javax.faces.webapp.FacesServlet.service(FacesServlet.java:138)
   at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:237)
   at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:157)
   at org.apache.myfaces.webapp.filter.ExtensionsFilter.doFilter(ExtensionsFilter.java:144)
   at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:186)
   at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:157)
   at org.jboss.web.tomcat.filters.ReplyHeaderFilter.doFilter(ReplyHeaderFilter.java:75)
   at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:186)
   at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:157)
   at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:214)
   at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:104)
   at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:520)
   at org.apache.catalina.core.StandardContextValve.invokeInternal(StandardContextValve.java:198)
   at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:152)
   at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:104)
   at org.jboss.web.tomcat.security.CustomPrincipalValve.invoke(CustomPrincipalValve.java:66)
   at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:102)
   at org.jboss.web.tomcat.security.SecurityAssociationValve.invoke(SecurityAssociationValve.java:153)
   at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:102)
   at org.jboss.web.tomcat.security.JaccContextValve.invoke(JaccContextValve.java:54)
   at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:102)
   at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:520)
   at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:137)
   at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:104)
   at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:118)
   at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:102)
   at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:520)
   at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
   at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:104)
   at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:520)
   at org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:929)
   at org.apache.coyote.tomcat5.CoyoteAdapter.service(CoyoteAdapter.java:160)
   at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:799)
   at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.processConnection(Http11Protocol.java:705)
   at org.apache.tomcat.util.net.TcpWorkerThread.runIt(PoolTcpEndpoint.java:577)
   at org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:683)
   at java.lang.Thread.run(Thread.java:534)
",MYFACES-1296
"the method getConvertedUISelectManyValue overwrites the arrayComponentType of the ValueBinding with the type of the first converted value.
This is not correct when i have an array of subclasses, the arrayComponentType of the ValueBinding should have the highest priority.
When there is a arrayComponentType of the ValueBinding whitch is not String or Object it should not be overwritten by the type of the first element in the array.

fix replace ""if (vb != null)"" with ""if (vb != null && converter != null && arrayComponentType == null)""

",MYFACES-1295
"Current logic of register extensionFilter not support portlet environment

fiter mappings:

<filter-mapping>
    <filter-name>MyFacesExtensionsFilter</filter-name>
    <servlet-name>Faces Servlet</servlet-name>
</filter-mapping>
<filter-mapping>
    <filter-name>MyFacesExtensionsFilter</filter-name>
    <url-pattern>/faces/myFacesExtensionResource/*</url-pattern>
</filter-mapping>
<filter-mapping>
    <filter-name>MyFacesExtensionsFilter</filter-name>
    <url-pattern>*.jsf</url-pattern>
</filter-mapping>


not work in portlet environment",MYFACES-1294
"[was: Having multiple dataTables on a single page increments the rowCountVar incorrectly.]

Having multiple dataTables on a single page increments the rowCountVar incorrectly. First dataTable increments as expected, but the second dataTable will pick up the count where the first dataTable left off. Ensuring unique rowCountVar names does not appear to help.",MYFACES-1293
"Faces Config Validator should ignore things like ...

<from-view-id>*</from-view-id>",MYFACES-1292
"This should happen with dynamic class loading or via an interface, as discussed here:

http://www.jboss.com/index.html?module=bb&op=viewtopic&t=81641

Could be as simple as storing a factory in application scope at startup.",MYFACES-1291
"When resetting the FacesContext, the _maximumSeverity field isn't reset.  This causes the getMaximumSeverity() method to provide incorrect results after a release().  I would probably mark this as major if MyFaces pooled ServletFacesContextImpl instances, but they don't seem to be reused.

Fix is to add the following line to the release() method:

        _maximumSeverity = null;",MYFACES-1290
"HtmlCheckboxRendererBase.renderCheckbox() uses writeText("""") to try to close up the input;  that's incorrect.  It should use endElement(""input"").  This bug generates a bunch of warnings when using MyFaces with ADF Faces, and also will generate invalid XHTML.",MYFACES-1289
"We need to document dependencies better.

For example, http://myfaces.apache.org/impl/dependencies.html shows dependences that are only needed for testing or compiling rather than dependencies needed for running, which is what the end-user cares about. 

http://myfaces.apache.org/gettingstarted.html is frequently out of date as it is manually maintained.

It seems like the two above could be merged and automatically maintained by maven since maven should be tracking such dependency information already.

Furthermore, dependencies that only affect a certain component (and this is more of a tomahawk issue) should be identified as such.   In fact, the component template (and existing docs) should be updated to include a ""dependencies"" section.   For instance, certain validators depend on commons-validator.jar, and commons-fileupload-1.0.jar is required to use t:inputFileUpload.
",MYFACES-1288
"While deploy the new snapshot of the Myfaces lib, the startup console shows the following error message.

[4/17/06 18:08:57:266 CST] 0000000a FacesConfigur I org.apache.myfaces.config.FacesConfigurator feedStandardConfig Reading standard config org/apache/myfaces/resource/standard-faces-config.xml
[4/17/06 18:08:57:625 CST] 0000000a WebApp        E   Provider for javax.xml.parsers.SAXParserFactory cannot be found
[4/17/06 18:08:57:672 CST] 0000000a ServletWrappe E   SRVE0100E: Did not realize  init() exception thrown by servlet Faces Servlet: java.lang.IllegalStateException: No Factories configured for this Application. This happens if the faces-initialization does not work at all - make sure that you properly include all configuration settings necessary for a basic faces application and that all the necessary libs are included. Also check the logging output of your web application and your container for any exceptions!
If you did that and find nothing, the mistake might be due to the fact that you use some special web-containers which do not support registering context-listeners via TLD files and a context listener is not setup in your web.xml.
A typical config looks like this;
<listener>
  <listener-class>org.apache.myfaces.webapp.StartupServletContextListener</listener-class>
</listener>

	at javax.faces.FactoryFinder.getFactory(FactoryFinder.java:90)
	at javax.faces.webapp.FacesServlet.init(FacesServlet.java:88)
	at com.ibm.ws.webcontainer.servlet.ServletWrapper.init(ServletWrapper.java:274)
	at com.ibm.ws.webcontainer.servlet.ServletWrapper.initialize(ServletWrapper.java:1398)
	at com.ibm.wsspi.webcontainer.extension.WebExtensionProcessor.createServletWrapper(WebExtensionProcessor.java:86)
	at com.ibm.ws.webcontainer.webapp.WebApp.getServletWrapper(WebApp.java:759)
	at com.ibm.ws.webcontainer.webapp.WebApp.initializeTargetMappings(WebApp.java:502)
	at com.ibm.ws.webcontainer.webapp.WebApp.initialize(WebApp.java:391)
	at com.ibm.ws.webcontainer.webapp.WebGroup.addWebApplication(WebGroup.java:114)
	at com.ibm.ws.webcontainer.VirtualHost.addWebApplication(VirtualHost.java:127)
	at com.ibm.ws.webcontainer.WebContainer.addWebApp(WebContainer.java:854)
	at com.ibm.ws.webcontainer.WebContainer.addWebApplication(WebContainer.java:807)
	at com.ibm.ws.runtime.component.WebContainerImpl.install(WebContainerImpl.java:167)
	at com.ibm.ws.runtime.component.WebContainerImpl.start(WebContainerImpl.java:391)
	at com.ibm.ws.runtime.component.ApplicationMgrImpl.start(ApplicationMgrImpl.java:1228)
	at com.ibm.ws.runtime.component.DeployedApplicationImpl.fireDeployedObjectStart(DeployedApplicationImpl.java:1067)
	at com.ibm.ws.runtime.component.DeployedModuleImpl.start(DeployedModuleImpl.java:547)
	at com.ibm.ws.runtime.component.DeployedApplicationImpl.start(DeployedApplicationImpl.java:751)
	at com.ibm.ws.runtime.component.ApplicationMgrImpl.startApplication(ApplicationMgrImpl.java:892)
	at com.ibm.ws.runtime.component.ApplicationMgrImpl$AppInitializer.run(ApplicationMgrImpl.java:2003)
	at com.ibm.ws.runtime.component.ComponentImpl.runAsynchronousInitializer(ComponentImpl.java:159)
	at com.ibm.ws.runtime.component.ApplicationMgrImpl.startApplications(ApplicationMgrImpl.java:745)
	at com.ibm.ws.runtime.component.ApplicationMgrImpl.start(ApplicationMgrImpl.java:524)
	at com.ibm.ws.runtime.component.ContainerImpl.startComponents(ContainerImpl.java:820)
	at com.ibm.ws.runtime.component.ContainerImpl.start(ContainerImpl.java:649)
	at com.ibm.ws.runtime.component.ApplicationServerImpl.start(ApplicationServerImpl.java:149)
	at com.ibm.ws.runtime.component.ContainerImpl.startComponents(ContainerImpl.java:820)
	at com.ibm.ws.runtime.component.ContainerImpl.start(ContainerImpl.java:649)
	at com.ibm.ws.runtime.component.ServerImpl.start(ServerImpl.java:402)
	at com.ibm.ws.runtime.WsServerImpl.bootServerContainer(WsServerImpl.java:187)
	at com.ibm.ws.runtime.WsServerImpl.start(WsServerImpl.java:133)
	at com.ibm.ws.runtime.WsServerImpl.main(WsServerImpl.java:387)
	at com.ibm.ws.runtime.WsServer.main(WsServer.java:53)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:58)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:60)
	at java.lang.reflect.Method.invoke(Method.java:391)
	at com.ibm.ws.bootstrap.WSLauncher.run(WSLauncher.java:218)
	at java.lang.Thread.run(Thread.java:568)

The file list is shown as follows:-

commons-beanutils-1.7.0.jar                    
commons-codec-1.3.jar                          
commons-collections-3.1.jar                    
commons-digester-1.6.jar                       
commons-el-1.0.jar                             
commons-fileupload-1.0.jar                     
commons-lang-2.1.jar                           
commons-logging-1.0.4.jar                      
commons-validator-1.2.0.jar                    
jstl-1.1.0.jar                                 
myfaces-api-1.1.3-SNAPSHOT.jar                 
myfaces-impl-1.1.3-SNAPSHOT.jar                
myfaces-shared-tomahawk-2.0.1-SNAPSHOT.jar     
oro-2.0.8.jar                                  
tomahawk-1.1.2-SNAPSHOT.jar                    
xml-apis-1.0.b2.jar                            

",MYFACES-1287
HtmlInputText needs a non-html-standard-attribute (autocomplete),MYFACES-1285
"The component code generator has been re-added to the Myfaces build process by Manfred Geiler, but there is still some work to be done.  For a description, see also http://mail-archives.apache.org/mod_mbox/myfaces-dev/200604.mbox/%3c564d4f680604130149m100b83cfibf4816ea9ccfbe87@mail.gmail.com%3e
",MYFACES-1284
TCK testing turned up an apparent issue with restoring serialized views.  Because of the NDA I can't get into the specific details of the test but I have added my own unit test to core-impl that demonstrates the problem.  We need to fix this ASAP.,MYFACES-1281
Code was added to UIInput (since 1.1.1) that fails to invalidate the component when an EvaluationException occurs.,MYFACES-1280
"JSF send CSS files but not Javascript files I verified it using Firefox, IE complains about it too.
When I request a page with JSCookMenu or Calendar (renderAsPopup=""true"") components I receive Javascript errors in Firefox like this: 

jscalendarSetImageDirectory is not defined
Arquivo-fonte: http://localhost:8080/test/test.jsf
Line: 44

jscalendarPopUpCalendar is not defined

All other non-javascript components works well.

Thanks in advance",MYFACES-1279
"Sometime after submitting a form more than one times, I get the following exception
java.lang.NullPointerException: null values not allowed
	at org.apache.commons.collections.map.AbstractReferenceMap.put(AbstractReferenceMap.java:251)
	at org.apache.myfaces.application.jsp.JspStateManagerImpl$SerializedViewCollection.add(JspStateManagerImpl.java:717)
	at org.apache.myfaces.application.jsp.JspStateManagerImpl.saveSerializedViewInServletSession(JspStateManagerImpl.java:493)
	at org.apache.myfaces.application.jsp.JspStateManagerImpl.saveSerializedView(JspStateManagerImpl.java:332)
	at org.apache.myfaces.taglib.core.ViewTag.doAfterBody(ViewTag.java:122)
	at org.apache.jsp.tiles.mainLayout_jsp._jspx_meth_f_view_0(org.apache.jsp.tiles.mainLayout_jsp:305)
	at org.apache.jsp.tiles.mainLayout_jsp._jspService(org.apache.jsp.tiles.mainLayout_jsp:117)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:97)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:802)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:332)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:314)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:264)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:802)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:252)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
	at net.sf.acegisecurity.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:292)
	at net.sf.acegisecurity.intercept.web.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:98)
	at net.sf.acegisecurity.intercept.web.SecurityEnforcementFilter.doFilter(SecurityEnforcementFilter.java:197)
	at net.sf.acegisecurity.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:303)
	at net.sf.acegisecurity.providers.anonymous.AnonymousProcessingFilter.doFilter(AnonymousProcessingFilter.java:143)
	at net.sf.acegisecurity.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:303)
	at net.sf.acegisecurity.wrapper.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:50)
	at net.sf.acegisecurity.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:303)
	at net.sf.acegisecurity.context.HttpSessionContextIntegrationFilter.doFilter(HttpSessionContextIntegrationFilter.java:156)
	at net.sf.acegisecurity.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:303)
	at net.sf.acegisecurity.util.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at net.sf.acegisecurity.util.FilterToBeanProxy.doFilter(FilterToBeanProxy.java:120)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:202)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:672)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:463)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:398)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:301)
	at org.apache.myfaces.context.servlet.ServletExternalContextImpl.dispatch(ServletExternalContextImpl.java:416)
	at org.apache.myfaces.application.jsp.JspTilesViewHandlerImpl.dispatch(JspTilesViewHandlerImpl.java:233)
	at org.apache.myfaces.application.jsp.JspTilesViewHandlerImpl.renderView(JspTilesViewHandlerImpl.java:219)
	at org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:384)

I can not repoduce it every time, so sorry I don't have a testcase...",MYFACES-1278
"One method of implementing AJAX is to re-render the page and only send
pieces down to the browser. This is the way AjaxAnywhere works.
However, it is not easy to get this to work in MyFaces with HTML
forms. The issue:

AJAX needs a way to identify HTML to replace on AJAX response. This is
usually done via id:
""document.getElementById('idFromAjaxResponse').innerHtml =
reponseData"".

However, there is no containing HTML element for the ""special"" form
elements. These ""special"" elements include:

1) input type=""hidden"" elements that are rendered for parameters,
client-side state, etc.
2) script tag that contains the clear_[formid]() JavaScript function
that uses the above hidden input elements

In 1.1.1, these were placed at the top and bottom of the form. In
1.1.2/3 they are put only at the bottom, but in neither is the
capability that I would like.

Workaround I used: Extended the HtmlFormRenderer and buffered the
output of the endcodeEnd and encodeBegin. Then I loop through the
buffer and strip out all hidden input elements and JavaScript tags. I
then add the stripped portion into a new SPAN element that is
formatted for AjaxAnywhere to work.

How this could have been much easier:

Add 4 new methods to HtmlFormRendererBase:
public void beforeFormElementsStart(FacesContext facesContext,
UIComponent component)
  throws IOException {}
public void afterFormElementsStart(FacesContext facesContext,
UIComponent component)
  throws IOException {}
public void beforeFormElementsEnd(FacesContext facesContext,
UIComponent component)
  throws IOException {}
public void afterFormElementsEnd(FacesContext facesContext,
UIComponent component)
  throws IOException {}

These methods would the be called:
encodeBegin(...) {
...render the start tag...
call before form elements start
...render and elements into the form
call after form elements end

...

encodeEnd(...) {
call before form elements end
... render state, javascript etc. ...
call after form elements end
... render the form end tag ...


Then, with projects like AjaxAnywhere, users can extend
HtmlFormRenderer and implement these methods. In these methods, we can
write tags to contain this data that can be used in the AJAX code to
update on every request.

This would be a very simple change, would incur almost no overhead and
give complete flexibility that would be needed to AJAX authors to have
control over the special form behavior of JSF.

I wouldn't care about the method names, in fact there could be one
method with an enum argument that specifies before/after information.",MYFACES-1276
"This commandLinks dont work. (laBean is an alias for ubicacion)
 
 
<h:dataTable id=""didyoumean"" value=""#{laBean.didyoumeanList}"" var=""unlink"">
	<h:column>	
		<h:commandLink value=""#{unlink}"" actionListener=""#{ubicacion.didyoumeano}""></h:commandLink>
	</h:column>
</h:dataTable>
 
 
 
But this command links do work:
 
<h:panelGrid columns=""1"" id=""didyoumeanlla"" binding=""#{ubicacion.didyoumeanPanel}"" rendered=""true""/>
 
 
 
where the code is ...
 
 
			didyoumeanPanel = new HtmlPanelGrid();
			List<UIComponent> children = didyoumeanPanel.getChildren();
			Iterator<String> val = didyoumean.iterator();
			while (val.hasNext()){
				HtmlCommandLink unlink = new HtmlCommandLink();
				unlink.setValue(val.next());
				unlink.setActionListener(app.createMethodBinding(""#{ubicacion.didyoumeano}"", new Class[] {ActionEvent.class }));
				children.add(unlink);
				didyoumeanLinks.add(unlink);
				didyoumeanList.add((String) unlink.getValue());
			}
		}





Note that the components are inside a form and a subview....
Here I show two samples of the render of the commandLink wich works and the render of the commandLink :
works:
...
<table id=""mainForm:sub:didyoumeanlla""><tbody><tr><td><a href=""#"" onclick=""clear_mainForm();document.forms['mainForm'].elements['autoScroll'].value=getScrolling();document.forms['mainForm'].elements['mainForm:_link_hidden_'].value='mainForm:sub:didyoumeanlla_1';if(document.forms['mainForm'].onsubmit){document.forms['mainForm'].onsubmit();}document.forms['mainForm'].submit();return false;"" id=""mainForm:sub:didyoumeanlla_1"">puente 2</a>
...

..
does not work:

<table id=""mainForm:sub:didyoumean"">
<tbody>
<tr><td><a href=""#"" onclick=""clear_mainForm();document.forms['mainForm'].elements['autoScroll'].value=getScrolling();document.forms['mainForm'].elements['mainForm:_link_hidden_'].value='mainForm:sub:didyoumean_0:_id11';if(document.forms['mainForm'].onsubmit){document.forms['mainForm'].onsubmit();}document.forms['mainForm'].submit();return false;"" id=""mainForm:sub:didyoumean_0:_id11"">puente 2</a>

...


look at the auto generated id _id11!















",MYFACES-1275
"There was no specific EG issue number for this, so this Jira task will serve as a catch-all for integration with the new Unified EL provided in JSP 2.1.",MYFACES-1274
"In file: ""current\tomahawk\core\pom.xml"" is a wrong dependency:

<dependency>
      <groupId>struts</groupId>
      <artifactId>struts</artifactId>
      <version>1.2.8</version>
      <scope>compile</scope>
--------------> wrong ---->
      <optional>true</optional>
    </dependency>

<dependency>
      <groupId>struts</groupId>
      <artifactId>struts</artifactId>
      <version>1.2.8</version>
      <scope>compile</scope>
--------------> correct ---->
      <optional>false</optional>
    </dependency>",MYFACES-1273
"Just put the HtmlFocus component in any page to get this error:

java.lang.NoClassDefFoundError: org/apache/myfaces/renderkit/RendererUtils
	org.apache.myfaces.custom.focus.HtmlFocusRenderer.encodeEnd(HtmlFocusRenderer.java:38)
	javax.faces.component.UIComponentBase.encodeEnd(UIComponentBase.java:536)
	com.sun.facelets.tag.jsf.ComponentSupport.encodeRecursive(ComponentSupport.java:242)
	com.sun.facelets.tag.jsf.ComponentSupport.encodeRecursive(ComponentSupport.java:239)
	com.sun.facelets.tag.jsf.ComponentSupport.encodeRecursive(ComponentSupport.java:239)
	com.sun.facelets.FaceletViewHandler.renderView(FaceletViewHandler.java:540)
	org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:367)
	javax.faces.webapp.FacesServlet.service(FacesServlet.java:138)
	org.apache.myfaces.webapp.filter.ExtensionsFilter.doFilter(ExtensionsFilter.java:130)",MYFACES-1272
"According the the JST-127 specification the <f:attribute> tag value parameter should evaluate to an Object, however the AttributeTag implementation casts the return type of AttributeTag.getValue() to String.  This causes a class cast exception for any bound properties that have a type other than String.",MYFACES-1271
"We at HanseMerkur insurances are currently working with MyFaces to for creating web applications. Unfortunately, the hot deployment of an exploded web archiv does not work. This is very annoying is using the deployment features of MyEclipse because we always have to restart the JBoss apllication server. I have tried the same using Tomcat standalone, and the same thing happens.

I have nailed down the problem to the class FacesConfigurator, and there to the call of URL.openStream() in the method feedClassloaderConfigurations(). This call opens a Stream of an already open jar-archiv (Tomcat always opens up the jar files during startup of an application). Later the stream is closed, but at least if running under j2sdk 1.5.0_04, the closing does not work. When trying to undeploy the application, there is still an open file handle and the jar file cannot be removed. You can reproduce this behaviour by deploying one of the myfaces examples to a running Tomcat and then undeploying it. You will end up with some jar files in the WEB-INF/lib directory.

I am not very sure which component (myfaces, tomcat, or even java) causes this failure, but I found a way to work around it:

Instead of simply calling
                InputStream stream = url.openStream();
you can open the stream without using a cache by saying
                URLConnection connection = url.openConnection();
                connection.setUseCaches(false);
                InputStream stream = connection.getInputStream();

Olaf Fricke
HanseMerkur Versicherungen
",MYFACES-1270
"Define new method on UIComponent, invokeOnComponent().  This will find a component in the tree by clientId and invoke a user specified callback on it.  Please see Section 3.1.8 ""Component Tree Navigation"" and Section 4.1.1.3 ""Methods"" [of UIData] for more details.

https://javaserverfaces-spec-public.dev.java.net/issues/show_bug.cgi?id=145
",MYFACES-1269
"Change the required return type for action methods to be Object instead of String.  This allows the usage of Enums for the return type of action methods, as long as the toString() method of the enum matches the expected value in the application configuration resources.

See https://javaserverfaces-spec-public.dev.java.net/issues/show_bug.cgi?id=138
",MYFACES-1268
"Clarified renderkit docs with respect to what gets rendered for disabled command link attributes.

See https://javaserverfaces-spec-public.dev.java.net/issues/show_bug.cgi?id=122
",MYFACES-1267
"Specified that an implementation of Map returned from ExternalContext.getSessionMap implement a ""clear"" method that calls ""removeAttribute"" on each attribute in the Servlet or Portlet Session.

https://javaserverfaces-spec-public.dev.java.net/issues/show_bug.cgi?id=118
",MYFACES-1266
"Specified that a component must allow child components to be added to and removed from the child list of the currrent component, even though the child component returns null from getParent().

See https://javaserverfaces-spec-public.dev.java.net/issues/show_bug.cgi?id=111
",MYFACES-1265
"Specified that JSF implementations that are part of a Java EE technology-compliant implementation are required to validate the application resource file against the XML schema for structural correctness.  Also specified that validation is recommended, but not required for JSF implementations that are not part of a Java EE technology compliant implementation.  Please refer to Section 10.4.2 ""Application Startup Behavior"" for more details.

Also see https://javaserverfaces-spec-public.dev.java.net/issues/show_bug.cgi?id=108",MYFACES-1264
"Specified that for commandButton rendering, the ""image"" attribute value must not be escaped.  Specified that for graphicImage rendering, the ""src"" attribute must not be escaped.

See https://javaserverfaces-spec-public.dev.java.net/issues/show_bug.cgi?id=105
",MYFACES-1263
"Specified Java EE 5 Generics usage where applicable.

https://javaserverfaces-spec-public.dev.java.net/issues/show_bug.cgi?id=99
",MYFACES-1262
"Added ""escape"" flag indicating the text of UISelectItem should be escaped when rendering.

See https://javaserverfaces-spec-public.dev.java.net/issues/show_bug.cgi?id=93
",MYFACES-1261
"Specified ""by type"" converter registration for BigDecimal and BigInteger

https://javaserverfaces-spec-public.dev.java.net/issues/show_bug.cgi?id=13
",MYFACES-1260
"Upgraded to  JBoss 4.0.4RC1 and MyFaces 4/4/06 night build.

When user visit a protected page, the login.jsp will show up for user to login in.
But in the login.jsp, if clicking commandLink ""Forget Password"",   ""Error on Page"" will show up on browser status bar (IE).
nothing else happens.  It was working before: JBoss 4.0.3 RC1 and MyFaces  1/16/06.


login.jsp  (simplified for testing)
-----------

<%@ page contentType=""text/html; charset=UTF-8""%>

<%@ taglib uri=""http://java.sun.com/jsf/html"" prefix=""h"" %>
<%@ taglib uri=""http://java.sun.com/jsf/core"" prefix=""f"" %>

<HTML>

<body>

<f:view>

      <h:commandLink value=""Forget Password"" 
      		action=""#{bean.resetPassword}""/>
</f:view>
</body>
</html>


Browser source
------------------


<HTML>

<body>

	      <a href=""#"" onclick=""clear_linkDummyForm();document.forms['linkDummyForm'].elements['autoScroll'].value=getScrolling();document.forms['linkDummyForm'].elements['linkDummyForm:_link_hidden_'].value='_idJsp0';if(document.forms['linkDummyForm'].onsubmit){var result=document.forms['linkDummyForm'].onsubmit();  if( (typeof result == 'undefined') || result ) {document.forms['linkDummyForm'].submit();}}else{document.forms['linkDummyForm'].submit();}return false;"" id=""_idJsp0"">ForgetPassword</a>
    	


</body>
</html>
",MYFACES-1259
"Added and specified ResponseWriter.writeText method that takes a UIComponent argument.

See https://javaserverfaces-spec-public.dev.java.net/issues/show_bug.cgi?id=160
",MYFACES-1258
"Specified ""columnClasses"", ""rowClasses"" descriptions for panelGrid in renderkit docs.

See https://javaserverfaces-spec-public.dev.java.net/issues/show_bug.cgi?id=155
",MYFACES-1257
"Fixed FacesTag ""name"" attribute discrepency - made it a String (was ValueExpression).

See https://javaserverfaces-spec-public.dev.java.net/issues/show_bug.cgi?id=154
",MYFACES-1256
"Specified EL coercion usage in API javadocs UISelectOne/UISelectMany (when items are compared in validation) and standard html renderkit docs during encoding of select components.

See https://javaserverfaces-spec-public.dev.java.net/issues/show_bug.cgi?id=152
",MYFACES-1255
"Specified standard converter for Enums

See https://javaserverfaces-spec-public.dev.java.net/issues/show_bug.cgi?id=151",MYFACES-1254
"Clarified grammer with respect to component id.

See https://javaserverfaces-spec-public.dev.java.net/issues/show_bug.cgi?id=147",MYFACES-1253
"Support Java EE 5 enums as valid types

See https://javaserverfaces-spec-public.dev.java.net/issues/show_bug.cgi?id=135",MYFACES-1252
See https://javaserverfaces-spec-public.dev.java.net/issues/show_bug.cgi?id=134,MYFACES-1251
"Specified that a compliant implementation must allow the registration of a converter for class java.lang.String and java.lang.String.TYPE that will be used to convert values for these types.

See See https://javaserverfaces-spec-public.dev.java.net/issues/show_bug.cgi?id=131
",MYFACES-1250
"Clarified renderkit docs with repsect to graphicImage ""alt"" attribute.

See https://javaserverfaces-spec-public.dev.java.net/issues/show_bug.cgi?id=124
",MYFACES-1249
"Clarified renderkit docs with respect to dataTable attribute rendering

See https://javaserverfaces-spec-public.dev.java.net/issues/show_bug.cgi?id=123",MYFACES-1248
"Specified in the renderkit docs that commandButton rendering can generate javascript for ""onclick"" attribute.

See https://javaserverfaces-spec-public.dev.java.net/issues/show_bug.cgi?id=120",MYFACES-1247
"Specified that implementations running in a JSR-250 compliant container have their managed bean methods annotated with @PostConstruct be called after the object is instantiated, and after injection is performed, but before the bean is placed into scope.
Specified that methods annotated with @PreDestroy be called when the scope for the bean is ending.

See https://javaserverfaces-spec-public.dev.java.net/issues/show_bug.cgi?id=252",MYFACES-1246
"Specified that ""SelectManyCheckboxListRenderer"" and ""RadioRenderer"" must render the ""label"" element after the ""input"" element for each ""SelectItem"".  Specified that the ""label"" element must refer to the ""input"" element using the ""for"" attribute.  Please see Section 8.5 ""Standard HTML RenderKit Implementation"" for more details.

Also see https://javaserverfaces-spec-public.dev.java.net/issues/show_bug.cgi?id=98
",MYFACES-1245
" Allow multiple instances of FacesServlet in a single webapp, mapped with different URI mappings, to use different implementations of Lifecycle by allowing the lifecycle-id to be specified as an init-param in addition to the existing way of specifying it as a context-param.

See https://javaserverfaces-spec-public.dev.java.net/issues/show_bug.cgi?id=95",MYFACES-1244
"Modified specification for the setVariableResolver() and setPropertyResolver() methods on Application to state that they may not be called after the app has served any requests.

See https://javaserverfaces-spec-public.dev.java.net/issues/show_bug.cgi?id=87",MYFACES-1243
"Added ""getRequestContentType"" and ""getResponseContentType"" to ExternalContext.

See https://javaserverfaces-spec-public.dev.java.net/issues/show_bug.cgi?id=75",MYFACES-1242
"Specified that ""OutputLinkRenderer"" must render the ""name"" attribute with the same value as the ""id"" attribute.  Please see Section 8.5 ""Standard HTML RenderKit Imiplementation"" for more details.

Also see https://javaserverfaces-spec-public.dev.java.net/issues/show_bug.cgi?id=86",MYFACES-1241
"Add new tag: f:setPropertyActionListener.  Useful for pushing values into managed beans without allowing modification of the value.

See https://javaserverfaces-spec-public.dev.java.net/issues/show_bug.cgi?id=85",MYFACES-1240
"Added rendered attribute to the core f:verbatim tag.  Please see Section 9.4 ""JSF Core Tag Library"" for more details.

Also see https://javaserverfaces-spec-public.dev.java.net/issues/show_bug.cgi?id=84",MYFACES-1239
"Added new feature, the ability to resolve ResourceBundles via the EL without the use of the <f:loadBundle> tag.

See https://javaserverfaces-spec-public.dev.java.net/issues/show_bug.cgi?id=82
",MYFACES-1238
"Enable the message displayed for ""required"" validation, conversion, and validation to be overridden by the page author (JSP or non-JSP).

See https://javaserverfaces-spec-public.dev.java.net/issues/show_bug.cgi?id=81",MYFACES-1237
"Specify that the JSF Core Tag Library must not contain any tags that cause JavaScript to be rendered to the client.

See https://javaserverfaces-spec-public.dev.java.net/issues/show_bug.cgi?id=80",MYFACES-1236
"Added a more ""user-friendly"" default error message for UIInput ""update model"".  Please see Section 2.5.2.4 ""Localized Application Messages"" for more details.

Also see https://javaserverfaces-spec-public.dev.java.net/issues/show_bug.cgi?id=78",MYFACES-1235
"Added ""disabled"" property to ""outputLink"" and ""commandLink"".  Please see Section 8.5 ""Standard HTML RenderKit Implementation"" for more details.

Also see https://javaserverfaces-spec-public.dev.java.net/issues/show_bug.cgi?id=74
",MYFACES-1234
"Added a new FacesException - ""javax.faces.application.ViewExpiredException"".  Specified that the implementation must throw this exception when an attempt to restore a view results in failure on postback.  Please see Section 2.2.1 ""Restore View"" for more details.

https://javaserverfaces-spec-public.dev.java.net/issues/show_bug.cgi?id=73
",MYFACES-1233
" Improve XHTML compliance by rendering both ""lang"" and ""xml:lang"" attributes.

See https://javaserverfaces-spec-public.dev.java.net/issues/show_bug.cgi?id=72",MYFACES-1232
"Permit the passing of a null value to SelectItem.setValue().  

See https://javaserverfaces-spec-public.dev.java.net/issues/show_bug.cgi?id=69
",MYFACES-1231
"Specify that the component tree may be manipulated throughout the request processing lifecycle, except during render.  Please see Section 2.2.6 ""Render Response"" for more details.

Also see https://javaserverfaces-spec-public.dev.java.net/issues/show_bug.cgi?id=68",MYFACES-1230
"Allow the resetting of an input component's value by introducing a resetValue() method on UIInput

See https://javaserverfaces-spec-public.dev.java.net/issues/show_bug.cgi?id=67",MYFACES-1229
" Specified that ""FormRenderer"" must render the ""name"" attribute with the same value as the ""id"" attribute.  Please see Section 8.5 ""Standard HTML RenderKit Implementation"" for more details.

Also see https://javaserverfaces-spec-public.dev.java.net/issues/show_bug.cgi?id=66",MYFACES-1228
"Added standard converter messages.  Please see Section 2.5.2.4 ""Localized Application Messages"" for more details.

Also see https://javaserverfaces-spec-public.dev.java.net/issues/show_bug.cgi?id=65",MYFACES-1227
"Avoid EL expression evaluation for ""value"" attribute on ""AttributeTag"".  ""AttributeTag"" now passes the expression to UIComponent for evaluation.

See https://javaserverfaces-spec-public.dev.java.net/issues/show_bug.cgi?id=59",MYFACES-1226
"Enabled ""protected"" access to internal ""DataModel"" in UIData

See  https://javaserverfaces-spec-public.dev.java.net/issues/show_bug.cgi?id=58",MYFACES-1225
"For postback requests, in the ""RestoreViewPhase"", during ValueExpression examination for each component in the component tree, specify that calling the setValue() method on each ValueExpression, should be done in a ""parent-first"" fashion, calling the setValue() method and then traversing the children.

See https://javaserverfaces-spec-public.dev.java.net/issues/show_bug.cgi?id=55",MYFACES-1224
"Added new extension elements to the Faces XML schema.  Please see Section 1.1 ""XML Schema Definition"".

Also see https://javaserverfaces-spec-public.dev.java.net/issues/show_bug.cgi?id=54",MYFACES-1223
"Clarify the specification with respect to ""Application Startup Behavior"".  Allow implementations to check for the presence of a servlet-class definition in a web app deployment descriptor as a means to abort the configuration and save startup time.

See https://javaserverfaces-spec-public.dev.java.net/issues/show_bug.cgi?id=51",MYFACES-1222
"Allow an application to specify multiple render kits by introducing an optional ""renderKitId"" attribute on ""<f:view>"".  It is no longer required to write a customer ViewHandler to incorporate a different render kit.  Please refer to Section 8.3 ""ResponseStateManager"" and Section 9.4.20 ""<f:view>"" for more details.

Also see https://javaserverfaces-spec-public.dev.java.net/issues/show_bug.cgi?id=50",MYFACES-1221
"Specify the algorithm used for client id generation as well as provide a way to allow the page author to specify exactly what the client id should be, and preventing Faces from altering it.

See https://javaserverfaces-spec-public.dev.java.net/issues/show_bug.cgi?id=48",MYFACES-1220
"Introduced a mechanism to detect if a request is a postback.

https://javaserverfaces-spec-public.dev.java.net/issues/show_bug.cgi?id=47",MYFACES-1219
"Avoided concurrent read issues by using a java.util.HashMap instead of java.util.WeakHashMap for a component's Property Descriptor Map.  This also fixes the performance problem as identified in the forum.  Please refer the the Property Descriptor methods and the constructor in javax.faces.component.UIComponentBase.

Also see https://javaserverfaces-spec-public.dev.java.net/issues/show_bug.cgi?id=45",MYFACES-1218
"Migrated over to using XML Schema (from DTD) for configuration file validation.  Please see Section 1.1 ""XML Schema Definition"".

Also see https://javaserverfaces-spec-public.dev.java.net/issues/show_bug.cgi?id=43",MYFACES-1217
"Provided a new facet for DataTable Renderer that allows the rendering of a table ""caption"" element immediately following the ""table"" element.  Also provided style sheet attributes for this new element.  Please see Section 8.5 ""Standard HTML RenderKit Implementation"" for a description of this component.

Also see https://javaserverfaces-spec-public.dev.java.net/issues/show_bug.cgi?id=35
",MYFACES-1216
"Make the ""commandButton"" ""image"" attribute render the same as the ""graphicImage"" ""img"" attribute for consistency.  Please see Section 8.5 ""Standard HTML RenderKit Implementation"" for more information.

Also see https://javaserverfaces-spec-public.dev.java.net/issues/show_bug.cgi?id=30
",MYFACES-1215
"Allow the use of user-defined ""onclick"" Javascript on CommandLink

See https://javaserverfaces-spec-public.dev.java.net/issues/show_bug.cgi?id=29
",MYFACES-1214
"<h:messages now renders HTML list elements (""<ul>"", ""<li>"") if the ""layout"" attribute is ""list"" or the ""layout"" attribute is not specified.  If the ""layout"" is ""table"" HTML ""table"" element is rendered instead of an outer ""span"". Please see Section 8.5 ""Standard HTML RenderKit Implementation"" for more details.

Also see https://javaserverfaces-spec-public.dev.java.net/issues/show_bug.cgi?id=27
",MYFACES-1213
"Provide additional ""binding"" attribute for the core Converter, Listener, and Validator tags that would be used as a ValueExpression to alternatively create the Converter, Listener, or Validator instance. Please see Section 9.4 ""JSF Core Tag Library"" for more details.

Also see https://javaserverfaces-spec-public.dev.java.net/issues/show_bug.cgi?id=21
",MYFACES-1212
"Specify that the event queue should be cleared after each phase (except for RestoreViewPhase and RenderResponse) if responseComplete or renderResponse has been set on FacesContext.

See  https://javaserverfaces-spec-public.dev.java.net/issues/show_bug.cgi?id=20",MYFACES-1211
"When a resource lookup is done on the java.util.Map (loaded from <f:laodBundle>) using a key, and the key is not found in the Map, return the literal string ???KEY??? where KEY is the key being looked up in the Map (instead of throwing a MissingResourceException).  Throw a JspException if the named bundle identified by <f:loadBundle> does not exist.  Please see Section 9.4.7 ""<f:loadBundle>"".


Also see https://javaserverfaces-spec-public.dev.java.net/issues/show_bug.cgi?id=18",MYFACES-1210
"Introduced a new optional ""layout"" attribute on the ""PanelGroup"" component that controls the rendering of either a ""div"" or ""span"" HTML element.  Please see Section 8.5 ""Standard HTML RenderKit Implementation"" for more details.

See https://javaserverfaces-spec-public.dev.java.net/issues/show_bug.cgi?id=17",MYFACES-1209
"Provided additional I18n attributes ""dir"" and ""land"" for the tags <h:outputText>, <h:outputFormat>, <h:messages>, and <h:message>.  Please see Section 8.5 ""Standard HTML RenderKit Implementation"" for descriptions of these components.

See https://javaserverfaces-spec-public.dev.java.net/issues/show_bug.cgi?id=16",MYFACES-1208
"Enhanced the usage of the ""Decorator Pattern"" for ViewHandler, StateManager and ResponseWriter classes by providing abstract wrapper classes to make it easier to override a subset of the total methods for those classes.  Please see Section 8.5 ""Standard HTML RenderKit Implementation"" for descriptions of those components.


See https://javaserverfaces-spec-public.dev.java.net/issues/show_bug.cgi?id=15",MYFACES-1207
"Provide a unique window identifier (in addition to ""viewid"") to accomodate applications that have multiple instances of the same view, but perhaps in different browser windows or frames.

See https://javaserverfaces-spec-public.dev.java.net/issues/show_bug.cgi?id=11",MYFACES-1206
"Clarified the behavior of PhaseListener implementations in the following way: they must guarantee that if ""beforePhase()"" is called, then ""afterPhase()"" must also be called, regardless of any thrown exceptions.  Please see Section 11.3 ""PhaseListener"" for more specifics.

See https://javaserverfaces-spec-public.dev.java.net/issues/show_bug.cgi?id=9",MYFACES-1205
"Made UIViewRoot a source of PhaseEvent(s) for all phases of the request processing lifecycle except RestoreView.  Provided additional ""before"" and ""after"" phase listener attributes for the <f:view> tag.  Please see Section 4.1.17 ""UIViewRoot"" for more details.

See https://javaserverfaces-spec-public.dev.java.net/issues/show_bug.cgi?id=8",MYFACES-1204
" Introduced a new optional ""label"" attribute for input components that will provide an association between a component, and the message that the component (indirectly) produced.  Please refer to Section 8.5 ""Standard HTML RenderKit Implementation"" and Section 2.5.2.4 ""Localized Application Messages"" for more details.

See https://javaserverfaces-spec-public.dev.java.net/issues/show_bug.cgi?id=6",MYFACES-1203
"Clarified the use of a string literal for the ""action"" attribute on ActionSource components.

See https://javaserverfaces-spec-public.dev.java.net/issues/show_bug.cgi?id=5",MYFACES-1202
"JSR-252 Issue #4: Added headerClass and footerClass attributes at the ""h:column"" level.  Please see Section 8.5 ""Standard HTML RenderKit Implementation"" for more details.

See https://javaserverfaces-spec-public.dev.java.net/issues/show_bug.cgi?id=4",MYFACES-1201
" Clarify the specification with respect to constraint violations for tags in the Core Tag Library.  I guess we just need to make sure we are compliant.

See https://javaserverfaces-spec-public.dev.java.net/issues/show_bug.cgi?id=3
",MYFACES-1200
"Clarify that for client side state saving, the state should be encrypted for security.  Not a requirement, but we should look into it if we don't do this already.

See https://javaserverfaces-spec-public.dev.java.net/issues/show_bug.cgi?id=2",MYFACES-1199
"Using the navigation mechanism with redirect disables the following important functionallity:
1) Passing parameters between pages (with param tag).
2) When navigating from page 1 to page 2, messages are not shown on page 2.

These featurs do not work because the nature of redirect, which actually generates a new request (unlike forward).",MYFACES-1198
Here is a patch with docs for the ifMessage component I donated.,MYFACES-1197
"Classes specified in columnClasses attribute of h:panelGrid should be reused when number of classes are less than the number of columns. This behavior is not implemented.
In org.apache.myfaces.renderkit.html.HtmlGridRendererBase.java, renderChildren method, columnClassesArray needs to be indexed by another index variable, say, columnClassIndex, not by columnIndex.",MYFACES-1196
"It would be great if you could add support for

 * headerClass
 * footerClass

to h:column as specified in the JSF-1.2 spec to the JSF-1.1 branch.

This would allow people to get usable style classes inside <thead>'s and <tfoot>'s.

Currently you have to create a h:panelGrid in the f:facet inside the h:column like

    <h:column>
      <f:facet name=""header"">
        <h:panelGrid width=""100%"" rowClasses=""tableHeaderRight"">
          <h:outputText value=""Right header"" />
        </h:panelGrid>
      </f:facet>
      <h:outputText value=""Right content"" />
    </h:column>

for the header.
",MYFACES-1195
"mvn install cannot be invoked multiple times in a row.
After the first ""mvn install"" command, a ""mvn clean"" (or ""mvn clean install"") must be used to rebuild the project.",MYFACES-1194
"The MyFaces web site front page should start with ""Project Info"" expanded so the mailing list and issue tracker links are immediately visible.",MYFACES-1193
"Change ""Provide Patch"" in JIRA to disallow anonymous changes.

Consider renaming ""Provide Patch"" to ""Provided Patch"" or  ""I provided a patch"".   The name is still confusing users -- some think it's a link to an existing patch while others think it's the way to attach a patch to the issue.

",MYFACES-1192
"I have a page with one panelNavigation at the left, this panelNavigation contains 2 commandNavigation that open the pages inside a IFRAME, when i click in the top level commandNavigation two nested commandNavigations are showed, if i click in the first commandNavigation the action of this component loads the page correctly in the IFRAME, but if i click in second commandNavigation the main page that contains the IFRAME is showed inside the IFRAME.
I'm attaching a zip file with testcase.",MYFACES-1190
"I have a page with one panelNavigation at the left, this panelNavigation contains 2 commandNavigation that open the pages inside a IFRAME, when i click in the top level commandNavigation two nested commandNavigations are showed, if i click in the first commandNavigation the action of this component loads the page correctly in the IFRAME, but if i click in second commandNavigation the main page that contains the IFRAME is showed inside the IFRAME.
I'm attaching a zip file with testcase.",MYFACES-1189
"I have a page with one panelNavigation at the left, this panelNavigation contains 2 commandNavigation that open the pages inside a IFRAME, when i click in the top level commandNavigation two nested commandNavigations are showed, if i click in the first commandNavigation the action of this component loads the page correctly in the IFRAME, but if i click in second commandNavigation the main page that contains the IFRAME is showed inside the IFRAME.
I'm attaching a zip file with testcase.",MYFACES-1188
"I have a page with one panelNavigation at the left, this panelNavigation contains 2 commandNavigation that open the pages inside a IFRAME, when i click in the top level commandNavigation two nested commandNavigations are showed, if i click in the first commandNavigation the action of this component loads the page correctly in the IFRAME, but if i click in second commandNavigation the main page that contains the IFRAME is showed inside the IFRAME.
I'm attaching a zip file with testcase.",MYFACES-1187
"Unless I'm mistaken, I believe the following holds true even in the current 1.1.3-SNAPSHOT

In HtmlDataScrollerTag there is:

setBooleanProperty(component, JSFAttr.IMMEDIATE_ATTR, _immediate);

And then in HtmlDataScroller there is:

    public boolean isImmediate()
    {
        if (_immediate != null)
            return _immediate.booleanValue();
        ValueBinding vb = getValueBinding(""immediate"");
        Boolean v = vb != null ? (Boolean) vb.getValue(getFacesContext()) : null;
        return v != null ? v.booleanValue() : DEFAULT_IMMEDIATE;
    }

But getValueBinding is returning null as it is not (also?) looking in UIComponentBase._attributesMap.",MYFACES-1186
"I'm attaching a patch to add support for the caption facet to tables, as per JSF 1.2.",MYFACES-1184
"I have a JSF configuration file faces-config.xml and put it under /WEB-INF/
In web.xml, setup context-param to load jsf configuration file.
<context-param>
        <param-name>javax.faces.CONFIG_FILES</param-name>
        <param-value>/WEB-INF/faces-config.xml</param-value>
    </context-param>

Then this configuration file will be loaded twice. As /WEB-INF/faces-config.xml will loaded automaticly at first. If I put it in CONFIG_FILES again, it doesn't ignore this file. then phase listener and navigatorHandler has two instances in container which maybe a problem.",MYFACES-1183
It is very hard to figure out what happened when an exception was thrown in saveState()/restoreState() methods. We have made a small investigation on the matter and have found that it was due to the response flushing.,MYFACES-1182
"I encounter a weird problem when working with multiple forms.
I have an outer dataTable and inner dataTable. Each inner dataTable has its own form.
The screen loads ok. But after activating some action (by command link), the page is reloaded, and any component comming after the two dataTables (inner and outer) is being truncated.",MYFACES-1180
"I've the following

  <%request.setAttribute(""today"", new Date());%>
  <h:outputText value=""<h2> #{today} </h2>"" escape=""false"">
    <f:convertDateTime type=""date"" dateStyle=""medium""/>
  </h:outputText>

which should - to section 5.1.2 of the spec - output

  <h2> Mar 16, 2006 </h2>

But outputs:

  <h2> Thu Mar 16 09:29:15 UTC 2006 </h2>

So it seems that f:convertDateTime can't handle 'complex' value binding expression.
",MYFACES-1179
"I've the following

  <%request.setAttribute(""today"", new Date());%>
  <h:outputText value=""<h2> #{today} </h2>"" escape=""false"">
    <f:convertDateTime type=""date"" dateStyle=""medium""/>
  </h:outputText>

which should - to section 5.1.2 of the spec - output

  <h2> Mar 16, 2006 </h2>

But outputs:

  <h2> Thu Mar 16 09:29:15 UTC 2006 </h2>

So it seems that f:convertDateTime can't 'complex' value binding expression.
",MYFACES-1178
"Setting the readonly attribute does not seem to have any effect.  If set to readonly=""true"" it is ignored.  if set to readonly=""#{BB.isReadOnly}"" method getIsReadonly() is never called.  Looks like a bug, but can some one advise me if this has been previously reported or if I am doing something stupid?  Using the literal value or method call for the disabled attribute does work.

Thanks
Ken",MYFACES-1177
"A few times I've found it necessary to have quite a lot of text, and maybe a range of values the user can enter within a radio option.. 

As far as I can see, currently it is not possible to nest other components within a selectOneRadio tag. I don't think it's possible to have your own custom layout of the radio options (in a <ul> list for example) either.",MYFACES-1176
"The <h:selectOneMenu> (and similar) tags require every entry to be of an instance of SelectItem! 

This turned out to be a big pain when I was fetching lots of objects from the database. I had to iterate through them all to create a duplicate Collection of SelectItem instances so I could display them in my menu dropdown. Wouldn't it be better to let objects IMPLEMENT SelectItem functionality instead of having to create a new SelectItem or extending?",MYFACES-1175
"The <convertDateTime > tag uses the default settings for DateFormat , in particular, it does not support setting Lenient to TRUE or FALSE. This results in undesired behaviour  as in : The user inputs 14-13-2006 for the date pattern dd-MM-yyyy and then the following is displayed : 14-01-2007 instead of an exception being thrown for invalid Month of year.
",MYFACES-1174
"Since I can't create a patch due to the problem with eol-style, can someone please make the following change in all the affected poms?

   <dependency>
-      <groupId>struts</groupId>
+      <groupId>org.apache.struts.shale</groupId>
       <artifactId>shale-test</artifactId>
       <version>1.0.1-SNAPSHOT</version>
       <scope>test</scope>		

(Be careful not to change the one dependency on Struts 1.2.8 -- that one hasn't moved yet.)

I've deployed the snapshot to the new location in cvs.apache.org/maven-snapshot-repository, and will leave the old one in place until I see the change go in.

",MYFACES-1173
"When used with el <f: convertDateTime > does not seem to be able to resolve the EL. 
<f:convertDateTime type=""date"" dateStyle=""#{attr.patternStyle}"" pattern=""#{attr.patternFormat}"" />

Typically parttern in ConvertDateTime when you debug the code is null. Yet a system.out displays the right pattern.
Beacsuse the pattern cannot be resolved a convertion error is thrown. When the value of pattern is change to be a static string line ""dd-MM-yyyy"", everything works fine.

In the case above attr is the Object in the current row of a <x:dataTable>",MYFACES-1172
" HtmlCommandButtonRenderer alway renders onclick=""clear_<formName>"". But this will work only if myfaces form renderer was used. 
With custom form renderer (and with ADF faces renderer kit too) function 'clear_<formName>"" does not exist in output html.


",MYFACES-1171
"If xercesImpl-2.7.1.jar is present in application lib directory the application can not start with exception:

java.lang.NullPointerException
	at org.apache.commons.digester.Digester.getXMLReader(Digester.java:899)
	at org.apache.commons.digester.Digester.parse(Digester.java:1647)
	at org.apache.myfaces.config.impl.digester.DigesterFacesConfigUnmarshallerImpl.getFacesConfig(DigesterFacesConfigUnmarshallerImpl.java:183)
	at org.apache.myfaces.config.FacesConfigurator.feedStandardConfig(FacesConfigurator.java:141)
	at org.apache.myfaces.config.FacesConfigurator.configure(FacesConfigurator.java:115)
	at org.apache.myfaces.webapp.StartupServletContextListener.initFaces(StartupServletContextListener.java:63)
	at org.apache.myfaces.webapp.StartupServletContextListener.contextInitialized(StartupServletContextListener.java:46)
	at com.caucho.server.webapp.Application.start(Application.java:1592)
	at com.caucho.server.deploy.DeployController.startImpl(DeployController.java:587)
	at com.caucho.server.deploy.StartAutoRedeployAutoStrategy.startOnInit(StartAutoRedeployAutoStrategy.java:72)
	at com.caucho.server.deploy.DeployController.startOnInit(DeployController.java:475)
	at com.caucho.server.deploy.DeployContainer.start(DeployContainer.java:158)
	at com.caucho.server.webapp.ApplicationContainer.start(ApplicationContainer.java:651)
	at com.caucho.server.host.Host.start(Host.java:385)
	at com.caucho.server.deploy.DeployController.startImpl(DeployController.java:587)
	at com.caucho.server.deploy.StartAutoRedeployAutoStrategy.startOnInit(StartAutoRedeployAutoStrategy.java:72)
	at com.caucho.server.deploy.DeployController.startOnInit(DeployController.java:475)
	at com.caucho.server.deploy.DeployContainer.start(DeployContainer.java:158)
	at com.caucho.server.host.HostContainer.start(HostContainer.java:467)
	at com.caucho.server.resin.ServletServer.start(ServletServer.java:945)
	at com.caucho.server.deploy.DeployController.startImpl(DeployController.java:587)
	at com.caucho.server.deploy.AbstractDeployControllerStrategy.start(AbstractDeployControllerStrategy.java:56)
	at com.caucho.server.deploy.DeployController.start(DeployController.java:483)
	at com.caucho.server.resin.ResinServer.start(ResinServer.java:478)
	at com.caucho.server.resin.Resin.init(Resin.java)
	at com.caucho.server.resin.Resin.main(Resin.java:623)

I'm not sure this is MyFaces trouble, but with downgrade to 1.1.1 release the problem has gone. I use commons-digester-1.7.jar
",MYFACES-1170
"the bug is simple , if you use the tabbedPane with a valuechangelistner , on submit the page , this listner is not called the examplecode is:

    <t:saveState id=""ss1"" value=""#{rwConsultaMatricula.formbean}"" />

    <t:messages id=""messageList"" showSummary=""true"" showDetail=""true"" summaryFormat=""{0}:"" />

	<t:panelTabbedPane styleClass=""tamanhoPanelfixo"" bgcolor=""#FFFFCC"" >
        <t:panelTab id=""Img"" label=""Imagens"">

         <h:form>

		 <h:outputText value=""Images"" style=""font-weight:bold;font-size:14px;color:#FF6600""/>
		 <f:verbatim><br></f:verbatim>
	     <h:panelGrid columns=""2"" columnClasses=""colunaAdireta,colunaAesquerda"">
			<h:outputText value=""Image Description"" style=""font-weight:bold""/>
			<h:panelGroup>
		       <h:selectOneMenu id=""img"" value=""#{rwConsultaMatricula.formbean.toviewImgMatriculaId}"" onchange=""submit()"" valueChangeListener=""#{rwConsultaMatricula.formbean.imgMatriculaChanged}"" immediate=""true"">
		          <f:selectItems value=""#{rwConsultaMatricula.formbean.matriculaSelecionada.imagensComboMenu}"" />
               </h:selectOneMenu>
			</h:panelGroup>
	     </h:panelGrid>
         <h:graphicImage url=""rw_showImgMat.faces""/>
		 <h:message for=""img"" styleClass=""error""/>
         <h:commandButton value=""Refresh"" action=""refreshImage""/>
         </h:form>
        </t:panelTab>

    </t:panelTabbedPane>



The rwConsultaMatricula.formbean.imgMatriculaChanged never called , but if I put the code without tabbedPane , it's WORK !",MYFACES-1169
http://mail-archives.apache.org/mod_mbox/myfaces-dev/200602.mbox/%3c6dac79b90602192233j32cf7fdar58d8392d26657bb1@mail.gmail.com%3e,MYFACES-1168
"When MyFaces are used with Facelets 1.0.12 there is no JavaScript generated if no <h:form> is present.  Very simple example:

<html xmlns=""http://www.w3.org/1999/xhtml""
      xmlns:ui=""http://java.sun.com/jsf/facelets""
      xmlns:h=""http://java.sun.com/jsf/html""
      xmlns:t=""http://myfaces.apache.org/tomahawk"">
<head>
<meta http-equiv=""Content-Type"" content=""text/html; charset=iso-8859-1"" />
<title>Facelets: Number Guess Tutorial</title>
<head>
<link rel=""STYLESHEET"" type=""text/css"" href=""/css/style.css""/>
</head>
</head>

<body>
    <h:commandLink value=""Link"" action=""do""/>
</body>

</html>
[root@boris /mnt/work.1/www]# [root@boris /mnt/work.1/www]# cat test.xhtml
<!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Transitional//EN"" """">

<html xmlns=""http://www.w3.org/1999/xhtml""
      xmlns:ui=""http://java.sun.com/jsf/facelets""
      xmlns:h=""http://java.sun.com/jsf/html""
      xmlns:t=""http://myfaces.apache.org/tomahawk"">
<head>
<meta http-equiv=""Content-Type"" content=""text/html; charset=iso-8859-1"" />
<title>Facelets: Number Guess Tutorial</title>
<head>
<link rel=""STYLESHEET"" type=""text/css"" href=""/css/style.css""/>
</head>
</head>

<body>
        <h:commandLink value=""Link"" action=""do""/>
</body>
</html>

When h:commandLink is inside h:form - all is ok. But... why we can't use h:commandLink without form?
",MYFACES-1167
"There is one common problem with web-applications: disabled components don't send back their value to the server. Now what if you want to change a value per javascript, but not let the user change it?

There is now a new attribute for the extended input text component, ""disabledOnClientSide"", that when set to true willl determine his rendering as disabled. A hidden input field is used to submit back the actual value.",MYFACES-1166
When a converter is created it has its properties set from the configuration by converter class and not by converter id. This means that it is not possible to have different converters (id) implemented by the same class with different configurations specified in the faces configuration file.  ,MYFACES-1165
"  I used Myfaces Core 1.1.2 to test the ""java.lang.IllegalStateException:
Cannot forward after response has been committed"" issue,Now found it:
If redirect in Java back form bean,has no problem.
But if using redirect in filter class, the problem is still exist.
I knowned the two test-cases can pass for Sun RI.
",MYFACES-1164
"Cannot use Myfaces jars installed in JBOSS_HOME/server/default/deploy/jbossweb-tomcat55.sar/jsf-libs as they do not use the correct WebappClassloader but instead an UCL3 classloader.
This is because myfaces use the following line in StateUtils.getAsObject

            ObjectInputStream s = new ObjectInputStream(input);

instead of 
            import org.apache.myfaces.shared.util.MyFacesObjectInputStream;
            ObjectInputStream s = new MyFacesObjectInputStream(input);

The same applies to JspStateManagerImpl.deserializeView().

ObjectInputStream uses Class.forName instead of Thread.currentThread().getContextClassLoader() as the ClassUtils implementation that MyFacesObjectInputStream uses does.",MYFACES-1163
"Our production ECS application (built with WSAD V5.1.2) is running on WAS 5.1.1.6 on 6 (4 processor) Solaris boxes each running 4 VM's for a total of 24 app server instances.  Each App server is tied directly to a web server (IBMHTTPD).  A load balancer at the front selects the web server to use based on equal weighting.  We are not using session clustering so if an app server fails the transaction is lost.

Our application is a JSF application running Apache myfaces V1.1.1.

Under peak load we appear to get threads hung.  As more threads get hung the cpu usage goes up on the box, eventually reaching 100%.
We stopped the web server for this app server so no new activity would hit the app server.
We then did a series of kill -3 to see what the threads were doing.  CPU stayed high.
8 transport threads (341, 339, 8, 7, 6, 5, 3, 2) appear to be hung in a HashMap for each kill -3.

Sample output of native_stdout.log (attached)
""Servlet.Engine.Transports : 339"" daemon prio=5 tid=0x0049ba38 nid=0x74c0 runnable [cdcfb000..cdcffc28]
	at java.util.HashMap.put(HashMap.java:382)
	at javax.faces.component._ComponentAttributesMap.getPropertyDescriptor(_ComponentAttributesMap.java:203)
	at javax.faces.component._ComponentAttributesMap.get(_ComponentAttributesMap.java:124)
	at javax.faces.webapp.UIComponentTag.removeFormerChildren(UIComponentTag.java:268)
	at javax.faces.webapp.UIComponentTag.doEndTag(UIComponentTag.java:241)
	at org.apache.jsp._cardStatus._jspService(_cardStatus.java:4020)
	at com.ibm.ws.webcontainer.jsp.runtime.HttpJspBase.service(HttpJspBase.java:89) ....truncated


",MYFACES-1162
"Within the JSF specs it is needed to put an input field within the form when a client wants to send the form, and the saving method is client. Also, MyFaces adds a field called _link_kidden_ directly within the form tag. This is, by the definition of XHTML invalid. It needs to be in a container element, such as div, span, fieldset, table->tr->td or another container.\

I am trying to make an XHTML valid application, but this way it is not going to happen. Is it possible to solve this? It seems weird to me that a JSF file written in XML form generates non-valid XHTML, because of this. It is the same problem with the Sun libraries, so I go for it that it has to do something with the JSR.

Perhaps making a tomahawk form element would do it?",MYFACES-1161
"1. no value is set to this component
2. An submitted value is empty ("""").
In both cases the getValue() Method will result the valueBinding

Problem:
If any validation error occurs on the page, the submitted empty value will be replaced by the valueBinding and can be <> """"

Any workarounds ??

regards,

Andreas

----- I will close the ticket MYFACES-1056: It's the same background -------",MYFACES-1160
"There is a problem with default time zone in DateTimeConverter.

I want to display date (loaded from db through hibernate), for example: 1970-09-02/00:00:00  (java.util.Date). So dateTimeConverter decrease date by 1 hour and then display 1970-09-01/23:00:00. This is because after init the DateFormat contains time zone default for my host. The only workaround is manualy set local timezone in <f:convertDateTime timeZone=""..."" />. I thing, that the best solution is not set format.setTimeZone(tz) when user doesn't specify other timezone, or set localtimezone ( TimeZone.getDefault() ).",MYFACES-1159
"In FactoryFinder.java, the context classloader is used as the key to set/retrieve the factoryClassNames Map from the _registeredFactoryNames map. Problems will occur if the context classloader used to put a factoryClassNames into the factoryClassNames Map is different from the context classloader used to retrieve a factoryClassNames from the factoryClassNames Map. The context classloader might be different if for instance the application uses a custom classloader which is inserted into the classloader hierarchy by setting the current context classloader as its parent classloader and then setting itself to be the current thread's context classloader.

Is it possible not to use the context classloader as the Map's key? Or perhaps if an entry cannot be retrieved from the Map using the current context classloader, can we use its parent (iteratively) to retrieve from the Map until we get an entry?",MYFACES-1158
"During model update, when an Exception is thrown in the setValue method of the PropertyResolverImpl, it is wrapped in an EvaluationException, which is then caught in the ValueBindingImpl, and again wrapped in another EvaluationException, which is finally caught in the UIInput, where a generic error FacesMessage is rendered to the browser. This could be cleaner, and differs from the way it is done in the Sun RI. The Sun RI does the following:

1. Exception is caught by PropertyResolverImpl, wrapped in an EvaluationException, and thrown again
2. ValueBindingImpl catches the EvaluationException and rethrows it unchanged
3. UIInput catches the EvaluationException and creates an error FacesMessage containing the EvaluationException.getMessage() if it's not null, otherwise a generic error message.",MYFACES-1157
"I've encountered a problem using String values with myfaces. The default behavior of myfaces (probably jsf?) seems to be, that Input values of type String
get converted to an empty String (""""). Instead I would like to have a null value updated in my model. This is because I don't want to have
empty Strings in my DB - but nulls.
",MYFACES-1156
"This started in bugzilla http://issues.apache.org/bugzilla/show_bug.cgi?id=38294  .

MyFaces impl is following the 1.0 behavior, not the 1.1 behavior.
http://java.sun.com/javaee/javaserverfaces/1.1/docs/api/javax/faces/component/UIViewRoot.html#getRenderKitId()
http://java.sun.com/javaee/javaserverfaces/1.0/docs/api/javax/faces/component/UIViewRoot.html#getRenderKitId()

This is a little more complex than just making the method return null.  Doing so breaks more than half the tests.

I would appreciate it if anyone knew how to find out if this is affected by TCK.",MYFACES-1155
"PortletExternalContextImpl#encodeNamespace appends the namespace, whereas the specification requires that it prepend it",MYFACES-1154
"The org.apache.myfaces.portlet.PortletUtil class has been marked as deprecated with the following message:

 @deprecated These utils work only with the MyFaces implementation and therefore should be moved to myfaces-impl in the future

I was unable to find a related Jira task on this, so I don't know how it got there.  It is true that this class is meant to only work with MyFaces, but it already lives in impl.  So, I don't understand why this has been marked deprecated.  It certainly isn't deprecated as in, ""App developers shouldn't use this"".  PortletUtil actually gives portlet developers some flexibility that is not found in the RI.  

Maybe whoever put this there thought it was part of API?

Anyway, if there are no objections, I will remove the @deprecated message soon.",MYFACES-1153
"In HtmlRendererUtils, the content type is chosen by comparing the HTTP Accept header with a list of supported encodings. However, this comparison does not prioritise the Accept header entries in the correct way, as specified in

http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.1

In practice, this leads to Firefox (and probably other browsers) being served pages as text/html rather than application/xhtml+xml, even though it states that it prefers the latter.

On a related note, HtmlRenderKitImpl always chooses ISO-8859-1 as the character encoding. When the content type is XML, the default is UTF-8.

I've created a patch against 1.1.1 (which I'll attach) that corrects both of these problems.

I'm not sure why the code works the way it does. Surely without parsing the real rendered response, you cannot know what the content type & encoding is.

Chris.",MYFACES-1152
"I just installed JBoss 4.0.4RC1and am now getting an issue with myfaces. (I just upgraded from 4.0.3SP1) When I goto a page that you that is protected i get redirected to the form to login. I enter a login and then get a NullPointerException. Here is the output from the console:

....
20:57:04,681 ERROR [[Faces Servlet]] Servlet.service() for servlet Faces Servlet threw exception
java.lang.NullPointerException
        at org.apache.myfaces.renderkit.html.HtmlRendererUtils.selectContentType(HtmlRendererUtils.java:995)
        at org.apache.myfaces.renderkit.html.util.DefaultAddResource.writeResponse(DefaultAddResource.java:791)
        at org.apache.myfaces.component.html.util.ExtensionsFilter.doFilter(ExtensionsFilter.java:142)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:202)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
        at org.jboss.web.tomcat.filters.ReplyHeaderFilter.doFilter(ReplyHeaderFilter.java:96)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:202)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:213)
        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:178)
        at org.jboss.web.tomcat.security.CustomPrincipalValve.invoke(CustomPrincipalValve.java:54)
        at org.jboss.web.tomcat.security.SecurityAssociationValve.invoke(SecurityAssociationValve.java:174)
        at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:514)
        at org.jboss.web.tomcat.security.JaccContextValve.invoke(JaccContextValve.java:74)
        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:126)
        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:105)
        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:107)
        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:148)
        at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:868)
        at org.apache.coyote.http11.Http11BaseProtocol$Http11ConnectionHandler.processConnection(Http11BaseProtocol.java:663)
        at org.apache.tomcat.util.net.PoolTcpEndpoint.processSocket(PoolTcpEndpoint.java:527)
        at org.apache.tomcat.util.net.MasterSlaveWorkerThread.run(MasterSlaveWorkerThread.java:112)
        at java.lang.Thread.run(Thread.java:595)

Once this happens if i reload the page everything is fine. Seems as if something isn't set that should be. This ONLY happens on the request that the login takes place on.

If this is a JBoss issue please let me know. I will repost to them. Please provide me with some detail on what to tell them. (For example what is null but shouldn't be.)

Thanks you.",MYFACES-1151
"In a multi-threaded environment or when using multiple webapps within one container this is subject to fail.
",MYFACES-1149
"Like most weblogic users, our team develops using the exploded war format.  That means that each time we deploy a new version of a class, weblogic automatically picks it up.  The way Weblogic implements this is that when it detects a new class, it drops the classloader for that class, as well as the Servlet and all helper classes that are loaded by the Servlet.  That means FacesServlet is dropped and reloaded.

The problem is that FactoryFinder stores the Factory classes in a Map where the key is the current classloader.  That works fine until I deploy a new class to my webapp.  At that point, weblogic drops the classloader and creates a new one with the new class definition.  Now when FacesServlet.init() calls FactoryFinder.getFactory() (in the new classloader), an IllegalStateException is generated (see below) because the current classloader is not a valid key for the _registeredFactoryNames Map.

One possible solution that I can see to this is to change the key for the Factory map to use the ServletContext's getServletContextName() as the key.  

I am 95% sure this same problem exists in Weblogic 7.0, 8.1 and 9.1 since they all use almost the same Servlet redeployment mechanism.  I have only tried this on Weblogic 9.0.


<Feb 20, 2006 5:38:07 PM EST> <Error> <HTTP> <BEA-101017> <[weblogic.servlet.internal.WebAppServletContext@164c35f - name: 'ma-web-1.0-SNAPSHOT
', context-path: '/ma'] Root cause of ServletException.
java.lang.IllegalStateException: No Factories configured for this Application - typically this is because a context listener is not setup in yo
ur web.xml.
A typical config looks like this;
<listener>
  <listener-class>org.apache.myfaces.webapp.StartupServletContextListener</listener-class>
</listener>

        at javax.faces.FactoryFinder.getFactory(FactoryFinder.java:84)
        at javax.faces.webapp.FacesServlet.init(FacesServlet.java:84)
        at weblogic.servlet.internal.StubSecurityHelper$ServletInitAction.run(StubSecurityHelper.java:265)
        at weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:321)
        at weblogic.security.service.SecurityManager.runAs(SecurityManager.java:121)
        at weblogic.servlet.internal.StubSecurityHelper.createServlet(StubSecurityHelper.java:61)
        at weblogic.servlet.internal.StubLifecycleHelper.createOneInstance(StubLifecycleHelper.java:58)
        at weblogic.servlet.internal.StubLifecycleHelper.<init>(StubLifecycleHelper.java:48)
        at weblogic.servlet.internal.ServletStubImpl.prepareServlet(ServletStubImpl.java:502)
        at weblogic.servlet.internal.ServletStubImpl.checkForReload(ServletStubImpl.java:429)
        at weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:221)
        at weblogic.servlet.internal.TailFilter.doFilter(TailFilter.java:26)
        at weblogic.servlet.internal.FilterChainImpl.doFilter(FilterChainImpl.java:42)
        at oracle.adfinternal.view.faces.webapp.AdfFacesFilterImpl._invokeDoFilter(AdfFacesFilterImpl.java:367)
        at oracle.adfinternal.view.faces.webapp.AdfFacesFilterImpl._doFilterImpl(AdfFacesFilterImpl.java:336)
        at oracle.adfinternal.view.faces.webapp.AdfFacesFilterImpl.doFilter(AdfFacesFilterImpl.java:196)
        at oracle.adf.view.faces.webapp.AdfFacesFilter.doFilter(AdfFacesFilter.java:87)
        at weblogic.servlet.internal.FilterChainImpl.doFilter(FilterChainImpl.java:42)
        at org.apache.myfaces.component.html.util.ExtensionsFilter.doFilter(ExtensionsFilter.java:122)
        at weblogic.servlet.internal.FilterChainImpl.doFilter(FilterChainImpl.java:42)
        at weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.run(WebAppServletContext.java:3020)
        at weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:321)
        at weblogic.security.service.SecurityManager.runAs(SecurityManager.java:121)
        at weblogic.servlet.internal.WebAppServletContext.securedExecute(WebAppServletContext.java:1925)
        at weblogic.servlet.internal.WebAppServletContext.execute(WebAppServletContext.java:1848)
        at weblogic.servlet.internal.ServletRequestImpl.run(ServletRequestImpl.java:1288)
        at weblogic.work.ExecuteThread.execute(ExecuteThread.java:207)
        at weblogic.work.ExecuteThread.run(ExecuteThread.java:179)
>
",MYFACES-1148
"The RI has a context parameter feature, com.sun.faces.verifyObjects .  This performs a whole bunch of QA for components, converters, renderers, and validators .  

MyFaces should do this also but add the following:

Do a file system check for all <to-view-id> in faces-config.xml
Look for duplicate map & list entries in faces-config.xml (currently allowed by both RI and MyFaces)
Look for duplicate managed beans in faces-config.xml (currently allowed by both RI and MyFaces)
Make sure each managed bean is in the classpath.
Make sure each <from-action> exists, and that it has the correct signature.

Mistakes should not throw exceptions, just logging to INFO .

Probably should just call it something like org.apache.myfaces.verify .

In the future, the real benifit would be to apply the same scrutiny to the JSPs.  I would like to do this by converting each one into a xml Document object first.  The only tool I found for this was jsp2XML.java, which is part of the old watchdog repo:

http://mail-archives.apache.org/mod_mbox/jakarta-watchdog-dev/200202.mbox/%3C20020202032125.8221.qmail@icarus.apache.org%3E

I would appreciate it if anyone knew of an alternative.  Also, if anyone can think of anything else reasonable to test for at startup, put it here.",MYFACES-1147
"Since v1.1.1, it is not possible for a JSF page to send raw bytes to the response, such as a PDF from JasperReports, because bytes >127 are always converted to numeric entities even in raw data sent to response.getOutputStream(). Ideally, such character translation should only occur on the Writers, not on the OutputStreams, and/or only when the response's contentType is of an html/xml type. 

Error is caused in: org.apache.myfaces.component.html.util.ExtensionsFilter.doFilter(request, response, chain)

Recommended solution: if response content type is not a text type (eg, ""application/pdf""), make no attempt to encode bytes sent directly to outputstream.

Workaround: in the doFilter method, after the extendedResponse.finishResponse call, if the entendedResponse's contenttype was set to a non-text type, send the output directly without any translation. As a stop-gap solution I did this:
        if(extendedResponse.getContentType().contains(""pdf"")) {
            servletResponse.getOutputStream().write( extendedResponse.getBytes() );
            return;
        }
",MYFACES-1130
"/tomahawk/sandbox/core/src/site/xdoc/index.xml --> /tomahawk/sandbox/core/src/site/apt/index.apt

tomahawk/core/src/site/xdoc/aliasBean.xml --> tomahawk/core/src/site/apt/aliasBean.apt
tomahawk/core/src/site/xdoc/bufer.xml --> tomahawk/core/src/site/apt/buffer.apt",MYFACES-1129
"Provided Patch changes the following:

activeItem Class is now also  set correctly if expandAll is true in PanelNavigation2

SelectOneRow implements all UIInput and HtmlInputTag Attributes (including ValueChangeListener)",MYFACES-1128
"See section 3.2.1.1 in JSF 1.1 for background.

This will works, but shouldn't :

<h:commandButton
	immediate=""true""
	binding=""#{backer.clear}""
	actionListener=""#{backer.clear}"" 
	value=""Clear"" />

public Double clear(ActionEvent event){
	log.info(""clear "");
	return null;
}",MYFACES-1127
"I want to write a testcase for my application with HtmlUnit. Everytime when I make a request to first page of the application I get this in log:
java.lang.NullPointerException
 at org.apache.myfaces.renderkit.html.HtmlRendererUtils.selectContentType(HtmlRendererUtils.java:995)
 at org.apache.myfaces.renderkit.html.util.DefaultAddResource.writeResponse(DefaultAddResource.java:786)
 at org.apache.myfaces.component.html.util.ExtensionsFilter.doFilter(ExtensionsFilter.java:142)
 at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:202)
 at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
 at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValvejava:213)
 at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValvejava:178)
 at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:432)
 at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:126)
 at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:105)
 at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:107)
 at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:148)
 at org.apache.coyote.http11.Http11AprProcessor.process(Http11AprProcessor.java:831)
 at org.apache.coyote.http11.Http11AprProtocol$Http11ConnectionHandler.process(Http11AprProtocol.java:652)
 at org.apache.tomcat.util.net.AprEndpoint$Worker.run(AprEndpoint.java:1203)
 at java.lang.Thread.run(Unknown Source)
 
Because of this, there is an error 500 in the response, so I cannot go on with my testcase.
I modified the HtmlRendererUtils source to test for null and I can access my application from HtmlUnit.
So, I replaced this:
contentTypeListString = (String)
                    context.getExternalContext().getRequestHeaderMap().get(""Accept"");
with this:
if (context != null && context.getExternalContext() != null &&  context.getExternalContext().getRequestHeaderMap() != null) {
            contentTypeListString = (String)
                    context.getExternalContext().getRequestHeaderMap().get(""Accept"");
}
 
It is possible that I have an error in my jsps but I think these tests with null should be also in Myfaces code.
",MYFACES-1125
"<h:messages globalOnly=""true"" showDetail=""true"" infoClass=""portlet-msg-info"" 
				warnClass=""portlet-msg-alert"" errorClass=""portlet-msg-error""
				fatalClass=""portlet-msg-error"" styleClass=""x-portlet-messages""/>

renders:

<ul><li><span style=""x-portlet-messages"" class=""portlet-msg-info"">Form was cancelled; no action taken. </span></li></ul>

But ""x-portlet-messages"" should be a class, not a style.

Moreover, I interpret the tlddocs description {Space-separated list of CSS style class(es) to be applied when this element is rendered. This value must be passed through as the ""class"" attribute on generated markup.} as saying that this class should be applied to the <ul> element (or the <table> element if in table layout), not the individual message.",MYFACES-1123
"FacesContext.getCurrentContext is null in the page following a successful login. The login is a standard JSP forms-based login. The form redirects to j_security_check as normal, then presumably it gets automatically redirected to the originally requested page. That's when the error occurs (see stack trace below). If I then refresh the page, it displays correctly.

12:46:14,137 ERROR [[Faces Servlet]] Servlet.service() for servlet Faces Servlet threw exception
java.lang.NullPointerException
        at org.apache.myfaces.renderkit.html.HtmlRendererUtils.selectContentType(HtmlRendererUtils.java:995)
        at org.apache.myfaces.renderkit.html.util.DefaultAddResource.writeResponse(DefaultAddResource.java:786)
        at org.apache.myfaces.component.html.util.ExtensionsFilter.doFilter(ExtensionsFilter.java:143)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:202)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
        at org.jboss.web.tomcat.filters.ReplyHeaderFilter.doFilter(ReplyHeaderFilter.java:96)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:202)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:213)
        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:178)
        at org.jboss.web.tomcat.security.CustomPrincipalValve.invoke(CustomPrincipalValve.java:54)
        at org.jboss.web.tomcat.security.SecurityAssociationValve.invoke(SecurityAssociationValve.java:174)
        at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:514)
        at org.jboss.web.tomcat.security.JaccContextValve.invoke(JaccContextValve.java:74)
        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:126)
        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:105)
        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:107)
        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:148)
        at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:868)
        at org.apache.coyote.http11.Http11BaseProtocol$Http11ConnectionHandler.processConnection(Http11BaseProtocol.java:663)
        at org.apache.tomcat.util.net.PoolTcpEndpoint.processSocket(PoolTcpEndpoint.java:527)
        at org.apache.tomcat.util.net.MasterSlaveWorkerThread.run(MasterSlaveWorkerThread.java:112)
        at java.lang.Thread.run(Unknown Source)",MYFACES-1121
"The cactus tests aren't run by maven :
mvn tests

example : core/impl/src/test/java/org/apache/myfaces/el/ValueBindingImplCactus.java",MYFACES-1120
Expressions like #{empty undefinedVariable} now throw exception because of LastVariableResolverInChain.resolveVariable throwing an exception if the variable could not be resolved.,MYFACES-1119
"Note to self : remember to move JavaScriptDetectorFilter, WelcomeFileFilter and WelcomeFileHandler from impl to commons.",MYFACES-1112
"In a PhaseListener, first get all the clientId(s) with queued messages, then try to find the components. But ViewRoot.findComponent(clientId) return null.
 
public void beforePhase(PhaseEvent event) {
    FacesContext context = event.getFacesContext();
    UIViewRoot root = context.getViewRoot();
    Iterator<String> itr = context.getClientIdsWithMessages();
    while (itr.hasNext()) {
      String clientId = itr.next();
      UIComponent component = root.findComponent(clientId);
      // ERROR: component is null
      ....
    }
}

From debugger, clientId is 
emp:empForm:empTable:1:salary:_idJsp144

The clientId is returned from context.getClientIdsWithMessages();
It must be valid, but root.findComponent() returns NULL.

JSF should have the following API 
FacesContext.getComponentsWithMessages();

which is better than getClientIdsWithMessages();

",MYFACES-1110
"Hi! 

Following Features are added by this patch:

HtmlPanelNavigationMenu:

	-new Attribute Boolean expandAll: 
		if true all MenuItems are always expanded

	-new Attribute Boolean disabled:
		if true all MenuItems are disabled

	-new Attribute String disabledStyle:
		if a MenuItem is disabled its Style will
		be set to disabledStyle. This can
		be overwritten by disabledStyle Attribute
		of the MenuItem

	-new Attribute String disabledStyleClass:
		if a MenuItem is disabled its StyleClass will
		be set to disabledStyleClass. This can
		be overwritten by disabledStyleClass Attribute
		of the MenuItem

NavigationMenuItem (and UINavigationMenuItem):

	-existing Attribute String icon:
		Implemented that if set an UIGraphic with url:icon
		will be	rendered instead of the UIOutput inside the Link

	-new Attribute String target:
		HTML-Target-Attribute of the created commandLink
		will be set to target if available

	-new Attribute Boolean disabled:
		if true:
		* the rendered CommandLinks disabled-Attribute is set 
		  to true
		* the Style of the rendered CommandLink is set to
		  disabledStyle if available
		* the StyleClass of the rendered CommandLink is set to
		  disabledStyleClass if available
		* All Children-NavigationItems are disabled
		  as well

	-new Attribute String disabledStyle:
		This Style will be used by this Items CommandLink and 
		its Children-NavigationItems if the Item is disabled,
		can be overwritten in a Child-NavigationItem

	-new Attribute String disabledStyleClass:
		This StyleClass will be used by this Items CommandLink and 
		its Children-NavigationItems if the Item is disabled,
		can be overwritten in a Child-NavigationItem

HTMLCommandLink:

	-new Attribute Boolean disabled:
		if true:
		* a HTML-Span-Element is rendered instead
		  of the Anchor-Element 
		* the Style of the rendered Element is set to
		  disabledStyle if available
		* the StyleClass of the rendered Element is set to
		  disabledStyleClass if available

	-new Attribute String disabledStyle:
		This Style will be used by this Components rendered Element 
		if the Component is disabled

	-new Attribute String disabledStyleClass:
		This StyleClass will be used by this Components rendered Element 
		if the Component is disabled
",MYFACES-1108
"UIColumns generates duplicate ID's when using RI. Example JSP fragment:

	<h:form id=""form"">
		<t:dataTable id=""table"" value=""#{testBB.rows}"" var=""row"">
			<t:columns id=""columns"" value=""#{testBB.columnHeaders}"" var=""column"">
				<t:inputText id=""inputText"" value=""#{testBB.columnValue}""/>
			</t:columns>
		</t:dataTable>
	</h:form>

In this example, the inputText each column will get the same ID.",MYFACES-1104
"It would be nice if NavigationHandlerImpl would provide (protected) some access to the runtime configuration (i.e. the NavigationCass lookup).

I have a use case in which I need to access the information and would like to have access to this information in a subclass which
I use as NavigationHandler.

A patch providing a 'getNavigationCase(facesContext,fromAction,outcome) is attachted.",MYFACES-1103
"The forms included in the resulting HTML page contains the same value for the id attributes.

F.ex:

 <input type=""hidden"" name=""jsf_tree_64"" id=""jsf_tree_64"" value=""H4....""/>
 <input type=""hidden"" name=""jsf_state_64"" id=""jsf_state_64"" value=""H4....""/>
 <input type=""hidden"" name=""jsf_viewid"" id=""jsf_viewid"" value=""...""/>

are used for all forms on the page.

This make the page fail W3C/HTMLvalidation.

 Line 239 column 2703: ID ""jsf_state_64"" already defined.
 Line 165 column 2703: ID ""jsf_state_64"" first defined here.
",MYFACES-1097
"Per the JSF spec, ResultSetDataModel.getRowCount() returns -1, to avoid the potential of scrolling through a very large result set to find the number of rows.  This means that components that might be bound to such a result set (such as the ""value"" property on an HtmlDataTable component) must take into account that they might get a -1 back when asking for the row count.

The logic in the encodeInnerHtml() method of HtmlTableRendererBase fails to account for this possibility in the calculation of the ""last"" index to be rendered, and causes zero rows to be printed in a scenario where the table component is bound directly to a ResultSetDataModel, no matter how many rows the result set actually returns.  For example:

    <h:dataTable ... value=""#{mybean.rsdm}"" var=""current"" .../>

where the ""rsdm"" property is a ResultSetDataModel that wraps a ResultSet that returns a non-zero number of rows.  This scenario works correctly with the JSF RI implementation.

For example apps that illustrate this, check the SQL Browser example in Shale, or the ""UIData"" example from the JSF RI's standard demo application.
",MYFACES-1092
"The bug is very strange , i have a form to include a new user... but the form have a selectOneMenu with two options ""1-Insdustry / 2 - Home"" , if i select the Industry option , the form open two new inputTexts to addtional informations:

	       <h:selectOneMenu id=""tipo"" value=""#{webeugUsuario.formbean.tipocadastro}"" onchage=""submit"" immediate=""true"">
		          <f:selectItems value=""#{webeugUsuario.tiposCadastro}"" />
               </h:selectOneMenu>

               <h:outputText value=""Industry Name"" rendered=""#{webeugUsuario.formbean.cadastroInstituicao}""/>
 	       <h:inputText id=""instituicao"" rendered=""#{webeugUsuario.formbean.cadastroInstituicao}"" required=""true"" value=""#{webeugUsuario.formbean.nomeInstituicao}""/>
		<h:message for=""instituicao"" rendered=""#{webeugUsuario.formbean.cadastroInstituicao}"" styleClass=""error""/>
            

               <h:outputText value=""Industry Id"" rendered=""#{webeugUsuario.formbean.cadastroInstituicaoId}""/>
 	       <h:inputText id=""instituicaoId"" rendered=""#{webeugUsuario.formbean.cadastroInstituicao}"" required=""true"" value=""#{webeugUsuario.formbean.nomeInstituicaoId}""/>
		<h:message for=""instituicaoId"" rendered=""#{webeugUsuario.formbean.cadastroInstituicao}"" styleClass=""error""/>


            <h:outputText value=""Nome""/>
 			   <h:inputText id=""nome"" required=""true"" value=""#{webeugUsuario.formbean.nome}"">
			       <f:validateLength minimum=""5""/>
			   </h:inputText>	
			<h:message for=""nome"" styleClass=""error""/>

the field Name always rendered, of course , this field is mandatory , If the selectOneMenu has change , page change , but ,  the name field show a validator error:

""field 'name' has no value""

Of course... i'm not adding new user... just change type of user... i put the immediate option in selectOneMenu , but has no effect.

",MYFACES-1091
myfaces_html.tld incorrectly lists an 'onclick' attribute for the commandLink comonent tag. 'onclick' is not valid for this component per the JSF reference documentation: http://java.sun.com/j2ee/javaserverfaces/1.1_01/docs/tlddocs/index.html,MYFACES-1089
"Cenk Çivici provided the code for a component wich allows to display radio buttons in a datatable column to provide single row selection.
on
http://www.jroller.com/page/cenkcivici?entry=jsf_datatable_single_row_selection

he allowed us to  implement this component in myfaces.

I've implemented the component together with a small example in the sandbox.

Can anyone test this patch and maybe even commit it into the repository?

thanks in advance

Ernst",MYFACES-1088
"I run the examples of Myfaces
On  January 31st , when i click on month's navigator links, the following error happend:
Duplicate component ID '_id0:scheduleNavigator_1141102800000_link'
Previously on forward click from January go to March and another click more the error page.

This error  don't happend on february 1st.
¿?
",MYFACES-1087
"When placed inside of two form tags the HtmlCollapsiblePanel generates a javascript error when a link in the panel is clicked. 
The error seems to come from that the javascript can't find the correct form.

In the code below there is two form tags, one nesting the other. This code generates the error.
Removing one of the form tags makes the page to work properly.

<%@ page session=""false"" contentType=""text/html;charset=utf-8""%>
<%@ taglib uri=""http://java.sun.com/jsf/html"" prefix=""h""%>
<%@ taglib uri=""http://java.sun.com/jsf/core"" prefix=""f""%>
<%@ taglib uri=""http://myfaces.apache.org/tomahawk"" prefix=""t""%>
<html>



<!--
/*
 * Copyright 2004 The Apache Software Foundation.
 *
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
//-->

<body>

<f:view>
  <h:form id=""form1"">
    <t:saveState value=""#{firstCollapsiblePanelBean}""/>
    <t:saveState value=""#{secondCollapsiblePanelBean}""/>
    <t:saveState value=""#{thirdCollapsiblePanelBean}""/>

    <h:form id=""form2"">

        <t:collapsiblePanel id=""test1"" value=""#{firstCollapsiblePanelBean.collapsed}"" title=""testTitle"">
            <h:panelGrid>
                <h:outputText value=""#{firstCollapsiblePanelBean.firstName}""/>
                <h:inputText value=""#{firstCollapsiblePanelBean.surName}""/>
                <t:inputCalendar value=""#{firstCollapsiblePanelBean.birthDate}"" renderAsPopup=""true""/>
            </h:panelGrid>
        </t:collapsiblePanel>

        <t:collapsiblePanel id=""test2"" value=""#{secondCollapsiblePanelBean.collapsed}"" title=""testTitle""
                            var=""test2collapsed"">
            <f:facet name=""header"">
                <t:div style=""width:500px;background-color:#CCCCCC;"">
                    <h:outputText value=""Person""/>
                    <t:headerLink immediate=""true"">
                        <h:outputText value=""> Details"" rendered=""#{test2collapsed}""/>
                        <h:outputText value=""v Overview"" rendered=""#{!test2collapsed}""/>
                    </t:headerLink>
                </t:div>
            </f:facet>
            <f:facet name=""closedContent"">
                <h:panelGroup>
                    <h:outputText value=""#{secondCollapsiblePanelBean.firstName}""/>
                    <h:outputText value="" ""/>
                    <h:outputText value=""#{secondCollapsiblePanelBean.surName}""/>
                    <h:outputText value="", born on: ""/>
                    <h:outputText value=""#{secondCollapsiblePanelBean.birthDate}""/>
                </h:panelGroup>
            </f:facet>
            <h:panelGrid>
                <h:outputText value=""#{secondCollapsiblePanelBean.firstName}""/>
                <h:inputText value=""#{secondCollapsiblePanelBean.surName}""/>
                <t:inputCalendar value=""#{secondCollapsiblePanelBean.birthDate}"" renderAsPopup=""true""/>
            </h:panelGrid>
        </t:collapsiblePanel>

        <t:collapsiblePanel id=""test3"" value=""#{thirdCollapsiblePanelBean.collapsed}"" title=""testTitle""
                            var=""test2collapsed"">
            <f:facet name=""header"">
                <t:div style=""width:500px;background-color:#CCCCCC;"">
                    <h:outputText value=""Person""/>
                    <t:headerLink immediate=""true"">
                        <h:outputText value=""> Details"" rendered=""#{test2collapsed}""/>
                        <h:outputText value=""v Overview"" rendered=""#{!test2collapsed}""/>
                    </t:headerLink>
                </t:div>
            </f:facet>
            <f:facet name=""closedContent"">
                <h:panelGroup>
                    <h:outputText value=""#{thirdCollapsiblePanelBean.firstName}""/>
                    <h:outputText value="" ""/>
                    <h:outputText value=""#{thirdCollapsiblePanelBean.surName}""/>
                    <h:outputText value="", born on: ""/>
                    <h:outputText value=""#{thirdCollapsiblePanelBean.birthDate}""/>
                </h:panelGroup>
            </f:facet>
            <h:panelGrid>
                <h:outputText value=""#{thirdCollapsiblePanelBean.firstName}""/>
                <h:inputText value=""#{thirdCollapsiblePanelBean.surName}""/>
                <t:inputCalendar value=""#{thirdCollapsiblePanelBean.birthDate}"" renderAsPopup=""true""/>
            </h:panelGrid>
        </t:collapsiblePanel>

        <t:dataTable id=""test_dt"" var=""person"" value=""#{thirdCollapsiblePanelBean.persons}"" preserveDataModel=""false"">
            <h:column>
                <t:collapsiblePanel id=""test4"" var=""test4collapsed"" value=""#{person.collapsed}"">
                    <f:facet name=""header"">
                        <t:div style=""width:500px;background-color:#CCCCCC;"">
                            <h:outputText value=""Person""/>
                            <t:headerLink immediate=""true"">
                                <h:outputText value=""> Details"" rendered=""#{test4collapsed}""/>
                                <h:outputText value=""v Overview"" rendered=""#{!test4collapsed}""/>
                            </t:headerLink>
                            <h:commandLink value="" test"" action=""#{person.test}""/>
                        </t:div>
                    </f:facet>
                    <h:inputText id=""firstname_input"" value=""#{person.firstName}""/>
                    <h:commandLink value=""test"" action=""#{person.test}""/>
                </t:collapsiblePanel>
            </h:column>
        </t:dataTable>
 
   </h:form>
</h:form>

</f:view>

</body>

</html>

Many regards / Petter Hellstrom
",MYFACES-1086
Line 369 in class DebugUtils does not print the MethodeBinding. Printing the evaluated trem is missing.,MYFACES-1085
"I downloaded the nightly build of 01 frebuary. When the application is going to renderize the jscookMenu throw a exception 
NoSuchMethodError.
the method is this:
new org.apache.myfaces.renderkit.html.util.DummyFormUtils().getDummyFormResponseWriter
of myfaces-commons package.",MYFACES-1083
"I include <t:focus id=""focus"" for=""text8"" /> (where text8 is my field name that I want to put focus on) in my .jsp. I also includeed tomahawk.jar under WEB-INF/lib and updated my TLD to include the new focus tag. According to the page describing  focus , the tag class  should be under org.apache.myfaces.custom.focus.HtmlFocusTag. I expand the .jar, both tomahawk and sandbox and I see no sign of focus. CAn you tell me how to do this?",MYFACES-1082
"This is just a temporary issue. Intellij IDEA users need to be able to download a patched version of the maven-idea-plugin 
to build Apache MyFaces.",MYFACES-1081
"When the ExtensionsFilter is installed, the string ""null"" is added in every generated page.
The string ""null"" is inserted before closing body element tag.
The cause of the problem is the following code in ""org.apache.myfaces.renderkit.html.util.AddResource.writeMyFacesJavascriptBeforeBodyEnd"":

String myFacesJavascript = (String) request.getAttribute(""org.apache.myfaces.myFacesJavascript"");
            originalResponse.insert(beforeBodyEndPosition, myFacesJavascript);

The SUN RI does not put in the request any attribute called ""org.apache.myfaces.myFacesJavascript"", so NULL is printed.

The solution seems to be trivial.",MYFACES-1080
"My project use the jscookMenu, then when I just configured the MyFaces Extension Filter, is rendered a 'null' string at bottom of all pages.... right before the </body> tag, like this 

null</body>

Martin Marinschek <martin.marinschek@gmail.com> tell me to report this issue and warning and assign Bruno
Aranda about it...
",MYFACES-1079
"After Sessionexpiration or restarting Tomcat: If clicking on any link on the JSF Page I get the following Exception:

java.lang.NullPointerException
        at org.apache.myfaces.renderkit.html.HtmlRendererUtils.selectContentType(HtmlRendererUtils.java:919)
        at org.apache.myfaces.component.html.util.AddResource.writeWithFullHeader(AddResource.java:443)
        at org.apache.myfaces.component.html.util.ExtensionsFilter.doFilter(ExtensionsFilter.java:132)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:202)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
        ........

I am using ServerState-Saving. I also read on the internet that using jscookmenu might be the problem but anyway: The Nullpointer shouldn't be thrown...",MYFACES-1075
"The web-facesconfig_1_1.dtd file is not included in the myfaces-impl-1.1.2-SNAPSHOT.jar file.

It should reside in the org.apache.myfaces.resource package.

This causes great pain for those of us behind a corporate fire wall.

It causes a the faces servlet to fail during initialization.

Thanks,

DKD",MYFACES-1074
"The Eclipse project files (.project, .classpath etc...) that are generated by the maven eclipse plugin should be ignored by Subversion.",MYFACES-1071
"Here are the steps to reproduce:

1) Submit a form inside of JSF-based portlet (in other words generate a Faces request)
2) Hit JBoss Portal URL page URL (I believe this causes the page and portlets to re-render)
3) Hot-redeploy WAR file containg the portlet.

You no can't get to the page because the portlet throws a NPE. Here is partial stack trace:

java.lang.NullPointerException
        at org.apache.myfaces.portlet.MyFacesGenericPortlet.facesRender(MyFacesGenericPortlet.java:393)
        at org.apache.myfaces.portlet.MyFacesGenericPortlet.doView(MyFacesGenericPortlet.java:266)
        at javax.portlet.GenericPortlet.doDispatch(GenericPortlet.java:154)
        at javax.portlet.GenericPortlet.render(GenericPortlet.java:394)
        at org.jboss.portal.portlet.PortletContainer.invokeRender(PortletContainer.java:499)
        at org.jboss.portal.portlet.PortletContainer.dispatch(PortletContainer.java:416)

The problem seems to be that FacesContextImpl object is no longer in PortletSession even though the PortletSession itself is present. This is probably a bug in JBoss Portal. However, facesRender method should check for null FacesContextImpl and treat it as a non-Faces request (just like when PortletSession times out).

",MYFACES-1070
"The file .../custom/calendar/resource/pt.js used by inputCalendar is prototype.js 1.4.0
The same lib  .../custom/prototype/resource/prototype.js is used by inputSuggestAjax.

This results in including this lib twice on pages with both components which results in an error. 
See: http://www.mail-archive.com/dev%40myfaces.apache.org/msg10029.html

inputCalendar shluld use prototype.js from prototype dir.",MYFACES-1065
The source code of the JSF Client Side Validator Component Library donated by Cagatay Civici.,MYFACES-1060
"Impatient users can click on a command button or link multiple times, causing multiple HTML submit operations. This causes all sorts
of complications.

It would be nice if the standard javascript generated by command components would disable submitting after the first time.
I believe this is fairly simple: set a javascript variable to ""true"" when the form.submit is performed. Test this variable whenever
a submit is to be performed, and ignore it if the var is set.

On a related issue, multiple submits from the same user cause nasty problems at the back end because the view tree is not thread-safe.
Multiple submits cause multiple servlet engine threads to run in parallel, accessing the same view tree. A solution is to synchronize
on the user's session object; perhaps this should be part of standard MyFaces functionality?",MYFACES-1058
"For the case that any component on the page got a validation error and the value of this component has been changed to empty, these changes will not be visible after rendering !!

HtmlTextRendererBase uses the RendererUtils.getStringValue(...) Method and that class uses the getValue() Method for retrieving the value. To my mind it should use  the getLocalValue() Method, because the user wants the changed value being rendered.

->
""getValue()"" get the value from the ValueBinding of this component.
""getLocalValue()"" get the value from the Attribut _value of this component

",MYFACES-1056
I wish to contribute my translation of the Messages bundle into Polish. I am a native speaker of that language.,MYFACES-1054
"I followed up on an idea mentioned by Simon a while back to compare MyFaces w/ the RI using http://clirr.sourceforge.net/ .  The output was a little buggy, but it appears they are pretty close ;-) 

The RI has a protected UIInput.compareValues(), which is the same thing as the MyFaces version of this - protected UIInput.valuesDifferent() .  UISelectMany is effected by this as well, since it currently overrides valuesDifferent().

The timeZone field of DateTimeConverter should go back to private.  I changed the sandbox child of this class (which does not work with the RI) accordingly.

Dennis Byrne",MYFACES-1049
"The h:selectOneRadio tag with pageDirection layout will be rendered as an HTML table having two closing tr tags per item.
This causes serious rendering problems in Firefox.

Example:
    <h:selectOneRadio
      layout=""pageDirection""
      value=""1"">

      <f:selectItem
        itemValue=""1""
        itemLabel=""One"" />
      <f:selectItem
        itemValue=""2""
        itemLabel=""Two"" />

    </h:selectOneRadio>

Results in
<table>		<tr><td><label><input type=""radio"" name=""_id0"" checked=""checked"" value=""1"" />&#160;One</label></td></tr></tr>		<tr><td><label><input type=""radio"" name=""_id0"" value=""2"" />&#160;Two</label></td></tr></tr></table>
",MYFACES-1046
"I use an alternative version of the AddResource. class 

The two areas which I have customised are the getResourceUri() method (which rewrites the URL to call resources through a forwarding controller servlet) and writeWithFullHeader() (which has different rules as to where insertions will take place when there is no <head> or <body> tags, as the applications only output HTML fragments).

Currently to do this a custom MyFaces has to be built.

Ideally, AddResource would be an interface. An AddResourceFactory class would provide the getInstance() method (or equivalent). This method would check for a context parameter specifying the implementation class to use. If not specified, an instance of DefaultAddResource would be used. DefaultAddResource would be non-final and would therefore be subclassed to provide the customisations described above.

Would this be a suitable change? If so, I would be happy to implement the change and supply a patch.

Thanks",MYFACES-1034
"This probably violates the spec and may not even be in MyFaces scope. (hence 'minor')

I have an implementation where it is (performance-wise) better to call something like 'bean.isEmpty()' than 'bean.getContents().isEmpty()', so in EL that would translate to #{bean.empty} rather than #{empty bean.contents}.

The problem here of course is that empty is a keyword and #{bean.empty} will not parse.
The obvious solution is for me to change the method name from 'isEmpty' to 'isNonEmpty' and negate all calls. However, the name 'isEmpty' is the most natural and 'normal' way to go about it.

Maybe it is possible for the EL parser to check whether a property 'empty' exists before jumping to conclusions. Nobody would use the empty keyword immediately after a dot operator.

Alternatively, allow the use of #{empty bean} which would have the effect of determining whether there is a property 'empty' or a method 'isEmpty' in the bean, like it is done with Collections. Of course I could make my bean a Collection, but that would just be a hack. But so is renaming the method IMHO...
",MYFACES-1033
"The attached patch will introduce a new javascript method which will be used for the commandLink form submission handling.

The name of this new javascript method is ""myfcs_sbmt"" and will be rendered once (on first use) into the html.
It allows to pass in 4 parameters:
frm - form name
srcElement - the element issuing the onclick - the anchor tag in the current case
target - the target (not strictly necessary for the anchor, but useable for the future (commandButton) )
prms - a javascript hash array for the components f:params
See the resulting javascript below.

The resulting href-onclick tag will be
<a href=""#"" onclick=""clear_navigation_3Atest();return myfcs_sbmt('navigation:test',this,'',{'p1':'pv1','p2':'pv2'})"" id=""navigation:test:_idJsp31"">params</a>

Next thing to do will be to get rid of the clear_() method, but one after the other.

It would be REALLY GREAT if one of you developers can have a look at this (for sure) rather large patch. If you are happy it would be even MORE GREAT if you could apply it so that I can see how it works in wild life.
If everything is fine I will have a look how to get rid of the clear_ methods and move on to the commandButton. There is not much to win, but a little bit is better than nothing ;-)
Especially it would be nice if both use the same (centralized) methods to render their onClick things.


The new javascript (rendered without any newline in reality)

function myfcs_sbmt(frm,srcElem,target,prms)
{
	var formElement = document.forms[frm];
	document.forms[frm].elements['autoScroll'].value=getScrolling();
	formElement.elements[frm+':_link_hidden_'].value=srcElem.id;

	if (target != '')
	{
		formElement.target=target;
	}

	for (var paramName in prms)
	{
		formElement.elements[paramName].value=prms[paramName];
	}

	if(formElement.onsubmit)
	{
		var result=formElement.onsubmit(); 
		if( (typeof result == 'undefined') || result )
		{
			formElement.submit();
		}
	}
	else
	{
		formElement.submit();
	}
	return false;
}",MYFACES-1032
"If a test-case sets a facesContext and forgets to remove it again subsequent tests may fail if they use ""null"" as wanted facesContext.

The patch introduce a new AbstractTestCase which
*) ensure the facesContext is null in startUp()
*) set the facesContext to null in tearDown()

I changed UISelectManyTest and UIComponentBaseTest to use this new super class
",MYFACES-1031
"MyFaces will let you do this (same ids, renders two trees):

    <t:tree id=""tree"" value=""#{treeModel}""
        styleClass=""tree""
        nodeClass=""treenode""
        selectedNodeClass=""treenodeSelected""
        expandRoot=""true"">
    </t:tree>
    <h:outputText id=""tree"" value=""This text will not be rendered"" />

See my comments in http://issues.apache.org/jira/browse/MYFACES-1020 for an explanation.",MYFACES-1029
"The attached patch makes the autoUpdateDataTable work even if its added via an facet (panelLayout)

The main problem can be located in org/apache/myfaces/custom/util/ComponentUtils.java this will traverse all children but not the facets and thus the component cant be found.
AjaxDecodePhaseListener uses this utility class.

I changed it to use root.getFacetsAndChildren() - not it works.
This utility method is used in some other places too, so I dont know if this change makes the other work better too, or break them.

If you would like to I can - instead of change this method - create a new one which will be used in AjaxDecodePhaseListener then.

---
Mario",MYFACES-1028
"I can reproduce this in the nightly, but I assume it happens in 1.1.1 as well.

The output of a page reaches the browser before the state for that page is stored. The result is that if a browser quickly requests that pages state, it is possible the state isn't stored yet and access to it will fail. I'm not certain, but I belive the proper thing to do would be to block on access to a given view if another thread is still accessing it. I do not have this problem with the RI, but since this is a race condition it is possible I just never hit it.",MYFACES-1027
"Calling StateManager.restoreView has the side effect of messing up the stored state.

In 1.1.1, calling this method would remove the state from the session, and therefore it would be lost forever if the lifecycle didn't re-render causing the state to be re-stored.

In 1.1.2, multiple states are now stored, but calling this method causes the index number of the current state to be incremented even though a new state may never be stored.

While this bug isn't seen in normal use, it pops up quite quickly when attempting more complicated/different AJAX-style lifecycles.",MYFACES-1026
"<h:panelGrid columns=""3"" styleClass=""logintable"">

renders

<table border=""0"" class=""logintable"">

Sun's implementation does not render a border-attribute.",MYFACES-1025
"( Martin, nevermind StateUtils )",MYFACES-1022
Does myfaces-jsf-api.jar apply to apache license too or has it another legal status?,MYFACES-1021
"I am having this problem for a long time and lost any hope of getting a decent answer in any forum:
It seems like JSF does not give any solution to initial state problem.
A simple example:
I want to show a simple table that is being updated according to several filters.
The table should be shown with initial data according to filters selections.
The actions that I am doing are:
1) To show initially the table, on the backing bean constructor I am loading the table data.
2) On any ""valueChange"" of every filter I want to load the new data of the table also, so I load the data again.

This causes the data of the table to be loaded twice: once in the constructor and second in the value change listener method.

This problem happens in many variations many times in JSF. Is there a way of initializing data properly ?
For example, I would expect that in addition to the constructor there will be 2 additional methods:
1) init() - Will be called when screen first loads.
2) reinit() - Will be called when screen is reloaded.

Am I missing here something ?  Or there is a solid agreed way of solving the initial state term in JSF.
By the way, I have to initialize data dynamically and not using managed properties.",MYFACES-1019
"Currently when JSFMessages are added to the FacesContext those messages are lost  when a redirect is issued. This is a problem for a handler that does some validation that adds messages and then returns a navigation case that has a redirect.

A PhaseListener can be written that will persist the current JSFMessages in the user's session and then reloads them into the FacesContext on the next request. Since the application will almost never want to add messages to the context and have them immediately be lost, the presence of this listener would help ensure that the message manager matches the expected result.",MYFACES-1018
"Initializing a bean property from <map-entries> or <list-entries> elements only work's if there is a appropriate getter (otherwise a PropertyNotFoundException is thrown). According to JSF specification a getter should be optional.

The JSF specification for initialization bean properties from <map-entries> elements says:

1. Call the property getter, if it exists.
2. If the getter returns null or doesn't exist, create a java.util.HashMap,
otherwise use the returned java.util.Map.
...
",MYFACES-1017
"Please do not place faces-config.xml in meta-inf.  Provide consumers with the fact that they need to modify (in what ever whay thier implementation provides for) the FacesContextFactory and ViewHandler attributes to incorperate the portlet classes.  

To include this file creates a ""auto-magical"" overwriting of the basic implementations information.  This is making the assumption (the bad assumption) that no other class is interested in the basic implementaiton before it is usurped.

These are libraries. One might observe low level libraries.  It seems a poor design decision to include application configuration at such a low level.",MYFACES-1016
"I have a class named FieldOccurrenceStruct, which contains a String property called xPath. This property has getter and setter methods (getXPath, setXPath), both of which have the correct return and argument types (String).

One of my JSF pages has a dataTable, whose value is an ArrayList of FieldOccurrenceStructs. The problem is, when I map a column to the xPath property, I get an Error 500. The exact error message is:

Error 500: Bean: com.thenational.otkr.dmi.structs.FieldOccurrenceStruct, property: xPath

That's all it says, and it goes without saying that I get no dataTable. FieldOccurrenceStruct is not even a backing bean, its a POJO, so I'm not sure why it is being referred to as ""Bean"".

As a workaround, I was able to get it working by renaming the xPath property to path (along with the getter/setter to getPath and setPath), so this leads me to the conclusion that either MyFaces doesn't like the name xPath for a property (unlikely), or there is some hidden (?) requirement that properties must have more than one lowercase letter before the first uppercase letter (even less likely).

I call BUG!",MYFACES-1015
"Hi,
I'm trying using Tomahawk t:dataTable and it seems to me that its behaviour is very different from the standard  JSF h:dataTable.
Consider a column which contains a command button and a table with two rows. When the user clicks on the button of the first row, two action events are generated!

For example, look at this very simple code:

<f:view>
   <h:form>
       <h:dataTable value=""#{testBean.persons}"" var=""item"" binding=""#{testBean.uiData}"">
           <h:column>
               <h:commandButton value=""Test"" action=""#{testBean.test}""></h:commandButton>
           </h:column>
           <h:column>
               <h:outputText value=""#{item.name}""></h:outputText>
           </h:column>
           <h:column>
               <h:outputText value=""#{item.surname}""></h:outputText>
           </h:column>
       </h:dataTable>
             <t:dataTable value=""#{testBean.persons}"" var=""item"" binding=""#{testBean.htmlDataTable}"" preserveDataModel=""false"">
           <t:column>
               <h:commandButton value=""Test"" action=""#{testBean.test2}""></h:commandButton>
           </t:column>
           <t:column>
               <h:outputText value=""#{item.name}""></h:outputText>
           </t:column>
           <t:column>
               <h:outputText value=""#{item.surname}""></h:outputText>
           </t:column>
       </t:dataTable>
   </h:form>
</f:view>

When the user clicks the ""Test"" button of the h:dataTable, the ""testBean.test"" method is executed just one time.
But when the user clicks the ""Test"" button of the t:dataTable the ""testBean.test2"" method is executed twice ( or three times if the table has 3 rows, and so on...).

I suppose  that the problem is that the elements of  t:dataTable which belongs to differnt rows have the same ID, and during the processDecode phase the same event is broadcasted more than one time.
In fact, this is the html code which is generated by Tomahawk extended datatable:

<table>
<tbody id=""_id0:_id8:tbody_element"">
<tr>
<td><input type=""submit"" name=""_id0:_id8:_id10"" value=""Test"" /></td>
<td>John</td>
<td>Smith</td>
</tr>
<tr><td><input type=""submit"" name=""_id0:_id8:_id10"" value=""Test"" /></td>
<td>Mark</td>
<td>Greene</td>
</tr></tbody>
</table>


and this is the html code which is generated by RI h:dataTable:

<table>
<tbody>
<tr>
<td><input type=""submit"" name=""_id0:_id1:0:_id3"" value=""Test"" /></td>
<td>John</td>
<td>Smith</td>
</tr>
<tr>
<td><input type=""submit"" name=""_id0:_id1:1:_id3"" value=""Test"" /></td>
<td>Mark</td>
<td>Greene</td>
</tr>
</tbody>
</table>




",MYFACES-1010
"FACES SERVLET  is not secure when useing prefix mapping such as    /faces/* .
users can access any contents in  WEB-INF directory.

try following in your faces website  :

http://localhost/mywebsite/faces/WEB-INF/web.xml
http://localhost/mywebsite/faces/WEB-INF/lib/

",MYFACES-1008
"In some case the autoscroll feature doesn't work in Internet explorer 6. Especially when the rendered HTML contains a lot of div.
This is due to a bug in Internet Explorer.

The solution I found is to modify the renderAutoScrollFunction method in org.apache.myfaces.renderkit.html.util class.

I changed the following line :
script.append(""window.scrollTo("").append(x).append("","").append(y).append("");\n"");
to
script.append(""setTimeout('window.scrollTo("").append(x).append("","").append(y).append("")',1);\n"");

The setTimeout let IE finish whatever it has to to get a right layout of the HTML elements on the page.",MYFACES-1007
"Data tables usually have the following look and feel:
1) rows are light/dark.
2) when moving over a row it is shown selected.

For showing rows light/dark it is possible to do:
rowClasses=""reportRowLight,reportRowDark""

For showing selected row it is possible to do:
rowOnMouseOver=""this.className='reportRowOver'""
rowOnMouseOut=""this.className='reportRowLight'""

but, it is not possible restoring the previous color of the row before the selection. since: rowOnMouseOut property do not support multiple rows. for example, something like this:
rowOnMouseOver=""this.className='reportRowOver'""
rowOnMouseOut=""this.className='reportRowLight',this.className='reportRowLight'""
",MYFACES-1006
"I need a slick tree without any image rendererd, using a special renderer I magaed to have ""client side"" toggling without the need to have the nav image.

Attached is just a small fix to make tree.js work without navImageId",MYFACES-1002
"Well, after updating MyFaces code my application stoped to work. I update all jakarta-commons libraries (ant others) with the availabe at ""lib"" directory.

File lib/commons-collections.jar is version 3.0 (from MANIFEST.MF):

Package: org.apache.commons.collections
Extension-Name: commons-collections
Specification-Version: 3.0
Specification-Vendor: Apache Software Foundation
Specification-Title: Commons Collections
Implementation-Version: 3.0
Implementation-Vendor: Apache Software Foundation
Implementation-Vendor-Id: 

which broked my application.

After replacing this file with a 3.1 version from the examples (the same I had previously), everithing worked again.

If anyone is interested, error trace was:

javax.faces.FacesException: org.apache.commons.collections.map.LRUMap.<init>(IZ)V
        at org.apache.myfaces.context.servlet.ServletExternalContextImpl.dispatch(ServletExternalContextImpl.java:422)
        at org.apache.myfaces.application.jsp.JspViewHandlerImpl.renderView(JspViewHandlerImpl.java:234)
        at org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:372)
        at javax.faces.webapp.FacesServlet.service(FacesServlet.java:109)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:252)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
        at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:672)
        at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:463)
        at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:398)
        at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:301)
        at com.linkingpaths.mysite.cms.ContentPathTranslationFilter.doFilter(ContentPathTranslationFilter.java:52)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:202)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:213)
        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:178)
        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:126)
        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:105)
        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:107)
        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:148)
        at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:868)
        at org.apache.coyote.http11.Http11BaseProtocol$Http11ConnectionHandler.processConnection(Http11BaseProtocol.java:663)
        at org.apache.tomcat.util.net.PoolTcpEndpoint.processSocket(PoolTcpEndpoint.java:527)
        at org.apache.tomcat.util.net.LeaderFollowerWorkerThread.runIt(LeaderFollowerWorkerThread.java:80)
        at org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:684)
        at java.lang.Thread.run(Thread.java:613)
Caused by: javax.servlet.ServletException: org.apache.commons.collections.map.LRUMap.<init>(IZ)V
        at org.apache.jasper.runtime.PageContextImpl.doHandlePageException(PageContextImpl.java:848)
        at org.apache.jasper.runtime.PageContextImpl.handlePageException(PageContextImpl.java:781)
        at org.apache.jsp.cms.public_.index_jsp._jspService(org.apache.jsp.cms.public_.index_jsp:112)
        at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:97)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:802)
        at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:322)
        at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:314)
        at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:264)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:802)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:252)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
        at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:672)
        at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:463)
        at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:398)
        at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:301)
        at org.apache.myfaces.context.servlet.ServletExternalContextImpl.dispatch(ServletExternalContextImpl.java:416)
        ... 24 more",MYFACES-1001
"I've update my copy of myfaces from SVN and the update doesn't work. It seems that this default configuration file isn't packed in any jar.

2006-01-04 13:09:50,067 [main] ERROR org.apache.myfaces.webapp.StartupServletContextListener - Error initializing ServletContext
javax.faces.FacesException: Standard faces config org/apache/myfaces/resource/standard-faces-config.xml not found
        at org.apache.myfaces.config.FacesConfigurator.feedStandardConfig(FacesConfigurator.java:139)
        at org.apache.myfaces.config.FacesConfigurator.configure(FacesConfigurator.java:115)
        at org.apache.myfaces.webapp.StartupServletContextListener.initFaces(StartupServletContextListener.java:63)
        at org.apache.myfaces.webapp.StartupServletContextListener.contextInitialized(StartupServletContextListener.java:46)
        ...",MYFACES-1000
"A selectOneMenu that I have been using successfully in MyFaces 1.0.9 is now broken. Whenever I try to submit my form I get the error ""Value is not a valid option""

The code looks legal to me and is as follows:

<h:selectOneMenu id=""prioritySrc"" value=""#{taskList.priority}"">
<f:selectItems value=""#{taskForm.priorityItems}""/>
</h:selectOneMenu>

The backing bean code is:

private static SelectItem[] priorityItems = {
new SelectItem(new Integer(1), ""High""),
new SelectItem(new Integer(2), ""Medium""),
new SelectItem(new Integer(3), ""Low""),
};

public SelectItem[] getPriorityItems() {
return priorityItems;
}

I have confirmed that this problem does go away when I switch back to 1.0.9",MYFACES-999
"Would like to be able to do something like this:

<h:outputText value=""#{bean.dateField}"">
  <t:convertDateTime pattern=""yyyy-MM-dd"" default=""not provided""/>
</h:outputText>

or alternately, <h:outputText value=""#{bean.anyField}"" default=""(print this if value is null)"">....

same for numbers.

It would seem cleaner to keep this in the view/JSP layer rather than pushing default-if-null logic into the controller/bean.  ",MYFACES-998
"The error message for the key org.apache.myfaces.Email.INVALID_detail is 
   Der eingegebene Wert ({0}) ist keine korrekte E-Mail-Adress.
But it must be:
    Der eingegebene Wert ({0}) ist keine korrekte E-Mail-Adresse.
                                                                                                                 --
or better german:
   Der eingegebene Wert ({0}) ist keine gültige E-Mail-Adresse.",MYFACES-994
"In the implementation of each UIComponent, the canonical logic for retrieving a non-String property is to cast the result
of the valueBinding.getValue() method to the expected type.

    public boolean isItemDisabled()
    {
        if (_itemDisabled != null) return _itemDisabled.booleanValue();
        ValueBinding vb = getValueBinding(""itemDisabled"");
        Boolean v = vb != null ? (Boolean)vb.getValue(getFacesContext()) : null;
        return v != null ? v.booleanValue() : DEFAULT_ITEMDISABLED;
    }

Yields an obscure stack trace that doesn't yield the ID of the component or the property that is being referenced:

ERROR 14:45:28 [[jsp]] Servlet.service() for servlet jsp threw exception
java.lang.ClassCastException: java.lang.String
        at javax.faces.component.html.HtmlInputText.isDisabled(HtmlInputText.java:117)
        at org.apache.myfaces.renderkit.html.HtmlTextRendererBase.isDisabled(HtmlTextRendererBase.java:157)
        at org.apache.myfaces.renderkit.html.ext.HtmlTextRenderer.isDisabled(HtmlTextRenderer.java:45)
        at org.apache.myfaces.renderkit.html.HtmlTextRendererBase.renderInput(HtmlTextRendererBase.java:144)
        at org.apache.myfaces.renderkit.html.HtmlTextRendererBase.encodeEnd(HtmlTextRendererBase.java:50)
        at org.apache.myfaces.renderkit.html.ext.HtmlTextRenderer.renderNormal(HtmlTextRenderer.java:72)
        at org.apache.myfaces.renderkit.html.ext.HtmlTextRenderer.encodeEnd(HtmlTextRenderer.java:58)

",MYFACES-990
"This is a bug which exist in JSF RI, and also exists in MyFaces.
Check out this forum post which describes it in detail.

http://forum.java.sun.com/thread.jspa?threadID=581959&tstart=45

The problem also occurs when a container in a higher level contains a similar rendered attribute. In my case a panelGroup.",MYFACES-987
"I defined Speyside as the only theme to use. 
The theme configuration in my tobago-config.xml is:
<theme-config>
  <default-theme>org.apache.myfaces.tobago.context.SpeysideTheme</default-theme>
</theme-config>

It seems that Tobago requires the Scarborough theme anyway. Since I only want to use Speyside, it's the only theme in my lib dir.

INFO  [org.apache.myfaces.tobago.webapp.TobagoServletContextListener] - *** contextInitialized ***
ERROR [org.apache.commons.digester.Digester] - End event threw exception
java.lang.reflect.InvocationTargetException
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.commons.beanutils.MethodUtils.invokeMethod(MethodUtils.java:216)
	at org.apache.commons.digester.CallMethodRule.end(CallMethodRule.java:585)
	at org.apache.commons.digester.Rule.end(Rule.java:228)
	at org.apache.commons.digester.Digester.endElement(Digester.java:1067)
	at org.apache.xerces.parsers.AbstractSAXParser.endElement(Unknown Source)
	at org.apache.xerces.impl.dtd.XMLDTDValidator.endNamespaceScope(Unknown Source)
	at org.apache.xerces.impl.dtd.XMLDTDValidator.handleEndElement(Unknown Source)
	at org.apache.xerces.impl.dtd.XMLDTDValidator.endElement(Unknown Source)
	at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanEndElement(Unknown Source)
	at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher.dispatch(Unknown Source)
	at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanDocument(Unknown Source)
	at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
	at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
	at org.apache.xerces.parsers.XMLParser.parse(Unknown Source)
	at org.apache.xerces.parsers.AbstractSAXParser.parse(Unknown Source)
	at org.apache.commons.digester.Digester.parse(Digester.java:1591)
	at org.apache.myfaces.tobago.config.TobagoConfigParser.parse(TobagoConfigParser.java:87)
	at org.apache.myfaces.tobago.config.TobagoConfigParser.parse(TobagoConfigParser.java:43)
	at org.apache.myfaces.tobago.webapp.TobagoServletContextListener.contextInitialized(TobagoServletContextListener.java:60)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:3692)
	at org.apache.catalina.core.StandardContext.start(StandardContext.java:4127)
	at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:759)
	at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:739)
	at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:524)
	at org.apache.catalina.startup.HostConfig.deployWAR(HostConfig.java:804)
	at org.apache.catalina.startup.HostConfig.deployWARs(HostConfig.java:693)
	at org.apache.catalina.startup.HostConfig.deployApps(HostConfig.java:472)
	at org.apache.catalina.startup.HostConfig.start(HostConfig.java:1118)
	at org.apache.catalina.startup.HostConfig.lifecycleEvent(HostConfig.java:310)
	at org.apache.catalina.util.LifecycleSupport.fireLifecycleEvent(LifecycleSupport.java:119)
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1020)
	at org.apache.catalina.core.StandardHost.start(StandardHost.java:718)
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1012)
	at org.apache.catalina.core.StandardEngine.start(StandardEngine.java:442)
	at org.apache.catalina.core.StandardService.start(StandardService.java:450)
	at org.apache.catalina.core.StandardServer.start(StandardServer.java:680)
	at org.apache.catalina.startup.Catalina.start(Catalina.java:536)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:275)
	at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:413)
Caused by: java.lang.NoClassDefFoundError: org/apache/myfaces/tobago/context/ScarboroughTheme
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Unknown Source)
	at org.apache.myfaces.tobago.config.TobagoConfig.setDefaultThemeClass(TobagoConfig.java:67)
	... 47 more
",MYFACES-986
"I've found incorrect UIData behaviour under MyFaces which produces NullPointerException on runtime and which works fine under Sun implementation.

Here it is:

I have a custom component which is extentor from UIInput. This component has UIPanel extentor component as child which is added to children list of UIInput component on rendering. 
For one's turn, UIPanel extentor has one more UIInput extentor component as child which is added to children list of UIPanel component on rendering.

This component works fine standalone, but when it is added to UIData, I have NPE on runtime. Here is the part of listing:

java.lang.NullPointerException
 at javax.faces.component.UIData.restoreDescendantComponentStates(UIData.java:223)
 at javax.faces.component.UIData.restoreDescendantComponentStates(UIData.java:235)
 at javax.faces.component.UIData.restoreDescendantComponentStates(UIData.java:235)
 at javax.faces.component.UIData.restoreDescendantComponentStates(UIData.java:235)
 at javax.faces.component.UIData.setRowIndex(UIData.java:178)

I will also attach sample component's classes, definitions and test page if it will be granted after issue creation.",MYFACES-985
"ScheduleDetailedDayRenderer includes the lines:

        UIForm parentForm = getParentForm(schedule);

        if (parentForm == null)
        {
            throw new NullPointerException(""No parent UIForm found"");
        }

However, if the schedule is readonly then the form component is not required e.g. on a printable page.",MYFACES-983
"Hi

There is no way how to specify attribute ""wrap"" in inputTextarea (and generated textarea HTML tag). Unfortunately it is not possible to define wrapping in CSS (I need wrap=""off""). Although the wrap attribute of textarea element isn't in any specification it is required while it has no alternative.

Thanks",MYFACES-982
"<h:form>

<t:dataList 
       var=""child""
       value=""#{treeNode.children}""
      layout=""simple""
      rowCountVar=""rowCount""
     rowIndexVar=""rowIndex"">

     <h:commandLink   action=""#{child.go}"" actionListener=""#{child.listen}"" value=""Go"" />
     <h:commandButton action=""go"" value=""Go""/>
     <h:inputText value=""#{child.name}""/>

</t:dataList>

<Submit Button here>

</h:form>

Rendering is OK. 
But clicking commandLink, actionListener was not called, action method was not called.
the same problem for commandButton.
For inputText, child.setName() was not called. That is, model update for inputText was not called.
     ",MYFACES-981
"
Recently I compare the Sun's JSF RI and Myfaces,   I found one problem of myfaces.

If you page has many input tags with validation , just like below 
 
           <h:inputText id=""qc_1"" value=""#{tyjqj.indexNumber}"" required=""true"">
	<f:validateLength minimum=""4"" maximum=""8""/>
          </h:inputText>
          <h:inputText id=""qc_2"" value=""#{tyjqj.indexName}"" required=""true"">
	<f:validateLength minimum=""1"" maximum=""20""/>
          </h:inputText>

when submit page,   and not every validation is passed,  the pre-input value in the return page will be clear,  but in Sun's JSF Ri, only invalidated input is clear, and others are remained.  I think remaining the correct value is a better choice,  consider the scene , if one user type 20 fields, only one error,  but you clear all 20 fields,   it would make the user boring. 

so , can myfaces provide a  flag or attribute to configure the behaviour style,  remain the correct value or clear all.
		",MYFACES-980
"I am using a commandLink to open a new window to show a report. 
To do this, i use the commandLink option target and set it to _blank. 

When i am now click on this link the first time, my report window is 
opened perfectly. But when i am now pressing a second time the 
link, a new window is opened and the page with the link is show in 
this window and not the report. 

When i use Sun's JSF RI, it works without any problems 
------------------------

Recently I compare the Sun's JSF RI and Myfaces,   I found one problem of myfaces.

If you page has many input tags with validation , just like below 
 
<h:inputText id=""qc_1"" value=""#{tyjqj.indexNumber}"" required=""true"">
	<f:validateLength minimum=""4"" maximum=""8""/>
</h:inputText>
<h:inputText id=""qc_2"" value=""#{tyjqj.indexName}"" required=""true"">
	<f:validateLength minimum=""1"" maximum=""20""/>
</h:inputText>
		",MYFACES-979
"I have found the need to introduce the ability to set the CSS style and class attributes for individual entries. I have done this by adding the methods getStyle and getStyleClass to the ScheduleEntry interface. 

I use getStyle to change the colour of the text, depending on which scheduler the entry is pulled in from. I use getStyleClass to specify a class representing whether the entry is an appointment or task, completed, due, in progress, etc.

DefaultScheduleEntry has been changed to implement the above two methods, returning null values. AbstractCompactScheduleRenderer and ScheduleDetailedDayRender have been changed to output the above properties.  ",MYFACES-976
"When I use the jsp:include tag like this:

<jsp:include page=""somepage.jsp?param1=value"" />

The parameter ""param1"" is not passed to the target page while in sun's jsf implementation it does work.",MYFACES-973
The action attribute accepts a string literal as well as a method binding EL expression.,MYFACES-971
"A few times MyFaces has had problems where a TLD declares an attribute but there isn't any such setter on the Tag class.
It should be possible to check for this in a unit test:

* use Class.getResource to fetch the TLD file
* for each <tag> element in the TLD
   * instantiate the specified tag class
   * for each <attribute> tag
      * verify there is a matching setter on the tag instance

This would need to be applied to myfaces_core.tld, myfaces_html.tld, tomahawk.tld and sandbox.tld.
Therefore base code for this could go in ""share"" with the actual test class (specifying the tld file) in the
various subproject tests.

I'm planning to tackle this in the next few weeks, but anyone else with an itch to implement this straight away is welcome :-)",MYFACES-970
"LifecycleImpl's restoreView throws exception when viewId is null and in a portlet context

In restoreView:
if(viewId == null)
        {
            ExternalContext externalContext = facesContext.getExternalContext();
            if(!externalContext.getRequestServletPath().endsWith(""/""))


In a portlet context getRequestServletPath() returns null *by definition*.  Not only should we avoid the NPE, but we should do something appropriate for portlets (return to the 'default-view')",MYFACES-968
"The DoubleConverter is only registered for the converterId javax.faces.Double and the class java.lang.Double

After changing the value javax.faces.conver.DoubleConverter.CONVERTER_ID from javax.faces.Double to javax.faces.DoubleTime  the change must also be done in standard-faces-config.xml, else no converter is found for the converterId javax.faces.DoubleTime.

standard-faces-config.xml  is located in ../myfaces/impl/trunk/src/java/org/apache/myfaces/resource/",MYFACES-965
"I have a phase listener attached to a logout page that is called before the render response phase.  In this phase listener, I invalidate the session. I am storing state on the server. The logout page is displayed correctly, but the following stacktrace occurs:

java.lang.IllegalStateException: Cannot create a session after the response has been committed
	at org.apache.catalina.connector.Request.doGetSession(Request.java:2195)
	at org.apache.catalina.connector.Request.getSession(Request.java:2017)
	at org.apache.catalina.connector.RequestFacade.getSession(RequestFacade.java:822)
	at org.apache.myfaces.context.servlet.SessionMap.setAttribute(SessionMap.java:50)
	at org.apache.myfaces.context.servlet.AbstractAttributeMap.put(AbstractAttributeMap.java:104)
	at org.apache.myfaces.application.jsp.JspStateManagerImpl.saveSerializedViewInServletSession(JspStateManagerImpl.java:321)
	at org.apache.myfaces.application.jsp.JspStateManagerImpl.saveSerializedView(JspStateManagerImpl.java:228)
	at org.apache.myfaces.taglib.core.ViewTag.doEndTag(ViewTag.java:122)
	at org.apache.jsp.Logout_jsp._jspx_meth_f_view_0(org.apache.jsp.Logout_jsp:418)
	at org.apache.jsp.Logout_jsp._jspService(org.apache.jsp.Logout_jsp:197)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:97)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:802)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:322)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:291)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:241)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:802)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:252)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:672)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:463)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:398)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:301)
	at org.apache.myfaces.context.servlet.ServletExternalContextImpl.dispatch(ServletExternalContextImpl.java:415)
	at org.apache.myfaces.application.jsp.JspViewHandlerImpl.renderView(JspViewHandlerImpl.java:234)
	at org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:352)
	at javax.faces.webapp.FacesServlet.service(FacesServlet.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:252)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
	at com.surveysampling.customer.webapp.servlet.http.SecurityFilter.doFilter(SecurityFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:202)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
	at com.surveysampling.customer.admin.servlet.AppInitFilter.doFilter(AppInitFilter.java:89)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:202)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:213)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:178)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:407)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:126)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:105)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:107)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:148)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:856)
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.processConnection(Http11Protocol.java:744)
	at org.apache.tomcat.util.net.PoolTcpEndpoint.processSocket(PoolTcpEndpoint.java:527)
	at org.apache.tomcat.util.net.LeaderFollowerWorkerThread.runIt(LeaderFollowerWorkerThread.java:80)
	at org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:684)
	at java.lang.Thread.run(Thread.java:595)

The workaround is to invalidate the session, detect if state is being stored on the server and if it is, then create a new session in the same phase listener. ",MYFACES-957
" <commandButton> or <commandLink> inside a <dataList> does not work. Its action listener and action binding method were not called. 
 
    <t:dataList        
        styleClass=""standardList""
        var=""x""
        value=""#{bean.list}""
        layout=""simple""
        rowCountVar=""rowCount""
        rowIndexVar=""rowIndex"">

        <h:commandButton value=""#{x.name}"" 
           actionListener=""#{bean.listener}""
           action=""#{bean.go}""/>
           
    </t:dataList>
",MYFACES-954
"Logging for MyFaces classes has been discussed here:
  http://mail-archives.apache.org/mod_mbox/myfaces-dev/200512.mbox/%3ccb51ede40512061608r35349415j7db9604004357891@mail.gmail.com%3e 
and especially here:
  http://mail-archives.apache.org/mod_mbox/myfaces-dev/200512.mbox/%3c43A0BD57.5000309@obsidium.com%3e

Attached are classes intended to go in the ""share"" code which provide a logging API in the package ""org.apache.myfaces.logging"".
This means all MyFaces code that wants to log can do so without any explicit dependency on an external logging library.

The implementation simply forwards directly to commons-logging in a pretty efficient way.

These logging classes do *not* provide the ability to swap the underlying logging library at runtime like commons-logging does; it simply centralises the logging lib dependency into one class (org.apache.myfaces.logging.Log) instead of spreading it out across all MyFaces classes.",MYFACES-949
"There currently is no way to use t:selectManyCheckbox to do the following

layout=lineDirection and someNewAttrForLayoutBounds=3
 [01] [06] [10]
 [02] [07] [11]
 [03] [08] [12]
 [04] [09] [13]
 [05]


 (see http://wiki.apache.org/myfaces/HtmlSelectManyCheckbox for current possibilities) ",MYFACES-943
"Numeric item (that is blank) is force restored initial value after validation error of the other item.

Testcase:
----------
package foo;
public class NumTest {
  private String data = null;
  private Integer num = new Integer(100);
  private String str = ""dummy"";
  public String getData() { return data; }
  public void setData(String data) { this.data = data; }
  public Integer getNum() { return num; }
  public void setNum(Integer num) { this.num = num; }
  public String getStr() { return str; }
  public void setStr(String str) { this.str = str; }
}
----------
<%@ page contentType=""text/html; charset=UTF-8"" %>
<%@ taglib uri=""http://java.sun.com/jsf/html"" prefix=""h""%> 
<%@ taglib uri=""http://java.sun.com/jsf/core"" prefix=""f""%> 
<%@ taglib uri=""http://myfaces.apache.org/tomahawk"" prefix=""t""%>
<html><head><title>NumTest</title></head><body><f:view>
<h:form>
  <h:inputText id=""data"" value=""#{numTest.data}"" required=""true"" />
  <h:inputText id=""num"" value=""#{numTest.num}"" />
  <h:inputText id=""str"" value=""#{numTest.str}"" />
  <t:messages showDetail=""true"" showSummary=""true"" />
  <h:commandButton action=""dummy"" value=""Submit"" />
</h:form>
</f:view></body></html>
----------

First, display three text boxes.
 - blank - ""100"" - ""dummy"" -
Clear all items, and click submit button.
So, you can see validation error message for first item.
And, you can see second item is ""100"" and third item is blank.

I think that second item should be a blank.

Maybe, it is a cause that IntegerConverter#getAsObject() return null, when value.trim().length() == 0 in ""Process Validations"" phase.
",MYFACES-942
"Hello,

The UserData.parse method declares to throw aParseException. But it never throws a ParseException, the Integer.parseInt throws a NumberFormatException instead:

        public Date parse() throws ParseException{
            Calendar tempCalendar=Calendar.getInstance();
            if (timeZone != null)
                   tempCalendar.setTimeZone(timeZone);
            
            tempCalendar.set(Calendar.DAY_OF_MONTH,Integer.parseInt(day));
            tempCalendar.set(Calendar.MONTH,Integer.parseInt(month)-1);
            tempCalendar.set(Calendar.YEAR,Integer.parseInt(year));
            if (uses_ampm) {
            	int int_hours = Integer.parseInt(hours);
            	// ampm hours must be in range 0-11 to be handled right; we have to handle ""12"" specially
            	if (int_hours == 12) {
        			int_hours = 0;
            	}
            	tempCalendar.set(Calendar.HOUR,int_hours);
                tempCalendar.set(Calendar.AM_PM,Integer.parseInt(ampm));
            } else {
            	tempCalendar.set(Calendar.HOUR_OF_DAY,Integer.parseInt(hours));
            }
            tempCalendar.set(Calendar.MINUTE,Integer.parseInt(minutes));
            tempCalendar.set(Calendar.SECOND,Integer.parseInt(seconds));
            tempCalendar.set(Calendar.MILLISECOND, 0);
            
            return tempCalendar.getTime();
        }

 The most simple approach to solve it: Catch the NumberFormatException inside the parse method and throw a new ParseException:

        public Date parse() throws ParseException{
            Calendar tempCalendar=Calendar.getInstance();
            if (timeZone != null)
                   tempCalendar.setTimeZone(timeZone);
            
            try {
				tempCalendar.set(Calendar.DAY_OF_MONTH,Integer.parseInt(day));
				tempCalendar.set(Calendar.MONTH,Integer.parseInt(month)-1);
				tempCalendar.set(Calendar.YEAR,Integer.parseInt(year));
				if (uses_ampm) {
					int int_hours = Integer.parseInt(hours);
					// ampm hours must be in range 0-11 to be handled right; we have to handle ""12"" specially
					if (int_hours == 12) {
						int_hours = 0;
					}
					tempCalendar.set(Calendar.HOUR,int_hours);
				    tempCalendar.set(Calendar.AM_PM,Integer.parseInt(ampm));
				} else {
					tempCalendar.set(Calendar.HOUR_OF_DAY,Integer.parseInt(hours));
				}
				tempCalendar.set(Calendar.MINUTE,Integer.parseInt(minutes));
				tempCalendar.set(Calendar.SECOND,Integer.parseInt(seconds));
				tempCalendar.set(Calendar.MILLISECOND, 0);
			} catch (NumberFormatException e) {
				throw new ParseException(e.getMessage(),0);
			}
            
            return tempCalendar.getTime();
        }

It would be a good idea to write some new tests. The existing Tests do not deal with invalid form data.

Greetings Ulf
",MYFACES-934
"@onblur, @onfocus and @id for commandNavigation2 and commandNavigation
@title for collapsiblePanel

see patch",MYFACES-931
"I double checked the sandbox.jar file and notice that you do have two entry for this tag.

Error(1): Duplicated tag definition selectBooleanCheckboxAjax within the same TLD

",MYFACES-928
"The following exception is generated using inputSuggestAjax with Facelets:

005-12-09 11:08:58,776 ERROR [localhost].[/webmail].[FacesServlet]:253 http-8080-Processor25  -> Servlet.service() for servlet FacesServlet threw exception
java.lang.NullPointerException
	at org.apache.myfaces.custom.inputsuggestajax.InputSuggestAjaxRenderer.encodeAjax(InputSuggestAjaxRenderer.java:209)

It appears that InputSuggestAjaxTag uses its setSuggestedItemsMethodProperty method to set the suggestedItemsMethod property in the component, rather than this being carried out by the component itself.
",MYFACES-921
"When a component is created by a JSP tag, calls to setStringProperty, setBooleanProperty, etc are used to copy the JSP tag attributes onto the new component. (NB: other view implementations will be doing something similar I'm sure).

The setStringProperty et. al. eventually call
  component.getAttributes().put(propName, value)

Unfortunately, the Map.put method is defined to return the old value of the property. While the specs are a little vague on whether a return value is actually required as far as I can see, both MyFaces and Sun do try to return the old value. But this means calling the getter method on the component, which typically calls getValueBinding().

During component initialisation, this call to the component's getter method and thence to getValueBinding isn't actually *too* bad; the binding will never be found because each attribute is initially null, and is set only once. However it's still inefficient; it's a call via reflection, a HashMap lookup, etc. that is all completely unnecessary as the return value will (a) always be null, and (b) is ignored.

This behaviour *is* a major pain for anyone (like me) who would like to override the getValueBinding method for a component; it gets called once for each attribute of the JSP tag, and during a time when the component is not completely initialised. And there's no way to tell when component initialisation has completed as far as I know.

Attached is a proposed solution. The UIComponent.getAttributes method returns a custom (private) Map implementation already. It isn't possible to add any methods to this, as it's in the API namespace. Instead I've modified the put method so that if the provided propName has a special prefix then the method doesn't bother to fetch and return the old value. Updating the setStringProperty/setBooleanProperty/etc methods to add the prefix then solves the issue.

What do people think of this? Is this ok to commit?

NB: I will be creating some unit tests to go along with this, to prove that the patch does what it says. I don't have time just now, though, and wanted to post this before I left for the weekend.

NB2: If this does go in (or some other solution to this problem) I've got a rather cool use for it. A ""backingBean"" attribute can then be defined on a component, and via a customised ValueBinding, any property on the component that supports value-binding will automatically try to fetch the data from an identically-named property on the specified backingBean for the component.  It's very useful when dealing with components with lots of bindable properties, like a UIData - or my custom extension of that class, which has even more properties.",MYFACES-920
For Example. Suppose there is a JSF page with pagination. Now user is on third page (pagination) and now if user clicks some hyper link on that page which takes him/her to some target page. Now if user clicks Browser's Back Button he/she returns back to the original page (third page where he/she was). But now if he/she clicks the same hyperlink once again then page refreshes but not redirected to the target page.,MYFACES-919
"Just by looking at the source of Myfaces I noticed that the view state is not encrypted before it is sent to the client. It is just gzip-ped and then Base64-ed. This is a major security issue as:
1.  any tech savvy java user can tamper it. 
2. it is susceptible to the man-in-the-middle attacks
The later prevents the usage of myfaces on publicly accessible web sites with state saving method client (i.e. most of the cluster installations). Moreover in the jsr it is clearly written that the view state have to be encrypted to guarantee the application security.

",MYFACES-918
"java.lang.NoSuchMethodException when you click on ""Home"" link.",MYFACES-912
"The current HtmlTreeRenderer forces an id naming scheme of  ""0"", ""0:0"", ""0:1"", etc. This can be problematic with dynamic trees where the ids of two different nodes may end up when nodes are constantly being added and removed in between requests.  The new TreeWalker interface will allow users to supply their own implementations so they can override the node id algorithm with a custom implementation.  ",MYFACES-910
"weblogic.servlet.jsp.JspException: (line 5): Error in using tag library uri='http://myfaces.apache.org/tomahawk' prefix='t': The Tag class 'org.apache.myfaces.custom.stylesheet.StylesheetTag' has no setter method corresponding to TLD declared attribute 'media', (JSP 1.1 spec, 5.4.1)",MYFACES-907
"org.apache.myfaces.renderkit._SharedRendererUtils is broken in r351865. In the function getConvertedUISelectManyValue, the variable valueType now no longer gets set to anything (by line 90), so implicit converters no longer work. Previously it would discover the data type of the property and looks for a converter by type.",MYFACES-901
I am including the messages file for the Maltese language. Could someone add it to the CVS?,MYFACES-899
"Since the 1.1.1 version the problem mentioned and fixed previously (see MYFACES-82) has came up again.

There are two different cases:

CASE 1 :  You have one form, and your panelTabbedPane is inside it:
When switching tabs, only values from inputText are saved properly, but from others (like checkboxes, selects) are not.
If elements are nested in a dataTable the setter methods are not even called.
I also get warnings: ""There should always be a submitted value for an input if it is rendered, its form is submitted, and it is not disabled or read-only.""

CASE 2 : (made for test purpose only - I see no reason why should I do like that) - Each tab has its own form:
Values from various components are saved properly, unless are nested inside a dataTable. Then, when switching tabs, 
even setters methods are not called.

",MYFACES-898
"The attached stack trace results when clicking on links that wrap the images/line-last.gif image for tree2.

<t:tree2 showRootNode=""false"" id=""tree"" value=""#{officeTreeBacker.tree}"" var=""node"" varNodeToggler=""t"" preserveToggle=""true"" clientSideToggle=""false"">

This does not happen when clicking the node label (child of a facet), but rather when you click about 10 pixels to the left.


 ",MYFACES-897
Confusion continues to surround f:convertDateTime and timezone handling.,MYFACES-895
"I am getting a general: javax.servlet.ServletException: javax.servlet.ServletException without any explanation when using:
selectOneMenu component with a custom converter.
I can tell for sure the following things:
1) The problem happens due to the fact that the items are taken from application scope bean. Using the exact same code with request scope bean is working fine.
2) The problem does not happen with SUN RI. The exact same code, using application scope bean, with SUN RI is working fine.",MYFACES-894
"A Popup added like this:
<t:popup styleClass=""popup"" closePopupOnExitingElement=""true""
  closePopupOnExitingPopup=""false"" displayAtDistanceX=""5""
  displayAtDistanceY=""5"">
  <h:outputText value=""This is a very simple Tiles example."" />

  <f:facet name=""popup"">
    <h:panelGroup>
      <h:panelGrid columns=""1"">
        <h:outputText value=""This is a Popup test"" />
      </h:panelGrid>
    </h:panelGroup>
  </f:facet>
</t:popup>

results in a javascript error in Firefox 1.5:
Error: content__id1Popup has no properties
",MYFACES-893
"When I use the date converter (my enveronment uses greek locale)

<f:convertDateTime pattern=""dd/MM/yyyy""  type=""date"" /> 

the inputText or the tomahawk inputCalendar displays one before the date that my managed bean contains.

For example if my beans contains a date 
a) '2005-12-31 00:00:00'  the jsp presents a value '30/12/2005'
b) '2005-12-31 14:00:00'  the jsp presents a value '30/12/2005'

MyFaces 1.1.0 works fine",MYFACES-892
"I have a managed bean that declares a Float property. If I register in a jsp the  number converter (in greek local)

<f:convertNumber groupingUsed=""true"" maxFractionDigits=""2"" minFractionDigits=""2""/>

then I get
a) for input =2,00  
     error =javax.faces.el.EvaluationException: Cannot set value for expression '#{drugView.model.value}' to a new value of type java.lang.Long

b) for input=2,31
   error =javax.faces.el.EvaluationException: Cannot set value for expression '#{drugView.model.value}' to a new value of type java.lang.Double

The code works fine in 1.1.0
",MYFACES-891
"If you use <list-entries> for a property that has only a setter, you get a FacesException thrown
as a result of ManagedBeanBuilder.initializeProperties() calling PropertyResolver.getValue().

However, the spec is clear that this scenario is supported;  see 5.3.1.3:

For <list-entries>:
1. Call the property getter, if it exists.
2. If the getter returns null or doesn't exist, create a java.util.ArrayList,
otherwise use the returned Object (an array or a java.util.List).
(etc.)

Note that <map-entries> has the same language, and therefore the
same bug exists in MyFaces.

The above behavior is properly implemented by the RI.

Generally speaking, there is a problem that the managed bean facility is attempting to
use PropertyResolver - which is cool, and which the spec should have done in
retrospect - but I think is illegal, since it implies functionality and extensibility that is not
stated in the spec, and language like the above for list-entries more-or-less implies
that PropertyResolver is not used.
",MYFACES-889
"CSS Class for the Schedule Component are hardcoded.  I sugget they should be optional parameters to the tag.

Currently
                                    CSS Class
   ------------------------ ----------------------
    Entire Entry            entry
    title   field                title
    subtitle field           subtitle

I am sure their are may other CSS Classes that are hardcoded that should be added to this list.",MYFACES-888
"When the schedule is in DAY mode, an entry with getSubtitle() == null causes the following error returned

javax.faces.FacesException: text name must not be null
	org.apache.myfaces.context.servlet.ServletExternalContextImpl.dispatch(ServletExternalContextImpl.java:421)
	org.apache.myfaces.application.jsp.JspViewHandlerImpl.renderView(JspViewHandlerImpl.java:234)
	org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:352)
	javax.faces.webapp.FacesServlet.service(FacesServlet.java:107)
	org.apache.myfaces.component.html.util.ExtensionsFilter.doFilter(ExtensionsFilter.java:122)

A portion of the stack trace from the log file is below, but I believe the resolution is to only write the subtitle if it is not null in ScheduleDetailedDayRenderer.java around line 505.

From localhost.log
SEVERE: Servlet.service() for servlet jsp threw exception
java.lang.NullPointerException: text name must not be null
	at org.apache.myfaces.renderkit.html.HtmlResponseWriterImpl.writeText(HtmlResponseWriterImpl.java:421)
	at org.apache.myfaces.custom.schedule.renderer.ScheduleDetailedDayRenderer.writeEntries(ScheduleDetailedDayRenderer.java:505)
	at org.apache.myfaces.custom.schedule.renderer.ScheduleDetailedDayRenderer.encodeChildren(ScheduleDetailedDayRenderer.java:117)
	at org.apache.myfaces.custom.schedule.renderer.ScheduleDelegatingRenderer.encodeChildren(ScheduleDelegatingRenderer.java:75)
	at javax.faces.component.UIComponentBase.encodeChildren(UIComponentBase.java:319)
	at org.apache.myfaces.renderkit.RendererUtils.renderChild(RendererUtils.java:444)
	at org.apache.myfaces.renderkit.RendererUtils.renderChildren(RendererUtils.java:427)
	at org.apache.myfaces.renderkit.RendererUtils.renderChild(RendererUtils.java:448)
	at org.apache.myfaces.renderkit.html.HtmlGridRendererBase.renderChildren(HtmlGridRendererBase.java:203)
	at org.apache.myfaces.renderkit.html.HtmlGridRendererBase.encodeEnd(HtmlGridRendererBase.java:85)
	at javax.faces.component.UIComponentBase.encodeEnd(UIComponentBase.java:331)
	at javax.faces.webapp.UIComponentTag.encodeEnd(UIComponentTag.java:349)
	at javax.faces.webapp.UIComponentTag.doEndTag(UIComponentTag.java:253)
	at org.apache.myfaces.taglib.UIComponentBodyTagBase.doEndTag(UIComponentBodyTagBase.java:55)
",MYFACES-887
"Program code:
       ...
        model = new DefaultTreeModel(root);
        model.getTreeModelListeners().add(new testListner());
       ...
       class testListner implements TreeModelListener  { ...}


Exception:

2005-11-29 16:28:22 StandardContext[]Loading Spring root WebApplicationContext
2005-11-29 16:28:29 StandardContext[/adf-faces-demo]Error configuring application listener of class com.sun.faces.config.ConfigureListener
java.lang.ClassNotFoundException: com.sun.faces.config.ConfigureListener
	at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1366)
	at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1213)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:3723)
	at org.apache.catalina.core.StandardContext.start(StandardContext.java:4257)
	at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:866)
	at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:850)
	at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:633)
	at org.apache.catalina.core.StandardHostDeployer.install(StandardHostDeployer.java:316)
	at org.apache.catalina.core.StandardHost.install(StandardHost.java:859)
	at org.apache.catalina.startup.HostConfig.deployWARs(HostConfig.java:653)

Problem code:

    public void addToModelListeners()
    {
        Collection listeners = getModel(FacesContext.getCurrentInstance()).getTreeModelListeners();
        long currentTime = System.currentTimeMillis();
        boolean found = false;

        for (Iterator iterator = listeners.iterator(); iterator.hasNext();)
        {
            ModelListener listener = (ModelListener) iterator.next();
",MYFACES-886
"Please make the version/build information availabe at runtime.

Maybe you can change the manifest file so that something like
    Package.getPackage(""....."").getImplementationVersion();
works.

Or provide a Version class that provides the information.

Or implement both ways.

It really helps if you have to support various projects. Then every project is able to log the versions of the used libraries at startup.

Thanks",MYFACES-885
"Jacob Hookom wrote:

JSF was designed to delegate controller concerns as
interchangeable blocks, and the implementation now seems to be
missmashed between specialized Application delegates.  This will cause
issues when you start implementing JSF 1.2 as things like View and
SubView concepts are falling by the wayside as unecessary, also there
are quite a few other projects popping up that are exploring things like
AJAX such that the inter-dependencies between tags and components as a
processed whole, will basically not function with the MyFaces
implementation.

Right now, ViewHandlers (Facelets and MyFaces) write out a temporary
place holder in the UI for client-state saving.  This is so after the
tree has rendered, *now* we serialize and write the state in.

Within Facelets, thise write-behind behavior occurs right within the
FaceletViewHandler.renderView method (really simple), the RI also does
this.

Within MyFaces, this write-behind occurs instead within the ViewTag.  So
you have the JspViewHandler writing the tokens with the expectation
that: 1) the developer uses a view tag, 2) the view tag will be able to
know about/replace stateful tokens provided by the JspViewHandler.
While this works fine for JSP, I hope others see the problem here in
the spirit of the JSF platform.

Secondly, the MyFaces ViewTag does write-behind on commandLinks within
the ViewTag.  There is a dependency now between the ViewTag, a
specialized StateManager, and the Renderer for the HtmlCommandLink.
I'm not sure the reasoning behind doing this, but there is possibly a
disconnect in the logic.",MYFACES-883
"This bug is very similar to: http://issues.apache.org/jira/browse/MYFACES-198, closed due to lack of interest. The solution given in that thread doesn't seem to work.

I'm working with a SVN copy of MyFaces dated on 20-Nov-05.

If I have context parameter org.apache.myfaces.ALLOW_JAVASCRIPT to false, commandLinks seem to be rendered wrong. The following code:

         <h:commandLink id=""doit"" action=""#{bb.doIt}"" immediate=""true"" >
               <h:outputText value=""Do it!"" />
         </h:commandLink>

becomes something like:

        <a .... href=id=""A_VERY_LONG_URL"">Do It!</a>

what leads to a ""page not found"" in the browser.

Setting org.apache.myfaces.ALLOW_JAVASCRIPT to ""true"" solves this problem, because it creates a working javascript-link, so this isn't a showstopper.  However, I think this tag should work properly without javascript too.",MYFACES-882
"There are about 20 transformation errors that occur in the build process.  This affects the TLDs for impl, tomahawk and the sandbox.  

The following patches stop the build errors.  The tests still need to be run.",MYFACES-881
"org.apache.myfaces.renderkit.html.ext.HtmlTextareaRenderer
The return in the else branch of isDisabled() looks like this:

return isDisabled(facesContext, uiComponent);

which invokes itself.

Fix: Use ""return super.isDisabled(...)"" instead of ""return isDisabled(...)""",MYFACES-880
"If a SelectItem has a converter that returns a null value in getAsObject when used with a SelectMany, then the matchValue method fails in _SelectITemsUtil.

Current code (beginning line 63):

 Object itemValue = item.getValue();
                if(converter != null && itemValue instanceof String)
                {
                    itemValue = converter.getConvertedValue(context, (String)itemValue);
                }
                if (value.equals(itemValue))
                {
                    return true;
                }

should change line 68 to:

if (value == itemValue || value.equals(itemValue))

or something that can handle a null ""value""",MYFACES-879
"3 Parts to this possible bug.

1: The examples in myfaces-1.1.1-src shows the user of <x:popup, but the web site say uses <t:popup />
In this case I've followed examples, not the website. Which is correct?

2: Firefox: Popups do not render of text created with the <h:textInput /> tag.
See image ...
http://www.porter.eu.com/jeff/example.JPG

3: IE: Popups do not render correctly, a large textarea box is shown.
See image...
http://www.porter.eu.com/jeff/example2.JPG


Code used....

<%@ taglib uri=""http://myfaces.apache.org/extensions"" prefix=""x""%>

            <x:popup id=""x""
                styleClass=""popup""
                closePopupOnExitingElement=""true""
                closePopupOnExitingPopup=""true""
                displayAtDistanceX=""-500""
                displayAtDistanceY=""10"" >
               <f:verbatim><img src=""images/help.jpg""</f:verbatim>
               <f:facet name=""popup"">
                    <h:panelGroup>
                        <h:panelGrid columns=""1"" >
                        <h:outputText value=""This is the document.""/>
                        </h:panelGrid>
                    </h:panelGroup>
                </f:facet>
            </x:popup>


Style.css
.popup {
    background-color:#6699FF;
    color: #000000;
    border: 1px solid #CCCCCC;
    font-size:smaller;
    padding: 5px;
}
",MYFACES-874
"The current MyFaces SVN snapshot used object serialization for storing the view in the session 
(instead of plain objects as it does in 1.1.1)

This leads to an ClassLoader issue on Weblogic 8.1 during deserialization of the view. It seems that
Weblogic cannot find non-myfaces classes during view-restoring:

[java] 78230 ERROR .JspStateManagerImpl| Could not deserialize state: com.bmw.gss.client.converter.BoardConverter
     [java] java.lang.ClassNotFoundException: com.consol.gss.client.converter.BoardConverter
     [java]     at weblogic.utils.classloaders.GenericClassLoader.findClass(GenericClassLoader.java:199)
     [java]     at java.lang.ClassLoader.loadClass(ClassLoader.java:289)
     [java]     at java.lang.ClassLoader.loadClass(ClassLoader.java:235)
     [java]     ....
     [java]     at org.apache.myfaces.application.jsp.JspStateManagerImpl.deserializeView(JspStateManagerImpl.java:546)

Strange engough, the client classes and myfaces.jar are loaded by the same Classloader (we deployed them as jar within
an ear which are both referenced from the war's manifest) and except for this deserialization issue the can 'see' each 
other.

I'm not sure, whether this is MyFaces or a Weblogic Issue.",MYFACES-872
"There is a problem with inputSuggestAjax because the used control.js is not updated, but the prototype.js is.

see last comments on MYFACES-705.

There are still problems with the updated scripts:
   The problem decscribed in MYFACES-705
   In IE if the entered text is longer than the size of the textbox, the left side of the suggestBox is displaced to the 'virtualy' beginning of the text.

Also the api of control.js is changed, so myFaces.js of inputSuggestAjax and maybe other componentes needs adjusting.

I will try to fix and upload needed files and patches. ",MYFACES-871
"I'm basically trying to use a dataList as a foreach to display a bunch of panelGroups across the screen. When the page renders, the dataList is treated as a single panelGroup and displays vertically instead of horizontally. It would be great if I could tell the dataList to basically be ignored by panelGrid and just render what it contains. This makes it possible to use dataList as a foreach. Maybe this should be a new tag that extends dataList. A test jsp:

<%@ page session=""true"" contentType=""text/html;charset=UTF-8"" language=""java"" %>
<%@ taglib uri=""http://java.sun.com/jsf/html"" prefix=""h"" %>
<%@ taglib uri=""http://java.sun.com/jsf/core"" prefix=""f"" %>
<%@ taglib uri=""http://myfaces.apache.org/tomahawk"" prefix=""t"" %>

<html>
<head><title>TonyTesterNoGrid</title></head>
<body>
<f:view>
  <h:panelGrid columns=""#{tonyTester.numberOfHelpers}"">
    <t:dataList id=""test"" var=""helper"" value=""#{tonyTester.helpers}"">
      <h:panelGroup>
        <h:panelGrid columns=""1"">
          <h:outputText value=""#{helper.key}""/>
          <h:outputText value=""#{helper.descriptionLine1}""/>
          <h:outputText value=""#{helper.descriptionLine2}""/>
        </h:panelGrid>
      </h:panelGroup>
    </t:dataList>
  </h:panelGrid>
</f:view>
</body>
</html>

Currently, the entire list is put into the first column of the panelGrid:
<html>
<head><title>TonyTesterNoGrid</title></head>
<body>

  <table border=""0""><tbody><tr><td>

<table border=""0""><tbody><tr><td>1</td></tr>
<tr><td>helper1-descriptionLine1</td></tr>

<tr><td>helper1-descriptionLine2</td></tr>
</tbody></table>
<table border=""0""><tbody><tr><td>1</td></tr>
<tr><td>helper2-descriptionLine1</td></tr>
<tr><td>helper2-descriptionLine2</td></tr>
</tbody></table>
<table border=""0""><tbody><tr><td>1</td></tr>
<tr><td>helper3-descriptionLine1</td></tr>
<tr><td>helper3-descriptionLine2</td></tr>
</tbody></table>

</td><td></td><td></td></tr>
</tbody></table>

</body>
</html>

I'd like to be able to render with each contained panelGroup as a separate column in the panelGrid:

<html>
<head><title>TonyTesterNoGrid</title></head>
<body>

  <table border=""0""><tbody><tr><td>

<table border=""0""><tbody><tr><td>1</td></tr>
<tr><td>helper1-descriptionLine1</td></tr>

<tr><td>helper1-descriptionLine2</td></tr>
</tbody></table>
</td><td>
<table border=""0""><tbody><tr><td>1</td></tr>
<tr><td>helper2-descriptionLine1</td></tr>
<tr><td>helper2-descriptionLine2</td></tr>
</tbody></table>
</td><td>
<table border=""0""><tbody><tr><td>1</td></tr>
<tr><td>helper3-descriptionLine1</td></tr>
<tr><td>helper3-descriptionLine2</td></tr>
</tbody></table>

</td></tr>
</tbody></table>

</body>
</html>

It would also have to be able to render additional rows properly.



",MYFACES-868
Patch coming shortly with better documented TLD files.,MYFACES-866
"I'm trying to use a dataList to get around the lack of a loop.  Here is the sample jsp:

<%@ page session=""true"" contentType=""text/html;charset=UTF-8"" language=""java"" %>
<%@ taglib uri=""http://java.sun.com/jsf/html"" prefix=""h"" %>
<%@ taglib uri=""http://java.sun.com/jsf/core"" prefix=""f"" %>
<%@ taglib uri=""http://myfaces.apache.org/tomahawk"" prefix=""t"" %>

<html>
<head><title>TonyTesterNoRadio</title></head>
<body>
<f:view>
  <h:form>
  <t:selectOneRadio id=""test"" forceId=""true"" layout=""spread"">
    <f:selectItems value=""#{tonyTester.selectItems}""/>
  </t:selectOneRadio>
  <h:panelGrid columns=""#{tonyTester.numberOfHelpers}"">
    <t:dataList var=""helper"" value=""#{tonyTester.helpers}"" rowIndexVar=""index"">
      <h:panelGroup>
        <h:panelGrid columns=""1"">
          <t:radio for=""test"" index=""#{index}""/>
          <h:outputText value=""#{helper.key}""/>
          <h:outputText value=""#{helper.descriptionLine1}""/>
          <h:outputText value=""#{helper.descriptionLine2}""/>
        </h:panelGrid>
      </h:panelGroup>
    </t:dataList>
  </h:panelGrid>
  </h:form>
</f:view>
</body>
</html>

From this (and other code which I can provide), I expect each panel group to line up horizontally across the page. From the html, you can see that the groups are all put into the first column:

<table border=""0""><tbody><tr><td>

<table border=""0""><tbody><tr><td>1</td></tr>
<tr><td>helper1-descriptionLine1</td></tr>

<tr><td>helper1-descriptionLine2</td></tr>
</tbody></table>
<table border=""0""><tbody><tr><td>1</td></tr>
<tr><td>helper2-descriptionLine1</td></tr>
<tr><td>helper2-descriptionLine2</td></tr>
</tbody></table>
<table border=""0""><tbody><tr><td>1</td></tr>
<tr><td>helper3-descriptionLine1</td></tr>
<tr><td>helper3-descriptionLine2</td></tr>
</tbody></table>

</td><td></td><td></td></tr>",MYFACES-865
"Like valueChangeListener but will fire valueChange event AFTER the UPDATE_MODEL phase.

Its not correctly packaged and it didnt use the right package names yet , though, functional.
It would be great if there is a developer which will review this code so I/he can prepare it for addition to tomahawk.

Maybe Simon? (as you state you do have the same needs)

It requires a phase listener installed in your fase-config. I am sure we can hide this from the user after we packaged it

faces-config

	<lifecycle>
		<phase-listener>com.ops.OPSJ.jsflib.PhaseListener</phase-listener>
	</lifecycle>


TLD

	<tag>
		<name>valueChangeNotifier</name>
		<tag-class>com.ops.OPSJ.jsflib.valueChangeNotifier.ValueChangeNotifierTag</tag-class>
		<body-content>JSP</body-content>
		<description>
			&lt;p&gt;
			Add a value change listener which will be fired AFTER UPDATE_MODEL.
			Only ""method"" valueChange listeners are supported currently.
			&lt;/p&gt;
			e.g. myBean.myMethoListener
		</description>
		<attribute>
		  <name>name</name>
		  <required>true</required>
		  <rtexprvalue>false</rtexprvalue>
		</attribute>
	</tag>
",MYFACES-864
"The HtmlTextareaRenderer isDisabled(FacesContext facesContext, UIComponent uiComponent) contains a reference to itself. I'm not sure whether it should be calling super.isDisabled on the impl project or something else. 

    protected boolean isDisabled(FacesContext facesContext, UIComponent uiComponent)
    {
        if (!UserRoleUtils.isEnabledOnUserRole(uiComponent))
        {
            return true;
        }
        else
        {
            //This is causing the StackOverflow, entering in a infinite loop
            return isDisabled(facesContext, uiComponent);
        }
    }

Log:

java.lang.StackOverflowError^M
        at java.util.HashMap.get(HashMap.java:320)^M
        at javax.faces.component.UIComponentBase.getValueBinding(UIComponentBase.java:80)^M
        at org.apache.myfaces.component.html.ext.HtmlInputTextarea.getEnabledOnUserRole(HtmlInputTextarea.java:70)^M
        at org.apache.myfaces.component.UserRoleUtils.isEnabledOnUserRole(UserRoleUtils.java:80)^M
        at org.apache.myfaces.renderkit.html.ext.HtmlTextareaRenderer.isDisabled(HtmlTextareaRenderer.java:39)^M
:
:


-----------------
Latest svn log entry

------------------------------------------------------------------------
r166820 | manolito | 2004-05-19 02:31:40 +1200 (Wed, 19 May 2004) | 2 lines

user role support completely moved to components source tree

------------------------------------------------------------------------
",MYFACES-863
"the Messages_pt_BR.properties updated, please commit",MYFACES-861
"http://myfaces.apache.org/sandbox/inputSuggestAjax.html

<s:Ajaxsuggest id=""id"" binding=""control binding""
                            auggestedItemsMethod=""backend bean callback method"" value=""Bean""/>

Should ""auggestedItemsMethod"" not be ""SuggestedItemsMethod""  ??

detial: First letter is wrong.",MYFACES-858
"We use tiles and the myfaces integration. 
But we get an exception:
javax.faces.FacesException: cannot add component with id '_id13' and path : {Component-Path : [Class: javax.faces.component.html.HtmlPanelGrid,Id: _id13]} to its parent component. This might be a problem due to duplicate ids.
at javax.faces.webapp.UIComponentTag.findComponent(UIComponentTag.java:401)
at javax.faces.webapp.UIComponentTag.doStartTag(UIComponentTag.java:219)


I think the problem is that the id is generated after the JspStateManagerImp.restoreTreeStructure is called. But inside the view there is still the id above.

A possible solution is to restore the field _uniqueIdCounter of the class UIViewRoot to make correct counting...",MYFACES-857
"The following use of t:aliasBean causes an exception:

==== including page

<%@ taglib uri=""http://java.sun.com/jsf/html"" prefix=""h""%>
<%@ taglib uri=""http://java.sun.com/jsf/core"" prefix=""f""%>
<%@ taglib uri=""http://myfaces.apache.org/tomahawk"" prefix=""t""%>

<f:view>
  <h:panelGrid>
    <t:aliasBean alias=""#{target}"" value=""#{someBean}"">
      <jsp:include page=""included.jsp""/>
    </t:aliasBean>
  </h:panelGrid>
</f:view>

==== included page

<%@ taglib uri=""http://java.sun.com/jsf/html"" prefix=""h""%>
<%@ taglib uri=""http://java.sun.com/jsf/core"" prefix=""f""%>
<%@ taglib uri=""http://myfaces.apache.org/tomahawk"" prefix=""t""%>

<f:subview id=""foo"">
    <h:inputText binding=""#{target.input}""/>
</f:subview>


The thrown exception is:

javax.faces.el.PropertyNotFoundException: Base is null: target
        at org.apache.myfaces.el.ValueBindingImpl.resolveToBaseAndProperty(ValueBindingImpl.java:457)
        at org.apache.myfaces.el.ValueBindingImpl.setValue(ValueBindingImpl.java:245)
        at org.apache.myfaces.application.ApplicationImpl.createComponent(ApplicationImpl.java:434)


I believe the problem is that panelGrid renders its children. This means that the components are first created, then the panelGrid iterates over them to render them. However the alias bean hasn't set up the alias at the time the components are being created. And ApplicationImpl.createComponent(binding, context, componentType) is immediately evaluating the binding expression, resulting in the target bean for the binding not being found.",MYFACES-856
"I have a dataTable whose value is a List property ( ruleInstanceList ) in a backing bean ( listRuleInstancesBean ). The List is populated by Hibernate 3.0, and is accessible via its own public getter/setter methods in the bean ( getRuleInstanceList() and setRuleInstanceList() ). However, when I attempt to display the page I receive the following message ( instead of the dataTable ):

Error 500: Cannot get value for expression '#{ruleInstanceRow.ruleInstanceId}'

""ruleInstanceRow"" is the var set up for the dataTable, and is of type RuleInstance ( a class I wrote ). This class contains a property called ""ruleInstanceId"", which has public getter/setter methods. Other columns are included in the dataTable and are mapped to other properties in ruleInstanceRow, but ruleInstanceId is the first; I removed it, tried again, and received the same error for the next column.

In the systemOut.log file for WebSphere, the following exception stack trace was dumped:

[22/11/05 10:51:49:844 EST] 3a5327e8 WebGroup      E SRVE0026E: [Servlet Error]-[Cannot get value for expression &#39;#{ruleInstanceRow.ruleInstanceId}&#39;]: javax.faces.FacesException: Cannot get value for expression '#{ruleInstanceRow.ruleInstanceId}'
	at org.apache.myfaces.context.servlet.ServletExternalContextImpl.dispatch(ServletExternalContextImpl.java:421)
	at org.apache.myfaces.application.jsp.JspViewHandlerImpl.renderView(JspViewHandlerImpl.java:234)
	at org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:300)
	at javax.faces.webapp.FacesServlet.service(FacesServlet.java:95)
	at com.ibm.ws.webcontainer.servlet.StrictServletInstance.doService(StrictServletInstance.java:110)
	at com.ibm.ws.webcontainer.servlet.StrictLifecycleServlet._service(StrictLifecycleServlet.java:174)
	at com.ibm.ws.webcontainer.servlet.IdleServletState.service(StrictLifecycleServlet.java:313)
	at com.ibm.ws.webcontainer.servlet.StrictLifecycleServlet.service(StrictLifecycleServlet.java:116)
	at com.ibm.ws.webcontainer.servlet.ServletInstance.service(ServletInstance.java:283)
	at com.ibm.ws.webcontainer.servlet.ValidServletReferenceState.dispatch(ValidServletReferenceState.java:42)
	at com.ibm.ws.webcontainer.servlet.ServletInstanceReference.dispatch(ServletInstanceReference.java:40)
	at com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:76)
	at com.thenational.filter.RoleFilter.doFilter(RoleFilter.java:107)
	at com.ibm.ws.webcontainer.filter.FilterInstanceWrapper.doFilter(FilterInstanceWrapper.java:132)
	at com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:71)
	at jcifs.http.NtlmHttpFilter.doFilter(NtlmHttpFilter.java:118)
	at com.ibm.ws.webcontainer.filter.FilterInstanceWrapper.doFilter(FilterInstanceWrapper.java:132)
	at com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:71)
	at com.ibm.ws.webcontainer.webapp.WebAppRequestDispatcher.handleWebAppDispatch(WebAppRequestDispatcher.java:1040)
	at com.ibm.ws.webcontainer.webapp.WebAppRequestDispatcher.dispatch(WebAppRequestDispatcher.java:600)
	at com.ibm.ws.webcontainer.webapp.WebAppRequestDispatcher.forward(WebAppRequestDispatcher.java:201)
	at com.ibm.ws.webcontainer.srt.WebAppInvoker.doForward(WebAppInvoker.java:125)
	at com.ibm.ws.webcontainer.srt.WebAppInvoker.handleInvocationHook(WebAppInvoker.java:286)
	at com.ibm.ws.webcontainer.cache.invocation.CachedInvocation.handleInvocation(CachedInvocation.java:71)
	at com.ibm.ws.webcontainer.srp.ServletRequestProcessor.dispatchByURI(ServletRequestProcessor.java:182)
	at com.ibm.ws.webcontainer.oselistener.OSEListenerDispatcher.service(OSEListener.java:334)
	at com.ibm.ws.webcontainer.http.HttpConnection.handleRequest(HttpConnection.java:56)
	at com.ibm.ws.http.HttpConnection.readAndHandleRequest(HttpConnection.java:624)
	at com.ibm.ws.http.HttpConnection.run(HttpConnection.java:458)
	at com.ibm.ws.util.ThreadPool$Worker.run(ThreadPool.java:912)
Caused by: javax.servlet.ServletException: Cannot get value for expression '#{ruleInstanceRow.ruleInstanceId}'
	at com.ibm.ws.webcontainer.jsp.servlet.JspServlet$JspServletWrapper.service(JspServlet.java:416)
	at com.ibm.ws.webcontainer.jsp.servlet.JspServlet.serviceJspFile(JspServlet.java:683)
	at com.ibm.ws.webcontainer.jsp.servlet.JspServlet.service(JspServlet.java:781)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:853)
	at com.ibm.ws.webcontainer.servlet.StrictServletInstance.doService(StrictServletInstance.java:110)
	at com.ibm.ws.webcontainer.servlet.StrictLifecycleServlet._service(StrictLifecycleServlet.java:174)
	at com.ibm.ws.webcontainer.servlet.IdleServletState.service(StrictLifecycleServlet.java:313)
	at com.ibm.ws.webcontainer.servlet.StrictLifecycleServlet.service(StrictLifecycleServlet.java:116)
	at com.ibm.ws.webcontainer.servlet.ServletInstance.service(ServletInstance.java:283)
	at com.ibm.ws.webcontainer.servlet.ValidServletReferenceState.dispatch(ValidServletReferenceState.java:42)
	at com.ibm.ws.webcontainer.servlet.ServletInstanceReference.dispatch(ServletInstanceReference.java:40)
	at com.ibm.ws.webcontainer.webapp.WebAppRequestDispatcher.handleWebAppDispatch(WebAppRequestDispatcher.java:1044)
	at com.ibm.ws.webcontainer.webapp.WebAppRequestDispatcher.dispatch(WebAppRequestDispatcher.java:600)
	at com.ibm.ws.webcontainer.webapp.WebAppRequestDispatcher.forward(WebAppRequestDispatcher.java:201)
	at org.apache.myfaces.context.servlet.ServletExternalContextImpl.dispatch(ServletExternalContextImpl.java:415)
	... 29 more

The backing bean is configured in my faces-config.xml file, with the correct package/class. I put in some debugging statements in my getRuleInstanceList() method, and determined that a valid non-null List is correctly being returned by Hibernate, and it contains one element of type RuleInstance, which has all of the properties that are referenced in the dataTable columns. Therefore, I cannot see why MyFaces can't get the values!

Here are the relevant snippets of code:

faces-config.xml
=============

<managed-bean>
	<managed-bean-name>listRuleInstancesBean</managed-bean-name>
	<managed-bean-class>com.thenational.otkr.dmi.beans.ListRuleInstancesBean</managed-bean-class>
	<managed-bean-scope>request</managed-bean-scope>
</managed-bean>

ListRuleInstancesBean.java
======================

public class ListRuleInstancesBean extends BaseBean
{
	protected UIData ruleInstanceTable;
	private List ruleInstanceList;
	private static final Logger logger = Logger.getLogger(ListRuleInstancesBean.class);
	
	public List getRuleInstanceList()
	{
		if (ruleInstanceList == null)
		{
			ruleInstanceList = new ArrayList(0);
			
			try
			{
				ruleInstanceList = getDao().getAllRuleInstances(); // getDao() returns a Hibernate3 DAO object
			}
			catch (Exception e)
			{
				// Log error
				logger.error(""Exception in getRuleInstanceList(): "" + e.toString());
			}
		}
		
		return ruleInstanceList;
	}
	
	public void setRuleInstanceList(List ruleInstanceList)
	{
		this.ruleInstanceList = ruleInstanceList;
	}

	public UIData getRuleInstanceTable()
	{
		return ruleInstanceTable;
	}

	public void setRuleInstanceTable(UIData ruleInstanceTable)
	{
		this.ruleInstanceTable = ruleInstanceTable;
	}
}

RuleInstance.java
==============

public class RuleInstance extends ModelBase implements Comparable
{
    private Long ruleInstanceId;
    private Long ruleId;
    private String ruleInstanceGroup;
    private Long schemaInstanceId;
    private Long deskId;
    private Long sourceSystemId;
    private Integer severity;
    private boolean activeFlag = false;

    public Long getRuleInstanceId() {
        return ruleInstanceId;
    }

    public void setRuleInstanceId(Long ruleInstanceId) {
        this.ruleInstanceId = ruleInstanceId;
    }

    public Long getRuleId() {
        return ruleId;
    }

    public void setRuleId(Long ruleId) {
        this.ruleId = ruleId;
    }

    public String getRuleInstanceGroup() {
        return ruleInstanceGroup;
    }

    public void setRuleInstanceGroup(String ruleInstanceGroup) {
        this.ruleInstanceGroup = ruleInstanceGroup;
    }

    public Long getSchemaInstanceId() {
        return schemaInstanceId;
    }

    public void setSchemaInstanceId(Long schemaInstanceId) {
        this.schemaInstanceId = schemaInstanceId;
    }

    public Long getDeskId() {
        return deskId;
    }

    public void setDeskId(Long deskId) {
        this.deskId = deskId;
    }

    public Long getSourceSystemId() {
        return sourceSystemId;
    }

    public void setSourceSystemId(Long sourceSystemId) {
        this.sourceSystemId = sourceSystemId;
    }

    public Integer getSeverity() {
        return severity;
    }

    public void setSeverity(Integer severity) {
        this.severity = severity;
    }

    public boolean isActiveFlag() {
        return activeFlag;
    }
    
    public boolean getActiveFlag() {
        return activeFlag;
    }

    public void setActiveFlag(boolean activeFlag) {
        this.activeFlag = activeFlag;
    }
}

listRuleInstances.jsp
=================

<h:dataTable id=""listRuleInstancesTable""
	value=""#{listRuleInstancesBean.ruleInstanceList}""
	binding=""#{listRuleInstancesBean.ruleInstanceTable}""
	var=""ruleInstanceRow""
	headerClass=""DashPartTitle""
	rowClasses=""DashPartBody""
	cellspacing=""0""
	cellpadding=""2""
	frame=""border""
	rules=""all"">
	<h:column>
		<f:facet name=""header"">
			<h:outputText value=""Rule Instance Id""/>
		</f:facet>
		<h:outputText value=""#{ruleInstanceRow.ruleInstanceId}""/>
	</h:column>
	<h:column>
		<f:facet name=""header"">
			<h:outputText value=""Rule Instance Group""/>
		</f:facet>
		<h:outputText value=""#{ruleInstanceRow.ruleInstanceGroup}""/>
	</h:column>
	<h:column>
		<f:facet name=""header"">
			<h:outputText value=""Severity""/>
		</f:facet>
		<h:outputText
			value=""ERROR""
			rendered=""#{ruleInstanceRow.severity == '0'}""/>
		<h:outputText
			value=""WARN""
			rendered=""#{ruleInstanceRow.severity == '1'}""/>
		<h:outputText
			value=""INFO""
			rendered=""#{ruleInstanceRow.severity == '2'}""/>
	</h:column>
	<h:column>
		<f:facet name=""header"">
			<h:outputText value=""Active""/>
		</f:facet>
		<h:outputText
			value=""Yes""
			rendered=""#{ruleInstanceRow.activeFlag == 'true'}""/>
		<h:outputText
			value=""No""
			rendered=""#{ruleInstanceRow.activeFlag == 'false'}""/>
	</h:column>
</h:dataTable>

I have other dataTable's in my application, all of which follow the exact same pattern as this, and all of which work correctly. Thinking that there might have been a problem connecting the JSP page to the backing bean, I changed the getAllRuleInstances() method above to return a List of different classes, and changed the column references in the dataTable to the different class, and the dataTable worked correctly. This tells me that MyFaces may have a problem with the RuleInstance class, but without more detailed exception information I can't see what that might be.

Just to clarify, I am using JDK 1.4.2. I have seen a dataTable example that used a paramaterized List ( List<...> ) to tell Java what class each element would be an instance of, which might aid MyFaces in displaying the dataTable. I understand that paramaterized types are only supported in JDK 1.5+, so I cannot go down this path.

This problem seems to defy logic, and I have been beating my head against the wall trying to solve it. Is there something hidden away that can cause a dataTable to throw this exception for no apparent reason?

Any ideas? I appreciate any time you can spend looking at this, so thanks in advance.",MYFACES-855
"Exception while using SelectManyListbox or SelectManyCheckbox SelectOneRadio with a Converter.
If you have a SelectManyListbox with a Converter, and you click on a CommandNavigation that expand the menu. So only the Navigation should be open, and the same side should by shown, but than you get a Exception from the Converter!

	at de.xy.converter.XYConverter.getAsString(XYConverter.java:62)
	at org.apache.myfaces.renderkit.RendererUtils.getConvertedStringValue(RendererUtils.java:551)
	at org.apache.myfaces.renderkit.RendererUtils.internalSubmittedOrSelectedValuesAsSet(RendererUtils.java:586)
	at org.apache.myfaces.renderkit.RendererUtils.getSubmittedValuesAsSet(RendererUtils.java:510)
	at org.apache.myfaces.renderkit.html.HtmlRendererUtils.getSubmittedOrSelectedValuesAsSet(HtmlRendererUtils.java:304)
	at org.apache.myfaces.renderkit.html.HtmlRendererUtils.internalRenderSelect(HtmlRendererUtils.java:290)
	at org.apache.myfaces.renderkit.html.HtmlRendererUtils.renderListbox(HtmlRendererUtils.java:241)
	at org.apache.myfaces.renderkit.html.HtmlListboxRendererBase.encodeEnd(HtmlListboxRendererBase.java:56)
	at org.apache.myfaces.renderkit.html.ext.HtmlListboxRenderer.encodeEnd(HtmlListboxRenderer.java:55)
	at javax.faces.component.UIComponentBase.encodeEnd(UIComponentBase.java:331)
	at org.apache.myfaces.renderkit.RendererUtils.renderChild(RendererUtils.java:450)

The submittedValues in RendererUtils.getSubmittedValuesAsSet are already a StringArray.
But in the Method ""internalSubmittedOrSelectedValuesAsSet"" the Converter will be ask for the StringValue, so you get an Exception.

If you enter the side with a SelectManyListbox and a Converter, or leave the side with a real Button, all is fine.

SelectOneRadio and SelectManyCheckbox have the same error.
",MYFACES-852
"If the property attribute of t:updateActionListener evaluates to a property in a backing bean that is of type Serializable, the call to context.getApplication().createConverter in UpdateActionListener.processAction() returns null.  This results in a NPE at the bottom of processAction() .  Patch attached.",MYFACES-847
"a single quote in the ""value"" argument to org.apache.myfaces.renderkit.html.HtmlLinkRendererBase.renderLinkParameter gets written directly to the output stream.  It should be escaped with a backslash.",MYFACES-845
Example -> Components -> RSS Ticker -> 404,MYFACES-840
"The renderer of Tree2 is rendering navigation command link for leaf nodes. The icon minus or plus don't appear but the link is active. When the user clicks on link the following error is triggered:

Encountered a node [""xxx""] with an illogical state.  Node is expanded but it is also considered a leaf (a leaf cannot be considered expanded.)

One solution for this is in HtmlTreeRenderer.java, about line 580, replace the code:

RendererUtils.renderChild(context, expandControl);

by this:

if (!node.isLeaf()){
     RendererUtils.renderChild(context, expandControl);
}else{
    RendererUtils.renderChild(context, image);
}

Cesar.",MYFACES-839
"The WelcomeFileFilter loads the webapp web.xml to parse the web.xml file for welcome files (see WelcomeFileFilter, line 180). However as most web.xml files contain a DTD definition, it tries to download these from the web. If the webapp can't reach the internet (firewall, no network connection), the filter fails (in my case with an UnknownHostException).

IMHO, if the filter insists on parsing the web.xml, it should either be able to resolve the most common DTDs (web-app_2_2.dtd, 2_3.dtd, 2_4.dtd probaby) locally or not use a validating parser (setValidating(false) in line 181)) so that it is possible to use the WelcomeFileFilter on hosts that cannot reach the internet.

The bug is still present in the current impl trunk at http://svn.apache.org/viewcvs.cgi/myfaces/impl/trunk/src/java/org/apache/myfaces/webapp/filter/WelcomeFileFilter.java?rev=193014&view=markup


",MYFACES-837
"When using border attribute in <h:graphicImage its giving following exception 

javax.servlet.ServletException: ServletException in '/common/header.jsp': /common/header.jsp(16,16) Attribute border invalid for tag graphicImage according to TLD

Similarly for escape attribute in <h:inputeText its throwing similar exception

javax.servlet.ServletException: ServletException in '/XYZ.jsp': /ABC.jsp(37,22) Attribute escape invalid for tag inputText according to TLD

When I have cecked the HtmlImageRenderer.java ,in that HTML.IMG_PASSTHROUGH_ATTRIBUTES, in which BORDER_ATTR is there in both of the version (1.0.9 and 1.1.1) of Java Classes but in tld border attribute is not  defined.

Similar thing applies to HtmlTextRendererBase.java, ESCAPE_ATTR which is there in renderer but not in tld.
For boder we can use CSS, but for escape attribute what is the alternate?

Because I am prepopulating value ,and value is an ascii character , so when I use escape =false, it shows that properly, otherwise it dont.",MYFACES-836
"In HtmlFormRendererBase, the following code is executed in the encodeBegin() method:

//write state marker at the beginning of the form
ViewHandler viewHandler = facesContext.getApplication().getViewHandler();
viewHandler.writeState(facesContext);

This causes problems (especially when using facelets), as some components first call getClientId() - which causes a new id for the component to be generated by the ViewRoot - in their own encodeBegin() method.

If this is the case, as the form encodeBegin() is called before any of its child components are rendered, those components that do not yet have an id assigned save their state with a null id. When the view state is restored in the next request, these ids will be regenerated, starting with _id0. However, if there are other components in the page that also require autogenerated ids, some ids will be duplicated and the ""problem"" components will receive different ids to when they were first rendered.

Attached is a patch to HtmlFormRendererBase which moves the state saving operation of the form to the encodeEnd() method, where all child components will have been rendered and therefore will have called getClientId() at least once.",MYFACES-833
"JSR-168 (portlets) defines standard CSS Style Definitions in appendix C (conveniently available at https://clearinghouse.ja-sig.org/wiki/pages/viewpage.action?pageId=114).  If in a portlet context, and a styleClass is not specified on a component, and the component is one of ""messages"", ""label"", ""inputText"", ""commandButton"", etc, we can automatically use the appropriate standard portlet style.  This should probably be configurable to turn on and off also.  ",MYFACES-832
"When I set the border property  in t:HtmlGraphicImage I get the following warning:
""WARNING: /nodetree.xhtml @67,79 border=""0"" Property 'border' is not on type: org.apache.myfaces.component.html.ext.HtmlGraphicImage""

However, the border does seem to be set properly.  I've noticed this same issue with other HtmlGraphicImage properties such as the align property.",MYFACES-830
"The Shale ""use cases"" example includes a page where an <h:selectManyCheckbox> component is bound to an array of int that represents selected values.  A bug was reported against this app:

    http://issues/apache.org/bugzilla/show_bug.cgi?id=37361

However, further investigation shows that this case works correctly with the JSF RI, leading to the belief that it represents an implementation error in MyFaces.  See the above bug report for more details.

For reference, the page includes the following component:

    <h:selectManyCheckbox id=""categories"" layout=""pageDirection""
     value=""#{dialog.data.categories}"">
        <h:selectItems value=""#{domains.supportedCategories}""/>
    </h:selectManyCheckbox>

where the binding expressions point at values of the following types:

* #{dialog.data.categories} points at an array of int representing
  the currently selected categories

* #{domains.supportedCategories} points at an array of SelectItem,
  where the ""value"" property of each is an Integer representing the
  primary key for that category.
",MYFACES-829
"The readonly attribute can be defined on an h:selectBooleanCheckbox. However the HtmlCheckboxRenderer doesn't seem to ever look for this attribute.
The same issue is present for t:selectBooleanCheckbox.",MYFACES-828
"1. JSF (RI) with MyFaces extension
2. usage of the inputDate component with attribute renderAsPopup is set =true 
3. usage of the selectOneMenu component (RI) under the inputDate component 
4. if the inputDate show its popup window it overlaps the selectOneMenu component 
5. if this happened the selectOneMenu component won't be shown!!!!
6. when the popup window is closed the selectOneMenu component is shown again...",MYFACES-826
"In UIInput.java, in validate() at line 263 there is ""if (submittedValue == null) return;""

This seems to be incorrect to me.  If submittedValue is set to null, then validate returns without checking to see if required=true.  According to the UIInput spec javadocs "" If the component wishes to indicate that no particular value was submitted, it can either do nothing, or set the submitted value to null.""",MYFACES-824
"JspStateManagerImpl (and maybe other classes) uses request attributes for caching state. This causes a wrong view to be used if there is more than one JSF-based portlet on a single page. MyFaces saves the serialized view of the first portlet on the page as a request attribute. To avoid re-serialization, MyFaces subsequently checks if there already is a request attribute with a serialized view. As request attributes are not scoped to a single portlet (the portlet specification does not require this), the serialized view of the first portlet will be found and used by the second portlet.

This usage of request attributes may also be the cause of MYFACES-549.

As JSF, of course, does not need to know about the portlet environment, it cannot be required that MyFaces saves such information ""per view"", e.g. by prepending the viewId to the key for the request attribute (although this would solve the problem). IMHO any request attributes added during lifecycle.render() should be removed after lifecycle() render by the portlet bridge. (The same applies to request attributes added during lifecycle.execute(), but these should also be re-added before lifecycle.render().) I have implemented this in my portlet bridge as a workaround.
",MYFACES-821
"<t:dataScroller> does not scroll <t:dataTable>, if using in Combination with the JspTilesViewHandlerImpl for Tiles Support.

Futhermore I think an ActionListener doesn't work too, in Combination with the JspTilesViewHandlerImpl for Tiles Support.
",MYFACES-820
"JSP with <t:inputFileUpload/> tag will not render due to ClassCastException in HtmlFileUploadRenderer at line 57.

uiComponent.value() is null and is being cast to UploadedFile class.  No apparent workaround as initial rendering of page would mean no UploadedFile exists at that point.  

Subsequent code appears to expect a null in some instances...

UploadedFile value = (UploadedFile)((HtmlInputFileUpload)uiComponent).getValue();
        if (value != null)
        {
        	if( value.getName() != null )
        	{
        		writer.writeAttribute(HTML.VALUE_ATTR, value.getName(), null);
        	}
        }

... but the cast will ensure a blow up.",MYFACES-819
"Hi!

Well I have tryed million different way but with Tiles commandButton does'nt work. It kind of ""eating"" events.
When I remove Tiles from faces-config.xml all navigation, submitting works perfectly. 
But when I include Tiles there are no action events :( Specially with buttons.


Form is typical jsf form: (userList.jsp)
<f:view>
        <h:form id=""frmUserList"">   
            <h:panelGrid columns=""2"">
                <h:outputText id=""lblName"" value=""First name""/>
                <h:inputText id=""fldName"" value=""#{userList.firstName}""/>
                <h:outputText id=""lblLast"" value=""Last name""/>
                <h:inputText id=""fldLast"" value=""#{userList.lastName}""/>                          
           </h:panelGrid>        
           <h:commandButton id=""cmdFind"" value=""Find"" styleClass=""button10"" action=""#{userList.onSearchUser}""/>
        </h:form>
</view>

(tiles.xml)
 <tiles-definitions>
        <!-- define main template, witch is used for default showing-->
        <definition name=""layout"" path=""/template/main_template.jsp"">
            <put name=""menu"" value=""/template/menu.jsp""/><!-- panel for showing meny -->
        </definition>        
       <definition name=""/user/userList.tiles"" extends=""layout"">
            <put name=""body"" value=""/user/userList.jsp""/>
        </definition>
...
</tiles-definitions>

And my faces config is:
....
        <view-handler>org.apache.myfaces.application.jsp.JspTilesViewHandlerImpl</view-handler>
....
 <navigation-rule>
        <description>
            Navigation rules for navigation component.
        </description>
        <from-view-id>*</from-view-id>
        <navigation-case>
            <from-outcome>go_userList</from-outcome>
            <to-view-id>/user/userList.jsp</to-view-id>
        </navigation-case>
        <navigation-case>
            <from-outcome>go_userEdit</from-outcome>
            <to-view-id>/user/usrEdit.jsp</to-view-id>
        </navigation-case>
    </navigation-rule>
    
Please help me I'm kind a desperate.",MYFACES-816
"when ""Required"" property is set to ""false"" t:inputCalendar is expected to accept nulls
Instead it prevents JSF life cycle from entering ""Invoke Application"" phase. As a result, applicaitons cannot continue unless a value is entered in ""inputCalendar"" field.

I placed a custom phase monitor and discovered that JSF goes through the following phases in the order specified.
RESTORE_VIEW, APPLY_REQUEST_VALUES, PROCESS_VALIDATIONS, UPDATE_MODEL_VALUES, RENDER_RESPONSE. Notice that INVOKE_APPLICATION phase is skipped.

I have also observed that when ""inputCalendar"" is left empty, the model is updated correctly in UPDATE_MODEL_VALUES phase with a null value but INVOKE_APPLICATION phase is skipped.

I believe this is abnormal because the ""inputCalendar"" ""Required"" property is set to false. It shouldn't mind about the null. Besides the model is updated correctly.
",MYFACES-815
" Nearly every time I make a modification to a JSF page, it seems that I 
 need to close and reopen my browser to flush the session because it 
 won't render the new page (for minor layout changes), or throw an 
 exception about duplicate ids (for major changes).

It seems to me that if a JSF page checked (optionally, of course, this 
 would be like 'reloadable' for a webapp) its modification date and 
 found changes, that it would flush its own saved state and start 
 afresh. 

(Logging what it did of course to help people figure out what might have happened).

",MYFACES-813
"according to the JSF spec 1.1 part 2.2.1 

If suffix mapping (such as ""*.faces"") is used for FacesServlet, the viewId is
set from the servlet path information of the request URI, after replacing the
suffix with the value of the context initialization parameter named by the
symbolic constant ViewHandler.DEFAULT_SUFFIX_NAME (if no such context
initialization parameter is present, use the value of the symbolic constant
ViewHandler.DEFAULT_SUFFIX as the replacement suffix).

but I found in javax.faces.application.ViewHandler is 

public static final String DEFAULT_SUFFIX_PARAM_NAME = ""javax.faces.DEFAULT_SUFFIX"";

and I think it should be
ViewHandler.DEFAULT_SUFFIX_NAME ",MYFACES-811
"When I originally submitted the new ReducedHTMLParser I used Sun coding style.
This patch updates the class to use the MyFaces coding style.

There are no functional changes of any sort in this patch, just:
* brace layout changes.
* removing trailing whitespace
* use leading underscore on member vars",MYFACES-809
"Same problem with dataTable: iteration is not done within facet - here: benef.description is always the first element of the list.

(Bug-Code)
<t:dataTable value=""#{projectBenefitBean.data11}"" var=""benef"">
	<h:column>
		<x:popup styleClass=""popup"">
    	<h:outputText value=""#{benef.description}""/>
		     <f:facet name=""popup"">
     			<h:panelGroup>
		    		<h:outputText value=""#{benef.description}""/>
					<h:commandLink rendered=""#{projectBenefitBean.mode == 0}""  styleClass=""BENEFITBUTTON"">
						<f:param value=""1"" name=""col""/>
						<f:param value=""1"" name=""row""/>	
						<h:outputText value=""changes""/>
					</h:commandLink>
	     		</h:panelGroup>
		      </f:facet>
		  </x:popup>
	  </h:column>
</t:dataTable>

This code works fine ... (using h:datatable instead of t:datatable):

<h:dataTable value=""#{projectBenefitBean.data11}"" var=""benef"">
	<h:column>
		<x:popup styleClass=""popup"">
    	<h:outputText value=""#{benef.description}""/>
		     <f:facet name=""popup"">
     			<h:panelGroup>
		    		<h:outputText value=""#{benef.description}""/>
					<h:commandLink rendered=""#{projectBenefitBean.mode == 0}""  styleClass=""BENEFITBUTTON"">
						<f:param value=""1"" name=""col""/>
						<f:param value=""1"" name=""row""/>	
						<h:outputText value=""changes""/>
					</h:commandLink>
	     		</h:panelGroup>
		      </f:facet>
		  </x:popup>
	  </h:column>
</h:dataTable>
",MYFACES-803
"Hi,
I've a problem with the datalist component:

The Code:
<t:dataList value=""#{projectBenefitBean.data11}"" var=""benefit"">
  <x:popup ...>
    <h:outputText value=#{benefit.description}""/>
     <f:facet name=""popup"">
            <h:outputText value=""#{benefit.description}"" />
      </f:facet>
  </x:popup>
</t:dataList>

The Problem:
All variables used inside the facet seem to stay on the first value of 
the iterated list.
The means for the above shown example:
- the first benefit.description shows all the items correctly
- the second description (inside the facet) shows the first item only.
- using the h:datatable - h:column component instead works fine.

Thank you...
Hans

",MYFACES-802
"On Weblogic 8.1, when FacesConfigurator.feedClassloaderConfigurations()  tries to find
faces-config.xml configuration on the classpath, the Method

ClassUtils.getCurrentLoader(defaultObject).getResources(resource)

returns in some circumstsances an Enumeration, with duplicated URLs. This is e.g. the case, when a jar
references another jar via MANIFEST's classpath attribute and this second jar is also in the current classpath.

The fix is simple: Instead of using a List in ClassUtils.getResources() use a Set to remove duplicated entries.
",MYFACES-800
"Ed Burns repoted:
	
Hello MyFaces Developers,

I have downloaded and built the Tomahawk components and ran them with
the JSF 1.2 impl.  Doing so, I discovered that the example app uses

<h:form name=""whatever"" >

frequently.  The ""name"" attribute is not in the spec so supporting it
breaks portability to other implementations.  Can you please remove the
""name"" attribute from the TLD for your form tag in your html_basic
taglibrary?

Thanks,

Ed",MYFACES-798
"When I upgrade from 1.1.0 to 1.1.1 my custom date converter stop working.
In my page when the user does not fill the date field, that is not required myfaces report the following error, the field in backing bean is of type java.util.Date.

Looking the source, I see the problem in class org.apache.myfaces.el.ValueBindingImpl , before 1.1.1, in the setValue(FacesContext facesContext, Object newValue) method, the call to the propertyResolver.setValue is in this way :

                    Class clazz = propertyResolver.getType(base, property);
                    propertyResolver.setValue(base, property, coerce(newValue, clazz));

In the 1.1.1, this has changed to :

                   propertyResolver.setValue(base, property, newValue);

This change is causing the error.

Follow my code that reproduces the error.
 
The Bean :
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 
public class UserSearchBean extends BaseSearchBean {
 
 private Integer id_user;
 private String email;
 private String login;
 private String name;
 private Date creation_timestamp1;
 
 public Date getCreation_timestamp1() {
  return creation_timestamp1;
 }

 public void setCreation_timestamp1(Date creation_timestamp1) {
  this.creation_timestamp1 = creation_timestamp1;
 }

...
 
The Page :
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
<h:inputText id=""txtDateCreation"" value=""#{UserSearchBean.creation_timestamp1}"" maxlength=""10"" size=""9"" styleClass=""input"">

<venus:dateTimeConverter pattern=""DD/MM/YYYY"" />

</h:inputText>

The Converter :

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 public Object getAsObject(FacesContext context, UIComponent component, String newValue)
   throws ConverterException {
  
  Date convertedValue = null;
  
  boolean valid = false;

  if ( newValue == null || newValue.equals("""") ) {
   return newValue;
  }  

  SimpleDateFormat fmt = new SimpleDateFormat(pattern);
  fmt.setLenient(false);
  
  try {
   
   convertedValue = fmt.parse(newValue);
   valid = true;
   
  } catch (ParseException e) {
  
   valid = false;

  }
  

  if ( !valid ) {
   FacesMessage errMsg = MessageFactory.getMessage(context, DATETIME_FORMAT_INVALID_MESSAGE_ID, 
    (new Object[] {newValue}));
   throw new ConverterException(errMsg);
  }
  
  return convertedValue;
  
 }


The Error :

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 
 
[2005-11-07 09:29:16,546] http-8080-Processor24 org.apache.catalina.core.ContainerBase.[Catalina].[localhost].[/venusweb] ERROR - Cannot set value for expression '#{UserSearchBean.creation_timestamp1}' to a new value of type java.lang.String
javax.faces.el.EvaluationException: Cannot set value for expression '#{UserSearchBean.creation_timestamp1}' to a new value of type java.lang.String

at org.apache.myfaces.el.ValueBindingImpl.setValue(ValueBindingImpl.java:304)

at javax.faces.component.UIInput.updateModel(UIInput.java:226)

at javax.faces.component.UIInput.processUpdates(UIInput.java:165)

at javax.faces.component.UIForm.processUpdates(UIForm.java:85)

at javax.faces.component.UIComponentBase.processUpdates(UIComponentBase.java:428)

at javax.faces.component.UIViewRoot.processUpdates(UIViewRoot.java:153)

at org.apache.myfaces.lifecycle.LifecycleImpl.updateModelValues(LifecycleImpl.java:277)

at org.apache.myfaces.lifecycle.LifecycleImpl.execute(LifecycleImpl.java:81)

at javax.faces.webapp.FacesServlet.service(FacesServlet.java:106)

at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:252)

at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)

at br.com.venus.view.filters.SecurityFilter.doFilter(SecurityFilter.java:61)

at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:202)

at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)

at org.apache.myfaces.component.html.util.ExtensionsFilter.doFilter(ExtensionsFilter.java:122)

at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:202)

at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)

at org.springframework.orm.hibernate3.support.OpenSessionInViewFilter.doFilterInternal(OpenSessionInViewFilter.java:172)

at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)

at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:202)

at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)

at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:213)

at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:178)

at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:126)

at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:105)

at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:107)

at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:148)

at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:856)

at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.processConnection(Http11Protocol.java:744)

at org.apache.tomcat.util.net.PoolTcpEndpoint.processSocket(PoolTcpEndpoint.java:527)

at org.apache.tomcat.util.net.LeaderFollowerWorkerThread.runIt(LeaderFollowerWorkerThread.java:80)

at org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:684)

at java.lang.Thread.run(Thread.java:595)

Caused by: javax.faces.el.EvaluationException: br.com.venus.model.bean.search.UserSearchBean

at org.apache.myfaces.el.PropertyResolverImpl.setValue(PropertyResolverImpl.java:155)

at org.apache.myfaces.el.ValueBindingImpl.setValue(ValueBindingImpl.java:269)

... 32 more

Caused by: javax.faces.el.EvaluationException: Bean: br.com.venus.model.bean.search.UserSearchBean, property: creation_timestamp1

at org.apache.myfaces.el.PropertyResolverImpl.setProperty(PropertyResolverImpl.java:372)

at org.apache.myfaces.el.PropertyResolverImpl.setValue(PropertyResolverImpl.java:148)

... 33 more

Caused by: java.lang.IllegalArgumentException: argument type mismatch

at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)

at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)

at java.lang.reflect.Method.invoke(Method.java:585)

at org.apache.myfaces.el.PropertyResolverImpl.setProperty(PropertyResolverImpl.java:368)

... 34 more

But I do not see this behavior with all prior version.

",MYFACES-796
"The class ApplicationImpl generates logging output for each component and validator registered while processing the faces-config.xml files.
The attached patch provides the same logging output for renderers defined in the faces-config.xml file.

In particular, I am tracking down a problem where a custom renderer for an existing component works fine for me (linux) but does not work for work colleagues (windows). I suspect it's due to the order that jars are processed, and that for then the standard renderer is overwriting my custom renderer. This could well be a common issue for many users, and this logging output helps resolve this sort of issue.

Regards,  Simon",MYFACES-795
This happens when one or more array values are null.,MYFACES-791
"Assume the following code:
<h:selectOneMenu value=""#{bean.integerValue}"" required=""true"">
<f:selectItem itemValue=""#{bean2.integerValue1 + bean2.integerValue2}"" itemLabel=""someLabel""/>
</h:selectOneMenu>

The problem here is, that the itemValue-property will be evaluated to a value of type java.lang.Long. The submitted value will be of type java.lang.Integer. When both values are the same, e.g. 9, the test in the class _SelectItemsUtil, line 68

   integerValue.equals(longValue)

will fail and we get an error.

Suggestion for problem solution:
The problem may be resolved according 4.1.13.2 of JSF Spec 1.1 by trying to convert the EL calculated value to the data type of the parent component's type.",MYFACES-790
"When calling getDataTable in HtmlDataTableHack a NPE is thrown. This is caused by the same issue as for bug 739, and presumably will have the same fix.

Cheers, Lee",MYFACES-789
"Request attributes set in Phases prior to the rendering phase are no longer available in the rendering phase. This behaviour is easily explainable from a portlet writer's point of view (he knows about the distinction between the ActionRequest and the RenderRequest). From the JSF implementor's point of view (who knows only about a single request) this behaviour leads -- during the rendering phase -- to the unexplicable unavailability of all request attributes set prior to the rendering phase.

Looking through the JSF spec, I found no indication that request scope attributes may be lost during the processing of a (from the JSF user's point of view) single request. So I thing the portlet JSF bridge should ensure the ""carrying over"" of request attributes between the action and the render request.
",MYFACES-788
"The tomahawk.tld file uses xml entities to reference some attributes shared between components.
However the attributes for tomahawk components are defined in-line in the tomahawk.tld file.

When subclassing a tomahawk component to extend it, all of the text needs to be copied into the tld
where the derived component is defined - ugly, esp. for things like HtmlColumn that have dozens of
attributes.

Attached is a patch to simply move the attributes defined in tomahawk.tld for the HtmlColumn tag
into an external entity file, thus allowing derived classes to just reference this entity file.

I'm happy to provide patches to move all defined attributes for other tomahawk components into
entity files too, though it probably takes more time to apply/commit such patches than it would for
a MyFaces committer to make this change directly.

One possible variant on this patch is to move the other entity refs which are used by HtmlColumn
into the html_column_attributes.xml file, so that the HtmlColumn definition in tomahawk.tld just
contains one reference. That makes subclassing even easier, and seems sensible. It's a slightly
more adventurous change, though, so I've submitted the simpler approach as the patch.

",MYFACES-787
http://www.mail-archive.com/users%40myfaces.apache.org/msg11279.html,MYFACES-785
"Understanding how the UIData table management works in JSF has taken me quite a lot of time. 
I think it would be nice for future developers to have some guidance on how this non-trivial code works.

Attached is a patch to provide at least a start for others learning this code. Ideally I think this could be put into the UIData class javadoc.
The description is deliberately phrased in a way that will be stable; unless the ""flyweight"" approach is ditched this description will
continue to be valid. This info is also useful to people working on components that have to live *in* a table. This is clearly a difficult
topic, as seen by the number of recent patches to make Tomahawk components work correctly in tables.

Alternatives would be to put it into that class as an ordinary comment (non-javadoc), or to put it onto a wiki or similar, with a reference
in the javadoc to that wiki page. However without something in the sourcefile itself I don't think many developers will be able to find the 
information at the appropriate time,

Thanks,  Simon",MYFACES-782
"For an HTML table, much of the decoding process is controlled by the components rather than the renderer.
In the class javax.faces.component.UIData, method ""processColumnChildren"" (which is called by processDecodes) does this:

  for (Iterator it = getChildren().iterator(); it.hasNext();)
  {
      UIComponent child = (UIComponent) it.next();
      if (child instanceof UIColumn)
      {
          if (!child.isRendered())
          {
              //Column is not visible
              continue;
          }
          for (Iterator columnChildIter = child.getChildren()
              .iterator(); columnChildIter.hasNext();)
          {
             UIComponent columnChild = (UIComponent) columnChildIter
                  .next();
             process(context, columnChild, processAction);
          }
      }
  }

And that last call to process them calls component.processDecodes, which delegates to the renderer as needed.

However this code means UIData is accessing its *grandchildren* directly, rather than just its children. I don't believe this is very nice OO design; UIData's children should be responsible for managing their own children, ie the UIColumn class should be told to process the children rather than calling getChildren on it and manipulating those directly. 

It also makes it impossible for a custom UIColumn class to receive decode calls; they go direct to the custom column's children.

See this email thread for more info, esp. responses by Mike Kienenberger (thanks, Mike):
  http://www.mail-archive.com/users%40myfaces.apache.org/msg11363.html",MYFACES-781
javax.faces.convert.DoubleConverter has invalid CONVERTER_ID: javax.faces.DoubleTime. It should be javax.faces.Double,MYFACES-778
"I built a custom component for internal use that acts as an ActionSource. Since myfaces can handle setting actio properties through org.apache.myfaces.taglib.UIComponentTagUtils#setActionProperty I decided to make use of that.

My component does not inherit from UICommand, but does implement ActionSource. That should not be a problem was it not that UIComponentTagUtils#setActionProperty checks if the component passed as its second parameter is an instance of UICommand. Changing the lines:

if (!(component instanceof UICommand))

((UICommand)component).setAction(mb);

to

if (!(component instanceof ActionSource))

((ActionSource) component).setAction(mb);

should fix the problem. See:
http://svn.apache.org/repos/asf/myfaces/share/trunk/src/java/org/apache/myfaces/taglib/UIComponentTagUtils.java
",MYFACES-774
"We have  a form with:
* a submit button (commandButton, type=""submit"") with an action (action=""#{bean.go}"") 
* a single textinput field (single textbox is key)
* several selectboxes

If you press enter, when the textbox has focus, it's expected to submit the first submitbutton.
This works fine under firefox. However, under IE, when you press enter, yuo get a different results than clicking the submit button.

This results in unexpected behaviour: Because the name/value pair is not submitted by pressing enter, myfaces does not know that the button was clicked, and therefore does not invoke the action (bean.go())

The problem is also described: http://ppewww.ph.gla.ac.uk/~flavell/www/formquestion.html
The input pixel image solution did not work for us, but we've found another way:

At the beginning of the form, we've put:
<f:verbatim>
<input type=""text"" name=""input_for_enterkey_submit"" style=""display: none;"">
</f:verbatim>


The myfaces renderer should count the number of textinputs, and if there is only one textinput, it should create a hidden textinput.",MYFACES-771
"Rev 329572 includes method
public void setCollapsed(boolean collapsed)
{
    setValue(Boolean.valueOf(collapsed));
}

as well as
    public boolean isCollapsed() { }

Rev 329598 only has public boolean isCollapsed() { }

Both methods are inside the ""generated"" code section, so I can see how it would be easy to ""lose"" this method without doing it on purpose, if this is in fact a bug.",MYFACES-770
"If the same code is used ot generated a component tree for more than one part of a webpage, the rendered IDs are the same and functionality is broken (javascript needs unique IDs).

An example of when this happens is when as portlet uses JSF for rendering.  If the portlet is used more than once on a single page (e.g. an RSS reader) all the IDs are the same.

Thus we need a way to have more configurable (perhaps random) IDs when rendered.",MYFACES-769
"ReducedHTMLParser (used by AddResource class) currently fails to handle the string ""//-->"".

I found that my script references were getting inserted right into the
middle of the body of my html page. After inserting some debug code, I
have found that
   closedStartTag
is being called every time that ""//-->"" is encountered in the page. And
that's a lot, as that sequence is generated whenever an inline script is
inserted into the page.

This problem breaks every page containing a component that inserts
javascript into the page header (jscookmenu, HtmlTree, etc).

I've had a look at the code, and while the current implementation is very small I think it's quite hard to read/debug/maintain and may not handle a number of cases (such as the one described here). 

Attached is a proposed alternative implementation of this class. The code is larger but is hopefully easier to read. And also attached is a unit test case class which the current implementation lacks. This class isn't *quite* finished; the unit tests indicate there are a few off-by-one errors but that's just a matter of tweaking. I hope that this may form the basis of a replacement for the current ReducedHTMLParser.

The implementation is a hybrid state-machine/adhoc parser. 

Regards,

Simon",MYFACES-768
"There is a bug in org.apache.myfaces.renderkit.html.ext.HtmlTextareaRenderer in method: encodeEnd. Line 60 is:

            super.encodeTextArea(facesContext, uiComponent);


""super"" prefix is not neccessary (encodeTextArea is not overwritten) and this avoids calling to any encodeTextArea method from any child class. It should be:

            encodeTextArea(facesContext, uiComponent);

A workaround for this is overwrite the encodeEnd method too.


",MYFACES-767
"
I found a very powerful Tomahawk component 'Javascript Listener'. However, the existing documation on the usage of this component is poor, so I am submitting some docs.",MYFACES-766
"If the value of a cell is to bigg, having it truncated and three dots shown (...) would be nice. this is a css3 feature text-overflow: ellipsis, but FF does not support this yet. On http://www.hedgerwow.com/360/dhtml/text_overflow/demo.php is a nice workaround which would be great to have in the extended datagrid",MYFACES-763
"I have a jsp page that has the following in it:

session.removeAttribute(""user"");
session.invalidate();
response.sendRedirect(""index.jsf"");

If I remove session.invalidate(), it works fine.  With it I get this: 

I get the following

javax.servlet.ServletException: Cannot get value for expression '#{ScopeContainer}'
	javax.faces.webapp.FacesServlet.service(FacesServlet.java:109)
	org.apache.myfaces.component.html.util.ExtensionsFilter.doFilter(ExtensionsFilter.java:122)
	rhythm.marketplace.filters.AuthFilter.doFilter(Unknown Source)

root cause

javax.faces.el.EvaluationException: Cannot get value for expression '#{ScopeContainer}'
	org.apache.myfaces.el.ValueBindingImpl.getValue(ValueBindingImpl.java:395)
	org.apache.myfaces.custom.scope.ScopeUtils.getManagedBean(ScopeUtils.java:63)
	org.apache.myfaces.custom.scope.AfterScopePhaseListener.afterPhase(AfterScopePhaseListener.java:44)
	org.apache.myfaces.lifecycle.LifecycleImpl.informPhaseListenersAfter(LifecycleImpl.java:490)
	org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:339)
	javax.faces.webapp.FacesServlet.service(FacesServlet.java:95)
	org.apache.myfaces.component.html.util.ExtensionsFilter.doFilter(ExtensionsFilter.java:122)
	rhythm.marketplace.filters.AuthFilter.doFilter(Unknown Source)
",MYFACES-762
"Enhancement of ReducedHTMLParser in order to make it possible to add a JavaScript event and the corresponding JavaScript code to body tag. 
This should be a new feature of the JsValueChangeListener. 

Therefore it is also a need to fix a small bug in the ReducedHTMLParser to parse the positions correctly. E.g. the position of the body tag is not determined the right way.
 ",MYFACES-761
"I just changed some of my bean implementations to use Long instead of long, Integer instead of int, etc. to have nullable properties rather than primitives. I then sadly discovered that autoboxing is not standard in property resolution (PropertyNotFoundException). Of course it isn't in pre java 5 JVM either, but I think it would be nice to have the ability to convert automatically between the java 5 autoboxed types (is it possible to do this for J5.0 only, then others wouldnt get confused?).",MYFACES-759
"A change has been made between the MyFaces that shipped with JBoss 4.0.3 RC2, and the MyFaces that ships with JBoss 4.0.3 SP1.  I have isolated it to MyFaces by copying the two myfaces libraries from 4.0.3 RC2 TO 4.0.3 SP1.  My code only works when 4.0.3 SP1 is using the MyFaces libraries from 4.0.3 RC2.

Here is the problem.  I use a custom ViewHandler which returns a getActionURL to a custom location.  This location is virtual, it does not have a physical location as a file.  When using the later MyFaces build mentioned above, I visit:

http://localhost:8080/bm-hosted/nextup/

Oddly, I then receive a 404 error FOR the URL returned by getActionURL

The requested resource (http://localhost:8080/bm-hosted/nextup/view) is not available.

even though that is not the URL I visited at this time.

It is important to note that this ALL works perfectly with the older MyFaces libraries.  It almost seems like the later version of MyFaces is somehow checking for the existence of getActionURL, and returning 404 when it can't find it??




",MYFACES-757
"Hello,

We're using MyFaces-1.1.1RC3. 
The HTML link's ""onclick"" rendered by org.apache.myfaces.renderkit.html.HtmlLinkRendererBase#renderJavaScriptAnchorStart goes as following:
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
if ( document.forms['id'].onsubmit )
{ 
	if( document.forms['id'].onsubmit()) document.forms['id'].submit();
}
else
{
	document.forms['id'].submit();
}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Which means ""If form has 'onsubmit' handler and it's return value is 'true' - submit the form"". But it should be the other way around - ""If form has 'onsubmit' handler and it's return value is 'false' -don't submit the form"". 

The difference shows up if ""onsubmit"" handler returns nothing and return value of calling""onsubmit() is ""undefined"" - in this case ""if ( form.onsubmit())"" doesn't hold true and ""form.submit()"" isn't called. The result - you have a form with ""onsubmit"" handler returning no value (it's perfectly Ok) with non-working links, i.e clicking them causes no effect.

I believe the JavaScript code should be written in the following way:
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
if ( document.forms['id'].onsubmit )
{ 
        var result = document.forms['id'].onsubmit();
	if( isUndefined( result ) || result ) document.forms['id'].submit();
}
else
{
	document.forms['id'].submit();
}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

So far - we've just made our ""onsubmit"" handler to return ""true"" explicitly.

Thank you !",MYFACES-755
"IMHO it would be a good idea to include the version within the jar-names. 

E.g: 
* myfaces-all-1.1.1RC3.jar
* tomahawk-1.1.1RC3.jar

* myfaces-all-1.1.0.jar
...

This is also the naming many other projects support.",MYFACES-754
"On the mailing list users@myfaces.apache.org was a discussion to remove context parameter ""org.apache.myfaces.PRETTY_HTML"" from MyFaces.

There is another project called JTidy, which provides an extention filter to format HTML:
http://jtidy.sourceforge.net/multiproject/jtidyservlet/filter.html

MyFaces should concentrate on its goal.

Severeal users voted to remove the PRETTY_HTML-feature from MyFaces.

Tasks:
* Remove all sources, which depends on this context parameter
* Write a short description, how to make HTML pretty using JTidy at the wiki instead (already done by Simon Kitching at http://wiki.apache.org/myfaces/FAQ ).
",MYFACES-752
"Getting this exception when removing a bean as a listener:
java.util.ConcurrentModificationException
 at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:462)
 at java.util.AbstractList$Itr.next(AbstractList.java:433)
 at java.util.AbstractCollection.remove(AbstractCollection.java:268)
 at org.apache.myfaces.lifecycle.LifecycleImpl.removePhaseListener(LifecycleImpl.java:411)
 at com.erac.riskmgmt.ice.web.AbstractPageBean.afterPhase(AbstractPageBean.java:128)

The method call at AbstractPageBean:128 is getLifecycle().removePhaseListener(this);

  protected Lifecycle getLifecycle() {
    String lifecycleId = getExternalContext().getInitParameter(""javax.faces.LIFECYCLE_ID"");
    if ((lifecycleId == null) || (lifecycleId.length() == 0)) {
      lifecycleId = LifecycleFactory.DEFAULT_LIFECYCLE;
    }

    LifecycleFactory lifecycleFactory = (LifecycleFactory) FactoryFinder.getFactory(
        FactoryFinder.LIFECYCLE_FACTORY);

    return lifecycleFactory.getLifecycle(lifecycleId);
  }

Basically what's happening from a request perspective is that we have a custom ViewHandler that creates the backing bean that's registered for a given view id (custom registry using a HashMap that's created as a managed bean and maintained manually in faces-config).  When the backing bean is created it adds itself as a listener and when the AFTER RENDER_RESPONSE is executed the bean removes itself as a listener (as above at line 128 in AbstractPageBean).  No problems are observed in low-load situations, but when we sent the application to benchmarking simulating ~200 ""concurrent"" users we noticed this problem.  It looks like easiest fix is to synchronize the array list on adding and removing listeners (currently we've worked around this by using an external lock to synchronize add/remove calls from our AbstractPageBean).

However, It looks like there is also a potential problem with the call to getPhaseListeners() in that it creates a cached array that's later copied back into a *new* ArrayList in addPhaseListener(...) and removePhaseListener(...).  Since there is no synchronization if someone called getPhaseListeners() and then two/N different threads tried to add listeners 1..N listeners could be lost (all would check for a null _phaseListenerList and multiple threads could potentially attempt to create a new _phaseListenerList and add/remove the PhaseListener) -- of course the converse problem would be that two/N different threads tried to remove phase listeners and the 1..N listeners would not be removed (they would be recopied in on another thread).

What would simplify this whole business greatly would be to remove the cached list and simply synchronize on the ArrayList on the add/remove/getListeners:

    public void addPhaseListener(PhaseListener phaseListener)
    {
        if(phaseListener == null)
        {
            throw new NullPointerException(""PhaseListener must not be null."");
        }
       
// create _phaseListenerList at class scope -- so no more null-checks for it
        synchronized(_phaseListenerList) {
        _phaseListenerList.add(phaseListener);
        }
    }

    public void removePhaseListener(PhaseListener phaseListener)
    {
        synchronized(_phaseListenerList) {
        _phaseListenerList.remove(phaseListener);
        }
    }

    public PhaseListener[] getPhaseListeners()
    {
        synchronized(_phaseListenerList) {
                return  (PhaseListener[])_phaseListenerList.toArray(new PhaseListener[_phaseListenerList.size()]);
         }
    }",MYFACES-750
"I have a drop down LEVELS with an valueChangeListener and an inputText field that is supposed to change when the drop down is changed. The inputText field is bound to a simple String object.

When the value of the drop down changes, request submits and upon processing the value of the backing bean changes. when comes to UI, its not showing the changed value in the <h:inputText> field, but its showing the updated value in <h:outputText> field.

REFERENCES
---------------------

<%@ taglib uri=""http://java.sun.com/jsf/html"" prefix=""h""%>

         <h:selectOneMenu id=""SELECTlevel"" 
	immediate=""true""
	value=""#{irisRequestQueueBean.currentRequest.level}""
	disabled=""#{empty irisRequestQueueBean.levels}""
	valueChangeListener=""#{irisRequestQueueBean.changedLevel}""
	onchange=""this.form.submit( );"">
	<f:selectItems value=""#{irisRequestQueueBean.levels}"" />
	<j4j:idProxy id=""levelId"" />
       </h:selectOneMenu>

upon changing the level, backing bean value changes. but the below inputText not showing the updated value. but outputText is showing the correct value.

     <h:inputText id=""checked"" size=""30"" value=""#{irisRequestQueueBean.currentRequest.title}""> 
     </h:inputText>

    <h:outputText value=""(#{irisRequestQueueBean.currentRequest.title})""/>",MYFACES-749
"I have added one tabChangeListener to the Tabbed Pane that it's in the examples.
Added this line to tabbedPane.jsp:

  <t:tabChangeListener type=""org.apache.myfaces.examples.misc.TabbedPaneBean""/>

And I changed TabbedPaneBean:

	public void processTabChange(TabChangeEvent arg0) throws AbortProcessingException {
		System.out.println( ""changed !!"" );
	}

But this method is never called.",MYFACES-747
"I have added one tabChangeListener to the Tabbed Pane that it's in the examples.
Added this line to tabbedPane.jsp:

  <t:tabChangeListener type=""org.apache.myfaces.examples.misc.TabbedPaneBean""/>

And I changed TabbedPaneBean:

	public void processTabChange(TabChangeEvent arg0) throws AbortProcessingException {
		System.out.println( ""changed !!"" );
	}

But this method is never called.",MYFACES-746
"Client side state saving should be encrypted ... work in progress.

http://cvs.sourceforge.net/viewcvs.py/jsf-comp/security/src/java/net/sf/jsfcomp/secure/?only_with_tag=HEAD",MYFACES-742
The attached patch contains some improved exception messages that provide some context when tag attributes contain bad values.,MYFACES-741
"I receive a null pointer exception in the UIViewRoot._broadcastForPhase private method.

This occurs after I manually remove components from the component tree.

I appears the error is generate because a list iterator is being used for removing events from the _events list.

After I first modifed the code place a try catch around the for statement, the events processing was aborted correctly.

I have made the following changes as a workaround:

   private void _broadcastForPhase(PhaseId phaseId)
    {
        if (_events == null) return;

        boolean abort = false;

        int phaseIdOrdinal = phaseId.getOrdinal();
        
// DWJ CHANGE BEGIN
        //iterate until until no more events to broadcast
        //we should not use an iterator because because of the
        //ConcurrentModificationException, so use while{} as a workaround
        //To handle possible infinite event queueing
        //capture the original size of the _events list and 
        //abort after 10000 iterations
        int currIteration = 0;
        int abortIteration = _events.size() + 10000;
        int itemIdx = 0;
        while (itemIdx < _events.size()){
        	FacesEvent event = (FacesEvent) _events.get(itemIdx);
            int ordinal = event.getPhaseId().getOrdinal();
            if (ordinal == ANY_PHASE_ORDINAL ||
            	ordinal == phaseIdOrdinal)
            {
                UIComponent source = event.getComponent();
                try {
                    source.broadcast(event);
                } catch (AbortProcessingException e) {
                    // abort event processing
                    // Page 3-30 of JSF 1.1 spec: ""Throw an AbortProcessingException, to tell the JSF implementation
                    //  that no further broadcast of this event, or any further events, should take place.""
                    abort = true;
                    break;
                }
            }
            _events.remove(itemIdx);  //always stay at zero position
            //check for infinite event queueing
            if (currIteration > abortIteration){
            	abort = true;
            	break;
            }
            currIteration++;
        }
//DWJ CHANGE END
        if (abort) {
            // TODO: abort processing of any event of any phase or just of any event of the current phase???
            clearEvents();
        }
    }
",MYFACES-739
"Very difficult to identify exceptions that are thrown during processing of EL statements, since all information is swallowed without logging.

org.apache.myfaces.el.PropertyResolverImpl.getProperty catches a Throwable exception and creates a new EvaluationException

This is then caught by org.apache.myfaces.el.PropertyResolverImpl.getValue as a RuntimeException and then throws a new EvaluationException.

This is in turn caught by the org.apache.myfaces.el.ValueBindingImpl.getValue method Exception catch and another new EvaluationException is thown.  

The error message on the UI is ""Exception: javax.faces.el.EvaluationException: Cannot get value for expression '#{erHandler.expectedReceipt.seqno}'"" which has lost all trace of the underlying exception.

Would be better to have the information from the underlying exception in the error message in the UI.  If this is not practical, then a logged message would greatly facilitate debugging.",MYFACES-738
"If the backing bean setter takes a Number argument (Integer, Float, ...), the converter fails :
Conversion Error ""XXX: Error during model data update.

If the setter uses a primitive type, then it works fine.

This worked with the trunk version from September 30.
There must have been a change that broke it since.",MYFACES-736
"This has been posted on the mailing list quite some time ago, and somehow we forgot about it. This is why I am opening a jira issue on this.

regards,

Martin

I am currently switching over my JSF tutorial
(http://www.coreservlets.com/JSF-Tutorial/) from the Sun Reference
Implementation to MyFaces, updating it significantly, and adding in info on:
- MyFaces setup and configuration
- MyFaces/Tomahawk custom validators
- MyFaces/Tomahawk custom components

In the process, I uncovered a few errors or omissions in the current
MyFaces documentation. I mention all of these things in my tutorial, but I
figured the MyFaces team would like to know. Here's what I noticed so far:

1) http://myfaces.apache.org/gettingstarted.html: Required JAR files
       A) The docs say that commons-codec-1.2.jar is required only if you are
uploading files, but most of my apps crash when that JAR file is omitted.
These same apps run fine in the Sun RI.

       B) The docs do not mention jstl.jar.
               First of all, some I18N code crashes if jstl.jar is not included. For
example, if I do this:
       <f:view locale=""#{facesContext.externalContext.request.locale}"">
       <f:loadBundle basename=""messages"" var=""msgs""/>
it crashes if jstl.jar is not included, even though JSTL is not being
explicitly used anywhere. The same code runs fine in the Sun RI.
               Secondly, since JSTL is supposed to be bundled with JSTL, IMHO you should
mention jstl.jar on the gettingstarted.html page anyhow.

       C) The docs *do* mention commons-validator.jar but *do not* mention
jakarta-oro.jar. But the MyFaces validators that use regular expressions
(validateEmail, validateRegExpr, etc.) crash if jakarta-oro.jar is not
included.

       D) Since you are mentioning some non-JSF-standard stuff here anyhow, you
might as well mention myfaces-extensions.jar, IMHO.


2) General configuration and documentation.
       A) File extension. All of the examples use "".jsf"" as the file extension. I
actually prefer that over "".faces"", but since "".faces"" is much more
standard and is what the JSF spec and all the JSF books use, IMHO you
should highlight this change to users and remind them how to edit web.xml
to change the file extension back.

       B) Similarly, all the examples use examples-config.xml as the
configuration file. Again, newbie users will be confused since they will be
expecting faces-config.xml. IMHO you should highlight the change and remind
users how to edit web.xml to change the name of the config file.

       C) The TLD Javadocs for the h: and f: libraries
(http://myfaces.apache.org/tlddoc/core/) is pretty poor. In contrast, the
TLD Javadocs for the Sun RI
(http://java.sun.com/j2ee/javaserverfaces/1.1/docs/tlddocs/) is pretty
good. Since they refer to the identical tag libraries, is it kosher for you
to just grab the Sun docs and use it as a starting point? Or just have your
link point there?


3) Custom components and validators.
       A) I could not see where you document that you need the filter and
filter-mapping definitions in web.xml in order to use the custom components
that use JavaScript. IMHO you need to really highlight this or newbie users
will never figure it out. I also think you should clearly say that the
url-pattern of the filter-mapping needs to match the url-pattern of
servlet-mapping. Otherwise, users who changed the file extension from .jsf
to the more standard .faces will cut-and-paste the filter and
filter-mapping definitions from myfaces-examples, and it won't work.

       B) In myfaces-examples, validate.jsf crashes because jakarta-oro.jar is
not in WEB-INF/lib.

       C) Most of the online docs for the custom components (e.g.,
",MYFACES-734
"[SITUATION]
I have a UserBean that extends GroupBean
I have a User extends Entity and Entity extends Vertex and Vertex extends Persistent and Persistent  has a private Serializable id with getters and setters.

in my edituser.jsp I do something like this:
<%@ taglib uri=""http://java.sun.com/jsf/html"" prefix=""h"" %>
<%@ taglib uri=""http://java.sun.com/jsf/core"" prefix=""f"" %>

        <h:dataTable id=""groupsList"" value=""#{userBean.directGroups}"" var=""group"" headerClass=""tableheader"" columnClasses=""tablecell"">
          <h:column>
            <f:facet name=""header"">
              <h:outputText value=""Directe Groep(en)"" />
            </f:facet>
            <h:commandLink action=""#{userBean.editGroup}"">
              <f:param name=""groupId"" value=""#{group.id}""/>
              <h:outputText value=""#{group.label}"" />
            </h:commandLink>
          </h:column>
        </h:dataTable>

This works with 1.0.9, but fails with 1.1.1 (all else remaining the same).


[ERROR]
02:35:46,390 ERROR [jsp]:704 - Servlet.service() for servlet jsp threw exception
javax.faces.el.PropertyNotFoundException: Bean: org.hibernate.collection.PersistentSet, property: id
	at org.apache.myfaces.el.PropertyResolverImpl.getPropertyDescriptor(PropertyResolverImpl.java:445)
	at org.apache.myfaces.el.PropertyResolverImpl.getPropertyDescriptor(PropertyResolverImpl.java:416)
	at org.apache.myfaces.el.PropertyResolverImpl.getProperty(PropertyResolverImpl.java:379)
	at org.apache.myfaces.el.PropertyResolverImpl.getValue(PropertyResolverImpl.java:71)
	at org.apache.myfaces.el.ELParserHelper$MyPropertySuffix.evaluate(ELParserHelper.java:532)
        ....

[PROBLEM]
the problem seems to be that the PropertyResolverImpl doesnt resolve the id (or name when i comment out that id line) properties, because it thinks it is talking to a PersistentSet, instead of an ELEMENT from that PersistentSet. When I recompile using version 1.0.9 everything works perfectly.",MYFACES-733
"The _value property is not exposed for org.apache.myfaces.config.impl.digester.elements.ManagedProperty.  I would like to have access to this value for unit testing w/out a custom build.

Please put a getter in ManagedProperty.",MYFACES-732
"Problem is pretty much the same as described in bug MYFACES-624 except that I'm experiencing it with the selectManyListbox.  I first encountered this problem when switching to myfaces-1.1.0 from the version shipped with JBoss AS 4.0.3RC2.  Sorry, I don't know what version was in RC2, but the MD5 sums look like this:
41db995e4201acaec1599f8a933926dc  myfaces-api.jar
72cf887cb90f6ecfb7405d674de3a7cf  myfaces-impl.jar

I just tried again with the 20051019 nightly build and run into the same converter getAsString problem.

For more on my particular setup, see:
http://www.jboss.com/index.html?module=bb&op=viewtopic&t=70678
",MYFACES-731
"Did a test upgrade of a MyFaces 1.1.0 based app to 1.1.1 RC3.  The app is deployed in Tomcat 5.0.28.  

After the application is deployed and I use it for a little bit, I try to undeploy it.  The undeploy fails because the myfaces-all.jar file is still open after the application is stopped.  The only workaround is to stop Tomcat and restart it.

The 1.1.0 myfaces-all.jar file did not exhibit this behavior.

My experience is that this occurs if there is an open reference to a resource in the jar file.",MYFACES-730
"In LocaleUtils:

    public static Locale toLocale(String localeString)
    {
        if ((localeString == null) || (localeString.length() == 0))
        {
            log.error(""Locale name null or empty, ignoring"");
            return Locale.getDefault();
        }


ERROR message should be WARN instead.",MYFACES-728
"I noticed that your autoUpdateDataTable example does not work when there is a comment in the page.  When I remove the Apache license comment, it works just fine.  That ReducedHTMLParser must not be working correctly.  I get this error:

Oct 19, 2005 10:14:14 AM org.apache.myfaces.component.html.util.AddResource writeWithFullHeader
WARNING: Response has no <head> or <body> tag:

Remove the comment and it's fine and it outputs the prototype.js link.  I imagine it's from your changes from yesterday.  ",MYFACES-726
"Several occurrences of ""ist not allowed"" in ApplicationImpl.java",MYFACES-723
"This may be violating some spec, but I think it would be great to have deep-cloneable components.
They would allow the creation of a (limited) forEach component that can at least _duplicate_ children (even if they are not linked to the parent).
That way we might at least be able to create a table of jsf input elements. Of course, dynamically generating panel or table components would still not work.",MYFACES-722
"Data table state is reset when a validation error occurs but is neither in a child component nor in a previous sibling.


Testcase:
<%@ taglib uri=""http://java.sun.com/jsf/html"" prefix=""h""%>
<%@ taglib uri=""http://java.sun.com/jsf/core"" prefix=""f""%>
<%@ taglib uri=""http://myfaces.apache.org/tomahawk"" prefix=""t""%>
<f:view>
	<h:form>
		<t:div>First data table:</t:div>
		<t:dataTable id=""myTable1"" var=""tableRow1"" value=""#{list1}"">
			<h:column>
				<h:inputText id=""rowInput1"" value=""#{tableRow1}"" />
				<h:message for=""rowInput1"" errorStyle=""color:red""/>
			</h:column>
		</t:dataTable>
		<t:div>Single input field:</t:div>
		<h:outputLabel for=""inputLong"">Long value (preferably 2...):</h:outputLabel>
		<h:inputText id=""inputLong"" value=""3"">
			<f:validateLongRange minimum=""2"" maximum=""2"" />
		</h:inputText>
		<h:message for=""inputLong"" errorStyle=""color:red""/>
		<t:div>Second data table:</t:div>
		<t:dataTable id=""myTable2"" var=""tableRow2"" value=""#{list2}"">
			<h:column>
				<h:inputText id=""rowInput2"" value=""#{tableRow2}"" />
				<h:message for=""rowInput2"" errorStyle=""color:red""/>
			</h:column>
		</t:dataTable>
		<h:commandButton value=""submit"" />
	</h:form>
</f:view>

  <managed-bean>
    <managed-bean-name>list1</managed-bean-name>
    <managed-bean-class>java.util.ArrayList</managed-bean-class>
    <managed-bean-scope>application</managed-bean-scope>
    <list-entries>
      <value-class>java.lang.String</value-class>
      <value>Enter a String</value>
    </list-entries>
  </managed-bean>
  <managed-bean>
    <managed-bean-name>list2</managed-bean-name>
    <managed-bean-class>java.util.ArrayList</managed-bean-class>
    <managed-bean-scope>application</managed-bean-scope>
    <list-entries>
      <value-class>java.lang.String</value-class>
      <value>Enter a String</value>
    </list-entries>
  </managed-bean>

Enter something custom in first field
Enter ""7"" in second field as is (will cause a validation errror)
Enter something custom in third field
click submit button
The page is redisplayed because there is a validation error in second field
Second and third field have retained the entered values, but first field has been reset.
First field should have retained its entered value as well.
",MYFACES-721
"I found the main build.xml file comments confusing. It starts off saying
that all these properties must be set. But actually the build.xml is
extremely nicely set up with defaults, auto-downloading libs, etc., and
*no* custom properties need to be defined to build myfaces.

So attached is a patch to the main build.xml file to clarify this.
I've also compressed the list of required libs somewhat; I don't see the
benefit of the comment for each jar:
     foo.jar  Provide the full path to the JAR file for foo.",MYFACES-720
"Tthe API subproject's build.properties has:
  temp.dir             = ${basedir}/temp
  test.reports.dir     = ${temp.dir}/tests/reports
but the tomahawk subproject's build.properties has:
  tests.dir            = ${build.dir}/tests
  test.reports.dir     = ${tests.dir}/reports

This causes API reports in
  build/temp/tests/reports
but tomahawk reports in
  build/tests/reports ",MYFACES-719
"It seems that the redirect method in org.apache.myfaces.context.servlet.ServletExternalContextImpl does not call responseComplete() as it should. The official API documentation states:

Redirect a request to the specified URL, and cause the responseComplete() method to be called on the FacesContext instance for the current request.
See: http://java.sun.com/j2ee/javaserverfaces/1.1/docs/api/javax/faces/context/ExternalContext.html#redirect(java.lang.String)

When I look at the redirect method in the current trunk it does not call responseComplete()

http://svn.apache.org/repos/asf/myfaces/impl/trunk/src/java/org/apache/myfaces/context/servlet/ServletExternalContextImpl.java

The same goes for the Portlet version of the ExternalContext implementation.

I did a quick search and found the same issue reported in the user list two and a half months ago by Richard Wallace (http://www.mail-archive.com/users@myfaces.apache.org/msg06486.html). It does not seem to be reported in JIRA, so I added it here.",MYFACES-718
"I get the following exception when submitting values for a UISelectMany:
java.lang.ArrayStoreException: businesssaver.segment.Segment
	at org.apache.myfaces.renderkit._SharedRendererUtils.getConvertedUISelectManyValue(_SharedRendererUtils.java:148)
	at org.apache.myfaces.renderkit.RendererUtils.getConvertedUISelectManyValue(RendererUtils.java:680)
	at org.apache.myfaces.renderkit.html.HtmlListboxRendererBase.getConvertedValue(HtmlListboxRendererBase.java:127)
	at javax.faces.component.UISelectMany.getConvertedValue(UISelectMany.java:344)
	at javax.faces.component.UIInput.validate(UIInput.java:265)
	at javax.faces.component.UISelectMany.validate(UISelectMany.java:333)
After further inspection, the following two lines seem to be the culprit. 
Line 144:
            Object [] convertedValues = (Object []) Array.newInstance(
                    arrayComponentType==null?Object[].class:arrayComponentType,len);
They result in the creation of an array of arrays of objects - Object[][], resulting in an incorrect assignment 
of an object where an array of objects is expected:
Line 148:
                convertedValues[i]
                    = converter.getAsObject(facesContext, component, submittedValue[i]);


I apologise for not sending a patch, but unfortunately our co's firewall does not allow me checkout from CVS",MYFACES-715
"I have a converter for a specific type of object.  This works fine with a selectOne component, but it does not with a selectMany component.

Right now it seems that UISelectMany.getConvertedValue(FacesContext context, Object submittedValue) expects submittedValue to be a single value but it recieves an array or list.",MYFACES-714
"i am facing a problem with tree population using MyFaces Component .actually in MyFaces Comp. AddResource.java class generates a dynamic resource path in my exp it's generated but at the time of display js method and images didn't picked up.
i have map the org.apache.myfaces src also

for exa. my generated path is :-
/framework/faces/myFacesExtensionResource/tree2.HtmlTreeRenderer/11295320/images/line-middle.gif

actual Myfaces's Path is :

/simple/faces/myFacesExtensionResource/tree2.HtmlTreeRenderer/11295320/images/line-middle.gif

so pls any buddy could help me ? what else i have to do
thanx
email:-kocher_sc@yahoo.co.in",MYFACES-709
"Currently, org.apache.myfaces.renderkit.html.HtmlTableRenderer calls ""component.getChildren"" directly from a number of methods.

I would like to see a new method ""getChildren(UIComponent component)"" defined whose default behaviour is just to return ""component.getChildren"", and calls to component.getChildren changed to call this new method.

This would allow me to override this new getChildren method in a subclass in order to be able to control the order in which child components are rendered by this component. In particular, I'm trying to extend the table renderer to allow user-customisable column ordering. Currently I have to implement this by having my custom renderer sort the elements in the child list of the component directly which isn't elegant and (I'm afraid) may not beportable or robust across releases of the library. Well it's that or duplicate every method that makes this call (which is most of them).

Perhaps this new method could even be defined in class org.apache.myfaces.renderkit.html so it's available for all renderers? 
Probably method getChildCount(Component) would need to be defined at the same time, just in case someone wants to write a renderer that actually hides some child components from a parent renderer.",MYFACES-707
"The component elements look like the following:

  <component>
    <component-type>org.apache.myfaces.HtmlCommandButton</component-type>
    <component-class>org.apache.myfaces.component.html.ext.HtmlCommandButton</component-class>
  </component>

In the RI, they are much more flushed out and include property elements like:

      <property>
        <description>
          MethodBinding representing the application action to invoke when
          this component is activated by the user.  The expression must
          evaluate to a public method that takes no parameters, and returns
          a String (the logical outcome) which is passed to the
          NavigationHandler for this application.
        </description>
        <display-name>Application Action</display-name>
        <icon></icon>
        <property-name>action</property-name>
        <property-class>javax.faces.el.MethodBinding</property-class>
      </property>

Note the property-class of javax.faces.el.MethodBinding. This allows tools to know what properties are method bindings. This allows more VB like interactions with the components. For example, in jdeveloper if you dbl-click a button it will automatically bind the action component to a method for you.",MYFACES-706
"Prior to 1.1.0 it was necessary to specify a custom context listener in the web.xml file to enable JSF.
Since 1.10 this has been defined automatically.

However class ""javax/faces/FactoryFinder.java"" still outputs this message whenever anything goes wrong with MyFaces initialisation:
  No Factories configured for this Application - typically this is because a context listener is not setup in your web.xml.
  A typical config looks like this;
  <listener>
    <listener-class>org.apache.myfaces.webapp.StartupServletContextListener</listener-class>
  </listener>

I think this message is now misleading; no such entry is needed in the web.xml file.
",MYFACES-704
"I've put the latest tomahawk.jar file in my web applications WEB-INF/lib directory and added the reference to the head of my JSP:

<%@ taglib uri=""http://myfaces.apache.org/tomahawk"" prefix=""t""%>

No matter what Tomahawk input tag I try, I always get an exception of the form:

Exception: Renderer of type ""org.apache.myfaces.Date"" is not supported for family javax.faces.Input

I've tried invalid tags like <t:flub/> to verify that it is parsing the taglib properly. I get the expected ""tag not defined"" type of error for this.
",MYFACES-703
"We have a JSF app that runs as a portlet and normal webapp.

In the webapp the <h:outputText value=""some text""/> appears as I would expect (i.e. just the text) however the same thing in the portlet gets rendered as:

<span id=""form-id:handleMetaDataEvent_id36"">some text</span>

This becomes a problem when you are trying to use outputText to render part of a URL or to become a JavaScript string as the output includes the span element!

Looking at the renderer code for outputText it appears the span gets generated when the id does not start with ""_id"", so the question is where has the ""handleMetaDataEvent"" prefix for the id come from?",MYFACES-702
"0     ERROR [http8080-Processor23] renderkit.RendererUtils - Property not found - called by component : {Component-Path : [Class: javax.faces.component.UIViewRoot,ViewId: /dealeradmin/dealer_message.jsp][Class: org.apache.myfaces.custom.div.Div,Id: pagebody][Class: javax.faces.component.html.HtmlPanelGrid,Id: _id44][Class: javax.faces.component.html.HtmlPanelGroup,Id: _id45][Class: javax.faces.component.html.HtmlForm,Id: unitItemViewList][Class: org.apache.myfaces.component.html.ext.HtmlDataTable,Id: _id47][Class: javax.faces.component.UIColumn,Id: _id56][Class: javax.faces.component.html.HtmlOutputText,Id: _id58]}

It works on 1.0.9, if my page have a selectOneMenu  in panelGroup, when it navigate to other page, it will raised above error, I change navigation rules to redirect, all works fine. 

I don't know what's going on inside myfaces team. but I feel after version 1.0.9, it baddly demaged myfaces. Just because I have products using myfaces, I have to use it. My few friends give up away from myfaces already. 

Guys, what's going on????


",MYFACES-699
"I have a list used in a datatable

<t:dataTable value=""#{playlistFactory.currentUnitMPOSPlayList}""  var=""playlistItem"">
....
 					<h:column>			
						<f:facet name=""header"">				 
							<h:outputText value=""#{messages['dealer_admin_length']}""/>	
						</f:facet>			
						<h:outputText value=""#{playlistItem.length}""/>
						<f:facet name=""footer"">
							<h:outputText value=""#{playlistFactory.totalLength}""/>	
						</f:facet>			
 					</h:column>			
....
</t:dataTable>

playlistFactory.totalLength called before playlistFactory.currentUnitMPOSPlayList called. So I got totalLength always 0, playlistFactory.totalLengtht should be called after playlistFactory.currentUnitMPOSPlayList 
",MYFACES-694
"html select input elements are displayed in front of the tomahawk popup component  in IE. The problem is not present in Firefox.

As I was searching the MyFaces mailing list  for a solution to the problem I found a similar issue discussed in the following link:

>http://www.mail-archive.com/users@myfaces.apache.org/msg05344.html

In the excerpt below from the discussion, the problem was fixed for the suggest component currently being developed by Werner Punz in the Sandbox:
""Incidentally, I'm looking into modifying the DHTML piece so that you can avoid the IE bug where a select box is always rendered on top of a div. It turns out that if you create an invisible iframe as a shim of sorts, directly underneath the div, select boxes will properly render underneath it. Of course, this fix is only necessary if you're using the control near a select box, and if you care whether your form renders properly in IE, so it'll be optional.) 
Well solved that a few days ago as well :-), thanks to some articles on the net.""

I am hoping that the fix used for the suggest componenet in the sandbox can be reused to address this issue. I downloaded the latest release candidate RC2 verified that the problem is still present in both the release 1.1.0 and 1.1.1.

Thanks in advance for you help.
Marcel",MYFACES-693
"this code return null
                if (base instanceof Object[] && ((Object[])base)[index] != null) {
                    Object[] array = (Object[]) base;
                    return array[index].getClass().getComponentType();
                } else {
.....

this change fix this error

Index: /current/impl/src/java/org/apache/myfaces/el/PropertyResolverImpl.java
===================================================================
--- /current/impl/src/java/org/apache/myfaces/el/PropertyResolverImpl.java	(revision 312842)
+++ /current/impl/src/java/org/apache/myfaces/el/PropertyResolverImpl.java	(working copy)
@@ -308,7 +308,7 @@
             {
                 if (base instanceof Object[] && ((Object[])base)[index] != null) {
                     Object[] array = (Object[]) base;
-                    return array[index].getClass().getComponentType();
+                    return array[index].getClass();
                 } else {
                     return base.getClass().getComponentType();
                 }
",MYFACES-689
"When I create a HtmlSelectBooleanCheckbox and set displayValueOnly to true, an exception is raised during the rendering phase. During encodeEnd() HtmlRendererUtils.renderDisplayValueOnlyForSelects() is called.

The following snippet causes the problems:
        
if (uiComponent instanceof UISelectMany) {
  isSelectOne = false;
  selectItemList = RendererUtils.getSelectItemList((UISelectMany) uiComponent);
  converter = findUISelectManyConverterFailsafe(facesContext, uiComponent);
} else {
  isSelectOne = true;
  selectItemList = RendererUtils.getSelectItemList((UISelectOne) uiComponent);
  converter = findUIOutputConverterFailSafe(facesContext, uiComponent);
}

Since the HtmlSelectBooleanCheckbox is derived neither from UISelectMany nor from UISelectOne but from UISelectBoolean, the cast to UISelectOne fails.",MYFACES-688
"Hi,

why is the general exception at the end of isReadOnly a reason to return false?

Because of some other problems with an alias bean with a read only value binding (which I am still investigating), the holder bean is already set to null, but LifecycleImpl.recursivelyHandleComponentReferencesAndSetValid() calls isReadOnly() before it tries to set the value binding, which results in a fine NullPointerException if isReadOnly() returns false. There is a comment next to the return statement: ""Cannot determine read-only, return false (is this what the spec requires?)""  whch I would like to bring back into discussion ;-) 

Stefan  ",MYFACES-686
"I've run into an issue with version 1.1.0 when trying to implement a x:selectOneRadio tag within the h:dataTable tag where only one row from the data table can have the radio button selected.  In version 1.0.9, I used the forceId and forceIdIndex attributes in the x:selectOneRadio tag to force the id of each x:selectOneRadio to be the same.  Each row in the h:dataTable will have x:selectOneRadio with only one SelectItem in it, but since the id's are the same, the browser handles it correctly.

However, with version 1.1.0 in the validateValue(FacesContext, Object) method of the javax.faces.component.UISelectOne class, there is a call to _SelectItemsUtil.matchValue(FacesContext, Object, Iterator, _ValueConverter) which checks to see if the selected value of the x:selectOneRadio exists in the list of SelectItems.  Since each row in the data table has a x:selectOneRadio with only one SelectItem, this check will only return true for the row where the radio button is selected.  All other rows cause this check to fail and add a 'Value is not a valid option' error to the context messages list, which prevents the page from performing any other actions.

Here is an example of how I am using the x:selectOneRadio:

<h:dataTable
	cellspacing=""0""
	style=""padding-top: 0px; padding-bottom: 0px;""
	styleClass=""form-sub-table""
	value=""#{backingBean.personList}"" 
	var=""person"">
	
	<h:column>
		<h:outputText value=""#{person.firstName} #{person.lastName}"" escape=""false"" />
	</h:column>

	<h:column>
		<x:selectOneRadio id=""preside"" 
			forceId=""true"" 
			forceIdIndex=""0"" 
			value=""#{backingBean.presidePersonId}"" 
			valueChangeListener=""#{backingBean.presideOverride}""
			style=""margin: 0px; border: 0px;""
			border=""0"">
											
			<f:selectItem itemValue=""#{person.personId}"" itemLabel="""" />
		</x:selectOneRadio>
	</h:column>
</h:dataTable>

It's not completely clear to me why the existence of the x:selectOneRadio value in it's child SelectItems needs to be enforced so strictly.  I propose that this check be either optional or eliminated all toghether.

Thanks,

Jason Allen",MYFACES-680
"When the tag: <x:message> or <t:message> is invoked, exception thrown as followed:

javax.faces.FacesException: Undefined component type org.apache.myfaces.HtmlMessage
        at org.apache.myfaces.application.ApplicationImpl.createComponent(ApplicationImpl.java:390)
        at javax.faces.webapp.UIComponentTag.createComponentInstance(UIComponentTag.java:448)
        at javax.faces.webapp.UIComponentTag.findComponent(UIComponentTag.java:391)
        at javax.faces.webapp.UIComponentTag.doStartTag(UIComponentTag.java:219)
        at org.apache.jsp.customers_jsp._jspx_meth_x_message_0(org.apache.jsp.customers_jsp:525)
        :

It may come from the class: org.apache.myfaces.taglib.html.ext.HtmlMessageTag.getRendererType().
The returned type is ""org.apache.myfaces.Message"".

The workaround is to use <h:message> instead of <x:message> or <t:message>",MYFACES-678
"While attempting to match the selected SelectItem for an HtmlSelectOneMenu, the matchValue method of SelectItemsUtil calls the getConvertedValue method before checking to see if the SelectItem is really a SelectItemGroup.  This causes conversion errors.  If the SelectItem.getValue() is null (I think that it was before MyFaces1.1) then it would not call the getConvertedValue.  But now you get one ConversionException for every SelectItemGroup that has to be checked before the matching SelectItem is found.

Here is the method stack:
_SelectItemsUtil.matchValue(FacesContext, Object, Iterator, _SelectItemsUtil$_ValueConverter) line: 46
HtmlSelectOneMenu(UISelectOne).validateValue(FacesContext, Object) line: 52
HtmlSelectOneMenu(UIInput).validate(FacesContext) line: 269
HtmlSelectOneMenu(UIInput).processValidators(FacesContext) line: 144

Here is the method in MyFaces 1.1:
    /**
     * @param context the faces context
     * @param value the value to check
     * @param converter 
     * @param iterator contains instances of SelectItem
     * @return if the value of a selectitem is equal to the given value
     */
    public static boolean matchValue(FacesContext context, Object value,
                    Iterator selectItemsIter, _ValueConverter converter)
    {
        while (selectItemsIter.hasNext())
        {
            SelectItem item = (SelectItem) selectItemsIter.next();
            Object itemValue = item.getValue();
            if(converter != null && itemValue instanceof String)
            {
                itemValue = converter.getConvertedValue(context, (String)itemValue);
            }
            if (value.equals(itemValue))
            {
                return true;
            }
            if (item instanceof SelectItemGroup)
            {
                SelectItemGroup itemgroup = (SelectItemGroup) item;
                SelectItem[] selectItems = itemgroup.getSelectItems();
                if (selectItems != null
                                && selectItems.length > 0
                                && matchValue(context, value, Arrays.asList(
                                                selectItems).iterator(), converter))
                {
                    return true;
                }
            }
        }
        return false;
    }

Thanks,
Tom",MYFACES-677
"When rendering the dataScroller component that displays the info about the number of pages, the current page, ...
after the span tag that includes this information there in an ""empty"" table:

<span class=""standard"">994 Cars found, displaying 10 cars, from 1 to 10. Page 1 / 100</span><table><tr></tr></table>

If you want to obtain this behaviour, just look at the DataScroller example in the standard myfaces examples.

This ""empty"" table ""compromises"" the layout of the pages...",MYFACES-675
"Currently (correct me if wrong) the list of 'common' getter and setter prefixes is
get (getProperty)
is (isBig)
set (setProperty)

One particular prefix I find more common every day is 'has' for boolean getters (hasArms rather than isArmed or isWithArms or isHasArms).

So maybe there should be a referendum on what is commonly perceived as 'common' prefixes and those added as possibilities. Of course, if the method gets too long we need to be careful with how EL can handle it, since there could be a great difference between 'isMobile' and 'hasMobile' and EL cannot distinguish the 2... (can it?)",MYFACES-674
"The facilities offered by MyFaces' extensions filter, such as serving resources, could be very useful to authors of other custom components. It currently restricts itself (for security reasons) to classes under the org.apache.myfaces.custom package, but this could be parameterised, for instance adding a list of other ""authorised"" packages as init-params in the web.xml file.",MYFACES-673
"RC2 appears to have been compiled for JDK 1.5.  Deploying the sample applications in Tomcat 5.0 with JDK 1.4.2_09 results in 'UnsupportedClassVersionError' in the localhost log.

2005-10-05 19:54:49 StandardContext[/myfaces-tiles]Error configuring application listener of class org.apache.myfaces.webapp.StartupServletContextListener
java.lang.UnsupportedClassVersionError: org/apache/myfaces/webapp/StartupServletContextListener (Unsupported major.minor version 49.0)
	at java.lang.ClassLoader.defineClass0(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:539)

",MYFACES-672
"If you have an colapsible pannel in page when you click to open the panel the form is submited and validators triger.
Please tell where you think is the problem.

cristi
",MYFACES-671
"A couple of suggested improvements for the patch:

    - Perform the encoding check once, in the constructor, and save a boolean instance variable, to save lots of unnecessary String.equals() calls.

    - Support all of the Unicode encodings, which as of 1.4.2 were:
    UTF-8
    UTF-16
    UTF-16BE
    UTF-16LE

",MYFACES-670
"I got the validation error today by trying to do the 'smart thing'. Basically i have the list of objects and display as the combo box. What i do before work very fine because all thing is string. This time i try to populate directly my objects to the combo box by specify the converter. The result is OK, i got what i want but when i submit the form i got the Validation error. The code simple like this:

<h:selectOneMenu id=""S1"" value = ""#{csCardRequestHandler.suffixesModel[0].selectedValue}""
			disabled=""#{csCardRequestHandler.suffixesModel[0].disableSelect}"">
			<f:selectItems value=""#{csCardRequestHandler.suffixesModel[0].availableItems}""/>
			<f:converter converterId=""com.ps.cardservices.SuffixFieldConverter""/>
			<!--f:validator validatorId=""com.ps.cardservices.NullValidator""/-->
		</h:selectOneMenu>

Then i thought because of my custom converter so i try to specify the NullValidator just do nothing, still it keeps saying 'ValidatorError'

One more thing i love to report, on my converter method:
public String getAsString(FacesContext context, UIComponent component, Object object) throws ConverterException;
While some tim i get the object as java.lang.String instead of my object type?

Regards,
hovan.",MYFACES-669
"Not sure if this is a bug but shouldn't a required field throw a
validation error if nothing (empty string) is posted?  My
understanding was that JSF will skip conversion and consider the value
missing.  I'm seeing a conversion attempt (which I didn't expect) and
then no validation error is   thrown.

I know there are some subtleties with null vs. empty but I thought I
understood things correctly.  Is it possible that the tomahawk version
is not behaving in the same way as the core version?",MYFACES-667
"the method getActionURL in the JspViewHandlerImpl should also append existing query string to the returned url.
If the view relies on certain parameters to be set (e.g. viewPage.jsf?pageId=5) and does not render the same response, then any form submit is ignored (submit button is not found, so its action method is not invoked).",MYFACES-666
"This problem seems to be related to http://issues.apache.org/jira/browse/MYFACES-630

This also happens in the StartupServletContextListener.

This problem occurs when BOTH jars are placed in the webapp classpath ONLY. (myfaces-api is NOT in the container classpath)
The only working configuration seems to be
myfaces-api in container classpath.
myfaces-impl in webapp classpath.

I previously posted this as an error in the wiki (#631), which of course shouldn't be posted here as was pointed out to me, but it seems to be an implementation problem(?)

Alternatively I could suggest that this is a problem with Spring. The spring jar happens to be in the container classpath, but I am using spring's DelegatingVariableResolver in the application.
So the issue could result from Spring (in container) to load faces (in webapp) ?? I do not know.

Trace from resin 3.0.14:

[09:29:29.453] Loading Spring root WebApplicationContext
[09:29:36.171] java.lang.NoClassDefFoundError: javax/faces/el/VariableResolver
[09:29:36.171]  at java.lang.ClassLoader.defineClass1(Native Method)
[09:29:36.171]  at java.lang.ClassLoader.defineClass(ClassLoader.java:620)
[09:29:36.171]  at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:124)
[09:29:36.171]  at java.net.URLClassLoader.defineClass(URLClassLoader.java:260)
[09:29:36.171]  at java.net.URLClassLoader.access$100(URLClassLoader.java:56)
[09:29:36.171]  at java.net.URLClassLoader$1.run(URLClassLoader.java:195)
[09:29:36.171]  at java.security.AccessController.doPrivileged(Native Method)
[09:29:36.171]  at java.net.URLClassLoader.findClass(URLClassLoader.java:188)
[09:29:36.171]  at java.lang.ClassLoader.loadClass(ClassLoader.java:306)
[09:29:36.171]  at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:268)
[09:29:36.171]  at java.lang.ClassLoader.loadClass(ClassLoader.java:251)
[09:29:36.171]  at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:319)
[09:29:36.171]  at java.lang.Class.forName0(Native Method)
[09:29:36.171]  at java.lang.Class.forName(Class.java:242)
[09:29:36.171]  at com.caucho.loader.DynamicClassLoader.loadClass(DynamicClassLoader.java:1014)
[09:29:36.171]  at java.lang.ClassLoader.loadClass(ClassLoader.java:251)
[09:29:36.171]  at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:319)
[09:29:36.171]  at java.lang.Class.forName0(Native Method)
[09:29:36.171]  at java.lang.Class.forName(Class.java:242)
[09:29:36.171]  at com.caucho.loader.DynamicClassLoader.loadClass(DynamicClassLoader.java:1014)
[09:29:36.171]  at java.lang.ClassLoader.loadClass(ClassLoader.java:251)
[09:29:36.171]  at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:319)
[09:29:36.171]  at java.lang.Class.forName0(Native Method)
[09:29:36.171]  at java.lang.Class.forName(Class.java:242)
[09:29:36.171]  at com.caucho.loader.DynamicClassLoader.loadClass(DynamicClassLoader.java:1014)
[09:29:36.171]  at java.lang.ClassLoader.loadClass(ClassLoader.java:251)
[09:29:36.171]  at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:319)
[09:29:36.171]  at java.lang.Class.forName0(Native Method)
[09:29:36.171]  at java.lang.Class.forName(Class.java:242)

[09:29:36.171]  at org.apache.myfaces.util.ClassUtils.classForName(ClassUtils.java:131)
[09:29:36.171]  at org.apache.myfaces.util.ClassUtils.simpleClassForName(ClassUtils.java:157)
[09:29:36.171]  at org.apache.myfaces.config.FacesConfigurator.getApplicationObject(FacesConfigurator.java:506)
[09:29:36.171]  at org.apache.myfaces.config.FacesConfigurator.configureApplication(FacesConfigurator.java:446)
[09:29:36.171]  at org.apache.myfaces.config.FacesConfigurator.configure(FacesConfigurator.java:130)
[09:29:36.171]  at org.apache.myfaces.webapp.StartupServletContextListener.initFaces(StartupServletContextListener.java:63)
[09:29:36.171]  at org.apache.myfaces.webapp.StartupServletContextListener.contextInitialized(StartupServletContextListener.java:46)

[09:29:36.171]  at com.caucho.server.webapp.Application.start(Application.java:1539)
[09:29:36.171]  at com.caucho.server.deploy.DeployController.startImpl(DeployController.java:563)
[09:29:36.171]  at com.caucho.server.deploy.StartAutoRedeployAutoStrategy.startOnInit(StartAutoRedeployAutoStrategy.java:72)
[09:29:36.171]  at com.caucho.server.deploy.DeployController.startOnInit(DeployController.java:451)
[09:29:36.171]  at com.caucho.server.deploy.DeployContainer.start(DeployContainer.java:157)
[09:29:36.171]  at com.caucho.server.webapp.ApplicationContainer.start(ApplicationContainer.java:610)
[09:29:36.171]  at com.caucho.server.host.Host.start(Host.java:385)
[09:29:36.171]  at com.caucho.server.deploy.DeployController.startImpl(DeployController.java:563)
[09:29:36.171]  at com.caucho.server.deploy.StartAutoRedeployAutoStrategy.startOnInit(StartAutoRedeployAutoStrategy.java:72)
[09:29:36.171]  at com.caucho.server.deploy.DeployController.startOnInit(DeployController.java:451)
[09:29:36.171]  at com.caucho.server.deploy.DeployContainer.start(DeployContainer.java:157)
[09:29:36.171]  at com.caucho.server.host.HostContainer.start(HostContainer.java:468)
[09:29:36.171]  at com.caucho.server.resin.ServletServer.start(ServletServer.java:934)
[09:29:36.171]  at com.caucho.server.deploy.DeployController.startImpl(DeployController.java:563)
[09:29:36.171]  at com.caucho.server.deploy.AbstractDeployControllerStrategy.start(AbstractDeployControllerStrategy.java:56)
[09:29:36.171]  at com.caucho.server.deploy.DeployController.start(DeployController.java:459)
[09:29:36.171]  at com.caucho.server.resin.ResinServer.start(ResinServer.java:465)
[09:29:36.171]  at com.caucho.server.resin.Resin.init(Resin.java)
[09:29:36.171]  at com.caucho.server.resin.Resin.main(Resin.java:612)",MYFACES-665
"As requested in http://issues.apache.org/jira/browse/MYFACES-622, here are some cactus tests for the rendering of HtmlSelectManyCheckbox.

I am new to Cactus test writing, so feel free to correct anything or suggest a different way of acheiving the assertions.",MYFACES-664
"Myfaces-all.jar contains two copies of all /share resources.

It picks up one copy from impl and one copy from tomahawk.
",MYFACES-663
"When I create a HtmlSelectBooleanCheckbox and set displayValueOnly to true, an exception is raised during the rendering phase. During encodeEnd() HtmlRendererUtils.renderDisplayValueOnlyForSelects() is called.

The following snippet causes the problems:
        
if (uiComponent instanceof UISelectMany) {
  isSelectOne = false;
  selectItemList = RendererUtils.getSelectItemList((UISelectMany) uiComponent);
  converter = findUISelectManyConverterFailsafe(facesContext, uiComponent);
} else {
  isSelectOne = true;
  selectItemList = RendererUtils.getSelectItemList((UISelectOne) uiComponent);
  converter = findUIOutputConverterFailSafe(facesContext, uiComponent);
}

Since the HtmlSelectBooleanCheckbox is derived neither from UISelectMany nor from UISelectOne but from UISelectBoolean, the cast to UISelectOne fails.",MYFACES-662
"Hi,

After pulling my hair out (and getting a transplant :) I think there is a refined spec vs. current implementation clash [1]. I have looked into this and come up with a possible solution [2].  After having also discussed MYFACES-549 with Brian Chan from Liferay [3] I think you can hit two birds with one stone with the provided patch and get Liferay & BEA platform support for free ;-)).

Cheers,
Tanju


1. Details
--------------
There has been a refinement to the JSR 168 Spec PLT.11.1.3 recently which now clearly indicates that it cannot be assumed that attributes from an ActionRequest will be available in a RenderRequest (see http://jcp.org/aboutJava/communityprocess/maintenance/jsr168/Portlet1.0-ERRATA.html#issue10). On the other hand, it is a legitimate need for JSF to carry over results (e.g. Request scoped managed beans) from the lifecycle execution part (ActionRequest) over to the render part (RenderRequest).
AFAIK, there is no special treatment of this case, which means JSF just populates and fetches from the attribute map assuming a standard servlet request behavior.

Instead of interfering with this already for servlet mode working behavior I have come up with a special Request Map treatment approach. However, I'm not sure which of the following processing model the design of the portlet integration follows and would be glad if some light could be shed on this:

1. Portlet X receives an ActionRequest and later a RenderRequest this two Requests make up the entire faces lifecycle. Portlet Y from the same PortletContext just receives an ordinary RenderRequest without knowing of any previous ActionRequests

2. Same as above but Portlet Y is ""aware"" of the ActionRequest e.g. somehow Interportlet communication shall be achieved in the future


2. Solution
-----------------
After rolling the dice, I have decided to go with the first approach. The idea is to use a separate map stored in the PortletSession to mimic a request map which spans  over two requests (Action & RenderRequest). This map is removed from the PortletSession after the render cycle is concluded.

I have tested this approach with two simple portlets each containing 3 jsp pages embedding a t:saveState binding to the same managed request scoped bean.  I could verify on pluto as well as Liferay that this bean was created only once and its value is preserved despite changing pages in the same portlet.  (I merely used saveState  as a lazy way to check for request leaking -> it will not work for multiple portlet with the intention to have several ""conversations"" in parallel).

However, what puzzles me right now is that without the patch the ""standard"" behavior on pluto is that the bean is created everytime. This indicates that the ActionRequest attribute map is not inherited to the RenderRequest (is ok according to PLT.11.1.3) which would actually mean that request scoped beans haven' worked up to now which I cannot believe. So this is speculative as I have not verified this yet.


3. Liferay et al.
--------------------
MYFACES-549 is somewhat different to the case above because it revolves around the problem that the attribute map from one RenderRequests is visible to another RenderRequests (also governed by PLT.11.1.3)

I have had a very brief discussion with Brian Chan from Liferay (see http://support.liferay.com/browse/LEP-287) and apparently it's not only them who interpret PLT.11.1.3 differently but also BEA. They don't see it as a ""must"" to confine the attribute maps to the respective request but rather inherit it accross subsequent requests. I have asked Brian to take this issue to the 168 EG and get another errata out whether strict isolation is required or inheritance permitted.
I think for myfaces to run on Liferay & presumably BEA in the forseable future :) it is important to clean up the attribute map of the RenderRequest one way or the other so that it is not seen by the subsequent RenderRequest of a different portlet.

-> This is implemented in the patch as well :-)

",MYFACES-660
"Most of the component rendering implementations make use only of the encodeEnd method.

If this is the case, why do encodeBegin and encodeChildren exist in the first place?

I believe that encodeBegin should be used to validate parameters and children prerequisites, prepare the component for rendering (e.g computing a model or something), and rendering the start tag(s), encodeChildren should take care of any child components (i.e. the actual body) and encodeEnd should finish off by closing the tags opened in encodeBegin.

Yes, this will create an overhead for sharing data between the methods, but it would make the operations clearer (intutitive method names?)",MYFACES-659
"I have written a ForEach component that is aimed to mirror jstl forEach capabilities. It works for pretty much all nested components, but specifically not for any SelectOne, SelectMany, ...

There are (as far as I can tell) 2 major reasons for this:

1. The renderer (HtmlMenuRendererBase) renders the menu only in its encodeEnd, and it means that any attempt to encode children (forEach) is foiled as the call is never delegated. Really, the menu should be encoded in the encodeChildren method (if only for consistency).

2. and this one is linked to the above: The menu is rendered outside of the normal cycle. By this I mean that the menu renders itself and any children. Ideally, the menu would render only the <select></select> frame (encodeBegin and encodeEnd) and leave the selectItem creation to a separate renderer. This would allow me (in this case) to let my forEach renderer take care of child creation.

Existing code can be easily reused as HtmlRendererUtils.internalRenderSelect renders SelectItemS perfectly without the need for the containing menu to be visible (except maybe for ID creation)

Unfortunately I do not know what impact this kind of change may have on the rest of the lifecycle, but my guess is 'none', since only the encoding will differ and the ForEach component (or similar flow control) would not render visibly and does not have an ID.",MYFACES-658
"There have been several reports of getting a blank page after people swithing to the 1.1.1RC

The most detailed report comes from Wendy Smoak from the Struts and Struts Shale project:

There are two reports on the user list that 1.1.1 is causing a previously
working app to just display a blank page.  (Though they're talking about myfaces-all.jar, and I'm having trouble with the api & impl pair.)

All of the example webapps display blank pages on Tomcat 5.0.30 and JDK 1.4.2_09.

If it helps at all, I've posted the debug logs from the Shale Use Cases app
with 1.1.1 as well as the 20051002 nightly build (which uses the RI):
  http://wiki.wsmoak.net/cgi-bin/wiki.pl?ShaleUseCases
",MYFACES-657
"Simple form with
<t:inputText id=""rdate"" value=""#{currencyrate.rdate}"" readonly=""true"" styleClass=""input"" size=""10"" >
    <f:convertDateTime pattern=""#{bundle['formats.date.ddmmyyyy']}""/>
</t:inputText>

rdate is type of Date and constructed with new Date(). Regardles of f:convertDateTime used the value in input field is always one day back if time part of date is 00:00:00. IMHO this is problem with TZ as my TZ is GMT+5. I can't suppose when the problems occured as I switched from one of the 200509 builds to the lates nightly (20051001)",MYFACES-656
"The JSF description of for the ExternalContext.getRequestMap() method says:

""""""Return a mutable Map representing the request scope attributes for the current application. The returned Map  must implement the entire contract for a modifiable map as described in the JavaDocs for java.util.Map. Modifications made in the Map must cause the corresponding changes in the set of request scope attributes.""""""

yet MyFaces returns a RequestMap class which throws UnsupportedOperationException for both the putAll() and the clear() methods.

This is a major bug which will break apps (like mine) that depend on being able to add params via putAll(), for example.
",MYFACES-655
"There are still differences in the possible attributes between myFaces and the RI.

myFaces attributes not in the RI:

  commandButton
    size

  commandLink
    onclick

  dataTable
    align
    datafld
    dataformatas
    datasrc

  form
    name

  inputSecret
    align

  inputText
    align

  inputTextarea
    datafld
    dataformatas
    datasrc

  message
    dir
    lang
    onclick
    ondblclick
    onkeydown
    onkeypress
    onkeyup
    onmousedown
    onmousemove
    onmouseout
    onmouseover
    onmouseup

  messages
    dir
    lang
    onclick
    ondblclick
    onkeydown
    onkeypress
    onkeyup
    onmousedown
    onmousemove
    onmouseout
    onmouseover
    onmouseup

  outputFormat
    dir
    lang
    onclick
    ondblclick
    onkeydown
    onkeypress
    onkeyup
    onmousedown
    onmousemove
    onmouseout
    onmouseover
    onmouseup

  outputText
    dir
    lang
    onclick
    ondblclick
    onkeydown
    onkeypress
    onkeyup
    onmousedown
    onmousemove
    onmouseout
    onmouseover
    onmouseup

  panelGrid
    align
    datafld
    dataformatas
    datasrc

  panelGroup
    dir
    lang
    onclick
    ondblclick
    onkeydown
    onkeypress
    onkeyup
    onmousedown
    onmousemove
    onmouseout
    onmouseover
    onmouseup
    title

  selectBooleanCheckbox
    alt
    datafld
    dataformatas
    datasrc

  selectManyCheckbox
    alt
    datafld
    dataformatas
    datasrc

  selectManyListbox
    datafld
    dataformatas
    datasrc

  selectManyMenu
    datafld
    dataformatas
    datasrc

  selectOneListbox
    datafld
    dataformatas
    datasrc

  selectOneMenu
    datafld
    dataformatas
    datasrc

  selectOneRadio
    alt
    datafld
    dataformatas
    datasrc

--------------------------------------------------------------

Attributes missing in myFaces:

  commandButton
    readonly

  outputLabel
    tabindex

  selectManyCheckbox
    border

  selectManyListbox
    accesskey
    onselect

  selectManyMenu
    accesskey
    onselect

  selectOneListbox
    accesskey
    onselect

  selectOneMenu
    accesskey
    onselect

--------------------------------------------------------------

Case difference:

  form
    acceptCharset <-> acceptcharset
",MYFACES-654
"The constant, AUTOCOMPLETE_ATTR, in  src/share/ org.apache.myfaces.renderkit.html.HTML.java is private (line 253):
    private static final String AUTOCOMPLETE_ATTR = ""autocomplete"";
",MYFACES-653
"MyFaces could be improved by checking the code using findbugs (findbugs.sourceforge.net/ ).
See also: findbugs.sourceforge.net/docs/findbugsPaper.pdf ",MYFACES-652
DigesterFacesConfigDispenserImpl.feedFacesContextFactory(String) is adding the factory to lifecycleFactories instead of facesContextFactories. Is a trivial fix - just replace lifecycleFactories with facesContextFactories.,MYFACES-651
"First of all, congratulations to the TCK pass! Myfaces is a terrific product! Especially the combination with portlets is a joy to work with!

However, I have come across a tiny little problem [1] which might be even easier to fix [2,3] :-) I'm going to attach a patch as well as a demo war in order to reproduce the issue if upload threshold permits.

It would be great if these patches could be included.

TIA,
Tanju

PS: This issue is not related to 549. I have analyzed that one as well and will post a desc shortly.


[1] Scenario
------------------
The problem specifically arises when two (or more) portlets from the same war deployable are positioned on the same page AND the state saving mode is set to client. Well, the workaround would be to set it to server, however, the client mode actually reveals the underlying issue.

Consider the following scenario:
6 jsp pages: view1.jsp... view6.jsp with one commandButton each
PortletA starts with view1 and iterates upon a buttonclick  to view2, view3 and back to view1 etc.
PortletB starts with view4 and moves on to view5, view6 and back to view4 etc

On startup, situation is: 1, 4
1. After action in A ->  2, 4
2. After action in B ->  2, 5
3. After action in A ->  2, 5    <- Wrong! should be 3, 5
4. After action in A -> 3, 5    <- Another action is needed to move to 3, 5

This behavior (inversed) also appears if the sequence is started with portlet B instead of A.


[2] Possible explanation
------------------------------------
The actual problem is that a facesContext, which is kept in the PortletSession, also drags a  responseWriter along. However, this writer becomes stale as soon as the processing of the respective view (underlying jsp) is concluded.
When this facesContext is retrieved by a subsequent RenderRequest the UIComponentTag class will not create a new responseWriter, instead it will use the one from the facesContext. (see UIComponentTag.java, setupResponseWriter())

Fastforward: The ViewTag instance (doAfterBody()) is not able to replace the form state marker because the actual content has been written out to the bodyContent of the last page and not the view-to-be. The consequence is that the marker is written out as is.

Now as soon as action 3. is invoked, the resoreView phase is not able to restore the tree. It just skips the other phases and goes straight for the render phase which renders the current view again.

This problem does not occur in the non-portlet use-case because a new facesContext (with a noninitialized responseWriter) is created upon every request.


[3] Resolution
----------------------
A simple solution would be to just nullify all non-essential instance variables of facesContext (specifically the _responseWriter variable) after the facesContext is retrieved in facesRender() of MyFacesGenericPortlet.

A more symmetric solution would be to reset the responseWriter where it is actually assigned namely in UIComponentTag but this does not seem to be possible due to the API which does not permit a null value assignment. This actually makes perfectly sense given its intention as throwaway object in a well defined a lifecycle.

I have tested this fix on pluto, and it seems to work like a charm.
",MYFACES-650
"Detected possible NullPointerException in ViewTag setProperties, if localeValue is null.

",MYFACES-649
"If you e.g. insert as day ""33"" and select ""September"" then the date is converted to 3. Oct. instead of raising an error.

In addition: Is it also possible to disable the direct manual input and allow only using the popup?",MYFACES-646
MessageeUtils class should have addition methods to get the ability to pass also an individual resourcebundle to use it also in projects loading messages from different locations.,MYFACES-645
"<h:outputText value=#{object.dollarAmount}"">
     <f:convertNumber type=""currency""/>
</h:outputText>

When using the sun implementation of JSF it outputs the following: $1,200.55
When using the MyFaces implemenation if output the following: ¤1,200.55

The pattern being used is correct. But the currency symbol isn't automatically determined based on my locale the same way the SUN implementation is done. 

Having this automatically determined based on the systems locale makes this better for applications aiming to support multiple languages (I18N).
",MYFACES-641
"HtmlCommandSortHeader.xml and HtmlCommandSortHeader.java specify DEFAULT_RENDERER_TYPE = ""javax.faces.Link"" but it should be org.apache.myfaces.SortHeader

This causes the custom rendering (i.e. direction arrows not to appear).   I do not know if this manifests itself with JSPs.   Using facelets, I used the HtmlCommandSortHeader.java file as a reference to know which render to use in the facelet config.  I used javax.faces.Link and didn't get the arrows; I had to change it to org.apache.myfaces.SortHeader.  ",MYFACES-639
"If the tomahawk selectOneRadio is used in a datatable (forceId = true, forceIdIndex = false) and required is true and no items are selected, then a validation error message will be added for every radio button in the data table. This message should only occour once for the set.

forceId = true and forceIdIndex = false identifies that all radio buttons with the same id are within the same group, and should be validated accordingly.
",MYFACES-636
setting the parent of the image component and than adding it to another component (commandlink) causes an IllegalStateException with the Sun RI.,MYFACES-634
"It outputs a parent child relationship, for example:

 <x:panelGrid binding=""#{...}"" id=""targettingPanel"" forceId=""true"">
                </x:panelGrid>

will generate an id like: 

<table id=""_id9:targettingPanel"" border=""0"" >

Where _id9 is the containing <form>.  There are other containing panelGrids that are not prepended to the id so maybe it's just the form tag.

",MYFACES-633
"i'm using a form that contain a dataTable component . There is also a button that modify the model of the table with
an array of only one element with the single fields initialized to """" (String fields) and has the attribute immediate set
to true. When the form is rendered after i have pressed the button with the immediate attribute set  to true ,the value that i obtain is the value submitted and not the value of the model.
I have found the following workaround that i have put on a properties of the row of the table that is called on the rendering phase:

if (component.getSubmittedValue() != null &&
    arrayOfRecord[model.getRowIndex()].getCodice() != null &&
    !component.getSubmittedValue().equals(arrayOfRecord[model.getRowIndex()].getCodice())) {
      component.setSubmittedValue(arrayOfRecord[model.getRowIndex()].getCodice());
}

I have used the value of the model  and not the component.getValue() because also this was not the same
of the value of te model.
I can try to create a simple case if it is necessary o the problem is not clear.
The problem seems the same of the issue 187  (that it is closed) but i i have tested the night builds and nothing
changed. However in the release notes of the night builds the issue is not reported as solved.
",MYFACES-632
"This sentence ""Now, you can ommit the context listener setup"" can be found in the wiki entry talking about migrating from 1.0.9m9 to 1.1.0.
The statement is inaccurate, because there are circumstances in which this doesnt work:

IF the myfaces jars are all placed inside the web-application's lib folder and the container supports the automatic loading from the tld, the listener entry MUST be omitted, otherwise an Exception is thrown claiming that javax.faces.el.VariableResolver cannot be found.

IF AT LEAST the myfaces-api.jar is placed on the container classpath instead, it doesn't matter whether the entry is omitted or not.",MYFACES-631
"When myfaces is placed on the container classpath, the Startup Listener is called for each web application.

The listener fails (crashes and does not recover) with a NPE if the application does not have a web.xml file, although this is a perfectly legal J2EE configuration (e.g. html only web-app).

Correct behaviour would be to ignore (skip) a context if no web.xml file can be found.
Although I have no patch, it should be easy to fix by adding a simple check for whether the file is found or not before passing it to the xml parser.",MYFACES-630
the myfaces-all.jar does not contain faces-config.xml for tomahawk extensions.,MYFACES-629
"If a PhaseListener.beforePhase() calles FacesContext.renderResponse() or FacesContext.responseComplete(), then the LifeCycleImpl should not execute the functionality required for the current phase. (see JSF Spec 1.1 section 11-1 page 296f.)  LifeCycleImpl is not taking care about this. 

This is important for us, because we'd like to make a redirect in the before render response phase. And at the moment an Illegal State exception is thrown, because the renderResponse is executed although responseComplete has been called.
",MYFACES-628
"The processValueChange method is never called in some cases and called only for the first element in the list for others.

If the value of the first row inside the inputText component is changed then the valueChangeListener is called. If the inputText component in any other row is changed the valueChangeListener is not called. 

The valueChangeListener is never called for the selectBooleanCheckbox.

I have not tested with any other sub-components.

This is possibly an RI compatibility issue however I cannot test with the myfaces impl as I am using components which are not compatible with it.

x:dataTable 	value=""#{ilrTestsMgr.details.currentPageContent}"" 
			  var=""test""
			  rendered=""true""
			  rowClasses=""even-row,odd-row"" 
			  styleClass=""bluelist"" 
			  width=""100%"">
  <h:column> 
     <f:facet name=""header"">
        <h:outputText value=""#{bundle.generic_enabled}""/>
     </f:facet>
   <h:selectBooleanCheckbox value=""#{test.enabled}""  valueChangeListener=""#{ilrTestsMgr.details.processValueChange}""/>
  </h:column>

  <h:column>
    <f:facet name=""header"">  
      <h:outputText value=""#{bundle.testcase_value}""/>
    </f:facet>  	    
    <h:inputText value=""#{test.expected}"" valueChangeListener=""#{ilrTestsMgr.details.processValueChange}""/>
  </h:column>
  
</x:dataTable>",MYFACES-627
"                if (base instanceof Object[] && ((Object[])base)[index] != null) {
                    Object[] array = (Object[]) base;
                    return array[index].getClass().getComponentType();                    == return null
.....

  getComponentType() returns the Class representing the component type of an array.  If this class does not represent an array class this method  returns null.
",MYFACES-626
"Conversion from the MailingList:

Interesting!

it might be this or the valueChangeListener should not be fired for a change from a null to an empty String.

Please open a jira-issue on this and include our discussion.

regards,

Martin

On 9/26/05, Daniel.Loebbe@bertelsmann.de <Daniel.Loebbe@bertelsmann.de> wrote:
>
> Hi,
>
> your explanations sound reasonable, but do not really help us. For most of the input fields, we do not use a value binding to a java beans field, but bind the components themselves (e.g. HTMLInputText). And those are initialized by their default constructors (new HTMLInputText()) without setting any value.
>
> Therefore for me it seems, that the MyFaces implementation sets the default value value of these components to null instead of an empty String. Setting the value to """" after the submit without any user input is not consistent then.
>
> Bye, Daniel
>
>
>
>
>
> -----Ursprüngliche Nachricht-----
> Von: Martin Marinschek [mailto:martin.marinschek@gmail.com]
> Gesendet: Montag, 26. September 2005 09:19
> An: MyFaces Discussion
> Betreff: Re: Migration to 1.1.0 causes ValueChangeListener problems
>
> Sorry for ignoring your post,
>
> here the answer:
>
> MyFaces 1.0.9 had a TCK compatibility bug with respect to setting nulls back to the backend, instead of an empty string.
>
> I still haven't checked though if a value change listener ought to be fired in this case. I would suppose that not, but will need to check the RI what it does in this case.
>
> Fancy checking it out and open a jira issue if we don't do as the RI does?
>
> regards,
>
> Martin
>
> On 9/26/05, Boris Klug <boris.klug@debeka.de> wrote:
> > Hi!
> >
> > I had the same problem. I figured out that we set most values to 
> > null, not to an empty String (""""). After submitting the form, the 
> > value was an empty String, so the value changed and the events get fired.
> >
> > We changed the initial value to an empty String and now I no longer 
> > get the valueChangedEvents.
> >
> > See my posting here:
> > http://www.mail-archive.com/users%40myfaces.apache.org/msg09062.html
> >
> > I asked there if this is the normal behaviour but got no answer.
> >
> >
> >
> > Daniel.Loebbe@bertelsmann.de wrote:
> > > Hi,
> > >
> > > I upgraded our app simply by replacing the jars of the 1.0.9 
> > > version against the new ones (configuration changes have not been necessary).
> > > Almost everything of the application works fine but:
> > >
> > > When a form is submitted, all methods which are registered as 
> > > valueChangeListener are called, even if the concerning UIInput has 
> > > no value or the value has not been changed.
> > >
> > > Since we have many valueChangeListeners on some pages and perform 
> > > some complex stuff in them, the business logic does not work any longer.
> > >
> > > Thanks fpr help,
> > >
> > > Daniel
> >
>
>
> --
>
> http://www.irian.at
> Your JSF powerhouse -
> JSF Trainings in English and German
>
>


--

http://www.irian.at
Your JSF powerhouse -
JSF Trainings in English and German
",MYFACES-625
"We use a SelectOneMenu to set a City object on a Person. City's are records in our DB with a Long primary key we use as value in the select. A Converter converts the PK to objects with getAsObject (getAsString simply return the PK from the object). We have seen indeed that the getAsObject is called on submit, then followed by a getAsString during the render phase BUT WITH the Long PK as THE VALUE. The component is asking to convert the String value into the String value!

What is particularly weird is that, in the previous request/response phase, the select renders ok, which also requires a getAsString of course.

To be sure,  we switched back to the nightly we were using before (20050821), and the select worked ok again. So, as far as we are concerned, this is a serious bug, at least in SelectOneMenu!. We also tried to workaround the issue, checking in the converter if the ""value"" argument for getAsString is a String, and then just returning it, but that didn't work either.",MYFACES-624
"According to section 5.1.4 of the specification (p. 5-4) ...

If you have #{expr-a[value-b]}  where value-a is a Map then ...
call value-a.put(value-b, newValue).

The MyFaces implementation is coercing newValue into String which is incorrect behavior.  

NOTE: I discovered the problem while using a bean that was programatically added to the session map.  So there is is no class defined in faces-config.xml.  I don't think this should matter but I thought I would mention it.",MYFACES-623
"I apologize, but the patch I submitted to add an attirbute ""layoutWidth"" was not adequately tested, and I have discovered that the layoutWidth attribute does not have the desired effect when the checkboxes are rendered with a pageDirection layout.  The checkboxes end up rendering in a single vertical row not matter what the layoutWidth is.  Also for both pageDirection and lineDirection, the markup is not properly formed.  The label tag appears twice for each checkbox.

I am now submitting another patch to HtmlCheckboxRenderer that fixes these issues.  I have tested it with different amounts of checkboxes, different layoutWidths, and different combinations of SelectItemGroups.  Sorry about the original being messed up.",MYFACES-622
"Tree2 node commandLinks are not firing their associated method bindings until the commandLink is clicked the second time.  This only happens when the node is shown for the first time after being expanded.

For example, given tree
A
  |_ B

When tree is in collapsed state, simply A and then expanded as shown above, the first click to B does not invoke associated method binding for B.  A subsequent click to B will work properly.
 
This is happening subsequent to MYFACES-580, which fixed the bug where duplicate ids where being complained about.
Not sure if the 2 are related.

This is ocurring in 9/24 nightly build.",MYFACES-621
"JSCookMenu is displaying html src instead of an icon.

Problem src example (Does not display icon)

<script type=""text/javascript"">var event__id7_menu = 
[[null, 'Options', null, 'linkDummyForm', null,['&lt;img src=&quot;/opengym/images/Help.png&quot;/&gt;', 'Help', 'event__id7_menu:go_sample1', 'linkDummyForm', null]]];</script><div id=""event__id7_menu""></div> 
<script type=""text/javascript""><!-- 
        cmDraw ('event__id7_menu', event__id7_menu, 'hbr', cmThemeOffice, 'ThemeOffice'); 
//--></script> 

If src is manually changed to the following then the icon is displayed correctly

<script type=""text/javascript"">var event__id7_menu = 
[[null, 'Options', null, 'linkDummyForm', null,['<img src=""/opengym/images/Help.png"">', 'Help', 'event__id7_menu:go_sample1', 
'linkDummyForm', null]]];</script><div id=""event__id7_menu""></div> 
<script type=""text/javascript""><!-- 
        cmDraw ('event__id7_menu', event__id7_menu, 'hbr', cmThemeOffice, 'ThemeOffice'); 
//--></script> 
",MYFACES-620
The 1.1.0 source release contains the source Java files and javadoc but no build.xml or other files needed to produce a working Jar.,MYFACES-619
"A simple tree, 1 level. All entries below the root are leafs. Definition like this:


              <x:tree2 id=""schoolTree""
                       value=""#{handler.schoolTree}""
                       var=""node""
                       varNodeToggler=""t""
                       showRootNode=""false""
                       clientSideToggle=""false"">

                <f:facet name=""User"">
                  <h:panelGroup>
                    <f:facet name=""expand"">
                      <h:graphicImage value=""/img/x-tree2/yellow-folder-open.png"" rendered=""#{t.nodeExpanded}"" />
                    </f:facet>
                    <f:facet name=""collapse"">
                      <h:graphicImage value=""/img/x-tree2/yellow-folder-closed.png"" rendered=""#{!t.nodeExpanded}"" />
                    </f:facet>
                    <h:outputText value=""#{node.description}"" styleClass=""user"" />
                  </h:panelGroup>
                </f:facet>

                <f:facet name=""be.peopleware.fvb.semantics.convenants.School"">
                  <h:panelGroup>
                      <h:commandLink id=""gotoSchoolDetailLink""
                                     actionListener=""#{node.navigateHere}""
                                     immediate=""true""
                                     styleClass=""school"">
                      <h:outputText value=""#{node.schoolName}"" styleClass=""school"" />
                      </h:commandLink>
                  </h:panelGroup>
                </f:facet>

              </x:tree2>


The shool nodes are rendered, without an icon. Clicking on the school name does navigation ok, no probs. Yet, on the left side of the school name, just below the lines, there is still an (""invisible"") area where you can click, and doing so gives an error:


java.lang.IllegalArgumentException: Invalid bit mask of 14
	at org.apache.myfaces.custom.tree2.HtmlTreeRenderer.encodeNavigation(HtmlTreeRenderer.java:445)
	at org.apache.myfaces.custom.tree2.HtmlTreeRenderer.encodeCurrentNode(HtmlTreeRenderer.java:334)
	at org.apache.myfaces.custom.tree2.HtmlTreeRenderer.encodeTree(HtmlTreeRenderer.java:236)
	at org.apache.myfaces.custom.tree2.HtmlTreeRenderer.encodeChildren(HtmlTreeRenderer.java:199)
	at javax.faces.component.UIComponentBase.encodeChildren(UIComponentBase.java:315)
	at javax.faces.webapp.UIComponentTag.encodeChildren(UIComponentTag.java:343)
	at javax.faces.webapp.UIComponentTag.doEndTag(UIComponentTag.java:251)",MYFACES-617
"Same breaking code:

<t:inputCalendar id=""effectiveStartDateAnnouncement""
    value=""#{editAnnouncementsPage.selectedAnnouncement.effectiveStartDate}""
    renderAsPopup=""true"" addResources=""true""/>

Sometime after 1_1_0 and the 9/18 nightly, the t:inputCalendar stopped ""popping up.""

I tested it with both the official 1_1_0 and a manually ant-command-line built one to insure that it's not a build problem with the SVN checkout (using the myfaces-api, myfaces-impl, tomahawk jars), and both worked.

The nightly 

Checking out revisions 289189 and 289858 both show the problem, as did 289188 (but I'm not sure if 289188 is far enough back to get in front of the MYFACES-569 patch).

There were a few changes that I noticed:
 MYFACES-569 <-- I suspect this one currently
 MYFACES-445
 Martin's revamp

I'm out of time for now, but if no one else figures out what's wrong, I'll try more revisions next week to narrow down the problem introduction time.   I'm unlikely to be able to fix it as I have no javascript programming background (yet).

",MYFACES-615
"Just noticed after checkout that the local component definition xml files in the sourcebase of myfaces have an invalid url in the dtd

for instance htmlschedule.xml

<?xml version=""1.0"" encoding=""ISO-8859-1"" ?>
<!DOCTYPE component PUBLIC
  ""-//MyFaces//DTD MyFaces component def 1.0//EN""
  ""http://myfaces.apache.org/dtd/Component.dtd"">

the link to the dtd goes into oblivion on the current webserver, this can be fixed on the webserverside, it is not a big issue
since the dtds are not requested from the server if they can be found locally, but it is annoying if you edit in an xml aware environment.

",MYFACES-614
,MYFACES-613
"Rapid, multiple clicks on the h:commandButton in the test case given below 
produce an IllegalStateException and a blank response about 10% of the time.

The JSF state-saving method can be client or server. A blank page is sometimes
returned even if the clicks are not rapid.

The Sun JSF RI 1.1_01 shows the same problem:

http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6326655

The stack trace is:

SEVERE: Servlet.service() for servlet Faces Servlet threw exception
java.lang.IllegalStateException: Cannot forward after response has been committed
        at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:314)
        at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:302)
        at org.apache.myfaces.context.servlet.ServletExternalContextImpl.dispatch(ServletExternalContextImpl.java:415)
        at org.apache.myfaces.application.jsp.JspViewHandlerImpl.renderView(JspViewHandlerImpl.java:234)
        at org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:300)
        at javax.faces.webapp.FacesServlet.service(FacesServlet.java:95)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:252)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
        at org.netbeans.modules.web.monitor.server.MonitorFilter.doFilter(MonitorFilter.java:362)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:202)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:214)
        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:178)
        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:126)
        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:105)
        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:107)
        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:148)
        at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:825)
        at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.processConnection(Http11Protocol.java:738)
        at org.apache.tomcat.util.net.PoolTcpEndpoint.processSocket(PoolTcpEndpoint.java:526)
        at org.apache.tomcat.util.net.LeaderFollowerWorkerThread.runIt(LeaderFollowerWorkerThread.java:80)
        at org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:684)
        at java.lang.Thread.run(Thread.java:595)

Here is the test case:

index.jsp:

<%@ taglib uri=""http://java.sun.com/jsf/html"" prefix=""h"" %>
<%@ taglib uri=""http://java.sun.com/jsf/core"" prefix=""f"" %>

<html>
    <head></head>
    <body>
        <f:view>
            <h:form>
                <p>
                    <h:commandButton value=""Submit"" />
                </p>
                <p>
                    <h:graphicImage value=""image.png"" />
                </p>
            </h:form>
        </f:view>
    </body>
</html>

SlowServlet.java, mapped to image.png in web.xml:

public class SlowServlet extends HttpServlet {
    
    protected void doGet(HttpServletRequest req, HttpServletResponse resp)
    throws ServletException, IOException {
        
        BufferedImage image;
        OutputStream os;
        
        image = new BufferedImage(100, 100,
             BufferedImage.TYPE_INT_ARGB);
        os = resp.getOutputStream();
        resp.setContentType(""image/png"");
        try {
            Thread.sleep(1000);
        } catch (InterruptedException e) {
            throw new ServletException(e);
        }
        try {
            ImageIO.write(image, ""png"", os);
            os.close();
        } catch (IOException e) {
        }
        
    }
    
}",MYFACES-612
"Its my understanding that when a ConverterException is thrown that it should be caught by the component or renderer and a conversion error message added for the component in question.  This is not happening in all cases.  One example is RendererUtils::getConvertedUIOutputValue.  Also, in order to minimize the duplication of this code classes that are doing there own conversion (HtlmlCalendarRenderer) should be changed to use RendererUtils.",MYFACES-611
"I have an application that works on 1.0.9 but stopped working when upgraded to 1.1.0. I got a blank screen. And console shows the following error:


java.lang.IllegalStateException: Cannot create a session after the 
response
has been committed
 at
org.apache.catalina.connector.Request.doGetSession(Request.java:2195)
 at
org.apache.catalina.connector.Request.getSession(Request.java:2017)
 at
org.apache.catalina.connector.RequestFacade.getSession(RequestFacade.java:822)
 at
org.apache.myfaces.context.servlet.SessionMap.setAttribute(SessionMap.java:50)
 at
org.apache.myfaces.context.servlet.AbstractAttributeMap.put(AbstractAttributeMap.java:104)
 at
org.apache.myfaces.application.jsp.JspStateManagerImpl.saveSerializedViewInServletSession(JspStateManagerImpl.java:321)
 at
org.apache.myfaces.application.jsp.JspStateManagerImpl.saveSerializedView(JspStateManagerImpl.java:228)
 at
org.apache.myfaces.taglib.core.ViewTag.doEndTag(ViewTag.java:122)
 at
org.apache.jsp.common.headerBodyFooterLayout_jsp._jspx_meth_f_view_0
....


After a few days tweaking & debugging, I changed the value of the following setting in my web.xml:

javax.faces.STATE_SAVING_METHOD

from ""server"" to ""client"",

Now, my app works again. 

I think this is a bug.",MYFACES-610
"If somebody wants to use the MyFaces JSF implementation including the Tomahawk
extentions, the 1.1 version ships a 'convenience  all-in-one' jar : myfaces-all.jar
However the META-INF in this jar does not contain a 'faces-config.xml' file and hence all
tomahawk components are not registered.

So, using this small testcase :

<%@ taglib uri=""http://java.sun.com/jsf/core"" prefix=""f""%>
<%@ taglib uri=""http://java.sun.com/jsf/html"" prefix=""h""%>
<%@ taglib uri=""http://myfaces.apache.org/tomahawk"" prefix=""t""%>

<t:div>
Bummer !
</t:div>

results in :

[ServletException in:/jsp/doit.jsp] Undefined component type org.apache.myfaces.Div'

and from System.out :

ApplicationIm E org.apache.myfaces.application/ApplicationImpl  Undefined component type org.apache.myfaces.Div


Using 'myfaces-api.jar' 'myfaces-impl.jar' and 'tomahawk.jar'  together instead of the
all-in-one 'myfaces-all.jar' works fine.

",MYFACES-608
t:inputFileUpload shown as t:fileUpload in web docs,MYFACES-607
"I have rewritten my patch for issue 592 to avoid the side affects described above. I couldn't add the patch to 592 as that was closed so have had to raise this issue instead.

Patch to follow shortly.

After the patch is applied, the component will now behave exacly as before (call to super), if forceId is false or forceIdIndex is true, but will branch into logic similar to that in UIInput if forceId is true AND forceIdIndex is false.",MYFACES-606
"I'm trying to generate a downloadable file link, and I'm using:

        FacesContext facesContext = FacesContext.getCurrentInstance();
        OutputStream responseStream = facesContext.getResponseStream();

but responseStream is coming back null.

A search through the code seems to indicate that the only thing to call ServletFacesContextImpl.setResponseStream is FacesContextWrapper.setResponseStream(), and nothing calls this method.

The same thing appears to be true for responseWriter.

It looks like these methods should be delegating to the ExternalContext rather than holding local copies of the values, especially since the external context has valid references.

facesContext= ServletFacesContextImpl  (id=117)
	_externalContext= ServletExternalContextImpl  (id=122)
		_servletResponse= ExtensionsResponseWrapper  (id=157)
			printWriter= null
			response= ServletHttpResponse  (id=165)
			stream= ByteArrayOutputStream  (id=167)
	_renderResponse= false
	_responseComplete= false
	_responseStream= null
	_responseWriter= null

However, I'm not sure the best way of doing this.   One way would be to typecast ExternalContext to either a ServletExternalContextImpl or a PortletExternalContextImpl and follow the chain of objects.

I can create a patch to do this if there's confirmation that this is the best way to go about it.
",MYFACES-605
"I have the table 3 columns, one column i render as commandLink or commandButton. The problem is the action at the backend never got invoke.
I try another test by put one link out side of the table block. It works very OK.
One more thing is: if csCardSearchHandler has session scope it's also OK. But in my case csCardSearchHandler has request scope. I did try version 1.0.9 and then 1.1.0 neither of those work.

<x:dataTable id=""accountResult"" value=""#{csCardSearchHandler.accountResult}"" var=""account""
	rows=""10"" rowIndexVar = ""rowIdx"" renderedIfEmpty=""false"">
	<h:column>
		<f:facet name=""header"">
			<h:outputText value=""[No.]""/>
		</f:facet>
		<h:outputText value=""#{rowIdx}""/>
	</h:column>
	<h:column>
		<f:facet name=""header"">
			<h:outputText value=""[Account No.]""/>
		</f:facet>
<!-- THIS DOES NOT WORK -->
		<x:commandLink action=""#{csCardSearchHandler.processResume}"" value=""#{account.number}"">
		</x:commandLink>
	</h:column>
	<h:column>
		<f:facet name=""header"">
			<h:outputText value=""[Name]""/>
		</f:facet>
		<h:outputText value=""#{account.name}""/>
	</h:column>
	<h:column>
		<f:facet name=""header"">
			<h:outputText value=""[SSN]""/>
		</f:facet>
		<h:outputText value=""#{account.ssn}""/>
	</h:column>
	</x:dataTable>
	<!-- THIS IS OK-->
	<x:commandLink action=""#{csCardSearchHandler.processResume}"" value=""test"">
			<x:updateActionListener property=""#{csCardRequestHandler.accountNumber}""
					value=""4444""/>
			<x:updateActionListener property=""#{csCardRequestHandler.cardDetail.name}""
					value=""XXXXXXXXXXXXXXXX""/>
	</x:commandLink>",MYFACES-604
"When reloading a page, I get the exception below.

I search the mailing list and someone suggested to assign a id by hand
to every component - which is much work and would clumber the jsf pages.

I manualy added an id to the component with the duplicate id and
redeployed the app - now I get the exception from another component. So
what changed from 1.0.9m9 to 1.1.0 related to this problem?

Another strange thing is that I get the following warning:
2005-09-20 15:06:39,481 INFO [/XXX]: WARNING: Component _id12 just got
an automatic id, because there was no id assigned yet. If this component
was created dynamically (i.e. not by a JSP tag) you should assign it an
explicit static id or assign it the id you get from the createUniqueId
from the current UIViewRoot component right after creation!

Everything went away after I rearragned the components like this: 

Original:

<f:view>
   .. jscookmenu
   ... dataTable with command links
   <h:form>
      ... more dataTable with more command links
   </h:form>
</f:view>

Now without problems:

<f:view>
   ... jscookmenu
   <h:form>
      ... dataTable with command links
      ... more dataTable with more command links
   </h:form>
/f:view>

=== Thrown exception ====
2005-09-20 15:06:47,753 ERROR [jsp]: Servlet.service() for servlet jsp threw exception
javax.faces.FacesException: cannot add component with id '_id21' and path : {Component-Path : [Class:
 javax.faces.component.html.HtmlInputText,Id: _id21]} to its parent component.
 This might be a problem due to duplicate ids.
 at  javax.faces.webapp.UIComponentTag.findComponent(UIComponentTag.java:401)
 at  javax.faces.webapp.UIComponentTag.doStartTag(UIComponentTag.java:219)
at org.apache.jsp.templates.generic_jsp._jspx_meth_h_inputText_1(org.apache.jsp.templates.generic_jsp:1642)
at org.apache.jsp.templates.generic_jsp._jspx_meth_h_panelGrid_4(org.apache.jsp.templates.generic_jsp:1598)
at org.apache.jsp.templates.generic_jsp._jspService(org.apache.jsp.templates.generic_jsp:636)
at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:97)
at javax.servlet.http.HttpServlet.service(HttpServlet.java:802)
at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:322)
at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:291)
at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:241)
",MYFACES-603
" I found that MyFaces 1.1.0 needed an internet collection to validate the DTD for the web.xml when running on Weblogic8.1sp3!  I am running simple.war in myfaces-1.1.0-examples.zip  on Weblogic8.1sp3

 Error message is :
info: Reading config zip:D:/bea/user_projects/domains/gitdw/myserver/.wlnotdelete/extract/myserver_simple_simple/jarfiles/WEB-INF/li
b/sandbox4690.jar!/META-INF/faces-config.xml
2005-9-22 16:23:49 org.apache.myfaces.config.FacesConfigurator feedClassloaderConfigurations
info: Reading config zip:D:/bea/user_projects/domains/gitdw/myserver/.wlnotdelete/extract/myserver_simple_simple/jarfiles/WEB-INF/li
b/tomahawk4692.jar!/META-INF/faces-config.xml
2005-9-22 16:23:49 org.apache.myfaces.config.FacesConfigurator feedContextSpecifiedConfig
info: Reading config /WEB-INF/examples-config.xml
2005-9-22 16:23:49 org.apache.myfaces.util.LocaleUtils toLocale
fatal: Locale name null or empty, ignoring
2005-9-22 16:24:08 org.apache.myfaces.webapp.webxml.WebXmlParser parse
fatal: Unable to parse web.xml
java.net.UnknownHostException: java.sun.com
        at java.net.InetAddress.getAllByName0(InetAddress.java:1016)
        at java.net.InetAddress.getAllByName0(InetAddress.java:981)
        at java.net.InetAddress.getAllByName(InetAddress.java:975)
        at weblogic.net.http.HttpClient.openServer(HttpClient.java:263)
        at weblogic.net.http.HttpClient.openServer(HttpClient.java:329)
        at weblogic.net.http.HttpClient.<init>(HttpClient.java:128)
        at weblogic.net.http.HttpURLConnection.getHttpClient(HttpURLConnection.java:129)
        at weblogic.net.http.HttpURLConnection.getInputStream(HttpURLConnection.java:331)
        at weblogic.net.http.SOAPHttpURLConnection.getInputStream(SOAPHttpURLConnection.java:28)
        at java.net.URL.openStream(URL.java:913)
        at weblogic.apache.xerces.impl.XMLEntityManager.startEntity(XMLEntityManager.java:836)
        at weblogic.apache.xerces.impl.XMLEntityManager.startDTDEntity(XMLEntityManager.java:796)
        at weblogic.apache.xerces.impl.XMLDTDScannerImpl.setInputSource(XMLDTDScannerImpl.java:275)
        at weblogic.apache.xerces.impl.XMLDocumentScannerImpl$DTDDispatcher.dispatch(XMLDocumentScannerImpl.java:841)
        at weblogic.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:329)
        at weblogic.apache.xerces.parsers.DTDConfiguration.parse(DTDConfiguration.java:525)
        at weblogic.apache.xerces.parsers.DTDConfiguration.parse(DTDConfiguration.java:581)
        at weblogic.apache.xerces.parsers.XMLParser.parse(XMLParser.java:152)
        at weblogic.apache.xerces.parsers.DOMParser.parse(DOMParser.java:257)
        at weblogic.apache.xerces.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:201)
        at weblogic.xml.jaxp.RegistryDocumentBuilder.parse(RegistryDocumentBuilder.java:149)
        at org.apache.myfaces.webapp.webxml.WebXmlParser.parse(WebXmlParser.java:89)
        at org.apache.myfaces.webapp.webxml.WebXml.init(WebXml.java:135)
        at org.apache.myfaces.webapp.StartupServletContextListener.initFaces(StartupServletContextListener.java:66)
        at org.apache.myfaces.webapp.StartupServletContextListener.contextInitialized(StartupServletContextListener.java:46)
        at weblogic.servlet.internal.WebAppServletContext$FireContextListenerAction.run(WebAppServletContext.java:6515)
        at weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:321)
        at weblogic.security.service.SecurityManager.runAs(SecurityManager.java:118)
        at weblogic.servlet.internal.WebAppServletContext.notifyCreated(WebAppServletContext.java:1666)
        at weblogic.servlet.internal.WebAppServletContext.preloadResources(WebAppServletContext.java:3203)
        at weblogic.servlet.internal.HttpServer.preloadResources(HttpServer.java:694)
        at weblogic.servlet.internal.WebService.preloadResources(WebService.java:483)
        at weblogic.servlet.internal.ServletInitService.resume(ServletInitService.java:30)
        at weblogic.t3.srvr.SubsystemManager.resume(SubsystemManager.java:131)
        at weblogic.t3.srvr.T3Srvr.resume(T3Srvr.java:966)
        at weblogic.t3.srvr.T3Srvr.run(T3Srvr.java:361)
        at weblogic.Server.main(Server.java:32)
2005-9-22 16:24:08 org.apache.myfaces.webapp.StartupServletContextListener initFaces
fatal: Error initializing ServletContext
javax.faces.FacesException: java.net.UnknownHostException: java.sun.com
        at org.apache.myfaces.webapp.webxml.WebXmlParser.parse(WebXmlParser.java:105)
        at org.apache.myfaces.webapp.webxml.WebXml.init(WebXml.java:135)
        at org.apache.myfaces.webapp.StartupServletContextListener.initFaces(StartupServletContextListener.java:66)
        at org.apache.myfaces.webapp.StartupServletContextListener.contextInitialized(StartupServletContextListener.java:46)
        at weblogic.servlet.internal.WebAppServletContext$FireContextListenerAction.run(WebAppServletContext.java:6515)
        at weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:321)
        at weblogic.security.service.SecurityManager.runAs(SecurityManager.java:118)
        at weblogic.servlet.internal.WebAppServletContext.notifyCreated(WebAppServletContext.java:1666)
        at weblogic.servlet.internal.WebAppServletContext.preloadResources(WebAppServletContext.java:3203)
        at weblogic.servlet.internal.HttpServer.preloadResources(HttpServer.java:694)
        at weblogic.servlet.internal.WebService.preloadResources(WebService.java:483)
        at weblogic.servlet.internal.ServletInitService.resume(ServletInitService.java:30)
        at weblogic.t3.srvr.SubsystemManager.resume(SubsystemManager.java:131)
        at weblogic.t3.srvr.T3Srvr.resume(T3Srvr.java:966)
        at weblogic.t3.srvr.T3Srvr.run(T3Srvr.java:361)
        at weblogic.Server.main(Server.java:32)
Caused by: java.net.UnknownHostException: java.sun.com
        at java.net.InetAddress.getAllByName0(InetAddress.java:1016)
        at java.net.InetAddress.getAllByName0(InetAddress.java:981)
        at java.net.InetAddress.getAllByName(InetAddress.java:975)
        at weblogic.net.http.HttpClient.openServer(HttpClient.java:263)
        at weblogic.net.http.HttpClient.openServer(HttpClient.java:329)
        at weblogic.net.http.HttpClient.<init>(HttpClient.java:128)
        at weblogic.net.http.HttpURLConnection.getHttpClient(HttpURLConnection.java:129)
        at weblogic.net.http.HttpURLConnection.getInputStream(HttpURLConnection.java:331)
        at weblogic.net.http.SOAPHttpURLConnection.getInputStream(SOAPHttpURLConnection.java:28)
        at java.net.URL.openStream(URL.java:913)
        at weblogic.apache.xerces.impl.XMLEntityManager.startEntity(XMLEntityManager.java:836)
        at weblogic.apache.xerces.impl.XMLEntityManager.startDTDEntity(XMLEntityManager.java:796)
        at weblogic.apache.xerces.impl.XMLDTDScannerImpl.setInputSource(XMLDTDScannerImpl.java:275)
        at weblogic.apache.xerces.impl.XMLDocumentScannerImpl$DTDDispatcher.dispatch(XMLDocumentScannerImpl.java:841)
        at weblogic.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:329)
        at weblogic.apache.xerces.parsers.DTDConfiguration.parse(DTDConfiguration.java:525)
        at weblogic.apache.xerces.parsers.DTDConfiguration.parse(DTDConfiguration.java:581)
        at weblogic.apache.xerces.parsers.XMLParser.parse(XMLParser.java:152)
        at weblogic.apache.xerces.parsers.DOMParser.parse(DOMParser.java:257)
        at weblogic.apache.xerces.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:201)
        at weblogic.xml.jaxp.RegistryDocumentBuilder.parse(RegistryDocumentBuilder.java:149)
        at org.apache.myfaces.webapp.webxml.WebXmlParser.parse(WebXmlParser.java:89)
        ... 15 more
javax.faces.FacesException: java.net.UnknownHostException: java.sun.com
        at org.apache.myfaces.webapp.webxml.WebXmlParser.parse(WebXmlParser.java:105)
        at org.apache.myfaces.webapp.webxml.WebXml.init(WebXml.java:135)
        at org.apache.myfaces.webapp.StartupServletContextListener.initFaces(StartupServletContextListener.java:66)
        at org.apache.myfaces.webapp.StartupServletContextListener.contextInitialized(StartupServletContextListener.java:46)
        at weblogic.servlet.internal.WebAppServletContext$FireContextListenerAction.run(WebAppServletContext.java:6515)
        at weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:321)
        at weblogic.security.service.SecurityManager.runAs(SecurityManager.java:118)
        at weblogic.servlet.internal.WebAppServletContext.notifyCreated(WebAppServletContext.java:1666)
        at weblogic.servlet.internal.WebAppServletContext.preloadResources(WebAppServletContext.java:3203)
        at weblogic.servlet.internal.HttpServer.preloadResources(HttpServer.java:694)
        at weblogic.servlet.internal.WebService.preloadResources(WebService.java:483)
        at weblogic.servlet.internal.ServletInitService.resume(ServletInitService.java:30)
        at weblogic.t3.srvr.SubsystemManager.resume(SubsystemManager.java:131)
        at weblogic.t3.srvr.T3Srvr.resume(T3Srvr.java:966)
        at weblogic.t3.srvr.T3Srvr.run(T3Srvr.java:361)
        at weblogic.Server.main(Server.java:32)
Caused by: java.net.UnknownHostException: java.sun.com
        at java.net.InetAddress.getAllByName0(InetAddress.java:1016)
        at java.net.InetAddress.getAllByName0(InetAddress.java:981)
        at java.net.InetAddress.getAllByName(InetAddress.java:975)
        at weblogic.net.http.HttpClient.openServer(HttpClient.java:263)
        at weblogic.net.http.HttpClient.openServer(HttpClient.java:329)
        at weblogic.net.http.HttpClient.<init>(HttpClient.java:128)
        at weblogic.net.http.HttpURLConnection.getHttpClient(HttpURLConnection.java:129)
        at weblogic.net.http.HttpURLConnection.getInputStream(HttpURLConnection.java:331)
        at weblogic.net.http.SOAPHttpURLConnection.getInputStream(SOAPHttpURLConnection.java:28)
        at java.net.URL.openStream(URL.java:913)
        at weblogic.apache.xerces.impl.XMLEntityManager.startEntity(XMLEntityManager.java:836)
        at weblogic.apache.xerces.impl.XMLEntityManager.startDTDEntity(XMLEntityManager.java:796)
        at weblogic.apache.xerces.impl.XMLDTDScannerImpl.setInputSource(XMLDTDScannerImpl.java:275)
        at weblogic.apache.xerces.impl.XMLDocumentScannerImpl$DTDDispatcher.dispatch(XMLDocumentScannerImpl.java:841)
        at weblogic.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:329)
        at weblogic.apache.xerces.parsers.DTDConfiguration.parse(DTDConfiguration.java:525)
        at weblogic.apache.xerces.parsers.DTDConfiguration.parse(DTDConfiguration.java:581)
        at weblogic.apache.xerces.parsers.XMLParser.parse(XMLParser.java:152)
        at weblogic.apache.xerces.parsers.DOMParser.parse(DOMParser.java:257)
        at weblogic.apache.xerces.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:201)
        at weblogic.xml.jaxp.RegistryDocumentBuilder.parse(RegistryDocumentBuilder.java:149)
        at org.apache.myfaces.webapp.webxml.WebXmlParser.parse(WebXmlParser.java:89)
        ... 15 more
2005-9-22 16:24:08 org.apache.myfaces.webapp.StartupServletContextListener initFaces
info: ServletContext 'null' initialized.
",MYFACES-602
"In method parse() the date is parsed as follows: 
SimpleDateFormat fullFormat = new SimpleDateFormat( ""dd MM yyyy HH mm ss"" ); 
if (timeZone != null) 
        fullFormat.setTimeZone(timeZone); 
return fullFormat.parse(day+"" ""+month+"" ""+year+"" ""+hours+"" ""+minutes+"" ""+seconds); 

This is normally no problem, but when the variable ""hours"" is ""12"", SimpleDateFormat ""misinterprets"" this value and thinks it's 12 AM, but the user normally intendet 12 PM (using a 24h clock). This can be solved by using the following routine instead: 
          
Calendar tempCalendar=Calendar.getInstance(); 
if (timeZone != null) 
        tempCalendar.setTimeZone(timeZone); 
tempCalendar.set(Calendar.DAY_OF_MONTH,Integer.parseInt(day)); 
tempCalendar.set(Calendar.MONTH,Integer.parseInt(month)-1); 
tempCalendar.set(Calendar.YEAR,Integer.parseInt(year)); 
tempCalendar.set(Calendar.HOUR_OF_DAY,Integer.parseInt(hours)); 
tempCalendar.set(Calendar.MINUTE,Integer.parseInt(minutes)); 
return tempCalendar.getTime(); 
} ",MYFACES-601
"When panelNavigator is declared without style & styleClass attributes , and ""border"" attribute is declared - 

panelNavigator renders table with double ""border"" attribute, e.g. for border=""1"" it renders:  <table border=""1"" border=""0"">

In my opinion HtmlNavigationRenderer should also check if border attribute exists (HtmlNavigationRenderer .java line 94)


regards


Tomasz",MYFACES-600
"org.apache.myfaces.renderkit.html.HtmlResponseWriterImpl.writeAttribute() can throw a NullPointerException if the value passed for the attribute value is null because of a call to value.toString(). I'm not sure what the correct failure-tolerant behavior would be - the method throws NullPointerException explicitly with a detail message if the name is null, but the value being null is a common enough occurrance that the method should either:

* Render an empty string as the value of the attribute
* Return without rendering the attribute at all and log a warning

I will provide a patch to supply whatever functionality is deemed appropriate, if desired.",MYFACES-599
"ant -Dskip.sandbox=true is supposed to build myfaces without the sandbox components, but if you use pass that variable to ant, the file faces-config.xml which contains the tomahawk components is not included in the myfaces-all.jar.",MYFACES-598
"This bug is similar to MYFACES-144 (http://issues.apache.org/jira/browse/MYFACES-144)

To reproduce the bug a complex object (other than string) must be used as the value for SelectItem. The object is converted by using a Converter to a string value.

The method HtmlRendererBase.renderGroupOrItemRadio(...) tests the complex object with the converted value which is only working if a string is used as a value for the selectitem.",MYFACES-597
"i'm using dataList to display array of images, 
by clicking an image, you go to details page.

the onclick method doesn't work with me!
no error even if i wrote wrong syntax in the onclick string.


the following in the code segment:

<%@ taglib uri=""http://myfaces.apache.org/tomahawk"" prefix=""t""%> 
.
.
.
.

t:dataList id=""data1"" style=""width: 150"" styleClass=""imageTable""
        			var=""families"" value=""#{pfController.productFamilyNames}""        
        			rowCountVar=""rowCount"" rowIndexVar=""rowIndex"" >  
        
        		<t:panelGroup style=""width: 150"" styleClass=""imageTable"" >
       				
       				<h:outputLink value=""products.faces"" 
            				onclick=""pfController.setChosenFamilyId(anythinggggggg)"">
       					<t:graphicImage value=""#{families.imageName}"" onclick=""pfController.setChosenFamilyId(anythingggg)"" height=""132"" width=""110"" style=""border: 0"" styleClass=""imageTable""/>
            		</h:outputLink>
            		
            		<%/* separetor if not last image in row */%>
            		<t:graphicImage value=""images/v_sep.gif"" height=""106"" width=""1"" styleClass=""imageTable""
            				rendered=""#{rowIndex + 1 < rowCount}""/>    
            		
            		<%/*  empty cell if last image in row */%>
            		<t:graphicImage value="""" height=""106"" width=""1"" 
            						rendered=""#{rowIndex + 1 >= rowCount}""/>		       		
            		
            		<h:outputLink value=""products.faces"" 
            				onclick=""pfController.setChosenFamilyId(family.value)"">
            			<t:graphicImage value=""#{families.titleImage}"" width=""120"" height=""26"" style=""border: 0"" styleClass=""imageTable""/>
           			</h:outputLink>            			
         		</t:panelGroup>           	
    		</t:dataList>  ",MYFACES-596
"I am using a commandLink to open a new window to show a report.
To do this, i use the commandLink option target and set it to _blank.

When i am now click on this link the first time, my report window is
opened perfectly. But when i am now pressing a second time the
link, a new window is opened and the page with the link is show in
this window and not the report.

When i use Sun's JSF RI, it works without any problems",MYFACES-595
"None of the examples from the nightly build and 1.1.0 run when deployed on JBoss on a windows 2003 server. The first page is blank and the following warning is logged:

2005-09-21 10:17:13,662 INFO  [STDOUT] 21-Sep-2005 10:17:13 oracle.adfinternal.view.faces.webapp.AdfFacesFilterImpl verifyFilterIsInstalled
WARNING: The AdfFacesFilter has not been installed.  ADF Faces requires this filter for proper execution.

This also affects all of the applications that we developed under myfaces 1.0.9. It is possible to get these to work inconsistantly though by adding the jsf-impl.jar to the deployment, but this only works sometimes, depending on whether myfaces-all.jar or jsf-impl.jar is the first on the classpath.",MYFACES-594
"The createDataModel method of UIData class does not support the java.util.Set. Previous versions (1.0.9) did provide support for the java.util.Set. 
",MYFACES-593
"The tomahawke selectOneRadio (t:selectOneRadio previously x:selectOneRadio) in a datatable no longer works correctly. On selection of an item and submission of the form a ('Validation Error',  ""{0}"": Value is not a valid option') message is added to the messages.
This worked correctly in myfaces 1.0.9 but not in the last nightly build.

Below is a subset of my jsp that outputs the column:

<h:column>
  <f:facet name=""header"">
    <h:outputText value=""#{bundle.label_select}""/>
  </f:facet>
  <t:selectOneRadio id=""selectRadio"" forceId=""true"" forceIdIndex=""false"" required=""true"" value=""#{ClientSearchBean.selectedExtClientId}"">
    <f:selectItem itemValue=""#{client.extClientId}"" itemLabel=""""/>
  </t:selectOneRadio>
</h:column>

The 'value; points to a string value in the backing bean and the itemValue points to the same string value in the Client domain object, of which the table is driven from.
",MYFACES-592
"These tag lines

  <t:jscookMenu layout=""hbr"" theme=""ThemeOffice"">
    <t:navigationMenuItem itemLabel=""Menu1"" itemValue=""Menu1"" value=""Menu1"">
      <t:navigationMenuItem itemLabel=""Menu1-1"" itemValue=""Menu1-1"" value=""Menu1-1"">      </t:navigationMenuItem>
      <t:navigationMenuItem split=""true"">      </t:navigationMenuItem>
      <t:navigationMenuItem itemLabel=""Menu1-2"" itemValue=""Menu1-2"" value=""Menu1-2"">      </t:navigationMenuItem>
    </t:navigationMenuItem>
  </t:jscookMenu>

produces this output

var id2_menu =
[
	[null, 'Menu1', null, 'linkDummyForm', null,
		[null, 'Menu1-1', null, 'linkDummyForm', null],
		_cmSplit,
		[null, '0', null, 'linkDummyForm', null],
		[null, 'Menu1-2', null, 'linkDummyForm', null]
	]
];

So the split item was rendered twice: the separator item, and a ""phantom"" item.

",MYFACES-588
"Zur Initialisierung einer Map- bzw. List-Property wird scheinbar immer eine HashMap bzw. ArrayList verwendet.
Die in JSR-127 gemachten Vorgaben werden nicht umgesetzt.

Kopiert aus JSR-127 Version 1.1:
""The initialization bean properties from <map-entries> and <list-entries>
elements must adhere to the following algorithm, though any confirming
implementation may be used.
For <map-entries>:
1. Call the property getter, if it exists.
2. If the getter returns null or doesn't exist, create a java.util.HashMap,
otherwise use the returned java.util.Map.
3. Add all entries defined by nested <map-entry> elements in the order they are
listed, converting key values defined by nested <key> elements to the type
defined by <key-class> and entry values defined by nested <value> elements
to the type defined by <value-class>. If a value is given as a value binding
expression, evaluate the reference and store the result, converting to <valueclass>
if necessary. If <key-class> and/or <value-class> are not defined,
use java.lang.String. Add null for each <null-value> element.
Chapter 5 Value Binding and Method Binding Expression Evaluation 5-13
4. If a new java.util.Map was created in step 2), set the property by calling the
setter method, or log an error if there is no setter method.
For <list-entries>:
1. Call the property getter, if it exists.
2. If the getter returns null or doesn't exist, create a java.util.ArrayList,
otherwise use the returned Object (an array or a java.util.List).
3. If a List was returned or created in step 2), add all elements defined by nested
<value> elements in the order they are listed, converting values defined by
nested <value> elements to the type defined by <value-class>. If a value is
given as a value binding expression, evaluate the reference and store the result,
converting to <value-class> if necessary. If a <value-class> is not defined,
use the value as-is (i.e., as a java.lang.String). Add null for each <nullvalue>
element.
4. If an array was returned in step 2), create a java.util.ArrayList and copy all
elements from the returned array to the new List, wrapping elements of a
primitive type. Add all elements defined by nested <value> elements as
described in step 3).
5. If a new java.util.List was created in step 2) and the property is of type
List, set the property by calling the setter method, or log an error if there is no
setter method.
6. If a new java.util.List was created in step 2) and the property is a java array,
convert the List into an array of the property type, and set it by calling the setter
method, or log an error if there is no setter method.
7. If a new java.util.List was created in step 4), convert the List to an array
of the proper type for the property and set the property by calling the setter
method, or log an error if there is no setter method.""",MYFACES-587
"Error like MYFACES-520

I have JSP like:

<f:view>
...
  <h:form id=""form-edit"">
  ...
    <h:dataTable id=""grid""
                 value=""#{nagrevBean.nagrevDTOs}"" var=""nagrevDTO""
                 >
      <h:column id=""flagSaveColumn"" rendered=""#{!authenticationBean.guestAuthorized}"">
        <f:facet name=""header"">
          <h:outputText id=""flagSaveColumnHeader"" value=""+""  />
        </f:facet>
        <h:selectBooleanCheckbox id=""flagSaveInput"" value=""#{nagrevDTO.flagSave}"" rendered=""#{nagrevDTO.canSave}"" />
      </h:column>
      ....
    </h:dataTable>
  </h:form>
</f:view>


When a value is entered in the required inputText field, the form submits successfully. But in RENDER_RESPONSE phase i have error

java.lang.NullPointerException
	at javax.faces.component.UIData.restoreDescendantComponentStates(UIData.java:223)
	at javax.faces.component.UIData.restoreDescendantComponentStates(UIData.java:235)
	at javax.faces.component.UIData.setRowIndex(UIData.java:186)
	at org.apache.myfaces.renderkit.html.HtmlTableRendererBase.encodeInnerHtml(HtmlTableRendererBase.java:135)
	at org.apache.myfaces.renderkit.html.HtmlTableRendererBase.encodeChildren(HtmlTableRendererBase.java:94)
	at javax.faces.component.UIComponentBase.encodeChildren(UIComponentBase.java:319)
	at javax.faces.webapp.UIComponentTag.encodeChildren(UIComponentTag.java:343)
	at javax.faces.webapp.UIComponentTag.doEndTag(UIComponentTag.java:251)
	at org.apache.myfaces.taglib.UIComponentBodyTagBase.doEndTag(UIComponentBodyTagBase.java:55)
	at org.apache.jsp.nagrev_jsp._jspx_meth_h_dataTable_0(org.apache.jsp.nagrev_jsp:1672)
	at org.apache.jsp.nagrev_jsp._jspService(org.apache.jsp.nagrev_jsp:286)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:97)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:810)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:322)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:314)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:264)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:810)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:252)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:672)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:463)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:398)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:301)
	at org.apache.myfaces.context.servlet.ServletExternalContextImpl.dispatch(ServletExternalContextImpl.java:415)
	at org.apache.myfaces.application.jsp.JspViewHandlerImpl.renderView(JspViewHandlerImpl.java:234)
	at org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:300)
	at javax.faces.webapp.FacesServlet.service(FacesServlet.java:95)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:252)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
	at com.azovstal.asctp.web.HibernateFilter.doFilter(HibernateFilter.java:35)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:202)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
	at org.apache.myfaces.component.html.util.ExtensionsFilter.doFilter(ExtensionsFilter.java:122)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:202)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
	at org.jboss.web.tomcat.filters.ReplyHeaderFilter.doFilter(ReplyHeaderFilter.java:81)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:202)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:213)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:178)
	at org.jboss.web.tomcat.security.CustomPrincipalValve.invoke(CustomPrincipalValve.java:39)
	at org.jboss.web.tomcat.security.SecurityAssociationValve.invoke(SecurityAssociationValve.java:153)
	at org.jboss.web.tomcat.security.JaccContextValve.invoke(JaccContextValve.java:59)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:126)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:105)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:107)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:148)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:856)
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.processConnection(Http11Protocol.java:744)
	at org.apache.tomcat.util.net.PoolTcpEndpoint.processSocket(PoolTcpEndpoint.java:527)
	at org.apache.tomcat.util.net.MasterSlaveWorkerThread.run(MasterSlaveWorkerThread.java:112)
	at java.lang.Thread.run(Thread.java:595)
...
javax.faces.FacesException: org.apache.jasper.JasperException
	at org.apache.myfaces.context.servlet.ServletExternalContextImpl.dispatch(ServletExternalContextImpl.java:425)
	at org.apache.myfaces.application.jsp.JspViewHandlerImpl.renderView(JspViewHandlerImpl.java:234)
	at org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:300)
	at javax.faces.webapp.FacesServlet.service(FacesServlet.java:95)
...

Function 
    private void restoreDescendantComponentStates(Iterator childIterator,
            Object state, boolean restoreChildFacets)
calling with state == null

The following change to UIData seems to fix the problem: 
... 
            if (descendantStateIterator != null 
                    && descendantStateIterator.hasNext()) 
            { 
             System.out.println(""has dsi""); 
                Object[] object = (Object[]) descendantStateIterator.next(); 
                childState = object[0]; 
                descendantState = object[1]; 

                if (component instanceof EditableValueHolder) 
                { 
                    ((EditableValueHolderState) childState) 
                            .restoreState((EditableValueHolder) component); 
                } 
            } 
",MYFACES-586
"hello,

I'm new to the group and will be doing a tun with JSF, and myFaces over the next 6 to 12 months.  I'm currently working on getting rowOnClick working in a simple jsf file derived from sortTable.jsp example of the myFaces examples.  I'm getting the below error.  I think I'm missing something in my configuration for usage of tomahawk.  Outside of putting the tomahawk.jar in my WEB-INF\lib what else needs done???  Any input on the below issue would be greatly appreciated.

Also does anyone know where to / or have the great examples from http://www.irian.at/myfaces/home.jsf

thanks,
oliver
=============================================================================
javax.servlet.ServletException: /sortTable.jsp(56,16) Unable to find setter method for attribute: rowId
	javax.faces.webapp.FacesServlet.service(FacesServlet.java:125)
	org.apache.myfaces.component.html.util.ExtensionsFilter.doFilter(ExtensionsFilter.java:112)
root cause 

javax.faces.FacesException: /sortTable.jsp(56,16) Unable to find setter method for attribute: rowId
	org.apache.myfaces.context.servlet.ServletExternalContextImpl.dispatch(ServletExternalContextImpl.java:411)
	org.apache.myfaces.application.jsp.JspViewHandlerImpl.renderView(JspViewHandlerImpl.java:280)
	org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:300)
	javax.faces.webapp.FacesServlet.service(FacesServlet.java:110)
	org.apache.myfaces.component.html.util.ExtensionsFilter.doFilter(ExtensionsFilter.java:112)
===================================================================================


",MYFACES-585
"On the September 19 build, all my <h:inputTextarea> components are now being rendered with text ""<!-- -->"" inside them.",MYFACES-584
"I have a selectManyCheckBox backed by an Integer array property. When the form is submitted, I get an exception thrown when updating the model:

Caused by: javax.servlet.jsp.el.ELException: Attempt to coerce a value of type ""[Ljava.lang.Object;"" to type ""[Ljava.lang.Integer;""

It seems that the property is trying to be set with an Object array, rather than Integer array.

I have tracked the problem down to _SharedRendererUtils:

...
        {
            //Object array
            int len = submittedValue.length;
            Object[] convertedValues = new Object[len];
            for (int i = 0; i < len; i++)
            {
                convertedValues[i]
                    = converter.getAsObject(facesContext, component, submittedValue[i]);
            }
            return convertedValues;
        }
..

Given that we know what type the array should be, a suggested patch for the code is:

            int len = submittedValue.length;
            ArrayList convertedValues = new ArrayList(len);
            for (int i = 0; i < len; i++)
            {
                convertedValues.add(i, converter.getAsObject(facesContext, component, submittedValue[i]));
            }
            
            return convertedValues.toArray((Object[]) Array.newInstance(arrayComponentType, len));

Peter",MYFACES-583
"Actions for tabbed panel

I have two frames. First navigation frame has command buttons. 
<h:form id=""form1"" target=""secondFrame"">
<h:commandButton value=""action1"" action=""#{testBean.action1}""/>
<h:commandButton value=""action2"" action=""#{testBean.action2}""/>
</h:form>

Second frame has to get result depending on selected button of the first frame(target=""secondFrame"").
When I ckicks first time on the Action1 then the second frame gets result of the action1 - OK.(Action executed)
But if I clicks second time on the button the first frame is in the second frame - WRONG. (Action didn't execute) Must be result as in previous step.
Third time when I ckicks on the Action1 then the second frame gets result of the action1 - OK.
Fourth - WRONG an so on.


I found if action doesn't redirect to another page then it seems OK. 
Action executes each time when I press an action button on the first page.

I have tried this sample using SUN RI and everything OK.
",MYFACES-581
"The tree2 renderer can cause duplicate id problems. The result is similar/ identical to MYFACES-35.
It seems that calling context.getViewRoot().createUniqueId() in the renderer messes up the component tree.

Component tags in the jsp page within the tree or after it call internally UIComponentTag.findComponent().
In this method the component of the parent tag is resolved ... somehow code is influenced by the call of context.getViewRoot().createUniqueId() in the treerenderer. While testing I found out that in case of the duplicate id problem, the resolved parent component for the tag is the same component (but not the same instance!) that is created with the processed component tag.

I created a patch, that makes the call to context.getViewRoot().createUniqueId() in the HTMLTreeRenderer obsolete, but it might be a general issue that calling context.getViewRoot().createUniqueId() within the lifecycle may corrupt the component tree. ",MYFACES-580
"I posted to the dev list about this, but as it seems my post was missed, I thought I should raise a JIRA issue since this could end up in a lot of people getting errors after downloading the new  release and including the myfaces-all.jar in their current projects.

The myfaces-all.jar in the release build is missing the faces-config.xml for the tomahawk components.  I tried it with my own internal applications as well as the example apps, and they both are unable to locate any of the tomahawk components when using myfaces-all.jar instead of the three seperate jars.  ",MYFACES-579
Dutch version of javax.faces.Message.properties,MYFACES-578
"<t:inputDate> (client-rendered) gives the appearance of allowing one to select the year, but, when one does this, nothing happens; the year does not get selected.  This is a major problem for our application at the moment.",MYFACES-577
"In the current version I get a NullPointerException in line 311
when I have a String[] which is initilized, but has no values
like: String[] base = new String[5];

current:
    if (base.getClass().isArray())
    {
        if (base instanceof Object[]) {
            Object[] array = (Object[]) base;
            return array[index].getClass().getComponentType();
        } else {
            return base.getClass().getComponentType();
        }
    }

my proposal:
    if (base.getClass().isArray())
    {
        if (base instanceof Object[] && ((Object[])base)[index] != null) {
            Object[] array = (Object[]) base;
            return array[index].getClass().getComponentType();
        } else {
            return base.getClass().getComponentType();
        }
    }
",MYFACES-576
"The HtmlLabelRenderer exits if the ""for"" attribute is null - the one of the RI doesnt. I think it would be sufficient to just log a warning in that case",MYFACES-575
"This is a request to enhance the rendering capability of the HtmlSelectManyCheckbox component.  Right now, this component can only render a single row or column of checkboxes.  Often it is useful to be able to render an X by X grid of checkboxes.  I have added the ability to acheive this type of rendering by introducing a new tag attribute called ""layoutWidth"" which is interpreted along with the ""layout"" attribute as follows:

If layout=lineDirection and layoutWidth=3 and there are 13 checkboxes the checkboxes will be rendered as follows where each [xx] is a checkbox:

 [01] [04] [07] [10][13]
 [02] [05] [08] [11]
 [03] [06] [09] [12]

You can see that for lineDirection layouts, the layoutWidth is interpreted as rows.

If the layout=pageDirection and layoutWidth=3 and there are 13 checkboxes, the rendering changes to:

 [01] [02] [03]
 [04] [05] [06]
 [07] [08] [09]
 [10] [11] [12]
 [13]

For pageDirection layouts, the layoutWidth is interpreted as columns.

If the layoutWidth is not specified, the width can be assumed to be 1 which would make the component render like the original.

I chose 13 checkboxes here to demonstrate that the rendering can handle the case where the number of checkboxes isn't evenly divisible by the layoutWidth.

I am not sure if this enhancement can be made directly to the HtmlSelectManyCheckbox component, or if it is more appropriate to create a brand new component in the Tomahawk project that extends the original one.  I will first attach patches that change the behavior of the original component, and wait for instructions as to whether or not these patches are appropriate.  These patches are meant to be applied to the myfaces-api, myfaces-impl, and myfaces-share directories.

",MYFACES-574
"I have a inputText binding with a managed bean and i got this error when the JBoss Application Server was trying to replicate the HTTP session in a cluster environment. From my point of view, every JSF components should be serializable/externalizable.

java.io.NotSerializableException: javax.faces.component.html.HtmlInputText
	at java.io.ObjectOutputStream.writeObject0(Unknown Source)
	at java.io.ObjectOutputStream.defaultWriteFields(Unknown Source)
	at java.io.ObjectOutputStream.writeSerialData(Unknown Source)
	at java.io.ObjectOutputStream.writeOrdinaryObject(Unknown Source)
	at java.io.ObjectOutputStream.writeObject0(Unknown Source)
	at java.io.ObjectOutputStream.writeObject(Unknown Source)
	at java.util.HashMap.writeObject(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor121.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at java.io.ObjectStreamClass.invokeWriteObject(Unknown Source)
	at java.io.ObjectOutputStream.writeSerialData(Unknown Source)
	at java.io.ObjectOutputStream.writeOrdinaryObject(Unknown Source)
	at java.io.ObjectOutputStream.writeObject0(Unknown Source)
	at java.io.ObjectOutputStream.defaultWriteFields(Unknown Source)
	at java.io.ObjectOutputStream.writeSerialData(Unknown Source)
	at java.io.ObjectOutputStream.writeOrdinaryObject(Unknown Source)
	at java.io.ObjectOutputStream.writeObject0(Unknown Source)
	at java.io.ObjectOutputStream.writeObject(Unknown Source)
	at org.jboss.invocation.MarshalledValue.<init>(MarshalledValue.java:57)
	at org.jboss.web.tomcat.tc5.session.JBossCacheService.getMarshalledValue(JBossCacheService.java:538)
	at org.jboss.web.tomcat.tc5.session.JBossCacheService.putSession(JBossCacheService.java:155)
	at org.jboss.web.tomcat.tc5.session.SessionBasedClusteredSession.processSessionRepl(SessionBasedClusteredSession.java:161)
	at org.jboss.web.tomcat.tc5.session.JBossCacheManager.processSessionRepl(JBossCacheManager.java:475)
	at org.jboss.web.tomcat.tc5.session.JBossCacheManager.storeSession(JBossCacheManager.java:256)
	at org.jboss.web.tomcat.tc5.session.InstantSnapshotManager.snapshot(InstantSnapshotManager.java:38)
	at org.jboss.web.tomcat.tc5.session.ClusteredSessionValve.invoke(ClusteredSessionValve.java:91)
	at org.jboss.web.tomcat.security.JaccContextValve.invoke(JaccContextValve.java:59)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:126)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:105)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:107)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:148)
	at org.apache.jk.server.JkCoyoteHandler.invoke(JkCoyoteHandler.java:307)
	at org.apache.jk.common.HandlerRequest.invoke(HandlerRequest.java:385)
	at org.apache.jk.common.ChannelSocket.invoke(ChannelSocket.java:748)
	at org.apache.jk.common.ChannelSocket.processConnection(ChannelSocket.java:678)
	at org.apache.jk.common.SocketConnection.runIt(ChannelSocket.java:871)
	at org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:684)
	at java.lang.Thread.run(Unknown Source)",MYFACES-573
"A freshly checked out build failes with an xml error, here is the error:

 [xslt] Processing C:\development\workspacemyeclipse\current\build\dist\temp\myfaces_all.tld.4 to C:\development\workspacemyeclipse\current\build\dist\temp\myfaces_all.tld
     [xslt] Loading stylesheet C:\development\workspacemyeclipse\current\sandbox\tld\misc\resolve_entities.xsl
     [xslt] C:/development/workspacemyeclipse/current/build/dist/temp/myfaces_all.tld.4:951: Fatal Error! Referenz auf nicht definierte Entität ""&spec_img_attributes;""
     [xslt] Failed to process C:\development\workspacemyeclipse\current\build\dist\temp\myfaces_all.tld.4

BUILD FAILED
C:\development\workspacemyeclipse\current\build\build.xml:703: The following error occurred while executing this line:
C:\development\workspacemyeclipse\current\build\build.xml:819: Fatal error during transformation


the line causing the bug in the ant file is
  <ant target=""merge-sandbox""/>


Environment eclipse... ant build maybe this is just an xml parser problem, but you guys should look into it
",MYFACES-572
"Somebody must have pushed a case senstive double checkin into the svn server, a checkout on a windows box 
of the current directory causes all svn clients under windows to choke with following error:


 A  C:/development/workspace/current/examples/sandbox/inc/head.inc
    A  C:/development/workspace/current/examples/sandbox/inputSuggest.jsp
    Problem running log
svn: In directory 'C:\development\workspace\current\examples\sandbox'
Das System kann die angegebene Datei nicht finden.
svn: Can't copy 'C:\development\workspace\current\examples\sandbox\.svn\tmp\text-base\autoupdatedatatable.jsp.svn-base' to 'C:\development\workspace\current\examples\sandbox\autoupdatedatatable.jsp.tmp': Das System kann die angegebene Datei nicht finden. 

which means it cannot find the specified file, a short bugreport on the subclipse mailinglist revealed following answer by the local guru there, after he meditated on the problem:

This has nothing to do with Subclipse, the command line also fails to 
check that out.  The problem is that you have two files in the repository 
with the same name but different case.  Your filesystem does not support 
that.
Someone needs to delete one of the two files.

You can also check this search to see how other have handled it:

<http://www.google.com/custom?domains=svn.haxx.se&q=svn%3A+Can%27t+copy&sa=Search&sitesearch=svn.haxx.se&client=pub-9313125053076989&forid=1&channel=8989477434&ie=ISO-8859-1&oe=ISO-8859-1&cof=GALT%3A%230066CC%3BGL%3A1%3BDIV%3A%23999999%3BVLC%3A336633%3BAH%3Acenter%3BBGC%3AFFFFFF%3BLBGC%3AFF9900%3BALC%3A0066CC%3BLC%3A0066CC%3BT%3A000000%3BGFNT%3A666666%3BGIMP%3A666666%3BFORID%3A1%3B&hl=en>



",MYFACES-571
"The value of the SelectItem is converted to String before it checked for equality against the current value which is still a complex value if it was returned by UISelectOne.getValue().

I will commit a fix for this.",MYFACES-570
"The onload overriding does not work in Firefox. You can test it by simple adding of ""<body onload=""alert('test')"""">.

If the onload is set in the html document the x:inputCalendar popup window does not open and the variable ""jscalendarBPageLoaded"" still remains with the default value ""false"". The popup calendar window is then never shown.",MYFACES-569
"According to the spec (section 9.4.8), f:param should not have the attribute 'rendered' as it is not renderable...",MYFACES-567
After fixing MYFACES-509 the component t:buffer is throwing a duplicate id exception.,MYFACES-566
"t:dataList used to work with Sets, but it doesn't work now (returns the set instead of it's elements).",MYFACES-565
"if using an input component in a node facet, the processDecode, processValidation, processUpdate methods of nested UIInput component gets called even if the parent node wasn´t expanded.",MYFACES-564
"<h:outputFormat
 value=""#{msg.WVS_print_personal}"">
 <f:param id=""param_1"" name=""0"" value=""#{WVSForm.a_PersonalPrinterId}"" rendered=""#{!WVSForm.a_No_Personal_Printer}"" />
 <f:param id=""param_2"" name=""0"" value=""#{msg.WVS_print_personal_ERROR}"" rendered=""#{WVSForm.a_No_Personal_Printer}"" />
</h:outputFormat>

This doesen't work. The rendered true/false has no effect which param is used or not. I wanted to decide here, what should be inserted in the part of my Text.

Works as designed or error?",MYFACES-563
"When using the DataList component to iterate over a list of items, form elements (such as checkboxes, textfields, etc) do not get properly populated in the model on submit unless the items are contained in an otherwise uneccesary column.

I found out about this bug by stepping through the code and realizing that DataList extends the UIData component which currently only will process children of a column.  DataGrid uses the column metaphore.

The DataList should not require the use of a column becuase it does not make sense for a DataList.",MYFACES-561
The Tiles example does not work (as per Wendy's email a while back.)  I'm prepared to do the 1.1.0 tag and build but since we know we need this example I'll wait until we resolve this.  ,MYFACES-560
"Note: patch file following

- smaller generated Javascript code size:

The current version initializes array elements in separate statements, whereas my version initializes them in the array constructor, e.g.

  current version:

  var a = new Array();
  a[0] = 'foo';
  a[1] = 'bar';
  ...

  new version:

  var a = new Array('foo','bar',...);

This is important for big arrays containing (textual) small values in small-bandwidth environments and has no drawbacks.

- support for nested collections and maps:

Collections of collections, maps of collections, maps of maps of collections, etc. are supported. The nesting level is not limited (but will be, in practice, limited by stack size or the javascript interpreter). 

- correct JavaScript string escaping:

The new version uses StringEscapeUtils.escapeJavaScript() from the Jakarta Commons Lang library for generating JavaScript string constants.",MYFACES-559
"The current implementation of rowOnClick in t:dataTable generates the following template html:

<tr onclick=""....."">
  <td></td>
  <td></td>
</tr>

This sounds a logical implementation, but it has one severe drawback:
In Internet Explorer (yuk) and Firefox this implies that links in the columns (such as a command link) are no longer executed, because the <tr> onclick handler gets precedence.

I suggest to change the implementation to 
<tr>
  <td onclick="".....""></td>
  <td onclick="".....""></td>
</tr>

However, care must be taken that the onclick handler on the <td> attribute is NOT generated if the column contains an ActionSource. Otherwise it is still impossible to click on the underlying links :-)
",MYFACES-558
"An inputText with a convertNumber always sets the backing bean value to 0.
The validation(s) is(are) performed, and a convertion error is thrown if the data isn't valid, but the result is always 0.

Examples :
<h:inputText value=""#{paymentTermsFace.number}"" size=""4"">
	<f:convertNumber/>
</h:inputText>

<h:inputText value=""#{paymentTermsFace.delayNextMonthOnThe}"" size=""3"">
	<f:convertNumber integerOnly=""true""/>
	<f:validateLongRange minimum=""0"" maximum=""28""/>
</h:inputText>",MYFACES-557
"I have defined my own view selector that returns different values depending on the portlet mode (view, edit). Changing from view to edit works fine. But when I want to return to view mode (clicking on the appropriate button on the portlet decorator) the portal resumes view mode (button changes) but the content displayed is still the edit page.
",MYFACES-556
"Whenever  our page displays a (client-side) <t:inputCalendar> component, our console logs the following two messages:

[9/12/05 14:32:35:432 CDT] 6472ae35 WebGroup      E SRVE0026E: [Servlet Error]-[Error -  Tag Insert : Can&#39;t get definition &#39;left1.gif&#39;. Check if this name exist in definitions factory.]: javax.faces.FacesException: Error -  Tag Insert : Can't get definition 'left1.gif'. Check if this name exist in definitions factory.
	at org.apache.myfaces.context.servlet.ServletExternalContextImpl.dispatch(ServletExternalContextImpl.java:421)
	at org.apache.myfaces.application.jsp.JspViewHandlerImpl.renderView(JspViewHandlerImpl.java:228)
	at org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:299)
	at javax.faces.webapp.FacesServlet.service(FacesServlet.java:95)
	at com.ibm.ws.webcontainer.servlet.StrictServletInstance.doService(StrictServletInstance.java:110)
	at com.ibm.ws.webcontainer.servlet.StrictLifecycleServlet._service(StrictLifecycleServlet.java:174)
	at com.ibm.ws.webcontainer.servlet.IdleServletState.service(StrictLifecycleServlet.java:313)
	at com.ibm.ws.webcontainer.servlet.StrictLifecycleServlet.service(StrictLifecycleServlet.java:116)
	at com.ibm.ws.webcontainer.servlet.ServletInstance.service(ServletInstance.java:283)
	at com.ibm.ws.webcontainer.servlet.ValidServletReferenceState.dispatch(ValidServletReferenceState.java:42)
	at com.ibm.ws.webcontainer.servlet.ServletInstanceReference.dispatch(ServletInstanceReference.java:40)
	at com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:76)
	at org.apache.myfaces.component.html.util.ExtensionsFilter.doFilter(ExtensionsFilter.java:112)
	at com.ibm.ws.webcontainer.filter.FilterInstanceWrapper.doFilter(FilterInstanceWrapper.java:132)
	at com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:71)
	at com.ibm.ws.webcontainer.webapp.WebAppRequestDispatcher.handleWebAppDispatch(WebAppRequestDispatcher.java:1010)
	at com.ibm.ws.webcontainer.webapp.WebAppRequestDispatcher.dispatch(WebAppRequestDispatcher.java:592)
	at com.ibm.ws.webcontainer.webapp.WebAppRequestDispatcher.forward(WebAppRequestDispatcher.java:204)
	at com.ibm.ws.webcontainer.srt.WebAppInvoker.doForward(WebAppInvoker.java:125)
	at com.ibm.ws.webcontainer.srt.WebAppInvoker.handleInvocationHook(WebAppInvoker.java:286)
	at com.ibm.ws.webcontainer.cache.invocation.CachedInvocation.handleInvocation(CachedInvocation.java:71)
	at com.ibm.ws.webcontainer.srp.ServletRequestProcessor.dispatchByURI(ServletRequestProcessor.java:182)
	at com.ibm.ws.webcontainer.oselistener.OSEListenerDispatcher.service(OSEListener.java:334)
	at com.ibm.ws.webcontainer.http.HttpConnection.handleRequest(HttpConnection.java:56)
	at com.ibm.ws.http.HttpConnection.readAndHandleRequest(HttpConnection.java:615)
	at com.ibm.ws.http.HttpConnection.run(HttpConnection.java:449)
	at com.ibm.ws.util.ThreadPool$Worker.run(ThreadPool.java:912)
Caused by: javax.servlet.ServletException: Error -  Tag Insert : Can't get definition 'left1.gif'. Check if this name exist in definitions factory.
	at com.ibm.ws.webcontainer.jsp.servlet.JspServlet$JspServletWrapper.service(JspServlet.java:416)
	at com.ibm.ws.webcontainer.jsp.servlet.JspServlet.serviceJspFile(JspServlet.java:683)
	at com.ibm.ws.webcontainer.jsp.servlet.JspServlet.service(JspServlet.java:781)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:853)
	at com.ibm.ws.webcontainer.servlet.StrictServletInstance.doService(StrictServletInstance.java:110)
	at com.ibm.ws.webcontainer.servlet.StrictLifecycleServlet._service(StrictLifecycleServlet.java:174)
	at com.ibm.ws.webcontainer.servlet.IdleServletState.service(StrictLifecycleServlet.java:313)
	at com.ibm.ws.webcontainer.servlet.StrictLifecycleServlet.service(StrictLifecycleServlet.java:116)
	at com.ibm.ws.webcontainer.servlet.ServletInstance.service(ServletInstance.java:283)
	at com.ibm.ws.webcontainer.servlet.ValidServletReferenceState.dispatch(ValidServletReferenceState.java:42)
	at com.ibm.ws.webcontainer.servlet.ServletInstanceReference.dispatch(ServletInstanceReference.java:40)
	at com.ibm.ws.webcontainer.webapp.WebAppRequestDispatcher.handleWebAppDispatch(WebAppRequestDispatcher.java:1014)
	at com.ibm.ws.webcontainer.webapp.WebAppRequestDispatcher.dispatch(WebAppRequestDispatcher.java:592)
	at com.ibm.ws.webcontainer.webapp.WebAppRequestDispatcher.forward(WebAppRequestDispatcher.java:204)
	at org.apache.myfaces.context.servlet.ServletExternalContextImpl.dispatch(ServletExternalContextImpl.java:415)



[9/12/05 14:32:35:463 CDT] 3bd4ae34 WebGroup      E SRVE0026E: [Servlet Error]-[Error -  Tag Insert : Can&#39;t get definition &#39;right1.gif&#39;. Check if this name exist in definitions factory.]: javax.faces.FacesException: Error -  Tag Insert : Can't get definition 'right1.gif'. Check if this name exist in definitions factory.
	at org.apache.myfaces.context.servlet.ServletExternalContextImpl.dispatch(ServletExternalContextImpl.java:421)
	at org.apache.myfaces.application.jsp.JspViewHandlerImpl.renderView(JspViewHandlerImpl.java:228)
	at org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:299)
	at javax.faces.webapp.FacesServlet.service(FacesServlet.java:95)
	at com.ibm.ws.webcontainer.servlet.StrictServletInstance.doService(StrictServletInstance.java:110)
	at com.ibm.ws.webcontainer.servlet.StrictLifecycleServlet._service(StrictLifecycleServlet.java:174)
	at com.ibm.ws.webcontainer.servlet.ServicingServletState.service(StrictLifecycleServlet.java:333)
	at com.ibm.ws.webcontainer.servlet.StrictLifecycleServlet.service(StrictLifecycleServlet.java:116)
	at com.ibm.ws.webcontainer.servlet.ServletInstance.service(ServletInstance.java:283)
	at com.ibm.ws.webcontainer.servlet.ValidServletReferenceState.dispatch(ValidServletReferenceState.java:42)
	at com.ibm.ws.webcontainer.servlet.ServletInstanceReference.dispatch(ServletInstanceReference.java:40)
	at com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:76)
	at org.apache.myfaces.component.html.util.ExtensionsFilter.doFilter(ExtensionsFilter.java:112)
	at com.ibm.ws.webcontainer.filter.FilterInstanceWrapper.doFilter(FilterInstanceWrapper.java:132)
	at com.ibm.ws.webcontainer.filter.WebAppFilterChain.doFilter(WebAppFilterChain.java:71)
	at com.ibm.ws.webcontainer.webapp.WebAppRequestDispatcher.handleWebAppDispatch(WebAppRequestDispatcher.java:1010)
	at com.ibm.ws.webcontainer.webapp.WebAppRequestDispatcher.dispatch(WebAppRequestDispatcher.java:592)
	at com.ibm.ws.webcontainer.webapp.WebAppRequestDispatcher.forward(WebAppRequestDispatcher.java:204)
	at com.ibm.ws.webcontainer.srt.WebAppInvoker.doForward(WebAppInvoker.java:125)
	at com.ibm.ws.webcontainer.srt.WebAppInvoker.handleInvocationHook(WebAppInvoker.java:286)
	at com.ibm.ws.webcontainer.cache.invocation.CachedInvocation.handleInvocation(CachedInvocation.java:71)
	at com.ibm.ws.webcontainer.srp.ServletRequestProcessor.dispatchByURI(ServletRequestProcessor.java:182)
	at com.ibm.ws.webcontainer.oselistener.OSEListenerDispatcher.service(OSEListener.java:334)
	at com.ibm.ws.webcontainer.http.HttpConnection.handleRequest(HttpConnection.java:56)
	at com.ibm.ws.http.HttpConnection.readAndHandleRequest(HttpConnection.java:615)
	at com.ibm.ws.http.HttpConnection.run(HttpConnection.java:439)
	at com.ibm.ws.util.ThreadPool$Worker.run(ThreadPool.java:912)
Caused by: javax.servlet.ServletException: Error -  Tag Insert : Can't get definition 'right1.gif'. Check if this name exist in definitions factory.
	at com.ibm.ws.webcontainer.jsp.servlet.JspServlet$JspServletWrapper.service(JspServlet.java:416)
	at com.ibm.ws.webcontainer.jsp.servlet.JspServlet.serviceJspFile(JspServlet.java:683)
	at com.ibm.ws.webcontainer.jsp.servlet.JspServlet.service(JspServlet.java:781)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:853)
	at com.ibm.ws.webcontainer.servlet.StrictServletInstance.doService(StrictServletInstance.java:110)
	at com.ibm.ws.webcontainer.servlet.StrictLifecycleServlet._service(StrictLifecycleServlet.java:174)
	at com.ibm.ws.webcontainer.servlet.ServicingServletState.service(StrictLifecycleServlet.java:333)
	at com.ibm.ws.webcontainer.servlet.StrictLifecycleServlet.service(StrictLifecycleServlet.java:116)
	at com.ibm.ws.webcontainer.servlet.ServletInstance.service(ServletInstance.java:283)
	at com.ibm.ws.webcontainer.servlet.ValidServletReferenceState.dispatch(ValidServletReferenceState.java:42)
	at com.ibm.ws.webcontainer.servlet.ServletInstanceReference.dispatch(ServletInstanceReference.java:40)
	at com.ibm.ws.webcontainer.webapp.WebAppRequestDispatcher.handleWebAppDispatch(WebAppRequestDispatcher.java:1014)
	at com.ibm.ws.webcontainer.webapp.WebAppRequestDispatcher.dispatch(WebAppRequestDispatcher.java:592)
	at com.ibm.ws.webcontainer.webapp.WebAppRequestDispatcher.forward(WebAppRequestDispatcher.java:204)
	at org.apache.myfaces.context.servlet.ServletExternalContextImpl.dispatch(ServletExternalContextImpl.java:415)


The component appears to behave correctly after this (although the < and > characters for month navigation don't display until my cursor hovers over them).",MYFACES-555
"When submitting a page with a UISelectMany, I get the following stack trace.
This bug appeared last week.

java.util.ArrayList
javax.servlet.ServletException: java.util.ArrayList
	at javax.faces.webapp.FacesServlet.service(FacesServlet.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:252)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
	at org.apache.myfaces.component.html.util.ExtensionsFilter.doFilter(ExtensionsFilter.java:122)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:202)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
	at com.seanergie.filter.persistence.SessionsManagerFilter.doFilter(SessionsManagerFilter.java:44)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:202)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
	at com.seanergie.filter.authentication.LoginInterceptorFilter.doFilter(LoginInterceptorFilter.java:36)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:202)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:213)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:178)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:407)
	at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:126)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:105)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:107)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:148)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:856)
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.processConnection(Http11Protocol.java:744)
	at org.apache.tomcat.util.net.PoolTcpEndpoint.processSocket(PoolTcpEndpoint.java:527)
	at org.apache.tomcat.util.net.LeaderFollowerWorkerThread.runIt(LeaderFollowerWorkerThread.java:80)
	at org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:684)
	at java.lang.Thread.run(Thread.java:595)
Caused by:
java.lang.ClassCastException: java.util.ArrayList
	at javax.faces.component.UISelectMany$1.getConvertedValue(UISelectMany.java:267)
	at javax.faces.component._SelectItemsUtil.matchValue(_SelectItemsUtil.java:52)
	at javax.faces.component.UISelectMany.validateValue(UISelectMany.java:305)
	at javax.faces.component.UIInput.validate(UIInput.java:269)
	at javax.faces.component.UISelectMany.validate(UISelectMany.java:328)
	at javax.faces.component.UIInput.processValidators(UIInput.java:144)
	at javax.faces.component.UIForm.processValidators(UIForm.java:68)
	at javax.faces.component.UIComponentBase.processValidators(UIComponentBase.java:417)
	at javax.faces.component.UIViewRoot.processValidators(UIViewRoot.java:142)
	at org.apache.myfaces.lifecycle.LifecycleImpl.processValidations(LifecycleImpl.java:208)
	at org.apache.myfaces.lifecycle.LifecycleImpl.execute(LifecycleImpl.java:76)
	at javax.faces.webapp.FacesServlet.service(FacesServlet.java:94)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:252)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
	at org.apache.myfaces.component.html.util.ExtensionsFilter.doFilter(ExtensionsFilter.java:122)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:202)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
	at com.seanergie.filter.persistence.SessionsManagerFilter.doFilter(SessionsManagerFilter.java:44)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:202)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
	at com.seanergie.filter.authentication.LoginInterceptorFilter.doFilter(LoginInterceptorFilter.java:36)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:202)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:213)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:178)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:407)
	at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:126)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:105)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:107)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:148)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:856)
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.processConnection(Http11Protocol.java:744)
	at org.apache.tomcat.util.net.PoolTcpEndpoint.processSocket(PoolTcpEndpoint.java:527)
	at org.apache.tomcat.util.net.LeaderFollowerWorkerThread.runIt(LeaderFollowerWorkerThread.java:80)
	at org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:684)
	at java.lang.Thread.run(Thread.java:595)",MYFACES-554
"Oliver, I assigned this to you because I have this bug only since your last changes.

Here is that bug report with the Stack Trace.
You will see the NPE at WebXml.java:90

Error Report
HTTP Status : 500
Date : 2005-09-12 11:18:50
User IP Address : 10.0.0.101
URL : http://10.0.0.10/windsOfCabarete/forum/edit-jsf.jsf

Request Parameters
None.
Headers
host: 10.0.0.10
user-agent: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.7.10) Gecko/20050720 Fedora/1.0.6-1.1.fc4 Firefox/1.0.6
accept: text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5
accept-language: fr-fr,en-us;q=0.7,en;q=0.3
accept-encoding: gzip,deflate
accept-charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7
keep-alive: 300
connection: keep-alive
referer: http://10.0.0.10/windsOfCabarete/
cookie: JSESSIONID=10F2F1BA6862585895A9F10E99B920B3

Attributes
Request attributes
javax.servlet.forward.request_uri: /windsOfCabarete/forum/edit-jsf.jsf
javax.servlet.forward.context_path: /windsOfCabarete
javax.servlet.forward.servlet_path: /forum/edit-jsf.jsf
javax.servlet.forward.path_info: /errorHandler.jsp
javax.servlet.error.servlet_name: Faces Servlet
com.seanergie.web.util.SecureRedirect: Disabled
javax.servlet.error.message: 
javax.servlet.error.exception: javax.servlet.ServletException
javax.servlet.error.request_uri: /windsOfCabarete/forum/edit-jsf.jsf
org.apache.myfaces.component.html.util.ExtensionFilter.doFilterCalled: true
javax.servlet.error.status_code: 500
class org.apache.myfaces.renderkit.html.util.JavascriptUtils.OLD_VIEW_ID: /forum/edit-jsf.jsp

Session attributes
currentAdNumber: 0

Exception
null
javax.servlet.ServletException
	at javax.faces.webapp.FacesServlet.service(FacesServlet.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:252)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
	at org.apache.myfaces.component.html.util.ExtensionsFilter.doFilter(ExtensionsFilter.java:122)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:202)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
	at com.seanergie.filter.persistence.SessionsManagerFilter.doFilter(SessionsManagerFilter.java:44)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:202)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
	at com.seanergie.filter.authentication.LoginInterceptorFilter.doFilter(LoginInterceptorFilter.java:36)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:202)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:213)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:178)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:407)
	at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:126)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:105)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:107)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:148)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:856)
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.processConnection(Http11Protocol.java:744)
	at org.apache.tomcat.util.net.PoolTcpEndpoint.processSocket(PoolTcpEndpoint.java:527)
	at org.apache.tomcat.util.net.LeaderFollowerWorkerThread.runIt(LeaderFollowerWorkerThread.java:80)
	at org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:684)
	at java.lang.Thread.run(Thread.java:595)
Caused by:
java.lang.NullPointerException
	at org.apache.myfaces.webapp.webxml.WebXml.getFacesServletMappings(WebXml.java:90)
	at org.apache.myfaces.application.jsp.JspViewHandlerImpl.getServletMapping(JspViewHandlerImpl.java:347)
	at org.apache.myfaces.application.jsp.JspViewHandlerImpl.renderView(JspViewHandlerImpl.java:199)
	at org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:300)
	at javax.faces.webapp.FacesServlet.service(FacesServlet.java:95)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:252)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
	at org.apache.myfaces.component.html.util.ExtensionsFilter.doFilter(ExtensionsFilter.java:122)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:202)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
	at com.seanergie.filter.persistence.SessionsManagerFilter.doFilter(SessionsManagerFilter.java:44)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:202)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
	at com.seanergie.filter.authentication.LoginInterceptorFilter.doFilter(LoginInterceptorFilter.java:36)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:202)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:213)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:178)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:407)
	at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:126)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:105)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:107)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:148)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:856)
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.processConnection(Http11Protocol.java:744)
	at org.apache.tomcat.util.net.PoolTcpEndpoint.processSocket(PoolTcpEndpoint.java:527)
	at org.apache.tomcat.util.net.LeaderFollowerWorkerThread.runIt(LeaderFollowerWorkerThread.java:80)
	at org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:684)
	at java.lang.Thread.run(Thread.java:595)",MYFACES-553
"I'm trying to write some JSF portlets within one portlet application
but encountered some problems concerning navigation rules when I
put more than one JSF portlet per portal page.

When I put just one portlet on my page everything concerning the
navigation rules (with <h:commandButton action=""p1next"" value=""go on""
/> stuff) works fine and I get to the next view.

But when I put a second faces portlet on the page navigation and invoking
actions on backing beans in the second portlet just doesn't work at all.

If I remove both portlets and put the second portlet on the page again (so that
I'm having just one portlet again) this portlet works fine as well. So I assume
that navigation settings in faces-config.xml must be correct. It has
something to do
with the arrangement of two faces portlets on the portal page so that
the second one
stops working as expected.

I also tried to use distinct IDs for all ui-components and also 
distinct <from-output>-values but that doesn't help

Thanks
zeroconf


Attached are the important parts of my web.xml, faces-config.xml and portlet.xml

web.xml
============================

<?xml version=""1.0""?>
<!DOCTYPE web-app PUBLIC ""-//Sun Microsystems, Inc.//DTD Web
Application 2.3//EN"" ""http://java.sun.com/dtd/web-app_2_3.dtd"">

<web-app>
       <display-name>PROJECT_NAME</display-name>

       <context-param>
               <param-name>company_id</param-name>
               <param-value>liferay.com</param-value>
       </context-param>
       <context-param>
               <param-name>javax.faces.STATE_SAVING_METHOD</param-name>
               <param-value>client</param-value>
       </context-param>
       <context-param>
               <param-name>javax.faces.application.CONFIG_FILES</param-name>
               <param-value>/WEB-INF/faces-config.xml</param-value>
       </context-param>
       <listener>

<listener-class>com.liferay.portal.servlet.PortletContextListener</listener-class>
       </listener>
       <listener>

<listener-class>org.apache.myfaces.webapp.StartupServletContextListener</listener-class>
       </listener>
       <servlet>
               <servlet-name>PROJECT_NAME</servlet-name>

<servlet-class>com.liferay.portal.servlet.PortletServlet</servlet-class>
               <init-param>
                       <param-name>portlet-class</param-name>

<param-value>org.apache.myfaces.portlet.MyFacesGenericPortlet</param-value>
               </init-param>
               <load-on-startup>0</load-on-startup>
       </servlet>
       <servlet>
               <servlet-name>FacesServlet</servlet-name>
               <servlet-class>javax.faces.webapp.FacesServlet</servlet-class>
               <load-on-startup>1</load-on-startup>
       </servlet>
       <servlet-mapping>
               <servlet-name>PROJECT_NAME</servlet-name>
               <url-pattern>/PROJECT_NAME/*</url-pattern>
       </servlet-mapping>
       <taglib>
               <taglib-uri>http://java.sun.com/portlet</taglib-uri>

<taglib-location>/WEB-INF/tld/liferay-portlet.tld</taglib-location>
       </taglib>
</web-app>


faces-config.xml:
==================

<?xml version=""1.0""?>
<!DOCTYPE faces-config PUBLIC ""-//Sun Microsystems, Inc.//DTD
JavaServer Faces Config 1.1//EN""
""http://java.sun.com/dtd/web-facesconfig_1_1.dtd"">

<faces-config xmlns=""http://java.sun.com/JSF/Configuration"">
       <factory>

<faces-context-factory>org.apache.myfaces.context.MyFacesContextFactoryImpl</faces-context-factory>
       </factory>

       <!-- navigation for JSF portlet 1 -->
       <navigation-rule>
               <from-view-id>/jsp/jsf1/index.jsp</from-view-id>
               <navigation-case>
                       <from-outcome>p1next</from-outcome>
                       <to-view-id>/jsp/jsf1/n1.jsp</to-view-id>
               </navigation-case>
       </navigation-rule>
       <navigation-rule>
               <from-view-id>/jsp/jsf1/n1.jsp</from-view-id>
               <navigation-case>
                       <from-outcome>p1back</from-outcome>
                       <to-view-id>/jsp/jsf1/index.jsp</to-view-id>
               </navigation-case>
       </navigation-rule>

       <!-- navigation for JSF portlet 2 -->
       <navigation-rule>
               <from-view-id>/jsp/jsf2/index.jsp</from-view-id>
               <navigation-case>
                       <from-outcome>p2next</from-outcome>
                       <to-view-id>/jsp/jsf2/n1.jsp</to-view-id>
               </navigation-case>
       </navigation-rule>
       <navigation-rule>
               <from-view-id>/jsp/jsf2/n1.jsp</from-view-id>
               <navigation-case>
                       <from-outcome>p2back</from-outcome>
                       <to-view-id>/jsp/jsf2/index.jsp</to-view-id>
               </navigation-case>
       </navigation-rule>

</faces-config>

portlet.xml
=============================

<portlet>
               <portlet-name>jsf2</portlet-name>
               <display-name>jsf2</display-name>

<portlet-class>org.apache.myfaces.portlet.MyFacesGenericPortlet</portlet-class>
               <init-param>
                       <name>default-view</name>
                       <value>/jsp/jsf2/index.jsp</value>
               </init-param>
               <supports>
                       <mime-type>text/html</mime-type>
               </supports>
               <portlet-info>
                       <title>jsf2</title>
                       <short-title>jsf2</short-title>
                       <keywords>jsf2</keywords>
               </portlet-info>
</portlet>",MYFACES-549
"in rowStart method, current rowId get from Attributes map, convert toString(), and AFTER this compare to null.
If rowId really null, toString throws NullPointerException, and redering terminates ...
For correct work, compare to null must be BEFORE toString call .
patch included.",MYFACES-544
"If someone tries to do simultaneous client requests from the same HttpSession instance (i used a direct resubmit in the form tag's onsubmit handler which leads to two simultaneous requests) it will lead to concurrent access problems.

During my tests, it almost any time crashed in the UIViewRoot implementation. The reason is that it is not thread-safe which could be easily solved by synchronising the 4 process.... methods and the queueEvent method.
But the question is where to put the synchronisation, i also tried synchronising the service method of the FacesServlet class, so that only one HttpSession could run at the time (IMHO something desirable). That way the simultaneous request are processed one after the other.

But a further question arises then: How MyFaces handles the problem if two identically request are processed in the lifecycle - is this appart from the rendering (in my tests SocketExceptions occured as the connection has been reset before) a problem? Does it affect the state?

What are your opinions concerning this topic?",MYFACES-543
Use the servletPath and pathInfo of the current request to detect the corresponding faces servlet mapping instead of looking for the first mapping of a faces servlet.,MYFACES-542
The BooleanConverter does not currently save and restore state which means that it will only work the very first time it is instantiated.  It needs to implement the StateHolder interface.  I will attach a patch which resolves this problem.,MYFACES-540
"I'm new to JSF so I apologize in advance if this is not a bug and just a misunderstanding on my part on how JSF is supposed to work.

I have an issue where  I have a JSP with h:datatable which gets a List of objects from a backing bean. On a user's first request, the backing bean's method to retrieve the list is only called once. However, subsequent requests causes double execution of the method.",MYFACES-539
"If the rowId property of a <t:datatable> tag does not evaluate to a String, an ugly ClassCastException is thrown by renderRowStart() method of the HtmlTableRendererClass.

This is caused by :
String rowId = (String) uiData.getAttributes().get(JSFAttr.ROW_ID);

Instead of a cast to String, the toString() method should have been used....
(Then we could put a variable of type Int of Long in the rowId (which sounds natural)...)",MYFACES-538
"From the spec document page 5-13:
""For <list-entries>: 
1. Call the property getter, if it exists. 
2. If the getter returns null or doesn't exist, create a java.util.ArrayList, otherwise use the returned Object (an array or a java.util.List). 
3. If a List was returned or created in step 2), add all elements defined by nested <value> elements in the order they are listed, converting values defined by nested <value> elements to the type defined by <value-class>. If a value is given as a value binding expression, evaluate the reference and store the result, converting to <value-class> if necessary. If a <value-class> is not defined, use the value as-is (i.e., as a java.lang.String). Add null for each <nullvalue> element. 
4. If an array was returned in step 2), create a java.util.ArrayList and copy all elements from the returned array to the new List, wrapping elements of a primitive type. Add all elements defined by nested <value> elements as described in step 3). 
5. If a new java.util.List was created in step 2) and the property is of type List, set the property by calling the setter method, or log an error if there is no setter method. 
6. If a new java.util.List was created in step 2) and the property is a java array, convert the List into an array of the property type, and set it by calling the setter method, or log an error if there is no setter method. 
7. If a new java.util.List was created in step 4), convert the List to an array of the proper type for the property and set the property by calling the setter method, or log an error if there is no setter method.""

MyFaces skips Step 1 and creates a new ArrayList instance in any case.",MYFACES-536
"From the spec document page 5-12
""For <map-entries>: 
1. Call the property getter, if it exists. 
2. If the getter returns null or doesn't exist, create a java.util.HashMap, otherwise use the returned java.util.Map. 
3. Add all entries defined by nested <map-entry> elements in the order they are listed, converting key values defined by nested <key> elements to the type defined by <key-class> and entry values defined by nested <value> elements to the type defined by <value-class>. If a value is given as a value binding expression, evaluate the reference and store the result, converting to <valueclass> if necessary. If <key-class> and/or <value-class> are not defined, use java.lang.String. Add null for each <null-value> element.
4. If a new java.util.Map was created in step 2), set the property by calling the setter method, or log an error if there is no setter method.""

MyFaces is skipping step 1 and creates a new HashMap instance in any case.",MYFACES-535
"JspStateManagerImpl.writeState throws IllegalStateException if called in server state saving mode. The javadoc says: ""If the init parameter indicates that server side state saving should be used, this method must save the state in such a manner that it may be retrieved using only the viewId.""",MYFACES-534
"I have recently started to get the following exception thrown:

java.util.NoSuchElementException
	at org.apache.myfaces.util.SelectItemsIterator.next(SelectItemsIterator.java:67)
	at org.apache.myfaces.util.SelectItemsIterator.next(SelectItemsIterator.java:155)
	at org.apache.myfaces.renderkit.RendererUtils.internalGetSelectItemList(RendererUtils.java:487)
	at org.apache.myfaces.renderkit.RendererUtils.getSelectItemList(RendererUtils.java:461)
	at org.apache.myfaces.renderkit.html.HtmlRendererUtils.internalRenderSelect(HtmlRendererUtils.java:277)
	at org.apache.myfaces.renderkit.html.HtmlRendererUtils.renderListbox(HtmlRendererUtils.java:240)
	at org.apache.myfaces.renderkit.html.HtmlListboxRendererBase.encodeEnd(HtmlListboxRendererBase.java:73)
...

where the SelectItem list which causes the problem has no elements. However RendererUtil.internalGetSelectItemList does a hasNext() check, so this must be returning true for next() to be called.
",MYFACES-532
"If you click on the folder (as opposed to the +/- nav icon) of a node that has server side toggle, you will get an Invalid Bitmask exception.  This is because the folders have commandLinks associated with them and they are toggling the state of the node regardless of whether the node is a leaf or not.  Even though the TreeBacker adds the empty nodes as branches, the isLeaf method of TreeNodeBase is returning true b/c the child count is zero.  (That's a new twist to prevent the +/- icons from showing up on empty nodes.)

Solution is to remove the commandLinks from the folder nodes and only allow expansion of the folders by the nav icons.  Its possible to use <h:commandLink> in your folder facets by writing an actionListener that would check the leaf status before toggling the expanded state but that is an exercise left to the user.

I will also add a simple example that does allow <h:commandLink> (and disabled navigation icons).  This example will conditionally render the command link based on the leaf status.",MYFACES-531
"MyFacesGenericPortlet.java/nonFacesRequest() forces the content-type to be ""text/html"" even if the response type is already set.

It should not set it if it already has a non-null value.  If it is null, it should use the value from request.getResponseContentType() (unless that value is ""*"" in which case text/html would be fine)

This probably applies to the facesRender() method too.",MYFACES-530
"Deploying tiles.war from the 20050906 nightly build and navigating to http://localhost:8080/tiles gives:

HTTP Status 500 -
type Exception report
message
description The server encountered an internal error () that prevented it from fulfilling this request.

exception
javax.servlet.ServletException
	javax.faces.webapp.FacesServlet.service(FacesServlet.java:113)
	org.apache.myfaces.component.html.util.ExtensionsFilter.doFilter(ExtensionsFilter.java:122)

root cause
java.lang.NullPointerException
	org.apache.myfaces.application.jsp.JspTilesViewHandlerImpl.renderView(JspTilesViewHandlerImpl.java:165)
	org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:300)
	javax.faces.webapp.FacesServlet.service(FacesServlet.java:95)
	org.apache.myfaces.component.html.util.ExtensionsFilter.doFilter(ExtensionsFilter.java:122)

In the Tomcat console:
Sep 7, 2005 7:49:39 AM org.apache.myfaces.application.jsp.JspTilesViewHandlerImpl getDefinitionsFactory
SEVERE: No Tiles definition found. Specify Definition files by adding tiles-definitions param in your web.xml
Sep 7, 2005 7:49:56 AM org.apache.myfaces.application.jsp.JspTilesViewHandlerImpl getDefinitionsFactory
SEVERE: No Tiles definition found. Specify Definition files by adding tiles-definitions param in your web.xml
",MYFACES-529
"A  javax.faces.FacesException is thrown if duplicate Id´s are detected by the JspStateManagerImpl.checkForDuplicateIds().
However, this breaks the dataScroller component when a paginator with graphic images is used. (such as in the Data Scroller example (in simple.war)
",MYFACES-528
The getScrolling function should not be rendered outside of an html or body tag according to HTML-Spec.,MYFACES-527
"Hello,
 I realise there is a lot of fixes going into 1.0.10 version of myfaces. Is there a set date on when this version is going live or will be downloadable from the site?
Thanks,
Lenine",MYFACES-526
"From the spec (section 7.4.2, p5-10/11), when talking about the NavigationHandler:

<< Rule instances are
considered in the following order:

- An exact match of the view identifier against a <from-view-id> pattern that
does not end with an asterisk (""*"") character.
- For <from-view-id> patterns that end with an asterisk, an exact match on
characters preceding the asterisk against the prefix of the view id. If the
patterns for multiple navigation rules match, pick the longest matching prefix
first.
- If there is a <navigation-rule> with a <from-view-id> pattern of only an
asterisk, it matches any view identifier.>>

In myfaces something happens with the from-view-id's with asterisk. Lets illustrate a case:

1. <from-view-id>test3</from-view-id>
2. <from-view-id>test*</from-view-id>
3. <from-view-id>*</from-view-id>

I think that hibernate does not understand correctly the <from-view-id>'s with asterisk. For instance, if I am in the a view with id 'tes' (sic), the from-view-id used is the #2 when it should be the number #3.

",MYFACES-525
"Acording to the spec (section 5.3.1.3, p5-12), ""It is an error to configure cyclic references between managed beans"".
In the current implementation, a StackOverflowException is thrown in the org.apache.myfaces.config.ManagedBeanBuilder.buildManagedBean(ManagedBeanBuilder.java:44) if there is a cyclic reference. We should catch it and throw a FacesException instead...

(managedBeanCyclicReferenceTest)",MYFACES-524
"Acording to the spec (section 5.3.1.3, p5-11): 

""It is an error for a managed bean created through this facility to have a property
that points at an object stored in a scope with a (potentially) shorter life span.
Specifically, this means, for an object created with the specified <managed-beanscope>,
then <value> evaluations can only point at created objects with the
specified managed bean scope:
- none -- none
- application -- none, application
- session -- none, application, session
- request -- none, application, session, request""

I guess the ManagedBeanFactory should throw a FacesException in that case.

(managedBeanScopedReferencesTest)",MYFACES-523
"When setting the preserveDataModel attribute in a dataTable, a new _SerializableDataModel is internally build by MyFaces.

However, if the number of rows to display is less than the total number of possible rows, an IllegalArgumentException is thrown. This problem is caused by the following bunch of lines in the _SerializableDataModel constructor (public _SerializableDataModel(int first, int rows, DataModel dataModel)):

    
        _list = new ArrayList(rows);
        for (int i = 0; i < _rows; i++)
        {
            dataModel.setRowIndex(_first + i);
            if (!dataModel.isRowAvailable()) break;
            _list.add(dataModel.getRowData());
        }
        _rowIndex = -1;

As can be clearly seen, first the dataModel.setRowIndex is set, independently of whether the row is really available or not, as it is checked after.

The solution would be as simple as swapping the order:

        _list = new ArrayList(rows);
        for (int i = 0; i < _rows; i++)
        {
            if (!dataModel.isRowAvailable()) break;
            dataModel.setRowIndex(_first + i);
            _list.add(dataModel.getRowData());
        }
        _rowIndex = -1;
",MYFACES-522
"Errors in TLDs... Resin compains like:
log4j:WARN Please initialize the log4j system properly.
[19:06:20.731] com.caucho.xml.XmlParseException: jar:file:/C:/Development/Projec
ts/Ubs/WEB-INF/lib/myfaces-all.jar!/META-INF/myfaces_html.tld:2585: The followin
g text is not allowed in this context.
[19:06:20.731]
[19:06:20.731] ant
[19:06:20.731]
[19:06:20.731]
[19:06:20.731]
[19:06:20.731] <attribute> or
[19:06:20.731] <example> are expected,
[19:06:20.731] or </tag> may close.
",MYFACES-521
"I have a form which contains some inputText fields (one of which is required), and a dataTable which contains an inputText field and a selectOneMenu field, plus and inner dataTable containing inputText fields.

When a value is entered in the required inputText field, the form submits successfully. However, when the required field is left blank the following exception is thrown when processing the selectOneMenu field in the outer dataTable:
java.lang.NullPointerException
	at javax.faces.component.UIData.restoreDescendantComponentStates(UIData.java:221)
	at javax.faces.component.UIData.restoreDescendantComponentStates(UIData.java:233)
	at javax.faces.component.UIData.restoreDescendantComponentStates(UIData.java:233)
	at javax.faces.component.UIData.restoreDescendantComponentStates(UIData.java:233)
	at javax.faces.component.UIData.setRowIndex(UIData.java:191)
	at org.apache.myfaces.renderkit.html.HtmlTableRendererBase.encodeInnerHtml(HtmlTableRendererBase.java:135)
	at org.apache.myfaces.renderkit.html.HtmlTableRendererBase.encodeChildren(HtmlTableRendererBase.java:94)
	at javax.faces.component.UIComponentBase.encodeChildren(UIComponentBase.java:319)
	at org.apache.myfaces.renderkit.RendererUtils.renderChild(RendererUtils.java:444)
	at org.apache.myfaces.renderkit.RendererUtils.renderChildren(RendererUtils.java:427)
	at org.apache.myfaces.renderkit.RendererUtils.renderChild(RendererUtils.java:448)
	at org.apache.myfaces.renderkit.RendererUtils.renderChildren(RendererUtils.java:427)
	at org.apache.myfaces.renderkit.RendererUtils.renderChild(RendererUtils.java:448)
	at org.apache.myfaces.renderkit.RendererUtils.renderChildren(RendererUtils.java:427)
	at org.apache.myfaces.renderkit.RendererUtils.renderChild(RendererUtils.java:448)
	at org.apache.myfaces.renderkit.RendererUtils.renderChildren(RendererUtils.java:427)
	at org.apache.myfaces.renderkit.RendererUtils.renderChild(RendererUtils.java:448)
	at org.apache.myfaces.renderkit.RendererUtils.renderChildren(RendererUtils.java:427)
	at org.apache.myfaces.renderkit.html.HtmlGroupRendererBase.encodeEnd(HtmlGroupRendererBase.java:62)
	at javax.faces.component.UIComponentBase.encodeEnd(UIComponentBase.java:331)
	at javax.faces.webapp.UIComponentTag.encodeEnd(UIComponentTag.java:349)
	at javax.faces.webapp.UIComponentTag.doEndTag(UIComponentTag.java:253)
	at org.apache.myfaces.taglib.UIComponentBodyTagBase.doEndTag(UIComponentBodyTagBase.java:55)
	at org.apache.jsp.cppolls_jsp._jspx_meth_h_panelGroup_0(cppolls_jsp.java:297)
	at org.apache.jsp.cppolls_jsp._jspx_meth_f_subview_0(cppolls_jsp.java:255)
	at org.apache.jsp.cppolls_jsp._jspx_meth_f_view_0(cppolls_jsp.java:134)
...

The following change to UIData seems to fix the problem:
...
            if (descendantStateIterator != null
                    && descendantStateIterator.hasNext())
            {
            	System.out.println(""has dsi"");
                Object[] object = (Object[]) descendantStateIterator.next();
                childState = object[0];
                descendantState = object[1];

                if (component instanceof EditableValueHolder && childState != null)
                {
                    ((EditableValueHolderState) childState)
                            .restoreState((EditableValueHolder) component);
                }
            }
...

However, should this patch be necessary, or is there a problem elsewhere?",MYFACES-520
"To get more valid HTML within portlets, it would be a good idea to support inline CSS by the <x:stylesheet>-tag.
Probably there is an additional property ""inline=false"" which is by default set to false. 
Then the behaviour is like the current version: a link tag is gerenated. This link-tag has to be located within the head-tag as specified in HTML.
If inline=""true"" the content of the css-file should be included within the current page at the location the tag occured, like:
<style>....</style>",MYFACES-519
Setting readonly attribute to true on an inputDate component causes the combo box for the month doesn't rendered as readonly (nor disabled),MYFACES-518
"If the config file is named faces-config.xml and it is configured web.xml 

    <context-param>
        <param-name>javax.faces.CONFIG_FILES</param-name>
        <param-value>/WEB-INF/faces-config.xml</param-value>
    </context-param>

it is parsed twice by org.apache.myfaces.config.FacesConfigurator -- once in feedWebAppConfig() and once again in feedContextSpecifiedConfig().

The result is, that for example configured PhaseListeners are instantiated twice and both called during lifecycle.

feedContextSpecifiedConfig() should skip /WEB-INF/faces-config.xml, because this is read in by feedWebAppConfig().

",MYFACES-517
"The sample application (simple.war) does not deploy on WebLogic 9.0.  The following in web.xml does not seem to pass the validation (param-name/param-value before description element):

<context-param>
  <param-name>javax.faces.CONFIG_FILES</param-name>
  <param-value>/WEB-INF/examples-config.xml</param-value>
  <description>
    Comma separated list of URIs of (additional) faces config files.
    (e.g. /WEB-INF/my-config.xml)
    See JSF 1.0 PRD2, 10.3.2
  </description>
</context-param>

This works (description element before param-name element):
<context-param>
  <description>
    Comma separated list of URIs of (additional) faces config files.
    (e.g. /WEB-INF/my-config.xml)
    See JSF 1.0 PRD2, 10.3.2
  </description>
  <param-name>javax.faces.CONFIG_FILES</param-name>
  <param-value>/WEB-INF/examples-config.xml</param-value>
</context-param>
",MYFACES-515
A NullPointerException must be thrown if the renderer argument is null when passed to RenderKit.addRenderer().,MYFACES-514
selectItem renders just one of every two items in the collection. It seems to me that next() method called twice in somewhere,MYFACES-513
"In MSIE 6 when using standard compilance mode (eg. using XHTML doctype) the document.body.scrollTop and other properties does'n work.

See http://www.quirksmode.org/viewport/compatibility.html for correct compatibile code.

Affected files: JavascriptUtils.java, JSPopup.js and maybe others",MYFACES-512
"Acording to the spec (javadocs), when passing an invalid factory to FactoyFinder.getFactory a IllegalArgumentException must be thrown and not an IllegalStateException.",MYFACES-511
"Acording to the spec (javadocs), when a null is passed to FactoryFinder.getFactory a NPE is expected and not an IllegalStateException (which is expected if factoryName does not identify a standard JavaServer Faces factory name).",MYFACES-510
"Acording to the javadocs, the method StateManager.saveSerializedView must throw an IllegalStateException if more than one component or facet within the same NamingContainer in this view has the same non-null component id.",MYFACES-509
"t:inputHtml is not working when trying to set 'type' so that it handles the whole HTML document (not fragment)

Tld tolds:

<t:inputHtml value=""String""
                style=""CSSClass""
                fallback=""{true|false}""
                type=""Constant""
  ...
  type - The type of the value. It can be either fragment for an HTML fragment (default) or document for a full HTML document, with head, title, body, ... tags.
  ...

When trying to set 'type'  to 'document' or 'fragment' (or 'true' or 'false') myfaces throws exception:
'Could not set property type of component HTMLeditor'

If I understood correctly the 'type' is first handled as boolean but later as string...

InputHtmlTag:
protected void setProperties(UIComponent component) {
        super.setProperties(component);
        setStringProperty(component, ""style"", style);
        setStringProperty(component, ""styleClass"", styleClass);
        setStringProperty(component, ""fallback"", fallback);
        setBooleanProperty(component, ""type"", type);
        ...


InputHtml.java:
public String getType(){
        if (_type != null)
            return _type;
        ValueBinding vb = getValueBinding(""type"");
        return vb != null ? (String)vb.getValue(getFacesContext()) : ""fragment"";
 }

",MYFACES-508
"Acording to the spec (javadocs), an EvaluationException must be thrown if an exception is thrown while testing the property (the thrown exception must be included as the cause property of this exception)",MYFACES-507
"DateTimeConverter.getTimeZone should return the default time of the GMT zone by default, and not null.",MYFACES-506
"For creating in-page scripts, MyFaces implementation use RsponceWriter.write() method with ""<!-- "" and ""-->"" strings. It not important in HTML_BASIC , but may produce troubles for creating XHTML output in future ( in most cases, all correct writed components can produce valid XHTML. ). For such reasons, more correct will be use ResponseWriter.writeComment method for scripts & styles. In implementation, single place for in-page script prodution - renderClearHiddenCommandFormParamsFunction in HtmlRendererUtils.
attached patch replace write to writeComment for this function.
Also, in Tomahawk components have many places for commented scripts & styles.",MYFACES-505
"Acording to the spec (javadocs), a ConverterException must be thrown when calling getAsObject() or getAsString() is called with an invalid pattern.",MYFACES-504
"According to the spec (javadocs), the valid type values are: 'currency', 'number', or 'percent', but not 'percentage'",MYFACES-503
"The source for class org.apache.myfaces.renderkit.html.HtmlLinkRendererBase is missing in the source distribution.

Maybe some more ;-) 
- HTML
- *Base",MYFACES-502
"According to the spec (javadocs), the NumberConverter.getTYpe() method must return 'number' by default if the type has not been modified. Now returns a null.

(numConverterGetSetTypeTest)",MYFACES-501
"A javax.faces.el.EvaluationException is thrown with ValueBinding referenced a non-existent property, but it should be an instance of PropertyNotFoundException, according to the javadocs.

(valBindingSetValuePNFETest)",MYFACES-500
"According to the spec (javadocs), a java.lang.IllegalArgumentException must be thrown if no matching character encoding can be found for the argument characterEncoding.",MYFACES-499
"According to the spec (javadocs), an java.lang.IllegalArgumentException must be thrown if no matching content type can be found in contentTypeList, or no matching character encoding can be found for the argument characterEncoding, for the method RenderKit.createResponseWriter().

(renderKitCreateResponseWriterInvalidContentTypeTest)",MYFACES-498
"According to the spec (javadocs) a NPE must be thrown if the parameters family or rendererType are null for the method RenderKit.getRenderer().

(renderKitGetRendererNPETest)",MYFACES-497
"According to the spec (javadoc), a NPE should be thrown if the parameters family or rendertype for the method RenderKit.addRenderer are null. At least, now this not happens for the family parameter.

(renderKitAddRendererNPETest)",MYFACES-496
"According to the spec (javadoc), a NPE should be thrown if the parameters family or rendertype for the method RenderKit.addRenderer are null. At least, now this not happens for the family parameter.

(renderKitAddRendererNPETest)",MYFACES-495
"According to the spec (javadoc) when invoking Lifecycle.removePhaseListener a NPE should be thrown if the PhaseListener is null.

(lifecycleRemovePhaseListenerNPETest)",MYFACES-494
"According to the spec, a NPE should be thrown when adding a null PhaseListener to the current Lifecycle...",MYFACES-493
,MYFACES-492
"Since last changes to UISelectOne validation, SelectOneCountry & SelectOneLanguage don't validate anymore.",MYFACES-491
,MYFACES-490
"I'm trying to use following code, but it doesn't work :(
I'm sure that <h:message> evaluates Value-Binding expression before the <h:outputLabel> is instantiated.

<!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Transitional//EN"" ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"">
<%@page contentType=""text/html""%>
<%@page pageEncoding=""UTF-8""%>
<%@taglib uri=""http://java.sun.com/jsf/html"" prefix=""h"" %>
<%@taglib uri=""http://java.sun.com/jsf/core"" prefix=""f"" %>
<html xmlns=""http://www.w3.org/1999/xhtml"">
<head>
<title>My first JSF</title>
<meta http-equiv=""Content-Type"" content=""text/html; charset=UTF-8"" />
<link href=""default.css"" rel=""stylesheet"" type=""text/css"" />
</head>
<body>
<f:view>
<h:form id=""calcForm""><div align=""center"">
<div><h:message for=""firstNumber"" styleClass=""message"" infoClass=""message-info"" warnClass=""message-warn"" errorClass=""message-error"" fatalClass=""message-fatal"" />
<h:message for=""secondNumber"" styleClass=""message"" infoClass=""message-info"" warnClass=""message-warn"" errorClass=""message-error"" fatalClass=""message-fatal"" />
<h:message for=""result"" styleClass=""message"" infoClass=""message-info"" warnClass=""message-warn"" errorClass=""message-error"" fatalClass=""message-fatal"" />
</div><table border=""0"" cellpadding=""0"" cellspacing=""0"" class=""dialog"">
 <tr>
  <td width=""100"" align=""right""><h:outputLabel value=""First Number"" for=""firstNumber"" /></td>
  <td width=""60""><h:inputText id=""firstNumber"" value=""#{CalcBean.firstNumber}""
		      							 required=""true"" styleClass=""text"" /></td>
 </tr>
 <tr>
  <td align=""right""><h:outputLabel value=""Second Number"" for=""secondNumber"" /></td>
  <td><h:inputText id=""secondNumber"" value=""#{CalcBean.secondNumber}""
		      							required=""true"" styleClass=""text"" /></td>
 </tr>
 <tr>
  <td align=""right""><h:outputLabel value=""Result"" for=""result"" /></td>
  <td><h:outputText id=""result"" value=""#{CalcBean.result}""/></td>
 </tr>
 <tr>
  <td colspan=""2""><table width=""100%"">
		 <tr>
			 <td align=""center"" width=""50%""><h:commandButton id=""submitAdd"" action=""#{CalcBean.add}"" 
            value=""add"" styleClass=""button"" /></td>
				<td align=""center"" width=""50%""><h:commandButton id=""submitMultiply"" action=""#{CalcBean.multiply}"" 
            value=""multiply"" styleClass=""button"" /></td>
			</tr>
		</table></td>
 </tr>
</table>
</div>
</h:form>
</f:view>
</body>
</html>",MYFACES-489
" I have a panelgrid inside form, inside tagfile.
the tag is called by my jsp insida a IDed subview inside an aliasbean declaration.

Everything works almost fine in this way.

But the problem happens when I use all the other (aliasbea, subview, tag) inside a panelgrid.

To understand the problem I have to say that the form evaluates <c:if ${myBean.somethig}> to decide if it has to use an inputText or a selectoneMenu.

The first time the page is showd it looks fine.
But after submit, when I have to see the selectonemenu, I still see the inputText.

It seams like it's not re-redered the stuff.

Any required info. please ask.

Thanks in advance.

",MYFACES-488
"I have two forms .
Each one with a submit button.
Each one inside a tagfile.
The tag is called by my jsp twice.
Each one insida a IDed subview  inside an aliasbean declaration.
Each aliasbean makes alias to bean declared inside a bean like memebers:
 Thsi is : I have a manages bean which has two memebes in it's declaration .java class.
Theese memers are the beans I'm mekeing alias.
The managed bean (which contains the two bean has the getters and setters for tose beans).

Everything works almost fine.

But sometimes the submit boutton of one of the forms cause error.

Another problem is that the validation of a field of a one of the forms makes apear the validation message in all the forms which have valid input fields.

Here is the error trace for the submit button problem.

StandardWrapperValve[Faces Servlet]: Servlet.service() for servlet Faces Servlet threw exception
javax.faces.FacesException: cannot add component with id 'submit' and path : {Component-Path : [Class: javax.faces.component.html.HtmlCommandButton,Id: submit]} to its parent component. This might be a problem due to duplicate ids.
        at org.apache.myfaces.context.servlet.ServletExternalContextImpl.dispatch(ServletExternalContextImpl.java:411)
        at org.apache.myfaces.application.jsp.JspViewHandlerImpl.renderView(JspViewHandlerImpl.java:280)
        at org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:300)
        at javax.faces.webapp.FacesServlet.service(FacesServlet.java:110)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:252)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
        at org.apache.myfaces.component.html.util.ExtensionsFilter.doFilter(ExtensionsFilter.java:112)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:202)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:214)
        at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:104)
        at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:520)
        at org.apache.catalina.core.StandardContextValve.invokeInternal(StandardContextValve.java:198)
        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:152)
        at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:104)
        at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:520)
        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:137)
        at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:104)
        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:118)
        at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:102)
        at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:520)
        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
        at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:104)
        at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:520)
        at org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:929)
        at org.apache.coyote.tomcat5.CoyoteAdapter.service(CoyoteAdapter.java:160)
        at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:799)
        at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.processConnection(Http11Protocol.java:705)
        at org.apache.tomcat.util.net.TcpWorkerThread.runIt(PoolTcpEndpoint.java:577)
        at org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:684)
        at java.lang.Thread.run(Thread.java:595)
Caused by: org.apache.jasper.JasperException: cannot add component with id 'submit' and path : {Component-Path : [Class: javax.faces.component.html.HtmlCommandButton,Id: submit]} to its parent component. This might be a problem due to duplicate ids.
        at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:372)
        at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:292)
        at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:236)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:802)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:252)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
        at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:696)
        at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:474)
        at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:409)
        at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
        at org.apache.myfaces.context.servlet.ServletExternalContextImpl.dispatch(ServletExternalContextImpl.java:405)
        ... 30 more


Regards

Thanks in advance.

MichaelJ


",MYFACES-487
"When I try to display the 'Sample 2' page I get the following Exception:

java.util.NoSuchElementException
	at java.util.AbstractList$Itr.next(AbstractList.java:427)
	at org.apache.myfaces.util.SelectItemsIterator.next(SelectItemsIterator.java:82)
	at org.apache.myfaces.renderkit.RendererUtils.internalGetSelectItemList(RendererUtils.java:487)
	at org.apache.myfaces.renderkit.RendererUtils.getSelectItemList(RendererUtils.java:470)
	at org.apache.myfaces.renderkit.html.HtmlRendererUtils.internalRenderSelect(HtmlRendererUtils.java:273)
	at org.apache.myfaces.renderkit.html.HtmlRendererUtils.renderListbox(HtmlRendererUtils.java:246)
	at org.apache.myfaces.renderkit.html.HtmlListboxRendererBase.encodeEnd(HtmlListboxRendererBase.java:56)
	at javax.faces.component.UIComponentBase.encodeEnd(UIComponentBase.java:331)
	at org.apache.myfaces.renderkit.RendererUtils.renderChild(RendererUtils.java:450)
	at org.apache.myfaces.renderkit.RendererUtils.renderChildren(RendererUtils.java:427)
	at org.apache.myfaces.renderkit.RendererUtils.renderChild(RendererUtils.java:448)
	at org.apache.myfaces.renderkit.RendererUtils.renderChildren(RendererUtils.java:427)
	at org.apache.myfaces.renderkit.html.HtmlGroupRendererBase.encodeEnd(HtmlGroupRendererBase.java:62)
	at javax.faces.component.UIComponentBase.encodeEnd(UIComponentBase.java:331)
	at javax.faces.webapp.UIComponentTag.encodeEnd(UIComponentTag.java:349)
	at javax.faces.webapp.UIComponentTag.doEndTag(UIComponentTag.java:253)
	at org.apache.myfaces.taglib.UIComponentBodyTagBase.doEndTag(UIComponentBodyTagBase.java:55)
	at org.apache.jsp.sample2_jsp._jspx_meth_h_panelGroup_0(sample2_jsp.java:254)
	at org.apache.jsp.sample2_jsp._jspx_meth_f_view_0(sample2_jsp.java:183)
	at org.apache.jsp.sample2_jsp._jspService(sample2_jsp.java:130)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:94)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:810)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:324)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:292)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:236)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:810)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:252)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:696)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:474)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:409)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.myfaces.context.servlet.ServletExternalContextImpl.dispatch(ServletExternalContextImpl.java:415)
	at org.apache.myfaces.application.jsp.JspViewHandlerImpl.renderView(JspViewHandlerImpl.java:234)
	at org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:300)
	at javax.faces.webapp.FacesServlet.service(FacesServlet.java:95)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:252)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
	at org.apache.myfaces.component.html.util.ExtensionsFilter.doFilter(ExtensionsFilter.java:122)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:202)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
	at org.jboss.web.tomcat.filters.ReplyHeaderFilter.doFilter(ReplyHeaderFilter.java:75)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:202)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:214)
	at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:104)
	at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:520)
	at org.apache.catalina.core.StandardContextValve.invokeInternal(StandardContextValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:152)
	at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:104)
	at org.jboss.web.tomcat.security.CustomPrincipalValve.invoke(CustomPrincipalValve.java:66)
	at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:102)
	at org.jboss.web.tomcat.security.SecurityAssociationValve.invoke(SecurityAssociationValve.java:162)
	at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:102)
	at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:520)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:137)
	at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:104)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:118)
	at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:102)
	at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:520)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
	at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:104)
	at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:520)
	at org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:929)
	at org.apache.coyote.tomcat5.CoyoteAdapter.service(CoyoteAdapter.java:160)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:799)
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.processConnection(Http11Protocol.java:705)
	at org.apache.tomcat.util.net.TcpWorkerThread.runIt(PoolTcpEndpoint.java:577)
	at org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:684)
	at java.lang.Thread.run(Thread.java:595)
",MYFACES-486
"Same tags into a subview require id.
If the second tag has no ID then I get this error.
I tested this in a page that redirect's itself to itself after submit a form.
the tags are inside the form , inside the subview. I get the error after submit.
setting id to the tags like outputText , I workarround this error.


HTTP Status 500 -

type Exception report

message

description The server encountered an internal error () that prevented it from fulfilling this request.

exception

javax.servlet.ServletException: javax.servlet.jsp.JspException: Duplicate component ID 'mysubviewID:_id1:_id6' found in view.
	org.apache.jasper.runtime.PageContextImpl.doHandlePageException(PageContextImpl.java:842)
	org.apache.jasper.runtime.PageContextImpl.handlePageException(PageContextImpl.java:779)
	org.apache.jsp.vercamino_jsp._jspService(vercamino_jsp.java:202)
	org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:94)
	javax.servlet.http.HttpServlet.service(HttpServlet.java:802)
	org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:324)
	org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:292)
	org.apache.jasper.servlet.JspServlet.service(JspServlet.java:236)
	javax.servlet.http.HttpServlet.service(HttpServlet.java:802)
	com.sun.faces.context.ExternalContextImpl.dispatch(ExternalContextImpl.java:322)
	com.sun.faces.application.ViewHandlerImpl.renderView(ViewHandlerImpl.java:147)
	com.sun.faces.lifecycle.RenderResponsePhase.execute(RenderResponsePhase.java:87)
	com.sun.faces.lifecycle.LifecycleImpl.phase(LifecycleImpl.java:200)
	com.sun.faces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:117)
	javax.faces.webapp.FacesServlet.service(FacesServlet.java:198)

root cause

java.lang.IllegalStateException: Duplicate component ID 'mysubviewID:_id1:_id6' found in view.
	com.sun.faces.application.StateManagerImpl.removeTransientChildrenAndFacets(StateManagerImpl.java:118)
	com.sun.faces.application.StateManagerImpl.removeTransientChildrenAndFacets(StateManagerImpl.java:126)
	com.sun.faces.application.StateManagerImpl.removeTransientChildrenAndFacets(StateManagerImpl.java:126)
	com.sun.faces.application.StateManagerImpl.removeTransientChildrenAndFacets(StateManagerImpl.java:126)
	com.sun.faces.application.StateManagerImpl.saveSerializedView(StateManagerImpl.java:70)
	com.sun.faces.taglib.jsf_core.ViewTag.doAfterBody(ViewTag.java:169)
	org.apache.jsp.vercamino_jsp._jspService(vercamino_jsp.java:184)
	org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:94)
	javax.servlet.http.HttpServlet.service(HttpServlet.java:802)
	org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:324)
	org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:292)
	org.apache.jasper.servlet.JspServlet.service(JspServlet.java:236)
	javax.servlet.http.HttpServlet.service(HttpServlet.java:802)
	com.sun.faces.context.ExternalContextImpl.dispatch(ExternalContextImpl.java:322)
	com.sun.faces.application.ViewHandlerImpl.renderView(ViewHandlerImpl.java:147)
	com.sun.faces.lifecycle.RenderResponsePhase.execute(RenderResponsePhase.java:87)
	com.sun.faces.lifecycle.LifecycleImpl.phase(LifecycleImpl.java:200)
	com.sun.faces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:117)
	javax.faces.webapp.FacesServlet.service(FacesServlet.java:198)

note The full stack trace of the root cause is available in the Apache Tomcat/5.0 logs.
Apache Tomcat/5.0",MYFACES-485
"From UIForm.saveState javadoc:

""This method must not alter the state of the implementing object.""

MyFaces implementation resets isSubmitted to false and therefore violates the spec",MYFACES-484
"java.lang.ClassCastException: java.lang.String
        at javax.faces.component.UISelectMany.validateValue(UISelectMany.java:250)
        at javax.faces.component.UIInput.validate(UIInput.java:269)
        at javax.faces.component.UISelectMany.validate(UISelectMany.java:283)

submittedValue = """";
convertedValue returned by custom renderer = """"

=> attemt to cast String to Object[] ",MYFACES-483
As stated in the spec (javadocs) Application.getDefaultLocale() must return null if it has not been set explicitly.,MYFACES-482
"The spec (javadocs) states that the method Application.createConverter(class) must throw a FacesException if the Converter cannot be created.

(applicationCreateConverterByClassFETest)",MYFACES-481
Attributes enabledClass/disabledClass where introduced with JSF 1.1 for all HtmlSelect* components. The components itself already have both the enabledClass and disabledClass field. But support in the corresponding tabs and renderers is still missing.,MYFACES-480
add rowStyleClass and rowStyle attributes to t:datatable component to allow data specific styles for the <tr> element,MYFACES-479
"We had a minor problem using the very nice <t:inputDate/>: The dates we are working on have to be in GMT. With <h:outputText/> it is easy to use 
<f:convertDateTime timeZone=""GMT""/> to do the job. To get <t:inputDate timeZone=""GMT""/> to work I made the following patches on the HEAD of MyFaces.
 
Maybe you are interested in the patch and verify and commit my changes.",MYFACES-478
"If you use <x:jsValueChangeListener /> within a page of a portlet, there are exceptions thrown and the portlet is not renderd.
If I remove the listener everything is renderd properly.


If you enhance the sample_jsf_myfaces_portlet.war by a simple code like following, you can reproduce it (It should update the input field on changing the combobox):

<h:selectOneMenu id=""type"" value=""#{view.type}"" immediate=""true"">
		<f:selectItem itemValue=""A"" itemLabel=""A"" />
		<f:selectItem itemValue=""B"" itemLabel=""B"" />

		<x:jsValueChangeListener for=""typeValue"" property=""value"" expressionValue=""($destElem.value=$srcElem.value)"" />
</h:selectOneMenu>

<h:inputText id=""typeValue"" value=""#{view.type}"" />
",MYFACES-477
"Whenever the graphicImage component renders it's url attribute by passing it through the viewhandler (see org.apache.myfaces.renderkit.html.HtmlImageRendererBase.java: line 66-70), and encoded as an application-dependent url if required; if I set the image attribute for a commandButton component, it's image attribute rendered as it is (see org.apache.myfaces.renderkit.html.HtmlButtonRendererBase.java: line 91).",MYFACES-476
If a null is passed to ApplicationFactory.setApplication a NullPointerException must be thrown.,MYFACES-475
"JSF send CSS files but not Javascript files I verified it using Firefox, IE complains about it too.
When I request a page with JSCookMenu or Calendar (renderAsPopup=""true"") components I receive Javascript errors in Firefox like this: 

jscalendarSetImageDirectory is not defined
Arquivo-fonte: http://localhost:8080/test/test.jsf
Line: 44

jscalendarPopUpCalendar is not defined

All other non-javascript components works well.

Thanks in advance",MYFACES-474
"If there is no render kit configured via WEB-INF/faces-config.xml, ServletContext init param or META-INF/faces-config.xml then JSF implementation must check META-INF/services directory for a file with a filename equal to the name of the factory.  

From page 10-6 of the spec:

If a META-INF/services/{factory-class-name} resource is visible to the web application class loader for the calling application (typically as a result of being present in the manifest of a JAR file), its first line is read and assumed to be the name of the factory implementation class to use.",MYFACES-472
"In addition to the standard validation behavior inherited from UIInput, ensure that any specified value is equal to one of the available options. If it is not, enqueue an error message and set the valid property to false.

Source code contains documentation marking this as ""todo.""",MYFACES-471
"When in servlet mode, validation error messages do appear.  When in portlet mode, it seems that validation occurs but the messages are not shown.  Here is a snippet of the JSP:
			<h:panelGroup>
				<x:inputDate required=""true"" id=""dinnerStart"" type=""time"" value=""#{menubean.menu.dinnerStart}"">
					<f:validator validatorId=""cu.DateRangeValidator"" />
					<f:attribute name=""minimum"" value=""6:00 AM"" />
					<f:attribute name=""maximum"" value=""10:00 PM"" />
				</x:inputDate>
				<h:message for=""dinnerStart"" showDetail=""true"" />
			</h:panelGroup>",MYFACES-470
"Into startup of a web-app using jenia4faces component library (www.jenia.org), the class FacesConfigurator (method feedJarConfig) create a temp copy of the jenia4faces jar (a myfacesXXXX.jar into tomcat/temp-dir).
After processing of ""META-INF/faces-config.xml"" into the temporary jar, the file should be deleted but this DOES NOT HAPPEN.
No Exception is throw by myfaces but the file-system size increase.
A possibile cause is that the jenia4faces faces-config.xml includes other portion of XML by using the <!ENTITY popup SYSTEM ""jenia-popup-config.xml""> into DOCTYPE declaration.
It is possible (but only an idea) that if included files are not closed, than the jar can not be deleted.

Andrea Tessaro Porta
Founder Member of jenia.org
http://www.jenia.org 
",MYFACES-469
"From the spec (7.4.2)

If the logical outcome value passed to the handleNavigation() method is null, do not scan for matching rules. This is an indication that the current view should
be redisplayed.  (Apparently we are not returning the same viewId although I believe the correct view is still somehow rendered as I use null outcomes in my JSF all of the time.)",MYFACES-468
ResultDataModel.getWrappedData has to return an object equal to the value set using ResultDataModel.setWrappedData. The spec does not require the wrapped result to be converted to a set of rows as it is done in the current implementation.,MYFACES-466
"From the javadoc: In addition to the standard validation behavior inherited from UIInput, ensure that any specified value is equal to one of the available options. If it is not, enqueue an error message and set the valid property to false.

as the comment in the method body states:

      //TODO: see javadoc: iterate through UISelectItem and UISelectItems and check
        //current value against these items",MYFACES-465
UIInput.submittedValue is set to empty string even if there is no submitted value at all. This causes a ValueChangeEvent to be queued for ANY_PHASE although there was no value change from the submitted values.,MYFACES-464
"javax.faces.component._ComponentAttributesMap does not fullfil the Map contract because equals() is not implemented as required for Map:

public boolean equals(Object o)

    Compares the specified object with this map for equality. Returns true if the given object is also a map and the two Maps represent the same mappings. More formally, two maps t1 and t2 represent the same mappings if t1.entrySet().equals(t2.entrySet()). This ensures that the equals method works properly across different implementations of the Map interface.

",MYFACES-463
"I think the test for child.isTransient in line 449 of UIComponentBase has to be removed as the javadoc says

        * Call the processSaveState() method of all facets and children of this UIComponent in the order determined by a call to getFacetsAndChildren().

There is no ""unless the facet of child is transient"" so processSaveState has to be called for all facets/children whether they are transient or not
",MYFACES-462
"When trying to get the values from a SelectManyListbox that has no valuebinding, a null pointer occurs when the renderer util tries to convert the list of values.

In _SharedRenderedUtils.java, this section gets called if there is no value binding for the component

// Now, we have a converter...
        if (valueType == null)
        {
            // ...but have no idea of expected type
            // --> so let's convert it to an Object array
            int len = submittedValue.length;
            Object [] convertedValues = (Object []) Array.newInstance(arrayComponentType, len);
            for (int i = 0; i < len; i++)
            {
                convertedValues[i]
                    = converter.getAsObject(facesContext, component, submittedValue[i]);
            }
            return convertedValues;
        }

Since valueType is null, arrayComponentType is also null and never initialized to a value.  The Array.newInstance() call fails due to arrayComponentType being null.

Should this array be initialized with Object.class since the array is of Objects?",MYFACES-461
javax.faces.component._ComponentFacetMap.containsValue does not check for the given value but returns false in any case,MYFACES-460
"If your converter has a date format of  ""MM/DD/YYYY"" and you supply it the String ""9/5/05"" the date should *not* be allowed.  From the spec (javadoc): ""In all cases, parsing must be non-lenient; the given string must strictly adhere to the parsing format.""",MYFACES-459
"according the UIComponent.getAttributes javadoc the Map implementation returned by this method for any attempt to add a null key or value must throw a NullPointerException

The current implementation is correct for null keys but not does not check for null values.",MYFACES-458
"from the javadoc of UIComponent.findComponent

Throws:
    java.lang.IllegalArgumentException - if an intermediate identifier in a search expression identifies a UIComponent that is not a NamingContainer

That's not the case with the current implementation. If the path defined by the search expression contains a component which is not a NamingContainer no IllegalArgumentException is thrown but the search continues",MYFACES-457
"The enabledOnUserRole attribute of the tags in the the http://myfaces.apache.org/extensions taglib is not working properly. If I use this attribute with a role which is not assigned with the  current logged in user, the component will be enabled, and not diasabled.

As I see the problem is, that all class in the org.apache.myfaces.renderkit.html.ext which have isDisabled function is returning false where they should return true.
Eg. the current code is:
    protected boolean isDisabled(FacesContext facesContext, UIComponent uiComponent) {
        if ( ! UserRoleUtils.isEnabledOnUserRole(uiComponent) ) {
            return false;
        }  else {
            return super.isDisabled(facesContext, uiComponent);
        }
    }
 
But it sould be 'return true;'.",MYFACES-456
ResultSetDataModel has to be implemented to fullfil the JSF 1.1 spec. All methods throw UnsupportedOperationException at the moment,MYFACES-455
"In Portlet environment, if you put multiple portlets created by MyFaces to one page, the duplicated id is used on each portlets.",MYFACES-454
"inputCalendar (without popup) generates a javascript error in IE 6 when run as a portlet (in Pluto in uPortal 2.5.0).  

'elements.menuForm:_id0' is null or not an object

Moreover, clicking on any JSF link (calendar or otherwise) does nothing.  It all works fine in Firefox",MYFACES-452
"This is a proposal to add a special boolean converter and corresponding tag so that it can be configured as a child of other components using a syntax such as:

<h:outputText value=""#{backingBean.customer.enjoysJazz}"">
    <t:convertBoolean trueValue=""Yes"" falseValue=""No""/>
</h:outputText>

I will attach the source code and related patches to faces-config.xml and the appropriate tld.

See prior mailing list discussion:
http://www.mail-archive.com/users%40myfaces.apache.org/msg07673.html
",MYFACES-451
"I recently tried to use an <h:outputLabel> tag against a <t:inputText> tag and received a compiler error saying the id specified by the for=""..."" attribute was not found.  When I changed <h:outputLabel> to <t:outputLabel>, the compiler error went away.  If, instead, I changed <t:inputText> to <h:inputText>, the error also went away.

So it appears that one cannot use <h:outputLink> against a Tomahawk component; one must instead use <t:outputLink> against a Tomahawk (or non-Tomahawk) component.

To Summarize:

1. <t:outputLabel> against any other component works
2. <h:outputLabel> against any <t:...> component gets a compiler error saying referenced id not found
3. <h:outputLabel> against any <h:...> component works

This situation was encountered using IBM's RSA IDE.  I haven't tried it using any other IDE or compiler.",MYFACES-450
"I needed inputDate to not show and input the seconds when using
type=""both"". As I can think that most people will almost never want to
enter seconds too, I decided to introduce a new type called ""full"". Now
the behaviour is:
date - not changed
time - not changed
both - changed, show date, hours and minutes
full - new, has the original functionality of both, showing date and
time.",MYFACES-449
"I'd like to use an anchor with a commandLink, something like:
<h:commandLink action=""anAction#anAnchor""/>
with a navigation.xml like:
    <navigation-rule>
        <navigation-case>
            <from-outcome>anAction</from-outcome>
         	<to-view-id>/somePage.jsp</to-view-id>
         	<redirect/>
        </navigation-case>
    </navigation-rule>

and of course somePage.jsp would contain :
<a name=""anAnchor"">foo</a>

I just can't find any easy way to do that. It seems that struts has a anchor attribute on the link tag so I guess it's a known issue, maybe trivial in myfaces. Is it a real issue in MyFaces?
BTW, thanks a lot (a thousand times) for the great job your doing! I've been using myfaces 1.0.9 since months now an it's the first time I really run into a problem, my app is almost done. MyFaces does rock!",MYFACES-448
"The TreeNode interface is the hook for the backing bean developer, the user, into the tree2 framework. As such, the interface should pose minimal requirements for the user. It should only require from the user to implement those methods that are strictly needed for the framework to work, and leave as much freedom for the user as possible.

The patch included removes unnecessary methods. Apart from a minor change in TreeNodeBase, the change doesn't affect the existing tree2 code, nor the example, at all.

The patch also contains some documentation for the interface, and some suggestions for further changes.",MYFACES-447
If validation fails on a page containing an inputFileUpload control the state of all the fields is restored except for the inputFileUpload component.,MYFACES-446
If the year field is left blank the popup calandar will display horizontally.  The year field will show NaN.,MYFACES-445
"The tooltip attribute description on http://java.sun.com/j2ee/javaserverfaces/1.1/docs/tlddocs/h/message.html says that the tooltip content should be composed of the message detail text.  However, the tooltip content in MyFaces is getting set to the message summary text.  This happens in HtmlMessageRendererBase in the renderSingleFacesMessage() method.  The code sets the title to the summary if the tooltip is enabled.  Otherwise it uses the title attribute:

        String summary = getSummary(facesContext, message, facesMessage, messageClientId);
        String detail = getDetail(facesContext, message, facesMessage, messageClientId);

        String title = getTitle(message);
        boolean tooltip = isTooltip(message);

        if (title == null && tooltip)
        {
            title = summary;
        }

Instead it should use the detail as follows:

        String summary = getSummary(facesContext, message, facesMessage, messageClientId);
        String detail = getDetail(facesContext, message, facesMessage, messageClientId);

        String title = getTitle(message);
        boolean tooltip = isTooltip(message);

        if (title == null && tooltip)
        {
            title = detail;
        }

It might be argued that the tooltip should be set to the detail regardless of whether the title attribute is set at all since the description of the title attribute is ""Advisory title information about markup elements generated for this component.""  If that is the case then the code should look like this:

        String summary = getSummary(facesContext, message, facesMessage, messageClientId);
        String detail = getDetail(facesContext, message, facesMessage, messageClientId);

        String title = getTitle(message);
        boolean tooltip = isTooltip(message);

        if (tooltip)
        {
            title = detail;
        }",MYFACES-444
"I noticed a difference in behavior between MyFaces and the Sun RI in javax.faces.render.Renderer.encodeChildren().  The RI iterates though the children and renders them in succession whereas MyFaces simply asserts that the method arguments are non-null and returns, leaving the optional rendering of the children to the subclasses of Renderer.  I am not 100% sure which behavior is correct, but it seems like the spec, in section 8.2 and 3.1.12, indicates that the encodeChildren() method should do the work of creating the response data for each child. 

As things are now, there is the potential that someone using the RI could develop a renderer that doesn't override encodeChildren(), expecting the children of his/her component to render.  When this person switches to MyFaces, his/her component will not render its children anymore.

This discussion on the MyFaces Users mailing list led to me submitting this as an issue:
http://www.mail-archive.com/users%40myfaces.apache.org/msg07461.html",MYFACES-443
"If I don't specify the number of columns explicitly in my <h:panelGrid> tag, the following error message gets displayed at runtime on the console:

[8/24/05 10:22:59:335 CDT] 42dd42dd HtmlGridRende E org.apache.myfaces.renderkit.html.HtmlGridRendererBase  Wrong columns attribute for PanelGrid mainSubview:mainForm:_id11: -2147483648

The page appears to render correctly (i.e., it defaults to columns=""1""), but the error message is annoying.",MYFACES-442
"The contract between ViewHandler and RenderKit for creating a ResponseWriter is that the ViewHandler should suggest a list of supported contentTypes.  It is the RenderKit's job to pick the appropriate one based on it's output-- not just any of them.

In the case of Firefox, the first item it sends is 'text/xml, ....', the HtmlRenderKit in MyFaces just says, use the first item returned, so the response is set to be contentType of 'text/xml'.

This causes issues since the browser gets a response, renders it, but treats the content with comments <!-- --> as XML-- so that means the css isn't used, and commented JavaScript isn't seen.

This is a major blocker.",MYFACES-441
"Circular dependencies in managed properties lead to java.lang.StackOverflowError in class org.apache.myfaces.el.VariableResolverImpl. 

This can be reproduced with a simple example:
... start snippet from faces-config ...

<managed-bean>
 <managed-bean-name>organisationListController</managed-bean-name>
 <managed-bean-class>nl.ibgroep.demo.web.bean.controller.beheer.OrganisationListController</managed-bean-class>
 <managed-bean-scope>session</managed-bean-scope>
 <managed-property>
  <property-name>organisationDetailsController</property-name>
  <property-class>nl.ibgroep.demo.web.bean.controller.beheer.OrganisationDetailsController</property-class>
  <value>#{organisationDetailsController}</value>
 </managed-property>
</managed-bean>

<managed-bean>
 <managed-bean-name>organisationDetailsController</managed-bean-name>
 <managed-bean-class>nl.ibgroep.demo.web.bean.controller.beheer.OrganisationDetailsController</managed-bean-class>
 <managed-bean-scope>session</managed-bean-scope>
 <managed-property>
  <property-name>organisationListController</property-name>
  <property-class>nl.ibgroep.demo.web.bean.controller.beheer.OrganisationListController</property-class>
  <value>#{organisationListController}</value>
 </managed-property>
</managed-bean>

... end snippet from faces-config ...

If I open a page using either of these managed beans, a StackOverflowError error occurs in VariableResolverImpl.

The reason is that a new managed bean is put in scope after the complete managed bean has been created, including all dependent managed properties. So what happens is that the first managed bean (organisationListController) is created, Subsequently a new bean for its managed property (organisationDetailsController) is created. Because the first bean (organisationListController) was not put in scope, a new managed bean (organisationListController) is created, which leads to the creation of another bean (organisationDetailsController), etc.

In this simple example the cause is easy to find out, but this will be less so if the circular dependency becomes less obvious.

Solution: put the bean in scope in the ManagedBeanBuilder, before the recursive creation of its managed properties.",MYFACES-440
"Moving the non-JSF specified HTML 4.0 <img> attributes out of HtmlGraphicImageTagBase and into the extension HtmlGraphicImageTag (as was appropriate) caused MyFaces to break on Weblogic 8.1 because Weblogic validates the .tld and checks that there are appropriate setters in the *Tag class for each specified <attribute>.  Since HtmlSwapImageTag was extending HtmlGraphicImageTagBase, it no longer has the appropriate fields.  

Upon investigation it seems that someone added the border attribute back to HtmlGraphicImageTagBase after MYFACES-363 was closed, presumably because it was breaking the SwapImage example page that makes use of the border attribute.

It seems to me that the better solution is to have HtmlSwapImageTag extend org.apache.myfaces.taglib.html.ext.HtmlGraphicImageTag, so as to retain the ability to include the HTML 4.0 <img> attributes while not breaking compliance of <h:graphicImage> with the JSF 1.1 spec.
",MYFACES-439
"I found that  <f:attribute>  doese not work with <x:dataTable> .
the following is my JSF page Code:

<x:dataTable id=""dt_account""     headerClass=""standardTable_Header""
	footerClass=""standardTable_Header""
	rowClasses=""standardTable_Row1,standardTable_Row2""
	columnClasses=""standardTable_ColumnCentered,standardTable_ColumnCentered""
	value=""#{pc_GrantFunctionHasOperate.functionOperateListToGrant}""
	var=""row"" 
	 preserveDataModel=""true"">
	 <f:facet name=""header"">
                               <h:outputText value=""?????????????????????"" style=""font-size:9pt"" />
                       </f:facet>
	  <h:column>
	        <h:selectBooleanCheckbox id=""sbc_operate"" value=""#{row.selected}""  
	               valueChangeListener=""#{pc_GrantFunctionHasOperate.onOperateSelectedChange}""
	           onclick=""submit();"">
	            <f:attribute name=""operateCode"" value=""#{row.operateCode}"" />
	       </h:selectBooleanCheckbox>
	    </h:column>
	    <h:column >
	       <f:facet name=""header"">
	          <h:outputLabel for=""sbc_operate"" id=""header_funName"" style=""font-size:9pt""  value=""????"" />
                             </f:facet>
	   <h:outputText id=""opt_accountCode"" value=""#{row.operateName}""  />
	   </h:column>
         </x:dataTable>

 the following code is backingBean's method of  valueChangeListener :
 public  void onOperateSelectedChange(ValueChangeEvent event)
    { 
	   	
	 String operateCode=(String)event.getComponent().getAttributes().get(""operateCode"");
	 return;
		 
    }
 i found that the operateCode is null  when the valueChange Event occured .

but if i set the value of <f:attribute> to a const value ,then i can got it when the valueChange Event occured .
for example :
                          <h:column>
	        <h:selectBooleanCheckbox id=""sbc_operate"" value=""#{row.selected}""  
	               valueChangeListener=""#{pc_GrantFunctionHasOperate.onOperateSelectedChange}""
	           onclick=""submit();"">
	            <f:attribute name=""operateCode"" value=""0001"" />
	       </h:selectBooleanCheckbox>
	    </h:column>

    ",MYFACES-437
"In some instances of the MyFaces custom components, the
startElement(..)
is called with a null componentForElement.
This causes a problem for the integration of MyFaces' custom components
with some 3rd-party ResponseWriters.

See JSF 1.1 specification:
Section 6.4 of the JSF specification states that the
ResponseWriter.startElement(String name, UIComponent
componentForElement)
method allows a null argument for the componentForElement parameter ""to
indicate that the element has no corresponding component"".
The specification goes on to state that ""the prescence of this
parameter
allows tools to provide their own implementation of
ResponseWriter"".


For example:

Pass in a component reference to the startElement method on the
ResponseWriter. E.g. if your UIComponent is a PanelGrid, and you want to
emit <table><tr><td>... you would use   writer.startElement(""table"",
gridpanel);
  writer.startElement(""tr"", gridpanel);
  writer.startElement(""td"", gridpanel);
",MYFACES-436
"I wish HtmlResponseWriterImpl will render the unicode text as jsp, not encode as &#XXXXX;, it's difficult to view the html source.  especially not encoded to javascipt.",MYFACES-435
"MyFacesGenericPortlet does not fully support the feature of tomahawk component, such as inputHtml and fileUpload. So, I request the following feature to run it on portlet:

- support tags in <head> (ex. inputHtml component)
- support upload (fileUpload component)",MYFACES-434
"Image button should be aligned to bottom to line up with text box.

Here is a patch where I wrapped the 2 items in a table and aligned to bottom.

Mike

Index: /current/tomahawk/src/java/org/apache/myfaces/custom/calendar/HtmlCalendarRenderer.java
===================================================================
--- /current/tomahawk/src/java/org/apache/myfaces/custom/calendar/HtmlCalendarRenderer.java	(revision 233337)
+++ /current/tomahawk/src/java/org/apache/myfaces/custom/calendar/HtmlCalendarRenderer.java	(working copy)
@@ -149,9 +149,19 @@
             inputCalendar.setId(facesContext.getViewRoot().createUniqueId());
 
             inputCalendar.getChildren().add(inputText);
+            
+            ResponseWriter writer = facesContext.getResponseWriter();
+            writer.startElement(HTML.TABLE_ELEM, null);
+            writer.writeAttribute(HTML.BORDER_ATTR, ""0"", null);
+            writer.writeAttribute(HTML.CELLSPACING_ATTR, ""0"", null);
+            writer.writeAttribute(HTML.CELLPADDING_ATTR, ""0"", null);
+            writer.startElement(HTML.TR_ELEM, null);
+            writer.startElement(HTML.TD_ELEM, null);
+            writer.writeAttribute(""valign"", ""bottom"", null);
 
             RendererUtils.renderChild(facesContext, inputText);
 
+            writer.endElement(HTML.TD_ELEM);
             inputCalendar.getChildren().remove(inputText);
 
             //Set back the correct id to the input calendar
@@ -159,7 +169,8 @@
 
             if (!inputCalendar.isDisabled())
             {
-	            ResponseWriter writer = facesContext.getResponseWriter();
+                writer.startElement(HTML.TD_ELEM, null);
+                writer.writeAttribute(""valign"", ""bottom"", null);
 
 	            writer.startElement(HTML.SCRIPT_ELEM,null);
 	            writer.writeAttribute(HTML.SCRIPT_TYPE_ATTR,HTML.SCRIPT_TYPE_TEXT_JAVASCRIPT,null);
@@ -171,12 +182,15 @@
 	            writer.write(""\n-->"");
 	            writer.endElement(HTML.SCRIPT_ELEM);
 
+	            writer.endElement(HTML.TD_ELEM);
 	/*            writer.startElement(HTML.INPUT_ELEM,null);
 	            writer.writeAttribute(HTML.TYPE_ATTR,HTML.INPUT_TYPE_BUTTON,null);
 	            writer.writeAttribute(HTML.ONCLICK_ATTR,""popUpCalendar(this, ""+inputText.getClientId(facesContext)+
 	                    "", \\\""dd.mm.yyyy\\\"")"",null);
 	            writer.endElement(HTML.INPUT_TYPE_BUTTON);*/
             }
+            writer.endElement(HTML.TR_ELEM);
+            writer.endElement(HTML.TABLE_ELEM);
         }
         else
         {
",MYFACES-433
"We need to be able to select and expand nodes in the tree.  If someone
hits 'search', we need to expand the path to the node we find and select it.  This seems
troublesome to do in the current implementation

Ideally we would like to be able to use the client side feature of Tree2, but would use
server-side if that is all that worked.
",MYFACES-432
"I have page.jsp with datatable and a button:

<x:dataTable id=""listarodzajepism"" value=""#{listRodzajePism.rodzajePism}""
var=""rodzajPisma"" border=""0""
                 styleClass=""standardTable""
 headerClass=""standardTable_SortHeader""
 rowClasses=""standardTable_Row1,standardTable_Row2""
 footerClass=""standardTable_Footer""
 sortColumn=""#{listRodzajePism.sort}""
 sortAscending=""#{listRodzajePism.ascending}""
                 preserveDataModel=""true""
               preserveSort=""true""
                 rows=""24""
 binding=""#{listRodzajePism.jsfDataTable}"">

... column, column, column ...
</x:dataTable>
 <h:commandButton id=""cb"" value=""NewPage"" action=""newpage""/>

Action ""newpage"" of commandbutton opens page2.jsp with only one button:

<h:commandButton id=""button""
                 value=""Cancel""
 action=""back""
 immediate=""true""/>

 Action ""back"" goes back to page.jsp. And here the problem occurs becuase I receive an error:

 javax.faces.FacesException: Could not get property rows of component 
 rodzajepismview:listarodzajepism Caused by:
java.lang.NullPointerException
        at
 org.apache.myfaces.component.html.ext.HtmlDataTable.getRows(HtmlDataTable.java:547)

 When I open page.jsp everything is OK, but action page.jsp -> page2.jsp -> page.jsp cause an error.

In my backing bean I have:

         private HtmlDataTable jsfDataTable;

     public HtmlDataTable getJsfDataTable() {
         return jsfDataTable;
     }

     public void setJsfDataTable(HtmlDataTable jsfDataTable) {
         this.jsfDataTable = jsfDataTable;
     }

Backing bean is session scoped. When binding=""#{listRodzajePism.jsfDataTable}"" is removed from x:datatable tag, everyhing works just fine.

I spent some time debugging and here are the results:

Exception is thrown in getRows() method of org.apache.myfaces.component.html.ext.HtmlDataTable when command 

return ((_SerializableDataModel)_dataModel).getRows();

is invoked. Cause of exception: _dataModel is null. This line is invoked only when _isDataModelRestored = true. I checked that when I open page2.jsp _dataModel is created and _isDataModelRestored is set to true. But when I return to page1.jsp from page2.jsp, setValueBinding method is invoked and _dataModel is set to null. But _isDataModelRestored is still true.
",MYFACES-431
"I have the  preserveToggle=true   which is supposed to keep the state
of the tree2 navigator when openning another page... but it always
collapse...

The issue still persist with Nightly Build 19-Aug-2005

From: Sean Schofield <sean.schofield@gmail.com>
---
There was a recent change to tree2 that may have broken this feature.
Are you using a recent (with 7-10 days) version of the source code?

If so, then please file a JIRA issue.  This is most likely a bug that
was introduced by the new TreeModel and TreeState interfaces.

sean
-------",MYFACES-429
,MYFACES-427
"Currently the RendererUtils.findUISelectManyConverter() method assumes that, when the valueType is a List, the List must contain Strings, and therefore no Converter is needed.  If the valueType is an array, then this method attempts to see if there is a Converter for the arrayComponentType (the type of objects that the array holds).  A comment says that the API Doc of UISelectMany assumes that the List holds Strings, but we have an opportunity here to improve on that.

The patch I'm submitting allows the binding of a UISelectMany component to a List of objects other than Strings.  The behavior ends up being the same as if we were binding to an array of some component whose type is not a String (finding a Converter in this case is already handled by the RendererUtils.findUISelectManyConverter() method.

The code that I propose adding is listed here and a patch file will be attached:

        if (List.class.isAssignableFrom(valueType))
        {
            //According to API Doc of UISelectMany the assumed entry type for a List is String
            //--> no converter needed
            
            // However, if the List contains something other than Strings, we can attempt
        	// to find a suitable converter.  In JDK 1.4, we can try to find out what the List
        	// contains by looking at the SelectItem value of the first item.  With generics in
        	// JDK 1.5, it would be much easier to determine the type.
            List selectItems = RendererUtils.internalGetSelectItemList(component);
            if (selectItems != null && selectItems.size() > 0) {
                SelectItem selectItem = (SelectItem) selectItems.get(0);
            	Class listComponentType = selectItem.getValue().getClass();
                if (!(String.class.equals(listComponentType))) {
                    try
                    {
                        return facesContext.getApplication().createConverter(listComponentType);
                    }
                    catch (FacesException e)
                    {
                        log.error(""No Converter for type "" + listComponentType.getName() + "" found"", e);
                        return null;
                    }
                }
            }
        }
",MYFACES-425
"as reported in http://www.mail-archive.com/users%40myfaces.apache.org/msg07181.html
",MYFACES-424
"as reported in http://www.mail-archive.com/users%40myfaces.apache.org/msg07153.html


FIX: UITreeData should not save the TreeModel.
",MYFACES-423
"When an error message is displayed after a conversion error, the <h:message> tag isn't rendered in the appropriate css class, as specified by the errorClass attribute.

For example:

        <h:outputLabel id=""datumLabel"" for=""datumInput"">
            <h:outputText value=""#{bundle.DatumLabel}""/>
        </h:outputLabel>
        <h:panelGrid columns=""1"" cellpadding=""0"" cellspacing=""0"">
            <h:inputText id=""datumInput""
                       size=""10""
                       required=""true""
                       value=""#{converters.datum}""
                       >
            <f:convertDateTime pattern=""dd/MM/yyyy"" />
        </h:inputText>
        <h:message id=""datumMessage"" for=""datumInput"" errorClass=""error""
                     fatalClass=""error"" infoClass=""message""
                     warnClass=""message""/>
        </h:panelGrid>

When an invalid date is entered here, the resulting HTML for the message looks like this:

<span id=""body:_id4:datumMessage"">ongeldige datum</span>

No trace of 'class=""error""'

I have also tried the <x:message> tag, with the same result",MYFACES-421
"I use the following valueChangeListener and submit on blur via javascript:

<h:inputText id=""EAN"" value=""#{LpChooseTypeForm.a_LpObject.a_niGloWa.a_EAN}"" valueChangeListener=""#{LpChooseTypeForm.a_LpObject.a_niGloWa.getSkuDetails}"" 
onblur=""this.form.submit();"">

In the valueChangeListener I set some sku details and fill up new input fields:

<h:outputText id=""SkuNr"" value=""#{LpChooseTypeForm.a_LpObject.a_niGloWa.a_skuNo}"" />
<h:inputText id=""SkuDescription"" value=""#{LpChooseTypeForm.a_LpObject.a_niGloWa.a_skuDesc}""  />

but the ""SkuDescription"" inputText doesen't get updated. If I change ""SkuDescription"" to h:outputText  it get's updated.

",MYFACES-420
"I wanted to load navigation rules at run-time rather than load time for my application.. after downloading the latest nightly build (8th Aug) , I found that although runtimeConfig was getting the new navigation rules, somehow they were not getting used. Upon further investigation I found that NavigationHandlerImpl does not reload the rules if they after modified after load time. Thus no matter how many changes I did to runtimeConfig, they were not reflected in the system. I have resolved the issue, and the patch files are attached for RuntimeConfig and NavigationHandlerImpl",MYFACES-419
"Problem: When I set the javax.faces.STATE_SAVING_METHOD in the web.xml to server and try out the tiles-example,  I get a java.lang.IllegalStateException: Cannot create a session after the response has been commited.

Analysis: The problem happens only while calling a tiles page directly. So, calling response.sendRedirect(""page1.jsf"");  or entering the url (/myfaces-tiles-example/page1.jsp) results in the error. 
If you create a jsf page without tiles support, you are able to jump to a tiles page by navigation-rule. Proof:
try to call  /myfaces-tiles-example/non-tile.jsf directly in your browser and press the back button.

Workaround: use javax.faces.STATE_SAVING_METHOD=client (generates much bandwidth) or create an index.jsp with a commandLink to your tiles page.

",MYFACES-418
"I am using t:dataTable on a page and need to change its number of columns when change value of a selectbox. Something like want to show 3 months and from a selectbox select value 6, so I want to display a table with 6 columns instead of 3. 
 
The problem that I have is that first time after modify the number of columns (now have january, february, march), I modify the columnHeaders list but in browser I get a table with only 3 columns as header (and the data from header is the old data - january, february, march) but with all 6 columns for data. If I click on a link from scroller (go to second page for example), the page is showing the header correctly, it has 6 columns - january, february, march, april, may, june.
 
Something similar is happening when changing the number of columns from 6 to 3. I get a table with 6 columns as header and only 3 columns as data.
 
Do I have to call a specific method after changing the list of header values? Or is this a known problem of t:dataTable in this scenario?",MYFACES-417
"The method writeWithFullHeader() in AddResource throws 

StringIndexOutOfBoundsException: String index out of range: -1  

on the line:

writer.write(originalResponse.substring(insertPosition));

The rest of the method contains checks for insertPosition to be >= 0, therefore the line should be changed to something like:

writer.write(insertPosition > 0 ? originalResponse.substring(insertPosition) : originalResponse);
",MYFACES-416
"t:inputCalendar's implicit and transient inputText gets assigned the
same converter as inputCalendar when isRenderAsPopup=true.

This doesn't work well since the inputCalendar converter is expected
to work on Date objects, and the inputText has a string representation
of the date.

The conversion fails in RendererUtils.getStringValue(facesContext,
component) at converter.getAsString(facesContext, component, value),
and the value in the inputCalender gets lost on rendering.

The value assigned to the inputText is already converted using the inputCalendar's converter during encode, and the component doesn't exist during decode, so the converter needs to be nullified for inputText.",MYFACES-415
Enable the panelTabbedPane to switch tab without server request if possible.,MYFACES-414
"Following simplified example:

<h:dataTable>
  <h:dataTable>
    <h:inputText validator=""..."" />
 </h:dataTable>
</h:dataTable>

If there are validation errors the error message for the UIInput component is displayed but the component displays NOT the submitted value - instead the model value is displayed. ",MYFACES-413
"When the bound property in the backing bean for an x:dataTable ('value' element) is an array, and the x:dataScroller is used, _SerializableArrayDataModel throws an ArrayIndexOutOfBounds exception when trying to advance to the second page.  Debugging through this code:
1    public _SerializableArrayDataModel(int first, int rows, Object[] array)
2   {
3        _first = first;
4        _rows = rows;
5        _rowCount = array.length;
6        if (_rows <= 0)
7        {
8            _rows = _rowCount - first;
9        }
10        _list = new ArrayList(_rows);
11       for (int i = 0; i < _rowCount; i++)
12        {
13            _list.add(array[_first + i]);
14        }
15    }

the exception occurs on line 13 above, because on any page other than the first page,  _first will be non-zero (say 20 on the second page if displaying 20 rows at a time), and adding this to i which goes up to _rowCount will exceed the length of the array.  The problem appears to be on line 11, i < _rowCount; I presume it should be _rows instead, or better, some ""size"", as calculated for example by similar code in class _SerializableListDataModel.  When I switch the bound property in the backing bean to be a List instead of an array, it works fine (I presume because _SerializableListDataModel is being used instead).


Here is the dump from Tomcat 5.5:
java.lang.ArrayIndexOutOfBoundsException: 164
	at org.apache.myfaces.component.html.ext._SerializableArrayDataModel.<init>(_SerializableArrayDataModel.java:42)
	at org.apache.myfaces.component.html.ext.HtmlDataTable.createSerializableDataModel(HtmlDataTable.java:493)
	at org.apache.myfaces.component.html.ext.HtmlDataTable.getSerializableDataModel(HtmlDataTable.java:470)
	at org.apache.myfaces.component.html.ext.HtmlDataTable.saveState(HtmlDataTable.java:369)
	at javax.faces.component.UIComponentBase.processSaveState(UIComponentBase.java:456)
	at javax.faces.component.UIComponentBase.processSaveState(UIComponentBase.java:452)
	at javax.faces.component.UIComponentBase.processSaveState(UIComponentBase.java:452)
	at javax.faces.component.UIComponentBase.processSaveState(UIComponentBase.java:440)
	at javax.faces.component.UIComponentBase.processSaveState(UIComponentBase.java:452)
	at org.apache.myfaces.application.jsp.JspStateManagerImpl.getComponentStateToSave(JspStateManagerImpl.java:70)
	at org.apache.myfaces.application.jsp.JspStateManagerImpl.saveSerializedView(JspStateManagerImpl.java:213)
	at org.apache.myfaces.taglib.core.ViewTag.doEndTag(ViewTag.java:122)
	at org.apache.jsp.listTaggedItems_jsp._jspx_meth_f_view_0(org.apache.jsp.listTaggedItems_jsp:191)
           ETC.",MYFACES-412
The src build should include the example source code and probably also the jsp for the examples.,MYFACES-411
"I changed the value on a hidden field created by tag inputHidden, code got the new value by setValue method, but  valueChangeListener  doesn't working. I used form.sumbit() method to submit form. I tried both with a ""submit"" button and without ""submit"" button in the form, neither work.",MYFACES-410
"This will allow  you to use EL to specify the value of the resulting <tr> element.  Comes in handy when you have javascript that needs to deal with table click events, etc.",MYFACES-409
"Cut-and-paste coding error:

ApplicationImpl.createValidator() reports errors as converter instead of validator

-            String message = ""Unknown converter id '"" + validatorId + ""'."";
-            log.error(""Could not instantiate converter "" + validatorClass, e);
-            throw new FacesException(""Could not instantiate converter: "" + validatorClass, e);
",MYFACES-408
"The documentation for the x:dataList says you can add a css style class to it, but I am unable to make that work. This is what I have:

                           <x:dataList
                               id=""tree-menu""
                               styleClass=""test""
                               value=""#{myBean.cBean.menuItems}""
                               var=""menuItem""
                               layout=""unorderedList""
                           >

I was expecting to see UL and LI elements with a style class attribute containing the value ""test"", but instead I get raw unstyled UL and LI tags like this:

 <ul>
 <li>Velkommen</li>
 <li>Farvel</li>
 </ul>

I am taking the liberty of filing this as a blocker because it actually makes it impossible for me to complete my project because we use several different lists on the pages, and they are suppose to have different sizes, thus they need to be styled differently.

In hopes for a quick fix.

Randahl",MYFACES-406
"When trying to use the headerstyleClass attribute of the new x:column component, an exception occurs because the setter cannot be found. 

The method setHeaderstyleclass in HtmlColumnTag should be named setHeaderstyleClass.",MYFACES-405
"Hello,
 We are now in the beta stage of an application which uses Tree2 component. We have dropdown by the tree which should relaod the tree based on whats picked in the dropdown.
 I have a valuechange listener on the dropdown which rebuilds the tree2 data in the valuechange listener and does a 

FacesContext.getCurrentInstance().renderResponse();

The data gets loaded into the tree fine, but from the user perspective it doesn't load the new data into it until the user click on it forcing it to re-render and then loads the new data. The reload also happens when a command buttin with an actionlistener is clicked on.

Am I missing something? Should i be calling something else other than renderresponse on the facescontext to force a refresh?

Regards,
Lenine",MYFACES-404
"When using redirection to navigate from one JSF view to another, e.g., to implement the PRG (Post-Redirect-Get) pattern, all the FacesMessage objects are lost, so the destination view is not able to show any messages created from the originating view.

The idea is to temporarily save a copy of the messages in a storage that will survive to the redirection, and then reinject those messages to the JSF context before rendering the destination view.

Attached I have provided with a simple but effective way to achieve this behaviour.",MYFACES-403
"I want put f:param or f:attribute inside CommandButton, but it return nothing. I can't find define form.elements[param]=value javascipt in CommandButton that exist in commandLink ",MYFACES-402
"I have java script onsubmit in <h:form>, when I use commandLink tag, even onsubmit return false, the form still submitted. I checked javasctipt, If I am right, the bug should be here,

JSF generate Javascript for each commandLink like,
clear_unitItemViewList();
document.forms['unitItemViewList'].elements['autoScroll'].value=getScrolling();
document.forms['unitItemViewList'].elements['unitItemViewList:_link_hidden_'].value='unitItemViewList:_id49_0:_id72';
if(document.forms['unitItemViewList'].onsubmit){document.forms['unitItemViewList'].onsubmit();}
document.forms['unitItemViewList'].submit();
return false;
----------------------
so problem it will be caused by 
if(document.forms['unitItemViewList'].onsubmit){document.forms['unitItemViewList'].onsubmit();}
document.forms['unitItemViewList'].submit(); //the form submitted!!!!!!

it should be 

if(document.forms['unitItemViewList'].onsubmit)
{
    if( document.forms['unitItemViewList'].onsubmit() )
    {
       document.forms['unitItemViewList'].submit();
    }
}
else
{
   document.forms['unitItemViewList'].submit();
}

",MYFACES-401
"When jsp page is sibmited without selected option from selectManyListbox on TabbedPane occurs:

throw new IllegalArgumentException(""Value of UISelectMany component with path : "" + getPathToComponent(uiSelectMany) + "" is not of type Array or List"");

I've adjusted String equals test on internalSubmittedOrSelectedValuesAsSet method in src/share/org/apache/myfaces/renderkit/RendererUtils.java and i solved this problem.

From: values == EMPTY_STRING
To..: EMPTY_STRING.equals(values)
",MYFACES-400
x:saveState incorrected documented as x:save_state,MYFACES-397
this patch enhance inputCalnedar to add the javascript only once,MYFACES-396
"Using the path mapping:
    <servlet-mapping>
        <servlet-name>FacesServlet</servlet-name>
        <url-pattern>/faces/*</url-pattern>
    </servlet-mapping>
And typing the following in the address bar of the browser:
http://localhost:8080/admin/faces
(admin is the context name of the webapp)
causes an infinite recursion and stack overflow.

Part of console output:
...

2005-08-05 10:18:26,524 ERROR [org.apache.myfaces.lifecycle.LifecycleImpl] Assumed extension mapping, but there is no extension in /faces
2005-08-05 10:18:26,534 ERROR [org.apache.myfaces.lifecycle.LifecycleImpl] Assumed extension mapping, but there is no extension in /faces
2005-08-05 10:18:26,544 ERROR [org.apache.myfaces.lifecycle.LifecycleImpl] Assumed extension mapping, but there is no extension in /faces
2005-08-05 10:18:26,565 ERROR [org.jboss.web.localhost.Engine] StandardContext[/admin]Exception in FacesServlet
java.lang.StackOverflowError
	at org.apache.coyote.tomcat5.CoyoteRequest.doGetSession(CoyoteRequest.java:2235)
	at org.apache.coyote.tomcat5.CoyoteRequest.getSession(CoyoteRequest.java:2116)
	at org.apache.coyote.tomcat5.CoyoteRequestFacade.getSession(CoyoteRequestFacade.java:528)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:215)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:518)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:215)
...

	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:518)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:215)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:518)
	at org.apache.myfaces.context.servlet.SessionMap.getSession(SessionMap.java:80)
	at org.apache.myfaces.context.servlet.SessionMap.getAttribute(SessionMap.java:51)
	at org.apache.myfaces.context.servlet.AbstractAttributeMap.get(AbstractAttributeMap.java:101)
	at org.apache.myfaces.portlet.PortletUtil.isPortletRequest(PortletUtil.java:60)
	at org.apache.myfaces.lifecycle.LifecycleImpl.deriveViewId(LifecycleImpl.java:322)
	at org.apache.myfaces.lifecycle.LifecycleImpl.restoreView(LifecycleImpl.java:123)
	at org.apache.myfaces.lifecycle.LifecycleImpl.execute(LifecycleImpl.java:82)
	at javax.faces.webapp.FacesServlet.service(FacesServlet.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:252)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:696)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:474)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:409)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.myfaces.context.servlet.ServletExternalContextImpl.dispatch(ServletExternalContextImpl.java:405)
	at org.apache.myfaces.application.jsp.JspViewHandlerImpl.renderView(JspViewHandlerImpl.java:280)
	at org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:300)
	at javax.faces.webapp.FacesServlet.service(FacesServlet.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:252)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:696)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:474)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:409)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.myfaces.context.servlet.ServletExternalContextImpl.dispatch(ServletExternalContextImpl.java:405)
	at org.apache.myfaces.application.jsp.JspViewHandlerImpl.renderView(JspViewHandlerImpl.java:280)
	at org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:300)
	at javax.faces.webapp.FacesServlet.service(FacesServlet.java:110)
...

The stack trace goes on and on.
This does not happen when the address is followed by a trailing slash: ""http://localhost:8080/admin/faces/""

Possible workaround:
Define a security constraint to forbid access to /faces

    <security-constraint>
        <web-resource-collection>
            <web-resource-name>faces</web-resource-name>
            <url-pattern>/faces</url-pattern>
        </web-resource-collection>
        <auth-constraint/>
    </security-constraint>
",MYFACES-394
"When programmatically builing a menu for jscookmenu using the following syntax:

<x:jscookMenu layout=""hbr"" theme=""ThemeOffice"">
   <x:navigationMenuItems value=""#{menuBean.menu}""/>
</x:jscookMenu>

only the top-level of items in the specified bean are rendered. For example, if the menuBean was defined as:

public class MenuBean
{
   public List getMenu()
   {
      NavigationMenuItem menu1 = new NavigationMenuItem(""label1"",""action1"", null, false);
      menu1.setNavigationMenuItems(new NavigationMenuItem[] {
         new NavigationMenuItem(""label1.1"", ""action1.1"", null, false),
         new NavigationMenuItem(""label1.2"", ""action1.2"", null, false)
      });

      NavigationMenuItem menu2 = new NavigationMenuItem(""label2"", ""action2"", null, false);
      menu2.setNavigationMenuitems(new NavigationMenuItem[] {
        new NavigationMenuItem(""label2.1"", ""action2.1"", null, false),
        new NavigationMenuItem(""label2.2"", ""action2.2"", null, false)
      });

      List menu = new ArrayList();
      menu.add(menu1);
      menu.add(menu2);

      return menu;
   }
}

then only the root options 'label1' and 'label2' are rendered.

This appears to be cause by org.apache.myfaces.custom.navmenu.jscookmenu.HtmlJSCookMenuRenderer, in the method encodeNavigationMenuItems.

The following changes seem to fix the problem (not sure if the fix is appropriate, given I'm not entirely sure what uiNavMenuItemList is used for :) ):

199a200
> 
201a203,204
> 				if (uiNavMenuItemList != null)
> 				{
202a206
> 				}
267a272,276
> 					else
> 					{
> 						encodeNavigationMenuItems(context, writer, menuItems,
> 								null, menuId);
> 					}

Cheers,

Lee
",MYFACES-392
Add the possibility to render a calendar image instead of the button to pop the calendar in the inputCalendar component,MYFACES-391
Change TreeModel to an interface.  Provide new TreeModelBase class which will serve as a default implementation of TreeModel.  The @value attribute for Tree2  now take TreeModel instead of TreeNode.  This change causes minor compatability problems with JSP using  tomahawk 1.0.9 and earlier versions of the code.  Users will need to change their code to use TreeModelBase instead of TreeNode.  Sorry for the hassle but the new flexability this feature gives you is well worth it.,MYFACES-390
"This patch allows us to use other date libraries with inputCalendar as long as the date library knows how to convert itself to a java.util.date.

So while this is not the best of all possible solutions its the one with a minimum of code changes.

The main changes are in HtmlCalendarRenderer:

*) introduced a new interface (inner interface) DateConverter with one additional method: getAsDate
*) if the passed in converter is instanceof DateConverter this method will be used to get the value-object as java.util.date

With these changes I managed to create a converter by wrapping the default (CalendarDateTimeConverter) converter and convert from/to date/joda-dateTime",MYFACES-389
"When using client-side node toggling I experienced two problems:

1) The context is missing for the expanded/collapsed image url
2) no _id is rendered to toggle the images as myFaces decide it is not necessary

The attached patches fix these issues",MYFACES-388
"Myfaces with Tiles support not working properly under  Java System Application Server 8.1 (8_1_02_2005Q2).

Pages are not rendered properly.  Tiles with jsp which uses jsf tags are not rendered.

To recreate the error, deploy myfaces-tiles-example.war to Java System Application Server 8.1.",MYFACES-387
"

<x:swapImage url=""/images/secured.jpg""
								activeImageUrl=""/images/secured.jpg""
								swapImageUrl=""#{UserSession.contextPath}/images/secured_over.jpg""
								style=""border:0px"" ></x:swapImage>",MYFACES-385
"Pre-compiling web applications for Tomcat is not supported ""out of the box"" as it should be.  I have written a filter that performs essentially the same function as FacesServlet, so that each individual JSP servlet can be defined and mapped in web.xml.  However, limitations in myfaces.webapp.webxml.WebXml.getFacesServletMappings() prevents these mapped servlets from rendering the view. 
The code in question is: if (FacesServlet.class.isAssignableFrom(servletClass)) {

This will prevent any pre-compiled page from being added as a faces servlet mapping, as these servlets extend org.apache.jasper.runtime.HttpJspBase.


The applicable stack trace is as follows:

14:02:45,443 DEBUG LifecycleImpl:118 - entering restoreView in org.apache.myfaces
.lifecycle.LifecycleImpl
14:02:45,637 DEBUG JspStateManagerImpl:196 - No serialized view found in server s
ession!
14:02:45,779 DEBUG JspViewHandlerImpl:191 - Created view /success.jsp
14:02:45,914 DEBUG DebugUtils:158 - Newly created view
========================================
<UIViewRoot id=""NULL"" family=""javax.faces.ViewRoot"" locale=""en"" renderKitId=""HTML
_BASIC"" rendered=""true"" rendererType=""NULL"" rendersChildren=""false"" transient=""fa
lse"" viewId=""/success.jsp""/>
========================================

14:02:45,960 DEBUG LifecycleImpl:157 - exiting restoreView in org.apache.myfaces.
lifecycle.LifecycleImpl (--> render response)
14:02:45,963 DEBUG LifecycleImpl:288 - entering renderResponse in org.apache.myfa
ces.lifecycle.LifecycleImpl
14:02:45,981 DEBUG WebXmlParser:117 - ignoring servlet + org.apache.jsp.success_j
sp class org.apache.jsp.success_jsp (no FacesServlet)
14:02:45,985 ERROR JspViewHandlerImpl:424 - no faces servlet mappings found
14:02:46,012 ERROR success_jsp]:253 - Servlet.service() for servlet org.apache.js
p.success_jsp threw exception
java.lang.IllegalArgumentException: could not find pathMapping for servletPath =
/success.jsf requestPathInfo = null
        at org.apache.myfaces.application.jsp.JspViewHandlerImpl.getServletMappin
g(JspViewHandlerImpl.java:425)
        at org.apache.myfaces.application.jsp.JspViewHandlerImpl.renderView(JspVi
ewHandlerImpl.java:246)
        at org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:3
00)
        at com.urban4life.web.util.FacesFilter.doFilter(FacesFilter.java:63)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(Appli
cationFilterChain.java:202)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFi
lterChain.java:173)
        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperVa
lve.java:213)
        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextVa
lve.java:178)
        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.ja
va:126)
        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.ja
va:105)
        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValv
e.java:107)
        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java
:148)
        at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:
856)
        at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.proces
sConnection(Http11Protocol.java:744)
        at org.apache.tomcat.util.net.PoolTcpEndpoint.processSocket(PoolTcpEndpoi
nt.java:527)
        at org.apache.tomcat.util.net.LeaderFollowerWorkerThread.runIt(LeaderFoll
owerWorkerThread.java:80)
        at org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPo
ol.java:684)
        at java.lang.Thread.run(Thread.java:595)

-------------------------

FacesFilter:

import java.io.IOException;

import javax.faces.FactoryFinder;
import javax.faces.context.FacesContext;
import javax.faces.context.FacesContextFactory;
import javax.faces.lifecycle.Lifecycle;
import javax.faces.lifecycle.LifecycleFactory;
import javax.servlet.Filter;
import javax.servlet.FilterChain;
import javax.servlet.FilterConfig;
import javax.servlet.ServletException;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

/**
 * @author <a href=""mailto:js@jschneider.com"">John Schneider</a>
 */
public class FacesFilter implements Filter {

	private Log logger = LogFactory.getLog(FacesFilter.class);
	
	public static final String LIFECYCLE_ID_ATTR = ""javax.faces.LIFECYCLE_ID"";
	
	private FilterConfig filterConfig;
        private FacesContextFactory facesContextFactory;
        private Lifecycle lifecycle;

        private String getLifecycleId() {
            String lifecycleId = filterConfig.getServletContext().getInitParameter(LIFECYCLE_ID_ATTR);
            return lifecycleId != null ? lifecycleId : LifecycleFactory.DEFAULT_LIFECYCLE;
        }

	public void init(FilterConfig filterConfig) throws ServletException {
		this.filterConfig = filterConfig;
		this.facesContextFactory = (FacesContextFactory)FactoryFinder.getFactory(FactoryFinder.FACES_CONTEXT_FACTORY);
		LifecycleFactory lifecycleFactory = (LifecycleFactory)FactoryFinder.getFactory(FactoryFinder.LIFECYCLE_FACTORY);
                this.lifecycle = lifecycleFactory.getLifecycle(getLifecycleId());
                logger.debug(""Faces Filter Initialized"");
	}
	
	public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) 
		throws IOException, ServletException {
		
		FacesContext facesContext = facesContextFactory.getFacesContext(
				filterConfig.getServletContext(), request, response, lifecycle);

		try {
			lifecycle.execute(facesContext);
			lifecycle.render(facesContext);
		}
		catch (Throwable e) {
			logger.error(e);
			if (e instanceof IOException) {
				throw (IOException)e;
			}
			else if (e instanceof ServletException) {
				throw (ServletException)e;
			}
			else if (e.getMessage() != null) {
				throw new ServletException(e.getMessage(), e);
			}
			else {
				throw new ServletException(e);
			}
		}
		finally {
			facesContext.release();
		}
	}
	
	public void destroy() {
            filterConfig = null;
            facesContextFactory = null;
            lifecycle = null;
	}

}


-------------------------

web.xml:

<?xml version=""1.0"" encoding=""UTF-8""?>
<web-app version=""2.4""
    xmlns=""http://java.sun.com/xml/ns/j2ee""
    xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
    xsi:schemaLocation=""http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd"">

    <servlet>
        <servlet-name>org.apache.jsp.success_jsp</servlet-name>
        <servlet-class>org.apache.jsp.success_jsp</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>org.apache.jsp.success_jsp</servlet-name>
        <url-pattern>/success.jsf</url-pattern>
    </servlet-mapping>
    <!-- Faces Parameters -->
    <context-param>
        <param-name>javax.faces.CONFIG_FILES</param-name>
        <param-value>/WEB-INF/faces-config.xml,/WEB-INF/faces-managed-beans.xml,/WEB-INF/faces-navigation.xml</param-value>
    </context-param>
    <context-param>
        <param-name>javax.faces.STATE_SAVING_METHOD</param-name>
        <param-value>server</param-value>
    </context-param>
    <!-- Listener, that does all the startup work (configuration, init). -->
    <listener>
        <listener-class>org.apache.myfaces.webapp.StartupServletContextListener</listener-class>
    </listener>
    <!-- Faces Filter -->
    <filter>
        <filter-name>FacesFilter</filter-name>
        <filter-class>com.mycompany.web.util.FacesFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>FacesFilter</filter-name>
        <url-pattern>*.jsf</url-pattern>
    </filter-mapping>
</web-app>


",MYFACES-384
"I'm using the MyFaces tag named x:inputCalendar in order to let the
user select a date from a popup calendar or enter it directly. If the
user enters a valid date, everything goes perfect.

The problem comes when the user enters something wrong, for example
letters. The component tries to convert this value to a valid date
(following the pattern, if there is one), and then throws a
ConvertException exception, so the Apply Request Values phase returns
false, and LifeCycle jumps to the render phase.

When rendering, the component is asked to encode itself, so the
following code is executed:

public void encodeEnd(FacesContext facesContext, UIComponent
component) throws IOException
{
RendererUtils.checkParamValidity(facesContext, component,
HtmlInputCalendar.class);

HtmlInputCalendar inputCalendar = (HtmlInputCalendar) component;

Locale currentLocale = facesContext.getViewRoot().getLocale();

Date value = RendererUtils.getDateValue(inputCalendar);

....
}

As you can see, the last visible line of this code is:

Date value = RendererUtils.getDateValue(inputCalendar);

so it forces the actual value of the inputCalendar to be a date. And
as obviously we come from a conversion error and that means the value
is not a valid date, the RendererUtils.getDateValue(inputCalendar)
throws:

                   throw new IllegalArgumentException(
                           ""Expected submitted value of type Date for
component : ""+
                           getPathToComponent(component));

so this exception results in a ServletException that brings up the
undesirable ""full of Java trace annoying text"" page to the user.

I was wondering why the encondeEnd of this component forces the value
to be obtained to be a date, when anything can be entered in a input
text box.

I've been looking at the common h:inputText tag and its component
always uses the RenderUtils.getStringValue method from its encodeEnd
method, so if a conversion/validation error has been detected, it is
presented to the user using the friendly mechanism of a FacesMessage
and the well-known messages tags.

So I think this could be a bug as no validation can be done at all!",MYFACES-383
Currently you see the +/- icons for nodes that are empty.  Tree2 should be changed to omit the icon if the node is empty.  NOTE: The fix to MYFACES-350 introduced this new bug.,MYFACES-382
I tried adding a width attribute to a table using <x:columns>.  The width seemed to be ignored when placed in a sortable table.,MYFACES-381
"There is a HTML tag fieldset, which could be very useful to create nice applications.
Using it  at the moment reuires a lot spreating of verbatim-tags.

Her a example of the html-output:
<pre>
<fieldset class=""fieldset"">
    <legend>My Fieldset</legend>
   ....
</fieldset>
</pre>

The legend is rendered as title of the groupbox.
My suggestion of the tag will be:

<x:fieldset title=""My Fieldset>....</xfieldset>
</textarea>

                    </td>
    </tr>
    
                    
                
            
                
                
                    
                    
                        
                    
                
            
        
        



            



    <tr><td colspan=2 bgcolor=ffffff>&nbsp;
    <style>
    <!--
    .fieldLabelArea
    {
        width: 30%;
    }
    -->
    </style>
    </td></tr>
    <tr><td colspan=2 bgcolor=f0f0f0>
        <b>Comment</b>: (an optional comment describing this update)
    </td></tr>
    






	



	<tr 
        
        
    >
		
		
			
			
				<td class=""fieldLabelArea"">
			
		
        
        
 		
		Update comment:
        
        
		</td>

	
	




	<td bgcolor=""ffffff"" nowrap class=""fieldValueArea"">


<textarea name=""comment""
          cols=""70""
          rows=""4""
          wrap=""virtual""
            
            
            style=""width:90%""
         
         
            
         
         
            accesskey=""m""
         
         
            
         
         
            
         
         
            
         
         
            
         
         
            
         
         
            
         
>",MYFACES-380
"Currently only the styleclass for header, footer and each cell of a datatable may be defined in the datatable through headerclasses, footerclasses and columnclasses. This isn´t very flexible and doesn´t allow to define different styles for each row and it´s not possible to define events for each cell.

I will provide a new column component which solves this:

<x:column styleclass=""#{row.styleClass}"" onclick=""..."">
 ...
</x:column>",MYFACES-379
"<x:inputCalendar id=""rdate"" value=""#{currencyrate.rdate}"" maxlength=""10"" size=""10"" renderAsPopup=""true"" styleClass=""input""	 popupDateFormat=""#{bundle['formats.date.ddmmyyyy']}"" required=""true""/>

If locale is ru_RU, and currencyrate.rdate is set to any day of august or september popup calendar show ""undefined"" in month's name filed and days' field is empty. When I choose August by hand all is ok.
",MYFACES-378
"the x:div tag is mising visibleOnUserRole, why ?",MYFACES-377
"The contract between ViewHandler and RenderKit for creating a ResponseWriter is that the ViewHandler should suggest a list of supported contentTypes.  It is the RenderKit's job to pick the appropriate one based on it's output-- not just any of them.

In the case of Firefox, the first item it sends is 'text/xml, ....', the HtmlRenderKit in MyFaces just says, use the first item returned, so the response is set to be contentType of 'text/xml'.

This causes issues since the browser gets a response, renders it, but treats the content with comments <!-- --> as XML-- so that means the css isn't used, and commented JavaScript isn't seen.

This is a major blocker.",MYFACES-376
"MyFaces should be compatible with JDK 1.3.
The RI specifications of JSF are very clear about that :

-------- Quote ---------
JSF is based on the following Java API specifications:
Java?2 Platform, Standard Edition, version 1.3
---------------------------

I don't know about Myfaces jars, but tomahawk isn't compatible with it . ( for example MYFACES-368 ).

Is it possible that one of you build the libs using jdk 1.3 ?

regards,

Pierrick
",MYFACES-375
"The graphicImage alt tag was removed by MYFACES-365. But this is not correct the alt tag is still defined in the specification 1.1.

http://java.sun.com/j2ee/javaserverfaces/1.1_01/docs/tlddocs/index.html",MYFACES-374
"If I have a <h:panelGrid> on my JSF page without specifying the columns attribute, I get the following error message every time the page gets displayed:

[7/28/05 17:17:49:551 CDT]  1ee01ee HtmlGridRende E org.apache.myfaces.renderkit.html.HtmlGridRendererBase  Wrong columns attribute for PanelGrid _id0:_id1: -2147483648

This appears to indicate that the columns attribute is not being initialized properly within the component.

The program continues to run, evidently assuming that there is one column.  However, the error message indicates to me that something is wrong.",MYFACES-373
"Index: tomahawk/tld/myfaces_ext.tld
===================================================================
--- tomahawk/tld/myfaces_ext.tld	(revision 225811)
+++ tomahawk/tld/myfaces_ext.tld	(working copy)
@@ -2381,6 +2381,15 @@
 			A custom validator for email address format, based upons Jakarta Commons.
         </description>
 	</tag>
+    <!-- Validator for Url -->
+     <tag>
+        <name>validateUrl</name>
+        <tag-class>org.apache.myfaces.custom.emailvalidator.ValidateUrlTag</tag-class>
+        <body-content>JSP</body-content>
+        <description>
+			A custom validator for url format, based upons Jakarta Commons.
+        </description>
+	</tag>

     <!-- Validator for ISBN -->
      <!--tag>
Index: tomahawk/conf/faces-config.xml
===================================================================
--- tomahawk/conf/faces-config.xml	(revision 225811)
+++ tomahawk/conf/faces-config.xml	(working copy)
@@ -720,6 +720,11 @@
 	</validator>

 	<validator>
+		<validator-id>org.apache.myfaces.validator.Url</validator-id>
+		<validator-class>org.apache.myfaces.custom.urlvalidator.UrlValidator</validator-class>
+	</validator>
+
+	<validator>
 		<validator-id>org.apache.myfaces.validator.Equal</validator-id>
 		<validator-class>org.apache.myfaces.custom.equalvalidator.EqualValidator</validator-class>
 	</validator>
Index: tomahawk/src/java/org/apache/myfaces/custom/urlvalidator/UrlValidator.java
===================================================================
--- tomahawk/src/java/org/apache/myfaces/custom/urlvalidator/UrlValidator.java	(revision 0)
+++ tomahawk/src/java/org/apache/myfaces/custom/urlvalidator/UrlValidator.java	(revision 0)
@@ -0,0 +1,54 @@
+package org.apache.myfaces.custom.urlvalidator;
+
+import org.apache.myfaces.util.MessageUtils;
+
+import org.apache.commons.validator.GenericValidator;
+
+import javax.faces.application.FacesMessage;
+import javax.faces.component.UIComponent;
+import javax.faces.context.FacesContext;
+import javax.faces.validator.Validator;
+import javax.faces.validator.ValidatorException;
+
+public class UrlValidator implements Validator {
+
+	/**
+	 * <p>The standard converter id for this converter.</p>
+	 */
+	public static final String 	VALIDATOR_ID 	   = ""org.apache.myfaces.validator.Url"";
+	/**
+	 * <p>The message identifier of the {@link FacesMessage} to be created if
+	 * the maximum length check fails.</p>
+	 */
+	public static final String URL_MESSAGE_ID = ""org.apache.myfaces.Url.INVALID"";
+
+	public UrlValidator(){
+	}
+
+	/**
+	 * method that validates an url address.
+	 * it uses the commons-validator
+	 */
+	public void validate(
+		FacesContext facesContext,
+		UIComponent uiComponent,
+		Object value)
+		throws ValidatorException {
+
+
+			if (facesContext == null) throw new NullPointerException(""facesContext"");
+			if (uiComponent == null) throw new NullPointerException(""uiComponent"");
+
+			if (value == null)
+			{
+				return;
+			}
+			if (!GenericValidator.isUrl(value.toString())) {
+				Object[] args = {value.toString()};
+				throw new ValidatorException(MessageUtils.getMessage(FacesMessage.SEVERITY_ERROR,URL_MESSAGE_ID, args));
+
+			}
+
+	}
+
+}
Index: tomahawk/src/java/org/apache/myfaces/custom/urlvalidator/ValidateUrlTag.java
===================================================================
--- tomahawk/src/java/org/apache/myfaces/custom/urlvalidator/ValidateUrlTag.java	(revision 0)
+++ tomahawk/src/java/org/apache/myfaces/custom/urlvalidator/ValidateUrlTag.java	(revision 0)
@@ -0,0 +1,27 @@
+package org.apache.myfaces.custom.urlvalidator;
+
+import javax.faces.validator.Validator;
+import javax.faces.webapp.ValidatorTag;
+import javax.servlet.jsp.JspException;
+
+public class ValidateUrlTag extends ValidatorTag
+{
+  private static final long serialVersionUID = 6041422002721046221L;
+
+  public ValidateUrlTag()
+    {
+	}
+
+	protected Validator createValidator() throws JspException
+    {
+		setValidatorId(UrlValidator.VALIDATOR_ID);
+	    UrlValidator validator = (UrlValidator)super.createValidator();
+		return validator;
+	}
+
+    public void release()
+    {
+        super.release();
+    }
+
+}</textarea>

                    </td>
    </tr>
    
                    
                
            
                
                
                    
                    
                        
                    
                
            
        
        



            



    <tr><td colspan=2 bgcolor=ffffff>&nbsp;
    <style>
    <!--
    .fieldLabelArea
    {
        width: 30%;
    }
    -->
    </style>
    </td></tr>
    <tr><td colspan=2 bgcolor=f0f0f0>
        <b>Comment</b>: (an optional comment describing this update)
    </td></tr>
    






	



	<tr 
        
        
    >
		
		
			
			
				<td class=""fieldLabelArea"">
			
		
        
        
 		
		Update comment:
        
        
		</td>

	
	




	<td bgcolor=""ffffff"" nowrap class=""fieldValueArea"">


<textarea name=""comment""
          cols=""70""
          rows=""4""
          wrap=""virtual""
            
            
            style=""width:90%""
         
         
            
         
         
            accesskey=""m""
         
         
            
         
         
            
         
         
            
         
         
            
         
         
            
         
         
            
         
>",MYFACES-372
That would make it possible to switch from http to https if the data of the form must be encrypted for the transport.,MYFACES-371
"Hi

In popup inputCalendar, I was able to change the popupDateFormat but other properties like ""...class"", ""popupTodayString"", ... does not get set by the passed values. I can only see the default styles and text in the pop-up. But these properties can be changed in the in-line(normal) calendar.

I browsed through the mailing list for users and developers, but could not find anyone reporting this.

Has anyone faced this problem???

I want to confirm if there is a solution for this, before submitting it as a BUG. 

Thanks

Balaji
",MYFACES-370
"According to brandnew ;) information, it is not necessary anymore to include the listener in the web.xml. It can be put in the TLD file again, where it belongs and where the RI has always had it even though there were compatibility problems with Weblogic? with that.

Anyone volunteering to fix that?

regards,

Martin",MYFACES-369
"When I remove the _addRessources attribute from the HtmlInputCalendarTag class, everything works fine.

Here is the JSP code (very simple) :
<f:view>
  <h:form id=""calendarForm"">
     <x:inputCalendar  value=""#{calendar.date}"" />
  </h:form>			
</f:view>

Here is the stackTrace :

javax.faces.FacesException: java.lang.NoSuchMethodError
	at javax.faces.component.UIComponentBase$AttributesMap.put(UIComponentBase.java:1407)
	at org.apache.myfaces.taglib.UIComponentTagUtils.setBooleanProperty(UIComponentTagUtils.java:112)
	at org.apache.myfaces.taglib.UIComponentTagBase.setBooleanProperty(UIComponentTagBase.java:152)
	at com.es2i.jsf.custom.calendar.HtmlInputCalendarTag.setProperties(HtmlInputCalendarTag.java:136)
	at javax.faces.webapp.UIComponentTag.createComponent(UIComponentTag.java:1017)
	at javax.faces.webapp.UIComponentTag.createChild(UIComponentTag.java:1036)
	at javax.faces.webapp.UIComponentTag.findComponent(UIComponentTag.java:749)
	at javax.faces.webapp.UIComponentTag.doStartTag(UIComponentTag.java:429)
	at org.apache.jsp.calendar_jsp._jspx_meth_x_inputCalendar_0(calendar_jsp.java:143)
	at org.apache.jsp.calendar_jsp._jspx_meth_h_form_0(calendar_jsp.java:125)
	at org.apache.jsp.calendar_jsp._jspx_meth_f_view_0(calendar_jsp.java:98)
	at org.apache.jsp.calendar_jsp._jspService(calendar_jsp.java:66)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:137)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:853)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:210)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:295)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:241)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:853)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:684)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:432)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:356)
	at com.sun.faces.context.ExternalContextImpl.dispatch(ExternalContextImpl.java:322)
	at com.sun.faces.application.ViewHandlerImpl.renderView(ViewHandlerImpl.java:130)
	at com.sun.faces.lifecycle.RenderResponsePhase.execute(RenderResponsePhase.java:87)
	at com.sun.faces.lifecycle.LifecycleImpl.phase(LifecycleImpl.java:200)
	at com.sun.faces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:117)
	at javax.faces.webapp.FacesServlet.service(FacesServlet.java:198)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:247)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:256)
	at org.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNext(StandardPipeline.java:643)
	at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:480)
	at org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:995)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
	at org.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNext(StandardPipeline.java:643)
	at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:480)
	at org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:995)
	at org.apache.catalina.core.StandardContext.invoke(StandardContext.java:2422)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:180)
	at org.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNext(StandardPipeline.java:643)
	at org.apache.catalina.valves.ErrorDispatcherValve.invoke(ErrorDispatcherValve.java:171)
	at org.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNext(StandardPipeline.java:641)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:163)
	at org.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNext(StandardPipeline.java:641)
	at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:480)
	at org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:995)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:174)
	at org.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNext(StandardPipeline.java:643)
	at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:480)
	at org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:995)
	at org.apache.coyote.tomcat4.CoyoteAdapter.service(CoyoteAdapter.java:199)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:828)
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.processConnection(Http11Protocol.java:700)
	at org.apache.tomcat.util.net.TcpWorkerThread.runIt(PoolTcpEndpoint.java:584)
	at org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:683)
	at java.lang.Thread.run(Thread.java:479)",MYFACES-368
"Hi

I just found that the generic name ""content"" is used for the calendar component (popcalendar.js).

        document.getElementById(""content"").innerHTML = sHTML;
                ......
                ...... 

        <span id='content'></span>


This conflics with the our CSS like

        #content {
                float: left;
                width: 50%;
                padding: 1% 1% 1% 1%; 
        }


Is it possible for you, not to use generic names like, that please. I also found that in another component the HTML elements are named with the component prefix.

If you are going to change this, please inform me, so that I can update to your latest code.

Thanks

Balaji",MYFACES-367
"We have selectManyCheckbox bound to a strongly typed array. We were getting a class cast exception after our converter was called.
The class cast exception (root cause) stated that we could not cast an Object[] to a PlanVO[] array. I traced the problem down to _SharedRendererUtils..getConvertedUISelectManyValue(). Instead of creating a array of type PlanVO, it creates a generic array which will not bind to our PlanVO array. If you change our backing bean to be an Object[], then it will not find our converter which is bound by class.

Ken found an issue when working with selectManyCheckbox.
some.jsp as follows:

<h:outputText value=""You have been matched!""/>
            <h:selectManyCheckbox id=""standardProviders"" value=""#{lreController.form.standardPlans}"">
                <f:selectItems value=""#{lreController.standardPlans}""/>
            </h:selectManyCheckbox>

Here is the fix towards then end of the getConvertedUISelectManyValue method.
_SharedRendererUtils.getConvertedUISelectManyValue().java

//Object array
            int len = submittedValue.length;
            //Object[] convertedValues = new Object[len]; <------------ WAS (BROKEN! 
            // The above line creates a generic Object array that will not bind to our strongly typed array
            Object [] convertedValues = (Object []) Array.newInstance(arrayComponentType, len); // <-- HERE IS THE FIX.
            for (int i = 0; i < len; i++) {
                convertedValues[i]
                    = converter.getAsObject(facesContext, component, submittedValue[i]);
            }
            return convertedValues;

If you still don't understand the above. I wrote this little test to explain the problem very succinctly.
TestTest.java

import java.lang.reflect.Array;

import junit.framework.TestCase;

public class TestTest extends TestCase {
    
    public static class Employee {
        //
    }
    private Object [] convertToObjectArrayWrongWay (Class clazz, int size) throws Exception{
        Object [] objects = new Object [size];
        for (int index = 0; index < size; index++){
            objects[index] = clazz.newInstance();
        }
        return objects;
    }
    private Object [] convertToObjectArrayRightWay (Class clazz, int size) throws Exception {
        Object [] objects = (Object []) Array.newInstance(clazz, size);
        for (int index = 0; index < size; index++){
            objects[index] = clazz.newInstance();
        }
        return objects;
    }

    public void testWrongWay() throws Exception {
        try {
            Employee [] employees = (Employee[]) convertToObjectArrayWrongWay(Employee.class, 10);
            fail(""It will never get this far b/c it throws a ClassCastException!"");
        } catch (ClassCastException cce) {
            assertTrue(""This is not what we want myfaces to do!"", true);
        }
    }
    public void testRightWay() throws Exception {
        Employee [] employees = (Employee[]) convertToObjectArrayRightWay(Employee.class, 10);
    }
}

",MYFACES-366
"When accessing the /home.jsp of the example webapp (both simple.war and sandbox.war) I get the following error:

javax.servlet.ServletException: /home.jsp(14,12) Attribute alt invalid for tag graphicImage according to TLD
	javax.faces.webapp.FacesServlet.service(FacesServlet.java:110)
	org.apache.myfaces.component.html.util.ExtensionsFilter.doFilter(ExtensionsFilter.java:112)

In the myfaces_html.tld there is a reference to the entity &spec_img_attributes in the graphicImage tag, but I don't see the definition of this entity in that tld file.",MYFACES-365
according to http://www.w3.org/TR/html4/struct/tables.html#h-11.2.3 it is recomendet to render the footer right after the header and before the table body.,MYFACES-364
"The myfaces implementation of <h:graphicImage> allows for a 'border' attribute which is not allowed by the JSF 1.1 specification.  The attribute should be removed.  Users wishing to use this attribute should use <x:graphicImage> instead.

Further investigation reveals that there are numerous other attributes that should be removed as well:  align, hspace, etc.",MYFACES-363
The myfaces implementation of <h:graphicImage> allows for a 'border' attribute which is not allowed by the JSF 1.1 specification.  The attribute should be removed.  Users wishing to use this attribute should use <x:graphicImage> instead.,MYFACES-362
"As suggested by Mathias Werlitz ...

Consider to subclass UIData
in http://www.mail-archive.com/users@myfaces.apache.org/msg05454.html explaind the problem that a UIData component cannot be nested in a tree2. the other way around might be not possible too, because of the special (incompatible) state saving methods of UITreeData and UIData. Benefit: all the complex state saving code could be removed from UITreeData as this is already done in UIData. The TreeModel could be some kind of mediator between the DataModel of UIData and the tree data structure used in UITreeData",MYFACES-361
"(as originally reported by Mathias Werlitz)

The tree2 does not work in a form:
http://www.mail-archive.com/users%40myfaces.apache.org/msg06194.html seems to point out the problem. the creaded commandlink needs a parent.

",MYFACES-360
"JspViewHandlerImpl.createView calls the local version of calculateLocale and calculateRenderKitId. It should get the viewHandler from the application instance (as it does in restoreView) and then call the instance's mehtods,otherwise any decorator methods won't get called.",MYFACES-359
"It may be nicer to preserve previous onload functionality when adding jscalendarInit() to window.onload in popcalendar.js.

Here is a small patch of what I was thinking.

Index: current/tomahawk/src/java/org/apache/myfaces/custom/calendar/resource/popcalendar.js
===================================================================
--- current/tomahawk/src/java/org/apache/myfaces/custom/calendar/resource/popcalendar.js	(revision 224394)
+++ current/tomahawk/src/java/org/apache/myfaces/custom/calendar/resource/popcalendar.js	(working copy)
@@ -618,5 +618,11 @@
 
 if(jscalendarIe)
 	jscalendarInit();
-else
-	window.onload=jscalendarInit;
\ No newline at end of file
+else {
+	var jscalendarOnloadBackup = window.onload;
+	function jscalendarOnload() {
+		jscalendarOnloadBackup();
+		jscalendarInit();
+	}
+	window.onload=jscalendarOnload;
+}
\ No newline at end of file
",MYFACES-358
"I was getting javascript errors with the tree2 component due to img tags not having their id attribute rendered.  My experience with MyFaces is about two hours, so I'm not sure about this but my fix was to 

modify HtmlRenderUtils.writeIdifNecessary from

if(component.getId()!=null && !component.getId().startsWith(UIViewRoot.UNIQUE_ID_PREFIX))
        {
            writer.writeAttribute(HTML.ID_ATTR, component.getClientId(facesContext),null);
        }

to

if(component.getId()!=null && component.getId().startsWith(UIViewRoot.UNIQUE_ID_PREFIX))
        {
            writer.writeAttribute(HTML.ID_ATTR, component.getClientId(facesContext),null);
        }",MYFACES-357
"The header is being displayed twice when getting processed by AddResource.

The problem is that revision 210067 added insertPosition=0; before writing the rest of the page.

I've created a patch.",MYFACES-356
"The plus sign is permanent if tree2 is in client side toggle mode.  

This was observed in HEAD and the nightly build for myfaces-2005072 .  This behavior is not found in the 1.0.9 release, nor the Sun RI ;) ",MYFACES-355
"The documentation for the x:dataList says you can add a css style class to it, but I am unable to make that work. This is what I have:

                           <x:dataList
                               id=""tree-menu""
                               styleClass=""test""
                               value=""#{myBean.cBean.menuItems}""
                               var=""menuItem""
                               layout=""unorderedList""
                           >

I was expecting to see UL and LI elements with a style class attribute containing the value ""test"", but instead I get raw unstyled UL and LI tags like this:

 <ul>
 <li>Velkommen</li>
 <li>Farvel</li>
 </ul>

I am taking the liberty of filing this as a blocker because it actually makes it impossible for me to complete my project because we use several different lists on the pages, and they are suppose to have different sizes, thus they need to be styled differently.

In hopes for a quick fix.

Randahl",MYFACES-354
"Users have asked for an attribute used to expand all nodes when tree2 is first rendered.
http://www.mail-archive.com/users@myfaces.apache.org/msg05166.html .  

I've done this w/ an extension of tree2
http://www.mail-archive.com/users@myfaces.apache.org/msg05796.html

Other users have experienced problems w/ the extension when adding & removing nodes:
http://www.mail-archive.com/users@myfaces.apache.org/msg05884.html ",MYFACES-353
"I would like to suggest the following enhancement to Tree2 that would make it more amenable to grabbing data ""on the fly"" as the user is expanding nodes.  Here's the problem:

Currently, Tree2 does not display the + navigation icon if the number of child nodes is zero, regardless of whether there are children yet to be fetched.  What I'd like to have happen is that the + navigation icon is displayed only if the node is not a leaf node, regardless of whether there are currently child nodes.

In other words, I would like to have the following line in HtmlRenderer.encodeNavigation() changed from:

        bitMask += (node.getChildCount()>0) ? CHILDREN : NOTHING;

to:

        bitMask += (node.isLeaf) ? CHILDREN : NOTHING;

If we make this change, then the application developer has more control over whether the + navigation symbol appears, since the application developer can override the isLeaf() method in the node itself.

Currently, the workaround is to override the node's getChildCount() method to return the number of records *expected* if the user were to request the fetch.  However, the ""expected"" number of records is not always known, so, in these cases, getChildCount() would have to be coded to return an arbitrary number greater than zero, which is kind of a kluge.
",MYFACES-350
"If I specify an actionListener in the server-side tree2, it does not get invoked when clicking the navigation icon.  I need this to get invoked because I use it to gather more data on the server on an ""as needed"" basis.  Here's some sample code, where I would like treeBacker.processAction to be invoked when a toggleExpanded event has happened:

<x:tree2 id=""serverTree"" value=""#{treeBacker.treeData}"" var=""node"" varNodeToggler=""t"" clientSideToggle=""false"">
	<f:facet name=""type1"">
		<h:panelGroup>
			<h:commandLink immediate=""true"" action=""#{t.toggleExpanded}""
					actionListener=""#{treeBacker.processAction}"">
				<h:graphicImage value=""/images/type1.gif"" border=""0""/>
			</h:commandLink>
			<h:outputLink value=""#"" style=""font-family: arial; color: blue""
					onclick=""alert(#{node.id})"">
				<h:outputText value=""#{node.name}""/>
			</h:outputLink>
		</h:panelGroup>
	</f:facet>
	<f:facet name=""type2"">
		<h:panelGroup>
			<h:commandLink immediate=""true"" action=""#{t.toggleExpanded}""
					actionListener=""#{treeBacker.processAction}"">
				<h:graphicImage value=""/images/type2.gif"" border=""0""/>
			</h:commandLink>
			<h:outputText value=""#{node.name}"" style=""font-family: arial; color: blue""/>
		</h:panelGroup>
	</f:facet>
</x:tree2>

In the above example, my action listener only gets invoked when I click on my own gif (type1.gif or type2.gif).  It doesn't get invoked when I click on the navigation icon.",MYFACES-349
"When the JSF tags write to the output stream, they get the ResponseWriter from the FacesContext.  This ResponseWriter is set up using pageContext of the first tag encountered during the processing of a request.  If JSF controls are used with JSP pages that are included, the result is that the JSF output often appears before the JSP output that the JSF output should have been mixed with. This is because the included pages have a new PageContext and therefore the wrong JspWriter is used.  This problem is described in Hans Bergsten's book ""Java Server Faces"" on pages 218-219.  This is also the reason for the <f:verbatim> tag.

This problem can be eliminated and the use of the <f:verbatim> tag removed if the UIComponentTag.doStart/doEnd would push/pop ResponseWriters based on changes to the pageContext.  More explicitly:

add to  _PageContextOutWriter:

public PageContext getPageContext() { return _pageContext }


in UIComponentTag, add:

private ResponseWriter _pushedWriter = false;


in UIComponentTag.setupResponseWriter() before null check add:

if (_writer instanceof _PageContextOutWriter && ((_PageContextOutWriter)_writer).getPageContext() != pageContext) {
  // PageContext has changed; push the Writer
  _pushedWriter = _writer;
  _writer = null;
}


at start of UIComponentTag.doEndTag() add:

if (_pushedWriter != null) {
  // Restore the previous writer
  _writer = _pushedWriter
  _pushedWriter = null;
  FacesContext facesContext = getFacesContext();
  facesContext.setResponseWriter(_writer);
}



",MYFACES-348
"Because of a lack of clarity in some version of the serlvet specification, Weblogic, unlike Tomcat and JBoss, invoke the servlet filters not only on the initial request but on forwards and includes through the RequestDispatcher.  This behavior causes the ExtensionFilter to be called multiple times for a single request causing multiple insertions of the header information or unnecessary errors indicating that no head or body was found.

The solution to this problem is to set a request attribute indicating that the filter has been run and just calling chain.doFilter() when that request attribute is set.
",MYFACES-347
"For small pages, the ExtensionFilter can cause the page to be retruned with no data.

This happens because the output streams created by the ExtensionsResponseWrapper are not closed before the bytes of the response are accessed.

In ExtensionsFilter.doFilter, after the chain.doFilter(...), the following line needs to be inserted:

extendedResponse.finishResponse();

This closes the output streams and flushes all of the bytes.  It looks like finishResponse() was previously created for this purpose, but it is unreferrenced.
",MYFACES-346
"The extension of the components by inherintance is impossible, because the important functions and fields are defined as private, or visible only from the original package. It would be nice, if you could review the visiblity settings of the most components.
",MYFACES-344
It would be nice to be able to specify onclick and ondblclick events for the rows in the table.  I propose adding two new attributes: 'rowOnClick' and 'rowOnDblClick'.  This is similar to what already exists in the form of 'rowOnMouseOver' and 'rowOnMouseOut.',MYFACES-343
"The latest versions of MyFaces &  Spring's variable resolver do not work well together. Please, check the post:

http://forum.springframework.org/viewtopic.php?t=5512&highlight=jsf

In addition I just want to add that Spring 1.2 works with RI, so the issue must be in MyFaces.
",MYFACES-341
"x:inputCalendar does not allow '-' as separator in date pattern.

HtmlCalendarRenderer$CalendarDateTimeConverter.createJSPopupFormat() only allows the separator characters ' ' , '.' or '/'. However the popcalendar.js function jscalendarPopUpCalendar also allows the separator character '-'.

Can this extra separator character be added as an allowed character to the createJSPopupFormat method.",MYFACES-340
The x:inputCalendar does not allow readonly or disabled to be set. This means that the textfield and popup calendar button are always enabled for input.,MYFACES-339
"MessageUtils should use the thread's getContextClassLoader() when loading a ResrouceBundle instead of MessageUtil's classloader.

Mike",MYFACES-338
"Buttons within a nested dataTable always call the action methods bound to the first row of the outer table:

For example, using the JSP below, if the delete button is clicked for the third answer of question 2, answer.deleteAnswer() is called on the third answer of question 1 instead.

<h:dataTable value=""#{handler.poll.questions}"" var=""question"">
	<h:column> 
		<h:dataTable value=""#{question.answers}"" var=""answer"">
			<h:column>
				<h:outputLabel for=""answerText"" value=""Q#{question.questionNumber} A#{answer.answerNumber}""/>
				<h:inputText id=""answerText"" value=""#{answer.text}""/>
			</h:column>
			<h:column>
				<h:commandButton action=""#{answer.deleteAnswer}"" value=""Delete""/>
			</h:column>
		</h:dataTable>    
	</h:column>
</h:dataTable>

Probably related is that the text of all other answers for the first question becomes the text from the last answer of the last question following clicking on the delete button. This did not occur using the RI.",MYFACES-337
"On a client-side tree2, when I click on the + or - sign, the image doesn't change, so the folder icons.

The browser catches the following JS-error on each toggle:

Error: navImage has no properties
Source: http://localhost:8080/WebModule1/faces/myFacesExtensionResource/tree2.HtmlTreeRenderer/11216774/javascript/tree.js
Line: 13
",MYFACES-336
"The bug appears in the following scenario:

In my view I have a dataTable displaying a List of beans with a column to enter a new value and one with two buttons to delete and edit each row.

<h:form>
    <h:dataTable value=""#{handler.listModel}"" var=""bean"" width=""100%"">
      <h:column>
        <f:facet name=""header"">
          Label
        </f:facet>
        <h:inputText value=""#{bean.value}"" />
      </h:column>
      <h:column>
        <f:facet name=""header"">
          <h:outputText value=""-"" />
        </f:facet>
        <h:commandButton
          action=""#{handler.updateRow}""
          value=""Update"" />
        <h:commandButton
          action=""#{handler.deleteRow}""
          immediate=""true"" value=""Delete"" />
      </h:column>
    </h:dataTable>
  </h:form>


And this is the code I am using in the handler:

ListDataModel listModel =...

...

public String deleteRow() {
	int i = listModel.getRowIndex();
	List l = (List)listModel.getWrappedData();
	l.remove(i);
	return ""success"";
}

And now the issue:

Every time the delete button is clicked, the correct row is deleted but the values shown in the dataTable are the old ones, except the table is one row shorter!

I am using a redirect navigation case to handle this shortcoming right now and then it is working as expected.

I think the immediate action doesn't properly update the view values, I have debuged the application and the DataModel is updated perfectly fine.",MYFACES-335
"Myfaces fails to restore a view it it uses aliases in bindings.

Our jsf looks like this (for sure, we use include for the dataTable):

<x:aliasBeansScope>
   <x:aliasBean alias=""#{coTopicEdit}"" value=""#{coAddressEdit}"" />
   <h:dataTable var=""topic"" value=""#{coTopicEdit.topics}""
               binding=""#{coTopicEdit.genericTopicTable}"" >
....
   </h:dataTable>
   <h:commandLink value=""xx""/>
</x:aliasBeansScope>


The page renders correctly for the first time, but if you press the commandLink myfaces fails in the restoreView phase.
The reason is simple:
During LifecycleImpl.restoreView myfaces tries to attach each component to the backing bean (in recursivelyHandleComponentReferencesAndSetValid - ""binding.setValue"").
Now if it comes to the binding of the dataTable the alias bean havent had the chance to reassign its alias and thus the ValueBinding for ""#{coTopicEdit.genericTopicTable}"" fails.


To workaround it I create my own ViewHandler (code follows).
I hooked into restoreView - process the view recursivley and call ""makeAlias"" on each alias bean using reflection (the method is package private).
This IS a hack and (I think) it breaks the scope of the alias , but for now I am happy with it.

Any ideas how to solve it correctly?

And now the code in case someone else needs it too:

   public UIViewRoot restoreView(FacesContext facesContext, String viewId)
   {
       UIViewRoot root = super.restoreView(facesContext, viewId);
       if (root != null)
       {
           processAliases(facesContext, root);
       }
       return root;
   }

   protected void processAliases(FacesContext context, UIComponent root)
   {
       if (root == null)
       {
           return;
       }

       for (Iterator it = root.getFacetsAndChildren(); it.hasNext(); )
       {
           UIComponent component = (UIComponent)it.next();

           if (component instanceof AliasBean)
           {
               AliasBean alias = (AliasBean) component;
               try
               {
                   Method makeAliasMethod = alias.getClass().getDeclaredMethod(""makeAlias"", FacesContext.class);
                   makeAliasMethod.setAccessible(true);
                   makeAliasMethod.invoke(alias, context);
               }
               catch (NoSuchMethodException e)
               {
                   log.warn(e.getLocalizedMessage(), e);
               }
               catch (IllegalAccessException e)
               {
                   log.warn(e.getLocalizedMessage(), e);
               }
               catch (InvocationTargetException e)
               {
                   log.warn(e.getLocalizedMessage(), e);
               }
           }

           processAliases(context, component);
       }
   }
",MYFACES-334
"The Wiki link seems to be missing in the new page, unless I overlooked it.
",MYFACES-333
"In the code:

Renderer r = rk.getRenderer(comp.getFamily(), comp.getRendererType());

when comp is a org.apache.myfaces.custom.tree2.HtmlTree the renderer returns null, because comp.getRendererType() is ""org.apache.myfaces.Tree2"" and the correct is ""org.apache.myfaces.HtmlTree2""",MYFACES-332
"Mathias, I still have to use the BEFORE_SVN_REORG version as your new
dataTable code still isn't working with programmically-created
UIColumns elements -- they get lost after a page refresh, probably due
to a save/restore state issue.   My programmically-created footer-with-UICommand and UI-Column-with-UIOutput row header are saved and restored properly, though.
",MYFACES-331
"If the ""for"" attribute for dataScroller is unresolvable, the following error is thrown.

uiComponent referenced by attribute dataScroller@for must be of type javax.faces.component.UIData
java.lang.IllegalArgumentException: uiComponent referenced by attribute dataScroller@for must be of type javax.faces.component.UIData

Here's a patch that improves the output of the above message: 

Ie:

java.lang.IllegalArgumentException: uiComponent referenced by attribute dataScroller@for = 'form' must be of type javax.faces.component.UIData, not type javax.faces.component.html.HtmlForm

and also throws an exception (rather than just logging a warning) if the for attribute is unresolved (otherwise, myfaces will crash later with an exception that is more difficult to track down.

java.lang.IllegalArgumentException: could not find UIData referenced by attribute dataScroller@for = 'form'
",MYFACES-330
"The <tlib-version> number for myfaces_core.tld, myfaces_html.tld, myfaces_ext.tld, and possibly myfaces_ext.tld is incorrect.  (see snippet from myfaces_core.tdl below).  The version number specified in the TLD files is 0.9.0 and should be 1.0.9.

[snippet from myfaces_core.tld]
    <tlib-version>0.9.0</tlib-version>
    <jsp-version>1.2</jsp-version>
    <short-name>f</short-name>
    <uri>http://java.sun.com/jsf/core</uri>
    <description>
        JSF Core Tag Library
    </description>
[end snippet]",MYFACES-329
"<x:tree var=""item"" value=""#{form.tree}"">
   <x:treeColumn>
      <h:outputText id=""nodeValue"" value=""#{item.nodeValue}""/>
   </x:treeColumn>
   <h:column>
      <h:selectOneRadio id=""radioValue"" value=""#{item.radioValue}"">
         <f:selectItems value=""#{form.radioValues}"">
      </h:selectOneRadio>
   </h:column>
</x:tree>

h:selectOneRadio rendered in x:tree by same name and id, so all radio button rendered in one group. h:selectOneRadio rendered in x:dataList is no error, and name & id  with additional _idxx_.
",MYFACES-328
"When i undeploy my Web-Application from Tomcat (JBoss 4.0.1) a session state is saved to be restored
after a redeployment of the Web-Application.
But the saving  raises a java.io.NotSerializableException: javax.faces.event.PhaseId

So my question is:
Shouldn't be this class Serializable ? (I know that in the Sun's RI it is not Serializable too).

Sorry for the following stackTrace:

14:40:23,632 INFO  [ManagerBase] Cannot serialize session attribute login for session 6322DC3E69C762A8A5A2BC411F82DD42
java.io.NotSerializableException: javax.faces.event.PhaseId
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1054)
	at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1332)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1304)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1247)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1052)
	at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1332)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1304)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1247)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1052)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:278)
	at org.apache.catalina.session.StandardSession.writeObject(StandardSession.java:1415)
	at org.apache.catalina.session.StandardSession.writeObjectData(StandardSession.java:902)
	at org.apache.catalina.session.StandardManager.doUnload(StandardManager.java:539)
	at org.apache.catalina.session.StandardManager.unload(StandardManager.java:485)
	at org.apache.catalina.session.StandardManager.stop(StandardManager.java:687)
	at org.apache.catalina.core.StandardContext.stop(StandardContext.java:4496)
	at org.apache.catalina.core.ContainerBase.destroy(ContainerBase.java:1213)
	at org.apache.catalina.core.StandardContext.destroy(StandardContext.java:4602)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.apache.commons.modeler.BaseModelMBean.invoke(BaseModelMBean.java:503)
	at org.jboss.mx.server.RawDynamicInvoker.invoke(RawDynamicInvoker.java:150)
	at org.jboss.mx.server.MBeanServerImpl.invoke(MBeanServerImpl.java:642)
	at org.jboss.web.tomcat.tc5.TomcatDeployer.performUndeployInternal(TomcatDeployer.java:437)
	at org.jboss.web.tomcat.tc5.TomcatDeployer.performUndeploy(TomcatDeployer.java:408)
	at org.jboss.web.AbstractWebDeployer.stop(AbstractWebDeployer.java:421)
	at org.jboss.web.WebModule.stopModule(WebModule.java:79)
	at org.jboss.web.WebModule.stopService(WebModule.java:45)
	at org.jboss.system.ServiceMBeanSupport.jbossInternalStop(ServiceMBeanSupport.java:320)
	at org.jboss.system.ServiceMBeanSupport.jbossInternalLifecycle(ServiceMBeanSupport.java:224)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.jboss.mx.interceptor.ReflectedDispatcher.invoke(ReflectedDispatcher.java:144)
	at org.jboss.mx.server.Invocation.dispatch(Invocation.java:80)
	at org.jboss.mx.server.Invocation.invoke(Invocation.java:72)
	at org.jboss.mx.server.AbstractMBeanInvoker.invoke(AbstractMBeanInvoker.java:249)
	at org.jboss.mx.server.MBeanServerImpl.invoke(MBeanServerImpl.java:642)
	at org.jboss.system.ServiceController$ServiceProxy.invoke(ServiceController.java:891)
	at $Proxy0.stop(Unknown Source)
	at org.jboss.system.ServiceController.stop(ServiceController.java:498)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.jboss.mx.interceptor.ReflectedDispatcher.invoke(ReflectedDispatcher.java:144)
	at org.jboss.mx.server.Invocation.dispatch(Invocation.java:80)
	at org.jboss.mx.server.Invocation.invoke(Invocation.java:72)
	at org.jboss.mx.server.AbstractMBeanInvoker.invoke(AbstractMBeanInvoker.java:249)
	at org.jboss.mx.server.MBeanServerImpl.invoke(MBeanServerImpl.java:642)
	at org.jboss.mx.util.MBeanProxyExt.invoke(MBeanProxyExt.java:177)
	at $Proxy29.stop(Unknown Source)
	at org.jboss.web.AbstractWebContainer.stop(AbstractWebContainer.java:391)
	at org.jboss.deployment.MainDeployer.stop(MainDeployer.java:632)
	at org.jboss.deployment.MainDeployer.undeploy(MainDeployer.java:605)
	at org.jboss.deployment.MainDeployer.undeploy(MainDeployer.java:600)
	at org.jboss.deployment.MainDeployer.undeploy(MainDeployer.java:573)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.jboss.mx.interceptor.ReflectedDispatcher.invoke(ReflectedDispatcher.java:144)
	at org.jboss.mx.server.Invocation.dispatch(Invocation.java:80)
	at org.jboss.mx.interceptor.AbstractInterceptor.invoke(AbstractInterceptor.java:122)
	at org.jboss.mx.server.Invocation.invoke(Invocation.java:74)
	at org.jboss.mx.interceptor.ModelMBeanOperationInterceptor.invoke(ModelMBeanOperationInterceptor.java:131)
	at org.jboss.mx.server.Invocation.invoke(Invocation.java:74)
	at org.jboss.mx.server.AbstractMBeanInvoker.invoke(AbstractMBeanInvoker.java:249)
	at org.jboss.mx.server.MBeanServerImpl.invoke(MBeanServerImpl.java:642)
	at org.jboss.mx.util.MBeanProxyExt.invoke(MBeanProxyExt.java:177)
	at $Proxy54.undeploy(Unknown Source)
	at org.jboss.deployment.scanner.URLDeploymentScanner.undeploy(URLDeploymentScanner.java:335)
	at org.jboss.ha.framework.server.FarmMemberService.undeploy(FarmMemberService.java:428)
	at org.jboss.deployment.scanner.URLDeploymentScanner.scan(URLDeploymentScanner.java:457)
	at org.jboss.deployment.scanner.AbstractDeploymentScanner$ScannerThread.doScan(AbstractDeploymentScanner.java:204)
	at org.jboss.deployment.scanner.AbstractDeploymentScanner$ScannerThread.loop(AbstractDeploymentScanner.java:215)
	at org.jboss.deployment.scanner.AbstractDeploymentScanner$ScannerThread.run(AbstractDeploymentScanner.java:194)
",MYFACES-327
"Bug Report:

facesContext.renderResponse not skipping validation when immediate event submitted twice.

Description:

The first time you render a page, and you hit the button that is configured as such:

            <h:selectOneRadio id=""showSecondMortgage""
                              value=""#{lreController.form.showSecondMortgage}""
                              immediate=""true""
                              onclick=""submit()""
                              valueChangeListener=""#{lreController.showSecondMortgageChanged}"">
                <f:selectItem itemLabel=""Yes"" itemValue=""true""/>
                <f:selectItem itemLabel=""No"" itemValue=""false""/>
            </h:selectOneRadio>

Notice that event handling is set to immediate.
Also notice that onclick=""submit()"".

First time through:

The event handler gets called as expected:
LREController.java:

    public void showSecondMortgageChanged(ValueChangeEvent event) {
        Boolean showSecondMortgage = (Boolean) event.getNewValue();
        form.setShowSecondMortgage(showSecondMortgage);
        FacesContext facesContext = getFacesContext(); //this method just get Faces context the normal way.
        facesContext.renderResponse();
    }

The event handler calls renderResponse.
The phase progression is as follows:
1) Restore View
2) Apply Request Values (event handler called)
3) Render Response.

The above is correct.

It is the second time through that the problems occur.

The second time the radio button get selected the event handler gets called, but the phase does not go 

directly to Render Response it goes as follows:

Restore View
Apply Request Values (event handler called)
Process Validation
Render Response

It still skips Model Update phase and such, but it does not skip Process Validation like it is suppose to.

This causes the form to be validated when it is not suppose to be validated.

I tried this with client side state saving and server side state saving with the same behaviour.



",MYFACES-326
"The Servlet impl of ExternalContext throws an NPE 
if ServletRequest.getRequestDispatcher() returns null, which
is a legit value when the target cannot be found:

I believe the correct code would be:

         RequestDispatcher requestDispatcher
             = _servletRequest.getRequestDispatcher(requestURI);
         // If there is no dispatcher, send NOT_FOUND
         if (requestDispatcher == null)
         {
            ((HttpServletResponse)_servletResponse).sendError(
                   HttpServletResponse.SC_NOT_FOUND);
 
            return;
        }

         try
         {
             requestDispatcher.forward(_servletRequest, _servletResponse);
  ..etc...",MYFACES-325
"Using MyfFaces in a secure tomcat throws AccessControlException in WebXmlParser
Here the Stacktrace:
18:41:53,664 FATAL WebXmlParser:105 - Unable to parse web.xml
java.security.AccessControlException: access denied (java.net.SocketPermission java.sun.com:80 connect,resolve)
    at java.security.AccessControlContext.checkPermission(AccessControlContext.java:264)
    at java.security.AccessController.checkPermission(AccessController.java:427)
    at java.lang.SecurityManager.checkPermission(SecurityManager.java:532)
    at java.lang.SecurityManager.checkConnect(SecurityManager.java:1034)
    at sun.net.www.http.HttpClient.openServer(HttpClient.java:459)
    at sun.net.www.http.HttpClient.<init>(HttpClient.java:214)
    at sun.net.www.http.HttpClient.New(HttpClient.java:287)
    at sun.net.www.http.HttpClient.New(HttpClient.java:299)
    at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:792)
    at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:744)
    at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:669)
    at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:913)
    at com.sun.org.apache.xerces.internal.impl.XMLEntityManager.setupCurrentEntity(XMLEntityManager.java:973)
    at com.sun.org.apache.xerces.internal.impl.XMLEntityManager.startEntity(XMLEntityManager.java:905)
    at com.sun.org.apache.xerces.internal.impl.XMLEntityManager.startDTDEntity(XMLEntityManager.java:872)
    at com.sun.org.apache.xerces.internal.impl.XMLDTDScannerImpl.setInputSource(XMLDTDScannerImpl.java:282)
    at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl$DTDDispatcher.dispatch(XMLDocumentScannerImpl.java:102
    at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.ja
    at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:834)
    at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:764)
    at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:148)
    at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(DOMParser.java:250)
    at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:292)
    at org.apache.myfaces.webapp.webxml.WebXmlParser.parse(WebXmlParser.java:90)
    at org.apache.myfaces.webapp.webxml.WebXml.init(WebXml.java:143)

After adding the following line to catalina.policy
permission java.net.SocketPermission ""java.sun.com:80"", ""connect"";
Parsing of web.xml works if the computer, on which tomcat is runnig, can make connects to the internet.

But if the computer is not able to connect to internet (e.g. after a proxy) then the above Excpetion is thrown again.
If you run in an not secure Tomcat you get an UnknownHostException. 
The parser allways trys to connect to http://java.sun.com.

The following changes in WebXmlParser solves the problem.
disable Validating for the parser. (dbf.setValidating(false))
Do we have to validate the web.xml file. Tomcat already parses and validates the web.xml. So if an
error in web.xml tomcat already before get an error.
The _EntityResolver try's to load the dtd-file and that is the problem.
With following _EntityResolver everything works fine.

private class _EntityResolver implements EntityResolver
 {
        public InputSource resolveEntity(String publicId, String systemId) throws IOException
        {
           return new InputSource(new StringReader(""""));
        }
}
",MYFACES-324
"After a server function changes the value of the date binded to the inputCalendar component, the popup window fails: the month is set to the ""undefined"" string, and an ""empty month"" is show in the middle pane.",MYFACES-323
"Here is a patch for removing:
 - all unused imports
 - unused local variables
 - unnecessary object creation
 - unused methods (not removed, just commented out)
",MYFACES-322
h:OutputLabel's for attribute is marked as required while the RI's 1.1.01 is not.,MYFACES-321
"The selectOneRadio component loses its modified value when the view is re-rendered due to validation errors (or the like).

For example: 

	<x:selectOneRadio id=""animalTypeGroup"" value=""#{animalManager.animalType}"" layout=""spread"">
		<f:selectItem itemValue=""dog"" itemLabel=""Dog""/>
		<f:selectItem itemValue=""cat"" itemLabel=""Cat""/>
		<f:selectItem itemValue=""fish"" itemLabel=""Fish""/>
	</x:selectOneRadio>

	<x:radio for=""animalTypeGroup"" index=""0"" />
	<x:radio for=""animalTypeGroup"" index=""1"" />
	<x:radio for=""animalTypeGroup"" index=""2"" />

	<x:outputText escape=""false"" value=""<br/>""/>

	<x:outputText id=""animalSpecies"" value=""Animal Species: ""/>
	<x:inputText value=""#{animalManager.animalSpecies}""/>

	<x:outputText escape=""false"" value=""<br/>""/>

	<x:outputText id=""animalGenus"" value=""Animal Genus: ""/>
	<x:inputText value=""#{animalManager.animalGenus}"" validator=""#{animalManager.validateGenus}""/>

	<x:outputText escape=""false"" value=""<br/>""/>
	<x:outputText escape=""false"" value=""<br/>""/>

	<x:commandButton value=""Validate Species"" action=""#{animalManager.submitForm}"" immediate=""true""/>

If you change the animalTypeGroup selection and then the animalGenus validation fails, the change to animalTypeGroup is lost when the view is re-rendered.",MYFACES-320
the processRestoreState of UIComponentBase should check the transient attribute of his childs and facets to determine if the state was saved. Since the processSaveState do this check. I add a patch for this.,MYFACES-319
"If <h:commandButton> is placed in the same form as <x:inputCalendar>, a conversion error occurs after pressing the command button.  It happens when HtmlCalendarRenderer.getConvertedValue() is called, because, at that point, submittedValue is null.

Here's an example snippet from a JSP that produces this error:

	<h:form>
		<x:inputCalendar value=""#{calendar.date}"" 
			monthYearRowClass=""yearMonthHeader""
			weekRowClass=""weekHeader""
			dayCellClass=""dayCell""
			currentDayCellClass=""currentDayCell""
		<h:inputText value=""#{actionBean.input}""></h:inputText>
		<h:commandButton value=""Submit"" action=""#{actionBean.action}""/>
	</h:form>
	<h:messages layout=""table"" />

- Brendan",MYFACES-317
"Migrate component documentation from marinschek.com tiki and wiki to forrest xdocs.

Sean Schofield and I wrote something along the lines of:

The component documentation should really go in the website. Install forrest and setup a FORREST_HOME environment variable (follow their instructions on that.)  Then you can checkout the ""myfaces/forrest"" project from SVN and build.

There is a sample component documentation that I setup (component-template.xml.)  This is the preferred way to document components.  Note that I setup a template for most components a while back (with just a bunch of to-dos.)  If you want to document one of those, please just replace with the new  forrest/content/xdocs/components/component-template.xml format.  The documentation for newspaperTable is representative of the new format.

you also need to patch forrest/content/site.xml so that the new component page shows up in
the index.  Ie, just add a

        <component-name=""component-name"" href=""component-name.html""/>

line in site.xml at the appropriate spot.

So that work is not being duplicated, add a comment to this issue for each component that you are documenting so that someone else doesn't start working on it at the same time.",MYFACES-316
"The expression language is coded to return null for any Map access using and empty String ("""") as a key.  Without a great deal of knowledge about the code behind the EL, I was able to find this:

  (source: org/apache/myfaces/el/PropertyResolverImpl.java)

    public Object getValue(Object base, Object property)
            throws EvaluationException, PropertyNotFoundException
    {
        try
        {
            if (base == null || property == null ||
                property instanceof String && ((String)property).length() == 0)
            {
                return null;
            }
            if (base instanceof Map)
            {
                return ((Map) base).get(property);
            }
                                                                                
            // If none of the special bean types, then process as normal Bean
            return getProperty(base, property.toString());
        }

The initial conditional makes it impossible to pass an empty String to a Map, even though this is not a violation of the Map contract.  A potential solution is:

           if (base == null || property == null ||
                (property instanceof String && ((String)property).length() == 0 &&
                 !(base instanceof Map)))
            {
                return null;
            }
            if (base instanceof Map)
            {
                return ((Map) base).get(property);
            }

Breaking out the if-conditional into smaller chunks may be more readable.",MYFACES-315
,MYFACES-313
"The Suns Reference Impl and also the existing javadoc for  javax.faces.el.ValueBinding 
having 4 abstract and one non-abstract method ""getExpressionString()"".

MyFaces have implemented all 5 methods abstract.

When someone (as i) uses an external component library which was compiled against the SUN RI, and the library is used now
with MyFaces and additional the Log level is set to DEBUG then in the code of ""DebugUtils.java:231"" an java.lang.AbstractMethodError
is thrown.

This is because the custom component library  has a class which extended the abstract class ""javax.faces.el.ValueBinding""
and did not implement  the ""getExpressionString()"" (Thats OK). 

But the MyFaces implementation of ""javax.faces.el.ValueBinding"" did also not implement the ""getExpressionString()"" (Thats the BUG).
And therefore for ""getExpressionString()""  no implementation can be found.

",MYFACES-312
"HtmlLinkRendererBase does not work with custom components that do not extend HtmlCommandLink since it casts to this class at line 323 in method renderJavaScriptAnchorStart.

i.e.
 String target = ((HtmlCommandLink)component).getTarget();

Other similar casting operations are done as follows:

 String target = null;
 if (component instanceof HtmlCommandLink) {
   target = ((HtmlCommandLink)component).getTarget();}
 else {
   target = (String)component.getAttributes().get(HTML.TARGET_ATTR);}

Which looks as if it would solve this problem.
",MYFACES-310
"Hi I know I am picky....
But has anyone checked the more dynamic components for mem leaks.
After having spent several hours yesterday to remove some of those dreaded leaks in my ajax component on sourceforge.

I ran the test against the jscookmenu today and got the painful result of several component leaks.

The problem in those cases is not how that the javascripts are incorrect but that the browsers basically cause so called component leaks once you have a cyclic reference between a global javascript object and one from the dom tree.
(at least the IE does dunno about the Moz)

The problem unfortunately is well known and called mem leak bug and since a few days there is a good tool at least on windows to detect them, which is called drip .


http://jgwebber.blogspot.com/2005/05/drip-ie-leak-detector.html

Given my experiences from yesterday, debugging my own stuff, I can say, that I trust the results from drip regarding leaked components, they resemble my experiences and errors I did myself.
It is not a big bug, but given that some webapps probably use the jscookmenu for hours, it is nasty enough, to be fixed in the long run.

The problem with the mem leak bug is, that a page change does not recycle the leaked objects only a closing of the browser does.
",MYFACES-309
"When using client-side node toggling I experienced two problems:

1) The context is missing for the expanded/collapsed image url
2) no _id is rendered to toggle the images as myFaces decide it is not necessary

The attached patches fix these issues",MYFACES-308
"Hello

It would be fine to implement strict attribute to JSF components. If this 
attribute was true and binding in value attribute was invalid, then component 
wouldn't be rendered. It is useful if someone use one JSF page whith 
components bounded to backing bean where the bean is not allways of the same 
class.

For example I have some page.jsp using backing bean BeanCaseA that extends 
BeanCaseGeneric or BeanCaseB that extends BeanCaseGeneric. The bean is 
accessible through beanHolder.beanCase. Then:

#{beanHolder.beanCase.propertyX} - exists in BeanCaseGeneric (so in BeanCaseA 
and BeanCaseB too)
#{beanHolder.beanCase.propertyA} - only exists in BeanCaseA
#{beanHolder.beanCase.propertyB} - only exists in BeanCaseB


The syntax would be eg:

<h:outputText value=""#{beanHolder.beanCase.propertyX}"" strict=""false"" />

If strict parameter is't specified then the default value would be true.
",MYFACES-307
"In my application, I have no icon in all menu items. I wrote the following in my JSP, without using the 'icon' attribute.
   <x:navigationMenuItem id=""nav_0"" itemLabel=""#{navigation_messages['home']}"" action=""go_home""/>

However, the javascript generated is:
   [['', 'Home', '_id6:go_home', '#', null],   ...   ]

But what I expect should be:
   [[null, 'Home', '_id6:go_home', '#', null],   ...   ]

If null string is generated, JSCookmenu will ignore javascript property ""mainFolderLeft"" in theme.js, causing some spacing problem between menu items.

KC",MYFACES-306
"the datamodel of the associated uidata for the datascroller component is always updated in the decode phase but should be dependent on an immediate flag.

I´ve created a patch for this issue which updates the uidata in depend on a immediate attribute. It defaults to apply the uidata change into the invoke application phase.

It is also possible to use a nested action listener for the datascroller to get scroller events",MYFACES-305
"If a global message is added to the FacesContext (clientId is null), then someone calls getClientIdsWithMessages(), the Iterator that is returned should include null.  It does not;  it does correctly do this on the RI.

Also, from code inspection, it appears that getClientIdsWithMessages() will return a client ID twice if two messages are added against the same client ID.",MYFACES-304
"The spec requires that FacesMessage.getSeverity() default to INFO.
Furthermore, a null severity passed to the constructor or setSeverity() should result in a NullPointerException.",MYFACES-303
"step1 : i set  ""true"" to   disabled property of inputText named input1 and commandButton named button1 in designe time.

step2 : i view the page with firefox browser ,and i can not modify the data of  input1 and can not click button1    of course .

step3:   i change the disable property of input1 and button1 to ""false"" in the page with Dom inspector tool    supplied by firefox.

step4:  now ,i can modify the data of  input1  and can click button1 .i find that the new data was submit to the     server and the  ation of button1  was invoked.

          it  means that  the disable property of myfaces components can not  work securely.
          I make the same test with SUN's RI, it works well.
",MYFACES-302
"i want make the renderd property of input  components of myfaces to be dynamic by binding it with a boolean variable of  
backingbean ,but i find that all input components of myfaces can not save the sates  when they are not rendered at the first time",MYFACES-301
"i want make the renderd property of input  components of myfaces to be dynamic by binding it with a boolean variable of  
backingbean ,but i find that all input components can not save the sates of input components when they are not rendered at the first time",MYFACES-300
"i want make the renderd property of input  components of myfaces to be dynamic by binding it with a boolean variable of  
backingbean ,but i find that all input components can not save the sates of input components when they are not rendered at the first time",MYFACES-299
"i want make the renderd property of input  components of myfaces to be dynamic by binding it with a boolean variable of  
backingbean ,but i find that all input components can not save the sates of input components when they are not rendered at the first time",MYFACES-298
"i make the rendered property of   input components  to be dynamic by binding it whith a boolean variable of backingben,but 
myface can not save the sates of input components when they are not rendered at the first time.",MYFACES-297
"i make the rendered property of   input components  to be dynamic by binding it whith a boolean variable of backingben,but 
myface can not save the sates of input components when they are not rendered at the first time.",MYFACES-296
"   <x:dataTable      ......preserveDataModel=""true"" var=""row"">
      <h:column>
              <h:inputText value=""#{row.name}"" rendered=""#{myBean.renderedName}"" />
     </h:colunmn>
   ........
 </x:dataTable>

 the inputText  of  myfaces  is not able to save state when it is not rendered at the first time .",MYFACES-295
"During the development of a framework based on Struts and JSF (using the struts-faces integration library) I came accross a problem with DummyFormUtils. The current way DymmyFormUtils is handled does not allow the developer to extend the behaviour in any way. For the struts-faces library a token field needs to be added to the form. This token always needs to be submitted, regardless of the form used (input or dummy). Currently the only way of adding such a field seems to be changing the source of DummyFormUtils; not a very flexible and reusable solution.

The main cause of this is the use of a static method for writing the dummy form and the lack of a factory for creating an instance of the DummyFormUtils. I propose DummyFormUtils is transformed into a singleton with a configurable implementation (probably through an interface). Futhermore the writeDummyForm should have a way of extending the default behaviour, probably with a protected method responsible for writing the internals of the form.",MYFACES-294
"When using the Sun JSF RI (included in IBM Rational Software Architect 6.0) with the myfaces-extensions.jar, the JSCookMenu actions doesn't work. This has been tested with the MyFaces 1.0.9m9, 1.0.9rc3 and the latest subversion version.

Here is a simple piece of sample code that doesn't work. When clicking on the option nothing happens. Checking the POST parameters, everything seems to be ok.

<%@ page session=""false"" contentType=""text/html;charset=utf-8""%>
<%@ taglib uri=""http://java.sun.com/jsf/html"" prefix=""h""%>
<%@ taglib uri=""http://java.sun.com/jsf/core"" prefix=""f""%>
<%@ taglib uri=""http://myfaces.apache.org/extensions"" prefix=""x""%>

<f:view>
	<html>
		<body>
			<h:panelGrid id=""header"" columns=""1"">
				<x:jscookMenu layout=""hbr"" theme=""ThemeOffice"">
					<x:navigationMenuItem id=""navItem"" itemLabel=""General"" action=""pepe"" />
				</x:jscookMenu>
			</h:panelGrid>
		</body>
	</html>
</f:view>

",MYFACES-293
"I've tried the 'official' MyFaces example. I have choosen the Validations under the Examples, and tried to validate my mispelled email-address: sebcsaba&freemail.hu ('&' instead of '@'). When I clicked on 'Submit', the server threw an exception described bellow.
(Also the 'Info' menuitem doesn't works on the top menu bar.)

java.lang.NoClassDefFoundError: org/apache/oro/text/perl/Perl5Util
	org.apache.commons.validator.EmailValidator.isValid(EmailValidator.java:90)
	org.apache.commons.validator.GenericValidator.isEmail(GenericValidator.java:238)
	org.apache.myfaces.custom.emailvalidator.EmailValidator.validate(EmailValidator.java:92)
	javax.faces.component._ComponentUtils.callValidators(_ComponentUtils.java:133)
	javax.faces.component.UIInput.validateValue(UIInput.java:280)
	javax.faces.component.UIInput.validate(UIInput.java:300)
	javax.faces.component.UIInput.processValidators(UIInput.java:170)
	javax.faces.component.UIComponentBase.processValidators(UIComponentBase.java:427)
	javax.faces.component.UIForm.processValidators(UIForm.java:66)
	javax.faces.component.UIComponentBase.processValidators(UIComponentBase.java:427)
	javax.faces.component.UIComponentBase.processValidators(UIComponentBase.java:427)
	javax.faces.component.UIComponentBase.processValidators(UIComponentBase.java:427)
	javax.faces.component.UIViewRoot.processValidators(UIViewRoot.java:162)
	org.apache.myfaces.lifecycle.LifecycleImpl.processValidations(LifecycleImpl.java:208)
	org.apache.myfaces.lifecycle.LifecycleImpl.execute(LifecycleImpl.java:92)
	javax.faces.webapp.FacesServlet.service(FacesServlet.java:109)
	org.apache.myfaces.component.html.util.ExtensionsFilter.doFilter(ExtensionsFilter.java:112)
",MYFACES-292
"The Tree2 component throws errors when run in ""server side"" mode using the Sun RI.

As described by Balaji Saranathan

The offending code in tree2 seems to be the getMyForm() in com.sun.faces.renderkit.html_basic.CommandLinkRenderer.java. When this is called in the encodeEnd() of commandLinkRenderer, it returns null.  I tried enclosing the tree2 inside a form tag(ugly but a try though) but doesn't seem to work. Going through the code, I find the HtmlLinkRendererBase in Myfaces uses a DummyFormUtils while commandLinkRenderer in SUN RI tries to raise an exception saying it has to be enclosed within a form.
",MYFACES-291
"savedPricings are return a list , method handleMoveTo  process the event, but  it doesn't work inside of dataList. when I move selectOneMenu outside of dataList, it works fine.


 <x:dataList id=""testlist"" value=""#{dealerPricing.savedPricings}"" 
  var=""pricing"" 
  rowIndexVar=""index"">
   <h:selectOneMenu 
    value=""select#{index}"" 
    valueChangeListener=""#{dealerPricing.handleMoveTo}""
    onchange=""this.form.submit()"">
    <f:selectItem itemValue=""select#{index}"" itemLabel=""Move To""/>    
    <f:selectItems value=""#{dealerPricing.moveToMap}"" />
   </h:selectOneMenu> 
 </x:dataList> 

--------------------
	public void handleMoveTo(ValueChangeEvent e){
		System.out.println(""hopefully listener is working"");
                ............
	}
",MYFACES-289
"There seems to be a big bug in the dataTable component implementation.
If you use two dataTable components within each other the facets of the inner table do not work correctly.
For example if you use a inputText component in the footer (of the inner table) the value is not updated an no valueChangeListener is notified.

Here an example:

<f:view>
<html>
    <body>
    <h:form>
    <h:dataTable id=""outer"" value=""#{test}"" var=""outeritem"">
        <h:column>
                <h:dataTable id=""inner"" value=""#{outeritem}""  var=""item"" >
		.....
            
           		 <f:facet name=""header"">
                            		<h:inputText id=""myinput"" valueChangeListener=""#{testBean.listener}"" />
                	</f:facet>
        	</h:dataTable>
        </h:column>
    </h:dataTable>  
    </h:form>
    </body>
</html>
</f:view>

I have found one solution, but I'm not sure if it is the right way:

The funkctions to save the childState for the nested UIData have to be fixed in javax.faces.component.UIData:



private void restoreDescendantComponentStates(
		FacesContext context,
		UIComponent component,
		boolean saveState)
	{
		for (Iterator i = component.getFacetsAndChildren(); i.hasNext();)
		{
			UIComponent child = (UIComponent) i.next();
			//clear this descendant's clientId:
			child.setId(child.getId());
			//HACK: This assumes that setId always clears the cached clientId. Can we be sure?

			if (saveState)
			{
				//see saveDescendantComponentStates(UIComponent)
				if (child instanceof UIData)
				{
					UIData childUIData = (UIData) child;
					Object state =
						_rowState._clientIdsToChildUIDataStates.get(
							childUIData.getClientId(context));
					if (state == null)
					{
						UIDataRowState initialState =
							(UIDataRowState) _rowState._clientIdsToChildUIDataStates.get(getInitialClientId(context, child));

						if (initialState == null)
						{
							throw new IllegalStateException(
								""No initial state defined for clientId: "" + child.getClientId(context));
						}

						state = new UIDataRowState(initialState);
					}



					childUIData._rowState = (UIDataRowState) state;
					childUIData.restoreDescendantComponentStates(context, childUIData, true); // fix
					
					restoreDescendantComponentStates(context, component, false);
					continue;
				}

				if (!_firstTimeRendered && child instanceof EditableValueHolder)
				{
					EditableValueHolder childEVH = (EditableValueHolder) child;
					Object state =
						_rowState._clientIdsToChildEVHStates.get(child.getClientId(context));
					if (state == null)
					{
						state =
							_rowState._clientIdsToChildEVHStates.get(
								getInitialClientId(context, child));
					}
					((EditableValueHolderState) state).restore(childEVH);
					
				}
			}

			restoreDescendantComponentStates(context, child, saveState);
		}
	}



private void saveDescendantComponentStates(FacesContext context, UIComponent component)
	{
		for (Iterator i = component.getFacetsAndChildren(); i.hasNext();)
		{
			//TODO: what if child is an EditableValueHolder AND a UIData?

			UIComponent child = (UIComponent) i.next();
			if (child instanceof UIData)
			{
				
				UIData childUIData = (UIData) child;
				childUIData.saveDescendantComponentStates(context, childUIData); // fix
				_rowState._clientIdsToChildUIDataStates.put(
					childUIData.getClientId(context),
					childUIData._rowState);
				continue;
			}

			if (child instanceof EditableValueHolder)
			{
				EditableValueHolder childEVH = (EditableValueHolder) child;
				_rowState._clientIdsToChildEVHStates.put(
					child.getClientId(context),
					new EditableValueHolderState(childEVH));
			}

			saveDescendantComponentStates(context, child);
		}
	}",MYFACES-288
"The column tag in myfaces_html.tld is declared as

<!-- column -->
    <tag>
        <name>column</name>
        <tag-class>org.apache.myfaces.taglib.html.HtmlColumnTag</tag-class>
        <body-content>JSP</body-content>
        &ui_component_attributes;
     </tag>

The attributes should, however be ""&ui_column_attributes"". Due to this it is currently impossible to use a ""style=.."" attribute in ""<h:column>"" although, according to the spec, it should be possible.
",MYFACES-287
"x:datatable doesn't support the java.util.Set interface. This is caused by the overriden createDataModel method in HtmlDatatableHack doesn't handle generic java collection interface ( It does in UIData ).
",MYFACES-286
"I have a selectOneMenu like this:

<h:selectOneMenu  id=""marcio"" value=""#{appoinmentBean.recurrenceType}"">
              <h:messages/>
              <f:selectItem itemValue=""0"" itemLabel=""Dia(s)""/>
              <f:selectItem itemValue=""1"" itemLabel=""Semana(s)""/>
              <f:selectItem itemValue=""2"" itemLabel=""Mês(ses)""/>
              <f:selectItem itemValue=""3"" itemLabel=""Ano(s)""/>
</h:selectOneMenu>

and at the bean i have a String recurrenceType, and the proper setter and getter for it.. But when i submit the form it gives me a conversion error message.
I've already tried to change the type of the attribute to Object, Collection, List and etc, but there's no solution. When i remove the value attribute from the selectOneMenu, the form is submited, except for the select value, of course.",MYFACES-285
"Hi,

Using x:inputCalendar with firefox 1.0.4 doesn't work and generate javascript errors.

I've corrected some things in the popcalendar.js file. my new popcalendar.js file is joined to this big in order to correct this.

Be free to correct this in order to respect our developpement rules.

regards,

Ludovic smadja",MYFACES-284
"In 1.0.9 and the trunk, when a servlet configuration includes an ""init-param"", WebXmlParser (src/share/org/apache/myfaces/webapp/webxml/WebXmlParser.java) logs a warning:

WARN: Ignored element 'init-param' as child of 'servlet'.

This clutters up the log with distractions. Here's the responsible code:

    private void readServlet(Element servletElem)
    {
...
                else if (n.getNodeName().equals(""description"") || n.getNodeName().equals(""load-on-startup""))
                {
                    //ignore
                }
                else
                {
                    if (log.isWarnEnabled()) log.warn(""Ignored element '"" + n.getNodeName() + ""' as child of '"" + servletElem.getNodeName() + ""'."");
                }

Since init-param is a perfectly fine element, it should be ignored just like ""load-on-startup"".

Also, any element that MyFaces doesn't recognize should arguably be logged at an ""info"" level, like nodes that it doesn't recognize.
",MYFACES-283
MouseOver titles do not show up on the inputDate buttons to launch the DateBox/Calendar,MYFACES-282
"myfaces-ext.tld (in myfaces-1.0.9-src.zip) has a definition for tree2 that has the id defined twice.  When running it on WSAD (or RSA), it has the effect of putting an extra set of quotes around the id value itself.  Thus, id=""myId"" gets read as the string """"myId"""", which then gets rejected at run-time.  The duplicate definition of id also makes it mandatory, so leaving it out is not an option either when using it.

I corrected the problem in my source code copy by taking out the following lines from myfaces-ext.tld within the <tree2> definition:

        <attribute>
            <name>id</name>
            <required>true</required>
        </attribute>

This seems to work, because there already are the following lines in the the tld for tree2 (towards the bottom) to define the id:

<!-- UIComponent attributes -->
        <attribute>
            <name>id</name>
            <required>false</required>
            <rtexprvalue>false</rtexprvalue>
            <type>java.lang.String</type>
            <description>Every component may have an unique id. Automatically created if omitted.</description>
        </attribute>
",MYFACES-281
"To my mind it would be better, if the regExprValidator's ErrorMessage would show a text like this:
The submitted value ({0}) doesn't fit the pattern ""{1}"". 
Because this gives the user and the developer a more detailed information than ""the given value ({0}) is not valid"". Here the user/ developer has no information what might be the correct input.
However, I changed the code of RegExprValidator and the german, english and standard message properties so that the pattern is shown in the error-message.

",MYFACES-279
"Any code that iterates the rows using getRowCount() would fail, because it might be -1 (for ResultSetDataModel).
Instead, isRowAvailable() should be used to iterator over the rows, and ""break"" otherwise.

E.g. in javax.faces.component.UIData
private void processColumnChildren(FacesContext context, int processAction) {
		int first = getFirst();
		int rows = getRows();
		int last;
		if (rows == 0) {
			last = getRowCount();
		} else {
			last = first + rows;
		}
		for (int rowIndex = first; rowIndex < last; rowIndex++) {
			setRowIndex(rowIndex);
			if (isRowAvailable()) {

Should be replaced with 

private void processColumnChildren(FacesContext context, int processAction) {
		int first = getFirst();
		int rows = getRows();
		int last;
		if (rows == 0) {
			last = getRowCount();
		} else {
			last = first + rows;
		}
		for (int rowIndex = first; last==-1 || rowIndex < last; rowIndex++) {
			setRowIndex(rowIndex);
			if (isRowAvailable()) {
			} else
			        break


",MYFACES-278
"i'm using a form that contain a dataTable component . There is also a button that modify the model of the table with
an array of only one element with the single fields initialized to """" (String fields) and has the attribute immediate set
to true. When the form is rendered after i have pressed the button with the immediate attribute set  to true ,the value that i obtain is the value submitted and not the value of the model.
I have found the following workaround that i have put on a properties of the row of the table that is called on the rendering phase:

if (component.getSubmittedValue() != null &&
    arrayOfRecord[model.getRowIndex()].getCodice() != null &&
    !component.getSubmittedValue().equals(arrayOfRecord[model.getRowIndex()].getCodice())) {
      component.setSubmittedValue(arrayOfRecord[model.getRowIndex()].getCodice());
}

I have used the value of the model  and not the component.getValue() because also this was not the same
of the value of te model.
I can try to create a simple case if it is necessary o the problem is not clear.
The problem seems the same of the issue 187  (that it is closed) but i i have tested the night builds and nothing
changed. However in the release notes of the night builds the issue is not reported as solved.
",MYFACES-277
"Hi !

I would like to override some style attributes by my own style-class for the 'panelTabbedPane' and the 'panelTab'.
This only works for attributes not defined as 'built in' by the TabbedPaneRenderer .

 For instance: If you look at the HtmlTabbedPaneRenderer-Code->

   private static final String ACTIVE_HEADER_CELL_STYLE =
        ""border-top: 2px outset #CCCCCC; "" +
        ""border-right: 2px outset #CCCCCC; "" +
        ""border-bottom: 0px none; "" +
        ""border-left: 2px outset #CCCCCC; "" +
        ""text-align: center; "";

The rendered html-page contains this attributes in the style-property of the <td>-tag and I can not override it by use of my own class-attrbute (pointing to my css-file).

For example:
<td style=""border-top: 2px outset #CCCCCC; border-right: 2px outset #CCCCCC; border-bottom: 0px none; border-left: 2px outset #CCCCCC; text-align: center; background-color:#FFFFFF"" class=""deviceActiveTabStyle"">


Styles defined by your style-attribute override styles defined by my  class-attribute !

Would be great to see this enhancement!
Thanks for your outstanding work and best regards, Andi
",MYFACES-276
"By creating a converter that's registered as such:

	<converter>
		<converter-for-class>[Ljava.lang.String;</converter-for-class>
		<converter-class>asrs.app.bpm.web.converter.StringArrayConverter</converter-class>
	</converter>

The getAsObject method is not being called while the getAsString method is.  This behavior is double apparent since the built-in converter creates a comma-separatred list (getAsString), while same list is passed back, and not a String array (getAsObject is not being called)..
",MYFACES-275
"A corresponding redundant event handler should be added to all components that use javascript events.  The event mappings are listed below.

   OnClick -> OnKeyPress
   OnMouseDown -> OnKeyDown
   OnMouseUp -> OnKeyUp
   OnMouseOver -> OnFocus
   OnMouseOut -> OnBlur
   OnDblClick -> OnKeyDown
   OnMouseMove -> (no equivalent)
   OnDragDrop -> (no equivalent)


This is a change that would help support Section 508 requirements when using Myfaces:

WCAG Priority 2 : Checkpoint 6.4/9.3 [priority 2]
Section 508 : Section 1194.22 - Paragraph L

This element uses a device-dependent event handler that does not have a redundant device-dependent event handler, as required by both the Section 508 and WCAG standards. This may be inaccessible to some users of assistive technologies who cannot trigger the event because, for example, they do not use a mouse. An event handler is a script that runs upon a specified event, such as when the mouse is clicked or is moved into a certain region of the page. Some event handlers produce purely cosmetic effects. But if an event handler results in some substantial information or function, such as displaying a pull-down menu, it is important that a redundant input mechanism be provided for this element. This is most commonly done by assigning a keyboard-based event handler for every mouse-based event handler. Further, event handlers should not rely on mouse coordinates, which prevents device-independent input. For scripts and applets, page authors should ensure that event handlers are input device-independent. For scripts, specify logical event handlers rather than device-dependent event handlers. Alternatively, page authors should remove the event handlers if they do not wish to add a redundant device-dependent one.

",MYFACES-274
"Hi, 

I´m having problems with the user of x:dataTable and x:dataScroller when displaying hibernate generated collections (List).
In all my hibernate persistent objects I have the collection mapped as java.util.Collection, when I put in a page an x:dataTable referencing an Collection in the value attribute, AND THE PRESERVEDATAMODEL attribute is set to TRUE, I only got the first page, when attempt to go to the second page, I get an exception (Attempt to coerce a value of type ""br.com.venus.model.valueobjects.UserVO"" to type ""java.util.Collection"" ).
Well, I downloaded the last HEAD sources from CVS to investigate the error, and found that the error is in the org.apache.myfaces.component.html.ext.HtmlDataTable class, on the method updateModelFromPreservedDataModel(FacesContext context), the code from CVS is bellow :

    private void updateModelFromPreservedDataModel(FacesContext context)
    {
        ValueBinding vb = getValueBinding(""value"");
        if (vb != null && !vb.isReadOnly(context))
        {
            _SerializableDataModel dm = (_SerializableDataModel)_dataModel;
            Class type = vb.getType(context);
            if (DataModel.class.isAssignableFrom(type))
            {
                vb.setValue(context, dm);
            }
            else if (List.class.isAssignableFrom(type))
            {
                vb.setValue(context, (List)dm.getWrappedData());
            }
            else if (OBJECT_ARRAY_CLASS.isAssignableFrom(type))
            {
                List lst = (List)dm.getWrappedData();
                vb.setValue(context, lst.toArray(new Object[lst.size()]));
            }
            else if (ResultSet.class.isAssignableFrom(type))
            {
                throw new UnsupportedOperationException(this.getClass().getName() + "" UnsupportedOperationException"");
            }
            else
            {
                //Assume scalar data model
                List lst = (List)dm.getWrappedData();
                if (lst.size() > 0)
                {
                    vb.setValue(context, lst.get(0));
                }
                else
                {
                    vb.setValue(context, null);
                }
            }
        }
    }

In the code if the type variable is an Collection, not an List , the program will enter in the last else block and cast the object to List (This will work because Hibernate return an List object) and then try to set the binding to the first object of the list, is here that the error occurs.

I think that we need in that method another if asking if the Collection received is an instance of an Collection an not use the isAssignableFrom method, in that way, we will have problems with Interfaces, IMO that method need to work with any type of Collection.

Well, my question is, I´m thinking on the right way or exist another more elegant way to correct this problem??

Thanks
Rogerio
",MYFACES-273
Encoding all non-latin characters is unnecessary if the response specifies UTF-8 as character encoding and causes a major performance hit. Will provide a patch to do this only when UTF-8 is not used as encoding.,MYFACES-272
"Myfaces 1.0.9 - SVN sources from 6/6/2005.

I have the following in my JSP:

        <%-- effective date --%>
        <h:outputLabel id=""outputLabel16"" for=""effectiveDate""
value=""#{msg.nasageneral_effective_date}""/>
        <x:inputDate id=""effectiveDate""
value=""#{nasaGeneralBean.effectiveDate}"" required=""true"" popupCalendar=""true""/>
        <h:panelGroup id=""panelGroup14"">
          <h:outputLabel id=""outuptLabel17"" for=""effectiveDate""
value=""#{msg.common_required_char}"" styleClass=""requiredchar""/>
          <h:message id=""message12"" for=""effectiveDate""/>
        </h:panelGroup>

When this is rendered the id gets broken into three:

id=""form4:effectiveDate.day"",
id=""form4:effectiveDate.month"",
id=""form4:effectiveDate.year"" 

The problem is that all of my ""for"" attributes refer to
form4:effectiveDate"".  This causes a validation error when the validator
can't find the id given in the for attribute.

I've tried changing values for both the for attribute and the id attribute
but it seems to only cause more/different problems.

Thanks,
-Mark",MYFACES-271
"I've implemented the myfaces extension for the inputSecret component. When using the displayValueOnly attribute, five asterisks are rendered instead of the real value, so the password value cannot be read.",MYFACES-270
"I've implemented the extended version of the graphicImage component in order to have the extended myfaces attributes (user role support, forceId...). As you may guess (Martin ;-) ) enabledOnUserRole has no effect on an image and this attribute although it is on the tld it is ignored.",MYFACES-269
"In my project I have a form for editing a user profile. There are three inputTexts (login, password, e-mail) and two commandButtons (Save profile, Cancel) on it. When I change data in inputTexts and press ""Save profile"" my application first saves a new data to the database and then navigates to a form displaying a user profile with changes (It's OK).
But if I change data in inputTexts and then decide to NOT save a new data I press ""Cancel"" and simply navigate to a form displaying a user profile. But profile displays with changes. This is not what expected. If I cancel changes the form should display a profile with no changes.

Does anyone have an idea how I can tune MyFaces to solve this problem?",MYFACES-268
"In a form like the following:
 
<h:form>
  <h:selectManyCheckbox>
    <f:selectItems value=""#{test.items}""/>
  </h:selectManyCheckbox>
</h:form>
 
where test.items is an ArrayList with a number of SelectItemGroup objects, each one containing some SelectItem objects, the following happens: Only the SelectItemGroup labels are rendered together with a checkbox before each label. The selectItem objects inside the selectItemGroup objects aren't rendered. 

The same is true when using selectOneRadio instead of selectManyChexkbox.

To reproduce create a jsf page containing the above form and hook the #{test} managed bean to the following class:
 
public class Test {
  private Collection items; 

  public Test() {
    items = new ArrayList(2);

    SelectItem options1[] = {
      new SelectItem(""200"", ""Duke's Quarterly"", """"),
      new SelectItem(""202"", ""Duke's Diet and Exercise Journal"", """"),
    };
    SelectItem options2[] = {
      new SelectItem(""201"", ""Innovator's Almanac"", """"),
      new SelectItem(""203"", ""Random Ramblings"", """"),
      };

    SelectItemGroup g1 = new SelectItemGroup(""Duke's"", null, true, options1);
    SelectItemGroup g2 = new SelectItemGroup(""General Interest"", null, false, options2);
    items.add(g1);
    items.add(g2);
  }

  public Collection getItems() {
    return items;
  }

}",MYFACES-267
"The implementation for the alias bean component is a little bit tricky now.

In our application the new code since the 1.0.9 release is not working.
IMO it is because of the Alias.remove method which doesn´t reset the used member variables _active and evaluatedExpression (BTW is it possible to use a single notation for member variables like _ or m ...).

Our application is running fine again after applying the patch (I will attach it to this issue).
",MYFACES-266
This doesn't seem to accomplish anything.  My HTML certainly isn't pretty as a result of using it.  We have received several complaints of this feature not working on the user's list.  Given that there are numerous plugins to help deal with formatting HTML I don't think its worth the time and effort to make this feature work properly.,MYFACES-265
"The component properties which expect integers cast the result of the valuebindings to Integer. This prevents the use of el expressions like #{2} since a integer literal is evalutated to a Long value. I know the RI also cast to Integer but I have not found it in the spec that this is a requirement. IMO that wouldn´t make sense either.

I would suggest to cast to Number and call Number.intValue() which handles the conversion to int.

I have found the problem in the following components:

HtmlDataScroller.getFastStep()
HtmlDataScroller.getPaginatorMaxPages()
HtmlPopup.getDisplayAtDistanceX()
HtmlPopup.getDisplayAtDistanceY()
SelectOneCountry.getMaxLength()
HtmlPanelTabbedPane.getSelectedIndex()
HtmlDataTable.getBorder()
HtmlInputSecret.getMaxlength()
HtmlInputSecret.getSize()
HtmlInputText.getMaxlength()
HtmlInputText.getSize()
HtmlInputTextarea.getCols()
HtmlInputTextarea.getRows()
HtmlPanelGrid.getBorder()
HtmlPanelGrid.getColumns()
HtmlSelectManyCheckbox.getBorder()
HtmlSelectManyListbox.getSize()
HtmlSelectOneListbox.getSize()
HtmlSelectOneRadio.getBorder()
",MYFACES-264
"I have been running some performance tests against our MyFaces application. I noticed the following method could be quicker: 

UnicodeEncoder.encode() 

The HtmlResponseWriterImpl calls this method for all response.write(String) calls - so it's used a lot! 

Most of the components we have created for use with MyFaces output some quite long strings to this write.out() method, so the declaration:

        StringBuffer sb = new StringBuffer(); 

in the method: 

        public static String encode (String string, boolean encodeNewline, boolean encodeSubsequentBlanksToNbsp) {?} 

is therefore inefficient. Would is possible for it to be changed create the StringBuffer on demand when it meets the first character that requires encoding? Or at the very least create a more sensible sized buffer:
StringBuffer sb = new StringBuffer(string.length() + 4); 
",MYFACES-263
"When using checkboxes in form submissions, the following warning is spit out:

org.apache.myfaces.renderkit.html.HtmlRendererUtils - There should always be a submitted value for an
input if it is rendered, its form is submitted, and it is not disabled or read-only.

This is reproducable using the myfaces-example/selectbox.jsf demo.

In my app, some varient of this error is causing JSF to skip processing my events.",MYFACES-262
"In our JSP we have,

[snip]
     <p>
     <h:message id=""errors"" for=""helloInput"" style=""color: red""/>
     </p>
     <p>
     <h:outputLabel for=""helloInput"" >
            <h:outputText id=""helloInputLabel""
                          value=""Enter number of controls to display:""/>
          </h:outputLabel>
          <h:message id=""errors"" for=""helloInput"" style=""color: red""/>
[snip]

(This is the ""hello world"" from _JavaServer Faces In Action_ example.) As the 'for' tag refers to helloInput, a component that hasn't yet been defined, we get an exception and the app won't deploy (below),

Changing the order of the components, so the ""helloInput"" outputLabel is defined first works, although we lose the ordering. Also, the notion of wrapping the two components as children in a panelGroup does not appear to work, either.

Behavior seen in 1.0.9 and nightly snapshot 20050530, running with WLS 8.1SP3 and Tomcat 5.0.18.

javax.faces.FacesException: Could not render Message. Unable to find component 'helloInput' (calling findComponent on component 'welcomeForm:errors')
		 at org.apache.myfaces.renderkit.html.HtmlMessageRendererBase.renderMessage(Ljavax.faces.context.FacesContext;Ljavax.faces.component.UIComponent;)V(HtmlMessageRendererBase.java:105)
		 at org.apache.myfaces.renderkit.html.HtmlMessageRenderer.encodeEnd(Ljavax.faces.context.FacesContext;Ljavax.faces.component.UIComponent;)V(HtmlMessageRenderer.java:53)
		 at javax.faces.component.UIComponentBase.encodeEnd(Ljavax.faces.context.FacesContext;)V(UIComponentBase.java:341)
... etc ...

",MYFACES-261
"Deploying to Portlets:
- one containing x:tree2-component
- one containing x:dataTable-component with the x:commandSortHeader
results in rendering two DummyForms with the same form name.
So clicking the command link in the datatable triggers the tree´s DummyForm which results in an action request to the tree portlet.",MYFACES-260
"I have a MBean in session scope, which holds the data for the datatable. 

The scroller for the table works fine, when I use it once or the rowCount of data never changes. But I get in trouble when I change the page of the scroller and change the rowCount.

Example:

1. datatable has 100 rows, scroller shows 10 rows
2. I jump to page 5
... everything is fine

After this the data changes ... the datatable has now 5 rows

And now the problem comes out: The pageIndex of the scrollerComponent is still on page 5 ... and ... there is no data. When I jump to page 1 manually (by rewind-button) the data shows up on the first page.

I tried all the examples with this combination and got allways the same situation. So, I think it could be a bug ...",MYFACES-259
"Trying to build from sources, generating components was failing on FileNotFoundException when using the generate-all-components-components target.  Also failed on any of the targets in build/codegen/build.xml where multiple includes were selected.  Adjusted logic in ComponentGeneratorTask, patch appended.  Reran, found some code duplication post generation in HtmlDataTable and HtmlInputTextarea, patches appended.

-------------------------------

Index: ComponentGeneratorTask.java
===================================================================
--- ComponentGeneratorTask.java	(revision 178731)
+++ ComponentGeneratorTask.java	(working copy)
@@ -86,25 +86,20 @@
 
         ComponentGenerator generator = new ComponentGenerator(_destdir, _velocityLoaderPath);
 
-        if(_includes==null)
+        DirectoryScanner ds = getDirectoryScanner(_basedir);
+        if (_includes != null)
         {
-            DirectoryScanner ds = getDirectoryScanner(_basedir);
-            ds.scan();
-
-            String[] files = ds.getIncludedFiles();
-            for (int i = 0; i < files.length; i++)
-            {
-                String xmlFileName = files[i];
-                log.info(""on xmlFileName : ""+files[i]);
-                generator.generate(new File(_basedir, xmlFileName));
-            }
+            ds.setIncludes(_includes.split("",""));
         }
-        else
-        {
-            //_includes = _includes.replace('/','\\');
 
-            log.info(""on xmlFileName : ""+_basedir+""/""+_includes);
-            generator.generate(new File(_basedir, _includes));
+        ds.scan();
+
+        String[] files = ds.getIncludedFiles();
+        for (int i = 0; i < files.length; i++)
+        {
+            String xmlFileName = files[i];
+            log.info(""on xmlFileName : ""+files[i]);
+            generator.generate(new File(_basedir, xmlFileName));
         }
     }
 



Index: HtmlDataTable.java
===================================================================
--- HtmlDataTable.java	(revision 178731)
+++ HtmlDataTable.java	(working copy)
@@ -61,8 +61,6 @@
 
     private String _sortColumn = null;
     private Boolean _sortAscending = null;
-    private String _rowOnMouseOver = null;
-    private String _rowOnMouseOut = null;
 
     public void setValue(Object value)
     {
@@ -659,51 +657,11 @@
         return v != null ? v.booleanValue() : DEFAULT_SORTASCENDING;
     }
 
-    public void setRowOnMouseOver(String rowOnMouseOver)
-    {
-        _rowOnMouseOver = rowOnMouseOver;
-        // update model is necessary here, because processUpdates is never called
-        // reason: HtmlCommandSortHeader.isImmediate() == true
-        ValueBinding vb = getValueBinding(""rowOnMouseOver"");
-        if (vb != null)
-        {
-            vb.setValue(getFacesContext(), _rowOnMouseOver);
-            _rowOnMouseOver = null;
-        }
-    }
-
-    public String getRowOnMouseOver()
-    {
-        if (_rowOnMouseOver != null) return _rowOnMouseOver;
-        ValueBinding vb = getValueBinding(""rowOnMouseOver"");
-        return vb != null ? (String)vb.getValue(getFacesContext()) : null;
-    }
-
-    public void setRowOnMouseOut(String rowOnMouseOut)
-    {
-        _rowOnMouseOut = rowOnMouseOut;
-        // update model is necessary here, because processUpdates is never called
-        // reason: HtmlCommandSortHeader.isImmediate() == true
-        ValueBinding vb = getValueBinding(""rowOnMouseOut"");
-        if (vb != null)
-        {
-            vb.setValue(getFacesContext(), _rowOnMouseOut);
-            _rowOnMouseOut = null;
-        }
-    }
-
-    public String getRowOnMouseOut()
-    {
-        if (_rowOnMouseOut != null) return _rowOnMouseOut;
-        ValueBinding vb = getValueBinding(""rowOnMouseOut"");
-        return vb != null ? (String)vb.getValue(getFacesContext()) : null;
-    }
-
     //------------------ GENERATED CODE BEGIN (do not modify!) --------------------
 
     public static final String COMPONENT_TYPE = ""org.apache.myfaces.HtmlDataTable"";
     private static final boolean DEFAULT_PRESERVEDATAMODEL = false;
-    private static final boolean DEFAULT_PRESERVESORT = true;
+    private static final boolean DEFAULT_PRESERVESORT = false;
     private static final boolean DEFAULT_RENDEREDIFEMPTY = true;
 
     private Boolean _preserveDataModel = null;
@@ -714,6 +672,8 @@
     private String _rowIndexVar = null;
     private String _rowCountVar = null;
     private String _previousRowDataVar = null;
+    private String _rowOnMouseOver = null;
+    private String _rowOnMouseOut = null;
 
     public HtmlDataTable()
     {
@@ -733,6 +693,15 @@
         return v != null ? v.booleanValue() : DEFAULT_PRESERVEDATAMODEL;
     }
 
+
+    public boolean isSetPreserveDataModel()
+    {
+        if (_preserveDataModel != null) return true;
+        ValueBinding vb = getValueBinding(""preserveDataModel"");
+        Boolean v = vb != null ? (Boolean)vb.getValue(getFacesContext()) : null;
+        return v != null;
+    }
+
     public void setPreserveSort(boolean preserveSort)
     {
         _preserveSort = Boolean.valueOf(preserveSort);
@@ -746,6 +715,15 @@
         return v != null ? v.booleanValue() : DEFAULT_PRESERVESORT;
     }
 
+
+    public boolean isSetPreserveSort()
+    {
+        if (_preserveSort != null) return true;
+        ValueBinding vb = getValueBinding(""preserveSort"");
+        Boolean v = vb != null ? (Boolean)vb.getValue(getFacesContext()) : null;
+        return v != null;
+    }
+
     public void setEnabledOnUserRole(String enabledOnUserRole)
     {
         _enabledOnUserRole = enabledOnUserRole;
@@ -783,6 +761,15 @@
         return v != null ? v.booleanValue() : DEFAULT_RENDEREDIFEMPTY;
     }
 
+
+    public boolean isSetRenderedIfEmpty()
+    {
+        if (_renderedIfEmpty != null) return true;
+        ValueBinding vb = getValueBinding(""renderedIfEmpty"");
+        Boolean v = vb != null ? (Boolean)vb.getValue(getFacesContext()) : null;
+        return v != null;
+    }
+
     public void setRowIndexVar(String rowIndexVar)
     {
         _rowIndexVar = rowIndexVar;
@@ -819,7 +806,31 @@
         return vb != null ? (String)vb.getValue(getFacesContext()) : null;
     }
 
+    public void setRowOnMouseOver(String rowOnMouseOver)
+    {
+        _rowOnMouseOver = rowOnMouseOver;
+    }
 
+    public String getRowOnMouseOver()
+    {
+        if (_rowOnMouseOver != null) return _rowOnMouseOver;
+        ValueBinding vb = getValueBinding(""rowOnMouseOver"");
+        return vb != null ? (String)vb.getValue(getFacesContext()) : null;
+    }
 
+    public void setRowOnMouseOut(String rowOnMouseOut)
+    {
+        _rowOnMouseOut = rowOnMouseOut;
+    }
+
+    public String getRowOnMouseOut()
+    {
+        if (_rowOnMouseOut != null) return _rowOnMouseOut;
+        ValueBinding vb = getValueBinding(""rowOnMouseOut"");
+        return vb != null ? (String)vb.getValue(getFacesContext()) : null;
+    }
+
+
+
     //------------------ GENERATED CODE END ---------------------------------------
 }



Index: HtmlInputTextarea.java
===================================================================
--- HtmlInputTextarea.java	(revision 178731)
+++ HtmlInputTextarea.java	(working copy)
@@ -51,8 +51,8 @@
     private String _enabledOnUserRole = null;
     private String _visibleOnUserRole = null;
     private Boolean _displayValueOnly = null;
-	private String _displayValueOnlyStyle = null;
-	private String _displayValueOnlyStyleClass = null;
+    private String _displayValueOnlyStyle = null;
+    private String _displayValueOnlyStyleClass = null;
 
     public HtmlInputTextarea()
     {
@@ -83,7 +83,6 @@
         return vb != null ? (String)vb.getValue(getFacesContext()) : null;
     }
 
-
     public boolean isRendered()
     {
         if (!UserRoleUtils.isVisibleOnUserRole(this)) return false;
",MYFACES-258
"I am using the following tags:

<x:inputCalendar id=""dateToCal"" renderAsPopup=""true"" value=""#{mybean.dateTo}""
                 onchange=""document.forms[0].submit();""
                 immediate=""true""
                 valueChangeListener=""#{mybean.foo}""/>

It has valueChangeListener capability but it doesn't have onchange event handler to work with.",MYFACES-257
"I tried the following and I am not getting any response when changing the date fields..

<h:outputText id=""dateTo"" value=""#{mybundle.dateTo}:""/>
      
<x:inputDate id=""dateToCal"" popupCalendar=""true"" value=""#{mybean.dateTo}""
             onchange=""document.forms[0].submit();alert('jjj')""
             immediate=""true""
             valueChangeListener=""#{mybean.foo}""/> ",MYFACES-255
"A blank h:inputText causes null to be called in the setValue() method of my bean, rather than an empty String.
This error did not exist in MyFaces 1.0.8.

See also,
http://www.mail-archive.com/users@myfaces.apache.org/msg03042.html",MYFACES-254
"Kevin Roast has reported that itemDisabled is not working for f:selectItems in a h:selectOneRadio component. This is the mail he has sent to the myfaces dev list:

<snip>

I was just wondering if anyone else has seen this problem? I have a <h:selectOneRadio> with several <f:selectItem> children. I would like to disable one of the child items based on a value bound boolean property e.g.

   <h:selectOneRadio value=""#{myBean.location}"" layout=""pageDirection"">
      <f:selectItem itemValue=""current"" itemDisabled=""#{myBean.fileName != null}"" itemLabel=""Use copy in current location"" />

      <f:selectItem itemValue=""other"" itemLabel=""Use copy uploaded from my computer"" />
   </h:selectOneRadio>

So the important bit is: itemDisabled=""#{myBean.fileName != null}"" - no matter what value is returned from the associated bean getFileName() method, the item is _never_ shown as disabled in the browser.

Am I missing something here? Or is this a known issue? 

</snip>

Of course, it is a bug. The HtmlRadioRenderer is ignoring the disabled attribute. I will provide a patch in a few minutes...",MYFACES-253
"I need suport for i18n in my application built with myfaces, but EL expressions only work in value attribute of jsf components, and i need a button with EL expressions support to add i18n features and this button will not fire form submission, only a javascript code.
",MYFACES-252
"when I use <h:selectManyCheckbox> with a few checkboxes, it works correctly if I select at least one item from the checkboxes. However, if I don't select anything and submit the form, myfaces always gives ""conversion error"" in the context message <h:messages>, no exception stacktrace or log trace.

I found another user has the same problem http://mail-archives.apache.org/mod_mbox/myfaces-users/200505.mbox/%3cd05cabe70505060731604585d0@mail.gmail.com%3e

I'm using myfaces version 1.0.9, build on (2005-04-13 13:17 EDT)


after I digging around for awhile, I found out that myfaces only checks either null or String[] types, but in fact, an empty selection returns """", a zero length string. It works correct after I made changes to src/share/org.apache.myfaces.renderkit.RendererUtils.java's public static Object getConvertedUISelectManyValue() method, and add zero length string check between null and String[] check, as shown below:

        else if (submittedValue instanceof String &&
        	((String)submittedValue).length() == 0){
        	// to fix bug that caused ""conversion error"" when nothing is selected.
        		return null;
        }
",MYFACES-251
"When an error occurrs when running in a portlet the stack trace is simply output within the portlet. There is no hook point for handling the error as the portlet class is the MyFaces bridge.

I was therefore wondering whether it would be possible to add a configuration option (init-param) to the portlet.xml for the bridge to allow the specification of an error page. Then if an error occurrs during processAction or facesRender the configured page can be redirected/forwarded to.",MYFACES-250
"We have a MyFaces based portlet successfully running in the JBoss portal server. However, when we make a change and try to re-deploy the application an error occurs. This process worked fine with the Sun Reference Implementation.

The error we get is as follows:

23:41:32,814 INFO  [FacesConfigurator] Reading standard config org/apache/myfaces/resource/standard-faces-config.xml
23:41:33,862 INFO  [FacesConfigurator] Reading config jar:file:/c:/Temp/myfaces41874.jar!/META-INF/faces-config.xml
23:41:34,492 INFO  [FacesConfigurator] Reading config /WEB-INF/faces-config-common.xml
23:41:34,522 INFO  [FacesConfigurator] Reading config /WEB-INF/faces-config-repo.xml
23:41:34,542 INFO  [FacesConfigurator] Reading config /WEB-INF/faces-config-zoo.xml
23:41:34,562 INFO  [FacesConfigurator] Reading config /WEB-INF/faces-config.xml
23:41:34,622 ERROR [MyFacesGenericPortlet] Error initializing MyFacesGenericPortlet
java.lang.IllegalArgumentException: Class org.apache.myfaces.application.ActionListenerImpl is no javax.faces.event.ActionListener
        at org.apache.myfaces.config.FacesConfigurator.getApplicationObject(FacesConfigurator.java:560)
        at org.apache.myfaces.config.FacesConfigurator.configureApplication(FacesConfigurator.java:464)
        at org.apache.myfaces.config.FacesConfigurator.configure(FacesConfigurator.java:215)
        at org.apache.myfaces.portlet.MyFacesGenericPortlet.initMyFaces(MyFacesGenericPortlet.java:177)
        at org.apache.myfaces.portlet.MyFacesGenericPortlet.init(MyFacesGenericPortlet.java:120)
        at javax.portlet.GenericPortlet.init(GenericPortlet.java:342)
        at org.jboss.portal.portlet.PortletContainer.start(PortletContainer.java:129)
        at org.jboss.portal.server.kernel.StartMethod.invokeMethod(StartMethod.java:37)
        at org.jboss.portal.server.kernel.UpgradeMethod.invoke(UpgradeMethod.java:46)
        at org.jboss.portal.server.kernel.Kernel.start(Kernel.java:382)
        at org.jboss.portal.server.impl.ServerManagerImpl.deploy(ServerManagerImpl.java:404)
        at sun.reflect.GeneratedMethodAccessor78.invoke(Unknown Source)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.jboss.mx.interceptor.ReflectedDispatcher.invoke(ReflectedDispatcher.java:144)
        at org.jboss.mx.server.Invocation.dispatch(Invocation.java:80)
        at org.jboss.mx.interceptor.AbstractInterceptor.invoke(AbstractInterceptor.java:122)
        at org.jboss.mx.server.Invocation.invoke(Invocation.java:74)
        at org.jboss.mx.interceptor.ModelMBeanOperationInterceptor.invoke(ModelMBeanOperationInterceptor.java:131)
        at org.jboss.mx.server.Invocation.invoke(Invocation.java:74)
        at org.jboss.mx.server.AbstractMBeanInvoker.invoke(AbstractMBeanInvoker.java:249)
        at org.jboss.mx.server.MBeanServerImpl.invoke(MBeanServerImpl.java:642)
        at org.jboss.mx.util.MBeanProxyExt.invoke(MBeanProxyExt.java:177)
        at $Proxy35.deploy(Unknown Source)
        at org.jboss.portal.portlet.deployment.jboss.PortletAppDeployment.create(PortletAppDeployment.java:153)
        at org.jboss.portal.server.deployment.jboss.ServerDeployer.create(ServerDeployer.java:168)
        at org.jboss.deployment.MainDeployer.create(MainDeployer.java:918)
        at org.jboss.deployment.MainDeployer.create(MainDeployer.java:910)
        at org.jboss.deployment.MainDeployer.deploy(MainDeployer.java:774)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.jboss.mx.interceptor.ReflectedDispatcher.invoke(ReflectedDispatcher.java:144)
        at org.jboss.mx.server.Invocation.dispatch(Invocation.java:80)
        at org.jboss.mx.interceptor.AbstractInterceptor.invoke(AbstractInterceptor.java:122)
        at org.jboss.mx.server.Invocation.invoke(Invocation.java:74)
        at org.jboss.mx.interceptor.ModelMBeanOperationInterceptor.invoke(ModelMBeanOperationInterceptor.java:131)
        at org.jboss.mx.server.Invocation.invoke(Invocation.java:74)
        at org.jboss.mx.server.AbstractMBeanInvoker.invoke(AbstractMBeanInvoker.java:249)
        at org.jboss.mx.server.MBeanServerImpl.invoke(MBeanServerImpl.java:642)
        at org.jboss.mx.util.MBeanProxyExt.invoke(MBeanProxyExt.java:177)
        at $Proxy50.deploy(Unknown Source)
        at org.jboss.portal.server.deployment.jboss.ServerDeployer.deploy(ServerDeployer.java:242)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.jboss.mx.interceptor.ReflectedDispatcher.invoke(ReflectedDispatcher.java:144)
        at org.jboss.mx.server.Invocation.dispatch(Invocation.java:80)
        at org.jboss.mx.server.Invocation.invoke(Invocation.java:72)
        at org.jboss.mx.server.AbstractMBeanInvoker.invoke(AbstractMBeanInvoker.java:249)
        at org.jboss.mx.server.MBeanServerImpl.invoke(MBeanServerImpl.java:642)
        at org.jboss.mx.util.MBeanProxyExt.invoke(MBeanProxyExt.java:177)
        at $Proxy37.deploy(Unknown Source)
        at org.jboss.portal.server.deployment.WebAppAdapter.deploy(WebAppAdapter.java:45)
        at org.jboss.portal.server.deployment.WebAppIntercepter.handleNotification(WebAppIntercepter.java:137)
        at org.jboss.mx.modelmbean.XMBean.handleNotification(XMBean.java:485)
        at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.jboss.mx.notification.NotificationListenerProxy.invoke(NotificationListenerProxy.java:138)
        at $Proxy38.handleNotification(Unknown Source)
        at org.jboss.mx.util.JBossNotificationBroadcasterSupport.handleNotification(JBossNotificationBroadcasterSupport.java:112)
        at org.jboss.mx.util.JBossNotificationBroadcasterSupport.sendNotification(JBossNotificationBroadcasterSupport.java:93)
        at org.jboss.deployment.SubDeployerSupport.start(SubDeployerSupport.java:218)
        at org.jboss.web.AbstractWebContainer.start(AbstractWebContainer.java:376)
        at org.jboss.deployment.MainDeployer.start(MainDeployer.java:964)
        at org.jboss.deployment.MainDeployer.start(MainDeployer.java:956)
        at org.jboss.deployment.MainDeployer.deploy(MainDeployer.java:775)
        at org.jboss.deployment.MainDeployer.deploy(MainDeployer.java:738)
        at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.jboss.mx.interceptor.ReflectedDispatcher.invoke(ReflectedDispatcher.java:144)
        at org.jboss.mx.server.Invocation.dispatch(Invocation.java:80)
        at org.jboss.mx.interceptor.AbstractInterceptor.invoke(AbstractInterceptor.java:122)
        at org.jboss.mx.server.Invocation.invoke(Invocation.java:74)
        at org.jboss.mx.interceptor.ModelMBeanOperationInterceptor.invoke(ModelMBeanOperationInterceptor.java:131)
        at org.jboss.mx.server.Invocation.invoke(Invocation.java:74)
        at org.jboss.mx.server.AbstractMBeanInvoker.invoke(AbstractMBeanInvoker.java:249)
        at org.jboss.mx.server.MBeanServerImpl.invoke(MBeanServerImpl.java:642)
        at org.jboss.mx.util.MBeanProxyExt.invoke(MBeanProxyExt.java:177)
        at $Proxy8.deploy(Unknown Source)
        at org.jboss.deployment.scanner.URLDeploymentScanner.deploy(URLDeploymentScanner.java:305)
        at org.jboss.deployment.scanner.URLDeploymentScanner.scan(URLDeploymentScanner.java:463)
        at org.jboss.deployment.scanner.AbstractDeploymentScanner$ScannerThread.doScan(AbstractDeploymentScanner.java:204)
        at org.jboss.deployment.scanner.AbstractDeploymentScanner$ScannerThread.loop(AbstractDeploymentScanner.java:215)",MYFACES-249
"I have a dataTable, in that I have a commandLink on each row to delete the row. The commandLink action is calling a method on the managedBean. It's very simple navigation. When the user click the delete link it should come back to the same with the deleted row missing. 

But the commandLink action never gets called. I have put the print statements in the action method. It is never printed.

I noticed the following on the weblogic console when this happened:
<May 20, 2005 2:20:51 PM PDT> <Warning> <HTTP> <BEA-101138> <ServletContext(id=20532576,name=samc,context-path=/samc) One of the getParameter family of methods called after reading from the ServletInputStream. Not merging post parameters.>

I am not sure if this has to do something with the bug.

the following is code snippet from the jsp. Note that the form has a fileupload component, that is why the enctype=""multipart/form-data""

<h:form id=""uploadForm"" name=""uploadForm"" enctype=""multipart/form-data"">
   <span class=""portletTextBold"">Uploaded Files:</span> 
   <h:dataTable id=""files"" 
	border=""1""
	width=""100%""
	bgcolor=""#FFFFFF""
	cellspacing=""0""
	cellpadding=""2""
	columnClasses=""list-column,list-column,list-column""
	footerClass=""list-column""
	headerClass=""list-header""
	rowClasses=""list-column""
	styleClass=""list-background""
	value=""#{uploadForm.uploadedFiles}""
	var=""file"">
	<h:column >
	   <f:facet name=""header"">
		<h:outputText value=""File Name"" />
	   </f:facet>
	   <h:outputText id=""fileName"" value=""#{file.name}"" />
	</h:column>
	<h:column>
	   <f:facet name=""header"">
		<h:outputText value=""Size""/>
	   </f:facet>
	   <h:outputText value=""#{file.size}""/>
	</h:column>
	<h:column>
	   <f:facet name=""header"">
		<h:outputText value=""Date Modified""/>
	   </f:facet>
	   <h:outputText value=""#{file.lastUpdatedDate}""/>
	</h:column>
	<h:column>
	   <f:facet name=""header"">
	      <h:outputText value=""Delete""/>
	   </f:facet>
           <h:commandLink id=""delete"" action=""#{uploadForm.remove}""> 
                 <h:outputText value=""Delete""/> 
	   </h:commandLink>
	</h:column>
   </h:dataTable> 
   <span class=""portletTextBold"">
      <br>
	<table width=""100%"" border=""0"" cellspacing=""0"" cellpadding=""4"">
           <tr> 
             <td colspan=""2"" bgcolor=""#6699CC"" class=""portletTextBold""><font color=""#FFFFFF"">Upload 
                              New File:</font></td>
           </tr>
           <tr> 
              <td width=""25%"" class=""portletTextBold"">File:</td>
              <td width=""75%"">
		<x:inputFileUpload id=""fileupload""
				accept=""*""
                                value=""#{uploadForm.file}""
                                storage=""memory""
                                required=""false""/>
                <h:commandButton value=""Upload"" action=""#{uploadForm.upload}""/>
	      </td>
           </tr>
           <tr> 
              <td colspan=""2"" class=""portletTextBold"">&nbsp;</td>
           </tr>
      </table>
   </span>
</h:form>",MYFACES-247
"The WARN level log statement in VariableResolverImpl.resolveVariable should be DEBUG level.

The reason for this is that if you use DataTable or any other custom component that uses temporary variables for binding (e.g. Row variables in a datatable) then the variables resolver will spit out WARN level statements like this:

WARN  [VariableResolverImpl] Variable 'r' could not be resolved.

Because the variable is no longer in Scope it cannot be resolved - this fine, but the WARN level is probably too high, it could cause a minor performance issue in large apps as the WARN output String is always constructed with an If statement surrounding it to check the log level.
",MYFACES-246
"The default temp dir for the build 
is the environment temp dir.

This can cause problems especially when cleaning.

Ex:
When cleaning some files in the temp dir 
can be locked creating an error for the target.

I know you may override the property (temp.dir} 
but i think a better default value should be set.
Maybe use {env.TEMP}/myfaces ?
",MYFACES-245
"In the myFaces implementation you can't pass parameters to subviews but you can in the Ref. Impl.

------------------------------------------------------------
<!-- welcome.jsp -->
<%@ taglib uri=""http://java.sun.com/jsf/html"" prefix=""h"" %>
<%@ taglib uri=""http://java.sun.com/jsf/core"" prefix=""f"" %>
<%@ taglib uri=""http://myfaces.apache.org/extensions"" prefix=""x""%>

<html>
<head>
  <title>Welcome!</title> 
</head>
<body>
<f:view>
    <h:form>
    
    Hello, this is content from the calling page.
    
    <f:subview id=""mySubviewPage"">
        <jsp:include page=""mySubviewPage.jsp"" flush=""true"">
            <jsp:param name=""parameterXXX"" value=""The value of parameter XXX is this string.""/>
        </jsp:include>
    </f:subview>
    
    </h:form>
</f:view>
</body>
</html>

------------------------------------------------------------
<!-- mySubviewPage.jsp -->
<%@ taglib uri=""http://java.sun.com/jsf/html"" prefix=""h"" %>
<%@ taglib uri=""http://java.sun.com/jsf/core"" prefix=""f"" %>
<%@ taglib uri=""http://myfaces.apache.org/extensions"" prefix=""x""%>

<f:subview id=""headerSubview"">
    
    <f:verbatim>
        <p>This is mySubviewPage content.</p>
    </f:verbatim>
    
    <!-- This doesn't work in myFaces but does in the RI!!! -->
    <h:outputText value=""#{param.parameterXXX}""/>

</f:subview>",MYFACES-244
"The fix to add the id to the action (so that the proper action can be fired on decode) works fine for multiple JSCookMenu components on the same page, however when a JSCookMenu is placed in something that uses the component as a template (such as within a HtmlDataTable's Column), the NamingContainer doesn't get invoked, so a click on an action triggers once for every row in the table.

The simple fix is to change the call to getId() to getClientId(context), however, that also requires a change to processDecodes, to change the .indexOf("":"") to .lastIndexOf("":"").

There are also some other underlying issues with the id in the rest of the component.  The Javascript that defines the menu uses a generic variable name of 'menuBar'.  If you have more than one JSCookMenu on the page with different CommandNavigationItems, you will only get the last one.

The solution to this is to supplement the JavaScript variable name with the clientId, much like the div later in encodeEnd.

I've tied all these changes together by creating a private method called getMenuId() which encapsulates the logic behind getting the clientId(context) and converting all the colons(:) to underscores(_).  Then in encodeChildren(), encodeEnd() and encodeNavigationMenuItems(), I use this method, so that the same id is used throughout.

Also included in my patch is a quick-fix to allow null labels to not print out the default value (1).

Hopefully this will be a useful addition to the MyFaces Community.",MYFACES-243
"consider the following structure: there are two input-fields which are both required and their value shold be equal to each other
example:
<x:input id=""msisdn"" value=""#{...msisdn}"" required=""true""/>
<x:message for=""msisdn"" />
<x:input id=""msisdnConfirm"" required=""true"">
<x:validateEqual for=""msisdn""/>	        
<x:message for=""msisdnConfirm"" />

if msisdn is not filled in one gets the following message
  message for=""msisdn"": Value is required
  message for=""msisdnConfirm"": The given value (xxx) is not equal with value of ""msisdn"".

Suggested behaviour:
The message for msisdnConfirm should not be displayed if the value for msisdn is not entered


		if(foreignComp==null)
			throw new FacesException(""Unable to find component '"" + _for + ""' (calling findComponent on component '"" + uiComponent.getId() + ""')"");

+		if (foreignComp.isRequired() && foreignComp.getValue()== null ) {
+			return;
+		}
		
		Object[] args = {value.toString(),(foreignComp.getValue()==null) ? foreignComp.getId():foreignComp.getValue().toString()};
",MYFACES-242
"If you use value bindings on the pass through attributes e.g. ""styleClass"" with the DataList component, no attributes are witten in html. 

PROBLEM: There is no (generated) code for the pass through attributes, like it is present in other components (HtmlDataTable) for setting and getting the attribute values (value bindings). HtmlComponentBodyTagBase does provide these value bindings but DataList does not evaluate them.",MYFACES-241
"Generated JavaScript ""clear_browse()"" function allows Internet Explorer to return ""null"" string literal field values.

The clear_browse() function generated by MyFaces at the end of the FORM tag to clear the various hidden fields output by the system sets the field values to 'null' using JavaScript.

However, for applications that add their own hidden fields to the form to be output in this way (as many advanced components do), it is preferable to set the fields to the empty string """" instead. Otherwise in Internet Explorer it will submit the literal string ""null"" as the field value instead of the empty string. This can affect components that decode() their values and are looking to see if a field has been set to a value other than """". Of course the components could check for the literal string ""null"" but that is a weak solution.

Modifying the following file:
   org/apache/myfaces/renderkit/html/HtmlRendererUtils.java
on line 700 changing:
writer.write(""'].value=null;"");
to
writer.write(""'].value='';"");
will fix the problem. 

This issue does not affect the FireFox browser which appears to be smart enough to send up the empty string when JavaScript has set a hidden field value to null.
",MYFACES-240
"I miss the transient on h:inputHidden

I use this tag in my jsp for javascript proposes
<h:inputHidden value=""#{msg.common_confirm_lose}"" transient=""true""  />

I think it's because of MYFACES-85 where transient was removed from h:inputHidden

But I haven't found a x:inputHidden with transient.. 
",MYFACES-239
"When I use x:inputDate it looks good, popup works, calendar looks fine
 but after popup it throws errors ( javax.servlet.error.status_code : 404 ) 
'javax.servlet.error.request_uri', for :

<appname>/jscalendar/jscalendar-DB/drop2.gif
<appname>/jscalendar/jscalendar-DB/drop1.gif

<appname>/jscalendar/jscalendar-DB/left1.gif
<appname>/jscalendar/jscalendar-DB/left2.gif

<appname>/jscalendar/jscalendar-DB/right1.gif
<appname>/jscalendar/jscalendar-DB/right2.gif

I don't mind it but problem occures when i try to catch error 404 

on page header there are :

<link rel=""stylesheet"" href=""/<appname>/faces/myFacesExtensionResource/calendar.HtmlCalendarRenderer/1114410789000/WH/theme.css"" type=""text/css""/>
<link rel=""stylesheet"" href=""/<appname>/faces/myFacesExtensionResource/calendar.HtmlCalendarRenderer/1114410789000/DB/theme.css"" type=""text/css""/>
<script src=""/<appname>/faces/myFacesExtensionResource/calendar.HtmlCalendarRenderer/1114410789000/popcalendar.js"" type=""text/javascript""></script>



regards

tomasz",MYFACES-237
"Currently LocaleConfig bases its list of supported locales solely on what's in <supported-locale> tags. As a result, the locale/language specified in <default-locale> must be specified again in the supported-locale list. Otherwise, application behavior will be inconsistent. If the browser specifies that its preferred language is what's in the default-locale, but specifies as a less-preferred language a match in the supported-locale list, the browser will receive the less-preferred language.

The specification is admittedly ambiguous. But it seems reasonable to suppose that a default locale must also be a supported locale, and Sun's documentation encourages that belief.

http://java.sun.com/j2ee/1.4/docs/tutorial/doc/JSFConfigure4.html :

  <locale-config>
    <default-locale>en</default-locale>
    <supported-locale>es</supported-locale>
    <supported-locale>de</supported-locale>
    <supported-locale>fr</supported-locale>
  </locale-config>

Note that ""en"" is only specified once.
",MYFACES-236
"While form enctype is not set,output html get default value urlencoding.In this case,when input chinese character in input text,after submit,the result was not what I want.After all,I found a temporary solution for this,set the form enctype to multipart/form-data,the input character is encoded right.But I don't know what effect of this on earth except of character encode.",MYFACES-235
"According to MYFACES-223 and problems with empty date I will suggest making some fixes and improvements of this component:

Bugs
-------
1. when I don't fill some part of date and use javascript popup calendar wrong window is displayed (a list of 31 days without calendar, this is a bug in popupcalendar.js, in case of some bug current date should be default)
2. when readonly=""true"" and popupCalendar=""true"" there is a posibility to change date using popupCalendar. Popup calendar shouldn't be rendered when readonly=""true"" (now only when disabled=""true"")

Improvements
-------------
1. possibility to reset date and time using button (simple change in renderer)
2. possibility to define images for button ""popupCalendar"" and future ""cancelDateAndTime""
3. possibility to render date as one field when readonly=""true"" (as an option)
4. format of rendering: now we have: date, time, both without possibility to choose format, I suggest java format during rendering (""yyyy-MM-dd"", ""dd-MM-yyyy"") instead current syntax
5. possibility to choose between combo or numeric style of month (ie. yyyy-MM-dd renders numeric, but yyyy-MMM-dd combo)
...

I think, that authors of this component should rebuild this component (many of this fixes and improvements are very simple to code and for me this is rather a problem with describing of requirements). In the current state this component without some fixes is completly unuseful :(

Best regards
",MYFACES-234
"I am building a custom tabbed pane component. When moving between a tab that contains an x:datatable to any other tab, I receive this error:
java.lang.ClassCastException: org.apache.myfaces.component.html.ext.HtmlDataTableHack$1
	org.apache.myfaces.component.html.ext.HtmlDataTable.getRows(HtmlDataTable.java:547)
	org.apache.myfaces.component.html.ext.HtmlDataTableHack.refreshDescendantDataStates(HtmlDataTableHack.java:167)
	org.apache.myfaces.component.html.ext.HtmlDataTableHack.saveDescendantComponentStates(HtmlDataTableHack.java:129)
	org.apache.myfaces.component.html.ext.HtmlDataTableHack.setRowIndex(HtmlDataTableHack.java:71)
	org.apache.myfaces.component.html.ext.HtmlDataTable.setRowIndex(HtmlDataTable.java:186)
	javax.faces.component.UIData.processDecodes(UIData.java:674)
	org.apache.myfaces.component.html.ext.HtmlDataTable.processDecodes(HtmlDataTable.java:202)
	javax.faces.component.UIComponentBase.processDecodes(UIComponentBase.java:407)
	com.sun.j2ee.blueprints.bpcatalog.tabbedview.components.PaneComponent.processDecodes(PaneComponent.java:49)
	com.sun.j2ee.blueprints.bpcatalog.tabbedview.components.PaneComponent.processDecodes(PaneComponent.java:49)
	javax.faces.component.UIForm.processDecodes(UIForm.java:51)
	javax.faces.component.UIComponentBase.processDecodes(UIComponentBase.java:407)
	javax.faces.component.UIViewRoot.processDecodes(UIViewRoot.java:151)
	org.apache.myfaces.lifecycle.LifecycleImpl.applyRequestValues(LifecycleImpl.java:177)
	org.apache.myfaces.lifecycle.LifecycleImpl.execute(LifecycleImpl.java:87)
	javax.faces.webapp.FacesServlet.service(FacesServlet.java:109)
	org.apache.myfaces.component.html.util.ExtensionsFilter.doFilter(ExtensionsFilter.java:112)

Without using the tabbed panes, the datatables show up perfectly on the page. 
The datatables are included JSF files, nested inside the tab pane.

Any ideas as to why this is happening? What is the HtmlDataTableHack?

Best regards
Eyal Grundstein

",MYFACES-232
"An abstract class is specified for the inputHidden tag in the myfaces_html.tld and an InstantiationException is being thrown on the JSP because it cannot instantiate an abstract class.

java.lang.InstantiationException
	at sun.reflect.InstantiationExceptionConstructorAccessorImpl.newInstance(InstantiationExceptionConstructorAccessorImpl.java:30)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:274)

--- myfaces_html.tld fragment ---

<!-- input_hidden -->
    <tag>
        <name>inputHidden</name>
        <tag-class>org.apache.myfaces.taglib.html.HtmlInputHiddenTagBase</tag-class>
        <body-content>JSP</body-content>
        &ui_input_attributes;
        <!-- HiddenRenderer attributes -->
    </tag>

The only implementation of the abstract HtmlInputHiddenTagBase that i could find is org.apache.myfaces.taglib.html.ext.HtmlInputHiddenTag. I am assuming this is suppossed to be specified as the tag-class rather than the HtmlInputHiddenTagBase.

Thanks",MYFACES-231
"Struts supports UTF-8 encoded property files and caching of property values with its PropertyMessageResources class. MyFaces uses standard Java ResourceBundle and its PropertyResourceBundle, which only allows Latin-1 encoded property files. Adding a ResourceBundle wrapper that allows UTF-8 encoded property files doesn't break anything since all UTF-8 encoded single byte characters are in the same positions as in Latin-1 encoding. I'll add a patch to this bug that contains a ResourceBundle wrapper and necessary changes to take it into use. ",MYFACES-230
"I have a problem using the DataList component. I would like to use input components within it, but the model isn't updated at all. I use a List a the DataList value.
If I use a DataTable instead everything works fine.

here an example - does NOT work:

<h:form>
         <x:dataList id=""foo"" var=""item""
                        value=""#{myBean.items}"" >
                <h:inputText value=""#{item.value}"" />
        </x:dataList>
            
    <h:commandButton  action=""save"" />
</h:form>


but this works:

<h:form>
         <h:dataTable id=""foo"" var=""item""
                        value=""#{myBean.items}"" >
                <h:inputText value=""#{item.value}"" />
        </h:dataTable>
            
    <h:commandButton  action=""save"" />
</h:form>


I'm not very familia with svn and the patch generation so i will submit my solution here. Some of the developers only has to c&p the code ;)

PROBLEM: Unimplemented methods in org.apache.myfaces.custom.datalist.HtmlDataList

public void processUpdates(FacesContext context);
public void processValidators(FacesContext context)

SOLUTION:

	public void processUpdates(FacesContext context) {
		int first = getFirst();
        int rows = getRows();
        int last;
        if (rows == 0)
        {
            last = getRowCount();
        }
        else
        {
            last = first + rows;
        }
        for (int rowIndex = first; rowIndex < last; rowIndex++)
        {
            setRowIndex(rowIndex);
            if (isRowAvailable())
            {
                for (Iterator it = getChildren().iterator(); it.hasNext();)
                {
                    UIComponent child = (UIComponent)it.next();
                    if (!child.isRendered())
                    {
                        continue;
                    }
                    child.processUpdates(context);
                }
            }
        }

        setRowIndex(-1);
	}
	

	public void processValidators(FacesContext context) {
		int first = getFirst();
        int rows = getRows();
        int last;
        if (rows == 0)
        {
            last = getRowCount();
        }
        else
        {
            last = first + rows;
        }
        for (int rowIndex = first; rowIndex < last; rowIndex++)
        {
            setRowIndex(rowIndex);
            if (isRowAvailable())
            {
                for (Iterator it = getChildren().iterator(); it.hasNext();)
                {
                    UIComponent child = (UIComponent)it.next();
                    if (!child.isRendered())
                    {
                        continue;
                    }
                    child.processValidators(context);
                }
            }
        }

        setRowIndex(-1);
	}",MYFACES-229
"I'm using a dataTable with sortheader. Everything is fine as long as I
use outputText instead of a inputText. If I use inputText, the
List/array is sorted correct on the srever side when my value binding is invkoked by the datatable, but the old model (unsorted) is displayed.

I debuged that a bit and recognized, that as soon as I click any command button, the sorted list gets displayed correctly. This is because refresh() is called in the datatable when clicking a commandButton. Refresh isn't called when u click on the sort header command. On the other hand using outputText works fine. While looking at the HtmlDataTableHack class i found

 private static int restoreDescendantComponentStates(UIComponent component,
                                                        EditableValueHolderState[] states,
                                                        EditableValueHolderState[] initialStates,
                                                        int counter, int level)
    {
        for (Iterator it=getChildrenAndOptionalFacetsIterator(level, component); it.hasNext();)
        {
            UIComponent child = (UIComponent)it.next();
            //clear this descendant's clientId:
            child.setId(child.getId()); //HACK: This assumes that setId always clears the cached clientId. Can we be sure?
            if (child instanceof EditableValueHolder)
            {
                if (states != null)
                {
                    states[counter].restore((EditableValueHolder)child);
                }
                else if (initialStates != null)
                {
                    initialStates[counter].restore((EditableValueHolder)child);
                }
                else
                {
                    // No state saved yet and no initial state !?
                    // Should never be possible, but let's reset the component
                    // state to null values
                    ((EditableValueHolder)child).setValue(null);
                    ((EditableValueHolder)child).setLocalValueSet(false);
                    ((EditableValueHolder)child).setValid(true);
                    ((EditableValueHolder)child).setSubmittedValue(null);
                }
                counter++;
            }
            counter = restoreDescendantComponentStates(child, states, initialStates, counter,level+1);
        }
        return counter;
    }

Not sure, but it seems that this codes cuases the old model state to be rendered and not the newly sorted one. If I have time, I will track it down a bit more.


You can simply reproduce this by changing the sortTable example. You
only need to change outputText into inputText.",MYFACES-228
"I am trying to use JSCookMenu component in my JavaServer Faces
application. I see no way to send a request parameter using
this component. When I use this component I use the <x:jscookMenu> tag and under it as many <x:navigationMenuItem> tags as I need menu items. However some of the attributes in this tag are ignored by the rendered. For instance, the value stored in itemValue attribute even though it is available under the tag <x:navigationMenuItem>, there is no way to convey that value, the javascript menu rendered ignores it. ",MYFACES-227
"LoadBundleTag calls ResourceBundle.getBundle(basename, locale) without reference to the classloader.

If the JSF tags are loaded as part of a container level tag library then you will get an error such as:
18:03:19,591 WARN  [VariableResolverImpl] Variable 'bundle' could not be resolved.

Container level tag liberaries are mentioned in the JSP 2.0 spec section 7.3.5.

To fix this, the context class loader should be passed to the getBundle() method:

ResourceBundle.getBundle(basename, locale, Thread.currentThread().getContextClassLoader());",MYFACES-226
"When I submit the form I get an ArrayIndexOutOfBoundsException. My guess the problem is that the <x:inputText id=""someInputText"" required=""true""/> doesn't render an unique Id.

== dataTable.jsp ==

<%@ taglib uri=""http://java.sun.com/jsf/html"" prefix=""h""%>
<%@ taglib uri=""http://java.sun.com/jsf/core"" prefix=""f""%>
<%@ taglib uri=""http://myfaces.apache.org/extensions"" prefix=""x""%>

<f:view>
<html>
<head>
</head>
<body>
  <h:form id=""someForm"">
    <x:dataTable id=""someTable"" var=""item"" value=""#{applicationBean.someItems}"">
      <h:column>
        <h:outputText id=""someOutputText"" value=""#{item}"" />
        <x:inputText id=""someInputText"" required=""true""/>
        <h:message for=""someInputText"" />
      </h:column>
    </x:dataTable>
    <h:commandButton value=""submit"" action=""#""/>
  </h:form>
</body>
</html>  
</f:view>

== ApplicationBean.java ==

public List getSomeItems()
{
    ArrayList list = new ArrayList(3);
    list.add(""text1"");
    list.add(""text2"");
    list.add(""text3"");
    return list;
}

== Exception stracktrace ==

java.lang.ArrayIndexOutOfBoundsException: 4
	at org.apache.myfaces.component.html.ext.HtmlDataTableHack.refreshDescendantDataStates(HtmlDataTableHack.java:174)
	at org.apache.myfaces.component.html.ext.HtmlDataTableHack.saveDescendantComponentStates(HtmlDataTableHack.java:147)
	at org.apache.myfaces.component.html.ext.HtmlDataTableHack.setRowIndex(HtmlDataTableHack.java:71)
	at org.apache.myfaces.component.html.ext.HtmlDataTable.setRowIndex(HtmlDataTable.java:186)
	at javax.faces.component.UIData.iterate(UIData.java:989)
	at javax.faces.component.UIData.processDecodes(UIData.java:737)
	at org.apache.myfaces.component.html.ext.HtmlDataTable.processDecodes(HtmlDataTable.java:202)
	at javax.faces.component.UIForm.processDecodes(UIForm.java:144)
	at javax.faces.component.UIComponentBase.processDecodes(UIComponentBase.java:880)
	at javax.faces.component.UIViewRoot.processDecodes(UIViewRoot.java:306)

",MYFACES-225
"The x:commandSortHeader is not working if nested inside of x:columns (which is nested in x:dataTable)

my code is like this:

<x:dataTable id=""data"" value=""#{manager.sortList.dataObjectsToSort}"" var=""b"" rows=""4""
                   sortColumn=""#{manager.sortList.sort}"" sortAscending=""#{manager.sortList.ascending}""
                    preserveSort=""true"" preserveDataModel=""true"">   
                          
                    <x:columns value=""#{manager.headerStrings}"" var=""column"">
                        <f:facet name=""header"">  
                            <h:panelGroup>
                                <h:selectBooleanCheckbox />
                                <x:commandSortHeader columnName=""#{column}"" arrow=""true"">
                                    <h:outputText value=""#{column}"" />
                                </x:commandSortHeader> 
                            </h:panelGroup>
                        </f:facet>
                        <h:outputText value=""#{b[column]}"" />
                    </x:columns>
</x:dataTable>


in case I use a component-binding for the x:dataTable to generate a corresponding table in a bean, everything works fine.              

I believe this is, because the x:columns-tag assigns to every childcomponent of type commandSortHeader the same id.",MYFACES-224
"Hello,
I'm developing a lot of little applications using myfaces.
It would be very useful to have the possibility to share globally over tomcat (e.g. in the shared/lib dir) the myfaces jar so I don't have to deploy 1.5Mb of jars for every 50K web application.

Thanks,
Alex",MYFACES-223
"I'm using UIColumns (myfaces-1.0.9), and I've hit what appears to be a bug.
I can initialize my page, and then update my page, but I get an
IllegalArgumentException(""row is unavailable"") exception when the page
is being rendered (but after all of the actions for that page have
been processed).

The problem appears to be in here:

HtmlTableRendererBase.encodeChildren() contains:

                           columns.setRowIndex(k);
                           String columnStyle = styles.getColumnStyle(j);
                           renderColumnBody(facesContext, writer,
uiData, child, columnStyle);

k starts out as 0.  renderColumnBody() eventually calls

       UIColumns(UIData).isAllChildrenAndFacetsValid() line: 646
       UIColumns(UIData).encodeBegin(FacesContext) line: 594
       RendererUtils.renderChild(FacesContext, UIComponent) line: 482
       HtmlTableRenderer(HtmlTableRendererBase).renderColumnBody(FacesContext,
ResponseWriter, UIData, UIComponent, String) line: 205

and isAllChildrenAndFacetsValid cycles through the rowIndexes, and
ends up setting it to -1.

And then sometime later my own code gets called via

       HtmlSelectBooleanCheckbox(UIOutput).getValue() line: 75
       RendererUtils.getBooleanValue(UIComponent) line: 213
       HtmlCheckboxRenderer(HtmlCheckboxRendererBase).encodeEnd(FacesContext,
UIComponent) line: 94
       HtmlSelectBooleanCheckbox(UIComponentBase).encodeEnd(FacesContext) line: 341
       RendererUtils.renderChild(FacesContext, UIComponent) line: 491
       RendererUtils.renderChildren(FacesContext, UIComponent) line: 468
       RendererUtils.renderChild(FacesContext, UIComponent) line: 489
       HtmlTableRenderer(HtmlTableRendererBase).renderColumnBody(FacesContext,
ResponseWriter, UIData, UIComponent, String) line: 205

but by this point, the rowIndex is -1 rather than the original 0 value
it should have been.

I ""fixed"" this in a 2005-04-29 CVS checkout with the following patch.
However, I don't claim to know if this will break something else.


Index: UIColumns.java
===================================================================
RCS file: /home/cvspublic/incubator-myfaces/src/share/org/apache/myfaces/component/UIColumns.java,v
retrieving revision 1.1
diff -u -r1.1 UIColumns.java
--- UIColumns.java	29 Mar 2005 11:40:50 -0000	1.1
+++ UIColumns.java	29 Apr 2005 22:27:45 -0000
@@ -15,7 +15,10 @@
  */
 package org.apache.myfaces.component;
 
+import java.io.IOException;
 import javax.faces.component.UIData;
+import javax.faces.context.FacesContext;
 
 /**
  * @author Mathias Broekelmann (latest modification by $Author: matzew $)
@@ -53,4 +56,18 @@
   {
     return COMPONENT_FAMILY;
   }
+  
+	public void encodeBegin(FacesContext context) throws IOException
+	{
+		int savedRowIndex = getRowIndex();
+		super.encodeBegin(context);
+		setRowIndex(savedRowIndex);
+	}
+
+	public void encodeEnd(FacesContext context) throws IOException
+	{
+		int savedRowIndex = getRowIndex();
+		super.encodeEnd(context);
+		setRowIndex(savedRowIndex);
+	}
 }
",MYFACES-222
"The AccessKey attribute is missing for the SelectOneMenuTag, It's also not in the TLD.",MYFACES-221
The tiles definition can have a controllerClass or controllerUrl which should be executed prior to rendering the tile when going through the JspTilesViewHandler.  This is not happening.  I'll attach a patch which we are using to accomplish this.,MYFACES-220
"The HtmlCommandJSCookMenu component renders its own html-form called linkDummyForm. If it is embedded into another form the other form (including its children) will never be decoded because its submitted-property is set to false in UIForm.decode().

It should be possible to control wether the HtmlCommandJSCookMenu component should render its own form or should be part of an existing form.

In my application I developed a solution for this problem.

1. The HtmlJSCookMenuTag needs a new property, which holds the id of the form which is the parent of this tag. I called it formId. This new property has to be added in HtmlJSCookMenuTag.setProperties().

2. The HtmlCommandJSCookMenu component needs the formId property, described in step 1, aswell. And it has to be added to saveState() and restoreState()

3. The HtmlJSCookMenuRenderer has to read the formId of its component. 

3.1 If it is not set everything stays as it is in the moment. That means: DummyFormResponseWriter.writeDummyForm is set to true, which causes the writer to append a linkDummyForm at the end of the rendered html page.

3.2 If it is set writeDummyForm of DummyFormResponseWriter is set to false. Instead of rendering a form (called linkDummyForm) at the end of the rendered html page, there are only two input-fields, which will be rendered within HtmlJSCookMenuRenderer.encodeChildren(): jscook_action, which holds the choosed actionstring from the menu (in the moment it is rendered as part of the linkDummyForm only) and a new field named jscook_form_id which gets the formId of the HtmlCommandJSCookMenu component.

4. The cmItemMouseUp function within the JavaScript library named JSCookMenu.js needs to read the jscook_form_id field, rendered previously in step 3.2 like this:
-------begin code--------------------------------------------
var formId = null;
var dummyForm = null;
var inputFormIds = document.getElementsByName('jscook_form_id');
if (inputFormIds.length > 0) {
  formId = inputFormIds[0].value;
  dummyForm = document.forms[formId];
} else {
  dummyForm = document.forms['linkDummyForm'];
}
	
dummyForm.elements['jscook_action'].value = link;
dummyForm.submit();
------------end code-------------------------

5. Moreover it is needed to configure the immediate attribute of the component in the HtmlJSCookMenuTag. In the moment it is hardcoded in HtmlCommandJSCookMenu. There exists another issue here in the database concerning this point.",MYFACES-219
"When use core-jsf validator component(a client validator tag based on commons-validator),I found output warn message is disposed by UnicodeEncoder,so,when validateForm occured,The prompt message is not what I want,but as sequence &#2598 and so on.Could MyFaces provide a choice for normal output as fmt:message or others jsp output?",MYFACES-218
"I deployed the Hans Bergsten JSF examples, version 1.0.2, using MyFaces, and tried running the ""View Created By The ClassViewHandler"" example from Chapter 15.

Note that I had to modify the code so that it created HtmlForm components, not UIForm components, as a workaround to MYFACES-216. 

The result sent to my browser was a plain XML fragment with <form> as the top-level element, not a correct [X]HTML tree. Here is a piece of the output --

    <form id=""_id0"" name=""_id0""
     method=""post"" action=""/jsfbook/subscribe.faces""
     enctype=""application/x-www-form-urlencoded"">

        <table>
            ...SNIPPED...
        </table>
        <script type=""text/javascript"">
            ...SNIPPED...
        </script>
    </form>

I have verified that the code does not break under JSF RI 1.1.01.


",MYFACES-217
"I deployed the Hans Bergsten JSF examples webapp (v1.0.2) using MyFaces. When I tried to use the ""View Created By The ClassViewHandler"" example from Chapter 15, I got the following exception --

java.lang.ClassCastException: javax.faces.component.UIForm
org.apache.myfaces.renderkit.html.HtmlFormRendererBase.encodeBegin(HtmlFormRendererBase.java:85)
javax.faces.component.UIComponentBase.encodeBegin(UIComponentBase.java:317)
com.mycompany.jsf.pl.ClassViewHandler.renderResponse(ClassViewHandler.java:184)
com.mycompany.jsf.pl.ClassViewHandler.renderResponse(ClassViewHandler.java:191)
com.mycompany.jsf.pl.ClassViewHandler.renderView(ClassViewHandler.java:121)
org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:300)
javax.faces.webapp.FacesServlet.service(FacesServlet.java:110)
org.netbeans.modules.web.monitor.server.MonitorFilter.doFilter(MonitorFilter.java:362)

It seems that HtmlFormRendererBase is casting down to an HtmlForm; this breaks non-HTML components created programmatically.

I have verified that the code does *not* break under JSF RI 1.1.01.

",MYFACES-216
IMO the getChildCount method and the getType methods could cover pretty much every scenario that you would need isLeaf for.  TreeNodeBase should eliminate this method (simple tree2 examples will have to be modified as well.),MYFACES-215
"Requirements for reproduction:

- min. two tabs with min. one required Input-Fields
- a submit button on each tab
- an ""<h:messages styleClass=""errors"" showDetail=""true"" showSummary=""true""/>""-tag to see all validation errors regardless which tab is selected

Expected behavior:

- if the submit button is pressed, !both! fields should be validated regardless which tab is selected

Steps to reproduce:

1. start a new session
2. let the required text fields empty
3. press the submit button in the first tab.

Behavior:
Only the field(s) on the first tab is validated.

The interesting effect:

Select the second tab and press submit. The validation errors on !both! tab occours. If the tab was 
activated at least one time in a new session, all fields were validated correctly.

Further informations: http://www.mail-archive.com/users%40myfaces.apache.org/msg03525.html



",MYFACES-214
"I've been trying to get a simple commandLink to work in a dataList. I have the dataList bound to a UIData component (binding=""#{categoryAdmin.ancestorTree}"") on the backing bean. It properly displays links. However, when i select the link it fails to call the appropriate action method (action=""#{categoryAdmin.ancestor}"")and returns back to the page. No error meassages are written to the screen or logs.

Things i have tried with no success are:

- placing my backing bean in session rather than request
- placed <h:messages/> on the jsp to see any error messages (none appear)
- Debugged the phases in the LifeCycleImpl. It hits all the full LifeCycle phases (restoreView,applyRequestValues,processValidations,updateModelValues,invokeApplication). However, i am not able to determine what is really happening in these phases to result in the outcome.
- used h:commandLink and x:commandLink (both with session and request backing bean)
- set a breakpoint in my action method (public String ancestor(){...}) method and it never gets called.

Following is my page code. I provided the whole page to give context in case there are other conflicts that may be taking place. I'd be happy to provide a small app to reproduce this if my explanation is not enough.

<%@ taglib uri=""http://java.sun.com/jsf/core""; prefix=""f""%>
<%@ taglib uri=""http://java.sun.com/jsf/html""; prefix=""h""%>
<%@ taglib uri=""http://myfaces.apache.org/extensions""; prefix=""x""%>
<h:form>

<x:dataList 
id=""ancestorTree""
var=""ancestor""
binding=""#{categoryAdmin.ancestorTree}"">
<x:commandLink action=""#{categoryAdmin.ancestor}"" value=""#{ancestor.title}""/>
</x:dataList>

<h:commandButton  styleClass=""buttonnormal""
action=""#{categoryAdmin.add}"" value=""Add Category""/>

<h:inputHidden id=""categoryAdmin_parentCategoryId""
value=""#{categoryAdmin.parentCategoryId}""/>

<!-- category list -->

<h:dataTable style=""margin: 10px; border: 1px solid black""
var=""category"" binding=""#{categoryAdmin.categoryTable}"">

<h:column>
<f:facet name=""header"">
<h:outputText value=""Title"" style=""border-bottom: 1px solid black""/>
</f:facet>
<h:commandLink action=""#{categoryAdmin.child}"">
<h:outputText value=""#{category.title}""/>
</h:commandLink>
<f:facet name=""footer"">
<h:outputText value="""" style=""border-top: 1px solid black""/>
</f:facet>
</h:column>

<h:column>
<f:facet name=""header"">
<h:outputText value="""" style=""border-bottom: 1px solid black""/>
</f:facet>
<h:commandLink action=""#{categoryAdmin.edit}""><h:outputText
value=""Edit""/></h:commandLink>
<f:facet name=""footer"">
<h:outputText value="""" style=""border-top: 1px solid black""/>
</f:facet>
</h:column>

<h:column>
<f:facet name=""header"">
<h:outputText value=""Tree"" style=""border-bottom: 1px solid black""/>
</f:facet>
<h:outputText value=""#{category.ancestorTree}""/>
<f:facet name=""footer"">
<h:outputText value="""" style=""border-top: 1px solid black""/>
</f:facet>
</h:column>

</h:dataTable>

<h:commandButton  styleClass=""buttonnormal""
action=""#{categoryAdmin.add}"" value=""Add Category""/>

</h:form>",MYFACES-213
"A buffer like this: 

<x:buffer into=""#{searchParams}""> 
   <h:inputHidden value=""#{searchBean.searchType}""/> 
   <h:inputHidden value=""#{searchBean.searchField}""/> 
   <h:inputHidden value=""#{searchBean.searchValue}""/> 
   <h:inputHidden value=""#{searchBean.created}""/> 
   <h:inputHidden value=""#{searchBean.createdStartDate}""> 
       <f:convertDateTime type=""date"" dateStyle=""short""/> 
   </h:inputHidden> 
   <h:inputHidden value=""#{searchBean.createdEndDate}""> 
       <f:convertDateTime type=""date"" dateStyle=""short""/> 
   </h:inputHidden>             
   <h:inputHidden value=""#{searchBean.modified}""/> 
   <h:inputHidden value=""#{searchBean.modifiedStartDate}""> 
       <f:convertDateTime type=""date"" dateStyle=""short""/> 
   </h:inputHidden> 
   <h:inputHidden value=""#{searchBean.modifiedEndDate}""> 
       <f:convertDateTime type=""date"" dateStyle=""short""/> 
   </h:inputHidden> 
   <h:inputHidden value=""#{searchBean.resultsPerPage}""/> 
</x:buffer> 

has it's inputs submitted with all forms in view.

I was using this to store the search 
parameters for the different forms. My understanding was that it made a string that 
was written to the page with say, outputText. It is not inside any of the form tags 
and is just a top level element in the page (inside view after I stripped the page of 
tiles). But apparently when I submit a form on the page it includes all these hidden 
inputs from the buffer (because in the last incarnation I never wrote the buffer back 
to the page). 

So there is a bug at least in that myfaces is including form fields that are not 
inside form elements but are otherwise in the component heirarchy in all forms on the 
page. 
",MYFACES-212
"Originally reported by Walter Snel:

You recent additions related to the configurability of Converters created a dependency on a particular Application implementation in the FacesConfigurator.

I noticed this because I'm using a custom ApplicationFactory that returns a custom Facade (with augmentations) to the ApplicationImpl class.

In this case the FacesConfigurator doesn't call the addConverterConfiguration. This, later on, leads to horrible nullpointer exceptions when any of standard converters are used. Perhaps you could consider using relfection instead of the current 'instanceof' mechanism to find out if the addConverterConfiguration() method is supported ?

With kind regards,
Walter Snel",MYFACES-211
"Manfred's recent additions related to the configurability of Converters created a dependency on a particular Application implementation in the FacesConfigurator.

I noticed this because I'm using a custom ApplicationFactory that returns a custom Facade (with augmentations) to the ApplicationImpl class.

In this case the FacesConfigurator doesn't call the addConverterConfiguration. This, later on, leads to horrible nullpointer exceptions when any of standard converters are used. Perhaps we could consider using relfection instead of the current 'instanceof' mechanism to find out if the addConverterConfiguration() method is supported ?",MYFACES-210
"If you put '12' in hours input field - after confirmation/update component sets it to '00'.

The solution is: 
In HttpInputDate.java, line 171, 
change from:
  SimpleDateFormat fullFormat = new SimpleDateFormat( ""dd MM yyyy hh mm ss"" );
to:
  SimpleDateFormat fullFormat = new SimpleDateFormat( ""dd MM yyyy HH mm ss"" );


.and it solves this problem :))


regards

Tomasz",MYFACES-209
"When scaning for faces-config.xml files it currently only looks for them inside the jars of WEB-INF/lib. 
The RI scans the classpath via a getResources(""META-INF/faces-config.xml"").
Im not sure which is correct, but it seems the RI's method is better as it allows the config files to exist in the WEB-INF/classes dir as well as allow JSF components and such to be installed into the container (thus shared will all apps).",MYFACES-208
"Nesting more than one panelGrids into panelLayout causes wrong rendering. Most often only first panelGrid gets rendered or none or only a part.

eg.:
JSP:

<%@ taglib uri=""http://java.sun.com/jsf/html"" prefix=""h""%>
<%@ taglib uri=""http://java.sun.com/jsf/core"" prefix=""f""%>
<%@ taglib uri=""http://myfaces.apache.org/extensions"" prefix=""x""%>
<html>

<f:view>
<body style=""background-color: red"">
	<x:panelLayout id=""page"" layout=""classic"" styleClass=""pageLayout""
		headerClass=""pageHeader"" navigationClass=""pageNavigation""
		bodyClass=""pageBody"" footerClass=""pageFooter"" bodyStyle=""background-color: red"">
		<f:facet name=""body"">
			<h:panelGrid id=""pageHeader1"" columns=""3"">
				<h:outputText value=""foo1"" />
				<h:outputText value=""foo2"" />
				<h:outputText value=""foo3"" />
			</h:panelGrid>
			<h:panelGrid id=""pageHeader2"" columns=""3"">
				<h:outputText value=""foo4"" />
				<h:outputText value=""foo5"" />
				<h:outputText value=""foo6"" />
			</h:panelGrid>
		</f:facet>

	</x:panelLayout>


</body>
</f:view>
</html>


generated HTML:



<html>
<body style=""background-color: red"">
	<table class=""pageLayout""><tr><td class=""pageBody"" style=""background-color: red""><table id=""pageHeader1""><tbody><tr><td>foo4</td><td>foo5</td><td></td></tr>
</tbody></table></td></tr></table>

</body>
</html>
",MYFACES-207
"From what I can tell, the myfaces-examples.war (from both myfaces-1.0.9rc3-app.tgz AND myfaces-1.0.8-examples.tgz)
has TLD files (inside it's myfaces.jar file) that appear to be incorrect.

For example, looking in the myfaces_html.tld file... looking in the <tag> named ""outputLink"", it contains:

---
 <attribute>
    <name>target</name>
    <required>false</required>
    <rtexprvalue>false</rtexprvalue>
 </attribute>

 <!-- HtmlOutputLink attributes -->

 <attribute>
    <name>target</name>
    <required>false</required>
    <rtexprvalue>false</rtexprvalue>
 </attribute>
---

That's the same name for 2 attributes... for the same tag.
That seems wrong to me.
What if that duplicated attribute name was using different values for the <required> or <rtexprvalue> nodes?
Which one would the JSP Engine be expected to use?

And looking in myfaces_ext.tld looking at the tag named ""inputHtml"". It see that it defines:

<attribute>
  <name>id</name>
  <required>false</required>
  <rtexprvalue>false</rtexprvalue>
</attribute>

and also

<attribute>
  <name>id</name>
  <required>false</required>
  <rtexprvalue>false</rtexprvalue>
  <type>java.lang.String</type>
  <description>Every component may have an unique id. Automatically created if omitted.</description> </attribute>

They are slightly different.

Tomcat 5 does not appear to complain or report this, and things work fine there.
But other Servlet/JSP Engines (not just SE) may perform validation on the TLD and complain about the duplicated attributes which may prevent the app from functioning.

Duplicated attributes in a TLD seems ambiguous to me.
From what I can tell, the JSP 2.0 specification does not say anything definitive (one way or the
other) about the case of a TLD using the same attribute name for the same tag more than once.
But common sense tells me it should not be done.

Does it make sense for a TLD to do this?
Doesn't MyFaces need to correct their TLD files in these cases?

If I rig SE so that it doesn't check for duplicated attributes in a TLD, the app deploys and runs fine.
But I don't think that SE should have to be altered in this way (unless someone has found information that I haven't... if so please share that with me).
Otherwise, I think that the TLDs used in this MyFaces example need to be corrected.

Other examples I've found so far in myfaces_ext.tld include:

1. the attribute named ""onblur"" for the tag named ""commandNavigation""
2. the attribute named ""onfocus"" for the tag named ""commandNavigation""
3. the attribute named ""id"" for the tag named ""inputHtml""
4. the attribute named ""style"" for the tag named ... (Here is where I stopped debugging this).

Thanks for your time,

Matt McGinty
Software Engineer
New Atlanta Communications, LLC
http://www.newatlanta.com",MYFACES-206
"In order to create JSF applications that can use portlet modes (i.e. Edit and Help modes), the MyFacesGenericPortlet must be subclassed.  The current version has several private methods and members that should be protected instead.

Also, MyFacesGenericPortlet needs to have a version of the nonFacesRequest() method that accepts a view ID.  This allows a portlet to ""jump"" to a particular view when entering a new mode.",MYFACES-205
"A user defined onclick is both prepended to the JSF generated javascript and also passed through:

<x:commandLink action=""#{attachment.open}"" onclick=""myFunction();"">
<h:outputText value=""#{attachment.filename}""/>        
</x:commandLink>

Renders as:

<a href=""#"" onclick=""myFunction();;clear_emailview_3Amyform();document.forms['myview:myform'].elements['myview:myform:_link_hidden_'].value='myview:myform:attachments:0:_id180';if(document.forms['myview:myform'].onsubmit){document.forms['myview:myform'].onsubmit();}document.forms['myview:myform'].submit();return false;"" id=""myview:myform:attachments:0:_id180"" onclick=""myFunction();"">",MYFACES-204
"I've updated the example messages for spanish and catalan. I'll provide the patch,

Bruno",MYFACES-203
"Hello,

I want to modified a list of date so I used the inputCalendar and the dataTable.
Here is a part of my JSP :

    <x:dataTable value=""#{MyBean.dateList}"" var=""date"">
        <h:column>
            <x:inputCalendar renderAsPopup=""true"" value=""#{date}"" />
        </h:column>
    </x:dataTable>
    <br />
    <x:commandButton id=""submit"" action=""#{MyBean.submit}""
        value=""OK"" />

When I submit, the date of my dateList are not modified.
I think the problem come from the correction of the issue ""MYFACES-60"" (The children components of the inputCalendar are removed in the encodeEnd), But also of the table which uses only one instance of the inputCalendar to update the dates.

Perhaps this will be able to help you, I developed a component with a structure identical to inputCalendar. This component contains a list of String and shows as many inputText which it contains of String.
It works fine except when I use it in dataTable, I have this exception (like issue ""MYFACES-60""): 

java.lang.ArrayIndexOutOfBoundsException: 1
    org.apache.myfaces.component.html.ext.HtmlDataTableHack.saveDescendantComponentStates(HtmlDataTableHack.java:200)
    org.apache.myfaces.component.html.ext.HtmlDataTableHack.saveDescendantComponentStates(HtmlDataTableHack.java:202)
    org.apache.myfaces.component.html.ext.HtmlDataTableHack.saveDescendantComponentStates(HtmlDataTableHack.java:202)
    org.apache.myfaces.component.html.ext.HtmlDataTableHack.saveDescendantComponentStates(HtmlDataTableHack.java:155)
    org.apache.myfaces.component.html.ext.HtmlDataTableHack.setRowIndex(HtmlDataTableHack.java:71)
    org.apache.myfaces.component.html.ext.HtmlDataTable.setRowIndex(HtmlDataTable.java:186)
    org.apache.myfaces.renderkit.html.HtmlTableRendererBase.encodeChildren(HtmlTableRendererBase.java:139)
    javax.faces.component.UIComponentBase.encodeChildren(UIComponentBase.java:329)
    org.apache.myfaces.component.html.ext.HtmlDataTable.encodeChildren(HtmlDataTable.java:507)
    javax.faces.webapp.UIComponentTag.encodeChildren(UIComponentTag.java:380)
    javax.faces.webapp.UIComponentTag.doEndTag(UIComponentTag.java:288)
    org.apache.myfaces.taglib.UIComponentBodyTagBase.doEndTag(UIComponentBodyTagBase.java:98)
    org.apache.jsp.search$jsp._jspService(search$jsp.java:387)
    org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:107)
    javax.servlet.http.HttpServlet.service(HttpServlet.java:856)
    org.apache.jasper.servlet.JspServlet$JspServletWrapper.service(JspServlet.java:202)
    org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:382)
    org.apache.jasper.servlet.JspServlet.service(JspServlet.java:474)
    javax.servlet.http.HttpServlet.service(HttpServlet.java:856)
    org.apache.myfaces.context.servlet.ServletExternalContextImpl.dispatch(ServletExternalContextImpl.java:405)
    org.apache.myfaces.application.jsp.JspViewHandlerImpl.renderView(JspViewHandlerImpl.java:280)
    org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:300)
    javax.faces.webapp.FacesServlet.service(FacesServlet.java:110)
    org.apache.myfaces.component.html.util.ExtensionsFilter.doFilter(ExtensionsFilter.java:112)

Here my component :

public class InputConditionValue extends UIInput
{
    private static final String FIELD_SUFFIX     = ""VALUE"";

    /////////////////////////////////////////////////////////////////

    public DLInputConditionValue()
    {
        super();

        setRendererType( null );
    }

    /////////////////////////////////////////////////////////////////

    public String getFamily()
    {
        return ""InputConditionValue"";
    }

    /////////////////////////////////////////////////////////////////

    public void encodeBegin( FacesContext facesContext )
            throws IOException
    {
        getChildren().clear();
        
        Application application = facesContext.getApplication();

        List valueList = (List) getValue();

        int nField = 1;

        Iterator it = valueList.iterator();
        while ( it.hasNext() )
        {
            String value = (String) it.next();

            if ( nField > 1 )
            {
                MyOutputText outputText = (MyOutputText) application.createComponent( MyOutputText.COMPONENT_TYPE );
                outputText.setValue( "" or "" );
                getChildren().add( outputText );
            }

            String fieldId = getId() + FIELD_SUFFIX + nField;

            MyOutputText inputText = (MyOutputText) application.createComponent( MyOutputText.COMPONENT_TYPE );
            inputText.setId( fieldId );
            inputText.setValue( value );

            getChildren().add( inputText );

            nField++;
        }
    }

    /////////////////////////////////////////////////////////////////

    /** @see javax.faces.component.UIComponent#decode(javax.faces.context.FacesContext) */
    public void decode( FacesContext context )
    {
        super.decode( context );
    }

    /** @see javax.faces.component.UIInput#validate(javax.faces.context.FacesContext) */
    public void validate( FacesContext context )
    {
        ArrayList values = new ArrayList();

        Iterator childIt = getChildren().iterator();
        while ( childIt.hasNext() )
        {
            Object childComponent = childIt.next();
            
            if( childComponent instanceof EditableValueHolder )
            {
                values.add( ((EditableValueHolder) childComponent).getValue() );
            }
        }

        setSubmittedValue( values );
        
        super.validate( context );
    }
}

Thanks for your help and for all your work.

Regards.",MYFACES-202
"Hello,

This is a part of my JSP :

<x:dataTable id=""myTable""
	value=""#{myBean.myList}"" var=""element""
	preserveDataModel=""false"" rows=""10"" renderedIfEmpty=""false"">
	<h:column>
		<f:facet name=""header"">
			<x:outputText value=""Column 1"" />
		</f:facet>
		<h:outputText value=""#{element.label}"" />
	</h:column>
</x:dataTable>

<h:panelGrid columns=""1"">
	<x:dataScroller id=""myTable_scroller"" for=""myTable""
		fastStep=""5"" pageCountVar=""pageCount"" pageIndexVar=""pageIndex""
		paginator=""true"" paginatorMaxPages=""5""
		paginatorActiveColumnStyle=""font-weight:bold;"">
		<f:facet name=""first"">
			<h:graphicImage url=""images/navigate_first.png"" border=""0"" />
		</f:facet>
		<f:facet name=""last"">
			<h:graphicImage url=""images/navigate_last.png"" border=""0"" />
		</f:facet>
		<f:facet name=""previous"">
			<h:graphicImage url=""images/navigate_previous.png"" border=""0"" />
		</f:facet>
		<f:facet name=""next"">
			<h:graphicImage url=""images/navigate_next.png"" border=""0"" />
		</f:facet>
		<f:facet name=""fastforward"">
			<h:graphicImage url=""images/navigate_fastforward.png"" border=""0"" />
		</f:facet>
		<f:facet name=""fastrewind"">
			<h:graphicImage url=""images/navigate_fastrewind.png"" border=""0"" />
		</f:facet>
	</x:dataScroller>
	<x:dataScroller id=""myTable_counter"" for=""myTable""
		pageCountVar=""pageCount"" pageIndexVar=""pageIndex"">
		<h:outputFormat value=""Page {0} / {1}"">
			<f:param value=""#{pageIndex}"" />
			<f:param value=""#{pageCount}"" />
		</h:outputFormat>
	</x:dataScroller>
</h:panelGrid>

All works fine except in this case :
   - I have 10 pages of results and the fast-forward value is 5
   - The current page is the 6th,
   - When I click on the fast-forward button, the paginator try to show the 11th page (so an empty page).

Regards. ",MYFACES-201
"When I use dataScroller tag with facets, i.e like this:

<x:dataScroller id=""scroll_1""
  for=""dataAssignment""
  fastStep=""#{assignments.layout.list.paginatorFastStep}"" 
  pageCountVar=""pageCount""
  pageIndexVar=""pageIndex""
  styleClass=""paginatorScroller""
  paginator=""true""
  paginatorMaxPages=""#{assignments.layout.list.paginatorMaxPages}""
  paginatorTableClass=""paginator""
  paginatorActiveColumnStyle=""font-weight:bold;""
>
<f:facet name=""first"" >
 <x:outputText styleClass=""paginatorLink"" value=""#{commonBundle.paginatorFirst}""></x:outputText>
 </f:facet>
 <f:facet name=""last"">
    <x:outputText styleClass=""paginatorLink"" value=""#{commonBundle.paginatorLast}""></x:outputText>
  </f:facet>
  <f:facet name=""previous"">
    <x:outputText styleClass=""paginatorLink"" value=""#{commonBundle.paginatorPrevious}""></x:outputText>
  </f:facet>
  <f:facet name=""next"">
    <x:outputText styleClass=""paginatorLink"" value=""#{commonBundle.paginatorNext}""></x:outputText>
  </f:facet>
  <f:facet name=""fastforward"">
    <x:outputText styleClass=""paginatorLink"" value=""#{commonBundle.paginatorFastforward}""></x:outputText>
  </f:facet>
  <f:facet name=""fastrewind"">
    <x:outputText styleClass=""paginatorLink"" value=""#{commonBundle.paginatorFastrewind}""></x:outputText>
  </f:facet>
</x:dataScroller>

sometimes dataScroller renders facets twice (but only links, not a table delimiters).

I trace code and I found a method in class HtmlDataScrollerRenderer method renderFacet. The problem is the first line:

UIComponent link = getLink(facesContext, scroller, facetComp, facetName);

because in method getLink created link with not null child (facetComp).

I replaced this line by:

// create empty link, without children
UIComponent link = getLink(facesContext, scroller, null, facetName);

and component works good. I don't know what is a detailed specification of this component (now only first element from facet is rendered), so I don't create diff file.
",MYFACES-200
"When image objects for the calendar are created in the dom, the src property was also set, which causes them to be requested when the scripts is parsed. However, the default path is wrong and four unnecessary requests are made. The actual path is set later when the actual calendar component is rendered. I'll add a patch that fixes the problem.",MYFACES-199
"When ALLOW_JAVASCRIPT is 'false', commandLink in any form doesn't work.
",MYFACES-198
The index page of the 1.0.9m9 release only contains links for the WAP tags.  The individual extension tag documentation files are physically in the tlddocs\x directory; but are missing from the tlddocs\index.html page.,MYFACES-197
"I have upgraded to MyFaces 1.0.9 (Was in the 1.0.7) and the JSCookMenu dos not work anymore.
My children menus does not appear on the menu, I have installed the MyFacesExamples and the last menu ""Info"" does not work too. Only the top level menus appear.
 
Here is My code :
 
JSP :
 
<x:jscookMenu layout=""hbr"" theme=""ThemeIE"" >

	<x:navigationMenuItems id=""menus"" value=""#{menuBean.menus}"" />

</x:jscookMenu>

MenuBean :

public String getMenus() {

	NavigationMenuItem menu[] = new NavigationMenuItem[1];
	menu[0] = new NavigationMenuItem(""Rogerio"", null, null, true);
	NavigationMenuItem items[] = new NavigationMenuItem[2];
	menu[0].setNavigationMenuItems(items);
	items[0] = new NavigationMenuItem(""Rogerio Filho 1"", ""go_contact"", null, false);
	items[1] = new NavigationMenuItem(""Rogerio Filho 2"", ""go_copyright"", null, false);
	return menu;

} 

Rogerio
",MYFACES-196
"Using tree2 and the clientsidetoggle=""true"" option, the expand/collapse state of the tree is stored in a cookie.  If the tree model backing this tree changes drastically, the state of the tree in the cookie may not line up with the model.

An additional attribute on <x:tree2> can be added to turn this cookie-caching on/off.",MYFACES-195
"If the conversion fails for an inputCalendar the encodeEnd method does not check if isValid is true and tries to get a date object to encode:

Date value = RendererUtils.getDateValue(inputCalendar);

which throws an IllegalArguementException even though a ConversionException was already thrown and a message added.

This code should check isValid to determine what to encode:

String svalue;
if (isValid()) {
    Date value = RendererUtils.getDateValue(inputCalendar);
    svalue = converter.getAsString(value);

} else {
    svalue = RendererUtils.getStringValue(inputCalendar);
}

While this isn't the exact fix a review of the encodeEnd method will make it clear that when the calendar is a popup expecting the value to be a valid date after a conversion failure already occured is causing this bug.",MYFACES-194
forceId is not working on the inputHidden component. ,MYFACES-193
"inputParam extends inputHidden by adding an attribute, paramValue, which allows value binding predefined form values to a managed bean. For example, if you have a managed bean named searchBean with a setLastModified(Date d) method you can create a hidden form element with a preset date:

<h:form> 
<h:commandLink action=""searchBean.search"">
 <x:inputParam value=""#{searchBean.lastModified}"" paramValue=""04/05/2005"">
   <f:convertDateTime type=""date"" dateStyle=""short""/>  
 </x:inputParam>
</h:commandLink>
</h:form>

renders:

 <input type=""hidden"" value=""04/05/2005""/>

When the form is submitted searchBean.setLastModified is called with the Date object. When the link is clicked there is no need to look in the request for the parameters of the search. There is no need to modify the bean if a different search is required. Just create a new form/commandLink and specify the new parameters. I used it to create quick searches: New in last Day/Week/Month using the same bean for a full fledged form that let's the user specify the dates without having to modify the bean or tie it to faces/request to populate it. 


The attached archive contains the component package and the required xml fragments for the tld and faces-config. ",MYFACES-192
"It would be nice to have the ability to specify ascending and descending images as an alternative to the character generated indicators.  It might work something like this:

    <x:commandSortHeader columnName=""#{columnHeader}"" arrow=""false"">
        <f:facet name=""ascending"">
            <h:graphicImage value=""images/ascending-arrow.png"" border=""0""/>
        </f:facet>                    
        <f:facet name=""descending"">
            <h:graphicImage value=""images/descending-arrow.png"" border=""0""/>
        </f:facet>                                        
        <h:outputText value=""#{columnHeader}"" />
    </x:commandSortHeader>",MYFACES-191
Should use the renderChild method of RendererUtils instead of the encodeRecursive method in HtmlTreeRenderer which does the same thing.  No need to duplicate this code.,MYFACES-190
"It is not possible to use a value binding which references a dynamically created bean (like the row in a datatable) in the converter and validator tags. These valuebindings are evaluated at creation time (doStartTag() method in the tag).

Here is an example which will not work:

<h:datatable value=""#{data.rows}"" var=""row"">
  <h:column>
    <h:outputText value=""#{row.numberValue}"">
      <f:convertNumber minFractionDigits=""#{row.numberScale}""/> <-- this will not work since row is not found.
    </h:outputText>
  </h:column>
</h:datatable>

I'will provide the patches if there will be an agreement that this should work. Since it is not a problem to evaluate the bindings at the right time (when converting or validating the value).",MYFACES-189
"When using tabbed pane all tabs are rendered each time. No matter if it is hidden or not. 
This cause problems with form submitting because all hidden forms are validated.
Step to reproduce. In myfaces-examples web application do following
1. go to page /myfaces-examples/tabbedPane.jsf
2. select Tab2
3. Click common submit button
You'll see validation error that occures on the Tab1 pane. I think it is rather strange behaviour. 
I have no idea how to resolve it but we need to have tabs in our application and these bags must be independent. 
The question is following is it a bug or a feature?

Thanks.",MYFACES-188
"'UIInput.getValue' will return the wrong (old) value if called between validation and update phase when the submitted value is """" and the old value was a non-zero length string.

The offending code is in UIInput.validate:

    if(submittedValue instanceof String && ((String) submittedValue).length()==0)
    {
        submittedValue = null;
    }

The effect of this is that when the client submits """", the submittedValue of null works it's way down to 'setValue'. This would seem correct, but 'getValue' checks to see if the value is null, and if it is, it uses the value binding. The end result is that 'getValue' will return the wrong (old) value if called between validation and update phase becuase the model has not been updated yet, but the local value has been null'd.

Neither the spec, nor the offical JavaDoc mention this behavior. I belive the code should be removed. Anyone know why it is there?
",MYFACES-187
"When using an expression for the index attribute for both the radio and checkbox components, a ClassCastException is caused when executing the following line in both HtmlRadio and HtmlCheckbox:

Integer v = vb != null ? (Integer)vb.getValue(getFacesContext()) : null;

The result of an integer expression will be either a java.lang.Long or java.math.BigInteger, according to the spec. A fix is to change the above line to:

Number v = vb != null ? (Number)vb.getValue(getFacesContext()) : null;",MYFACES-186
"When HtmlJSCookMenuRenderer is decoding, sometimes, the JSCOOK_ACTION_PARAM param string contains the text ""null"".  This results in an ArrayIndexOutOfBounds exception when scanning for the "":"" character.

I have a patch to fix this.  ",MYFACES-185
"in FacesConfigurator.java(feedJarConfig 391) phrase 3
tmp.delete() throws an AccessControlException.
it seems tmp has not had ZipFile.OPEN_DELETE mode argument (ZipFile constructor check it) or some process(native zipfile.close(long)?) access the tmp file.




[12/Apr/2005:16:03:10] WARNING ( 1060): CORE3283: stderr: javax.faces.FacesException: java.security.AccessControlException: access denied (java.io.FilePermission C:\WINDOWS\TEMP\myfaces21123.jar delete)
[12/Apr/2005:16:03:10] WARNING ( 1060): CORE3283: stderr:       at org.apache.myfaces.config.FacesConfigurator.feedJarConfig(FacesConfigurator.java:399)
[12/Apr/2005:16:03:10] WARNING ( 1060): CORE3283: stderr:       at org.apache.myfaces.config.FacesConfigurator.feedJarFileConfigurations(FacesConfigurator.java:311)
[12/Apr/2005:16:03:10] WARNING ( 1060): CORE3283: stderr:       at org.apache.myfaces.config.FacesConfigurator.configure(FacesConfigurator.java:203)
[12/Apr/2005:16:03:10] WARNING ( 1060): CORE3283: stderr:       at org.apache.myfaces.webapp.StartupServletContextListener.initFaces(StartupServletContextListener.java:105)
[12/Apr/2005:16:03:10] WARNING ( 1060): CORE3283: stderr:       at org.apache.myfaces.webapp.StartupServletContextListener.contextInitialized(StartupServletContextListener.java:88)
[12/Apr/2005:16:03:10] WARNING ( 1060): CORE3283: stderr:       at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:3275)
[12/Apr/2005:16:03:10] WARNING ( 1060): CORE3283: stderr:       at org.apache.catalina.core.StandardContext.start(StandardContext.java:3595)
[12/Apr/2005:16:03:10] WARNING ( 1060): CORE3283: stderr:       at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1123)
[12/Apr/2005:16:03:10] WARNING ( 1060): CORE3283: stderr:       at org.apache.catalina.core.StandardHost.start(StandardHost.java:638)
[12/Apr/2005:16:03:10] WARNING ( 1060): CORE3283: stderr:       at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1123)
[12/Apr/2005:16:03:10] WARNING ( 1060): CORE3283: stderr:       at org.apache.catalina.core.StandardEngine.start(StandardEngine.java:345)
[12/Apr/2005:16:03:10] WARNING ( 1060): CORE3283: stderr:       at org.apache.catalina.startup.Embedded.start(Embedded.java:957)
[12/Apr/2005:16:03:10] WARNING ( 1060): CORE3283: stderr:       at com.iplanet.ias.web.WebContainer.start(WebContainer.java:426)
[12/Apr/2005:16:03:10] WARNING ( 1060): CORE3283: stderr:       at com.iplanet.ias.web.WebContainer.startInstance(WebContainer.java:514)
[12/Apr/2005:16:03:10] WARNING ( 1060): CORE3283: stderr:       at com.iplanet.ias.server.J2EERunner.confPostInit(J2EERunner.java:170)
[12/Apr/2005:16:03:10] WARNING ( 1060): CORE3283: stderr: Caused by: java.security.AccessControlException: access denied (java.io.FilePermission C:\WINDOWS\TEMP\myfaces21123.jar delete)

.....
source in FacesConfigurator.java(feedJarConfig 362) phrase 3:



            if (found)
            {
                tmp = File.createTempFile(""myfaces"", "".jar"");
                in = _externalContext.getResourceAsStream(jarPath);
                FileOutputStream out = new FileOutputStream(tmp);
                byte[] buffer = new byte[4096];
                int r;

                while ((r = in.read(buffer)) != -1)
                {
                    out.write(buffer, 0, r);
                }
                out.close();

                JarFile jarFile = new JarFile(tmp);
                try
                {
                    JarEntry configFile = jarFile.getJarEntry(""META-INF/faces-config.xml"");
                    if (configFile != null)
                    {
                        if (log.isDebugEnabled()) log.debug(""faces-config.xml found in jar "" + jarPath);
                        InputStream stream = jarFile.getInputStream(configFile);
                        String systemId = ""jar:"" + tmp.toURL() + ""!/"" + configFile.getName();
                        if (log.isInfoEnabled()) log.info(""Reading config "" + systemId);
                        _dispenser.feed(_unmarshaller.getFacesConfig(stream, systemId));
                    }
                } finally
                {
                    jarFile.close();
                    tmp.delete();
                }
            } else
            {
                if (log.isDebugEnabled()) log.debug(""Jar "" + jarPath + "" contains no faces-config.xml"");
            }
        } catch (Exception e)
        {
            throw new FacesException(e);
        }


",MYFACES-184
"org.apache.myfaces.config.FacesConfigurator should report which resources it was parsing when it encounters an error.

This could be done by wrapping the parsing exception with another more verbose exception.  Thus, something like

MyApp ERROR [main 04-12 11:24:18] Digester: Parse Error at line 2 column 14: Document is invalid: no grammar found.
org.xml.sax.SAXParseException: Document is invalid: no grammar found.

becomes

MyApp ERROR [main 04-12 11:24:18] FacesConfigurator : Error parsing jsf-spring-2.7.1.jar:faces-config.xml: Parse Error at line 2 column 14: Document is invalid: no grammar found.
org.xml.sax.SAXParseException: Document is invalid: no grammar found.

",MYFACES-183
"Deploying myfaces-examples.war and pointing the browser to http://localhost:8080/myfaces-examples Results in a NullPointerException.

Here is a partial stack trace:

11:08:13,036 INFO  [STDOUT] java.lang.NullPointerException
11:08:13,037 INFO  [STDOUT] 	at org.apache.myfaces.custom.navmenu.jscookmenu.HtmlJSCookMenuRenderer.encodeNavigationMenuItems(HtmlJSCookMenuRenderer.java:253)
11:08:13,038 INFO  [STDOUT] 	at org.apache.myfaces.custom.navmenu.jscookmenu.HtmlJSCookMenuRenderer.encodeChildren(HtmlJSCookMenuRenderer.java:169)
11:08:13,038 INFO  [STDOUT] 	at javax.faces.component.UIComponentBase.encodeChildren(UIComponentBase.java:329)
11:08:13,038 INFO  [STDOUT] 	at org.apache.myfaces.renderkit.RendererUtils.renderChild(RendererUtils.java:488)
11:08:13,038 INFO  [STDOUT] 	at org.apache.myfaces.renderkit.html.HtmlGridRenderer.renderChildren(HtmlGridRenderer.java:253)
11:08:13,038 INFO  [STDOUT] 	at org.apache.myfaces.renderkit.html.HtmlGridRenderer.encodeEnd(HtmlGridRenderer.java:131)
",MYFACES-182
"I know this is super trivial but it would be nice to have the onchange attribute available for the calendar component. Both for when the user selected a new date via the popup or if they enter a new date in the input box. I think it's really just a matter of adding the onchange attribute to the tag and adding a small line in the javascript....

function jscalendarCloseCalendar() {
	jscalendarHideCalendar();
	
	if( jscalendarMyFacesCtlType!=""x:inputDate"" )
	{
		jscalendarCtlToPlaceValue.value = jscalendarConstructDate(jscalendarDateSelected,jscalendarMonthSelected,jscalendarYearSelected)
		var onchange=jscalendarCtlToPlaceValue.getAttribute(""onchange"");
		if(onchange)
		{
			eval(onchange);
		}
	}
	else
	{
		document.getElementById(jscalendarMyFacesInputDateClientId+"".day"").value = jscalendarDateSelected;
		document.getElementById(jscalendarMyFacesInputDateClientId+"".month"").value = jscalendarMonthSelected+1;
		document.getElementById(jscalendarMyFacesInputDateClientId+"".year"").value = jscalendarYearSelected;
	}
}


",MYFACES-181
"Hello,
I'm playing with the ""simple examples"" of myfaces 1.0.9, and in the page tabbedPane.jsf there is a problem.
If I fill all the text fields and check all the checkboxes and then I switch between tabs, all of them are preserved correctly except the 3 checkboxes + text fields on the third tab.

Thanks,
Alex",MYFACES-180
"If a RuntimeException is thrown in the Method UIInput.updateModel(FacesContext) an error message is generated but without any stacktrace. This causes a lot of trouble for the user to find the cause of the error.

Here is a patch to write the stacktrace:

Index: UIInput.java
===================================================================
RCS file: /home/cvspublic/incubator-myfaces/src/jsfapi/javax/faces/component/UIInput.java,v
retrieving revision 1.16
diff -u -r1.16 UIInput.java
--- UIInput.java	4 Mar 2005 00:28:45 -0000	1.16
+++ UIInput.java	12 Apr 2005 11:13:34 -0000
@@ -252,6 +252,7 @@
         catch (RuntimeException e)
         {
         	//Object[] args = {getId()};
+          	context.getExternalContext().log(e.getMessage(), e);
             _MessageUtils.addErrorMessage(context, this,CONVERSION_MESSAGE_ID,new Object[]{getId()});
             setValid(false);
         }
",MYFACES-179
"The CommandLink and OutputLink need a ""Disabled"" attribute like some of the other components aleady have.  This attribute would prevent an anchor tag from being rendered and instead render plain text.  It would be nice to also have ""DisabledStyle"" and ""DisabledStyleClass"" properties as well.

There are workarounds for this issue using the ""Rendered"" property, but it is combersome if there are many links that need to be disabled.  

Adding this new property would also be more object oriented approach to this issue and would make the link compnents more consistent with other components that already have a ""Disabled"" property.

In addition to this issue, I have already created Issue #74 on the JSF public spec Web site. https://javaserverfaces-spec-public.dev.java.net/  I think MyFaces should consider this feature regardles of what the outcome is in the JSF specification.",MYFACES-178
"The sun API specifies that numberConverter expects type to be ""number"", ""currency"", or ""percentage"".  myfaces is looking for ""percent"", making a jsf app incompatible between the myfaces and sun's RI.",MYFACES-177
"Currently, the tree selection listener can only add a new bean as a listener. It would be more useful to also be able to use an exitsing bean.

Main changes would be to TreeSelectionListenerTag.java, lines 84 to 94, to first check if the value supplied is an exiting TreeSelectionListener, and then use it, otherwise instantiate a new object.",MYFACES-176
It would be nice to have the ability to set mouseover for the entire *row* of a data table.  I'm open to suggestions on how this should be configured.  One possibility would be to add attributes to <x:datTable>.,MYFACES-175
"UIData.isAllChildrenAndFacetsValid() resets the rowindex to -1 which prevents x:columns component to work right. The example application for the crosstable doesn´t work when a new column is added or the values are modified.

Here is a fix which will set the rowindex to it´s previous value:

Index: UIData.java
===================================================================
RCS file: /home/cvspublic/incubator-myfaces/src/jsfapi/javax/faces/component/UIData.java,v
retrieving revision 1.30
diff -u -r1.30 UIData.java
--- UIData.java	24 Mar 2005 16:46:02 -0000	1.30
+++ UIData.java	7 Apr 2005 09:47:28 -0000
@@ -627,6 +627,7 @@
 		{
 			last = first + rows;
 		}
+	        int setRowIndex = getRowIndex();
 		try
 		{
 			for (int rowIndex = first; rowIndex < last; rowIndex++)
@@ -643,7 +644,7 @@
 		}
 		finally
 		{
-			setRowIndex(-1);
+			setRowIndex(setRowIndex);
 		}
 		return true;
 	}

",MYFACES-174
"The HtmlJSCookMenuRenderer should allow user-defined themes in the auto-generated JavaScript. Ideally, you should be able to pick any theme name and specify a path. For example,

<x:jscookMenu layout=""hbr"" theme=""ThemeCustom"" path=""/themes"">
  ...
</x:jscookMenu>    

The path property should be treated as relative to the context root. This would generated JavaScript like the following:

<link rel=""stylesheet"" type=""text/css"" 
  href=""/webapp/themes/ThemeCustom/theme.css""/>
<script src=""/webapp/themes/ThemeCustom/theme.js"" 
  type=""text/javascript""></script>

As a workaround, you can specify the stylesheet and script in your view: 

<x:stylesheet path=""/themes/ThemeCustom/theme.css""/>
<f:verbatim escape=""false"">
  <script src=""/webapp/themes/ThemeCustom/theme.js"" 
     type=""text/javascript""></script>
</f:verbatim>
<x:jscookMenu layout=""hbr"" theme=""ThemeCustom"">
...
</x:jscookMenu>

On a related note, does the renderer really need to generate references for _all_ of the themes if only one of them is being used?
",MYFACES-173
"Due to the changes in MyFaces 1.09 that allow JavaScript resources to be loaded from the MyFaces JAR, the relative path names for JSCookMenu issues aren't resolving correctly. A workaround is to copy the themes to your web application and override the JavaScript files automatically referenced by the component's renderer:

<f:view>
  <x:stylesheet path=""/themes/ThemeOffice/theme.css""/>  
  <script src=""/webmodule/themes/ThemeOffice/theme.js"" type=""text/javascript""/>
  
  <x:jscookMenu layout=""hbr"" theme=""ThemeOffice"">
  <x:jscookMenu layout=""hbr"" theme=""ThemeIE"">
    <x:navigationMenuItems value=""#{testBean.sample2}""/>
    <x:navigationMenuItem itemLabel=""Tab 4"" action=""Tab4""/>
  </x:jscookMenu>
</f:view>

Here are the details about the problem:

Reply-To: ""MyFaces Discussion"" <myfaces-user@incubator.apache.org> 
Delivered-To: mailing list myfaces-user@incubator.apache.org 
Subject: RE: Jscookmenu - ThemeOffice - Images not displaying? 
Date: Thu, 31 Mar 2005 14:07:56 -0500 
Thread-Topic: Jscookmenu - ThemeOffice - Images not displaying? 
From: ""Neal Haggard"" <Neal.Haggard@sas.com> 
To: ""MyFaces Discussion"" <myfaces-user@incubator.apache.org> 


Yes, I'm using 1.0.9, the latest from CVS.  It looks like 1.0.9 started using the AddResource interface to have the javascripts & styles automatically added.  If you look at the links they generate, they go to:


/faces/myFacesExtensionResource/navmenu.NavigationMenuItem/1112283493000/jscookmenu/JSCookMenu.js


Or a similar link, which I assume gets handled by the faces extension resource filter.  However, the images (based on looking in /src/components/org/apache/myfaces/custom/navmenu/resources/jscookmenu/ThemeOffice/theme.js) are being looked for in a context-relative location:


var cmThemeOfficeBase = 'jscookmenu/ThemeOffice/'; 
...
itemRight: '<img alt="""" src=""' + cmThemeOfficeBase + 'blank.gif"">',
...


I don't see how these can be resolved without having jscookmenu/ThemeOffice/*.gif in a relative location.  


Note that I'm even getting this with the 1.0.9 RC2 examples war file.  Image not found place-holders in the nav menu.


-----Original Message-----
From: Aaron Bartell [mailto:aaronbartell@gmail.com] 
Sent: Thursday, March 31, 2005 1:46 PM
To: MyFaces Discussion
Subject: Re: Jscookmenu - ThemeOffice - Images not displaying?


What version of MyFaces are you using?  I had the same problem when I went to MyFaces 1.0.9.  When I went back to 1.0.7 and everything was back to normal. 


Take a look at the <head>...</head> section of the page produced by MyFaces that has a jsCookMenu on it - do you see a bunch of extra style sheets and javascript links that you didn't specify in your JSP? (that is what I saw in my pages after upgrading to 1.0.9)



HTH
Aaron Bartell


Neal Haggard wrote:


>I realized when I saw the subject come up that I really have two questions.  The question I asked in my last note being a bit more pressing.  The other question is I'm seeing the styles & the javascript is rendering for the jscookMenu, however the internal images that the javascript loads on the right hand side of the sub-child elements are not rendering.  I get the image not found placeholder (the infamous red 'X').  Is there something else I need to add to my Extensions Filter configuration to let that work? ",MYFACES-172
"UIColumns class for new crosstable component should be moved from share src tree to components tree.
",MYFACES-171
"Hi, 
I have tested myfaces-wap-example.war and I have found two problems:

1. There is missing library myfaces-wap.jar in WEB-INF/lib

2. There is a subdirectory ""web"" in the war. It's problem. All files from this directory must be in a ""root"" of the archive.",MYFACES-170
"h:datatable is not working with a nested UIData component.
An exception is thrown ""No initial state defined for clientId ..."" in UIData.restoreDescendantComponentStates(...) Line 403 if the page is rendered for the first time.

The patch for the issue 142 only reloved the problem with nested EditableValueHolder components.

Here is a patch which works for both UIData and EditableValueHolder components:

Index: UIData.java
===================================================================
RCS file: /home/cvspublic/incubator-myfaces/src/jsfapi/javax/faces/component/UIData.java,v
retrieving revision 1.30
diff -u -r1.30 UIData.java
--- UIData.java	24 Mar 2005 16:46:02 -0000	1.30
+++ UIData.java	6 Apr 2005 07:14:26 -0000
@@ -185,7 +185,7 @@
 			}
 		}
 
-		restoreDescendantComponentStates(getFacesContext(), this, true);
+		restoreDescendantComponentStates(getFacesContext(), this, !_firstTimeRendered);
 	}
 
 	//    private int getDescendantStatesRowIndex()
@@ -415,7 +415,7 @@
 					continue;
 				}
 
-				if (!_firstTimeRendered && child instanceof EditableValueHolder)
+				if (child instanceof EditableValueHolder)
 				{
 					EditableValueHolder childEVH = (EditableValueHolder) child;
 					Object state =
",MYFACES-169
"I'm using the MyFaces tag named x:inputCalendar in order to let the
user select a date from a popup calendar or enter it directly. If the
user enters a valid date, everything goes perfect.

The problem comes when the user enters something wrong, for example
letters. The component tries to convert this value to a valid date
(following the pattern, if there is one), and then throws a
ConvertException exception, so the Apply Request Values phase returns
false, and LifeCycle jumps to the render phase.

When rendering, the component is asked to encode itself, so the
following code is executed:

public void encodeEnd(FacesContext facesContext, UIComponent
component) throws IOException
{
RendererUtils.checkParamValidity(facesContext, component,
HtmlInputCalendar.class);

HtmlInputCalendar inputCalendar = (HtmlInputCalendar) component;

Locale currentLocale = facesContext.getViewRoot().getLocale();

Date value = RendererUtils.getDateValue(inputCalendar);

....
}

As you can see, the last visible line of this code is:

Date value = RendererUtils.getDateValue(inputCalendar);

so it forces the actual value of the inputCalendar to be a date. And
as obviously we come from a conversion error and that means the value
is not a valid date, the RendererUtils.getDateValue(inputCalendar)
throws:

                   throw new IllegalArgumentException(
                           ""Expected submitted value of type Date for
component : ""+
                           getPathToComponent(component));

so this exception results in a ServletException that brings up the
undesirable ""full of Java trace annoying text"" page to the user.

I was wondering why the encondeEnd of this component forces the value
to be obtained to be a date, when anything can be entered in a input
text box.

I've been looking at the common h:inputText tag and its component
always uses the RenderUtils.getStringValue method from its encodeEnd
method, so if a conversion/validation error has been detected, it is
presented to the user using the friendly mechanism of a FacesMessage
and the well-known messages tags.

So I think this could be a bug as no validation can be done at all!",MYFACES-167
"Exception handling in myfaces is strange. javax.faces.FacesServlet.logException(...) prints stacktrace through e.printStackTrace() and produces a large stacktrace.

Calls to log.error(...) followed by a (re)thrown exception which was logged before dosn´t make sense. The decision how and when to log an exception should only be done if the exception can be handled and is not rethrown.

MethodBindingImpl, PropertyResolverImpl, ValueBindingImpl also prints exception to log and rethrow them.

I´ve added some patches which will reduce the stacktraces. That will make it easier for the user to find the cause of the exception.

Index: FacesServlet.java
===================================================================
RCS file: /home/cvspublic/incubator-myfaces/src/jsfapi/javax/faces/webapp/FacesServlet.java,v
retrieving revision 1.12
diff -u -r1.12 FacesServlet.java
--- FacesServlet.java	13 Jul 2004 15:43:34 -0000	1.12
+++ FacesServlet.java	5 Apr 2005 10:47:15 -0000
@@ -162,7 +162,6 @@
         }
 
          _servletConfig.getServletContext().log(msg, e);
-        e.printStackTrace();
 
         Throwable cause = e.getCause();
         if (cause != null && cause != e)
Index: MethodBindingImpl.java
===================================================================
RCS file: /home/cvspublic/incubator-myfaces/src/myfaces/org/apache/myfaces/el/MethodBindingImpl.java,v
retrieving revision 1.17
diff -u -r1.17 MethodBindingImpl.java
--- MethodBindingImpl.java	13 Oct 2004 11:51:00 -0000	1.17
+++ MethodBindingImpl.java	5 Apr 2005 10:47:28 -0000
@@ -159,25 +159,19 @@
                 }
                 else
                 {
-                    log.error(""Exception while invoking expression ""
-                        + getExpressionString(), cause);
-                    throw new EvaluationException(""Expression: ""
+                    throw new EvaluationException(""Exception while invoking expression ""
                         + getExpressionString(), cause);
                 }
             }
             else
             {
-                log.error(""Exception while invoking expression ""
-                    + getExpressionString(), e);
-                throw new EvaluationException(""Expression: ""
+                throw new EvaluationException(""Exception while invoking expression ""
                     + getExpressionString(), e);
             }
         }
-        catch (Exception e)
+        catch (Throwable e)
         {
-            log.error(""Exception while invoking expression ""
-                + getExpressionString(), e);
-            throw new EvaluationException(""Expression: ""
+            throw new EvaluationException(""Exception while invoking expression ""
                 + getExpressionString(), e);
         }
     }
Index: PropertyResolverImpl.java
===================================================================
RCS file: /home/cvspublic/incubator-myfaces/src/myfaces/org/apache/myfaces/el/PropertyResolverImpl.java,v
retrieving revision 1.31
diff -u -r1.31 PropertyResolverImpl.java
--- PropertyResolverImpl.java	9 Jan 2005 18:15:12 -0000	1.31
+++ PropertyResolverImpl.java	5 Apr 2005 10:47:39 -0000
@@ -229,9 +229,8 @@
         }
         catch (RuntimeException e)
         {
-            log.error(""Exception setting value of index "" + index + "" of bean "" 
+            throw new EvaluationException(""Exception setting value of index "" + index + "" of bean "" 
                 + base != null ? base.getClass().getName() : ""NULL"", e);
-            throw e;
         }
     }
 
Index: ValueBindingImpl.java
===================================================================
RCS file: /home/cvspublic/incubator-myfaces/src/myfaces/org/apache/myfaces/el/ValueBindingImpl.java,v
retrieving revision 1.54
diff -u -r1.54 ValueBindingImpl.java
--- ValueBindingImpl.java	13 Oct 2004 11:51:00 -0000	1.54
+++ ValueBindingImpl.java	5 Apr 2005 10:47:47 -0000
@@ -353,21 +353,21 @@
             throw new PropertyNotFoundException(
                 ""Expression: '"" + _expressionString + ""'"", e);
         }
-        catch (Exception e)
+        catch (Throwable e)
         {
+            String msg;
             if (newValue == null)
             {
-                log.error(""Cannot set value for expression '"" 
-                    + _expressionString + ""' to null."", e);
+                msg = ""Cannot set value for expression '"" 
+                    + _expressionString + ""' to null."";
             }
             else
             {
-                log.error(""Cannot set value for expression '"" 
+                msg = ""Cannot set value for expression '"" 
                     + _expressionString + ""' to a new value of type "" 
-                    + newValue.getClass().getName(), e);
+                    + newValue.getClass().getName();
             }
-            throw new EvaluationException(
-                ""Expression: '"" + _expressionString + ""'"", e);
+            throw new EvaluationException(msg, e);
         }
     }
     
@@ -452,19 +452,9 @@
             throw new PropertyNotFoundException(
                 ""Expression: '"" + _expressionString + ""'"", e);
         }
-        catch (Exception e)
+        catch(ELException e)
         {
-            log.error(""Cannot get value for expression '"" + _expressionString 
-                + ""'"", e);
-
-            if (e instanceof ELException)
-            {
-                log.error(""Root cause for exception : "", 
-                    ((ELException) e).getRootCause());
-            }
-
-            throw new EvaluationException(
-                ""Expression: '"" + _expressionString + ""'"", e);
+          throw new EvaluationException(e.getRootCause());
         }
     }
     
",MYFACES-166
"IOException and rethrown without any action (seems to be a debug point)
RuntimeException is  catched, logged and rethrown.

At least the log.error(...) call should be removed to avoid large stacktraces.

Here is a patch:

Index: HtmlGridRenderer.java
===================================================================
RCS file: /home/cvspublic/incubator-myfaces/src/myfaces/org/apache/myfaces/renderkit/html/HtmlGridRenderer.java,v
retrieving revision 1.16
diff -u -r1.16 HtmlGridRenderer.java
--- HtmlGridRenderer.java	23 Dec 2004 13:03:08 -0000	1.16
+++ HtmlGridRenderer.java	5 Apr 2005 07:51:35 -0000
@@ -187,8 +187,6 @@
                                 int columns)
         throws IOException
     {
-        try
-        {
             writer.startElement(HTML.TBODY_ELEM, component);
 
             String columnClasses;
@@ -282,16 +280,6 @@
             }
 
             writer.endElement(HTML.TBODY_ELEM);
-        }
-        catch(IOException ex)
-        {
-            throw ex;
-        }
-        catch(RuntimeException ex2)
-        {
-            log.error(""Exception while rendering children of panel-grid."",ex2);
-            throw ex2;
-        }
     }
 
 }
",MYFACES-165
"""When I navigate back to a form that has previously been submitted, using the browser back button, I need to click the submit button twice in order for the form to actually resubmit"".
In the mailing list (myfaces-user at 15 Nov 2004), Manfred said ""This problem does not exist for client-side state saving"".
To be sure, it seems work correctly, but client-side state saving have security problems.
Client-side state is non encrypted data, so users can see the state, and tamper with it.
It is necessary to hold sever-side state like JSF-RI 1.1_01 to use MyFaces for secure application.
",MYFACES-164
"When a commandLink inside a tree2 has an action attr, actionListener attr, or f:actionListener tag they are never queued or broadcast and the associated methods never get called.",MYFACES-163
The files release-checklist.txt and todo.txt in the doc directory still reference Source Forge.,MYFACES-162
"I found that the converter for java.math.BigDecimal appears twice in the META-INF/faces-config.xml file that is located in myfaces-extensions.jar. The first one appears on line 291. This doesn't appear to cause much of a problem, but, it generates warnings when you use it with the JSF RI.

    <converter>
        <converter-for-class>java.math.BigDecimal</converter-for-class>
        <converter-class>javax.faces.convert.BigDecimalConverter</converter-class>
    </converter>

    <converter>
        <converter-for-class>java.math.BigInteger</converter-for-class>
        <converter-class>javax.faces.convert.BigIntegerConverter</converter-class>
    </converter>
",MYFACES-161
"Apparently UITreeData can return a null node id when getNodeId() is called. HtmlTree.isNodeSelected() doesn't check for a null id and dumps a long strack trace in the log. It would be nicer for the log file if checked for a null value:

return (getNodeId() != null) ? getNodeId().equals(_selectedNodeId) : false;",MYFACES-160
"If a node gets deleted between the time it is clicked on and when the server processes
the request I get this error:
 
 java.lang.IllegalArgumentException: Node with id 0:1:1. Failed to parse 0:1:1
 
Basically the node's child was deleted and the index of the child list is no longer
valid. It was valid when the tree was displayed. This gets thrown from
TreeModel.getNodeById() when an IndexOutOfBoundsException is thrown by the child list.

This should be handled more gracefully, like by adding a faces context message, ""The selected item no longer exists."", and the processing of the rest of the tree nodes should continue. The end user can choose whether or not to show the messages.",MYFACES-159
"Recommendation from Adam Winer:

> - The line of code that reads:
> String strValue = value.toString(); //TODO: Use converter for value
> .. well, no:  Converters are not applicable here.

> - Remove any code that tries to output <!-- --> around Javascript, and
> move that functionality into ResponseWriter.startElement(""script"") and
> ResponseWriter.endElement(""script"") so it can be globally enabled and
> disabled if needed.
",MYFACES-158
"I believe that this is a new bug in 1.0.9. It seems to not exist in 1.0.8.

When I have jsp code like this:

  <f:view>
    <h:form>
      <h:panelGrid columns=""1"">
        <h:selectManyListbox>
          <f:selectItem itemLabel=""one"" itemValue=""one"" />
          <f:selectItem itemLabel=""two"" itemValue=""two"" />
          <f:selectItem itemLabel=""three"" itemValue=""three"" />
          <f:converter converterId=""converter"" />
        </h:selectManyListbox>
        <h:commandButton value=""submit""
          actionListener=""#{controller.submit}"" />
      </h:panelGrid>
    </h:form>
  </f:view>

I get a NullPointerException when I submit the form without selecting anything in the list box (no problem when a selection is made).

Here is the stack trace:

java.lang.NullPointerException
	at org.apache.myfaces.renderkit._SharedRendererUtils.getConvertedUISelectManyValue(_SharedRendererUtils.java:151)
	at org.apache.myfaces.renderkit.RendererUtils.getConvertedUISelectManyValue(RendererUtils.java:792)
	at org.apache.myfaces.renderkit.html.HtmlListboxRendererBase.getConvertedValue(HtmlListboxRendererBase.java:143)
	at javax.faces.component.UISelectMany.getConvertedValue(UISelectMany.java:295)
	at javax.faces.component.UIInput.validate(UIInput.java:291)
	at javax.faces.component.UISelectMany.validate(UISelectMany.java:284)
	at javax.faces.component.UIInput.processValidators(UIInput.java:166)
	at javax.faces.component.UIComponentBase.processValidators(UIComponentBase.java:427)
	at javax.faces.component.UIForm.processValidators(UIForm.java:66)
	at javax.faces.component.UIComponentBase.processValidators(UIComponentBase.java:427)
	at javax.faces.component.UIViewRoot.processValidators(UIViewRoot.java:162)
	at org.apache.myfaces.lifecycle.LifecycleImpl.processValidations(LifecycleImpl.java:208)
	at org.apache.myfaces.lifecycle.LifecycleImpl.execute(LifecycleImpl.java:92)
	at javax.faces.webapp.FacesServlet.service(FacesServlet.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:237)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:157)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:214)
	at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:104)
	at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:520)
	at org.apache.catalina.core.StandardContextValve.invokeInternal(StandardContextValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:152)
	at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:104)
	at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:520)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:137)
	at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:104)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:118)
	at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:102)
	at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:520)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
	at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:104)
	at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:520)
	at org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:929)
	at org.apache.coyote.tomcat5.CoyoteAdapter.service(CoyoteAdapter.java:160)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:799)
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.processConnection(Http11Protocol.java:705)
	at org.apache.tomcat.util.net.TcpWorkerThread.runIt(PoolTcpEndpoint.java:577)
	at org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:683)
	at java.lang.Thread.run(Thread.java:534)
",MYFACES-157
The tlddocs directory in V1.0.9-RC2 does not contain any content (except the .css file).,MYFACES-156
Added a new attribute to both h:message and h:messages tags named 'escape' fot the possibility to escape HTML code (similar to h:outputText).,MYFACES-155
"lookupSet is filled using either getSubmittedValuesAsSet or getSelectedValuesAsSet. Both of these routines use RenderUtils.internalSubmittedOrSelectedValuesAsSet(), which uses RenderUtils.getConvertedStringValue(). 
getConvertedStringValue() always returns strings. Hence, lookupSet.contains() should always compare against itemStrValue (rather than itemValue.)

This impacts 2 files:

HtmlCheckboxRendererBase.java:
168,170c168,173
<             boolean checked = (useSubmittedValues && lookupSet^M
<                     .contains(itemStrValue))^M
<                     || (!useSubmittedValues && lookupSet.contains(itemValue));^M
---
> //            boolean checked = (useSubmittedValues && lookupSet^M
> //                    .contains(itemStrValue))^M
> //                    || (!useSubmittedValues && lookupSet.contains(itemValue));^M
>               // HAN - the myfaces code does not work with a converter. The lookupSet=getS*ValuesAsSet() ultimately calls RenderUtils.internalSubmittedOrSelectedValuesAsSet^M
>               // That routine calls getConvertedStringValue(); which always returns strings. Hence lookupSet should always be compared to itemStrValue.^M
>             boolean checked = lookupSet.contains(itemStrValue);^M

HtmlRendererUtils.java:
457,458c460,464
<                 if ((useSubmittedValue && lookupSet.contains(itemStrValue))^M
<                         || (!useSubmittedValue && lookupSet.contains(itemValue))) {^M
---
> //                if ((useSubmittedValue && lookupSet.contains(itemStrValue))^M
> //                        || (!useSubmittedValue && lookupSet.contains(itemValue))) {^M
>                   // HAN - the myfaces code does not work with a converter. The lookupSet=getS*ValuesAsSet() ultimately calls RenderUtils.internalSubmittedOrSelectedValuesAsSet^M
>                   // That routine calls getConvertedStringValue(); which always returns strings. Hence lookupSet should always be compared to itemStrValue.^M
>                               if (lookupSet.contains(itemStrValue)) {^M
",MYFACES-154
"
An error occour when I replace myfaces 1.08 by 1.09 RC2.

The error is 
[15:55:27,203][ERROR][AddResource.java:232] Unparsable lastModified : @lastModified@ 

I don't know why but my web application still work very well.
I trace source code
org.apache.myfaces.component.html.util.AddResource


......
private static Date lastModified = null;
	private static long getLastModified(){
		if( lastModified == null ){
			final String format = ""yyyy-MM-dd HH:mm:ss Z""; // Must match the one used in the build file
	        final String bundleName = AddResource.class.getName();
	        ResourceBundle resources = ResourceBundle.getBundle( bundleName );
			String sLastModified = resources.getString(""lastModified"");
			try {
				lastModified = new SimpleDateFormat(format).parse( sLastModified );
			} catch (ParseException e) {
				lastModified = new Date();
				log.error(""Unparsable lastModified : ""+sLastModified);
			}
		}
		
		return lastModified.getTime(); 
	}
.......

AddResource.properties
# Used un the ressources URL, to enable caching the resources on the client.
lastModified=@lastModified@

I think mabye something wrong happens when building the 1.09RC2.
In AddResource.properties, lastModified should be replaced by correct string but
it doesn't work correctly.





ohara",MYFACES-153
"I've been shown some problems lately with MyFaces 1.0.9 and ADF Faces.
The problems specifically trace to MyFaces's use of
ResponseWriter.endDocument() to output Javascript.  Since ADF Faces
runs with its own RenderKit (and therefore its own ResponseWriter),
this Javascript is getting dropped and not written.

I'd recommend (both as JSF EG guy and ADF Faces guy) that this MyFaces
code be moved *out* of ResponseWriter.endDocument().  Specifically:

- ResponseWriter.endDocument() is not guaranteed to be called before
the close of  or even the close of , and therefore this
script cannot be safely output at this point.  It's quite likely that
changes in JSF 1.2 will essentially guarantee that endDocument() is
not called until the close of all output.
- This is not really the intent of ResponseWriter.endDocument().  In
HTML, it should be a no-op.  It's there for more bizarre scenarios
like a ResponseWriter outputting a SOAP envelope around a response.
- It's breaking ADF Faces. :)

A significantly cleaner way to output needed Javascript is to add it
as needed from the Renderers that require it (using a request-scoped
attribute to track if its been added already).
",MYFACES-152
"I created a tiles definition with the name ""foo.tiles"".  When I navigate to foo.jsf the view handler attempts to locate a tiles definition with the name of ""/foo.tiles.""  I think this is a bit odd to require a leading '/' character in my tiles definitions.",MYFACES-151
"Currently ever tiles definition *must* end in *.tiles.  This is too restrictive.  I'm including a patch that allows the user to specify their own suffix.

",MYFACES-150
"When no selection is made in the selection list the following exception occures:

java.lang.NullPointerException
	org.apache.myfaces.renderkit._SharedRendererUtils.getConvertedUISelectManyValue(_SharedRendererUtils.java:183)
	org.apache.myfaces.renderkit.RendererUtils.getConvertedUISelectManyValue(RendererUtils.java:792)
	org.apache.myfaces.renderkit.html.HtmlListboxRendererBase.getConvertedValue(HtmlListboxRendererBase.java:143)
	javax.faces.component.UISelectMany.getConvertedValue(UISelectMany.java:295)
	javax.faces.component.UIInput.validate(UIInput.java:291)
	javax.faces.component.UISelectMany.validate(UISelectMany.java:284)
	javax.faces.component.UIInput.processValidators(UIInput.java:166)
	javax.faces.component.UIForm.processValidators(UIForm.java:66)
	javax.faces.component.UIComponentBase.processValidators(UIComponentBase.java:418)
	javax.faces.component.UIViewRoot.processValidators(UIViewRoot.java:162)
	org.apache.myfaces.lifecycle.LifecycleImpl.processValidations(LifecycleImpl.java:208)
	org.apache.myfaces.lifecycle.LifecycleImpl.execute(LifecycleImpl.java:92)
	javax.faces.webapp.FacesServlet.service(FacesServlet.java:109)
	org.apache.myfaces.component.html.util.ExtensionsFilter.doFilter(ExtensionsFilter.java:115)	

I fixed it by adding the following code to the beginning of _SharedRendererUtils.getConvertedUISelectManyValue() in both places (javax.faces.component and org.apache.myfaces.renderkit)
<code>
if (submittedValue == null)
{
    return submittedValue;
}
</code>
",MYFACES-149
"I try to use the ""datalist"" with embedded inputText to change fields in my datamodel.

After some debugging it turns out it is needet to put the inputText tag within an column tag

e.g.
<x:dataList>
<h:colum>
<h:inputText ...>
</h:colum>

<h:colum>
<h:inputText ...>
</h:colum>
</x:dataList>

I dont understand why this is needet as there is no need to render ""columns"" within an dataList.

Which brings me to the next problem. If I try to embed verbatim tag ...


<x:dataList>
<f:verbatim><tr><td></f:verbatim>
<h:colum>
<h:inputText ...>
<f:verbatim></td><td></f:verbatim>
</h:colum>

<h:colum>
<h:inputText ...>
<f:verbatim></td></tr></f:verbatim>
</h:colum>

</x:dataList>

(It makes no difference how the tags are ordered only the classname in ClassCastException changes)

... I get the following exception:

java.lang.ClassCastException: javax.faces.component.UIColumn
        at org.apache.myfaces.taglib.core.VerbatimTag.doAfterBody(VerbatimTag.java:76)
        at org.apache.jsp.suntools_at.onlineshop.warenkorb_jsp._jspx_meth_f_verbatim_0(warenkorb_jsp.java:387)
        at org.apache.jsp.suntools_at.onlineshop.warenkorb_jsp._jspx_meth_x_dataList_0(warenkorb_jsp.java:325)
        at org.apache.jsp.suntools_at.onlineshop.warenkorb_jsp._jspx_meth_h_form_0(warenkorb_jsp.java:244)
        at org.apache.jsp.suntools_at.onlineshop.warenkorb_jsp._jspx_meth_f_view_0(warenkorb_jsp.java:183)
        at org.apache.jsp.suntools_at.onlineshop.warenkorb_jsp._jspService(warenkorb_jsp.java:86)
        at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:94)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:802)
        at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:324)
        at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:292)
        at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:236)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:802)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:237)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:157)
        at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:704)
        at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:474)
        at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:409)
        at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
        at org.apache.myfaces.context.servlet.ServletExternalContextImpl.dispatch(ServletExternalContextImpl.java:405)
        at org.apache.myfaces.application.jsp.JspViewHandlerImpl.renderView(JspViewHandlerImpl.java:280)
        at org.apache.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:300)
        at javax.faces.webapp.FacesServlet.service(FacesServlet.java:110)
 ",MYFACES-148
"Hello,
thanks for creating MyFaces, I'm beginning to like it very much :)

I have a problem working on tabs with the x:panelTabbedPane : the status of some elements is not correctly saved and restored when switching tabs.

I report a snip of a mail from Sylvain Vieujot from the -user mailing list, I think it can be useful for who will try to solve the problem.
---------
[...]
But we still have an issues for UISelectItems.
If someone could look at line 140 of the HtmlCheckBoxRendererBase, and line 463 of the RendererUtils, it would be great, as I think they too are using the component's value, instead of checking for a submitted value first.
I can't work on this right now as I'll be away from my computer for a week, and I don't want to take the risk of breaking it before leaving.

An easy way to test test the problem is the same as for any component : Put the component in an tab panel, with at least 2 tabs. Change the component value, and then switch to another tab.
This should set the component's submitted value, but not change the backing bean value.
When you switch back to initial tab, you should have the changed value.
If the user changes have been lost, then the component's renderer has a bug. It always renders the backing bean value instead of looking first for a submitted value.
[...]
---------

I've modified the tabbedPane.jsp page from the example of the distribution to show the bad behaviohur. To check the problem:
- fill in the controls on tab1
- switch to tab3, fill the other controls
- switch back to tab1 and you'll notice that the date lost it's value
- switch back to tab3 and also the selectboxes and radiobuttons are reset

If I find a way to attach a file to this issue I'll upload the new tabbedPane.jsp, otherwise I'll attach it on a message on the mailing list.

Thanks,
Alex",MYFACES-147
"I was trying to use the regexp validator in from the extensions jar. This meant I needed to use the <x:validateRegExp .../> tag and Weblogic complained that it couldn't find other tag classes referenced in the x tld. I added the following to build script and was able to use the validators I wanted. 

            <fileset dir=""${impl.classes}""
                     includes=""org/apache/myfaces/taglib/**/*.class""/>        


Index: build.xml
===================================================================
RCS file: /home/cvspublic/incubator-myfaces/build/build.xml,v
retrieving revision 1.87
diff -u -r1.87 build.xml
--- build.xml	22 Mar 2005 06:59:42 -0000	1.87
+++ build.xml	23 Mar 2005 00:42:50 -0000
@@ -235,6 +235,8 @@
                      includes=""**/*.class""/>
             <fileset dir=""${components.classes}""
                      includes=""**/*.class""/>
+            <fileset dir=""${impl.classes}""
+                     includes=""org/apache/myfaces/taglib/**/*.class""/>        	
             <!-- TLDs -->
             <zipfileset dir=""${resolved-tlds.dir}""
                         includes=""myfaces_ext.tld,myfaces_ext_sf.tld""
",MYFACES-146
"Weblogic complains that the collapsiblePanel tag has attributes (such as align) for which no setter exists. It refuses to load the the tag library (because that violates the JSP spec) even though I am not using that tag. I am using latest myfaces from CVS, modified slightly because the tag classes aren't in the extension jar. ",MYFACES-145
"To reproduce the bug a complex object (other than string) must be used as the value for SelectItem. The object is converted by using a Converter to a string value.

The method HtmlRenderUtils.renderSelectOptions(...) tests the complex object with the converted value which is only working if a string is used as a value for the selectitem.

Here is the fix:

Index: HtmlRendererUtils.java
===================================================================
RCS file: /home/cvspublic/incubator-myfaces/src/share/org/apache/myfaces/renderkit/html/HtmlRendererUtils.java,v
retrieving revision 1.29
diff -u -r1.29 HtmlRendererUtils.java
--- HtmlRendererUtils.java	16 Mar 2005 20:34:36 -0000	1.29
+++ HtmlRendererUtils.java	22 Mar 2005 11:04:20 -0000
@@ -447,7 +447,6 @@
                         useSubmittedValue, Arrays.asList(selectItems));
                 writer.endElement(HTML.OPTGROUP_ELEM);
             } else {
-                Object itemValue = selectItem.getValue();
                 String itemStrValue = RendererUtils.getConvertedStringValue(context, component,
                         converter, selectItem);
 
@@ -458,7 +457,7 @@
                 }
 
                 if ((useSubmittedValue && lookupSet.contains(itemStrValue))
-                        || (!useSubmittedValue && lookupSet.contains(itemValue))) {
+                        || (!useSubmittedValue && lookupSet.contains(itemStrValue))) {
                     writer.writeAttribute(HTML.SELECTED_ATTR,
                             HTML.SELECTED_ATTR, null);
                 }
",MYFACES-144
"I brought this up on the mailing list a long time ago.  Basically if you are using the Tiles view handler than you cannot have stand alone JSF pages.  In other words, you cannot navigate to foo.jsf because the view handler thinks that there is a tiles definition named foo somewhere.  So you end up with a NPE.  It would be nice if the view handler attempted to handle in the normal fashion if there is no associated Tile definition.",MYFACES-143
"This bug is only visible by using h:datatable with a EditableValueHolder in a column of the table. x:datatable is still working since the new implementation of UIData is overwritten in HtmlDataTableHack which still contains the old implementation (is that OK?).

There is a NullPointerException in Line 426 when the page is rendered for the first time. The EditableValueHolderState object state is null.

The bug can easily be reproduced by changing the x:datatable tag in countryTableForm.jsp to h:datatable tag (remove preserveDataModel attribute also)",MYFACES-142
"If a class ""MyList"" extends the class ""ArrayList"" and the class ""MyList"" has various getter and setter methods, then it is not possible to access such properties in the jsp/jsf page. an example expression is: #{sampleBean.testList.testValue} . the expression resolver think ""testValue"" is an index; therefore, it tries to convert ""testValue"" to an integer, which will fail. In my opinion, ""testValue"" should refer to the implemented methods ""getTestValue"" and ""setTestValue"".

You will get the following exception:

2005-03-21 15:58:12,312 ERROR [org.apache.myfaces.el.ValueBindingImpl] Cannot get value for expression '#{sampleBean.testList.testValue}'
javax.faces.el.ReferenceSyntaxException: Cannot convert index to int for base mypackage.MyList and index maxItems
	at org.apache.myfaces.el.ELParserHelper.coerceToIntegerWrapper(ELParserHelper.java:418)
	at org.apache.myfaces.el.ELParserHelper.toIndex(ELParserHelper.java:440)
	at org.apache.myfaces.el.ELParserHelper$MyPropertySuffix.evaluate(ELParserHelper.java:541)
	at org.apache.commons.el.ComplexValue.evaluate(ComplexValue.java:145)
	at org.apache.myfaces.el.ValueBindingImpl.getValue(ValueBindingImpl.java:441)
	at javax.faces.component.UIOutput.getValue(UIOutput.java:75)
	at org.apache.myfaces.renderkit.RendererUtils.getStringValue(RendererUtils.java:293)
	at org.apache.myfaces.renderkit.html.HtmlTextRendererBase.renderInput(HtmlTextRendererBase.java:159)
	at org.apache.myfaces.renderkit.html.HtmlTextRendererBase.encodeEnd(HtmlTextRendererBase.java:77)
	at javax.faces.component.UIComponentBase.encodeEnd(UIComponentBase.java:332)
",MYFACES-141
"In javax.faces.component.html.HtmlPanelGrid, we have:

    public int getColumns()
    {
        if (_columns != null) return _columns.intValue();
        ValueBinding vb = getValueBinding(""columns"");
        Integer v = vb != null ? (Integer)vb.getValue(getFacesContext()) : null;
        return v != null ? v.intValue() : DEFAULT_COLUMNS;
    }

Per JSP 2.0 section 2.3.5.1 and 2.9, EL expressions can return a variety of of numeric types.  In particular, the expression #{2 + 2} will return a Long.  The code should be

    public int getColumns()
    {
        if (_columns != null) return _columns.intValue();
        ValueBinding vb = getValueBinding(""columns"");
        Number v = vb != null ? (Number)vb.getValue(getFacesContext()) : null;
        return v != null ? v.intValue() : DEFAULT_COLUMNS;
    }

",MYFACES-140
"here is the patch:

Index: HtmlTree.java
===================================================================
RCS file: /home/cvspublic/incubator-myfaces/src/components/org/apache/myfaces/custom/tree/HtmlTree.java,v
retrieving revision 1.30
diff -u -r1.30 HtmlTree.java
--- HtmlTree.java	11 Feb 2005 00:54:02 -0000	1.30
+++ HtmlTree.java	21 Mar 2005 12:20:25 -0000
@@ -150,7 +150,7 @@
 
     public String createUniqueId(FacesContext context)
     {
-        return getClientId(context) + ""_node_"" + uniqueIdCounter++;
+        return getClientId(context).replaceAll("":"", ""_"") + ""_node_"" + uniqueIdCounter++;
     }
 
 
",MYFACES-139
"At least HtmlDataList.setRowIndex(-1) should called at end of method processDecodes(FacesContext) to reset the component state as documented in setRowIndex(int). UIData.processDecodes(FacesContext) calls setRowIndex(-1) before looping the rows too. As I don´t know why UIData is doing that it seems to be that HtmlDataList works without it.

Here comes the patch:

Index: HtmlDataList.java
===================================================================
RCS file: /home/cvspublic/incubator-myfaces/src/components/org/apache/myfaces/custom/datalist/HtmlDataList.java,v
retrieving revision 1.5
diff -u -r1.5 HtmlDataList.java
--- HtmlDataList.java	13 Oct 2004 11:50:57 -0000	1.5
+++ HtmlDataList.java	21 Mar 2005 10:59:12 -0000
@@ -59,6 +59,7 @@
                 }
             }
         }
+        setRowIndex(-1);
     }
 
 
",MYFACES-138
"<Mar 18, 2005 6:14:55 PM EST> <Warning> <HTTP> <BEA-101248> <[ServletContext(id=
25528996,name=survey,context-path=/)]: ...
\WEB-INF\lib\myfaces-extensions.jar!/META-INF/myfaces_ext.tld"" is malformed. Check against the DTD: Attribute ""xmlns"" with value ""http://java.sun.com/xml/ns/j2ee"" must have a value of ""http://java.sun.com/JSP/TagLibraryDescriptor"". (line 17, column 49).>

",MYFACES-137
Japanese translation is incomplete.,MYFACES-136
"MyFaces does not work with resin due to taglib's namespace. Here is a patch to support resin. Please fix it.

Takashi Okamoto

Index: tlds/myfaces_ext.tld
===================================================================
RCS file: /home/cvspublic/incubator-myfaces/tlds/myfaces_ext.tld,v
retrieving revision 1.180
diff -u -r1.180 myfaces_ext.tld
--- tlds/myfaces_ext.tld	15 Mar 2005 21:11:39 -0000	1.180
+++ tlds/myfaces_ext.tld	18 Mar 2005 16:45:18 -0000
@@ -65,7 +65,7 @@
 <!ENTITY alt_location_attributes             SYSTEM ""entities/alt_location_attributes.xml"">
 ]>
 
-<taglib xmlns=""http://java.sun.com/xml/ns/j2ee"">
+<taglib>
 
     <tlib-version>0.9.0</tlib-version>
     <jsp-version>1.2</jsp-version>
",MYFACES-135
"Myfaces-extensions.jar depends on some org.apache.commons.digester.rss.* files in commons-digester-1.5.jar that are no longer part of the binary distribution in commons-digester-1.6.jar. Not sure how you want to resolve that but I don't think everyone that wants to use myfaces-extensions.jar will have to choose between switching to commons-digester 1.5 and compiling their own jar with the digester.rss code or making their own myfaces-extension.jar.

Maybe that myfaces rss component should live in its own jar since it depends on example code? 

This is from the 1.6 release notes:

RSS Support
-----------
The RSS package present in previous distributions of Digester was only ever intended to be a ""worked example"", so the code has been moved to the ""src/examples/api/rss"" directory within the CVS repository, and is no longer part of the standard Digester binary distribution. However the same package structure has been preserved, so any users who were using the rss code in production should just have to compile the example code and include that additional jar in the classpath. These classes are still contained in the source distribution and so (for those for which such things
matter)
are still officially released (though no longer distributed in the binary).

",MYFACES-134
"A configured but inexistent renderer is not reported and the myfaces-application starts using the supplied standard renderer. The SUN-RI reports a ""java.lang.ClassNotFoundException: com.jsf.components.renderer.NotExistingRenderer"" which helps to pinpoint the configuration error.

For production this can be a desired behaviour but presents some danger at the same time. Not having the information at hand I wondered why my renderer would not decorate the input-field as planned. When I tried the same renderer in the RI the error (wrong classname) was found in 30 seconds.

The error is easy to reproduce:
Take an existing JSF-application and add a phantom renderer to the faces-config.xml. Then start the web-container.
(sample config-entry:
<render-kit>
 <renderer>
  <component-family>javax.faces.Input</component-family>
  <renderer-type>javax.faces.Text</renderer-type>
  <renderer-class>com.jsf.components.renderer.NotExistingRenderer</renderer-class>
 </renderer>
</render-kit>
)
",MYFACES-133
"There is a slight Bug in HtmlPopupTag:

setIntegerProperty(component,""displayAtDistancey"",_displayAtDistanceY);

should be

setIntegerProperty(component,""displayAtDistanceY"",_displayAtDistanceY);
",MYFACES-132
"I have a problem when the property value of selectOne* and selectMany* is a data type different of String (Eg.: int, byte, Long, others). The submitted value by user is converted to this data type, but the html component (select/option) wasn't reflected in browser. I modified the classes below and now, it's ok.

Class...: org.apache.myfaces.renderkit.RenderUtils
Line 543: String.valueOf(ar[i])
Line 555: String.valueOf(Array.get(values, i))
Line 569: //set.addAll(lst);
          for (int i = 0; i < lst.size(); i++) {
            set.add(String.valueOf(lst.get(i)));
          }

Class...: org.apache.myfaces.renderkit.html.HtmlRenderUtils
Line 379: if (!useSubmittedValue) {
            lookup = String.valueOf(uiSelectOne.getValue());
          } else {
            lookup = String.valueOf(lookup);
          }

Class...: org.apache.myfaces.renderkit.html.HtmlRadioRendererBase
Line 151: currentValue.toString().equals(itemStrValue)",MYFACES-131
"java.lang.NullPointerException
        at org.apache.myfaces.renderkit._SharedRendererUtils.getConvertedUISelectManyValue(_SharedRendererUtils.java:118)
        at org.apache.myfaces.renderkit.RendererUtils.getConvertedUISelectManyValue(RendererUtils.java:792)
        at org.apache.myfaces.renderkit.html.HtmlCheckboxRendererBase.getConvertedValue(HtmlCheckboxRendererBase.java:260)
        at javax.faces.component.UISelectMany.getConvertedValue(UISelectMany.java:296)
        at javax.faces.component.UIInput.validate(UIInput.java:291)
        at javax.faces.component.UISelectMany.validate(UISelectMany.java:285)
        at javax.faces.component.UIInput.processValidators(UIInput.java:166)
        at javax.faces.component.UIComponentBase.processValidators(UIComponentBase.java:418)
        at javax.faces.component.UIComponentBase.processValidators(UIComponentBase.java:418)
        at javax.faces.component.UIComponentBase.processValidators(UIComponentBase.java:418)
        at javax.faces.component.UIForm.processValidators(UIForm.java:66)
        at javax.faces.component.UIComponentBase.processValidators(UIComponentBase.java:418)
        at javax.faces.component.UIComponentBase.processValidators(UIComponentBase.java:418)
        at javax.faces.component.UIViewRoot.processValidators(UIViewRoot.java:162)

I have checked and error was on file _SharedRendererUtils.java:118 
  int len = submittedValue.length;
Is ok to be null ? 

Cristi",MYFACES-130
"Hi,

I have created this example to show the problem with x:dataTable.
On submit the last value from last inner datatable is set to all other beans for other lines.

Please help.

Thanks


<f:view>
<h:form>
   <x:dataTable var=""lev1"" value=""#{test.list}"">
       <h:column>
           <h:panelGrid columns=""1"">
               <h:panelGrid columns=""2"">
                   <x:inputText value=""#{lev1.var1}"" />
                   <x:inputText value=""#{lev1.var2}"" />
               </h:panelGrid>
               <x:dataTable var=""lev2"" value=""#{lev1.tableB}"">
                   <h:column>
                       <h:panelGrid columns=""2"">
                       <x:outputText value=""Property A""/>
                       <x:inputText value=""#{lev2.propertyA}"" />
                       <x:outputText value=""Property B""/> <x:inputText value=""#{lev2.propertyB}"" />
                       <x:outputText value=""Property C""/> <x:inputText value=""#{lev2.propertyC}"" />
                       </h:panelGrid>
                   </h:column>
               </x:dataTable>
           </h:panelGrid>
       </h:column>
       <f:facet name=""footer"">
           <x:commandLink action=""noneok"" value=""Submit"">
           </x:commandLink>
       </f:facet>
   </x:dataTable>
</h:form>
</f:view>



/*
 * Created on Mar 11, 2005
 *
 * TODO To change the template for this generated file go to
 * Window - Preferences - Java - Code Style - Code Templates
 */
package ex2.test;

import java.util.ArrayList;

/**
 * @author grig
 *
 * TODO To change the template for this generated type comment go to
 * Window - Preferences - Java - Code Style - Code Templates
 */
public class SessionTable {
	private ArrayList list = new ArrayList();
	
	/**
	 * 
	 */
	public SessionTable() {
		super();
		list.add(new BeanTableA(""Int1""));
		list.add(new BeanTableA(""Int2""));
		
	}
	/**
	 * @return Returns the list.
	 */
	public ArrayList getList() {
		return list;
	}
	/**
	 * @param list The list to set.
	 */
	public void setList(ArrayList list) {
		this.list = list;
	}
}



/*
 * Created on Mar 11, 2005
 *
 * TODO To change the template for this generated file go to
 * Window - Preferences - Java - Code Style - Code Templates
 */
package ex2.test;

import java.io.Serializable;

/**
 * @author grig
 *
 * TODO To change the template for this generated type comment go to
 * Window - Preferences - Java - Code Style - Code Templates
 */
public class BeanTableB implements Serializable{
	private String propertyA = """";
	private String propertyB = """";
	private String propertyC = """";
		
	/**
	 * @param propertyA
	 * @param propertyB
	 * @param propertyC
	 */
	public BeanTableB(String propertyA, String propertyB, String propertyC) {
		super();
		this.propertyA = propertyA;
		this.propertyB = propertyB;
		this.propertyC = propertyC;
	}
	/**
	 * @return Returns the propertyA.
	 */
	public String getPropertyA() {
		return propertyA;
	}
	/**
	 * @param propertyA The propertyA to set.
	 */
	public void setPropertyA(String propertyA) {
		this.propertyA = propertyA;
	}
	/**
	 * @return Returns the propertyB.
	 */
	public String getPropertyB() {
		return propertyB;
	}
	/**
	 * @param propertyB The propertyB to set.
	 */
	public void setPropertyB(String propertyB) {
		this.propertyB = propertyB;
	}
	/**
	 * @return Returns the propertyC.
	 */
	public String getPropertyC() {
		return propertyC;
	}
	/**
	 * @param propertyC The propertyC to set.
	 */
	public void setPropertyC(String propertyC) {
		this.propertyC = propertyC;
	}
}



/*
 * Created on Mar 11, 2005
 *
 * TODO To change the template for this generated file go to
 * Window - Preferences - Java - Code Style - Code Templates
 */
package ex2.test;

import java.io.Serializable;
import java.util.ArrayList;

/**
 * @author grig
 *
 * TODO To change the template for this generated type comment go to
 * Window - Preferences - Java - Code Style - Code Templates
 */
public class BeanTableA implements Serializable {
	
	private ArrayList tableB = new ArrayList();
	private String var1 = """";
	private String var2 ="""";
	
	/**
	 * 
	 */
	public BeanTableA(String poz) {
		super();
		var1 = poz+"":var1"";
		var2 = poz+"":var2"";
		tableB.add(new BeanTableB(poz+"":B1L1C1"",poz+"":B1L1C2"",poz+"":B1L1C3""));
		tableB.add(new BeanTableB(poz+"":B1L2C1"",poz+"":B1L2C2"",poz+"":B1L2C3""));
	}
	/**
	 * @return Returns the table2.
	 */
	public ArrayList getTableB() {
		return tableB;
	}
	/**
	 * @param table2 The table2 to set.
	 */
	public void setTableB(ArrayList tableB) {
		this.tableB = tableB;
	}
	/**
	 * @return Returns the var1.
	 */
	public String getVar1() {
		return var1;
	}
	/**
	 * @param var1 The var1 to set.
	 */
	public void setVar1(String var1) {
		this.var1 = var1;
	}
	/**
	 * @return Returns the var2.
	 */
	public String getVar2() {
		return var2;
	}
	/**
	 * @param var2 The var2 to set.
	 */
	public void setVar2(String var2) {
		this.var2 = var2;
	}
}



<?xml version=""1.0""?>

<!DOCTYPE faces-config PUBLIC
  ""-//Sun Microsystems, Inc.//DTD JavaServer Faces Config 1.0//EN""
  ""http://java.sun.com/dtd/web-facesconfig_1_0.dtd"" >

<faces-config>
	
	<!-- managed beans of the simple hello world app -->
	<managed-bean>
		<managed-bean-name>test</managed-bean-name>
		<managed-bean-class>ex2.test.SessionTable</managed-bean-class>
		<managed-bean-scope>session</managed-bean-scope>
	</managed-bean>
	
	<!-- navigation rules for helloWorld.jsp -->
	<navigation-rule>
		<from-view-id>/helloWorld.jsp</from-view-id>
		<navigation-case>
			<from-outcome>success</from-outcome>
			<to-view-id>/page2.jsp</to-view-id>
		</navigation-case>
	</navigation-rule>
	
	<!-- navigation rules for page2.jsp -->
	<navigation-rule>
		<from-view-id>/page2.jsp</from-view-id>
		<navigation-case>
			<from-outcome>back</from-outcome>
			<to-view-id>/helloWorld.jsp</to-view-id>
		</navigation-case>
	</navigation-rule>
</faces-config>



<%@ taglib uri=""http://java.sun.com/jsf/html"" prefix=""h""%>
<%@ taglib uri=""http://java.sun.com/jsf/core"" prefix=""f""%>
<%@ taglib uri=""http://myfaces.apache.org/extensions"" prefix=""x""%>
<html>
<HEAD>
<TITLE>Test inner data table </TITLE>
</HEAD>
<BODY>
<f:view>
<h:form>
	<x:dataTable var=""lev1"" value=""#{test.list}"">
		<h:column>
			<h:panelGrid columns=""1"">
				<h:panelGrid columns=""2"">
					<x:inputText value=""#{lev1.var1}"" />
					<x:inputText value=""#{lev1.var2}"" />
				</h:panelGrid>
				<x:dataTable var=""lev2"" value=""#{lev1.tableB}"">
					<h:column>
						<h:panelGrid columns=""2"">
						<x:outputText value=""Property A""/>
						<x:inputText value=""#{lev2.propertyA}"" />
						<x:outputText value=""Property B""/>						
						<x:inputText value=""#{lev2.propertyB}"" />
						<x:outputText value=""Property C""/>						
						<x:inputText value=""#{lev2.propertyC}"" />
						</h:panelGrid>
					</h:column>
				</x:dataTable>
			</h:panelGrid>
		</h:column>
		<f:facet name=""footer"">
			<x:commandLink action=""noneok"" value=""Submit"">
			</x:commandLink>
		</f:facet>
	</x:dataTable>
</h:form>
</f:view>
</BODY>",MYFACES-129
"If a nested component want´s to get the aliased variable during save state phase it will not find it since the makeAlias and removeAlias where not called in AliasBean.processSaveState.

Here comes the patch:

Index: AliasBean.java
===================================================================
RCS file: /home/cvspublic/incubator-myfaces/src/components/org/apache/myfaces/custom/aliasbean/AliasBean.java,v
retrieving revision 1.9
diff -u -r1.9 AliasBean.java
--- AliasBean.java	10 Mar 2005 22:42:26 -0000	1.9
+++ AliasBean.java	11 Mar 2005 10:18:59 -0000
@@ -143,6 +143,7 @@
             throw new NullPointerException(""context"");
         if (isTransient())
             return null;
+        makeAlias(context);
         Map facetMap = null;
         for (Iterator it = getFacets().entrySet().iterator(); it.hasNext();) {
             Map.Entry entry = (Map.Entry) it.next();
@@ -164,6 +165,7 @@
                 }
             }
         }
+        removeAlias(context);
         return new Object[] { saveState(context), facetMap, childrenList };
     }
 
",MYFACES-128
"I suspect this is probably the same underlying cause as some of the other issues reported against datatable:

I have:

 <%-- address(es) --%>
            <f:subview id=""addresses"" rendered=""#{! empty ctrl.entitySc.addresses.currentList}"">
                <h:outputText value=""Addresses""/>
                <f:verbatim><br></f:verbatim>
                <h:dataTable var=""item"" value=""#{ctrl.entitySc.addresses.currentList}"">
                    <h:column>
                        <jsp:directive.include file=""/jspf/Entity2Address/addressesOnly.jspf""/>
                    </h:column>
                </h:dataTable>
            </f:subview>

Then later (via a jsp.include directive) I have:

<f:subview id=""statusLogs"" rendered=""#{! empty ctrl.ticketSc.statusLogList}"">
    <h:dataTable var=""item"" value=""#{ctrl.ticketSc.statusLogList}""
    >
        <h:column rendered=""#{item.externalVisible}"">
...

And the following error occurs:
javax.faces.el.PropertyNotFoundException: Bean: package.path.here.Entity2Address, property: externalVisible

Entity2Address is the class type of the FIRST datatable ""item""
The second datatable ""item"" is a different class type which does have an ""externalVisible"" property.

If I change all ""item"" to ""item2"" in the second datatable, all is well.

Also, specifically its on the rendered= attribute of the column tag where the problem is occurring. I have other instances of repeated datatables that seem to work fine, and the only difference seems to be that those other instances aren't doing conditional rendering.

The workaround is to use unique var names in each datatable, but this is inconvenient when trying to reuse (especially via jsp:include) jsp code.
",MYFACES-127
"I found another dependency on the Portlet API in NavigationHandlerImpl.  I am attaching the patch that removes the dependency.

Also, this patch contains the ""easy"" fix for http://issues.apache.org/jira/browse/MYFACES-123.

I realize that it is not best to include the fix from another issue, but both patches are very small.  Plus, MYFACES-123 should not actually be closed until Manfred has had a chance to review it.  This way, we at least get a fix to MYFACES-123 that gets us past a critical issue reported with portlet integration.",MYFACES-126
"This bug prevents nested components which need the aliased value in the decode phase to work right.

I´ve a fix for that:

Index: AliasBean.java
===================================================================
RCS file: /home/cvspublic/incubator-myfaces/src/components/org/apache/myfaces/custom/aliasbean/AliasBean.java,v
retrieving revision 1.7
diff -u -r1.7 AliasBean.java
--- AliasBean.java	27 Jan 2005 16:00:30 -0000	1.7
+++ AliasBean.java	10 Mar 2005 10:36:57 -0000
@@ -202,6 +202,13 @@
         super.processValidators(context);
         removeAlias(context);
     }
+    
+    public void processDecodes(FacesContext context) {
+      log.debug(""processDecodes"");
+      makeAlias(context);
+      super.processDecodes(context);
+      removeAlias(context);
+    }
 
     public void processUpdates(FacesContext context) {
         log.debug(""processUpdates"");
",MYFACES-125
"I am using the MyFaces library to create the pop up date picker, but it return the error message when i set the renderAsPopUp=""true"", but if i delete the renderAsPopUp=""true"" in inputCalender, the error won't trigger again.

However i have to set renderAsPopUp=""true"" in my inputCalender field, because i need use the calendar as a popup windows.

Below is my Code:
<%@ taglib uri=""http://myfaces.sourceforge.net/tld/myfaces_ext_0_9.tld"" prefix=""x""%>
.........
<x:inputCalendar renderAsPopup=""true"" />
........

Error Message :
ERROR [Engine] StandardWrapperValve[jsp]: Servlet.service() for servlet jsp threw exception
java.lang.IllegalStateException: Duplicate component ID 'functionList:_id12' found in view.
.........",MYFACES-124
"UIComponentTag now has code that calls ExternalContext.getRequest() and then casts the result to a ServletRequest.  In a portal environment, the underlying request is not an instance of ServletRequest, so you get a ClassCastException.

Here is the offending code from the setupResponseWriter() method in UIComponentTag:

ServletRequest request = (ServletRequest)facesContext.getExternalContext().getRequest();

_writer = renderKit.createResponseWriter(new _PageContextOutWriter(pageContext),
                                         request.getContentType(), //TODO: is this the correct content type?
                                         request.getCharacterEncoding());

I see two ways to fix this:
1) Just pass nulls to createResponseWriter instead of getting content type and char encoding from the request.  This is allowed under the JSF API, but I'm not sure if it is what you want.
2) Call PortletUtil.isRenderResponse(FacesContext) to find out if we are in a portlet environment.  Then use the Portlet API or Servlet API to get the content type and char encoding.  For portlet, you would need to use the RenderResponse like this:

if (PortletUtil.isRenderResponse(facesContext)) 
{
   RenderResponse response = (RenderResponse)facesContext.getExternalContext().getResponse();

   response.getContentType();
   response.getCharacterEncoding();
}

Overall, I think we should use #1 if it will work.",MYFACES-123
"According to:
http://java.sun.com/j2ee/javaserverfaces/1.1_01/docs/api/index.html

Application.createConverter(java.lang.Class) should return a null if no Converter class can be identified. ApplicationImpl is throwing FacesException.
",MYFACES-122
"MyFaces is incompatible with struts-faces. There are several threads about this issue:
- http://www.mail-archive.com/dev@struts.apache.org/msg01610.html
- http://www.mail-archive.com/myfaces-user@incubator.apache.org/msg00265.html

The crux of the problem lies in the fact that JspViewHandlerImpl.renderView
attempts to determine the servlet mapping of the current request. When
coming through struts-faces, the servletPath will be "".do"" (or whatever
struts 'action' is mapped to), and JspViewHandlerImpl.getServletMapping
will throw an exception if it does not match the servlet mapping for the
faces servlet.
",MYFACES-121
"The following code (based on an example from the book JavaServer Faces in action):

<%@ page contentType=""text/html; charset=UTF-8"" %>
<%@ taglib uri=""http://java.sun.com/jsf/html"" prefix=""h"" %>
<%@ taglib uri=""http://java.sun.com/jsf/core"" prefix=""f"" %>


<html>
	<head>
		<meta http-equiv=""Content-Type"" content=""text/html; charset=UTF-8""/>
		<title></title>
	</head>
	<body>		 
		<f:view>
		<p>
			<h:message id=""errors"" for=""helloInput"" style=""color:red"" />
		</p>
		<h:form id=""welcomeForm"">
			<h:outputText id=""welcomeOutput"" value=""Welcome to JavaServer Faces!""
				style=""font-family: Arial, sans-serif; font-size: 24; color: green"" />
			
			<p>
				<h:outputLabel for=""helloInput"">
					<h:outputText id=""helloInputLabel"" value=""Enter number of controls to display: "" />
				</h:outputLabel>
				<h:inputText id=""helloInput"" value=""#{helloBean.numControls}"" required=""true"">
					<f:validateLongRange minimum=""1"" maximum=""500"" />
				</h:inputText>
			</p>
			<p>
				<h:panelGrid id=""controlPanel"" binding=""#{helloBean.controlPanel}"" columns=""20"" border=""1"" cellspacing=""0"" />
			</p>
			<h:commandButton id=""redisplayCommand"" type=""submit"" value=""Redisplay"" 
				actionListener=""#{helloBean.addControls}"" />
			<h:commandButton id=""goodbyeCommand"" type=""submit"" value=""Goodbye""
				action=""#{helloBean.goodbye}"" immediate=""true"" />
		</h:form>		
		</f:view>
	</body>
</html>


causes an error:

javax.servlet.ServletException: Could not render Message. Unable to find component 'helloInput' (calling findComponent on component 'errors')
	javax.faces.webapp.FacesServlet.service(FacesServlet.java:125)

Commenting out the <h:message> tag or moving it after the <h:inputText> which defines the helloInput component works, though.

In the RI, the code above works flawlessly.
",MYFACES-120
"Tim Pyle has reported that the new tree is generating excessive debug messages.  I investigated and determined that the messages were coming from UIComponent base and were being generated because I was programatically creating a few JSF components and not explicitly assigning them an id.  Even though you can filter out these debug messages through proper log4j configuration, I think it is best to follow the recommended practice of generating a unique id using: context.getViewRoot().createUniqueId().  I will have the fix shortly.",MYFACES-119
"I have JSP Document with an f:view and an x:inputCalendar element. When the inputCalendar's RenderAsPopup attribute is set to true the page display fails with the message (myca is the id of the inputCalendar component):

500 Internal Server Error
javax.servlet.jsp.JspException: Duplicate component ID '_id0:myca' found in view.	at com.sun.faces.taglib.jsf_core.ViewTag.doAfterBody(ViewTag.java:171)	at _go_2e_jspx._jspService(go.jspx:24)	[/go.jspx]


Rendering with RenderAsPopup set to false is okay.",MYFACES-118
"The panelNavigation stlye class values are picked up, but using the styleClass attribute in the commanNavigation tag has no effect.

<x:panelNavigation 
    id=""license_nav""
    styleClass=""navigation""
    separatorClass=""navseparator""
    itemClass=""navitem""
    activeItemClass=""navitem_active""
    openItemClass=""navitem_open""> 
<x:commandNavigation 
    id=""customerNavID""
    action=""customer""
    actionListener=""#{navigateBean.customerSelected}""
    immediate=""true""
    value=""Customer""
    styleClass=""#{navigateBean.customerStyleClass}""/>    				 
<x:commandNavigation
   id=""infoNavID""
   action=""licenseinfo""
   actionListener=""#{navigateBean.infoSelected}""
   value=""License Info""
   styleClass=""#{navigateBean.customerStyleClass}""/> 
</x:panelNavigation> ",MYFACES-117
"In the reference implementation, UIInput has a protected method 'validateValue'. By default it does some basic checks including checking the 'required' property, calling the validators, etc. It can be overridden without messing with the basics of validation (getting the converted value, firing a valueChange event, etc). In myFaces, this has all been lumped into 'validate'. This means to tweak the validation of a custom component based on UIInput, you must re-implement all of 'validate', including all the basics. To make matters worse, 'getConvertedValue' is private in myFaces (it is protected in the RI), so you must re-implement all of that method as well (and call it something else).  

According to the 1.1 spec, 'validate' must ""Perform the algorithm described in the javadoc to validate the local value of this UIInput"", and the 1.1 javadoc. The javadoc in-turn mentions 'validateValue', etc, etc.

The following changes should be made:
1. Add a protected method 'validateValue', and change the 'validate'
implementation to use it
2. Change 'getConvertedValue' from private to protected
3. Remove 'validate' from UISelectMany and move needed functionality to 'validateValue'.",MYFACES-116
"This is an excerpt from myfaces-dev discussion between me and others.
I post it here so it does not get lost.
The objective is to use a x:dataScroller to browse throug a x:dataTable with a request scope backing bean.

---
I tried to set preserveDataModel to true to avoid the x:saveState declaration, but this would not work (in my case, at least).

I try to explain my situation to better understand the behaviour: I have a simple form with some search parameters, when the user submits it, the backing bean (request scope) is populated with results and I show and paginate through them using x:dataTable and x:dataScroller.

The only way I found to make it work well is:
- set preserveDataModel to false (or to not put the attribute completely)
- use a x:saveState on #{bean.results}

Whithout doning this, I can see only the first page of results and every other action (for example switch to page #2) the datas are lost and no more rows are displayed.
The problem also occurs if I *both* use saveState and preserveDataModel, maybe because the partially conflicts in their operation?

So, I deduce that preserveDataModel does not the very same thing of saveState, and maybe the idea of Sean (see MYFACES-98) is useful anyway?

Or maybe preserveDataModel has a bug (or a limitation) and should be fixed?

I would be interested to better understand this issue.

---

I don't think there's a bug in the implementation of preserveDataModel.
It's quite understandable that if you are using pageScroller together with the dataTable, you have to take care of saving the data yourself.
Of course, pageScroller could have its own preserveDataModel or something similar, but if it's used the dataTable shouldn't anymore be responsible of saving the data. Maybe pagescroller could generate a warning if preserveDataModel is set to true in the data table or handle ""remembering"" the data or some other better implementation, but I don't see even the current implementation as a bug.

---

> I don't understand well why preserveDataModel should not work 
> if used with pageScroller. PageScroller is just a ""normal"" 
> component providing pagination, what would differ if I 
> implement it in my program instead of using it?
> What I mean is: if the array is correctly restored for my 
> application, why it should not work for pageScroller?

Oh, the reason is simple. Since the preserveDataModel saves only what the dataTable displays, and pageScrollers divides the data into multiple pages, preserveDataModel happily remembers only the results displayed on the first page.
 
> Anyway, since they both are myfaces components, I expect them 
> to correctly work together so a warning or something similar 
> in the documentation would be welcome.

I 100% agree with you there. Even better, pageScroller could ""take over"", force the preserveDataModel in the datatable to reset to false and/or have its own preserveDataModel.",MYFACES-115
"I made what I think could be the smallest test, and that is the source
of the page:

<%@page contentType=""text/html""%>
<%@page pageEncoding=""UTF-8""%>
<%@ taglib uri=""http://java.sun.com/jsf/html"" prefix=""h"" %>
<%@ taglib uri=""http://java.sun.com/jsf/core"" prefix=""f"" %>
<%@ taglib uri=""http://myfaces.apache.org/extensions"" prefix=""x""%>
<html><body>
<f:view>
    <x:outputText value=""MyFaces says current user has role dummy"" visibleOnUserRole=""dummy""/><BR/>
    servlet says current user has role dummy: <%= request.isUserInRole(""dummy"") %><BR/>
</f:view>
</body></html>

And the output is:

MyFaces says current user has role dummy
servlet says current user has role dummy: false

So I think something is wrong in myfaces implementation since request.isUserInRole() return false but outputText is showing the text anyway.
I'm using tomcat 5.0.28 with JDBC realm and authentication it's running fine for the other aspects.

Also, would it be best to name the attribute ""renderedOnUserRole"" to be more consistent with standard JSF attributes?

Thanks,
Alex",MYFACES-114
"I tracked down a strange example where the dataScroller do not work. It ignores any click on the page navigation.

The main point is, that it is a child in an conditionally rendered <h:panelGroup.

If I change the panelGroup to be always rendered (<h:panelGroup rendered=""true"">) it works.

Attached you might find my bean and the simplest possible jsf page.

This needs to be added to the faces-config.xml

    <managed-bean>
        <managed-bean-name>MyBean</managed-bean-name>
        <managed-bean-class>MyBean</managed-bean-class>
        <managed-bean-scope>request</managed-bean-scope>
    </managed-bean>
",MYFACES-113
"In ""org\apache\myfaces\renderkit\html\HTML.java"" the attribute ""maxlength"" is included in ""INPUT_ATTRIBUTES"" as well as in ""INPUT_FILE_UPLOAD_ATTRIBUTES"" which leads to (harmless) duplication of this attribute in HTML output.
",MYFACES-112
"The current HtmlButtonRendererBase does not allow for easy additions to the rendered onclick attribute.  This refactoring makes this possible.

Now, the renderClearFormOnClick() is defined as:

protected StringBuffer buildOnClick(UIComponent uiComponent, FacesContext facesContext, ResponseWriter writer);

This way, subclasses may call the superclass implementation and add any additional javascript before onclick is rendered.",MYFACES-111
"If I have a page with for example two tabs and I submit while showing tab2, if there are validation errors on tab1 the page ""stays"" there and there is no feedback at all for the user that something wrong is happening on tab1 (and the submission had no effect).

Some options could be that the page switch automatically to tab1 to show error messages, or hilight tabs with errors so the user can understand he has to do some more work and submit again.

Alex",MYFACES-110
"It seems that the portlet.jar have to be included in the build/junit/build.xml.
",MYFACES-109
"Submitted value really shouldn't be stored in the state.  At a minimum it is confusing and results in extra bandwith with client-side state saving.  Heath points out that in most cases the value being ""stored"" will probably be null.  That being said, if the code is totally unecessary we ought to consider removing it.  I will leave this issue open for a while to make sure nobody has any issues with fixing it.  This will affect a lot of components so I want to be sure this is the right thing to do.  I will provide a patch eventually.",MYFACES-108
"The submit function of the following x:dataTable updates all the editable components with the current value of the selected row, instead of the actual value from the table row.



          <x:dataTable rows=""15"" width=""300"" 
                       value=""#{myEmployees.employees}"" 
                       sortColumn=""#{myEmployees.sort}""
                       sortAscending=""#{myEmployees.ascending}""
                       preserveDataModel=""true""
                       preserveSort=""true""
                       styleClass=""tablebg""
                       rowClasses=""evenRow, oddRow""
                       var=""row"">

            <h:column>
              <f:facet name=""header"">
                  <h:outputText value=""select"" />                
              </f:facet>
              <h:selectBooleanCheckbox value=""#{row.edit}"" onclick=""submit()""/>
            </h:column>

            <h:column>
              <f:facet name=""header"">
                <x:commandSortHeader columnName=""first_name"" arrow=""false"">
                  <h:outputText value=""first name"" />                
                </x:commandSortHeader>
              </f:facet>
              <h:inputText value=""#{row.first_name}"" rendered=""#{row.edit}"" />
              <h:outputText value=""#{row.first_name}"" rendered=""#{not(row.edit)}""/>
            </h:column>

            <h:column>
              <f:facet name=""header"">
                <x:commandSortHeader columnName=""last_name"" arrow=""false"">
                  <h:outputText value=""last name"" />                
                </x:commandSortHeader>
              </f:facet>
              <h:outputText value=""#{row.last_name}""/>
            </h:column>

            <h:column>
              <f:facet name=""header"">
                <x:commandSortHeader columnName=""email"" arrow=""false"">
                  <h:outputText value=""email"" />                
                </x:commandSortHeader>
              </f:facet>
              <h:outputText value=""#{row.email}""/>
            </h:column>

          </x:dataTable>   ",MYFACES-107
"I have attached a quick how-to for the Portlet code.  It is very bare bones, but someone who understands both JSF and Portlets should be able to follow it and create a MyFaces Portlet.",MYFACES-106
"A change introduced in the patch for MYFACES-104 has caused the attributes for the <x:div> component to be written outside the start element. For example...

<div>class=""myclass""Text Inside My Div</div>

I've written a patch and will upload.

Norm ",MYFACES-105
One of our users has requested this.  I think its a good idea and I will add it shortly if I do not hear any objections.,MYFACES-104
"as reported by Adrien Foures on the users list:

Using nodesWereRemoved or nodesWereInserted causes an exception:

java.lang.IndexOutOfBoundsException: Index: 1, Size: 0
   at java.util.ArrayList.RangeCheck(ArrayList.java:507)
   at java.util.ArrayList.get(ArrayList.java:324)
   at org.apache.myfaces.custom.tree.DefaultMutableTreeNode.getChildAt(DefaultMutableTreeNode.java:154)
   at org.apache.myfaces.custom.tree.model.DefaultTreeModel.getChild(DefaultTreeModel.java:81)
   at org.apache.myfaces.custom.tree.HtmlTreeNode.translatePath(HtmlTreeNode.java:537)
   at org.apache.myfaces.custom.tree.HtmlTree.selectionChanged(HtmlTree.java:586)
   at org.apache.myfaces.custom.tree.HtmlTreeNode.setSelected(HtmlTreeNode.java:412)
   at org.apache.myfaces.custom.tree.HtmlTreeNode.setExpanded(HtmlTreeNode.java:331)
   at org.apache.myfaces.custom.tree.HtmlTree.collapsePath(HtmlTree.java:536)
   at org.apache.myfaces.custom.tree.HtmlTree.treeStructureChanged(HtmlTree.java:817)
   at org.apache.myfaces.custom.tree.HtmlTree$Event.process(HtmlTree.java:1044)
   at org.apache.myfaces.custom.tree.HtmlTree.processModelEvents(HtmlTree.java:879)
   at org.apache.myfaces.custom.tree.HtmlTree.encodeBegin(HtmlTree.java:721)
   at javax.faces.webapp.UIComponentTag.encodeBegin(UIComponentTag.java:591)
   at javax.faces.webapp.UIComponentTag.doEndTag(UIComponentTag.java:543)
   at org.apache.jsp.page.private_.tree1_jsp._jspx_meth_x_tree_0(tree1_jsp.java:430)
   at org.apache.jsp.page.private_.tree1_jsp._jspx_meth_f_view_0(tree1_jsp.java:181)
   at org.apache.jsp.page.private_.tree1_jsp._jspService(tree1_jsp.java:138)
   at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:94)
   at javax.servlet.http.HttpServlet.service(HttpServlet.java:802)
   at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:324)
   at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:292)
   at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:236)
   at javax.servlet.http.HttpServlet.service(HttpServlet.java:802)
   at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:237)
   at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:157)
   at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:704)
   at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:474)
   at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:409)
   at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
   at com.sun.faces.context.ExternalContextImpl.dispatch(ExternalContextImpl.java:322)
   at com.sun.faces.application.ViewHandlerImpl.renderView(ViewHandlerImpl.java:130)
   at com.sun.faces.lifecycle.RenderResponsePhase.execute(RenderResponsePhase.java:87)
   at com.sun.faces.lifecycle.LifecycleImpl.phase(LifecycleImpl.java:200)
   at com.sun.faces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:117)
   at javax.faces.webapp.FacesServlet.service(FacesServlet.java:198)
   at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:237)
   at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:157)
   at dosmed.security.LoginFilter.doFilter(LoginFilter.java:60)
   at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:186)
   at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:157)
   at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:214)
   at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:104)
   at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:520)
   at org.apache.catalina.core.StandardContextValve.invokeInternal(StandardContextValve.java:198)
   at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:152)
   at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:104)
   at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:520)
   at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:137)
   at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:104)
   at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:118)
   at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:102)
   at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:520)
   at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
   at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:104)
   at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:520)
   at org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:929)
   at org.apache.coyote.tomcat5.CoyoteAdapter.service(CoyoteAdapter.java:160)
   at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:799)
   at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.processConnection(Http11Protocol.java:705)
   at org.apache.tomcat.util.net.TcpWorkerThread.runIt(PoolTcpEndpoint.java:577)
   at org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:683)
   at java.lang.Thread.run(Thread.java:534)
",MYFACES-103
"When the value property is bound to a request scoped managed bean field, e.g.:

<h:selectOneMenu 
  id=""typeName"" 
  value=""#{typeListPage.typeName}"" 
  valueChangeListener=""#{typeListPage.onChangeTypeName}""
>
	<f:selectItems value=""#{typeNameSelectItems}"" />
<h:selectOneMenu>

The event is fired in every post to the server, even if no change occurred.

The event is fired during the validation phase. This is because the framework compares the posted value against the value in the bean, not the saved value of the selectOneMenu ui control.

In order to determine if a value change occured, the value posted in the request (which is never null) is compared agains the current value of the bean property (due to the binding #{typeListPage.typeName}). This propety which is not yet initialized (the bean is in request scope bean - thus typeName is always null before the update model phase), and the value change event fires.

The problem is simple: change event fires when no event occures. ",MYFACES-102
"The Portlet Integration Framework created a dependency on the portlet jar.  Shortly after the code was integrated, someone removed the dependency by catching and ignoring the NoClassDefFoundError that results if you don't have the portlet jar in your classpath.

While it is good that we remove the dependency for JSF applications that are not running in a portal, the current fix is very inefficient because it causes multiple exceptions to be thrown, caught, and ignored with virtually every request.

Example of current fix:

try{
   if (externalContext.getRequest() instanceof PortletRequest) {
        externalContext.dispatch(viewId);
        return;
   }
}catch(NoClassDefFoundError exception){
    // Portlet api jar isn't in the classpath.
}

What is needed is a better way to determine if the request is coming from a portlet.  The solution must not rely on the Portlet API and also must never generate exceptions.

My proposed soultion is to put a flag in the portlet session.  The flag will be set in the MyFacesGenericPortlet.  So the new code will look something like this instead:

if (externalContext.getSessionMap().get(MyFacesGenericPortlet.PORTLET_REQUEST_FLAG) != null)
   if (externalContext.getRequest() instanceof PortletRequest) {
        externalContext.dispatch(viewId);
        return;
   }
}

What would be even better is a solution that factors out the if statements and solves the problem using polymorphism.  However, that would incur a major refactoring of many components.  At some point this major refactoring should be done so that MyFaces could support requests that come from a third source (Servlet, Portlet, and something else).  But I do not recommend the refactoring at this time.  For now, the instances where MyFaces needs to check for a portlet request or response is confined to two source files.  It is manageable.

I'll leave this out for comment for a few days before submitting a patch.",MYFACES-101
"When adding an f:param to an x:commandNavigation tag with a declared rendered attribute, the parameter is not passed in the command.

Example:
<x:commandNavigation id=""my_id""
                     value=""my_text""
                     action=""my_action""
                     rendered=""#{a_boolean_expression}"">
 <f:param name=""my_param_id"" value=""#{myBean.my_non_null_attribute}"" />
</x:commandNavigation>

Does not place a ""my_param_id"" parameter in the request when the user clicks the menu link.
Removinging the rendered attribute out however works fine.

Work around, use jsp-scriplets to place ""if"" statements around the commandNavigation instead of using the rendered attribute, this however causes a lot of warnings in the log.

Thanks
Mads",MYFACES-100
"Version 1.159 of this file was checked in with a <br/> tag in the <description> of aliasBean.  User is getting a parse exception:

OracleJSP: oracle.jsp.parse.JspParseException: Line # 2, <%@ taglib
uri=""http://java.sun.com/jsf/html"" prefix=""h""%>
Error: oracle.xml.parser.v2.XMLParseException ( /jsp/common/Header.jsp ):
line #:17 column #:48 : FIXED type Attribute value not equal to the
default value 'http://java.sun.com/xml/ns/j2ee'.
line #:5344 column #:75 : Invalid element 'br' in content of
'description', expected elements '[PCDATA]'.
line #:5344 column #:75 : Element 'br' used but not declared.
line #:5345 column #:124 : Invalid element 'br' in content of
'description', expected elements '[PCDATA]'.
line #:5345 column #:124 : Element 'br' used but not declared.
line #:5366 column #:60 : Invalid element 'br' in content of
'description', expected elements '[PCDATA]'.
line #:5366 column #:60 : Element 'br' used but not declared.
line #:5367 column #:37 : Invalid element 'code' in content of
'description', expected elements '[PCDATA]'.
line #:5367 column #:37 : Element 'code' used but not declared.
line #:5367 column #:99 : Invalid element 'code' in content of
'description', expected elements '[PCDATA]'.
line #:5367 column #:99 : Element 'code' used but not declared.
First of all, it didn't look like there was a binary dowload available

Thanks to Norm Deane for reporting this.
",MYFACES-99
"I'm proposing a new attribute (saveModel) for x:dataTable that can be true/false (default is false).  

When ""true"", the bean that is associated with the ""value"" attribute would be stored in the component tree.  I'm going to look to the <x:saveState> tag for guidance on this, but the idea would be that you do not have to use <x:saveState> tag for this purpose once the feature is implemented.

The saved value of the data model would be restored during the Restore View phase.  Among other things, this would allow actions to be applied to the component with the row index corresponding to the one the user clicked even if the data store used has since changed.  Just before the Render Response phase, the component could use the binding expression combined with the bean management facility to create an updated version of the data model which is then saved to the client state and rendered.  

This way you have the best of both worlds.  You can have value change and action events based on a comparisson of the same data that was used for the original response and the user will still see the latest data when the response is encoded.",MYFACES-98
IllegalArgumentException is throwed if value of the x:calendar is empty.,MYFACES-97
The attachement is patch file.,MYFACES-96
"Hi,

jscookMenu could not display Japanese character correctly. Following patch resolves this problem.

Index: src/components/org/apache/myfaces/custom/navmenu/jscookmenu/HtmlJSCookMenuRenderer.java
===================================================================
RCS file: /home/cvspublic/incubator-myfaces/src/components/org/apache/myfaces/custom/navmenu/jscookmenu/HtmlJSCookMenuRenderer.java,v
retrieving revision 1.12
diff -u -r1.12 HtmlJSCookMenuRenderer.java
--- src/components/org/apache/myfaces/custom/navmenu/jscookmenu/HtmlJSCookMenuRenderer.java	27 Dec 2004 04:11:11 -0000	1.12
+++ src/components/org/apache/myfaces/custom/navmenu/jscookmenu/HtmlJSCookMenuRenderer.java	29 Jan 2005 08:45:57 -0000
@@ -24,6 +24,7 @@
 import org.apache.myfaces.renderkit.html.util.DummyFormResponseWriter;
 import org.apache.myfaces.renderkit.html.util.DummyFormUtils;
 import org.apache.myfaces.renderkit.html.util.JavascriptUtils;
+import org.apache.myfaces.renderkit.html.util.HTMLEncoder;
 
 import javax.faces.component.UIComponent;
 import javax.faces.context.FacesContext;
@@ -170,7 +171,7 @@
                 writer.write(""''"");
             }
             writer.write("", '"");
-            writer.write(JavascriptUtils.encodeString(item.getLabel()));
+	    writer.write(HTMLEncoder.encode(JavascriptUtils.encodeString(item.getLabel())));
             writer.write(""', "");
             if (item.getAction() != null && ! item.isDisabled())
             {

Above patch requires HTMLEncoder. Current HTMLEncoder is in src/myfaces. JSCookMenu can refer HTMLEncoder because it is in src/components. I suggest move HTMLEncoding into src/share. HTMLEncoding has common function and move to src/share seems reasoable.

regards,

Takashi Okamoto

 ",MYFACES-95
"I add a new Encoder class o.a.m.r.h.u.UnicodeEncoder for non basic latin characters by o.a.m.r.h.u.HTMLEncoder , and modify o.a.mr.h.HtmlResponseWriterImpl .",MYFACES-94
"I have found that in files:
/build/examples-webapp/build.xml
/build/tiles-webapp/build.xml
/build/wap-webapp/build.xml

is wrong property ""tomcat.context.path"". 

Right pathes are (in the same order):
/myfaces-examples
/myfaces-tiles-examples
/myfaces-wap-examples

And the second problem is that in files:
/tiles-webapp/build.xml
/build/wap-webapp/build.xml

is missing &tomcat-build; entity for *import* Tomcat targets.",MYFACES-93
"It would be nice if the listing of the various tags in the ""Tag Summary"" were in alphabetical order.  Also, once you click on a tag, it would be good if the attributes were sorted in alphabetical order.",MYFACES-92
"It would be nice to have a standalone radio button that I could add per row on a data table.  One requirement would be that the name that is generated would need to be the same for each radio button, so that they can work together.  If I try to use a selectOneRadioButton component, the name generated contains the row number in it which breaks the readi button.  This new tag should also only generate an html:input element instead of an entire table as is generated by selectOneRadioButton.",MYFACES-91
"Hi,

I've updated the examples translations for spanish and catalan. I will also attach a patch for the class OptionsForm in order to add these two languages in the language list of the examples.
I don't know if I should post the new translation updates here...

Regards,

Bruno",MYFACES-90
"HtmlRendererUtils.renderSelectOptions(FacesContext, UIComponent, Converter , Set , boolean, List) writes the disabled attribute for individual options after writing the label text.  This results in an exception being thrown.  The disabled attribute just needs to be written before the label text is written.

Attached is a fix.",MYFACES-89
"According to Sun's TLD, the <h:selectOneListbox /> tag should default the rendered HTML <select> tag's size attribute to the number of SelectItem children.  Currently, however, if the size attribute is not specified on the tag, HtmlSelectOneListbox returns Integer.MIN_VALUE as a default.  This causes problems in the renderer, as it only changes the size attribute to the number of SelectItem children if getSize() returns 0.

Thus, the DEFAULT_SIZE constant on HtmlSelectOneListbox should be set to 0.

Attached is a fix.",MYFACES-88
"The JSF specification includes provisions for a JSF application to run inside a Portlet.  As this is currently missing from MyFaces, I have written code to add this feature to the org.apache.myfaces source tree.

There are two new pacakges:
org.apache.myfaces.portlet
org.apache.myfaces.context.portlet

Plus there are several changes to the existing code base.  Most of them are simple changes to account for the differences between a PortletRequest and a regular ServletRequest.  While the JSF spec does a pretty good job of hiding these differences with the ExternalContext, they could not hide it completely.  Plus, there are a few places that MyFaces code failed to use the ExternalContext properly.  All of this has been fixed in the modified source.  Here is the result of a CVS update to HEAD for the org.apache.myfaces source tree:

C:\projects\incubator-myfaces\src\myfaces>cvs update
? org/apache/myfaces/portlet
? org/apache/myfaces/context/ReleaseableExternalContext.java
? org/apache/myfaces/context/portlet
cvs server: Updating .
cvs server: Updating javax
cvs server: Updating javax/faces
cvs server: Updating org
cvs server: Updating org/apache
cvs server: Updating org/apache/myfaces
cvs server: Updating org/apache/myfaces/application
M org/apache/myfaces/application/NavigationHandlerImpl.java
cvs server: Updating org/apache/myfaces/application/cbp
cvs server: Updating org/apache/myfaces/application/jsp
M org/apache/myfaces/application/jsp/JspViewHandlerImpl.java
cvs server: Updating org/apache/myfaces/cbp
cvs server: Updating org/apache/myfaces/cbp/designer
cvs server: Updating org/apache/myfaces/component
cvs server: Updating org/apache/myfaces/component/ext
cvs server: Updating org/apache/myfaces/component/html
cvs server: Updating org/apache/myfaces/config
M org/apache/myfaces/config/FacesConfigurator.java
cvs server: Updating org/apache/myfaces/config/configure
cvs server: Updating org/apache/myfaces/config/element
cvs server: Updating org/apache/myfaces/config/impl
cvs server: Updating org/apache/myfaces/config/impl/digester
cvs server: Updating org/apache/myfaces/config/impl/digester/elements
cvs server: Updating org/apache/myfaces/confignew
cvs server: Updating org/apache/myfaces/confignew/element
cvs server: Updating org/apache/myfaces/confignew/impl
cvs server: Updating org/apache/myfaces/confignew/impl/digester
cvs server: Updating org/apache/myfaces/confignew/impl/digester/elements
cvs server: Updating org/apache/myfaces/confignew/impl/dom
cvs server: Updating org/apache/myfaces/context
M org/apache/myfaces/context/FacesContextFactoryImpl.java
cvs server: Updating org/apache/myfaces/context/maphelp
cvs server: Updating org/apache/myfaces/context/resource
cvs server: Updating org/apache/myfaces/context/servlet
M org/apache/myfaces/context/servlet/ServletExternalContextImpl.java
M org/apache/myfaces/context/servlet/ServletFacesContextImpl.java
cvs server: Updating org/apache/myfaces/convert
cvs server: Updating org/apache/myfaces/convert/impl
cvs server: Updating org/apache/myfaces/convert/legacy
cvs server: Updating org/apache/myfaces/convert/map
cvs server: Updating org/apache/myfaces/el
cvs server: Updating org/apache/myfaces/event
cvs server: Updating org/apache/myfaces/exception
cvs server: Updating org/apache/myfaces/lifecycle
M org/apache/myfaces/lifecycle/LifecycleImpl.java
cvs server: Updating org/apache/myfaces/model
cvs server: Updating org/apache/myfaces/renderkit
cvs server: Updating org/apache/myfaces/renderkit/attr
cvs server: Updating org/apache/myfaces/renderkit/attr/ext
cvs server: Updating org/apache/myfaces/renderkit/callback
cvs server: Updating org/apache/myfaces/renderkit/config
cvs server: Updating org/apache/myfaces/renderkit/html
cvs server: Updating org/apache/myfaces/renderkit/html/attr
cvs server: Updating org/apache/myfaces/renderkit/html/ext
cvs server: Updating org/apache/myfaces/renderkit/html/jsp_parser
cvs server: Updating org/apache/myfaces/renderkit/html/jsp_parser/jasper
cvs server: Updating org/apache/myfaces/renderkit/html/jsp_parser/jasper/compile
r
cvs server: Updating org/apache/myfaces/renderkit/html/jsp_parser/jasper/core
cvs server: Updating org/apache/myfaces/renderkit/html/jsp_parser/jasper/logging

cvs server: Updating org/apache/myfaces/renderkit/html/jsp_parser/jasper/parser
cvs server: Updating org/apache/myfaces/renderkit/html/jsp_parser/jasper/resourc
es
cvs server: Updating org/apache/myfaces/renderkit/html/jsp_parser/jasper/runtime

cvs server: Updating org/apache/myfaces/renderkit/html/jsp_parser/jasper/servlet

cvs server: Updating org/apache/myfaces/renderkit/html/jsp_parser/jasper/util
cvs server: Updating org/apache/myfaces/renderkit/html/jspinfo
cvs server: Updating org/apache/myfaces/renderkit/html/jspinfo/jasper
cvs server: Updating org/apache/myfaces/renderkit/html/jspinfo/jasper/compiler
cvs server: Updating org/apache/myfaces/renderkit/html/jspinfo/jasper/core
cvs server: Updating org/apache/myfaces/renderkit/html/jspinfo/jasper/logging
cvs server: Updating org/apache/myfaces/renderkit/html/jspinfo/jasper/parser
cvs server: Updating org/apache/myfaces/renderkit/html/jspinfo/jasper/resources
cvs server: Updating org/apache/myfaces/renderkit/html/jspinfo/jasper/runtime
cvs server: Updating org/apache/myfaces/renderkit/html/jspinfo/jasper/util
cvs server: Updating org/apache/myfaces/renderkit/html/legacy
cvs server: Updating org/apache/myfaces/renderkit/html/state
cvs server: Updating org/apache/myfaces/renderkit/html/state/client
cvs server: Updating org/apache/myfaces/renderkit/html/state/server
cvs server: Updating org/apache/myfaces/renderkit/html/util
cvs server: Updating org/apache/myfaces/resource
cvs server: Updating org/apache/myfaces/strict
cvs server: Updating org/apache/myfaces/strict/component
cvs server: Updating org/apache/myfaces/strict/renderkit
cvs server: Updating org/apache/myfaces/strict/renderkit/html
cvs server: Updating org/apache/myfaces/strict/taglib
cvs server: Updating org/apache/myfaces/taglib
cvs server: Updating org/apache/myfaces/taglib/common
cvs server: Updating org/apache/myfaces/taglib/core
cvs server: Updating org/apache/myfaces/taglib/ext
cvs server: Updating org/apache/myfaces/taglib/html
cvs server: Updating org/apache/myfaces/taglib/html/package
cvs server: Updating org/apache/myfaces/taglib/html/package/html
cvs server: Updating org/apache/myfaces/taglib/if
cvs server: Updating org/apache/myfaces/taglib/legacy
cvs server: Updating org/apache/myfaces/tree
cvs server: Updating org/apache/myfaces/util
cvs server: Updating org/apache/myfaces/util/bean
cvs server: Updating org/apache/myfaces/util/bundle
cvs server: Updating org/apache/myfaces/util/commons
cvs server: Updating org/apache/myfaces/util/logging
cvs server: Updating org/apache/myfaces/util/xml
cvs server: Updating org/apache/myfaces/util/zip
cvs server: Updating org/apache/myfaces/webapp
cvs server: Updating org/apache/myfaces/webapp/filter
cvs server: Updating org/apache/myfaces/webapp/servletmapping
cvs server: Updating org/apache/myfaces/webapp/webxml

Changes to build.xml and build.default.properties were needed to add the portlet.jar to the build. 
M build.default.properties
M build.xml

The portlet-api-1.0.jar is added to the lib directory.

This integration code was tested on the Portlet reference implementation known as Jakarta Pluto.  I can help with configuration of that for whoever is going to be working on this.

I am attaching everything that is needed to build the code.  When someone is ready, I will help with documentation and testing with Pluto.

",MYFACES-86
"I noticed that some of the extended attributes have crept into the standard HTML taglibs.  For instance, you can set a property of transient on <h:form>.  These should be limited to the extended HTML tags only.  I believe they are just ignored in the standard case but they should not be in the TLD.  IDE tools like JBuilder also show these as available attributes which is incorrect.

So far I've identified transient and the new forceId attribute.  forceId is there because I was basically following the pattern of transient.  Both are defined in the 'ui_component_attributes.xml' file which I believe applies to all of the HTML tags (both standard and extended.)  This should be changed so that they only apply to the correct extended tags that actually support the properties.  (There is already a comment in that file questioning the appropriateness of using the attribute here so apparently at least someone else already agrees with me on this.)

I will try to work on a patch for forceId shortly.  The person responsible for the transient property might want to patch that one.",MYFACES-85
"We should add a <x:selectBooleanCheckbox> component.  There are currently extended versions of most of the html components but this one is missing.

If we add this one, we can include support for the new forceId attribute.  I'll provide the patch shortly.",MYFACES-84
"I refactored the logic to start a new row, render a single body cell, and end a row into 3 different methods:

renderRowStart(FacesContext, ResponseWriter, UIData, rowStyleClass) throws IOException
renderRowEnd(FacesContext, ResponseWriter, UIData) throws IOException

renderColumnBody(FacesContext, ResponseWriter, UIData, UIColumn, columnStyleClass) throws IOException

These are just hooks for developers that want to extend the HtmlTableRendererBase.  It shouldn't have any impact on the behavior.

Additionally, I javadoc-ed the class.  Please check my documentation to make sure it is correct.",MYFACES-83
"Hello,
thanks for creating MyFaces, I'm beginning to like it very much :)

I have a problem working on tabs with the x:panelTabbedPane : the status of some elements is not correctly saved and restored when switching tabs.

I report a snip of a mail from Sylvain Vieujot from the -user mailing list, I think it can be useful for who will try to solve the problem.
---------
[...]
But we still have an issues for UISelectItems.
If someone could look at line 140 of the HtmlCheckBoxRendererBase, and line 463 of the RendererUtils, it would be great, as I think they too are using the component's value, instead of checking for a submitted value first.
I can't work on this right now as I'll be away from my computer for a week, and I don't want to take the risk of breaking it before leaving.

An easy way to test test the problem is the same as for any component : Put the component in an tab panel, with at least 2 tabs. Change the component value, and then switch to another tab.
This should set the component's submitted value, but not change the backing bean value.
When you switch back to initial tab, you should have the changed value.
If the user changes have been lost, then the component's renderer has a bug. It always renders the backing bean value instead of looking first for a submitted value.
[...]
---------

I've modified the tabbedPane.jsp page from the example of the distribution to show the bad behaviohur. To check the problem:
- fill in the controls on tab1
- switch to tab3, fill the other controls
- switch back to tab1 and you'll notice that the date lost it's value
- switch back to tab3 and also the selectboxes and radiobuttons are reset

If I find a way to attach a file to this issue I'll upload the new tabbedPane.jsp, otherwise I'll attach it on a message on the mailing list.

Thanks,
Alex",MYFACES-82
"This inner class is not serializable in the 1.1 specification and the fact that it is in the MyFaces implementation is a violation of the specification.

It appears that this class was made serializable in order to implement server-side state saving.  Not only is this a violation of the spec, but it does not even work properly.  If the servlet container attempts to serialize the session it throws an exception.  This is because the SerializedView class is not serializable even though it claims to implement this interface.  Because it is an inner class, it contains an implicit reference to the parent class (in this case, this reference ends up being JspStateManagerImpl.)  Serialization fails because this reference cannot be serialized (nor should it be.)

I have found another mechanism for handling server side state saving that does not violate the spec.  I've included a patch that will fix this problem.

The solution is to include a private inner class called _SerializedView that can implement serializable without violating the spec.  It has the same properties as the SerializedView class and according to the spec, these properties will be serializable (b/c they are ultimately generated from classes that implement StateHolder.)  I store this class in the session instead and everything works fine.  

I believe the spec should change so that the SerializedView class is its own standalone class that does implement serializable.  That way, implementations can use this class for both the client-side and server-side state saving.  That was what was being attempted in the MyFaces implementation but this approach can't work b/c of the missing serializable interface on SerializedView (and the implicit reference to the parent class.)  If the spec were changed, we could get rid of this extra _SerializedView class that we are introducing and use the proposed new class instead.",MYFACES-81
"I am unable to compare whether or not two components (in my case HtmlInputText) are equal because none of the classes in the hierachy implement the equals() method.

It would probably be good practice to implement this in UIComponentBase at a minimum (along with appropriate unit tests.)

Good practice dictates that if we implement equals() then we should also implement hashCode() and follow the ""general contract"" for both (see Joshua Bloch's excellent resource, Effective Java).

We might want to consider using the EqualsBuilder and HashcodeBuilder classes of Commons Lang.  They will do some (not all) of the work for you.  This would introduce a new dependency however.

Any thoughts on all of this?",MYFACES-80
"Use tag with escape=""false"" (for example <h:outputText escape=""false"" ...>),i18n don't work properly with Simplified-Chinese. It work properly without escape=""false"" or with escape=""true"" , and it work properly with myfaces-1.0.7beta. ",MYFACES-79
The HtmlCheckboxRenderer does not check the disabled property of a SelectItem when rendering it.  The Renderer only supports disabling of the whole component.  Included is a fix.,MYFACES-78
A NullPointerExcepton is thrown when a popup component is created without styleClass. A null check should be included in org.apache.myfaces.custom.popup.HtmlPopupRenderer (118) or make this attribute 'required',MYFACES-77
The tag is using the j.f.c.h.OutputText instead of o.a.m.c.h.e.OutputText.,MYFACES-76
If you use server-side state saving you will get exceptions when stopping and starting the server because JspStateHandlerImpl is not Serializable.,MYFACES-75
"According to Ed Burns' email and discrepancy in features between MyFaces and the Sun RI, I added a check to the ValueBinding on the component's attributesMap.

Now, the attributesMap get(Object) does the following:
1. Checks for a property of the given name.
  1.1 returns the property's value if not null
  1.2. Checks for a ValueBinding of the given name.
    1.2.1 returns the ValueBinding's value or null if there is no ValueBinding
2. Performs the normal Map.get(Object) operation.",MYFACES-74
"I'm using this simple code:

      <h:form id=""form1"" name=""formSomma"">

        <h:outputText value=""Insert date""/>
        <x:inputDate id=""date1"" value=""#{b1.mydate}"" popupCalendar=""true""/>
        <h:message for=""date1""/>

      </h:form>

if b1.mydate is null or simply if I leave empty the year field, the popup calendar is rendered badly, with ""NaN"" in year field and other places, making it unuseable.",MYFACES-73
"If an HtmlSelectOneRadio does not initially have a value, none of its options are initially rendered as selected.  If none are selected and a form submit occurs IE 6 (possibly others browsers?) does not submit any name/value pair for that input.  In the renderer, this is just ignored, and no error is thrown.  It would probably be best to put logic in the renderer to account for this case.

I can do this, but I wanted opinions on the issue before I wrote the fix.",MYFACES-72
"Good Day,

First, thanks for MyFaces, which in some significant respects is actually easier to work with than Sun's RI :-)

However unless I'm doing something wrong, MyFaces doesn't seem to support dynamic content inclusion via the <jsp:include> and JSTL's <c:import> custom JSP actions.  Please can you confirm whether this is a known bug?  I'm interested in bug-fix timescales, too.

I'm frantically struggling to get my own Open Source workflow project to its first release (Open Business Engine: http://sourceforge.net/projects/obe).  I'm trying to include content based on a backing bean property.  Here's the code that doesn't work; the included JSP simply produces no output:

auditEntry.jsp:

<%@ page session=""true""%>
<%@ page contentType=""text/html;charset=ISO-8859-1"" language=""java"" %>
<%@ taglib uri='http://java.sun.com/jsp/jstl/core' prefix='c' %>
<%@ taglib uri=""http://java.sun.com/jsf/core"" prefix=""f"" %>
<%@ taglib uri=""http://java.sun.com/jsf/html"" prefix=""h"" %>
<f:view>
<html>
    <%@include file=""/include/head.inc"" %>
    <body>
        <%@include file=""/include/pageHeader.jsp""%>
        <f:subview id=""include0"">
            <!-- I'm trying to do this dynamically: -->
            <!--<c:import url=""include/audit/#{worklist.auditEntryClass}.jsp"" />-->
            <!-- But even the static version doesn't work: -->
            <c:import url=""include/audit/WMAAuditEntry.jsp"" />
        </f:subview>
        <%@include file=""/include/pageFooter.jsp""%>
    </body>
</html>
</f:view>

include/audit/WMAAuditEntry.jsp:
    <h:outputLabel for=""timestamp"" value=""#{strings.timestamp}"" />
    <h:outputText id=""timestamp"" value=""#{worklist.auditEntry.timestamp}"" />
    <h:outputLabel for=""processDefinitionId"" value=""#{strings.processDefinitionId}"" />
    <h:commandLink id=""processDefinitionId"" action=""#{worklist.showProcessDefinition}"" 
        value=""#{worklist.auditEntry.processDefinitionId}"" />
    <h:outputLabel for=""processInstanceId"" value=""#{strings.processInstanceId}"" />
    <h:commandLink id=""processInstanceId"" action=""#{worklist.showProcessInstance}"" 
        value=""#{worklist.auditEntry.currentProcessInstanceId}"" />
etc...",MYFACES-71
"(See original email chain from myfaces mailing list --> http://www.mail-archive.com/myfaces-user%40incubator.apache.org/msg00662.html)

It would be nice if the MyFaces extended version of the basic JSF tags supported a ""directId"" attribute.  This attribute would allow the JSP programmer to directly specify the id attribute of the HTML element (instead of relying on the one generated by the faces component using the FacesContext.)

This would allow for the standard use of getElementById() in client-side javascript functions.  Currently available workarounds are too cumbersome.

I envision this would require (at a minimum) changing some of the HTML rendering code (both the encode() and decode() logic.)  As Craig has pointed out, there will also be challenges in implementing this for components that render more than one element from the same component (such as UIData).",MYFACES-70
"When attempting to decode the request parameters, it seems as though all of the Html-based renderers use HtmlRendererUtils to determine the clientId of the component.  That id is then used to see if there is a submitted value that is intended for the component.

It would be nice if the clientId could be determined through HtmlRendererUtils during the *encode* process as well.  Currently it is being done through the individual renderer classes. An example would be HtmlTextRendererBase which gets the clientId directly from the component.

It would be nice if we could rely on a common static method in HtmlRenderUtils to determine the client id attribute (the HTML attribute, not the clientId used by the component tree).  This change would make it easier for future ehancements that would allow for a user specified value for this attribute.",MYFACES-69
"A CollapsiblePanel component. Clicking on the title link expands (shows) its children when collapsed, and collapses (hides) when expanded.",MYFACES-68
"This is a bug which exist in JSF RI, and also exists in MyFaces.
Check out this forum post which describes it in detail.

http://forum.java.sun.com/thread.jspa?threadID=581959&tstart=45

The problem also occurs when a container in a higher level contains a similar rendered attribute. In my case a panelGroup.",MYFACES-67
A user (Carsten) mailed my a web apps that show Bugs inside of MyFaces,MYFACES-66
"Only ' ' (space), '.' (dot), '/' slash and (of course) patterns indicaiong date fields are valid. All date formats that are recognized by Java should be valid. For example, You can use 'yyyy-MM-dd' as date format in Java classes, but You cannot use this in inputCalendar - '-' (dash) mark is invalid.",MYFACES-65
"Hi,

I found some of messages in Messages_ja.properties are not translated in Japanese. I translated it and attached here.

regards,

Takashi Okamoto",MYFACES-64
,MYFACES-63
"I try to delete one node in the Tree Component.
I use DefaultTreeModel#nodesWereRemoved(TreeNode, int[], Object[])
If this node is the first node in the children of parent node,
the translatedPath will be -1 and this cause error.
I think it should has some problem in 
HtmlTreeNode#childrenRemoved(int[] children) {
    if (!expanded)
        {
            // nothing to do
            return;
        }
        List childNodes = getChildren();
        int pathUpdateIndex = getTranslatedPath().length;

        for (int i = children.length - 1; i >= 0; i--)
        {
            /**
             *  I think it should be here
             **/
            translateChildrenPath(pathUpdateIndex, children[i], -1);

        ..........................

}

",MYFACES-62
"I try to delete one node in the Tree Component.
I use DefaultTreeModel#nodesWereRemoved(TreeNode, int[], Object[])
If this node is the first node in the children of parent node,
the translatedPath will be -1 and this cause error.
I think it should has some problem in 
HtmlTreeNode#childrenRemoved(int[] children) {
    if (!expanded)
        {
            // nothing to do
            return;
        }
        List childNodes = getChildren();
        int pathUpdateIndex = getTranslatedPath().length;

        for (int i = children.length - 1; i >= 0; i--)
        {

            translateChildrenPath(pathUpdateIndex, children[i], -1);

}

",MYFACES-61
"I am trying to put the component inputCalendar inside a column of DataTable but it does not work for more then one line. like :

<jsp:useBean id=""C"" class=""java.util.Date"" scope=""application""/>


<%
    List l = new Vector();
    try {
        l = (List) session.getAttribute(""D"");
        if(l == null) {
            l = new Vector();
                l.add(new Date());
                l.add(new Date());
            session.setAttribute(""D"",l);
        }

        System.out.println(""l2 = "" + l);
    } catch (Exception e) {
        System.out.println(""e = "" + e);
        e.printStackTrace();
    }
%>

<f:view id=""testCalendarInTable"" >
<html>
    <head>
        <meta http-equiv=""pragma"" content=""no-cache"">
        <meta http-equiv=""cache-control"" content=""no-cache"">
        <meta http-equiv=""expires"" content=""0"">
        <title>Example</title>
    </head>
    <body>


            <tr:stylesheet path=""/classes.css""/>
            <h2>Misc Test</h2>

            <h:messages globalOnly=""false"" errorClass=""redBoldFont""  />


           <h:dataTable id=""data""
                         var=""l""
                         value=""#{D}"" >
                <h:column>
                    <f:facet name=""header"">
                        <h:outputText value=""COL 1 - outputText"" />
                    </f:facet>
                    <h:outputText value=""#{l}"" />
                </h:column>

                <h:column>
                    <f:facet name=""header"">
                        <h:outputText value=""COL 2 - inputText"" />
                    </f:facet>
                    <h:inputText value=""#{l}"" />
                </h:column>

                <h:column>
                    <f:facet name=""header"">
                        <h:outputText value=""COL 3 - calendar A"" />
                    </f:facet>
                    <h:outputText value=""COL 3 - calendar A"" />
                    <x:inputCalendar renderAsPopup=""true"" value=""#{C}""/>
               </h:column>

            </h:dataTable>
          <f:verbatim><br></f:verbatim>

                <f:verbatim ><br></f:verbatim>
            <hr>

     </body>

 </html>
 </f:view>

It seems that when iterating through the lines, each row iteration makes the calendar component to add a new inputText to itself in addition to the original inputText and in addition to the ones that were added in the previous iterations.
The result is the following exception:

java.lang.ArrayIndexOutOfBoundsException: 2
        at javax.faces.component.UIData.saveDescendantComponentStates(UIData.java:258)
        at javax.faces.component.UIData.saveDescendantComponentStates(UIData.java:260)
        at javax.faces.component.UIData.saveDescendantComponentStates(UIData.java:260)
        at javax.faces.component.UIData.saveDescendantComponentStates(UIData.java:213)
        at javax.faces.component.UIData.setRowIndex(UIData.java:129)
        at net.sourceforge.myfaces.renderkit.html.HtmlTableRendererBase.encodeChildren(HtmlTableRendererBase.java:131)
        at javax.faces.component.UIComponentBase.encodeChildren(UIComponentBase.java:317)
        at javax.faces.webapp.UIComponentTag.encodeChildren(UIComponentTag.java:370)
        at javax.faces.webapp.UIComponentTag.doEndTag(UIComponentTag.java:278)
        at net.sourceforge.myfaces.taglib.UIComponentBodyTagBase.doEndTag(UIComponentBodyTagBase.java:79)
        at jsp_servlet._jsp.__example1._jspService(example1.jsp:84)
        at weblogic.servlet.jsp.JspBase.service(JspBase.java:33)
        at weblogic.servlet.internal.ServletStubImpl$ServletInvocationAction.run(ServletStubImpl.java:1006)
        at weblogic.servlet.internal.ServletStubImpl.invokeServlet(ServletStubImpl.java:419)
        at weblogic.servlet.internal.ServletStubImpl.invokeServlet(ServletStubImpl.java:315)
        at weblogic.servlet.internal.RequestDispatcherImpl.include(RequestDispatcherImpl.java:642)
        at weblogic.servlet.internal.RequestDispatcherImpl.include(RequestDispatcherImpl.java:423)
        at weblogic.servlet.jsp.PageContextImpl.include(PageContextImpl.java:154)
        at org.apache.struts.taglib.tiles.InsertTag.doInclude(InsertTag.java:705)
        at org.apache.struts.taglib.tiles.InsertTag$InsertHandler.doEndTag(InsertTag.java:816)
        at org.apache.struts.taglib.tiles.InsertTag.doEndTag(InsertTag.java:469)
        at jsp_servlet._jsp._structurepages.__fivepartslayout._jspService(fivePartsLayout.jsp:45)
        at weblogic.servlet.jsp.JspBase.service(JspBase.java:33)
        at weblogic.servlet.internal.ServletStubImpl$ServletInvocationAction.run(ServletStubImpl.java:1006)
        at weblogic.servlet.internal.ServletStubImpl.invokeServlet(ServletStubImpl.java:419)
        at weblogic.servlet.internal.ServletStubImpl.invokeServlet(ServletStubImpl.java:315)
        at weblogic.servlet.internal.RequestDispatcherImpl.forward(RequestDispatcherImpl.java:328)
        at net.sourceforge.myfaces.context.servlet.ServletExternalContextImpl.dispatch(ServletExternalContextImpl.java:404)
        at net.sourceforge.myfaces.application.jsp.JspTilesViewHandlerImpl.renderView(JspTilesViewHandlerImpl.java:178)
        at net.sourceforge.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:287)
        at javax.faces.webapp.FacesServlet.service(FacesServlet.java:110)
        at weblogic.servlet.internal.ServletStubImpl$ServletInvocationAction.run(ServletStubImpl.java:1006)
        at weblogic.servlet.internal.ServletStubImpl.invokeServlet(ServletStubImpl.java:419)
        at weblogic.servlet.internal.TailFilter.doFilter(TailFilter.java:28)
        at weblogic.servlet.internal.FilterChainImpl.doFilter(FilterChainImpl.java:27)
        at net.sourceforge.myfaces.custom.fileupload.MultipartFilter.doFilter(MultipartFilter.java:83)
        at weblogic.servlet.internal.FilterChainImpl.doFilter(FilterChainImpl.java:27)
        at weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.run(WebAppServletContext.java:6724)
        at weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:321)
        at weblogic.security.service.SecurityManager.runAs(SecurityManager.java:121)
        at weblogic.servlet.internal.WebAppServletContext.invokeServlet(WebAppServletContext.java:3764)
        at weblogic.servlet.internal.ServletRequestImpl.execute(ServletRequestImpl.java:2644)
        at weblogic.kernel.ExecuteThread.execute(ExecuteThread.java:219)
        at weblogic.kernel.ExecuteThread.run(ExecuteThread.java:178)

",MYFACES-60
"Currently, there is no localization for spanish from Spain (es_es) or catalan (ca / es_ca).
If no one is working on them I could do it, as I am a native speaker for those languages.",MYFACES-59
"When the JSF is called the property bind to method in bean are called two or three times before show in Internet browser. e.g: rendered=#{bean.renderedMethod}.

Console:
16:09:46,885 INFO  [EARDeployer] Started J2EE application: file:/C:/iwpPlatform/JBoss/server/default/deploy/solution.ear
16:10:04,228 INFO  [HtmlRenderKitImpl] No content type list given, creating HtmlResponseWriterImpl with default content type.
16:10:04,228 INFO  [HtmlResponseWriterImpl] No content type given, using default content type text/html
16:10:04,463 INFO  [STDOUT] ==> getRenderedMethod: true
16:10:04,463 INFO  [STDOUT] ==> getRenderedMethod: true
16:10:04,463 INFO  [STDOUT] ==> getRenderedMethod: true
",MYFACES-58
"When any request is done to JSF by GET method the HtmlRenderKit show same message below:

09:19:03,628 INFO  [HtmlRenderKitImpl] No content type list given, creating HtmlResponseWriterImpl with default content type.
09:19:03,628 INFO  [HtmlResponseWriterImpl] No content type given, using default content type text/html
09:19:03,628 INFO  [HtmlResponseWriterImpl] No character encoding given, using default character encoding ISO-8859-1

The log level would be better to change to DEBUG or wouldn't show it.",MYFACES-57
"In the netui-script.js there are expand/collapse images hardcoded. If you use the beehive tree tag and  set it to runAtClient, specify an images directory, and then collapse the root node at runtime you can no longer expand it again.

",MYFACES-56
"I set 2 validator (validateLongRange and validateLength) and when I fill input html field with any value that happend validation error the messages (h:messages) are show 4 times. I set 3 validator (validateDoubleRange, validateLongRange and validateLength) and when I fill input html field with any value that happend validation error the messages (h:messages) are show 9 times. 

I guess that: validation error messages = (validationor error number) * (validationor error number): 2*2 = 4, 3*3 = 9.",MYFACES-55
"When I set the value of locale (convertNumber) to ""pt_BR"" it throws this below message. From my point of view all attributes of type String must be supported at all components (TAG).


java.lang.IllegalArgumentException: Attribute locale of type String not supported
	at net.sourceforge.myfaces.taglib.core.ConvertNumberTag.setConverterLocale(ConvertNumberTag.java:224)
	at net.sourceforge.myfaces.taglib.core.ConvertNumberTag.createConverter(ConvertNumberTag.java:128)
	at javax.faces.webapp.ConverterTag.doStartTag(ConverterTag.java:60)
	at org.apache.jsp.test_jsp._jspx_meth_f_convertNumber_0(test_jsp.java:223)
	at org.apache.jsp.test_jsp._jspx_meth_h_inputText_0(test_jsp.java:197)
	at org.apache.jsp.test_jsp._jspx_meth_h_form_0(test_jsp.java:150)
	at org.apache.jsp.test_jsp._jspx_meth_f_view_0(test_jsp.java:116)
	at org.apache.jsp.test_jsp._jspService(test_jsp.java:72)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:94)",MYFACES-54
"Examples:
inputText: I've found align, datafld, dataformatas, datasrc, escape and transient on TLD and haven't found these attributes on http://java.sun.com/j2ee/javaserverfaces/1.1_01/docs/tlddocs/h/inputText.html


selectOnMenu: I've found readonly attribute on http://java.sun.com/j2ee/javaserverfaces/1.1_01/docs/tlddocs/h/selectOneMenu.html and haven't found on TLD

selectManeCheckbox: I've found border attribute on http://java.sun.com/j2ee/javaserverfaces/1.1_01/docs/tlddocs/h/selectManyCheckbox.html and haven't found on TLD

I guess that there are many others.",MYFACES-53
"I set the value of url (graphicImage) and image (commandButton) to images/minus.gif and the HTML source page has generated     src attribute of img and input with the same value. But, when I set the value of url (graphicImage) and image (commandButton) to /images/minus.gif the HTML source page has generated different: src attribute of input TAG is the same value; src attribute of img TAG has added with web context (/solution.web).

Pratical result: the image of commandButton don´t show because /image/minus.gif don´t exists.

Attribute value
---------------
JSF : image        == url        == images/minus.gif
HTML: src of input == src of img == images/minus.gif

HTML source page (ok)
----------------
<img id=""_id0:graphicImage1"" src=""images/minus.gif""/>

<input id=""_id0:commandButton1"" name=""_id0:commandButton1"" type=""image"" src=""images/plus.gif"" 

onclick=""clear__5Fid0();document.forms['_id0'].elements['autoScroll'].value=getScrolling();""/>


Attribute value
---------------
JSF : image        == url        == /images/minus.gif
HTML: src of input ==               /images/minus.gif
      src of img   ==               /solution.web/images/minus.gif

HTML source page (problem)
----------------
<img id=""_id0:graphicImage1"" src=""/solution.web/images/minus.gif""/>

<input id=""_id0:commandButton1"" name=""_id0:commandButton1"" type=""image"" src=""/images/plus.gif"" onclick=""clear__5Fid0();document.forms['_id0'].elements['autoScroll'].value=getScrolling();""/>",MYFACES-52
"If you deploy myserver faces on Tomcat 5.4 (the newest version, build for java 5), this exception is always thrown:

java.lang.IllegalStateException: No Factories configured for this Application - typically this is because a context listener is not setup in your web.xml.
A typical config looks like this;
<listener>
  <listener-class>net.sourceforge.myfaces.webapp.StartupServletContextListener</listener-class>
</listener>

This is true even if

       <servlet-name>Faces Servlet</servlet-name> 
       <servlet-class>net.sourceforge.myfaces.webapp.MyFacesServlet</servlet-class> 
       <load-on-startup>1</load-on-startup> 
   </servlet> 

is configured in web.xml and you use the 
net.sourceforge.myfaces.webapp.MyFacesServlet servlet in place of the Sun one. 

I hope this is of some help. ",MYFACES-51
"The text inside the tag-library-descriptor file myfaces_core.tld is:
    <tlib-version>0.9.0</tlib-version>
    <jsp-version>1.2</jsp-version>
    <short-name>MyFaces Basic Core Tag Library</short-name>
    <uri>http://java.sun.com/jsf/core</uri>
    <description>
        JSF Core Tag Library
    </description>
and JBuilder refuses to define a new tag library because <short-name> element contains spaces. The message is: 'Prefix cannot contain spaces'. 
Looking at the definitions of another TLD file (oracle ADF Faces Core) af.tld that 

  <tlib-version>1.0</tlib-version>
  <jsp-version>1.2</jsp-version>
  <short-name>af</short-name>
  <uri>http://xmlns.oracle.com/adf/faces/EA10</uri>
  <display-name>ADF Faces Core</display-name> 

loads correctly in JBuilder shows that <short-name> and <uri> elements in your definitions may be corrected in a simple way with these two lines:
    <short-name>x</short-name>
    <uri>http://xmlns.myfaces.sourceforge.net/tld/myfaces_ext_0_9.tld</uri>

Obviously this is necessary only if you use an IDE Tool like mine
Best regards and many thanks for your work

",MYFACES-50
Needs to write XDoclet Geronimo Tags.,MYFACES-49
"Patch Notes:


- Convert all images to use getResourceURL() in HTMLTreeImageCommandLinkRenderer and HTMLTreeRender.  Required for correct rendering of images with JSR-168.

- Added Tree check box tag and component allow to use checkboxes in tree table in combination with the already existing <x:selectManyCheckbox> tag and spread layout.

- Renamed treecolumn tag to treeColumn to be consistent with other myfaces tags.

- Added TreeItem and TreeTable beans.  Seem to be missing from head.

- Fixed some resource bundles issues.",MYFACES-48
"I needed a solution to receive notifications about the page selection of a dataScroller for a dataTable; so, i've implemented a new ""pageSelectionListener"" tag that can be nested inside the dataScroller tag, very similar to ""tabChangeListener"" for tabbedPane. It works, i've tested it, and created a patch for the new org.apache.myfaces package and tlds. I would like to submit the patch, but don't know how. Could someone point me in the right direction?",MYFACES-47
"create a bundle that could be used by ibiblio (aka Maven upload)

http://maven.apache.org/repository-upload.html
",MYFACES-46
"The JSF spec doesn't go into much detail about the way that the
Application needs to search for a converter for a given Object type.
Currently, we only search a Class' direct interfaces and, recursively,
its superclasses for a match.  This can be problematic if the
converter definition refers to an interface.  The only checking will
be for its direct parents.

Here is an example outlining my problem:

Interfaces:
Descriptor, Active, Identifiable

ModelBase extends Descriptor

Organization extends Active, Identifiable, ModelBase

Classes:

DescriptorImpl implements Descriptor

ModelBaseImpl extends DescriptorImpl implements ModelBase

OrganizationImpl extends ModelBaseImpl implements Organization

This means that if I register my Converter on a Descriptor and a JSF
component needs to find a Converter for an Organization, it will not
find one because the search will go something like this:

Organization = no match
search interfaces: Active = no match
                         Identifiable = no match
                         ModelBase = no match
search superclass: null = no match

return null;

Of course, we should just recursively search the interfaces as well.
Preferably, we would want users to be able to define a different
Converter for a Descriptor and an Organization with confidence that
the Organization would always get an OrganizationConverter.

That outlines the bug, which I intend to fix.  The real question is
one of strategy.

Here are the strategies we could use:
A: use Class.isAssignableFrom(Class) on each key in the
_converterTypeMap to match the Class to a converter, then get that
converter from the Map.  There could be additional algorithms employed
to choose between multiple matches.

B: When checking an interface, we just see if it is present in the
Map.  We could execute the internalCreateConverter(Class) method on
it, so that its SuperInterfaces will be searched.",MYFACES-45
"The PropertyResolverImpl does not handle instances of UIComponent like it would a Plain old Java Object (POJO).  The JSF 1.1 specification doesn't mention any requirement to perform any special logic for a UIComponent, and Sun's RI doesn't perform this logic either.

If this logic is required for a custom component, it should be removed from the general implementation and somehow pushed to the component, as this can cause problems for anyone accessing the properties of a UIComponent in a ValueBinding.",MYFACES-44
"myfaces-examples shows nothing in the browser. it is not recieving a page not found, just not displaying anything. the jsf-cardemo and jsf-guessnumber samples work just fine. Any body else get this? ",MYFACES-43
"Michael Wiedmann wrote:

""...Though this is exactly the detailed message I get from the component (""Are you behind a firewall..."") I doubt that this is correct. I don't use a proxy for web access and can access other RSS feeds using <x:rssTicker>! 
It might me a poblem of the RSS version this particularly RSS feeds uses (RDF simple 0.9).""

http://jakarta.apache.org/commons/sandbox/feedparser/
might be a better solution.

",MYFACES-42
"SF issue at:
http://sourceforge.net/tracker/index.php?func=detail&aid=999543&group_id=69709&atid=525508
------------------------

Basically I built a WebApp around the well working
Struts-Faces example app, integrated MyFaces and try to
use some components.

Here's the problem:

I display data in a x:dataTable with x:dataScoller,
everything works fine, BUT when I hit the arrow to scroll
to a different page I get an exception:

javax.servlet.ServletException: org.apache.jasper.
JasperException
javax.faces.webapp.FacesServlet.service(FacesServlet.
java:122)
net.sourceforge.myfaces.custom.fileupload.
MultipartFilter.doFilter(MultipartFilter.java:91)

...and also...


java.lang.NullPointerException
at org.apache.struts.taglib.tiles.InsertTag.
processAttribute(InsertTag.java:689)
at org.apache.struts.taglib.tiles.InsertTag.
createTagHandler(InsertTag.java:489)
at org.apache.struts.taglib.tiles.InsertTag.
doStartTag(InsertTag.java:451)
at org.apache.jsp.layout_jsp.
_jspx_meth_t_insert_0(layout_jsp.java:288)
at org.apache.jsp.layout_jsp.
_jspx_meth_f_subview_0(layout_jsp.java:268)
at org.apache.jsp.layout_jsp.
_jspx_meth_s_html_0(layout_jsp.java:181)
at org.apache.jsp.layout_jsp.
_jspx_meth_f_view_0(layout_jsp.java:121)
at org.apache.jsp.layout_jsp.
_jspService(layout_jsp.java:83)
at org.apache.jasper.runtime.HttpJspBase.
service(HttpJspBase.java:133)
at javax.servlet.http.HttpServlet.
[..........................]

These exceptions don't mean anything to me!!!

Same thing happens when I use x:tree and do ""drag &
drop"", basically whenever some sort of event is
triggered!!!

The MyFaces-DataScroller-Example works fine even
within my WebApp, but here's a difference I noticed:

The example opens and closes the f:view tag within the
HTML body and the hidden form that x:dataScroller uses
for event-handling is placed after closing x:view and
therefore WITHIN HTML body!
In my WebApp the form was places outside of the HTML
html tag.
I changed f:view to be encapsulated within my body tag,
but still got the same error!

Question: Is this a bug or do the MyFaces components
NOT work with Struts / Tiles / Struts-Faces???
How could I still use the components with my Struts /
JSF scenario?

Thanks for your help......!?!",MYFACES-40
"dataScroller does not change the page of a dataTable if
they are within a h:form. 

Old SF issue with comments:
http://sourceforge.net/tracker/index.php?func=detail&aid=981851&group_id=69709&atid=525508",MYFACES-39
"Given the following jsp:

<%@ taglib uri=""http://java.sun.com/jsf/core"" prefix=""f""
%>
<%@ taglib uri=""http://java.sun.com/jsf/html"" prefix=""h""
%>

<f:view>
<h:form>
<h:dataTable id=""containersTable""
var=""container"" value=""#{test.containers}"">
<h:column>
<h:dataTable
id=""subtainersTable"" var=""subtainer"" value=""#
{container.subtainers}"">

<h:column>

<h:inputText value=""#{subtainer.name}"" />

</h:column>
</h:datatable>
</h:column>
</h:dataTable>

<h:commandButton value=""Submit"" />
</h:form>
</f:view>


The inner datatable does not correctly update the
models.

If all inner datatable rows are updated, the only inner
row's setter that gets called is the first inner row, but it
gets called with data from the last inner row.

We are dependent upon this feature, and tried to fix it
ourselves, but our debugger doesn't work well with the
jars.

-------------------------
Additional comment at SF:
http://sourceforge.net/tracker/index.php?func=detail&aid=1030116&group_id=69709&atid=525508
",MYFACES-38
"I use the ""messages"" for showing errors in a dataTable.

It works really great with line identification but, the
messages with summaryFormat are only quite correct:

<x:dataTable

id=""skuListTable""
var=""sku""
value=""#{NglrForm.skuList}""
>

<h:column >
<f:facet name=""header"">
<x:outputLabel for=""skunbr"" value=""#
{msg.nglr_sku_nbr}"" />
</f:facet>

<x:message id=""number1Error""
for=""skunbr"" detailFormat=""*""/>
<h:inputText id=""skunbr"" value=""#
{sku.skunbr}"" required=""#{NglrForm.validationRequired}""
>
<c:if test=""#
{NglrForm.validationRequired}"" >
<f:validateLength minimum=""2""
maximum=""8""/>
</c:if>
</h:inputText>
-----

And messages:

<x:messages id=""messageList"" summaryFormat=""{0} in
{1}"" />

-----

The output HTML is like this:

<ul><li>Validierungsfehler in </li>
<li>Validierungsfehler in </li>
<li>Validierungsfehler in </li>
<li>Validierungsfehler in </li>
<li>Validierungsfehler in Varianten-Nr</li></ul>",MYFACES-37
"
I've created a custom component that is very similar
to the dataTable component.

Suppose you have a dataTable of states and their 2-letter abbreviations:
AL ALABAMA
AK ALASKA
AZ ARIZONA
AR ARKANSAS
CA CALIFORNIA
CO COLORADO
CT CONNECTICUT
...

This will quickly consume several screens of data and the
user ends up scrolling like crazy. With my new component
NewspaperTable, you specify a number of newspaper columns
and the  table is ""wrapped"" so that each column is repeated
multiple times on each row. The name newspaper comes
from the idea of 'balanced columns' like you would find in
a newspaper:

AL ALABAMA                 DE DELAWARE              IA IOWA
AK ALASKA                    FL FLORIDA                    KS KANSAS
AZ ARIZONA                  GA GEORGIA                  KY KENTUCKY
AR ARKANSAS             HI HAWAII                        LA LOUISIANA
CA CALIFORNIA           ID IDAHO                         ME MAINE
CO COLORADO            IL ILLINOIS                      MD MARYLAND
CT CONNECTICUT      IN INDIANA                      MA MASSACHUSETTS

The end result works very well in my application. I have used
all sorts of components in this table and they all work perfectly.

",MYFACES-36
"The dummy form and Javascritp used for <h:commandLink> is placed after the closing </body> tag (before the closing </html> tag), which is in invalid HTML.
",MYFACES-35
"The dummy form and Javascritp used for <h:commandLink> is placed after the closing </body> tag (before the closing </html> tag), which is in invalid HTML.
",MYFACES-34
"In response to sf bug #1008685 server-side view state is held in the session by viewId so for multiple windows the state is not lost.

The issue remains for multiple browser windows showing the same view as in this scenario all windows share one server-side view state. This can only be resolved by making viewId unique using some window-dependent pre-/postfix to the current viewId (e.g. by providing a special custom component).",MYFACES-32
"Properties with names containing a capital letter as the second letter, can not be found. 

Example:
Managed bean name : test
Managed bean class: com.test.Test
Property          : aTest 
Getter method     :
                    public String getATest() {
                      return ""aTest"";
                    }

Expression        : #{test.aTest}, e.g. 
                    <h:outputText 
                       id=""testText"" 
                       value=""#{test.aTest}""/>

Workaround        : use #{test.ATest}     

Resulting stacktrace:
14:28:53,112 ERROR [PropertyResolverImpl] com.test.Test
javax.faces.el.PropertyNotFoundException: Bean: com.test.Test, property: aTest
        at net.sourceforge.myfaces.el.PropertyResolverImpl.getPropertyDescriptor(PropertyResolverImpl.java:499)
        at net.sourceforge.myfaces.el.PropertyResolverImpl.getPropertyDescriptor(PropertyResolverImpl.java:470)
        at net.sourceforge.myfaces.el.PropertyResolverImpl.getProperty(PropertyResolverImpl.java:433)
        at net.sourceforge.myfaces.el.PropertyResolverImpl.getValue(PropertyResolverImpl.java:113)
        at net.sourceforge.myfaces.el.ELParserHelper$MyPropertySuffix.evaluate(ELParserHelper.java:541)
        at org.apache.commons.el.ComplexValue.evaluate(ComplexValue.java:145)
        at net.sourceforge.myfaces.el.ValueBindingImpl.getValue(ValueBindingImpl.java:438)
        at javax.faces.component.UIOutput.getValue(UIOutput.java:75)
        at net.sourceforge.myfaces.renderkit.RendererUtils.getStringValue(RendererUtils.java:98)
        at net.sourceforge.myfaces.renderkit.html.HtmlTextRendererBase.renderOutput(HtmlTextRendererBase.java:87)
        at net.sourceforge.myfaces.renderkit.html.HtmlTextRendererBase.encodeEnd(HtmlTextRendererBase.java:75)
        at javax.faces.component.UIComponentBase.encodeEnd(UIComponentBase.java:329)
        at net.sourceforge.myfaces.renderkit.RendererUtils.renderChild(RendererUtils.java:289)
        at net.sourceforge.myfaces.renderkit.RendererUtils.renderChildren(RendererUtils.java:266)
        at net.sourceforge.myfaces.renderkit.html.HtmlGroupRenderer.encodeEnd(HtmlGroupRenderer.java:73)
        at javax.faces.component.UIComponentBase.encodeEnd(UIComponentBase.java:329)
        at javax.faces.webapp.UIComponentTag.encodeEnd(UIComponentTag.java:376)
        at javax.faces.webapp.UIComponentTag.doEndTag(UIComponentTag.java:280)
        at net.sourceforge.myfaces.taglib.UIComponentBodyTagBase.doEndTag(UIComponentBodyTagBase.java:79)
        at org.apache.jsp.test.page2_jsp._jspService(page2_jsp.java:219)
        at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:94)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:810)
        at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:324)
        at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:292)
        at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:236)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:810)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:237)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:157)
        at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:704)
        at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:590)
        at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:510)
        at org.apache.jasper.runtime.JspRuntimeLibrary.include(JspRuntimeLibrary.java:966)
        at org.apache.jasper.runtime.PageContextImpl.include(PageContextImpl.java:581)
        at org.apache.struts.tiles.TilesUtilImpl.doInclude(TilesUtilImpl.java:137)
        at org.apache.struts.tiles.TilesUtil.doInclude(TilesUtil.java:177)
        at org.apache.struts.taglib.tiles.InsertTag.doInclude(InsertTag.java:756)
        at org.apache.struts.taglib.tiles.InsertTag$InsertHandler.doEndTag(InsertTag.java:881)
        at org.apache.struts.taglib.tiles.InsertTag.doEndTag(InsertTag.java:473)
        at org.apache.jsp.templates.template_jsp._jspx_meth_tiles_insert_5(template_jsp.java:469)
        at org.apache.jsp.templates.template_jsp._jspx_meth_f_subview_5(template_jsp.java:447)
        at org.apache.jsp.templates.template_jsp._jspService(template_jsp.java:141)
        at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:94)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:810)
        at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:324)
        at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:292)
        at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:236)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:810)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:237)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:157)
        at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:704)
        at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:474)
        at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:409)
        at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
        at net.sourceforge.myfaces.context.servlet.ServletExternalContextImpl.dispatch(ServletExternalContextImpl.java:404)
        at net.sourceforge.myfaces.application.jsp.JspTilesViewHandlerImpl.renderView(JspTilesViewHandlerImpl.java:178)
        at net.sourceforge.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:287)
        at javax.faces.webapp.FacesServlet.service(FacesServlet.java:110)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:237)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:157)
        at net.sourceforge.myfaces.custom.fileupload.MultipartFilter.doFilter(MultipartFilter.java:88)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:186)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:157)
        at org.jboss.web.tomcat.filters.ReplyHeaderFilter.doFilter(ReplyHeaderFilter.java:75)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:186)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:157)
        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:214)
        at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:104)
        at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:520)
        at org.apache.catalina.core.StandardContextValve.invokeInternal(StandardContextValve.java:198)
        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:152)
        at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:104)
        at org.jboss.web.tomcat.security.CustomPrincipalValve.invoke(CustomPrincipalValve.java:44)
        at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:102)
        at org.jboss.web.tomcat.security.SecurityAssociationValve.invoke(SecurityAssociationValve.java:169)
        at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:102)
        at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:520)
        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:137)
        at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:104)
        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:118)
        at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:102)
        at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:520)
        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
        at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:104)
        at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:520)
        at org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:929)
        at org.apache.coyote.tomcat5.CoyoteAdapter.service(CoyoteAdapter.java:160)
        at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:799)
        at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.processConnection(Http11Protocol.java:705)
        at org.apache.tomcat.util.net.TcpWorkerThread.runIt(PoolTcpEndpoint.java:577)
        at org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:683)
        at java.lang.Thread.run(Thread.java:534)

Thanks
Mads",MYFACES-31
"The concrete class, XSSchemaGrammar defines a table named GLOBAL_COMP which contains only 14 elements whereas it should contain 16 elements (Facet and MultiValuesFacet are missing as it is done in XSModelImpl).",MYFACES-30
"I created a generic SQL Map like below. I get a SQL stmt from somewhere and trying to use iBatis SQLMap just to execute the SQL. I'll provide the complete select stmt.

<select id=""custom_sqlstmt"" parameterClass=""java.util.HashMap"" resultClass=""java.util.HashMap"">

    $custom_sql$

</select>

First call goes thro and comes back with proper results. But when I try to execute a different SQL using this same SQL Map, it gives me some mapping exceptions. Looking at the exception, all I can think of is that, sql map internally keeps the resultset metadata's structure somewhere in the cache and use the same information again for the subsequent sql calls. In above case, since I provide a different SQL stmt each time, resultset metadata would be different per call. And as a result, when sqlmap tries to map the result using old structure, it throws mapping exceptions.

Is there any work around to resolve this issue? Thanks in advance for your help!

- Nilesh -
",MYFACES-29
"From a post to myfaces-user@lists.sourceforge.net by calugi@istitutodeglinnocenti.it:

Hello,
I have a form with 8 fields. This fields cannot be blank, so I use <h:message>
to display the error. It works fine, but I want to custom the errors (in
Italian language).
I have a class(Bundles),inside I have a properties file (Messages_it.properties)
with the text customized.
I have registred it in faces-config.xml (
<application>
<message-bundle>Bundles.Messages_it</message-bundle>
</application>

and in jsp page I call it with :
<f:loadBundle basename=""Bundles.Messages"" var=""msgs"" />.
With standar jsf libraries it works fine, but with myfaces libraries not.
Why?
Thanks...

-- Leonardo",MYFACES-28
"We could not include non ascii characters in faces-config.xml. This is a big problem for people who use non-ascii character.

Problem is myfaces set encoding as ISO-8859-1 for commons-digester. In the fact, commons-digester detect encoding automatically and you don't need set character encoding.

I attached the patch to resove the problem:

$ cvs diff -u  src/myfaces/org/apache/myfaces/config/impl/digester/DigesterFacesConfigUnmarsh
allerImpl.java
Index: src/myfaces/org/apache/myfaces/config/impl/digester/DigesterFacesConfigUnmarshallerImpl.java
===================================================================
RCS file: /home/cvspublic/incubator-myfaces/src/myfaces/org/apache/myfaces/config/impl/digester/DigesterFacesConfigUnmar
shallerImpl.java,v
retrieving revision 1.4
diff -u -r1.4 DigesterFacesConfigUnmarshallerImpl.java
--- src/myfaces/org/apache/myfaces/config/impl/digester/DigesterFacesConfigUnmarshallerImpl.j1.4Oct 2004 11:50:59 -0000
+++ src/myfaces/org/apache/myfaces/config/impl/digester/DigesterFacesConfigUnmarshallerImpl.j21 Nov 2004 00:22:48 -0000
@@ -171,7 +171,6 @@
     {
         InputSource is = new InputSource(in);
         is.setSystemId(systemId);
-        is.setEncoding(""ISO-8859-1"");

         return digester.parse(is);
     }

regards,

Takashi Okamoto",MYFACES-26
"Hi,

I externalized some of myfaces-examples messages and translated in Japanese.  I attached patch. Please take it.

regards,

Takashi Okamoto

",MYFACES-25
"I could not build myfaces from CVS. Add common-beantuils at classpath.

Index: build.xml
===================================================================
RCS file: /home/cvspublic/incubator-myfaces/build/build.xml,v
retrieving revision 1.61
diff -u -r1.61 build.xml
--- build.xml   4 Nov 2004 01:39:49 -0000       1.61
+++ build.xml   20 Nov 2004 23:36:54 -0000
@@ -69,6 +69,7 @@
         <pathelement location=""${servlet-jsp.jar}""/>
         <pathelement location=""${jstl.jar}""/>
         <pathelement location=""${jsp-2.0.jar}""/>
+        <pathelement location=""${commons-beanutils.jar}""/>
         <pathelement location=""${commons-logging.jar}""/>
         <pathelement location=""${commons-el.jar}""/>
         <pathelement location=""${commons-validator.jar}""/>",MYFACES-24
"If 'itemDisabled=""true""' is used in h:selectOneMenu tag, it causes the following exception:

[ServletException in:/common/content.jsp] Must be called before the start element is closed (attribute 'disabled')' 


The following is the stacktrace:

2004-11-18 12:50:44 ApplicationDispatcher[/box] Servlet.service() for servlet jsp threw exception
java.lang.IllegalStateException: Must be called before the start element is closed (attribute 'disabled')
	at net.sourceforge.myfaces.renderkit.html.HtmlResponseWriterImpl.writeAttribute(HtmlResponseWriterImpl.java:269)
	at net.sourceforge.myfaces.renderkit.html.HtmlRendererUtils.renderSelectOptions(HtmlRendererUtils.java:493)
	at net.sourceforge.myfaces.renderkit.html.HtmlRendererUtils.internalRenderSelect(HtmlRendererUtils.java:427)
	at net.sourceforge.myfaces.renderkit.html.HtmlRendererUtils.renderMenu(HtmlRendererUtils.java:328)
	at net.sourceforge.myfaces.renderkit.html.HtmlMenuRendererBase.encodeEnd(HtmlMenuRendererBase.java:64)
	at javax.faces.component.UIComponentBase.encodeEnd(UIComponentBase.java:329)
	at net.sourceforge.myfaces.renderkit.RendererUtils.renderChild(RendererUtils.java:289)
	at net.sourceforge.myfaces.renderkit.html.HtmlGridRenderer.renderChildren(HtmlGridRenderer.java:240)
	at net.sourceforge.myfaces.renderkit.html.HtmlGridRenderer.encodeEnd(HtmlGridRenderer.java:120)
	at javax.faces.component.UIComponentBase.encodeEnd(UIComponentBase.java:329)
	at javax.faces.webapp.UIComponentTag.encodeEnd(UIComponentTag.java:376)
	at javax.faces.webapp.UIComponentTag.doEndTag(UIComponentTag.java:280)
	at net.sourceforge.myfaces.taglib.UIComponentBodyTagBase.doEndTag(UIComponentBodyTagBase.java:79)
	at org.apache.jsp.searchContent_jsp._jspx_meth_h_panelGrid_0(searchContent_jsp.java:264)
	at org.apache.jsp.searchContent_jsp._jspx_meth_h_form_0(searchContent_jsp.java:178)
	at org.apache.jsp.searchContent_jsp._jspx_meth_f_subview_0(searchContent_jsp.java:129)
	at org.apache.jsp.searchContent_jsp._jspService(searchContent_jsp.java:96)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:94)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:802)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:324)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:292)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:236)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:802)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:237)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:157)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:704)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:590)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:510)
	at org.apache.taglibs.standard.tag.common.core.ImportSupport.acquireString(ImportSupport.java:296)
	at org.apache.taglibs.standard.tag.common.core.ImportSupport.doEndTag(ImportSupport.java:161)
	at org.apache.jsp.common.content_jsp._jspx_meth_c_import_0(content_jsp.java:81)
	at org.apache.jsp.common.content_jsp._jspService(content_jsp.java:55)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:94)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:802)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:324)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:292)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:236)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:802)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:237)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:157)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:704)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:590)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:510)
	at org.apache.jasper.runtime.JspRuntimeLibrary.include(JspRuntimeLibrary.java:966)
	at org.apache.jasper.runtime.PageContextImpl.include(PageContextImpl.java:581)
	at org.apache.struts.tiles.TilesUtilImpl.doInclude(TilesUtilImpl.java:137)
	at org.apache.struts.tiles.TilesUtil.doInclude(TilesUtil.java:177)
	at org.apache.struts.taglib.tiles.InsertTag.doInclude(InsertTag.java:756)
	at org.apache.struts.taglib.tiles.InsertTag$InsertHandler.doEndTag(InsertTag.java:881)
	at org.apache.struts.taglib.tiles.InsertTag.doEndTag(InsertTag.java:473)
	at org.apache.jsp.common.layout_jsp._jspx_meth_tiles_insert_2(layout_jsp.java:169)
	at org.apache.jsp.common.layout_jsp._jspService(layout_jsp.java:82)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:94)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:802)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:324)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:292)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:236)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:802)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:237)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:157)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:704)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:474)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:409)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at net.sourceforge.myfaces.context.servlet.ServletExternalContextImpl.dispatch(ServletExternalContextImpl.java:404)
	at net.sourceforge.myfaces.application.jsp.JspTilesViewHandlerImpl.renderView(JspTilesViewHandlerImpl.java:178)
	at net.sourceforge.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:287)
	at javax.faces.webapp.FacesServlet.service(FacesServlet.java:110)
	at net.sourceforge.myfaces.webapp.MyFacesServlet.service(MyFacesServlet.java:67)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:237)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:157)
	at net.sf.acegisecurity.intercept.web.FilterSecurityInterceptor.proceedWithObject(FilterSecurityInterceptor.java:87)
	at net.sf.acegisecurity.intercept.AbstractSecurityInterceptor.interceptor(AbstractSecurityInterceptor.java:368)
	at net.sf.acegisecurity.intercept.web.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:78)
	at net.sf.acegisecurity.intercept.web.SecurityEnforcementFilter.doFilter(SecurityEnforcementFilter.java:165)
	at net.sf.acegisecurity.util.FilterToBeanProxy.doFilter(FilterToBeanProxy.java:105)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:186)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:157)
	at net.sf.acegisecurity.ui.AbstractIntegrationFilter.doFilter(AbstractIntegrationFilter.java:170)
	at net.sf.acegisecurity.util.FilterToBeanProxy.doFilter(FilterToBeanProxy.java:105)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:186)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:157)
	at net.sf.acegisecurity.ui.basicauth.BasicProcessingFilter.doFilter(BasicProcessingFilter.java:199)
	at net.sf.acegisecurity.util.FilterToBeanProxy.doFilter(FilterToBeanProxy.java:105)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:186)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:157)
	at net.sf.acegisecurity.ui.AbstractProcessingFilter.doFilter(AbstractProcessingFilter.java:368)
	at net.sf.acegisecurity.util.FilterToBeanProxy.doFilter(FilterToBeanProxy.java:105)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:186)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:157)
	at de.mindmatters.faces.spring.RequestHandledFilter.doFilter(RequestHandledFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:186)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:157)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:214)
	at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:104)
	at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:520)
	at org.apache.catalina.core.StandardContextValve.invokeInternal(StandardContextValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:152)
	at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:104)
	at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:520)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:137)
	at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:104)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:117)
	at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:102)
	at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:520)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
	at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:104)
	at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:520)
	at org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:929)
	at org.apache.coyote.tomcat5.CoyoteAdapter.service(CoyoteAdapter.java:160)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:799)
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.processConnection(Http11Protocol.java:705)
	at org.apache.tomcat.util.net.TcpWorkerThread.runIt(PoolTcpEndpoint.java:577)
	at org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:683)
	at java.lang.Thread.run(Thread.java:534)


The following is the sampe JSP that causes the exception:

<%@ page contentType=""text/html;charset=UTF-8"" language=""java"" %>
<%@ taglib prefix=""c"" uri=""http://java.sun.com/jstl/core"" %>
<%@ taglib prefix=""f"" uri=""http://java.sun.com/jsf/core"" %>
<%@ taglib prefix=""h"" uri=""http://java.sun.com/jsf/html"" %>

<f:subview id=""body"">
	<f:loadBundle basename=""search"" var=""search"" />

	<h:form accept=""text/html"" acceptCharset=""UTF-8"" enctype=""UTF-8"">
		<!--h:panelGrid columns=""2"" styleClass=""form-background"" headerClass=""form-header"" columnClasses=""form-prompt,form-field""-->
		<h:panelGrid columns=""2"">
			<%-- Grid header element --%>
		
			<f:facet name=""header"">
				<h:panelGroup>
					<h:outputText value=""#{search.header}""/>
				</h:panelGroup>
			</f:facet>
		
			<h:panelGroup>
				<h:outputLabel for=""searchBy"" value=""#{search.searchBy}""/>
				<h:selectOneMenu id=""searchBy"" title=""Criteria Type"" tabindex=""1"" value=""#{searchPage.searchBy}"" >
					<f:selectItem  itemDisabled=""true"" itemValue=""0"" itemLabel=""""/>
					<f:selectItem  itemValue=""A"" itemLabel=""A Name"" />
					<f:selectItem  itemValue=""B"" itemLabel=""B Name"" />
				</h:selectOneMenu>
			</h:panelGroup>
		</h:panelGrid>
	</h:form>

	<div style=""border: 1px dashed #999999"">
		<h:messages showSummary=""true"" showDetail=""false"" layout=""table""/>
	</div>
</f:subview>
",MYFACES-22
"If 'itemDisabled=""true""' is used in 'f:selectItem' tag, it causes the following exception:
[ServletException in:/common/content.jsp] Must be called before the start element is closed (attribute 'disabled')'

The following is the stack trace:
2004-11-18 12:50:44 ApplicationDispatcher[/videobox] Servlet.service() for servlet jsp threw exception
java.lang.IllegalStateException: Must be called before the start element is closed (attribute 'disabled')
	at net.sourceforge.myfaces.renderkit.html.HtmlResponseWriterImpl.writeAttribute(HtmlResponseWriterImpl.java:269)
	at net.sourceforge.myfaces.renderkit.html.HtmlRendererUtils.renderSelectOptions(HtmlRendererUtils.java:493)
	at net.sourceforge.myfaces.renderkit.html.HtmlRendererUtils.internalRenderSelect(HtmlRendererUtils.java:427)
	at net.sourceforge.myfaces.renderkit.html.HtmlRendererUtils.renderMenu(HtmlRendererUtils.java:328)
	at net.sourceforge.myfaces.renderkit.html.HtmlMenuRendererBase.encodeEnd(HtmlMenuRendererBase.java:64)
	at javax.faces.component.UIComponentBase.encodeEnd(UIComponentBase.java:329)
	at net.sourceforge.myfaces.renderkit.RendererUtils.renderChild(RendererUtils.java:289)
	at net.sourceforge.myfaces.renderkit.html.HtmlGridRenderer.renderChildren(HtmlGridRenderer.java:240)
	at net.sourceforge.myfaces.renderkit.html.HtmlGridRenderer.encodeEnd(HtmlGridRenderer.java:120)
	at javax.faces.component.UIComponentBase.encodeEnd(UIComponentBase.java:329)
	at javax.faces.webapp.UIComponentTag.encodeEnd(UIComponentTag.java:376)
	at javax.faces.webapp.UIComponentTag.doEndTag(UIComponentTag.java:280)
	at net.sourceforge.myfaces.taglib.UIComponentBodyTagBase.doEndTag(UIComponentBodyTagBase.java:79)
	at org.apache.jsp.searchContent_jsp._jspx_meth_h_panelGrid_0(searchContent_jsp.java:264)
	at org.apache.jsp.searchContent_jsp._jspx_meth_h_form_0(searchContent_jsp.java:178)
	at org.apache.jsp.searchContent_jsp._jspx_meth_f_subview_0(searchContent_jsp.java:129)
	at org.apache.jsp.searchContent_jsp._jspService(searchContent_jsp.java:96)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:94)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:802)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:324)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:292)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:236)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:802)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:237)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:157)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:704)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:590)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:510)
	at org.apache.taglibs.standard.tag.common.core.ImportSupport.acquireString(ImportSupport.java:296)
	at org.apache.taglibs.standard.tag.common.core.ImportSupport.doEndTag(ImportSupport.java:161)
	at org.apache.jsp.common.content_jsp._jspx_meth_c_import_0(content_jsp.java:81)
	at org.apache.jsp.common.content_jsp._jspService(content_jsp.java:55)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:94)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:802)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:324)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:292)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:236)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:802)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:237)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:157)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:704)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:590)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:510)
	at org.apache.jasper.runtime.JspRuntimeLibrary.include(JspRuntimeLibrary.java:966)
	at org.apache.jasper.runtime.PageContextImpl.include(PageContextImpl.java:581)
	at org.apache.struts.tiles.TilesUtilImpl.doInclude(TilesUtilImpl.java:137)
	at org.apache.struts.tiles.TilesUtil.doInclude(TilesUtil.java:177)
	at org.apache.struts.taglib.tiles.InsertTag.doInclude(InsertTag.java:756)
	at org.apache.struts.taglib.tiles.InsertTag$InsertHandler.doEndTag(InsertTag.java:881)
	at org.apache.struts.taglib.tiles.InsertTag.doEndTag(InsertTag.java:473)
	at org.apache.jsp.common.layout_jsp._jspx_meth_tiles_insert_2(layout_jsp.java:169)
	at org.apache.jsp.common.layout_jsp._jspService(layout_jsp.java:82)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:94)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:802)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:324)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:292)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:236)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:802)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:237)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:157)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:704)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:474)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:409)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at net.sourceforge.myfaces.context.servlet.ServletExternalContextImpl.dispatch(ServletExternalContextImpl.java:404)
	at net.sourceforge.myfaces.application.jsp.JspTilesViewHandlerImpl.renderView(JspTilesViewHandlerImpl.java:178)
	at net.sourceforge.myfaces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:287)
	at javax.faces.webapp.FacesServlet.service(FacesServlet.java:110)
	at net.sourceforge.myfaces.webapp.MyFacesServlet.service(MyFacesServlet.java:67)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:237)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:157)
	at net.sf.acegisecurity.intercept.web.FilterSecurityInterceptor.proceedWithObject(FilterSecurityInterceptor.java:87)
	at net.sf.acegisecurity.intercept.AbstractSecurityInterceptor.interceptor(AbstractSecurityInterceptor.java:368)
	at net.sf.acegisecurity.intercept.web.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:78)
	at net.sf.acegisecurity.intercept.web.SecurityEnforcementFilter.doFilter(SecurityEnforcementFilter.java:165)
	at net.sf.acegisecurity.util.FilterToBeanProxy.doFilter(FilterToBeanProxy.java:105)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:186)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:157)
	at net.sf.acegisecurity.ui.AbstractIntegrationFilter.doFilter(AbstractIntegrationFilter.java:170)
	at net.sf.acegisecurity.util.FilterToBeanProxy.doFilter(FilterToBeanProxy.java:105)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:186)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:157)
	at net.sf.acegisecurity.ui.basicauth.BasicProcessingFilter.doFilter(BasicProcessingFilter.java:199)
	at net.sf.acegisecurity.util.FilterToBeanProxy.doFilter(FilterToBeanProxy.java:105)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:186)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:157)
	at net.sf.acegisecurity.ui.AbstractProcessingFilter.doFilter(AbstractProcessingFilter.java:368)
	at net.sf.acegisecurity.util.FilterToBeanProxy.doFilter(FilterToBeanProxy.java:105)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:186)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:157)
	at de.mindmatters.faces.spring.RequestHandledFilter.doFilter(RequestHandledFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:186)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:157)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:214)
	at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:104)
	at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:520)
	at org.apache.catalina.core.StandardContextValve.invokeInternal(StandardContextValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:152)
	at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:104)
	at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:520)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:137)
	at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:104)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:117)
	at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:102)
	at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:520)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
	at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:104)
	at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:520)
	at org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:929)
	at org.apache.coyote.tomcat5.CoyoteAdapter.service(CoyoteAdapter.java:160)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:799)
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.processConnection(Http11Protocol.java:705)
	at org.apache.tomcat.util.net.TcpWorkerThread.runIt(PoolTcpEndpoint.java:577)
	at org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:683)
	at java.lang.Thread.run(Thread.java:534)

The following is the sample JSP code that causes the exception:
<%@ page contentType=""text/html;charset=UTF-8"" language=""java"" %>
<%@ taglib prefix=""c"" uri=""http://java.sun.com/jstl/core"" %>
<%@ taglib prefix=""f"" uri=""http://java.sun.com/jsf/core"" %>
<%@ taglib prefix=""h"" uri=""http://java.sun.com/jsf/html"" %>

<f:subview id=""body"">
	<f:loadBundle basename=""search"" var=""search"" />

	<h:form accept=""text/html"" acceptCharset=""UTF-8"" enctype=""UTF-8"">
		<!--h:panelGrid columns=""2"" styleClass=""form-background"" headerClass=""form-header"" columnClasses=""form-prompt,form-field""-->
		<h:panelGrid columns=""2"">
			<%-- Grid header element --%>
		
			<f:facet name=""header"">
				<h:panelGroup>
					<h:outputText value=""#{search.header}""/>
				</h:panelGroup>
			</f:facet>
		
			<h:panelGroup>
				<h:outputLabel for=""searchBy"" value=""#{search.searchBy}""/>
				<h:selectOneMenu id=""searchBy"" title=""Criteria Type"" tabindex=""1"" value=""#{searchPage.searchBy}"" >
					<f:selectItem  itemDisabled=""true"" itemValue=""0"" itemLabel=""""/>
					<f:selectItem  itemValue=""A"" itemLabel=""A Name"" />
					<f:selectItem  itemValue=""V"" itemLabel=""B Name"" />
				</h:selectOneMenu>
			</h:panelGroup>
		</h:panelGrid>
	</h:form>

	<div style=""border: 1px dashed #999999"">
		<h:messages showSummary=""true"" showDetail=""false"" layout=""table""/>
	</div>
</f:subview>",MYFACES-21
"I have on my page different JSCookMenus. Problem is, that when I select an MenuItem to execute a MethodBinding, this Methodbinding is executed as often as I have JSCookMenus on my page.

I assume, that in the background only an action is set and not the context of the menu. This would cause for each ""decode"" of the HtmlJSCookMenu an ActionEvent to be queued.",MYFACES-20
"HtmlCheckBoxRenderer doesn't throw exceptions, but it behaves in an inconsistent manner compared to other renderers.

Generally, if a UIInput cannot be validated, it is rendered with the incorrect input as its value so the user can see what they have incorrectly entered.  This is correct behavior.  HtmlCheckboxRenderer does not do this.  If this HtmlSelectManyCheckbox cannot be validated, it renders the current value of the model rather than the previously submitted value.

The problem here comes from RendererUtils.internalSubmittedOrSelectedValuesAsSet(UISelectMany, Object).  Though its name would lead you to believe that it returns either the value or submitted value depending on whether the submitted value is set, this doesn't happen.  It always returns the submitted value.",MYFACES-18
"There are currently validation issues in HtmlCheckBoxRenderer, HtmlMenuRenderer, and HtmlListboxRenderer.

HtmlMenuRenderer and HtmlListboxRenderer have the same problems because they both rely on HtmlRendererUtils, which is really where the problem lies.

In HtmlRendererUtils.internalRenderSelect if the component has a submitted value (which it will if it couldn't be validated), and that component also has a converter, the method will either probably render an incorrect value, or will have a ConverterException thrown from the Converter.

The problem is that UIInputs converter their submitted values during the validate method, but then don't store those committed values back on the submittedValue variable.  This is behavior the HtmlRendererUtils.internalRenderSelect method is expecting.

As a result, the method attempts to convert the already-converted String value that it gets from UIInput's submitted value, which results most likely in a Converter exception.  If the value has no Converter, obviously none of this comes up.",MYFACES-17
"I have the following page:

<%@ page contentType=""text/html;charset=UTF-8"" language=""java"" %>
<%@ taglib uri=""http://java.sun.com/jsf/html""  prefix=""h"" %>
<%@ taglib uri=""http://java.sun.com/jsf/core""  prefix=""f"" %>
<%@ taglib uri=""http://myfaces.sourceforge.net/tld/myfaces_ext_0_9.tld"" prefix=""x""%>

<html>
  <body>
    <f:view>
            <h:panelGroup>
                <x:panelTabbedPane bgcolor=""#FFFFCC"">

                    <x:panelTab id=""tab1"" label=""Tab1"" rendered=""true"">
                        <h:inputText id=""inp1""/><f:verbatim><br></f:verbatim>
                        <h:inputText id=""inp2"" required=""true"" />
                    </x:panelTab>

                    <x:panelTab id=""tab2"" label=""Tab2"" rendered=""true"">
                        <h:inputText id=""inp3""/><f:verbatim><br></f:verbatim>
                        <h:inputText id=""inp4""/><f:verbatim><br></f:verbatim>
                        <h:inputText id=""inp5""/><f:verbatim><br></f:verbatim>
                    </x:panelTab>

                    <f:verbatim><br></f:verbatim>

                    <h:commandButton value=""Common submit button"" />
                </x:panelTabbedPane>
            </h:panelGroup>
    </f:view>
  </body>
</html>

When clicking on ""Tab2"" I get the following exception:

java.lang.NullPointerException
	javax.faces.component.UIComponentBase.processRestoreState(UIComponentBase.java:997)
	javax.faces.component.UIComponentBase.processRestoreState(UIComponentBase.java:1008)
	javax.faces.component.UIComponentBase.processRestoreState(UIComponentBase.java:1008)
	javax.faces.component.UIComponentBase.processRestoreState(UIComponentBase.java:1008)
	javax.faces.component.UIComponentBase.processRestoreState(UIComponentBase.java:1008)
	net.sourceforge.myfaces.application.jsp.JspStateManagerImpl.restoreComponentState(JspStateManagerImpl.java:158)
	net.sourceforge.myfaces.application.jsp.JspStateManagerImpl.restoreView(JspStateManagerImpl.java:214)
	net.sourceforge.myfaces.application.jsp.JspViewHandlerImpl.restoreView(JspViewHandlerImpl.java:262)
	net.sourceforge.myfaces.lifecycle.LifecycleImpl.restoreView(LifecycleImpl.java:114)
	net.sourceforge.myfaces.lifecycle.LifecycleImpl.execute(LifecycleImpl.java:67)
	javax.faces.webapp.FacesServlet.service(FacesServlet.java:197)

The only why I could get it to work was to nest the x:PanelGroup within a x:panelLayout.",MYFACES-16
"Hi and thanks for a wonderful implemt of jsf :) i have an request or an question ?  i want to now if the user clicked on the next or prev links in the inputcalendar. I tried to put an lister on and tried to see if there was some diffrence from a click on the prev next from an click on a date but a couldent find any ? or when the user clicked prev or next the comp could be set to immediete. but not when the user clicked on a date.. well hopfully im just stupid :) and there is a nice way to get this info from the comp.

Regards Rikard 
",MYFACES-14
"I have the following tag in a form:
    <h:selectOneMenu id=""questionnaireType"" onchange=""questionnaireTypeChanged();"" >

This gets rendered incorrectly as:
    <select name=""questionnaireType"" size=""1"" onchange=""questionnaireTypeChanged();"">

Notice that the ""id"" attribute is missing, although the ""name"" attribute has been created with the desired value.  I think that the preferred result would be for both the ""id"" and ""name"" attributes to be created.  That's what happens with this other tag in the same form:
    <h:inputText id=""lastName"" maxlength=""40"" />

This gets rendered correctly as:
    <input id=""lastName"" name=""lastName"" type=""text"" value="""" maxlength=""40""/>

Notice that both the ""id"" and ""name"" attributes get created in this case.",MYFACES-13
Switching to client-side state saving method causes java.io.NotSerializableException to be raised.,MYFACES-12
"* The folder image used in tree is not rendered even
 if provide a attribute iconChild in the tree tag.
 
 found the following in class net.sourceforge.myfaces.custom.tree.HtmlTree
 
 private String iconNoline = ""images/tree/noline.gif"";
 private String iconChild = ""images/tree/noline.gif"";

setting the iconChild attribute has no effect on the tree rendering.",MYFACES-11
"I am trying to queue an event during the 'Process Validation' phase in one of my ValueChangeListeners.
But, to my surprise, I get an java.util.ConcurrentModificationException. When I switched to sun RI implementation, it didnt happen. Also, after reading the spec a bit, as far as I understood, it is legal to queue an event from almost any phase including 'Process Validation' phase.",MYFACES-10
"iconChildMiddle is not stored in component state (see method saveState / restoreState of HtmlTree) and therefore it's value is lost.
",MYFACES-9
"Please find attached an enhancement to the MyFaces tree.  The initial component provided by MyFaces provides a great basic tree functionality but did not provide the option to display table tree.  I extended the HtmlTree component to provide for that support as illustrated in the enclosed PDF.

I enclosed the following items:

1. A quick overview of the enhancements made to the tree component.
2. A patch for the code in question developed against the latest subversion trunk as of 11/16/2004 12:30AM EST.
3. An image that is needed for the footer of the extended component to be added to webapps/examples/web/images, sw_med_rond.gif
4. The provided code implements an example integrated with MyFaces example application.  I integrate the treeTable.jsf page to the example navigation.
",MYFACES-8
"SelectOneRadio is so limited in terms of rendering. I suggest an extension of this component with a columns parameter to render radios in multiple columns. Same for SelectManyCheckbox. The layout parameter only renders one line or one column. It's a very simple feature, but helps a lot.
",MYFACES-7
"During the validate() call on UISelectMany, it only checks for the following cases when determining if the submitted value is empty:

value is null
value is an Object array and length is 0

It does not include the case for:
value is a List and size is 0.

Here is the offending line of code (UISelectMany:244):
boolean empty = convertedValue == null ||
                        (convertedValue instanceof Object[] &&
                         ((Object[])convertedValue).length == 0);

Here is the fix:
boolean empty =
	convertedValue == null
		|| ((convertedValue instanceof Object[]) 
			&& (((Object[]) convertedValue).length == 0))
		|| ((convertedValue instanceof List) 
			&& ((List) convertedValue).isEmpty());",MYFACES-6
"In HtmlDataScroller.java _columnClasses is declared with getter and setter, but it's never used and not declared in HtmlDataScrollerTag.",MYFACES-2
"If you have 8 rows, and if you want to see them by 2, the fast forward (if =10) goes to the 5th page, witch does not exist.

Fix:
In HtmlDataScrollerRenderer.java, method decode(FacesContext context, UIComponent component)
else if (param.equals(FACET_FAST_FORWARD)) {
	int fastStep = scroller.getFastStep();
	if (fastStep <= 0)
		fastStep = 1;
	int next = uiData.getFirst() + uiData.getRows() * fastStep;
	int rowcount = uiData.getRowCount();
	if (next > rowcount)
		next = (rowcount-1) - ((rowcount-1) % uiData.getRows()); // Here is the fix
	uiData.setFirst(next);
} ",MYFACES-1
